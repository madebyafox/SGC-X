[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SGC-X",
    "section": "",
    "text": "Study SGC2 | Description\n\n\n\n\n\n\n\n\n\n \n\n\n\nStudy SGC2 | Hypothesis Testing\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC2 | Introduction\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\nStudy SGC3A | (Lab) Hypothesis Testing\n\n\n\n\n\n\n\n\n\n \n\n\n\nStudy SGC3A | (OSPAN) Hypothesis Testing\n\n\n\n\n\n\n\n\n\n \n\n\n\nStudy SGC3A | (Relication) Hypothesis Testing\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC3A | 2 Response Scoring\n\n\n\n\n\n\n\n\n\n \n\n\n\nStudy SGC3A | 3 Description\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC3A | Introduction\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC4A | 1 Introduction\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC4A | 2 Response Scoring\n\n\n\n\n\n\n\n\n\n \n\n\n\nStudy SGC4A | 3 Description\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC4B | 1 Introduction\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC4B | 2 Response Scoring\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC4C | 1 Introduction\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC4C | 2 Response Scoring\n\n\n\n\n\n\n\n\n\n \n\n\n\nStudy SGC4C | Hypothesis Testing\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC4D | 1 Introduction\n\n\n\n\n\n\n\n\n\n\n\n\n\nStudy SGC4D | 2 Response Scoring\n\n\n\n\n\n\n\n\n\n \n\n\n\nStudy SGC4D | Hypothesis Testing\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "analysis/utils/scoring.html",
    "href": "analysis/utils/scoring.html",
    "title": "Scoring Strategy",
    "section": "",
    "text": "The purpose of this notebook is to describe the strategy for assigning a score ( a measure of accuracy) to response data for the SGC studies. This is required because the question type on the graph comprehension task used a ‘Multiple Response’ (MR) question design. Here, we evaluate different approaches to scoring multiple response questions, and transform raw item responses (e.g. boxes ABC are checked) to a measure of response accuracy. (Warning: this notebook takes several minutes to execute.)"
  },
  {
    "objectID": "analysis/utils/scoring.html#multiple-response-scoring",
    "href": "analysis/utils/scoring.html#multiple-response-scoring",
    "title": "Scoring Strategy",
    "section": "MULTIPLE RESPONSE SCORING",
    "text": "MULTIPLE RESPONSE SCORING\nThe graph comprehension task of the SGC studies presents readers with a graph, a question, and a series of checkboxes. Participants are instructed to use the graph to answer the question, and respond by selecting all the checkboxes that apply, where each checkbox corresponds to a datapoint in the graph.\n\n\n\nFigure 1. Sample Graph Comprehension (Question # 6)\n\n\nIn the psychology and education literatures on Tests & Measures, the format of this type of question is referred to as Multiple Response (MR), (also: Multiple Choice Multiple Answer (MCMA) and Multiple Answer Multiple Choice (MAMC)). It has a number of properties that make it different from traditional Single Answer Multiple Choice (SAMC) questions, where the respondent marks a single response from a number of options. In particular, there are a number of very different ways that MAMC questions can be scored.\nIn tranditional SAMC format questions, one point is given for selecting the option designated as correct, and zero points given for marking any of the alternative (i.e. distractor) options. Individual response options on MAMC questions, however might be partially correct (\\(i\\)), while responses on other answer options within the same item might be incorrect (\\(n – i\\)). In MR, it is not obvious how to allocate points when the respondent marks a true-correct option (i.e. options that should be selected, denoted \\(p\\)), as well as one or more false-correct options (i.e. options that should not be selected, denoted \\(q\\)). Should partial credit be awarded? If so, are options that respondents false-selected and false-unselected items equally penalized?\nSchmidt et al. (2021) performed a systematic literature review of publications proposing MAMC (or equivalent) scoring schemes, ultimately synthesizing over 80 sources into 27 distinct scoring approaches. Upon reviewing the benefits of trade-offs of each approach, for this study we choose utilize two of the schemes: dichotomous scoring ( Schmidt et al. (2021) scheme #1), and partial scoring \\([-1/q,0, +1/p]\\) ( Schmidt et al. (2021) scheme #26), as well as a scaled discriminant score that leverages partial scoring to discriminate between strategy-specific patterns of response.\n\nResponse Encoding\nFirst, we note that the question type evaluated by Schmidt et al. (2021) is referred to as Multiple True-False (MTF), a variant of MAMC where respondents are presented with a question (stem) and series of response options with True/False (e.g. radio buttons) for each. Depending on the implementation of the underlying instrument, it may or may not be possible for respondents to not respond to a particular option (i.e. leave the item ‘blank’). Although MTF questions have a different underlying implementation (and potentially different psychometric properties) they are identical in their mathematical properties; that is, responses to a MAMC question of ‘select all that apply’ can be coded as a series of T/F responses to each response option\n\n\n\nFigure 3.1: Figure 2. SAMC (vs) MAMC (vs) MTF\n\n\nIn this example (Figure 3.1), we see an example of a question with four response options (\\(n=4\\)) in each question type. In the SAMC approach (at left), there are four possible responses, given explicitly by the response options (respondent can select only one) \\((\\text{number of possible responses} = n)\\). With only four possible responses, we cannot entirely discriminate between all combinations of the underlying response variants we might be interested in, and must always choose an ‘ideal subset’ of possible distractors to present as response options. In the MAMC (middle) and MTF (at right), the same number of response options (\\(n=4\\)) yield a much greater number \\((\\text{number of possible responses} = 2^{n})\\). We can also see the equivalence between a MAMC and MTF format questions with the same response options. Options the respondent selects in MAMC are can be coded as T, and options they leave unselected can be coded as F. Thus, for response options (ABCD), a response of [AB] can also be encoded as [TTFF].\n\n\nScoring Schemes\nIn the sections that follow, we use the terminology:\nProperties of the Stimulus-Question\n\\[\\begin{align}\nn &= \\text{number of response options} \\\\  \n  &= p + q \\\\\n  p &= \\text{number of true-select options (i.e. should be selected)} \\\\\n  q &= \\text{number of true-unselect options (i.e. should not be selected)}\n\\end{align}\\]\nProperties of the Subject’s Response\n\\[\\begin{align}\ni &= \\text{number of options in correct state}, (0 ≤ i ≤ n) \\\\\nf &= \\text{resulting score}\n\\end{align}\\]\n\nDichotomous Scoring\nDichotomous Scoring is the strictest scoring scheme, where a response only receives points if it is exactly correct, meaning the respondent includes only correct-select options, and does select any additional (i.e. incorrect-select) options that should not be selected. This is also known as all or nothing scoring, and importantly, it ignores any partial knowledge that a participant may be expressing through their choice of options. They may select some but not all of the correct-select options, and one or more but not all of the correct-unselect items, but receive the same score as a respondent selects none of the correct-select options, or all of the correct-unselect options. In this sense, dichotomous scoring tells us only about perfect knowledge, and ignores any indication of partial knowledge the respondent may be indicating through their selection of response options.\nIn Dichotomous Scoring\n\nscore for the question is either 0 or 1\nfull credit is only given if all responses are correct; otherwise no credit\ndoes not account for partial knowledge. - with increasing number of response options, scoring becomes stricter as each statement must be marked correctly.\n\nThe algorithm for dichotomous scoring is given by:\n\\[\\begin{gather*}\nf =\n\\begin{cases}\n  1, \\text{if } i = n \\\\    \n  0, \\text{otherwise}    \n\\end{cases}\n\\end{gather*}\\] 0 i n\n\n\nCODE\nf_dichom <- function(i, n) {\n \n  # print(paste(\"i is :\",i,\" n is:\",n)) \n  \n  #if (n == 0 ) return error \n  ifelse( (n == 0), print(\"ERROR n can't be 0\"), \"\")\n  \n  #if (i > n ) return error \n  ifelse( (i > n), print(\"i n can't > n\"), \"\")\n  \n  #if (i==n) return 1, else 0\n  return (ifelse( (i==n), 1 , 0))\n \n}\n\n\n\n\nPartial Scoring [-1/n, +1/n]\nPartial Scoring refers to a class or scoring schemes that award the respondent partial credit depending on pattern of options they select. Schmidt et al. (2021) identify twenty-six different partial credit scoring schemes in the literature, varying in the range of possible scores, and the relative weighting of incorrectly selected (vs) incorrectly unselected options.\nA particularly elegant approach to partial scoring is referred to as the \\([-1/n, +1/n]\\) approach ( Schmidt et al. (2021) #17). This approach is appealing in the context of SGC3A, because it: (1) takes into account all information provided by the respondent: the pattern of what the select, and choose not to select.\nIn Partial Scoring \\([-1/n, +1/n]\\):\n\nScores range from [-1, +1]\nOne point is awarded if all options are correct\nOne point point is subtracted if all options are incorrect.\nIntermediate results are credited as fractions accordingly (\\(+1/n\\) for each correct, \\(-1/n\\) for each incorrect)\nThis results in at chance performance (i.e. half of the given options marked correctly), being awarded 0 points are awarded\n\nThis scoring is more consistent with the motivating theory that Triangular Graph readers start out with an incorrect (i.e. orthogonal, cartesian) interpretation of the coordinate system, and transition to a correct (i.e. triangular) interpretation. But the first step in making this transition is realizing the cartesian interpretation is incorrect, which may yield blank responses where the respondent is essentially saying, ‘there is no correct answer to this question’.\nSchmidt et al. (2021) describe the Partial \\({[-1/n, +1/n]}\\) scoring scheme as the only scoring method (of the 27 described) where respondents’ scoring results can be interpreted as a percentage of their true knowledge. One important drawback of this method is that a respondent may receive credit (a great deal of credit, depending on the number of answer options n) even if she did not select any options. In the case (such as ours) where there are many more response options \\(n\\) than there are options meant to be selected \\(p\\), this partial scoring algorithm poses a challenge because the respondent can achieve an almost completely perfect score by selecting a small number of options that should not be selected.\nThe algorithm for partial scoring\\([-1/n, +1/n]\\) is given by:\n\\[\\begin{align}\nf &= (1/n * i) - (1/n * (n-i)) \\\\\n&= (2i - n)/{n}\n\\end{align}\\]\n\n\nCODE\nf_partialN <- function(i, n) {\n\n# print(paste(\"i is :\",i,\" n is:\",n))\n\n#if(n==0) return error\nifelse((n==0),print(\"ERROR: n should not be 0\"),\"\")\n\n#if(i >n ) return error\nifelse((i > n),print(\"ERROR: i CANNOT BE GREATER THAN n\"),\"\")\n\nreturn ((2*i - n) / n) \n}\n\n\n\n\nPartial Scoring [-1/q, +1/p]\nOne drawback of the Partial Scoring \\([-1/n, +1/n]\\) approach is that treats the choice to select, and choice to not select options as equally indicative of the respondent’s understanding. That is to say, incorrectly selecting one particular option is no more or less informative than incorrectly not-selecting a different item. This represents an important difference between MAMC (i.e. “select all correct options”) vs MTF (i.e. “Mark each option as true or false”) questions.\nIn our study, the selection of any particular option (remember options represent data points on the stimulus graph) is indicative of a particular interpretation of the stimulus. Incorrectly selecting an option indicates an interpretation of the graph with respect to that particular option. Alternatively, failing to select a correct option might mean the individual has a different interpretation, or that they failed to find all the data points consistent with the interpretation.\nFor this reason, we consider another alternative Partial Scoring scheme that takes into consideration only the selected statements, without penalizing statements incorrectly not selected. (See Schmidt et al. (2021) method #26; also referred to as the Morgan-Method) This partial scoring scheme takes into consideration that the most effort-free (or ‘default’) response for any given item is the null, or blank response. Blank responses indicate no understanding, perhaps confusion, or refusal to answer. These lack of responses are awarded zero credit. Whereas taking the action to select an incorrect option is effortful, and is indicative of incorrect understanding.\nPartial Scoring \\([-1/q, +1/p]\\):\n\nawards +1/p for each correctly selected option (\\(p_s\\)), and subtracts \\(1/(n-p) = 1/q\\) for each incorrectly selected option (\\(q_s\\))\nonly considers selected options; does not penalize nor reward unselected options\n\nProperties of Item\n\\[\\begin{align}\np &= \\text{number of true-select options (i.e. should be selected)} \\\\\nq &= \\text{number of true-unselect options (i.e. should not be selected)} \\\\\nn &= \\text{number of options} \\: ( n = p + q)\n\\end{align}\\]\nProperties of Response\n\\[\\begin{align}\np_s &= \\text{number of true-select options selected (i.e. number of correctly checked options)}\\\\\nq_s &= \\text{number of true-unselect options selected (i.e. number of incorrectly checked options }\n\\end{align}\\]\nThe algorithm for partial scoring \\([-1/q, +1/p]\\) is given by:\n\\[\\begin{align}\nf &= (p_s / p) - ({q_s}/{q}) \\\\\n\\end{align}\\]\n\n\nCODE\nf_partialP <- function(t,p,f,q) {\n\n  #t = number of correct-selected options\n  #p = number of true options\n  #f = number of incorrect-selected options\n  #q = number of false options\n  #n = number of options + p + q\n  \n  ifelse( (p == 0), return(NA), \"\") #handle empty response set gracefully by returning nothing rather than 0\n  ifelse( (p != 0), return( (t / p) - (f/q)), \"\")\n}\n\n\n\n\n\nComparison of Schemes\nWhich scoring scheme is most appropriate for the goals of the graph comprehension task?\nConsider the following example:\nFor a question with \\(n = 5\\) response options (data points A, B, C, D and E) with a correct response of A, the schemes under consideration yield the following scores:\n\n\nCODE\ntitle <- \"Comparison of Scoring Schemes for n = 5 options [ A,B,C,D,E ]\"\n\ncorrect <- c( \"A____\",  \n              \"A____\",      \n              \"A____\",        \n              \"A____\",        \n              \"A____\",      \n              \"A____\",      \n              \"A____\",      \n              \"A____\",      \n              \"A____\" ) \n\nresponse <- c(\"A____\",  \n              \"AB___\",      \n              \"A___E\",      \n              \"AB__E\",        \n              \"____E\",\n              \"___DE\",\n              \"_BCDE\",      \n              \"ABCDE\",      \n              \"_____\" )\n\ni <- c(        5,       \n               4,              \n               4,              \n               3,               \n               \n               3,\n               2,\n               0,\n               1,\n               4)\n\nabs <- c(f_dichom(5,5), \n         f_dichom(4,5), \n         f_dichom(4,5), \n         f_dichom(3,5), \n         \n         f_dichom(3,5), \n         f_dichom(2,5),\n         f_dichom(0,5),\n         f_dichom(1,5),\n         f_dichom(4,5))\n\npartial1 <- c(f_partialN(5,5), \n              f_partialN(4,5), \n              f_partialN(4,5), \n              f_partialN(3,5), \n              \n              f_partialN(3,5), \n              f_partialN(2,5),\n              f_partialN(0,5),\n              f_partialN(1,5),\n              f_partialN(4,5))\n\npartial2 <- c(f_partialP(1,1,0,4), \n              f_partialP(1,1,1,4), \n              f_partialP(1,1,1,4), \n              f_partialP(1,1,2,4), \n              \n              f_partialP(0,1,1,4),\n              f_partialP(0,1,2,4),\n              f_partialP(0,1,4,4),\n              f_partialP(1,1,4,4), \n              f_partialP(0,1,0,4))\n\nnames = c(    \"Correct Answer\",\n              \"Response\",\n              \"i \",\n              \"Dichotomous\",\n              \"Partial [-1/n, +1/n]\",\n              \"Partial[-1/q, +1/p]\")\n\ndt <- data.frame(correct, response, i, abs, partial1 , partial2)\n\nkbl(dt, col.names = names, caption = title, digits=3) %>%\n  kable_classic() %>%\n    add_header_above(c(\"Response Scenario \" = 3, \"Scores\" = 3)) %>% \n    pack_rows(\"Perfect Response\", 1, 1) %>%\n    pack_rows(\"Correct + Extra Incorrect Selections\", 2, 4) %>%\n    pack_rows(\"Only Incorrect Selections\", 5, 6) %>%\n    pack_rows(\"Completely Inverse Response \", 7, 7) %>%\n    pack_rows(\"Selected ALL or NONE\", 8, 9) %>%\n    footnote(general = paste(\"i = number of options in correct state; _ indicates option not selected\"),\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nComparison of Scoring Schemes for n = 5 options [ A,B,C,D,E ]\n \n\nResponse Scenario \nScores\n\n  \n    Correct Answer \n    Response \n    i  \n    Dichotomous \n    Partial [-1/n, +1/n] \n    Partial[-1/q, +1/p] \n  \n \n\n  Perfect Response\n\n    A____ \n    A____ \n    5 \n    1 \n    1.0 \n    1.00 \n  \n  Correct + Extra Incorrect Selections\n\n    A____ \n    AB___ \n    4 \n    0 \n    0.6 \n    0.75 \n  \n  \n    A____ \n    A___E \n    4 \n    0 \n    0.6 \n    0.75 \n  \n  \n    A____ \n    AB__E \n    3 \n    0 \n    0.2 \n    0.50 \n  \n  Only Incorrect Selections\n\n    A____ \n    ____E \n    3 \n    0 \n    0.2 \n    -0.25 \n  \n  \n    A____ \n    ___DE \n    2 \n    0 \n    -0.2 \n    -0.50 \n  \n  Completely Inverse Response \n\n    A____ \n    _BCDE \n    0 \n    0 \n    -1.0 \n    -1.00 \n  \n  Selected ALL or NONE\n\n    A____ \n    ABCDE \n    1 \n    0 \n    -0.6 \n    0.00 \n  \n  \n    A____ \n    _____ \n    4 \n    0 \n    0.6 \n    0.00 \n  \n\n\nNote:   i = number of options in correct state; _ indicates option not selected\n\n\n\n\nCODE\n#cleanup\nrm(dt, abs, correct,i,names,partial1,partial2,response,title)\n\n\n\nWe see that in the Dichotomous scheme, only the precisely correct response (row 1) yields a score other than zero. This scheme does now allow us to differentiate between different response patters.\nThe Partial \\([-1/n, +1/n]\\) scheme yields a range from \\([-1,1]\\), differentiating between responses. However, a blank response (bottom row) receives the same score (0.6) as the selection of the correct option + 1 incorrect option (row 2), which is problematic with for the goals of this study, where we need to differentiate between states of confusion or uncertainty yielding blank responses and the intentional selection of incorrect items.\nThe Partial \\([-1/q, +1/p]\\) scheme also yields a range of scores from \\([-1,1]\\). A blank response (bottom row) yields the same score (\\(0\\)) as the selection of all answer options (row 7); both are patterns of behavior we would expect to see if a respondent is confused or uncertain that there is a correct answer to the question.\n\nNext we consider an example from our study, with \\(n = 15\\) options and \\(p = 1\\) correct option to be selected.\n\n\nCODE\ntitle <- \"Comparison of Scoring Schemes for SGC3 with n=15 and p=1 options [A,B...N,O]  \"\n\ncorrect <- c( \"A____\",  \n              \"A____\",      \n              \"A____\",      \n              \"A____\",        \n              \"A____\",      \n              \"A____\",      \n              \"A____\",      \n              \"A____\",      \n              \"A____\" ) \n\nresponse <- c(\"A__...__\",  \n              \"AB_...__\",      \n              \"A__..._O\",      \n              \"AB_..._O\",        \n              \"___..._O\",      \n              \"___...NO\",      \n              \"_BC...NO\",\n              \"ABC...NO\",      \n              \"___...__\" )\n\ni <- c(        15,       \n               14,              \n               14,              \n               13,\n               13,               \n               12,          \n               0,\n               1,\n               14)\n\nabs <- c(f_dichom(15,15), \n         f_dichom(14,15), \n         f_dichom(14,15), \n         f_dichom(13,15), \n         f_dichom(13,15),\n         f_dichom(12,15),\n         f_dichom(0,15),\n         f_dichom(1,15),\n         f_dichom(14,15))\n\npartial1 <- c(f_partialN(15,15), \n              f_partialN(14,15), \n              f_partialN(14,15), \n              f_partialN(13,15), \n              f_partialN(13,15),\n              f_partialN(12,15),\n              f_partialN(0,15),\n              f_partialN(1,15),\n              f_partialN(14,15))\n\npartial2 <- c(f_partialP(1,1,0,14), \n              f_partialP(1,1,1,14), \n              f_partialP(1,1,1,14), \n              f_partialP(1,1,2,14), \n              f_partialP(0,1,1,14),\n              f_partialP(0,1,2,14),\n              f_partialP(0,1,14,14),\n              f_partialP(1,1,14,14), \n              f_partialP(0,1,0,14))\n\nnames = c(    \"Correct Answer\",\n              \"Response\",\n              \"$i$ \",\n              \"Dichotomous\",\n              \"Partial [-1/n, +1/n]\",\n              \"Partial [-1/q, +1/p]\")\n\ndt <- data.frame(correct, response, i, abs, partial1 , partial2)\n\nkbl(dt, col.names = names, caption = title, digits=3) %>%\n  kable_classic() %>%\n    add_header_above(c(\"Response Scenario \" = 3, \"Scores\" = 3)) %>% \n    pack_rows(\"Perfect Response\", 1, 1) %>%\n    pack_rows(\"Correct + Extra Incorrect Selections\", 2, 4) %>%\n    pack_rows(\"Only Incorrect Selections\", 5, 6) %>%\n    pack_rows(\"Completely Inverse Response \", 7, 7) %>%\n    pack_rows(\"Selected ALL or NONE\", 8, 9) %>%\n    footnote(general = paste(\"i = number of options in correct state; _ indicates option not selected\"),\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nComparison of Scoring Schemes for SGC3 with n=15 and p=1 options [A,B...N,O]  \n \n\nResponse Scenario \nScores\n\n  \n    Correct Answer \n    Response \n    $i$  \n    Dichotomous \n    Partial [-1/n, +1/n] \n    Partial [-1/q, +1/p] \n  \n \n\n  Perfect Response\n\n    A____ \n    A__...__ \n    15 \n    1 \n    1.000 \n    1.000 \n  \n  Correct + Extra Incorrect Selections\n\n    A____ \n    AB_...__ \n    14 \n    0 \n    0.867 \n    0.929 \n  \n  \n    A____ \n    A__..._O \n    14 \n    0 \n    0.867 \n    0.929 \n  \n  \n    A____ \n    AB_..._O \n    13 \n    0 \n    0.733 \n    0.857 \n  \n  Only Incorrect Selections\n\n    A____ \n    ___..._O \n    13 \n    0 \n    0.733 \n    -0.071 \n  \n  \n    A____ \n    ___...NO \n    12 \n    0 \n    0.600 \n    -0.143 \n  \n  Completely Inverse Response \n\n    A____ \n    _BC...NO \n    0 \n    0 \n    -1.000 \n    -1.000 \n  \n  Selected ALL or NONE\n\n    A____ \n    ABC...NO \n    1 \n    0 \n    -0.867 \n    0.000 \n  \n  \n    A____ \n    ___...__ \n    14 \n    0 \n    0.867 \n    0.000 \n  \n\n\nNote:   i = number of options in correct state; _ indicates option not selected\n\n\n\n\nCODE\n#cleanup\nrm(dt, abs, correct,i,names,partial1,partial2,response,title)\n\n\nHere again we see that the Partial \\([-1/q, +1/p]\\) scheme allows us differentiate between patterns of responses, in a way that is more sensible for the goals of the SGC3 graph comprehension task.\n\n\n\n\n\n\nDecision\n\n\n\nThe Partial \\([-1/q, +1/p]\\) scheme is more appropriate for scoring the graph comprehension task than the Partial \\([-1/n, +1/n]\\) scheme because it allows us to differentially penalize incorrectly selected and incorrectly not selected answer options."
  },
  {
    "objectID": "analysis/utils/scoring.html#sec-scoringOverview",
    "href": "analysis/utils/scoring.html#sec-scoringOverview",
    "title": "Scoring Strategy",
    "section": "SCORING SGC DATA",
    "text": "SCORING SGC DATA\nIn SGC_3A we are fundamentally interested in understanding how a participant interprets the presented graph (stimulus). The graph comprehension task asks them to select the data points in the graph that meet the criteria posed in the question. To assess a participant’s performance, for each question (q=15) we will calculate the following scores:\nAn overall, strict score:\n1. Absolute Score : using dichotomous scoring referencing true (Triangular) answer. (see 1.2)\nSub-scores, for each alternative graph interpretation\n2. Triangular Score : using partial scoring [-1/q, +1/p] referencing true (Triangular) answer key.\n3. Orthogonal Score : using partial scoring [-1/q, +1/p] referencing (incorrect Orthogonal) answer key.\nBased on prior observational studies where we observed emergence of other alternative interpretations (i.e. transitional interpretations) we also calculate subscores for these alternatives.\n4. Tversky Score : using partial scoring [-1/q, +1/p] referencing (incorrect connecting-lines strategy) answer key.\n5. Satisficing Score : using partial scoring [-1/q, +1/p] referencing (incorrect satisficing strategy) answer key.\nFor each study in the SGC project, MR data will be scored by following these steps:\n(1) Preparing answer keys: For each dataset+question set combination, an answer key is that defines the ‘correct’ answer set under each interpretation of the graph (i.e. a triangular answer, an orthogonal answer, etc).\n(2) Calculate strategy scores: Using the strategy specific answer keys, an interpretation subscore is calculated for each response for each interpretation.\n(3) Interpretation classification: The interpretation subscores are compared in order to classify each response as a particular interpretation. If no classification can be made, the response is classified as ‘?’.\n(4) Calculate Absolute and Scaled Scores: Two final scores are calculated for each response; an Absolute score that indicates if the response was precisely correct according to the triangular interpretation, and a Scaled score that assigns a numeric value to the interpretation given by the response (ranging from -1 to +1)\n\n1. Prepare Answer Keys\nWe start by importing three answer keys: (1) Q1 - Q5 [control condition], (2) Q1-Q5 [impasse condition], (3) Q6-15. Separate answer keys by condition are required for Q1-Q5 because the stimuli for each condition visualize a different underlying dataset (i.e. the graphs show datapoints in different positions). Q6-Q15 are identical across conditions. Each answer key includes a row for each question, and a column defining the subset of response options that correspond to different graph interpretations.\n\n\nCODE\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#LOAD INDIVIDUAL KEY FILES \nkey_control_raw <- read_csv('analysis/utils/keys/SGCX_scaffold_control_key.csv') %>% mutate(condition = \"DEFAULT\", phase = \"scaffold\")\nkey_impasse_raw <- read_csv('analysis/utils/keys/SGCX_scaffold_impasse_key.csv')%>% mutate(condition = \"impasse\", phase = \"scaffold\")\ncs = rep('c', 23) %>% str_c(collapse=\"\") #create column spec \nkey_test_raw <- read_csv('analysis/utils/keys/SGCX_test_key.csv', col_types = cs)%>% mutate(condition = \"DEFAULT\", phase = \"test\") \n\n#JOIN THEM\nkeys_raw <- rbind(key_control_raw, key_impasse_raw, key_test_raw )\n\n#CLEANUP\nrm(key_control_raw, key_impasse_raw, key_test_raw)\n\n\nIn order to calculate scores using the \\([-1/q, +1/p]\\) algorithm, we need to define the subset of all response options (set N) that should be selected (set P) and should not be selected (set Q). In order to calculate subscores for each graph interpretation (i.e. triangular, orthogonal, tversky) we must define these sets independently for each interpretation. For each question, the keys_raw dataframe gives us set N (all response options), and a set P (options that should be selected) for each interpretation. From these we must derive set Q for each interpretation.\n\nSET \\(N\\), all response options (superset) . This set is the same across all interpretations (a property of the question) and is given in the answer key.\nSET \\(P\\), \\(P \\subset N\\) , the subset of options that should be selected (rewarded as +1/p) . This set differs by interpretation, and is given in the answer key.\nSET \\(A, A \\subset N, A \\sqcup P\\) , the subset of options that should not be selected, but if they are, aren’t penalized (i.e. these options are ignored. Not rewarded, nor penalized). These include any options referenced in the question (i.e. select shifts that start at the same time as X; don’t penalize if they also select ‘X’), as well as options within 0.5hr offset from the data point to accommodate reasonable visual errors. This set differs by interpretation, and is given in the answer key (columns REF_POINT and _also).\nSET \\(Q\\), the subset of options that should not be selected and are penalized (as -1/q). This set differs by interpretation and is not given in the answer key. We can derive set Q for each interpretation by \\(Q = N - (P \\cup A)\\)\n\nThe next step in scoring is preparing interpretation-specific answer keys that specify sets N, P, A and Q for each question.\n\nTriangular Key\nFirst we construct a key set based on the ‘Triangular’ interpretation (i.e. the actually correct answers).\n\n\nCODE\nverify_tri = c() #sanity check\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT TRIANGULAR KEY SET\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_tri <- keys_raw %>% \n  select(Q, condition, OPTIONS, TRIANGULAR, TRI_allow, REF_POINT) %>% \n  mutate(\n    \n    #replace NAs \n    TRI_allow = str_replace_na(TRI_allow,\"\"),\n    REF_POINT = str_replace_na(REF_POINT,\"\"),\n    \n    #P options that SHOULD be selected (rewarded)\n    set_p = TRIANGULAR,\n    set_p = str_replace_na(set_p,\"\"),#replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n    \n    #A options that are ignored if selected \n    set_a = str_c(TRI_allow,REF_POINT, sep=\"\"),\n    set_a = str_replace_na(set_a,\"\"),#replace na if empty\n    n_a = nchar(set_a),\n    \n    #N store all answr options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n)\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DEFINE SETS N, P, A\nfor (x in 1:nrow(keys_tri)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_tri[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_tri[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_tri[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist()\n  \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  \n  #save set to dataframe\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_tri[x,'set_q'] = Q\n  keys_tri[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  verify_tri[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_tri <- keys_tri %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q) %>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_tri <- keys_tri %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\n#cleanup \nrm(N,A,P,Q,n_q,s,x,tempunion)\n\n\nThis leaves us a dataframe keys_tri that define the sets of response options consistent with the triangular graph interpretation.\nTo verify we have generated the correct sets, we verify that for each question, each option in N is included in either set P, A or Q (once and only once).\nTRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE\n\n\nOrthogonal Key\nNext we construct a key set based on the ‘Orthogonal’ interpretation.\n\n\nCODE\nverify_orth = c() #sanity check\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT ORTHOGONAL KEY SET\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_orth <- keys_raw %>% \n  select(Q, condition, OPTIONS, ORTHOGONAL, ORTH_allow, REF_POINT) %>% \n  mutate(\n    \n    #replace NAs \n    ORTH_allow = str_replace_na(ORTH_allow,\"\"),\n    REF_POINT = str_replace_na(REF_POINT,\"\"),\n    \n    #P options that SHOULD be selected (rewarded)\n    set_p = ORTHOGONAL,\n    set_p = str_replace_na(set_p,\"\"),#replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n    \n    #A options that are ignored if selected \n    set_a = str_c(ORTH_allow,REF_POINT, sep=\"\"),\n    set_a = str_replace_na(set_a,\"\"), #replace na if empty\n    n_a = nchar(set_a),\n    \n    #N store all answer options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n)\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DO THE STUFF THAT'S EASIER IN A LOOP\nfor (x in 1:nrow(keys_orth)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_orth[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_orth[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_orth[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist() \n \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # print(s)\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  #save set to dataframe\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_orth[x,'set_q'] = Q\n  keys_orth[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  # print(tempunion)\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n\n  verify_orth[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_orth <- keys_orth %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q) %>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_orth <- keys_orth %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\n#cleanup\nrm(A, N, n_q, P, Q, s, tempunion, x, cs)\n\n\nThis leaves us a dataframe keys_orth that define the sets of response options consistent with the orthogonal graph interpretation.\nTo verify we have generated the correct sets, we verify that for each question, each response in N is included in either set P, A or Q (once and only once).\nTRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE\n\n\nTversky Keys\nNext we construct the key set based on a partial-understanding strategy we refer to as ‘Tversky’. We use the label Tversky as shorthand for a partial interpretation of the coordinate system where subjects select a set of responses that lay along a connecting line from the referenced data point or referenced time for that item. The term is named for Barbara Tversky based on her work on graphical primitives (e.g. “lines connect, arrows direct, boxes contain”).\n\n\nCODE\nverify_max = c() #sanity check\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT TVERSKY KEY SET for TVERSKY-MAX\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_tversky_max <- keys_raw %>% \n  select(Q, condition, OPTIONS, REF_POINT, TV_max, TV_max_allow) %>% \n  mutate(\n  \n    #replace NAs \n    REF_POINT = str_replace_na(REF_POINT,\"\"),\n    TV_max = str_replace_na(TV_max,\"\"),\n    TV_max_allow = str_replace_na(TV_max_allow,\"\"),\n    \n    #P options that SHOULD be selected (rewarded)\n    set_p = TV_max,\n    set_p = str_replace_na(set_p,\"\"), #replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n    \n    #A options that are ignored if selected \n    set_a = str_c(TV_max_allow,REF_POINT, sep=\"\"),\n    set_a = str_replace_na(set_a,\"\"), #replace na if empty\n    n_a = nchar(set_a),\n    \n    #N store all answr options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n)\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DO THE STUFF THAT'S EASIER IN A LOOP\nfor (x in 1:nrow(keys_tversky_max)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_tversky_max[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_tversky_max[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_tversky_max[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist()\n  \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  \n  #save set to dataframe\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_tversky_max[x,'set_q'] = Q\n  keys_tversky_max[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  verify_max[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_tversky_max <- keys_tversky_max %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q) %>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_tversky_max <- keys_tversky_max %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\nverify_tversky_start = c() #sanity check\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT TVERSKY KEY SET for TVERSKY-START\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_tversky_start <- keys_raw %>% \n  select(Q, condition, OPTIONS, REF_POINT, TV_start, TV_start_allow) %>% \n  mutate(\n  \n    #replace NAs \n    REF_POINT = str_replace_na(REF_POINT,\"\"),\n    TV_start = str_replace_na(TV_start,\"\"),\n    TV_start_allow = str_replace_na(TV_start_allow,\"\"),\n    \n    #P options that SHOULD be selected (rewarded)\n    set_p = TV_start,\n    set_p = str_replace_na(set_p,\"\"), #replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n    \n    #A options that are ignored if selected \n    set_a = str_c(TV_start_allow,REF_POINT, sep=\"\"),\n    set_a = str_replace_na(set_a,\"\"), #replace na if empty\n    n_a = nchar(set_a),\n    \n    #N store all answr options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n)\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DO THE STUFF THAT'S EASIER IN A LOOP\nfor (x in 1:nrow(keys_tversky_start)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_tversky_start[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_tversky_start[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_tversky_start[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist()\n  \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  \n  #save set to dataframe\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_tversky_start[x,'set_q'] = Q\n  keys_tversky_start[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  verify_tversky_start[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_tversky_start <- keys_tversky_start %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q) %>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_tversky_start <- keys_tversky_start %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\nverify_tversky_end = c() #sanity check\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT TVERSKY KEY SET for TVERSKY-END\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_tversky_end <- keys_raw %>% \n  select(Q, condition, OPTIONS, REF_POINT, TV_end, TV_end_allow) %>% \n  mutate(\n  \n    #replace NAs \n    REF_POINT = str_replace_na(REF_POINT,\"\"),\n    TV_end = str_replace_na(TV_end,\"\"),\n    TV_end_allow = str_replace_na(TV_end_allow,\"\"),\n    \n    #P options that SHOULD be selected (rewarded)\n    set_p = TV_end,\n    set_p = str_replace_na(set_p,\"\"), #replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n    \n    #A options that are ignored if selected \n    set_a = str_c(TV_end_allow,REF_POINT, sep=\"\"),\n    set_a = str_replace_na(set_a,\"\"), #replace na if empty\n    n_a = nchar(set_a),\n    \n    #N store all answr options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n)\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DO THE STUFF THAT'S EASIER IN A LOOP\nfor (x in 1:nrow(keys_tversky_end)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_tversky_end[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_tversky_end[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_tversky_end[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist()\n  \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  \n  #save set to dataframe\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_tversky_end[x,'set_q'] = Q\n  keys_tversky_end[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  verify_tversky_end[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_tversky_end <- keys_tversky_end %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q) %>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_tversky_end <- keys_tversky_end %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\nverify_tversky_duration = c()\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT TVERSKY KEY SET for TVERSKY-DURATION\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_tversky_duration <- keys_raw %>% \n  select(Q, condition, OPTIONS, REF_POINT, TV_dur, TV_dur_allow) %>% \n  mutate(\n  \n    #replace NAs \n    REF_POINT = str_replace_na(REF_POINT,\"\"),\n    TV_dur = str_replace_na(TV_dur,\"\"),\n    TV_dur_allow = str_replace_na(TV_dur_allow,\"\"),\n    \n    #P options that SHOULD be selected (rewarded)\n    set_p = TV_dur,\n    set_p = str_replace_na(set_p,\"\"), #replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n    \n    #A options that are ignored if selected \n    set_a = str_c(TV_dur_allow,REF_POINT, sep=\"\"),\n    set_a = str_replace_na(set_a,\"\"), #replace na if empty\n    n_a = nchar(set_a),\n    \n    #N store all answr options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n)\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DO THE STUFF THAT'S EASIER IN A LOOP\nfor (x in 1:nrow(keys_tversky_duration)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_tversky_duration[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_tversky_duration[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_tversky_duration[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist()\n  \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  \n  #save set to dataframe\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_tversky_duration[x,'set_q'] = Q\n  keys_tversky_duration[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  verify_tversky_duration[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_tversky_duration <- keys_tversky_duration %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q) %>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_tversky_duration <- keys_tversky_duration %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\n#cleanup\nrm(A, N, n_q, P, Q, s, tempunion, x)\n\n\nThis leaves us four dataframes, each corresponding to a different variant of a ‘lines connecting to reference point’ strategy.\n- keys_tversky_max : the superset of lines connecting options - keys_tversky_start : lines connecting to the rightward diagonal (start time) of the reference point - keys_tversky_end: lines connecting to the leftward diagonal (end time) of the reference point - keys_tversky_duration: lines connecting to the horizontal y-intercept (duration) of the reference point\nTo verify we have generated the correct sets, we verify that for each question, each response in N is included in either set P, A or Q (once and only once).\nTRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE\nTRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE\nTRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE\nTRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE\n\n\nBOTH Key\nNext we construct a key set based on the intersection of the ‘TRIANGULAR’ and ‘ORTHOGONAL’ interpretation\n\n\nCODE\nverify_both = c() #sanity check\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT BOTH KEY SET\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_both <- keys_raw %>% \n  select(Q, condition, OPTIONS, BOTH) %>% \n  mutate(\n    \n    #P options that SHOULD be selected (rewarded)\n    set_p = BOTH,\n    set_p = str_replace_na(set_p,\"\"),#replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n    \n    #A options that are ignored if selected \n    set_a = \"\",\n    set_a = \"\",\n    n_a = 0,\n    \n    #N store all answr options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n),\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DEFINE SETS N, P, A\nfor (x in 1:nrow(keys_both)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_both[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_both[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_both[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist()\n  \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  \n  #save set to dataframe\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_both[x,'set_q'] = Q\n  keys_both[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  verify_both[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_both <- keys_both %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q) %>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_both <- keys_both %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\n#cleanup \nrm(N,A,P,Q,n_q,s,x,tempunion)\n\n\nThis leaves us a dataframe keys_both that define the sets of response options consistent with the triangular graph interpretation.\nTo verify we have generated the correct sets, we verify that for each question, each option in N is included in either set P, A or Q (once and only once).\nTRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE\n\n\nSatisficing Key\nNext we construct two keys based on the ‘Satisficing’ strategy. Satisficing involves selecting any data points within 0.5hr visual offset of the orthogonal interpretation of the graph (because no orthogonal response option is available). One key represents selecting a point slightly to the left of the orthogonal, and the other key represents selecting a point slightly to the right of the orthogonal. The “Satisficing” strategy involves the reader selecting data points nearest to the orthogonal projection from the reference point in the question. We observe this strategy in some readers when there is no orthogonal response available (i.e. in the impasse condition), so they select the points nearest to the projection (i.e. “close enough”).\n\n\nCODE\nverify_satisfice_right = c() #sanity check\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT SATISFICE RIGHT KEY SET\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_satisfice_right <- keys_raw %>% \n  select(Q, condition, OPTIONS, SATISFICE_right, REF_POINT) %>% \n  mutate(\n    #replace NAs\n    REF_POINT = str_replace_na(REF_POINT,\"\"),\n\n    #P options that SHOULD be selected (rewarded)\n    set_p = SATISFICE_right,\n    set_p = str_replace_na(set_p,\"\"), #replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n\n    #A options that are ignored if selected\n    set_a = str_c(REF_POINT, sep=\"\"),\n    set_a = str_replace_na(set_a,\"\"), #replace na if empty\n    n_a = nchar(set_a),\n\n    #N store all answr options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n)\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DO THE STUFF THAT'S EASIER IN A LOOP\nfor (x in 1:nrow(keys_satisfice_right)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_satisfice_right[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_satisfice_right[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_satisfice_right[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist() \n  \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # print(s)\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  #save set to data frame\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_satisfice_right[x,'set_q'] = Q\n  keys_satisfice_right[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  verify_satisfice_right[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_satisfice_right <- keys_satisfice_right %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q)%>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_satisfice_right <- keys_satisfice_right %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\n#cleanup\nrm(A, N, n_q, P, Q, s, tempunion, x)\n\n\n\nverify_satisfice_left = c() #sanity check\n##——————————————————————————————————————————————————————————————————————\n##CONSTRUCT SATISFICE left KEY SET\n##——————————————————————————————————————————————————————————————————————\n#1. DEFINE SETS N, P, A\nkeys_satisfice_left <- keys_raw %>% \n  select(Q, condition, OPTIONS, SATISFICE_left, REF_POINT) %>% \n  mutate(\n    \n    #replace NAs \n    REF_POINT = str_replace_na(REF_POINT,\"\"),\n    \n    #P options that SHOULD be selected (rewarded)\n    set_p = SATISFICE_left,\n    set_p = str_replace_na(set_p,\"\"), #replace na if empty\n    n_p = nchar(set_p), #number of true-select options\n    \n    #A options that are ignored if selected \n    set_a = str_c(REF_POINT, sep=\"\"),\n    set_a = str_replace_na(set_a,\"\"), #replace na if empty\n    n_a = nchar(set_a),\n    \n    #N store all answr options (superset)\n    set_n = OPTIONS,  \n    n_n = nchar(set_n)\n  \n) %>% select(Q, condition, set_n, set_p, set_a, n_n, n_p, n_a)\n\n#2. DO THE STUFF THAT'S EASIER IN A LOOP\nfor (x in 1:nrow(keys_satisfice_left)) {\n  \n  #UNWIND STRINGS FOR SETDIFF\n  #n all answer options\n  N = keys_satisfice_left[x,'set_n'] %>% pull(set_n) %>% strsplit(\"\") %>% unlist()\n  #p correct-select answer options\n  P = keys_satisfice_left[x,'set_p'] %>% pull(set_p) %>% strsplit(\"\") %>% unlist()\n  #a ignore-select answer options (should not be selected, but if they are, don't penalize)\n  A = keys_satisfice_left[x,'set_a'] %>% pull(set_a) %>% strsplit(\"\") %>% unlist() \n  \n  #Q = N - (P+A)\n  #answers that are penalized (at -1/q) if selected \n  s = union(P,A) #rewarded plus ignored \n  s = str_replace_na(s,\"\")\n  # print(s)\n  # s = union(s,X) # + trapdoor \n  Q = setdiff(N,s) # = penalized at -1/q when selected \n  #save set to data frame\n  Q = str_c(Q, collapse=\"\")\n  n_q = nchar(Q)\n  keys_satisfice_left[x,'set_q'] = Q\n  keys_satisfice_left[x,'n_q'] = n_q\n  \n  #verify each element in N is included in one and only one of P,A,Q\n  tempunion = union(s,Q) %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  N = N %>% str_c(collapse=\"\") %>% strsplit(\"\") %>% unlist()\n  verify_satisfice_left[x] = setequal(tempunion,N)\n}\n\n#3. reorder cols for ease of use\nkeys_satisfice_left <- keys_satisfice_left %>% select(Q, condition, set_n, set_p, set_a, set_q, n_n, n_p, n_a, n_q)%>% mutate(verify = n_p + n_a + n_q)\n\n#4. replace condition 111 with \"general\" to accomodate other conditions [only impasse is special]\nkeys_satisfice_left <- keys_satisfice_left %>% mutate(\n  condition = replace(condition, condition != \"impasse\", \"DEFAULT\")\n)\n\n#cleanup\nrm(A, N, n_q, P, Q, s, tempunion, x)\n\n\nThis leaves us a dataframe keys_satisfice that define the sets of response options consistent with the orthogonal graph interpretation.\nTo verify we have generated the correct sets, we verify that for each question, each response in N is included in either set P, A or Q (once and only once).\nTRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE\n\n\nCODE\n#cleanup\nrm(verify_tri, verify_orth, verify_max, verify_tversky_duration, verify_tversky_end, verify_tversky_start, verify_satisfice_right, verify_satisfice_left)\n\n\nFinally, we need to clean up and generalize our answer keys to accommodate the experimental conditions for Study SGC4-SGC5. In both of these studies the answer set (and underlying graphed data set) are identical, the conditions differ only based on the structure of the gridlines or marks used to represent the data, or interactive mode of the answer format.\n\n\nExport Keys\n\n\nCODE\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#SAVE KEYS FOR FUTURE USE\nwrite.csv(keys_raw,\"analysis/utils/keys/parsed_keys/keys_raw\", row.names = FALSE)\nwrite.csv(keys_orth,\"analysis/utils/keys/parsed_keys/keys_orth\", row.names = FALSE)\nwrite.csv(keys_tri,\"analysis/utils/keys/parsed_keys/keys_tri\", row.names = FALSE)\nwrite.csv(keys_both,\"analysis/utils/keys/parsed_keys/keys_both\", row.names = FALSE)\nwrite.csv(keys_satisfice_left,\"analysis/utils/keys/parsed_keys/keys_satisfice_left\", row.names = FALSE)\nwrite.csv(keys_satisfice_right,\"analysis/utils/keys/parsed_keys/keys_satisfice_right\", row.names = FALSE)\nwrite.csv(keys_tversky_duration,\"analysis/utils/keys/parsed_keys/keys_tversky_duration\", row.names = FALSE)\nwrite.csv(keys_tversky_end,\"analysis/utils/keys/parsed_keys/keys_tversky_end\", row.names = FALSE)\nwrite.csv(keys_tversky_max,\"analysis/utils/keys/parsed_keys/keys_tversky_max\", row.names = FALSE)\nwrite.csv(keys_tversky_start,\"analysis/utils/keys/parsed_keys/keys_tversky_start\", row.names = FALSE)\n\n\n\n\n\n2. Calculate Subscores\nNext, we import the item-level response data. For each row in the item level dataset (indicating the response to a single question-item for a single subject), we compare the raw response df_items$response with the answer keys in each interpretation (e.g. keys_orth, keys_tri, etc…), then using those sets, determine the number of correctly selected items(p) and incorrectly selected items (q), which in turn are used to calculate partial[-1/q, +1/p] scores for each interpretation. The resulting scores are then stored on each item in df_items, and can be used to determine which graph interpretation the subject held.\nSpecifically, the following scores are calculated for each item:\nInterpretation Subscores\n\nscore_TRI How consistent is the response with the triangular interpretation?\nscore_ORTH How consistent is the response with the orthogonal interpretation?\nscore_SATISFICE is calculated by taking the maximum value of :\n\nscore_SAT_left How consistent is the response with the (left side) Satisficing interpretation?\nscore_SAT_right How consistent is the response with the (right side) Satisficing interpretation?\n\nscore_TVERSKY is calculated by taking the maximum value of:\n\nscore_TV_max How consistent is the response with the (maximal) Tversky interpretation?\nscore_TV_start How consistent is the response with the (start-time) Tversky interpretation?\nscore_TV_end How consistent is the response with the (end-time) Tversky interpretation?\nscore_TV_duration How consistent is the response with the (duration) Tversky interpretation?\n\nscore_REF Did the response select only the reference point?\nscore_BOTH How consistent is the response with both the orthogonal and triangular interpretations?\n\nAbsolute Scores\n\nscore_ABS Is the response strictly correct? (triangular interpretation)\nscore_niceABS Is the response strictly correct? (triangular interpretation, not penalizing ref points). This is a more generous version of the Absolute score that does not penalize the participant if in addition to the correct answer in addition to they also select the data point referenced in the question.\n\nTo facilitate scoring, we import the following helper functions in each scoring script.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\nsource(\"analysis/utils/scoring.R\")\n\nprint(calc_subscore)\n\n\nfunction (question, cond, response, keyframe) \n{\n    if (cond == \"IMPASSE\" & question < 6) {\n        p = keyframe %>% filter(Q == question) %>% filter(condition == \n            \"impasse\") %>% dplyr::select(set_p) %>% pull(set_p) %>% \n            str_split(\"\") %>% unlist()\n        q = keyframe %>% filter(Q == question) %>% filter(condition == \n            \"impasse\") %>% dplyr::select(set_q) %>% pull(set_q) %>% \n            str_split(\"\") %>% unlist()\n        pn = keyframe %>% filter(Q == question) %>% filter(condition == \n            \"impasse\") %>% dplyr::select(n_p)\n        qn = keyframe %>% filter(Q == question) %>% filter(condition == \n            \"impasse\") %>% dplyr::select(n_q)\n    }\n    else {\n        p = keyframe %>% filter(Q == question) %>% filter(condition == \n            \"DEFAULT\") %>% dplyr::select(set_p) %>% pull(set_p) %>% \n            str_split(\"\") %>% unlist()\n        q = keyframe %>% filter(Q == question) %>% filter(condition == \n            \"DEFAULT\") %>% dplyr::select(set_q) %>% pull(set_q) %>% \n            str_split(\"\") %>% unlist()\n        pn = keyframe %>% filter(Q == question) %>% filter(condition == \n            \"DEFAULT\") %>% dplyr::select(n_p)\n        qn = keyframe %>% filter(Q == question) %>% filter(condition == \n            \"DEFAULT\") %>% dplyr::select(n_q)\n    }\n    if (response != \"\") {\n        response = response %>% str_split(\"\") %>% unlist()\n    }\n    ps = length(intersect(response, p))\n    qs = length(intersect(response, q))\n    x = f_partialP(ps, pn, qs, qn) %>% unlist() %>% as.numeric()\n    rm(p, q, pn, qn, ps, qs)\n    return(x)\n}\n\n\n\n\n3. Derive Interpretation\nNext, we use the interpretation subscores to classify the response as a particular interpretation. This classification algorithm : (1) First decides if the response matches one or more ‘special’ situations (blank response, reference point response, both ORTH and TRI) (2) If response doesn’t match a special situation, it compares the individual subscores, and subscores and decides if they are discriminant (i.e. are the scores different enough to make a prediction). A discriminant threshold of 0.5pts (on a scale from -1 to +1 is used) (2) If the variance in subscores surpasses the threshold, the interpretation is classified based on the highest subscore (TRIANGULAR, ORTHOGONAL, TVERSKY, SATISFICE) (3) If the variance does not surpass the threshold, the interpretation is labelled as “?”, indicating it cannot be classified, and is of an unknown interpretation.\nThe final output is called interpretation.\n\n\nCODE\nprint(derive_interpretation)\n\n\nfunction (df) \n{\n    print(\"DERIVING INTERPRETATION\")\n    threshold_range = 0.5\n    threshold_frenzy = 4\n    for (x in 1:nrow(df)) {\n        t = df[x, ] %>% dplyr::select(score_TV_max, score_TV_start, \n            score_TV_end, score_TV_duration)\n        t.long = gather(t, score, value, 1:4)\n        t.long$value <- t.long$value %>% unlist\n        t.long[t.long == \"\"] = NA\n        if (length(unique(t.long$value)) == 1) {\n            if (is.na(unique(t.long$value))) {\n                df[x, \"score_TVERSKY\"] = NA\n                df[x, \"tv_type\"] = NA\n            }\n        }\n        else {\n            df[x, \"score_TVERSKY\"] = as.numeric(max(t.long$value, \n                na.rm = TRUE))\n            df[x, \"tv_type\"] = t.long[which.max(t.long$value), \n                \"score\"]\n        }\n        t = df[x, ] %>% dplyr::select(score_SAT_left, score_SAT_right)\n        t.long = gather(t, score, value, 1:2)\n        t.long$value <- t.long$value %>% unlist\n        t.long[t.long == \"\"] = NA\n        if (length(unique(t.long$value)) == 1) {\n            if (is.na(unique(t.long$value))) {\n                df[x, \"score_SATISFICE\"] = NA\n                df[x, \"sat_type\"] = NA\n            }\n        }\n        else {\n            df[x, \"score_SATISFICE\"] = as.numeric(max(t.long$value, \n                na.rm = TRUE))\n            df[x, \"sat_type\"] = t.long[which.max(t.long$value), \n                \"score\"]\n        }\n        t = df[x, ] %>% dplyr::select(score_TRI, score_TVERSKY, \n            score_SATISFICE, score_ORTH)\n        t.long = gather(t, score, value, 1:4)\n        t.long$value <- t.long$value %>% unlist\n        t.long[t.long == \"\"] = NA\n        df[x, \"top_score\"] = as.numeric(max(t.long$value, na.rm = TRUE))\n        df[x, \"top_type\"] = t.long[which.max(t.long$value), \"score\"]\n        r = as.numeric(range(t.long$value, na.rm = TRUE))\n        r = diff(r)\n        df[x, \"range\"] = r\n        if (r < threshold_range) {\n            df[x, \"best\"] = \"?\"\n        }\n        else {\n            p = df[x, \"top_type\"]\n            if (p == \"score_TRI\") {\n                df[x, \"best\"] = \"Triangular\"\n            }\n            else if (p == \"score_ORTH\") {\n                df[x, \"best\"] = \"Orthogonal\"\n            }\n            else if (p == \"score_TVERSKY\") {\n                df[x, \"best\"] = \"Tversky\"\n            }\n            else if (p == \"score_SATISFICE\") {\n                df[x, \"best\"] = \"Satisfice\"\n            }\n        }\n        if (!is.na(df[x, \"score_BOTH\"])) {\n            if (df[x, \"score_BOTH\"] == 1) {\n                df[x, \"best\"] = \"both tri + orth\"\n            }\n        }\n        if (df[x, \"num_o\"] == 0) {\n            df[x, \"best\"] = \"blank\"\n        }\n        if (df[x, \"num_o\"] > threshold_frenzy) {\n            df[x, \"best\"] = \"frenzy\"\n        }\n        if (!is.na(df[x, \"score_REF\"])) {\n            if (df[x, \"score_REF\"] == 1) {\n                df[x, \"best\"] = \"reference\"\n            }\n        }\n    }\n    rm(t, t.long, x, r, p)\n    rm(threshold_frenzy, threshold_range)\n    df$int2 <- factor(df$best, levels = c(\"Triangular\", \"Tversky\", \n        \"Satisfice\", \"Orthogonal\", \"reference\", \"both tri + orth\", \n        \"blank\", \"frenzy\", \"?\"))\n    df$interpretation <- factor(df$best, levels = c(\"Orthogonal\", \n        \"Satisfice\", \"frenzy\", \"?\", \"reference\", \"blank\", \"both tri + orth\", \n        \"Tversky\", \"Triangular\"))\n    df$high_interpretation <- fct_collapse(df$interpretation, \n        orthogonal = c(\"Satisfice\", \"Orthogonal\"), neg.trans = c(\"frenzy\", \n            \"?\"), neutral = c(\"reference\", \"blank\"), pos.trans = c(\"Tversky\", \n            \"both tri + orth\"), triangular = \"Triangular\")\n    df$tv_type = as.factor(df$tv_type)\n    df$top_type = as.factor(df$top_type)\n    df$high_interpretation = factor(df$high_interpretation, levels = c(\"orthogonal\", \n        \"neg.trans\", \"neutral\", \"pos.trans\", \"triangular\"))\n    df <- df %>% dplyr::select(-best)\n    return(df)\n}\n\n\n\n\n4. Derive Scaled Score\nThe interpretation response variable gives us the finest grain indication of the reader’s understanding of the graph for a particular question. However, it is a categorical variable, which poses a challenge for analyzing cumulative performance at the subject level. To address this challenge, we derive a scaled_score that converts each possible interpretation to a numeric value on a scale from -1 to +1. This scaling takes advantage of the observation that each interpretation can be positioned along a spectrum of understanding from completely incorrect (orthogonal) to completely correct (triangular). Alternative interpretations lay somewhere between.\nSpecifically, we assign the following values to each interpretation:\n\n(-1) : ORTHOGONAL, SATISFICE (satisfice represents an attempt at an orthogonal answer when none is available)\n(-0.5): ? (some alternative that cannot be identified; but meaningful that it is not orthogonal)\n(0): REFERENCE POINT, BLANK (indicates the individual thinks there is no answer, recognizes that ORTHOGONAL cannot be correct, but does not conceive of triangular)\n(+0.5) TVERSKY, BOTH TRI + ORTH (indicates that they “see” a triangular response, but lack certainty and also select the ORTHOGONAL response)\n(+1) TRIANGULAR +1\n\n\n\nCODE\nprint(calc_scaled)\n\n\nfunction (v) \n{\n    v <- recode(v, Orthogonal = -1, Satisfice = -1, frenzy = -0.5, \n        `?` = -0.5, reference = 0, blank = 0, `both tri + orth` = 0.5, \n        Tversky = 0.5, Triangular = 1)\n    return(v)\n}\n\n\n\n\n5. Summarize by Subject\nThe final step in the scoring procedure is to summarise the item-level scores by subject, and save certain summaries to the subject-level record. We also construct two long-format dataframes containing cummulative progress scores (the point-in-time [absolute, scaled] scores for each subject on each question).\n\n\nCODE\nprint(summarise_bySubject)\n\n\nfunction (subjects, items) \n{\n    subjects_summary <- items %>% filter(q %nin% c(6, 9)) %>% \n        group_by(subject) %>% dplyr::summarise(subject = as.character(subject), \n        s_TRI = sum(score_TRI, na.rm = TRUE), s_ORTH = sum(score_ORTH, \n            na.rm = TRUE), s_TVERSKY = sum(score_TVERSKY, na.rm = TRUE), \n        s_SATISFICE = sum(score_SATISFICE, na.rm = TRUE), s_REF = sum(score_REF, \n            na.rm = TRUE), s_ABS = sum(score_ABS, na.rm = TRUE), \n        s_NABS = sum(score_niceABS, na.rm = TRUE), s_SCALED = sum(score_SCALED, \n            na.rm = TRUE), DV_percent_NABS = s_NABS/13, rt_m = sum(rt_s)/60, \n        item_avg_rt = mean(rt_s), item_min_rt = min(rt_s), item_max_rt = max(rt_s), \n        item_n_TRI = sum(interpretation == \"Triangular\"), item_n_ORTH = sum(interpretation == \n            \"Orthogonal\"), item_n_TV = sum(interpretation == \n            \"Tversky\"), item_n_SAT = sum(interpretation == \"Satisfice\"), \n        item_n_OTHER = sum(interpretation %nin% c(\"Triangular\", \n            \"Orthogonal\", \"Tversky\", \"Satisfice\")), item_n_POS = sum(high_interpretation == \n            \"pos.trans\"), item_n_NEG = sum(high_interpretation == \n            \"neg.trans\"), item_n_NEUTRAL = sum(high_interpretation == \n            \"neutral\")) %>% arrange(subject) %>% slice(1L)\n    subjects_q1 <- items %>% filter(q == 1) %>% mutate(item_q1_NABS = score_niceABS, \n        item_q1_SCALED = score_SCALED, item_q1_interpretation = interpretation, \n        item_q1_rt = rt_s, ) %>% dplyr::select(subject, item_q1_NABS, \n        item_q1_SCALED, item_q1_interpretation, item_q1_rt) %>% \n        arrange(subject)\n    subjects_q5 <- items %>% filter(q == 5) %>% mutate(item_q5_NABS = score_niceABS, \n        item_q5_SCALED = score_SCALED, item_q5_interpretation = interpretation, \n        item_q5_rt = rt_s, ) %>% dplyr::select(subject, item_q5_NABS, \n        item_q5_SCALED, item_q5_interpretation, item_q5_rt) %>% \n        arrange(subject)\n    subjects_q7 <- items %>% filter(q == 7) %>% mutate(item_q7_NABS = score_niceABS, \n        item_q7_interpretation = interpretation, item_q7_rt = rt_s, \n        ) %>% dplyr::select(subject, item_q7_NABS, item_q7_interpretation, \n        item_q7_rt) %>% arrange(subject)\n    subjects_q15 <- items %>% filter(q == 15) %>% mutate(item_q15_NABS = score_niceABS, \n        item_q15_interpretation = interpretation, item_q15_rt = rt_s, \n        ) %>% dplyr::select(subject, item_q15_NABS, item_q15_interpretation, \n        item_q15_rt) %>% arrange(subject)\n    subjects_scaffold <- items %>% filter(q < 6) %>% group_by(subject) %>% \n        dplyr::summarise(item_scaffold_NABS = sum(score_niceABS), \n            item_scaffold_SCALED = sum(score_SCALED), item_scaffold_rt = sum(rt_s)/60) %>% \n        dplyr::select(subject, item_scaffold_NABS, item_scaffold_SCALED, \n            item_scaffold_rt) %>% arrange(subject)\n    subjects_test <- items %>% filter(q %nin% c(1, 2, 3, 4, 5, \n        6, 9)) %>% group_by(subject) %>% dplyr::summarise(item_test_NABS = sum(score_niceABS), \n        item_test_SCALED = sum(score_SCALED), item_test_rt = sum(rt_s)/60) %>% \n        dplyr::select(subject, item_test_NABS, item_test_SCALED, \n            item_test_rt) %>% arrange(subject)\n    print(unique(subjects_summary$subject == subjects$subject))\n    print(unique(subjects_summary$subject == subjects_q1$subject))\n    print(unique(subjects_summary$subject == subjects_q5$subject))\n    print(unique(subjects_summary$subject == subjects_q7$subject))\n    print(unique(subjects_summary$subject == subjects_q15$subject))\n    print(unique(subjects_summary$subject == subjects_scaffold$subject))\n    print(unique(subjects_summary$subject == subjects_test$subject))\n    x = merge(subjects, subjects_summary, by.x = \"subject\", by.y = \"subject\")\n    x = merge(x, subjects_q1)\n    x = merge(x, subjects_q5)\n    x = merge(x, subjects_q7)\n    x = merge(x, subjects_q15)\n    x = merge(x, subjects_scaffold)\n    x = merge(x, subjects_test)\n    subjects <- x\n    rm(subjects_q1, subjects_q5, subjects_q7, subjects_q15, subjects_scaffold, \n        subjects_test, subjects_summary, x)\n    return(subjects)\n}\n\n\nCODE\nprint(progress_Absolute)\n\n\nfunction (items) \n{\n    x <- items %>% filter(q %nin% c(6, 9)) %>% dplyr::select(subject, \n        mode, pretty_condition, q, score_niceABS)\n    wide <- x %>% pivot_wider(names_from = q, names_glue = \"q_{q}\", \n        values_from = score_niceABS)\n    wide$c1 = wide$q_1\n    wide$c2 = wide$c1 + wide$q_2\n    wide$c3 = wide$c2 + wide$q_3\n    wide$c4 = wide$c3 + wide$q_4\n    wide$c5 = wide$c4 + wide$q_5\n    wide$c6 = wide$c5 + wide$q_7\n    wide$c7 = wide$c6 + wide$q_8\n    wide$c8 = wide$c7 + wide$q_10\n    wide$c9 = wide$c8 + wide$q_11\n    wide$c10 = wide$c9 + wide$q_12\n    wide$c11 = wide$c10 + wide$q_13\n    wide$c12 = wide$c11 + wide$q_14\n    wide$c13 = wide$c12 + wide$q_15\n    wide <- wide %>% dplyr::select(subject, mode, pretty_condition, \n        c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13)\n    df_absolute_progress <- wide %>% pivot_longer(cols = c1:c13, \n        names_to = \"question\", names_pattern = \"c(.*)\", values_to = \"score\")\n    df_absolute_progress$question <- as.integer(df_absolute_progress$question)\n    rm(x, wide)\n    return(df_absolute_progress)\n}\n\n\nCODE\nprint(progress_Scaled)\n\n\nfunction (items) \n{\n    x <- items %>% filter(q %nin% c(6, 9)) %>% dplyr::select(subject, \n        mode, pretty_condition, q, score_SCALED)\n    wide <- x %>% pivot_wider(names_from = q, names_glue = \"q_{q}\", \n        values_from = score_SCALED)\n    wide$c1 = wide$q_1\n    wide$c2 = wide$c1 + wide$q_2\n    wide$c3 = wide$c2 + wide$q_3\n    wide$c4 = wide$c3 + wide$q_4\n    wide$c5 = wide$c4 + wide$q_5\n    wide$c6 = wide$c5 + wide$q_7\n    wide$c7 = wide$c6 + wide$q_8\n    wide$c8 = wide$c7 + wide$q_10\n    wide$c9 = wide$c8 + wide$q_11\n    wide$c10 = wide$c9 + wide$q_12\n    wide$c11 = wide$c10 + wide$q_13\n    wide$c12 = wide$c11 + wide$q_14\n    wide$c13 = wide$c12 + wide$q_15\n    wide <- wide %>% dplyr::select(subject, mode, pretty_condition, \n        c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13)\n    df_scaled_progress <- wide %>% pivot_longer(cols = c1:c13, \n        names_to = \"question\", names_pattern = \"c(.*)\", values_to = \"score\")\n    df_scaled_progress$question <- as.integer(df_scaled_progress$question)\n    rm(x, wide)\n    return(df_scaled_progress)\n}\n\n\n\n\n\n\n\n\nSchmidt, Dennis, Tobias Raupach, Annette Wiegand, Manfred Herrmann, and Philipp Kanzow. 2021. “Relation Between Examinees’ True Knowledge and Examination Scores: Systematic Review and Exemplary Calculations on Multiple-True-False Items.” Educational Research Review 34 (November): 100409. https://doi.org/10.1016/j.edurev.2021.100409."
  },
  {
    "objectID": "analysis/SGC2/1_sgc2_introduction.html",
    "href": "analysis/SGC2/1_sgc2_introduction.html",
    "title": "1  Introduction",
    "section": "",
    "text": "In Study Two we examine if scaffolding is effective in aiding untrained students to understand the Triangular Model (TM) graph. We know that students are unlikely to construct the correct interpretation of the TM without assistance. Guided by the results of the Study One Design Task, we created four scaffolds. We test the effectiveness of these scaffolds by seeking to replicate the Qiang et.al (2014) finding that after 20 minutes of video training, students perform faster and more accurately with the unconventional TM than the conventional Linear Model (LM). Will our participants show similar performance on the TM with scaffolds rather than formal instruction? Further, will engagement with the TM in a reading task be sufficient for students to reproduce the graph in a subsequent drawing task?\nTo try the study yourself: http://morning-gorge-17056.herokuapp.com/\nEnter “github” as your session code, and number of the condition you wish to test\n0 = control (no-scaffold), 1 = “what-text”, 2 = “how-text”, 3 = “static-image”, 4 = “interactive-image”"
  },
  {
    "objectID": "analysis/SGC2/1_sgc2_introduction.html#methods",
    "href": "analysis/SGC2/1_sgc2_introduction.html#methods",
    "title": "1  Introduction",
    "section": "METHODS",
    "text": "METHODS\n\nDesign\nWe employed a 5 (scaffold: none-control, what-text, how-text, static image, interactive image) x 2 (graph: LM, TM) mixed design, with scaffold as a between-subjects variable and graph as a within-subject variable. To test our hypothesis that exposure to the conventional LM acts as a scaffold for the TM, we counterbalanced the order of graph-reading tasks (order: LM-first, TM-first). For each task we measured response accuracy and time. For the follow-up graph-drawing task, a team of raters coded the type of graph produced by each participant.\n\n\n\nMaterials\n\nScaffolds\nFor the first five questions of each graph-reading task, participants saw their assigned scaffold along with the designated graph. On the following ten questions, the scaffold was not present. Examples of each scaffold-condition for the TM and LM graphs are shown in the table above.\n\n\nThe Graph Drawing Task\nIn the  graph drawing task participants were given a sheet of isometric dot paper and a table containing a set of 10 time intervals. Isometric dot paper equally supports the construction of lines at 0, 45 and 90 degrees, thus minimizing any biasing effects of the paper on the type of graph the participants chose to draw. Participants were directed to draw a triangular graph of the data (“like the triangle graph you saw in the previous task”), using the pencil, eraser and ruler provided.\n \n\n\n\nProcedure\nParticipants completed the study individually in a computer lab. Each participant was randomly assigned to one of five conditions which determined what additional information (scaffold) they received while solving the first five problems with each graph: no-scaffold (control), ‘what’ text, ‘how’-text, static-image, and interactive-image. After a short introduction they continued to the first of two graph reading tasks (graph order counterbalanced). After completing the first graph reading task, they were introduced to the second scenario, and completed the second graph reading task with the remaining graph. Finally, participants completed the graph drawing task. They finished the study by completing a short demographic survey, and reading the debriefing text. The runtime of the entire study ranged from 20 to 60 minutes.\n\n\nSample\nData was collected by convenience sample of a university subject pool. Data were collected in the Spring of 2017 with, in-person, with large groups of students simultaneously completing the study (independently) in a computer lab."
  },
  {
    "objectID": "analysis/SGC2/1_sgc2_introduction.html#analysis",
    "href": "analysis/SGC2/1_sgc2_introduction.html#analysis",
    "title": "1  Introduction",
    "section": "ANALYSIS",
    "text": "ANALYSIS\nnote: Unlike studies SGC3 and onwards, scoring for SGC2 is already included in the raw data files.\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(mbp)\n\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC2/data/2-scored-data/sgc2_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC2/data/2-scored-data/sgc2_items.csv\", row.names = FALSE)\n\n#SAVE R Data Structures \nrio::export(df_subjects, \"analysis/SGC2/data/2-scored-data/sgc2_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC2/data/2-scored-data/sgc2_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC2/1_sgc2_introduction.html#resources",
    "href": "analysis/SGC2/1_sgc2_introduction.html#resources",
    "title": "1  Introduction",
    "section": "RESOURCES",
    "text": "RESOURCES\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] forcats_0.5.1    stringr_1.4.0    dplyr_1.0.9      purrr_0.3.4     \n [5] readr_2.1.2      tidyr_1.2.0      tibble_3.1.7     tidyverse_1.3.1 \n [9] Hmisc_4.7-0      ggplot2_3.3.6    Formula_1.2-4    survival_3.3-1  \n[13] lattice_0.20-45  kableExtra_1.3.4 codebook_0.9.2  \n\nloaded via a namespace (and not attached):\n [1] fs_1.5.2            lubridate_1.8.0     bit64_4.0.5        \n [4] webshot_0.5.3       RColorBrewer_1.1-3  httr_1.4.3         \n [7] tools_4.2.1         backports_1.4.1     utf8_1.2.2         \n[10] R6_2.5.1            rpart_4.1.16        DBI_1.1.3          \n[13] colorspace_2.0-3    nnet_7.3-17         withr_2.5.0        \n[16] tidyselect_1.1.2    gridExtra_2.3       bit_4.0.4          \n[19] curl_4.3.2          compiler_4.2.1      cli_3.3.0          \n[22] rvest_1.0.2         htmlTable_2.4.0     xml2_1.3.3         \n[25] scales_1.2.0        checkmate_2.1.0     systemfonts_1.0.4  \n[28] digest_0.6.29       foreign_0.8-82      rmarkdown_2.14     \n[31] svglite_2.1.0       rio_0.5.29          base64enc_0.1-3    \n[34] jpeg_0.1-9          pkgconfig_2.0.3     htmltools_0.5.2    \n[37] labelled_2.9.1      dbplyr_2.2.1        fastmap_1.1.0      \n[40] highr_0.9           htmlwidgets_1.5.4   rlang_1.0.3        \n[43] readxl_1.4.0        rstudioapi_0.13     generics_0.1.2     \n[46] jsonlite_1.8.0      vroom_1.5.7         zip_2.2.0          \n[49] magrittr_2.0.3      Matrix_1.4-1        Rcpp_1.0.8.3       \n[52] munsell_0.5.0       fansi_1.0.3         lifecycle_1.0.1    \n[55] stringi_1.7.6       yaml_2.3.5          grid_4.2.1         \n[58] parallel_4.2.1      crayon_1.5.1        haven_2.5.0        \n[61] splines_4.2.1       hms_1.1.1           knitr_1.39         \n[64] pillar_1.7.0        reprex_2.0.1        glue_1.6.2         \n[67] evaluate_0.15       latticeExtra_0.6-29 data.table_1.14.2  \n[70] modelr_0.1.8        png_0.1-7           vctrs_0.4.1        \n[73] tzdb_0.3.0          cellranger_1.1.0    gtable_0.3.0       \n[76] assertthat_0.2.1    xfun_0.31           openxlsx_4.2.5     \n[79] broom_0.8.0         viridisLite_0.4.0   cluster_2.1.3      \n[82] ellipsis_0.3.2"
  },
  {
    "objectID": "analysis/SGC2/3_sgc2_description.html",
    "href": "analysis/SGC2/3_sgc2_description.html",
    "title": "2  Description",
    "section": "",
    "text": "The purpose of this notebook is describe the distributions of dependent variables for Study SGC2."
  },
  {
    "objectID": "analysis/SGC2/3_sgc2_description.html#sample",
    "href": "analysis/SGC2/3_sgc2_description.html#sample",
    "title": "2  Description",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\nData was initially collected (in person, SONA groups in computer lab) in Spring 2017.\n\n\nCODE\ntitle = \"Participants by Condition and (counterbalanced) Task-order\"\ncols = c(\"Control\",\"Text[what]\",\"Text[how]\",\"Image[static]\", \"Image[ixv]\",\"Total\")\ncont <- table(df_subjects$order, df_subjects$pretty_condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and (counterbalanced) Task-order\n \n  \n      \n    Control \n    Text[what] \n    Text[how] \n    Image[static] \n    Image[ixv] \n    Total \n  \n \n\n  \n    LM-First \n    29 \n    31 \n    30 \n    30 \n    34 \n    154 \n  \n  \n    TM-First \n    32 \n    28 \n    36 \n    32 \n    34 \n    162 \n  \n  \n    Sum \n    61 \n    59 \n    66 \n    62 \n    68 \n    316 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <- df_subjects %>% dplyr::select(AGE) %>% unlist() %>% favstats() \n\nsubject.stats$percent.female <- df_subjects %>% filter(GENDER==\"Female\") %>% count() %>% pull()/nrow(df_subjects)\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.female \n  \n \n\n  \n     \n    17 \n    19 \n    20 \n    21 \n    33 \n    20.5 \n    2.2 \n    316 \n    0 \n    0.69 \n  \n\n\nNote:   Age in Years\n\n\n\n\nFor in person data collection 316 participants (69 % female ) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 17 - 33 years)."
  },
  {
    "objectID": "analysis/SGC2/3_sgc2_description.html#response-accuracy",
    "href": "analysis/SGC2/3_sgc2_description.html#response-accuracy",
    "title": "2  Description",
    "section": "RESPONSE ACCURACY",
    "text": "RESPONSE ACCURACY\n\nBlock Scores\nSubject level scores summarize the the response accuracy by a particular participant across all blocks of the two graph comprehension tasks. The task score refers to the number of questions correct (absolute scoring) in each block (linear graph, triangular graph) of the graph comprehension task.\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy by Block (Total Absolute Score)\"\nabs.stats <- rbind(\n  \"linear.block\"= df_subjects %>% dplyr::select(linear_score) %>% unlist() %>% favstats(),\n  \"triangular.block\" = df_subjects %>% dplyr::select(triangular_score) %>% unlist() %>% favstats(),\n  \"block.differences\" = df_subjects %>% dplyr::select(score_diff) %>% unlist() %>% favstats(),\n  \"total\" = df_subjects %>% dplyr::select(totalScore) %>% unlist() %>% favstats()\n)\n\nabs.stats %>% kbl (caption = title) %>% kable_classic() %>%\n  footnote(general = \"block # questions correct [0,15]; DIFF = triangular - linear\",\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nDescriptive Statistics of Response Accuracy by Block (Total Absolute Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    linear.block \n    2 \n    10 \n    11 \n    13 \n    15 \n    10.95 \n    2.13 \n    316 \n    0 \n  \n  \n    triangular.block \n    0 \n    5 \n    10 \n    12 \n    15 \n    8.77 \n    4.45 \n    316 \n    0 \n  \n  \n    block.differences \n    -13 \n    -5 \n    -1 \n    1 \n    5 \n    -2.18 \n    4.11 \n    316 \n    0 \n  \n  \n    total \n    6 \n    16 \n    22 \n    26 \n    31 \n    20.98 \n    6.00 \n    316 \n    0 \n  \n\n\nNote:   block # questions correct [0,15]; DIFF = triangular - linear\n\n\n\n\nTotal absolute scores for the LINEAR graph (n = 316) range from 2 to 15 with a mean score of (M = 10.95, SD = 2.13).\nTotal absolute scores for the TRIANGULAR graph (n = 316) range from 0 to 15 with a mean score of (M = 8.77, SD = 4.45).\nTotal absolute scores across the ENTIRE TASK (n = 316) range from 6 to 31 with a mean score of (M = 20.98, SD = 6).\nDifference scores (difference between TRIANGULAR and LINEAR) scores for each participant (n = 316) range from -13 to 5 with a mean score of (M = -2.18, SD = 4.11). (note: negative difference scores indicate the participant performed better on the linear block than the triangular block.)\n\nBy Block\n\n\nCODE\n#DATA SETUP\nlong_scores <- df_subjects %>% dplyr::select(subject,pretty_condition,order,lm_scenarios,tm_scenarios,linear_score, triangular_score) %>% pivot_longer(\n  cols = ends_with(\"score\"),\n  names_to = \"graph\",\n  values_to = \"score\"\n)\n\n#DISTRIBUTION OF SCORES BY GRAPH\nstats <- favstats(score~graph, data = long_scores)\ngf_dhistogram(~score, fill = ~graph, binwidth = 0.5,data = long_scores) %>%\n  gf_vline(xintercept = ~mean, color = ~graph, data = stats) %>%\n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(~ graph) +\n  labs( title = \"Distribution of Score (by Block)\",\n        subtitle =\"Performance on Linear Graph is better than Triangular\",\n        x = \"Block Score (# correct)\", y = \"proportion of subjects\") +\n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(long_scores, aes(x = graph, y = score,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = score),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = score, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Score (by Block) \",\n    x = \"Condition\", y = \"Score (# correct)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\nTODO explore interactions ::: {.cell}\n\nCODE\n# \n# \n# library(interactions)\nm = lm(score ~ graph + pretty_condition + order + tm_scenarios, data = long_scores)\nm2 = lm(score ~ graph * pretty_condition * order * tm_scenarios, data = long_scores)\n# \n# cat_plot(model = m, pred = graph, modx = order, mod2 = pretty_condition,\n#          INT.TYPE = \"confidence\", int.width = 0.95,\n#          rug = TRUE)\n# \n# cat_plot(model = m2, pred = graph, modx = tm_scenarios, mod2 = pretty_condition,\n#          INT.TYPE = \"confidence\", int.width = 0.95,\n#          rug = TRUE)\n# \n# # cat_plot(model = m, pred = graph, modx = tm_scenarios, mod2 = pretty_condition,\n# #          INT.TYPE = \"confidence\", int.width = 0.95,\n# #          rug = TRUE)\n\n:::\n\n\nBy Condition\n\n\nCODE\n#DISTRIBUTION OF SCORES BY GRAPH\nstats <- favstats(score ~ pretty_condition+graph, data = long_scores)\ngf_dhistogram(~score, fill = ~pretty_condition, binwidth = 0.5,data = long_scores) %>% \n  gf_dens(color = ~pretty_condition) %>%  \n  # gf_vline(xintercept = ~mean, data = stats) %>% \n  gf_facet_grid(pretty_condition ~ graph) +\n  labs( title = \"Distribution of Score (by Condition)\",\n        subtitle =\"\",\n        x = \"Block Score (# correct)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(long_scores, aes(x = graph, y = score,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = score),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = score, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~pretty_condition) + labs( \n    title = \"Distribution of Score (by Condition) \",\n    x = \"Condition\", y = \"Score (# correct)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nBy Order\n\n\nCODE\n#DISTRIBUTION OF SCORES BY GRAPH\ngf_dhistogram(~score, fill = ~graph, binwidth = 0.5,data = long_scores) %>% \n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(graph~order) +\n  labs( title = \"Distribution of Score (by Order)\",\n        subtitle =\"\",\n        x = \"Block Score (# correct)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(long_scores, aes(x = graph, y = score,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = score),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = score, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~order) + labs( \n    title = \"Distribution of Score (by Order)\",\n    x = \"Graph\", y = \"Score (# correct)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nBy Scenario\n\n\nCODE\n#DISTRIBUTION OF SCORES BY GRAPH\ngf_dhistogram(~score, fill = ~graph, binwidth = 0.5,data = long_scores) %>% \n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(graph~tm_scenarios) +\n  labs( title = \"Distribution of Score (by Scenario)\",\n        subtitle =\"\",\n        x = \"Block Score (# correct)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(long_scores, aes(x = graph, y = score,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = score),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = score, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~tm_scenarios) + labs( \n    title = \"Distribution of Score (by Scenario) \",\n    x = \"Graph\", y = \"Score (# correct)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\n\nBlock Difference Scores\n\n\nCODE\n#DIFFERENCE SCORE BY SUBJECT\ngf_line(score~graph, group=~subject, color = ~order, data = long_scores) %>% \n  gf_facet_grid(order~pretty_condition) + \n  labs(title = \"Block Scores by Condition\") + easy_remove_legend()\n\n\n\n\n\nCODE\n#DISTRIBUTION OF SCORES BY GRAPH\ngf_dhistogram(~score_diff, fill = ~pretty_condition, binwidth = 0.5,data = df_subjects) %>% \n  # gf_dens(color = ~graph) %>%  \n  gf_facet_grid(order~pretty_condition) +\n  labs( title = \"Block Difference Score (by Condition)\",\n        subtitle =\"\",\n        x = \"Difference Score (Triangular - Linear)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\n\n\nItem Scores\nTask Accuracy summarized over items rather than subjects\n\n\nCODE\ndf <- df_items %>% filter(graph %in% c(\"linear\",\"triangular\"))\n\n#VISUALIZE distribution of response accuracy across ITEMS\n\n#HISTOGRAM by Condition\n# gf_props(~correct, data = df) %>% \n#   gf_facet_grid(pretty_condition~graph, labeller = label_both) +\n#   labs(x = \"Item Accuracy\",\n#        title = \"Item Accuracy by Graph and Condition\",\n#        subtitle=\"\")\n\n#STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = graph,\n                       fill = score)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~pretty_condition) +\n   labs(y = \"Proportion of Items\",\n       title = \"Item Accuracy by Graph and Condition\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#HISTOGRAM\n# gf_props(~correct, data = df) %>% \n#   gf_facet_grid(scenario~graph, labeller = label_both) +\n#   labs(x = \"Item Accuracy\",\n#        title = \"Item Accuracy by Graph and (TM Graph) Scenario\",\n#        subtitle=\"\")\n\n#STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = graph,\n                       fill = score)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~scenario) +\n   labs(y = \"Proportion of Items\",\n       title = \"Item Accuracy by Graph and (TM Graph) Scenario\",\n       x = \"TM Graph Scenario\",\n       fill = \"\",\n       subtitle=\"If the scenarios are of equal difficulty, these should be the same\")\n\n\n\n\n\nCODE\n#HISTOGRAM\n# gf_props(~correct, data = df) %>% \n#   gf_facet_grid(order~graph, labeller = label_both) +\n#   labs(x = \"Item Accuracy\",\n#        title = \"Item Accuracy by Graph and Block Order\",\n#        subtitle=\"\")\n\n#STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = graph,\n                       fill = score)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~order) +\n   labs(y = \"Proportion of Items\",\n       title = \"Item Accuracy by Graph and Block Order\",\n       x = \"Block Order\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = graph,\n                       fill = score)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~q) +\n   labs( \n     #y = \"Proportion of Items\",\n       title = \"Item Accuracy by Graph and Question Number\",\n       x = \"Question Number\",\n       fill = \"\",\n       subtitle=\"\")"
  },
  {
    "objectID": "analysis/SGC2/3_sgc2_description.html#response-latency",
    "href": "analysis/SGC2/3_sgc2_description.html#response-latency",
    "title": "2  Description",
    "section": "RESPONSE LATENCY",
    "text": "RESPONSE LATENCY\n\nTime on Block\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Time by Block\"\ntime.stats <- rbind(\n  \"linear.block\"= df_subjects %>% dplyr::select(LM_T_M) %>% unlist() %>% favstats(),\n  \"triangular.block\" = df_subjects %>% dplyr::select(TM_T_M) %>% unlist() %>% favstats(),\n  \"block.differences\" = df_subjects %>% dplyr::select(DIFF_T_M) %>% unlist() %>% favstats(),\n  \"total\" = df_subjects %>% dplyr::select(TOTAL_T_M) %>% unlist() %>% favstats()\n)\n\ntime.stats %>% kbl (caption = title) %>% kable_classic() %>%\n  footnote(general = \"time in minutes; DIFF = triangular - linear\",\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nDescriptive Statistics of Response Time by Block\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    linear.block \n    3.92 \n    7.63 \n    8.87 \n    10.440 \n    23.1 \n    9.20 \n    2.53 \n    316 \n    0 \n  \n  \n    triangular.block \n    3.14 \n    8.82 \n    10.40 \n    12.502 \n    26.8 \n    10.85 \n    3.28 \n    316 \n    0 \n  \n  \n    block.differences \n    -12.66 \n    -3.15 \n    -1.42 \n    0.472 \n    12.9 \n    -1.64 \n    3.09 \n    316 \n    0 \n  \n  \n    total \n    21.91 \n    34.66 \n    39.66 \n    45.853 \n    66.1 \n    40.42 \n    8.54 \n    316 \n    0 \n  \n\n\nNote:   time in minutes; DIFF = triangular - linear\n\n\n\n\nResponse time (in minutes) for the LINEAR graph (n = 316) range from 3.92 to 23.06 with a mean time of (M = 9.2, SD = 2.53).\nResponse time (in minutes) for the TRIANGULAR graph (n = 316) range from 3.14 to 26.82 with a mean time of (M = 10.85, SD = 3.28).\nResponse time (in minutes) across the ENTIRE TASK (n = 316) range from 21.91 to 66.12 with a mean time of (M = 40.42, SD = 8.54).\nDifference in response time (in minutes) (difference between TRIANGULAR - LINEAR) for each participant (n = 316) range from -12.66 to 12.95 with a mean difference in time of (M = -1.64, SD = 3.09). (note: negative difference scores indicate the participant performed faster on the linear block than the triangular block.)\n\n\nCODE\n#DATA SETUP\nlong_times <- df_subjects %>% dplyr::select(subject,pretty_condition,order,lm_scenarios,tm_scenarios, LM_T_M, TM_T_M) %>% pivot_longer(\n  cols = ends_with(\"M\"),\n  names_to = \"graph\",\n  values_to = \"time\") %>% mutate(\n    graph = recode(graph, \"LM_T_M\" = \"Linear Graph\", \"TM_T_M\" = \"Triangular Graph\")\n  )\n\n#DISTRIBUTION OF SCORES BY GRAPH\nstats <- favstats(time~graph, data = long_times)\ngf_dhistogram(~time, fill = ~graph, binwidth = 0.5,data = long_times) %>%\n  gf_vline(xintercept = ~mean, color = ~graph, data = stats) %>%\n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(~ graph) +\n  labs( title = \"Distribution of Response Time\",\n        subtitle =\"Performance on Linear Graph is faster than Triangular\",\n        x = \"Block Score (# correct)\", y = \"number of subjects\") +\n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(long_times, aes(x = graph, y = time,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = time),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = time, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Response Time by Graph \",\n    x = \"Condition\", y = \"Response Time (minutes)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nCODE\n#DISTRIBUTION OF TIME BY GRAPH\nstats <- favstats(time ~ pretty_condition+graph, data = long_times)\ngf_dhistogram(~time, fill = ~pretty_condition, binwidth = 0.5,data = long_times) %>% \n  gf_dens(color = ~pretty_condition) %>%  \n  gf_facet_grid(pretty_condition ~ graph) +\n  labs( title = \"Distribution of Response Time (by Condition)\",\n        subtitle =\"\",\n        x = \"Response Time (minutes)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(long_times, aes(x = graph, y = time,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = time),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = time, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~pretty_condition) + labs( \n    title = \"Distribution of Response Time by Graph \",\n    x = \"Condition\", y = \"Response Time (minutes)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nCODE\n#DISTRIBUTION OF TIMES BY GRAPH\ngf_dhistogram(~time, fill = ~graph, binwidth = 0.5,data = long_times) %>% \n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(graph~order) +\n  labs( title = \"Distribution of Response Time (by Order)\",\n        subtitle =\"\",\n        x = \"Response Time (minutes)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(long_times, aes(x = graph, y = time,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = time),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = time, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~order) + labs( \n    title = \"Distribution of Response Time (by Order)\",\n    x = \"\", y = \"Response Time (minutes)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nCODE\n#DISTRIBUTION OF SCORES BY GRAPH\ngf_dhistogram(~time, fill = ~graph, binwidth = 0.5,data = long_times) %>% \n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(graph~tm_scenarios) +\n  labs( title = \"Distribution of Response Time (by Scenario)\",\n        subtitle =\"\",\n        x = \"Response Time (minutes)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(long_times, aes(x = graph, y = time,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = time),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = time, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~tm_scenarios) + labs( \n    title = \"Distribution of Response Time (by Scenario) \",\n    x = \"TM Scenario\", y = \"Respone Time (minutes)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nCODE\n#DIFFERENCE TIME BY SUBJECT\ngf_line(time~graph, group=~subject, color = ~order, data = long_times) %>% \n  gf_facet_grid(order~pretty_condition) + \n  labs(title = \"Response Times by Condition\") + easy_remove_legend()\n\n\n\n\n\nCODE\n#DISTRIBUTION OF SCORES BY GRAPH\ngf_dhistogram(~DIFF_T_M, fill = ~pretty_condition, binwidth = 0.5,data = df_subjects) %>% \n  # gf_dens(color = ~graph) %>%  \n  gf_facet_grid(order~pretty_condition) +\n  labs( title = \"Block Time Difference (by Condition)\",\n        subtitle =\"\",\n        x = \"Difference Time (Triangular - Linear)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\n\n\nTime on Item\n\n\nCODE\ntitle = \"Descriptive Statistics of Item Response Time by Block\"\ntime.stats <- rbind(\n  \"linear.block\"= df_items %>% filter(graph == \"linear\") %>% dplyr::select(rt_sec) %>% unlist() %>% favstats(),\n  \"triangular.block\" = df_items %>%  filter(graph == \"triangular\") %>% dplyr::select(rt_sec) %>% unlist() %>% favstats()\n)\n\ntime.stats %>% kbl (caption = title) %>% kable_classic() %>%\n  footnote(general = \"time in minutes; DIFF = triangular - linear\",\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nDescriptive Statistics of Item Response Time by Block\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    linear.block \n    4 \n    21 \n    31 \n    45 \n    302 \n    36.8 \n    24.2 \n    4740 \n    0 \n  \n  \n    triangular.block \n    2 \n    23 \n    36 \n    55 \n    401 \n    43.4 \n    30.8 \n    4739 \n    0 \n  \n\n\nNote:   time in minutes; DIFF = triangular - linear\n\n\n\n\nItem Response time (in seconds) for the LINEAR graph (n = 4740) range from 4 to 302 with a mean time of (M = 36.81, SD = 24.21).\nItem Response time (in seconds) for the TRIANGULAR graph (n = 4739) range from 2 to 401 with a mean time of (M = 43.38, SD = 30.83).\n\n\nCODE\n#DISTRIBUTION OF SCORES BY GRAPH\nstats <- favstats(rt_sec~graph, data = df)\ngf_dhistogram(~rt_sec, fill = ~graph, binwidth = 0.5,data = df) %>%\n  gf_vline(xintercept = ~mean, color = ~graph, data = stats) %>%\n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(~ graph) +\n  labs( title = \"Distribution of Response Time\",\n        subtitle =\"Performance on Linear Graph is faster than Triangular\",\n        x = \"Block Score (# correct)\", y = \"number of subjects\") +\n  easy_remove_legend()\n\n\nWarning: Removed 1 rows containing missing values (geom_vline).\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df, aes(x = graph, y = rt_sec,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = rt_sec),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = rt_sec, color = graph),\n    size = 1.3,\n    alpha = .05,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Item Response Time by Graph \",\n    x = \"Condition\", y = \"Response Time (seconds)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nCODE\n#DISTRIBUTION OF TIME BY GRAPH\nstats <- favstats(rt_sec ~ pretty_condition+graph, data = df)\ngf_dhistogram(~rt_sec, fill = ~pretty_condition, binwidth = 0.5,data = df) %>% \n  gf_dens(color = ~pretty_condition) %>%  \n  gf_facet_grid(pretty_condition ~ graph) +\n  labs( title = \"Distribution of Item Response Time (by Condition)\",\n        subtitle =\"\",\n        x = \"Response Time (seconds)\", y = \"proportion of items\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df, aes(x = graph, y = rt_sec,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = rt_sec),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = rt_sec, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~pretty_condition) + labs( \n    title = \"Distribution of Item Response Time by Graph \",\n    x = \"Condition\", y = \"Response Time (seconds)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nCODE\n#DISTRIBUTION OF TIMES BY GRAPH\ngf_dhistogram(~rt_sec, fill = ~graph, binwidth = 0.5,data = df) %>% \n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(graph~order) +\n  labs( title = \"Distribution of Item Response Time (by Order)\",\n        subtitle =\"\",\n        x = \"Item Response Time (sec)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df, aes(x = graph, y = rt_sec,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = rt_sec),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = rt_sec, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~order) + labs( \n    title = \"Distribution of Item Response Time (by Order)\",\n    x = \"\", y = \"Response Time (seconds)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nCODE\n#DISTRIBUTION OF SCORES BY GRAPH\ngf_dhistogram(~rt_sec, fill = ~graph, binwidth = 0.5,data = df) %>% \n  gf_dens(color = ~graph) %>%  \n  gf_facet_grid(graph~scenario) +\n  labs( title = \"Distribution of Item Response Time (by Scenario)\",\n        subtitle =\"\",\n        x = \"Response Time (seconds)\", y = \"number of subjects\") + \n  easy_remove_legend()\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df, aes(x = graph, y = rt_sec,\n                        fill = graph) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = rt_sec),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=graph, y = rt_sec, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + \n  facet_wrap(~scenario) + labs( \n    title = \"Distribution of Item Response Time (by Scenario) \",\n    x = \"TM Scenario\", y = \"Item Response Time (seconds)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")"
  },
  {
    "objectID": "analysis/SGC2/3_sgc2_description.html#drawing-task",
    "href": "analysis/SGC2/3_sgc2_description.html#drawing-task",
    "title": "2  Description",
    "section": "DRAWING TASK",
    "text": "DRAWING TASK\nFinally, we explore the distribution of graph types produced by participants during the graph drawing task.\n\n\nCODE\ngf_props(~draw_type, data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Type of Graph drawn by Participant\"\n  )"
  },
  {
    "objectID": "analysis/SGC2/3_sgc2_description.html#exploring-relationships",
    "href": "analysis/SGC2/3_sgc2_description.html#exploring-relationships",
    "title": "2  Description",
    "section": "EXPLORING RELATIONSHIPS",
    "text": "EXPLORING RELATIONSHIPS\n\nBlock Accuracy\n\n\nCODE\n#SCATTERPLOT \ngf_jitter( linear_score ~ triangular_score, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Relationship between Linear and Triangular Block Scores\",\n    subtitle = \"\", \n    x = \"Linear Score\", y = \"Triangular Score\"\n  ) + easy_remove_legend()\n\n\n\n\n\n\n\nTime + Accuracy\n\n\nCODE\nq.stats <- df %>%  dplyr::group_by(graph, q, pretty_condition, score) %>% dplyr::summarise(\n  m = mean(rt_sec),\n  sd = sd(rt_sec),\n  sd = tidyr::replace_na(sd,0),\n  lo = m-sd/2,\n  hi = m+sd/2,\n  group = paste(pretty_condition,\"-\",score)\n)\n\ngf_line( m ~ q, group = ~group,  color = ~score, data = q.stats) %>% \n  gf_point() %>% \n  gf_ribbon(lo+hi~q) %>% \n  gf_facet_grid(graph~pretty_condition) + scale_color_manual(values=c(\"red\",\"green\")) + \n  labs(title = \"Average Item Response Time by Absolute Score\",\n       subtitle = \"\",\n       x = \"Question\", y = \"Averate Item Response Time\", color=\"Correct Response\")\n\n\n\n\n\nCODE\n#GGDIST LINERIBBON\ndf %>%\n  ggplot(aes(y = rt_sec, x = q,  fill = pretty_condition)) +\n  stat_lineribbon(alpha = 1/4, point_interval = \"mean_qi\") + facet_grid(graph~pretty_condition)+labs(title = \"Average Item Response Time by Absolute Score\",\n       subtitle = \"\",\n       x = \"Question\", y = \"Averate Item Response Time\", color=\"Correct Response\")"
  },
  {
    "objectID": "analysis/SGC2/3_sgc2_description.html#resources",
    "href": "analysis/SGC2/3_sgc2_description.html#resources",
    "title": "2  Description",
    "section": "RESOURCES",
    "text": "RESOURCES\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] forcats_0.5.1      stringr_1.4.0      purrr_0.3.4        readr_2.1.2       \n [5] tidyr_1.2.0        tibble_3.1.7       tidyverse_1.3.1    performance_0.9.1 \n [9] fitdistrplus_1.1-8 MASS_7.3-57        multimode_1.5      ggeasy_0.1.3      \n[13] ggdist_3.1.1       ggpubr_0.4.0       vcd_1.4-10         kableExtra_1.3.4  \n[17] mosaic_1.8.3       ggridges_0.5.3     mosaicData_0.20.2  ggformula_0.10.1  \n[21] ggstance_0.3.5     dplyr_1.0.9        Matrix_1.4-1       Hmisc_4.7-0       \n[25] ggplot2_3.3.6      Formula_1.2-4      survival_3.3-1     lattice_0.20-45   \n\nloaded via a namespace (and not attached):\n [1] colorspace_2.0-3     ggsignif_0.6.3       ellipsis_0.3.2      \n [4] mclust_5.4.10        leaflet_2.1.1        htmlTable_2.4.0     \n [7] fs_1.5.2             base64enc_0.1-3      ggdendro_0.1.23     \n[10] rstudioapi_0.13      farver_2.1.0         ggrepel_0.9.1       \n[13] lubridate_1.8.0      mvtnorm_1.1-3        fansi_1.0.3         \n[16] xml2_1.3.3           splines_4.2.1        rootSolve_1.8.2.3   \n[19] knitr_1.39           polyclip_1.10-0      jsonlite_1.8.0      \n[22] broom_0.8.0          dbplyr_2.2.1         cluster_2.1.3       \n[25] png_0.1-7            ggforce_0.3.3        compiler_4.2.1      \n[28] httr_1.4.3           backports_1.4.1      assertthat_0.2.1    \n[31] fastmap_1.1.0        cli_3.3.0            tweenr_1.0.2        \n[34] htmltools_0.5.2      tools_4.2.1          gtable_0.3.0        \n[37] glue_1.6.2           Rcpp_1.0.8.3         carData_3.0-5       \n[40] cellranger_1.1.0     vctrs_0.4.1          svglite_2.1.0       \n[43] crosstalk_1.2.0      insight_0.18.0       lmtest_0.9-40       \n[46] xfun_0.31            rvest_1.0.2          lifecycle_1.0.1     \n[49] mosaicCore_0.9.0     rstatix_0.7.0        zoo_1.8-10          \n[52] scales_1.2.0         hms_1.1.1            RColorBrewer_1.1-3  \n[55] yaml_2.3.5           gridExtra_2.3        labelled_2.9.1      \n[58] rpart_4.1.16         latticeExtra_0.6-29  stringi_1.7.6       \n[61] highr_0.9            checkmate_2.1.0      rlang_1.0.3         \n[64] pkgconfig_2.0.3      systemfonts_1.0.4    distributional_0.3.0\n[67] pracma_2.3.8         evaluate_0.15        labeling_0.4.2      \n[70] ks_1.13.5            htmlwidgets_1.5.4    tidyselect_1.1.2    \n[73] plyr_1.8.7           magrittr_2.0.3       R6_2.5.1            \n[76] generics_0.1.2       DBI_1.1.3            pillar_1.7.0        \n[79] haven_2.5.0          foreign_0.8-82       withr_2.5.0         \n[82] abind_1.4-5          nnet_7.3-17          modelr_0.1.8        \n[85] crayon_1.5.1         car_3.1-0            KernSmooth_2.23-20  \n[88] utf8_1.2.2           tzdb_0.3.0           rmarkdown_2.14      \n[91] jpeg_0.1-9           readxl_1.4.0         data.table_1.14.2   \n[94] reprex_2.0.1         diptest_0.76-0       digest_0.6.29       \n[97] webshot_0.5.3        munsell_0.5.0        viridisLite_0.4.0"
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#todo",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#todo",
    "title": "3  Hypothesis Testing",
    "section": "TODO",
    "text": "TODO\nQ3 looks nondiscriminant perhaps remove this from analysis\nThe purpose of this notebook is test the hypotheses that determined the design of the SGC2 study.\n(The need for scaffolding: ) - (H1) Scaffolding will affect performance on the LM graph, because readers already understand its conventional coordinate system.\n\n(H2) Because the TM graph is unconventional, it will require scaffolding. In its absence, readers will perform significantly better with the LM than the TM.\n\nThe efficacy of scaffolding: - (H3) Learners with (any form of) scaffolding will perform better with the TM than LM (replication of Qiang et. al)\nOrder as scaffold\n\n(H4) Learners who solve problems with the LM graph first will perform better on the TM (relative to TM-first learners) as their attention will be drawn to the salient differences between the graph types.\n\n\n\nCODE\n#UTILITIES\nlibrary(Hmisc) # %nin% operator\nlibrary(broom) #tidy model output\nlibrary(broom.mixed) #tidy mixed  models\nlibrary(mosaic) #favstats\nlibrary(svglite) #saving plots as svg\nlibrary(distributional)\n\n#VISUALIZATION\n# library(ggpubr) #arrange plots\n# library(cowplot) #arrange shift function plots\nlibrary(ggformula) #easy graphs\n# # library(vcd) #mosaic plots\n# # library(vcdExtra) #mosaic plots\nlibrary(kableExtra) #printing tables\nlibrary(sjPlot) #visualize model coefficients\nlibrary(ggdist) #uncertainty viz\nlibrary(modelr) #needed for ggdist\nlibrary(gghalves) # plots. in half\nlibrary(ggbeeswarm) # violin plot stuffs\nlibrary(statsExpressions)\nlibrary(ggstatsplot) #plots with stats\nlibrary(modelsummary) #latex tables for models!\nlibrary(ggeasy) #shortcuts \n\n#MODELLING\n# library(rstatix) #helpful testing functions incl wilcoxon, etc\nlibrary(report) #easystats reporting\nlibrary(see) #easystats visualization\nlibrary(performance) #easystats model diagnostics\nlibrary(parameters) #easystats model summary and vis\n# library(qqplotr) #confint on qq plot\n# library(gmodels) #contingency table and CHISQR\n# library(equatiomatic) #extract model equation\n# library(pscl) #zeroinfl / hurdle models \nlibrary(lme4) #mixed effects models\nlibrary(lmerTest) #for CIs in glmer\nlibrary(merTools) #predictInterval\n# library(ggeffects) #visualization log regr models\n#MULTINOMIAL \nlibrary(nnet) #multinomial logistic regression [not mixed] #no p values\nlibrary(mclogit) #frequentist mixed multinomial logistic regression [mblogit] #gives p values\n#BAYESIAN\nlibrary(cmdstanr) #executing stan\nlibrary(brms) #bayesian mixed multinomials [+ other bayesian reg models]\nlibrary(bayestestR) \nlibrary(tidybayes)\nlibrary(posterior)\n\nlibrary(tidyverse) #ALL THE THINGS\n\n#OUTPUT OPTIONS\nlibrary(dplyr, warn.conflicts = FALSE)\noptions(dplyr.summarise.inform = FALSE)\noptions(ggplot2.summarise.inform = FALSE)\noptions(scipen=1, digits=3)\n\n#GRAPH THEMEING\n# theme_set(theme_minimal()) \n\n# Custom ggplot theme to make pretty plots\n# Get the font at https://fonts.google.com/specimen/Barlow+Semi+Condensed\ntheme_clean <- function() {\n  theme_minimal(base_family = \"Barlow Semi Condensed\") +\n    theme(panel.grid.minor = element_blank(),\n          plot.title = element_text(family = \"BarlowSemiCondensed-Bold\"),\n          axis.title = element_text(family = \"BarlowSemiCondensed-Medium\"),\n          strip.text = element_text(family = \"BarlowSemiCondensed-Bold\",\n                                    size = rel(1), hjust = 0),\n          strip.background = element_rect(fill = \"grey80\", color = NA))\n}\n\nset_theme(base = theme_clean())\n\n\nResearch Questions\nIn SGC2 we compare learner performance on the linear and triangular model graphs by testing the effectiveness of 4 scaffolds and by seeking to replicate the Qiang et.al (2014) finding that after 20 minutes of video training, students perform faster and more accurately with the unconventional TM than the conventional Linear Model (LM). Will our participants show similar performance on the TM with scaffolds rather than formal instruction? Further, will engagement with the TM in a reading task be sufficient for students to reproduce the graph in a subsequent drawing task?\nHypotheses\n\nLearners without scaffolding (control) will perform better with the LM than TM\nLearners with (any form of) scaffolding will perform better with the TM than LM (replication of [12]).\nBased on observations in Study One we expect that graph-order will act as a scaffold. Learners who solve problems with the LM graph first will perform better on the TM (relative to TM-first learners) as their attention will be drawn to the salient differences between the graphs.\n\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(mbp)\n\n#IMPORT DATA \ndf_items <- read_rds('analysis/SGC2/data/2-scored-data/sgc2_items.rds') %>% dplyr::select(\n  subject,\n  pretty_condition,\n  order,\n  scenario,\n  graph,\n  rt_sec,\n  block,\n  q_order, \n  q,\n  score\n) %>% \n  mutate( subject = as.factor(subject),\n          accuracy = as.factor(score),\n          order = recode_factor(order, \"TM-First\" = \"TM-First\", \"LM-First\"=\"LM-First\")) %>% \n  filter(block %nin% c(\"drawingTest\")) #discard drawing task questions (only two, not analyzing)\n\n\ndf_subjects <- read_rds('analysis/SGC2/data/2-scored-data/sgc2_participants.rds') %>% dplyr::select(\n  AGE, GENDER, \n  subject,\n  pretty_condition,\n  order, #order of graphs counterbalanced\n  lm_scenarios, #scenario for lm graph\n  tm_scenarios, #scenario for tm graph — counterbalanced with graphs\n  linear_score,\n  triangular_score,\n  score_diff, #triangular - linear \n  time_diff, #triangular time  - linear time\n  LM_T_M, #linear model time\n  TM_T_M, #traingular model time\n  DT_T_M, #drawing task time\n  draw_type,\n  ls_n, #linear scaffold phase score\n  lt_n, #linear test phase score\n  ts_n, #tri scaffold phase score\n  tt_n  #tri test phase score\n) %>%  mutate( subject = as.factor(subject),\n               order = recode_factor(order, \"TM-First\" = \"TM-First\", \"LM-First\"=\"LM-First\"),\n               total = linear_score + triangular_score)"
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#sample",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#sample",
    "title": "3  Hypothesis Testing",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\nData was collected in Spring 2017.\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Control\",\"Text:What\", \"Text:How\", \"Img:Static\", \"Img:Ixv\")\ntable(df_subjects$pretty_condition) \n\n\n\n   control  text:what   text:how img:static    img:ixv \n        61         59         66         62         68 \n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(AGE) %>% unlist() %>% favstats()\nsubject.stats$percent.male <- ((df_subjects %>% filter(GENDER==\"Male\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.female <- ((df_subjects %>% filter(GENDER==\"Female\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.other <- ((df_subjects %>% filter(GENDER %nin% c(\"Female\",\"Male\")) %>% count())/count(df_subjects))$n\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n     \n    17 \n    19 \n    20 \n    21 \n    33 \n    20.5 \n    2.2 \n    316 \n    0 \n    0.304 \n    0.69 \n    0.006 \n  \n\n\nNote:   Age in Years\n\n\n\n\nOverall 316 participants (30 % male, 69 % female, 1 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 17 - 33 years)."
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#shortcut",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#shortcut",
    "title": "3  Hypothesis Testing",
    "section": "SHORTCUT",
    "text": "SHORTCUT"
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#h1-the-utility-of-scaffolding-aka-linear-graph-x-condition",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#h1-the-utility-of-scaffolding-aka-linear-graph-x-condition",
    "title": "3  Hypothesis Testing",
    "section": "H1 | The Utility of Scaffolding (aka, Linear Graph x Condition)",
    "text": "H1 | The Utility of Scaffolding (aka, Linear Graph x Condition)\nDoes ACCURACY differ between scaffold conditions for the linear graph?\nHypothesis: Scaffolding does not improve performance overall, rather, it is only necessary to facilitate discovery of the triangular coordinate system. Thus, performance with the LM graph won’t differ by condition.\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\n#only control condition \ndf_s <- df_subjects \n\ndf_i <- df_items %>% filter(graph == \"linear\") \n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(order~graph) + \n   labs(title = \"Linear Graph Accuracy by Condition and Order\",\n       x = \"Condition\",\n       subtitle=\"Across graph orders, Accuracy is comparable across conditions.\")\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(scenario ~ graph) + \n   labs(title = \"Accuracy by Graph and Scenario\",\n       x = \"Condition\",\n       subtitle=\"Across graph scenarios, Accuracy is comparable across conditions.\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = score)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap( graph ~ q) +\n   labs(title = \"Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Accuracy differs by question, but is comparable across conditions\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\ngf_props(~linear_score,\n         fill = ~pretty_condition, data = df_subjects) %>%\n  gf_facet_grid(pretty_condition ~ order) +\n  labs(x = \"# Correct\",\n       y = \"proportion of subjects\",\n       title = \"Linear Graph Score by Condition and Order\",\n       subtitle = \"comprable across factors\") + \n  theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\ngf_props(~linear_score,\n         fill = ~pretty_condition, data = df_subjects) %>%\n  gf_facet_grid(pretty_condition~tm_scenarios) +\n  labs(x = \"# Correct\",\n       y = \"proportion of subjects\",\n       title = \"Linear Graph Score by Condition and Scenario\",\n       subtitle = \"comparable across factors\") + \n  theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n# ##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = linear_score,\n                        fill = pretty_condition) ) +\n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1,\n    point_colour = NA\n   ) +\n  geom_boxplot(\n    inherit.aes = TRUE, #supress fill\n    # mapping = aes(x=pretty_condition, y = score),\n    width = .15,\n    outlier.shape = NA\n  ) +\n  geom_point(\n    inherit.aes = TRUE, #supress fill\n    # mapping = aes(x=graph, y = score, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter(\n      seed = 1, width = .05\n  )) + labs(\n    title = \"Distribution of scores on LINEAR graph\",\n    x = \"Condition\", y = \"Score (# correct)\") +\n  theme(legend.position = \"blank\") +\n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\nVisualizations indicate it is likely that scores in the LM graph scores are stable across conditions (and orders and scenarios)\n\n\nDescribe\n\n\nCODE\nfavstats (linear_score ~ pretty_condition, data = df_subjects)\n\n\n  pretty_condition min    Q1 median Q3 max mean   sd  n missing\n1          control   2  9.00     11 13  15 11.0 2.33 61       0\n2        text:what   5  9.00     11 13  15 11.1 2.19 59       0\n3         text:how   6  9.25     11 13  15 10.9 2.13 66       0\n4       img:static   4 10.00     11 13  15 10.9 2.20 62       0\n5          img:ixv   5 10.00     11 13  14 10.9 1.89 68       0\n\n\n\n\nPresent\n\n\nCODE\n#PLOT PAIRED DATA\ng <- ggbetweenstats(\n  data = df_subjects,\n  x    = pretty_condition,\n  y    = linear_score, \n  type  = \"nonparametric\", \n  plot.type = \"boxviolin\",\n  title = \"Study 2 | Linear Graph Accuracy is consistent across conditions\",\n  xlab = \"Scaffold Condition\", ylab = \"Linear Graph Score (# questions correct)\",\n  centrality.point.args = list(fill=\"black\", size = 3)\n) + scale_color_manual(values = paletteer::paletteer_d(\"awtools::a_palette\", 5)) + \n  theme_clean() + theme(legend.position = \"none\")\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\nCODE\ng\n\n\n\n\n\nCODE\n# ggsave(g, filename = \"figures/SGC2_linearscores.png\", width = 6, height = 4)\n#ggsave(g, filename = \"figures/SGC2_linearscores.svg\", width = 6, height = 4)\n\n\n\n\nTest\n\n\nCODE\nkruskal.test(df_s$linear_score, df_s$pretty_condition)\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  df_s$linear_score and df_s$pretty_condition\nKruskal-Wallis chi-squared = 0.4, df = 4, p-value = 1\n\n\nReported\nTo test hypothesis that scaffolding is not universally helpful, but rather is only necessary to facilitate discovery of the triangular coordinate system, we compare performance across explicit scaffold conditions on just the linear model graph (one of the two experimental blocks). A Kruskal-Wallis rank sum test supports this hypothesis, indicating the median linear graph score did not differ by scaffold condition (\\(\\chi(4) = 0.4, p > 0.1\\)).\nNext we check that this conclusion holds across the graph-order and scenario-order counterbalanced factors.\n\n\nCODE\n#PLOT PAIRED DATA\ngrouped_ggbetweenstats(\n  data = df_subjects,\n  grouping.var = order,\n  x    = pretty_condition,\n  y    = linear_score, \n  type  = \"parametric\", #parametric, robust, bayes\n  annotation.args = list(title = \"Linear score is consistent across conditions and graph order\"),\n)\n\n\n\n\n\nCODE\n#PLOT PAIRED DATA\ngrouped_ggbetweenstats(\n  data = df_subjects,\n  grouping.var = tm_scenarios,\n  x    = pretty_condition,\n  y    = linear_score, \n  type  = \"parametric\", #parametric, robust, bayes\n  annotation.args = list(title = \"Linear score is consistent across conditions and graph order\"),\n)\n\n\n\n\n\nAcross both scenario and graph orders, there is no differential effect of condition on linear graph score.\n\n\nLogistic Regression\n\nVisualize\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n   labs(title = \"Linear Graph Accuracy by Condition\",\n       x = \"Condition\",\n       subtitle=\"Probability of correct response consistent across conditions\")\n\n\n\n\n\n\n\nFit Model\n\n\nCODE\n#empty model\nm.0 <- glm(accuracy ~ 1, family = \"binomial\", data = df_i)\n\n#condition model\nm.C <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q), family = \"binomial\", data = df_i)\n# summary(m.C)\n# car::Anova(m.C)\n\n\n\n\nDescribe\n\n\nCODE\n# best model\nm <- m.C\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ pretty_condition + (1 | subject) + (1 | q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n    5341     5386    -2664     5327     4733 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-4.139 -1.131  0.526  0.643  1.283 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 0.226    0.475   \n q       (Intercept) 0.354    0.595   \nNumber of obs: 4740, groups:  subject, 316; q, 15\n\nFixed effects:\n                           Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  1.1367     0.1834    6.20  5.7e-10 ***\npretty_conditiontext:what    0.0304     0.1411    0.22     0.83    \npretty_conditiontext:how    -0.0355     0.1367   -0.26     0.79    \npretty_conditionimg:static  -0.0256     0.1389   -0.18     0.85    \npretty_conditionimg:ixv     -0.0378     0.1356   -0.28     0.78    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n                 (Intr) prtty_cndtntxt:w prtty_cndtntxt:h prtty_cndtnmg:s\nprtty_cndtntxt:w -0.377                                                  \nprtty_cndtntxt:h -0.390  0.506                                           \nprtty_cndtnmg:s  -0.383  0.498            0.514                          \nprtty_cndtnmg:x  -0.393  0.510            0.526            0.518         \n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=2) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n                 Chisq Df Pr(>Chisq)\npretty_condition  0.35  4       0.99\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 7 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…   1.14       0.183     6.20   5.67e-10    0.777     1.50 \n2 fixed    <NA>  pret…   0.0304     0.141     0.216  8.29e- 1   -0.246     0.307\n3 fixed    <NA>  pret…  -0.0355     0.137    -0.260  7.95e- 1   -0.303     0.232\n4 fixed    <NA>  pret…  -0.0256     0.139    -0.184  8.54e- 1   -0.298     0.247\n5 fixed    <NA>  pret…  -0.0378     0.136    -0.279  7.80e- 1   -0.304     0.228\n6 ran_pars subj… sd__…   0.475     NA        NA     NA          NA        NA    \n7 ran_pars q     sd__…   0.595     NA        NA     NA          NA        NA    \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 7 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…    3.12      0.571     6.20   5.67e-10    2.18       4.46\n2 fixed    <NA>  pret…    1.03      0.145     0.216  8.29e- 1    0.782      1.36\n3 fixed    <NA>  pret…    0.965     0.132    -0.260  7.95e- 1    0.738      1.26\n4 fixed    <NA>  pret…    0.975     0.135    -0.184  8.54e- 1    0.742      1.28\n5 fixed    <NA>  pret…    0.963     0.131    -0.279  7.80e- 1    0.738      1.26\n6 ran_pars subj… sd__…    0.475    NA        NA     NA          NA         NA   \n7 ran_pars q     sd__…    0.595    NA        NA     NA          NA         NA   \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\nnewdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n(p <- preds %>% \n  dplyr::select(pretty_condition, preds) %>%\n  group_by(pretty_condition) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 5 × 5\n  pretty_condition median      se   lwr   upr\n  <fct>             <dbl>   <dbl> <dbl> <dbl>\n1 control           0.727 0.00343 0.720 0.733\n2 text:what         0.735 0.00336 0.728 0.742\n3 text:how          0.719 0.00324 0.713 0.726\n4 img:static        0.721 0.00337 0.714 0.727\n5 img:ixv           0.719 0.00309 0.713 0.725\n\n\n\n\nINFERENCE\nA Mixed Logistic Regression model including CONDITION as a fixed effect and SUBJECT and QUESTION as random effects indicates that the odds of a correct response in the linear graph task does not differ by scaffold condition, \\(\\chi(4) = 0.35, p > 0.1\\).\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = FALSE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n#ONLY FOR BAYESIAN VERSION\n# result <- rope(m)\n# plot(result)\n# \n# result <- pd(m)\n# plot(result)\n\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")  \n\n\n$pretty_condition\n\n\n\n\n\nCODE\n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n3.12\n2.18 – 4.46\n<0.001\n\n\npretty conditiontext *what\n1.03\n0.78 – 1.36\n0.829\n\n\npretty conditiontext *how\n0.97\n0.74 – 1.26\n0.795\n\n\npretty conditionimg *static\n0.97\n0.74 – 1.28\n0.854\n\n\npretty conditionimg * ixv\n0.96\n0.74 – 1.26\n0.780\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n0.23\n\n\nτ00 q\n0.35\n\n\nICC\n0.15\n\n\nN subject\n316\n\n\nN q\n15\n\nObservations\n4740\n\n\nMarginal R2 / Conditional R2\n0.000 / 0.150\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#h1-the-need-for-scaffolding-aka-linear-vs-triangular-in-control",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#h1-the-need-for-scaffolding-aka-linear-vs-triangular-in-control",
    "title": "3  Hypothesis Testing",
    "section": "H1 | The Need for Scaffolding (aka, Linear VS Triangular in CONTROL)",
    "text": "H1 | The Need for Scaffolding (aka, Linear VS Triangular in CONTROL)\nDoes ACCURACY differ between linear and triangular graphs in the control condition?\nHypothesis The TM graph is not discoverable and requires scaffolding for correct interpretation. We predict that learners without scaffolding (the control condition) will perform better with the LM than TM\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\n#only control condition \ndf_s <- df_subjects %>% filter(pretty_condition == \"control\")\n\ndf_long <- df_s %>% dplyr::select(subject,pretty_condition,order,lm_scenarios,tm_scenarios,linear_score, triangular_score) %>% pivot_longer(\n  cols = ends_with(\"score\"),\n  names_to = \"graph\",\n  values_to = \"score\"\n)\n\ndf_i <- df_items %>% filter(pretty_condition == \"control\") %>% filter(q %nin% c(3))\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(order~graph) + \n   labs(title = \"Accuracy by Graph and Order\",\n       x = \"Condition\",\n       subtitle=\"Across graph orders, Accuracy is higher on the LINEAR than TRIANGULAR graph.\")\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(scenario ~ graph) + \n   labs(title = \"Accuracy by Graph and Scenario\",\n       x = \"Condition\",\n       subtitle=\"Accuracy is higher on the LINEAR than TRIANGULAR graph; much lower for TM = AXIS scenario.\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = score)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap( graph ~ q) +\n   labs(title = \"Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\ngf_props(~score,\n         fill = ~graph, data = df_long) %>%\n  gf_facet_grid(order ~ graph) +\n  labs(x = \"# Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score by Graph and Order\",\n       subtitle = \"\") + \n  theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\ngf_props(~score,\n         fill = ~graph, data = df_long) %>%\n  gf_facet_grid(tm_scenarios ~ graph) +\n  labs(x = \"# Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score by Graph and TM Scenario\",\n       subtitle = \"TM Scores are different by Scenario\") + \n  theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n# ##VERTICAL RAINCLOUD USING GGDISTR\n# ggplot(df_long, aes(x = graph, y = score,\n#                         fill = graph) ) + \n#   ggdist::stat_halfeye(\n#     side = \"left\",\n#     justification = 1.1,\n#     width = 1, \n#     point_colour = NA\n#    ) + \n#   geom_boxplot(\n#     inherit.aes = FALSE, #supress fill\n#     mapping = aes(x=graph, y = score),\n#     width = .15, \n#     outlier.shape = NA\n#   ) + \n#   geom_point(\n#     inherit.aes = FALSE, #supress fill\n#     mapping = aes(x=graph, y = score, color = graph),\n#     size = 1.3,\n#     alpha = .3,\n#     position = position_jitter( \n#       seed = 1, width = .05\n#   )) + labs( \n#     title = \"Distribution of scores in CONTROL condition\", \n#     x = \"Condition\", y = \"Score (# correct)\") +\n#   theme(legend.position = \"blank\") + \n#   coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n#DISTRIBUTION OF SCORE\ngf_dhistogram(~score_diff, data = df_s) %>% \n  gf_facet_grid(tm_scenarios ~ order) +\n  xlim(-13,5) + \n  labs(title = \"Distribution of paired score differences in CONTROL condition\") + \n  easy_remove_legend() \n\n\nWarning: Removed 8 rows containing missing values (geom_bar).\n\n\n\n\n\nVisualizations indicate it is likely that scores in the LM are infact higher than the TM in the control condition.\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy by Block (CONTROL Condition)\"\nabs.stats <- rbind(\n  \"linear.block\"= df_s %>% dplyr::select(linear_score) %>% unlist() %>% favstats(),\n  \"triangular.block\" = df_s %>% dplyr::select(triangular_score) %>% unlist() %>% favstats(),\n  \"block.differences\" = df_s %>% dplyr::select(score_diff) %>% unlist() %>% favstats()\n)\n\nabs.stats %>% kbl (caption = title) %>% kable_classic() %>%\n  footnote(general = \"block # questions correct [0,15]; DIFF = triangular - linear\",\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nDescriptive Statistics of Response Accuracy by Block (CONTROL Condition)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    linear.block \n    2 \n    9 \n    11 \n    13 \n    15 \n    10.98 \n    2.33 \n    61 \n    0 \n  \n  \n    triangular.block \n    0 \n    2 \n    6 \n    11 \n    14 \n    6.90 \n    4.51 \n    61 \n    0 \n  \n  \n    block.differences \n    -13 \n    -8 \n    -4 \n    -1 \n    5 \n    -4.08 \n    4.51 \n    61 \n    0 \n  \n\n\nNote:   block # questions correct [0,15]; DIFF = triangular - linear\n\n\n\n\nFor participants in the CONTROL condition, total absolute scores for the LINEAR graph (n = 61) range from 2 to 15 with a mean score of (M = 10.98, SD = 2.33).\nFor participants in the CONTROL condition, total absolute scores for the TRIANGULAR graph (n = 61) range from 0 to 14 with a mean score of (M = 6.9, SD = 4.51).\nVisual inspection of the distribution of scores for each block reveal that scores in on the triangular task were more variant than those in the linear graph. On average, scores on the triangular block were lower than those on the linear block.\n\n\nTest\n\n\nCODE\n#PLOT PAIRED DATA\ng <- ggwithinstats(\n  data = df_long,\n  x    = graph,\n  y    = score, \n  type  = \"nonparametric\", \n  plot.type = \"box\",\n  title = \"Study 2 | Without scaffolding, higher accuracy with Linear Model\",\n  xlab = \"Graph\", ylab = \"Graph Reading Score (# questions correct)\",\n  centrality.point.args = list(fill=\"black\", size = 3)\n) + scale_color_manual(values = paletteer::paletteer_d(\"awtools::a_palette\", 2)) + \n  theme_clean() + theme(legend.position = \"none\")\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\nCODE\nggsave(g, filename = \"figures/SGC2_graphdifference.png\", width = 6, height = 4)\n# ggsave(g, filename = \"figures/SGC2_graphdifference.svg\", width = 6, height = 4)\n\n\n\nWILCOXON RANK SUM (Mann-Whitney Test) Non parametric alternative to t-test; compares median rather than mean by ranking data\nDoes not assume normality\nDoes not assume equal variance of samples (homogeneity of variance)\n\n\n\nCODE\n#WILCOXON RANK SUM PAIRED T-TEST\nw <- wilcox.test(df_s$linear_score, df_s$triangular_score, \n            paired = TRUE)\n            # alternative = \"greater\", conf.int = TRUE)\nw\n\n\n\n    Wilcoxon signed rank test with continuity correction\n\ndata:  df_s$linear_score and df_s$triangular_score\nV = 1490, p-value = 1e-07\nalternative hypothesis: true location shift is not equal to 0\n\n\nCODE\nreport(w)\n\n\nEffect sizes were labelled following Funder's (2019) recommendations.\n\nThe Wilcoxon signed rank test with continuity correction testing the difference in ranks between df_s$linear_score and df_s$triangular_score suggests that the effect is positive, statistically significant, and very large (W = 1490.00, p < .001; r (rank biserial) = 0.80, 95% CI [0.67, 0.88])\n\n\n\n\nCODE\n#PLOT PAIRED DATA\ngrouped_ggwithinstats(\n  grouping.var = order,\n  data = df_long,\n  x    = graph,\n  y    = score, \n  annotation.args = list(title = \"Linear is better than Triangular regardless of Order\"),\n  type  = \"nonparametric\" #parametric, robust, bayes\n) \n\n\n\n\n\nCODE\n#PLOT PAIRED DATA\ngrouped_ggwithinstats(\n  grouping.var = tm_scenarios,\n  data = df_long,\n  x    = graph,\n  y    = score, \n  type  = \"nonparametric\", #parametric, robust, bayes\n  annotation.args = list(title = \"Linear is better than Triangular regardless of [triangle model] Scenario\"),\n)\n\n\n\n\n\nThe Wilcoxon signed rank test confirms that (for subjects in the control condition) scores on the triangle graph were significantly lower than those in the linear graph block. This provides evidence in support of our hypothesis that the Triangular model graph (though computationally efficient) is in fact unconventional and lacking in discoverablility. It needs to be augmented with scaffolding in order to be correctly interpreted by novice readers.\n\n\nMIXED EFFECTS LOGISTIC REGRESSION\nFit mixed effects logistic regression model to test effect of GRAPH, ORDER, and SCENARIO on probability of correct response [just in the control condition]\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 28 #removed nondiscrim Q3\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$graph) && is.factor(df_i$score) && is.factor(df_i$order) && is.factor(df_i$scenario)\n\n\n[1] TRUE\n\n\nCODE\n#RECODE TRIANGULAR AS REFERENCE LEVEL \ndf_i <- df_i %>% mutate(\n  graph = recode_factor(graph, \"triangular\"=\"triangular\",\"linear\"=\"linear\")\n) \n\n## 1 | SETUP RANDOM INTERCEPT SUBJECT\n\n#:: EMPTY MODEL (baseline, no random effect)\nprint(\"Empty fixed model\")\n\n\n[1] \"Empty fixed model\"\n\n\nCODE\nm0 = glm(accuracy ~ 1, family = \"binomial\", data = df_i) \n# summary(m0)\n\n#:: RANDOM INTERCEPT SUBJECT\nprint(\"Subject intercept random model\")\n\n\n[1] \"Subject intercept random model\"\n\n\nCODE\nmm.rS <- glmer(accuracy ~ (1|subject), data = df_i, family = \"binomial\")\n# summary(mm.rS)\n\n# :: TEST random effect\npaste(\"AIC decreases w/ new model?\", m0$aic > AIC(logLik(mm.rS)))\n\n\n[1] \"AIC decreases w/ new model? TRUE\"\n\n\nCODE\ntest_lrt(m0,mm.rS) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName  |    Model | df | df_diff |   Chi2 |      p\n-------------------------------------------------\nm0    |      glm |  1 |         |        |       \nmm.rS | glmerMod |  2 |       1 | 118.61 | < .001\n\n\nCODE\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n# :: TEST random effect\npaste(\"AIC decreases w/ new model?\", AIC(logLik(mm.rS)) > AIC(logLik(mm.rSQ)))\n\n\n[1] \"AIC decreases w/ new model? TRUE\"\n\n\nCODE\ntest_lrt(mm.rS, mm.rSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\nSome of the nested models seem to be identical and probably only vary in\n  their random effects.\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff | Chi2 |     p\n-----------------------------------------------\nmm.rS  | glmerMod |  2 |         |      |      \nmm.rSQ | glmerMod |  3 |       1 | 2.69 | 0.101\n\n\nCODE\n## 2 | ADD FIXED EFFECT GRAPH\n\nprint(\"FIXED Condition + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.GrSQ <- glmer(accuracy ~ graph + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# car::Anova(mm.GrSQ) #main effect graph\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.GrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.GrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |   Chi2 |      p\n---------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |        |       \nmm.GrSQ | glmerMod |  4 |       1 | 178.38 | < .001\n\n\nCODE\n# NOT RELEVANT TO HYPOTHESIS \n# \n# ## 2 | ADD IXN GRAPH & ORDER EFFECT GRAPH ++ ORDER\n# \n# print(\"FIXED Graph + ORDER + Subject & Item random intercepts\")\n# mm.GOrSQ <- glmer(accuracy ~ graph * order + (1|subject) + (1|q) ,\n#                 data = df_i, family = \"binomial\")\n# # summary(mm.GOrSQ)\n# # car::Anova(mm.GOrSQ)\n# \n# paste(\"AIC decreases w/ new model\", AIC(logLik(mm.GrSQ)) > AIC(logLik(mm.GOrSQ)) )\n# test_lrt(mm.GrSQ,mm.GOrSQ) #same as anova(m0, m1, test = \"Chi\")\n# \n# \n# ## 2 | ADD FIXED EFFECT GRAPH + ORDER+ SCENARIO\n# \n# print(\"FIXED Graph * SCENARIO * ORDER + Subject & Item random intercepts\")\n# mm.GSOrSQ <- glmer(accuracy ~ graph*scenario*order + (1|subject) + (1|q) ,\n#                 data = df_i, family = \"binomial\",\n#                 control=glmerControl(optimizer=\"bobyqa\",\n#                                  optCtrl=list(maxfun=2e5)))\n# # summary(mm.GSOrSQ)\n# #car::Anova(mm.GSOrSQ)\n# \n# paste(\"AIC decreases w/ new model\", AIC(logLik(mm.GOrSQ)) > AIC(logLik(mm.GSOrSQ)) )\n# test_lrt(mm.GOrSQ,mm.GSOrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.GrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ graph + (1 | subject) + (1 | q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n    2033     2055    -1013     2025     1704 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-3.523 -0.718  0.365  0.736  2.611 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 0.7934   0.891   \n q       (Intercept) 0.0439   0.209   \nNumber of obs: 1708, groups:  subject, 61; q, 14\n\nFixed effects:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   -0.318      0.148   -2.15    0.031 *  \ngraphlinear    1.468      0.115   12.76   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr)\ngraphlinear -0.343\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=2) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n      Chisq Df Pr(>Chisq)    \ngraph   163  1     <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 4 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…   -0.318     0.148     -2.15  3.14e- 2   -0.608   -0.0284\n2 fixed    <NA>  grap…    1.47      0.115     12.8   2.90e-37    1.24     1.69  \n3 ran_pars subj… sd__…    0.891    NA         NA    NA          NA       NA     \n4 ran_pars q     sd__…    0.209    NA         NA    NA          NA       NA     \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 4 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…    0.727     0.108     -2.15  3.14e- 2    0.544     0.972\n2 fixed    <NA>  grap…    4.34      0.500     12.8   2.90e-37    3.47      5.44 \n3 ran_pars subj… sd__…    0.891    NA         NA    NA          NA        NA    \n4 ran_pars q     sd__…    0.209    NA         NA    NA          NA        NA    \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\nnewdata <- df_i %>% dplyr::select(graph, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n(p <- preds %>%\n  dplyr::select(graph, preds) %>%\n  group_by(graph) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 2 × 5\n  graph      median      se   lwr   upr\n  <fct>       <dbl>   <dbl> <dbl> <dbl>\n1 triangular  0.398 0.00612 0.386 0.410\n2 linear      0.741 0.00483 0.732 0.751\n\n\nCODE\n# #FROM merTools\n# #setup df \n# newdata <- df_i %>% dplyr::select(graph, order, scenario, subject, q)\n# #make predictions\n# preds <- predictInterval(m, newdata = newdata,\n#                               which = \"fixed\", #full, fixed or random for those only\n#                               type = \"probability\", #linear.prediction\n#                               stat = \"median\",\n#                               n.sims = 1000,\n#                               level = 0.80) #width of prediction interval\n# #join predictions to the new dataframe\n# preds <- cbind(newdata, preds)\n# #summarize\n# (summ_preds <- preds %>% \n#   dplyr::select(graph, scenario, order, fit, lwr, upr) %>% \n#   group_by(graph, scenario, order) %>% \n#   dplyr::summarise(\n#     median = median(fit),\n#     lower = median(lwr),\n#     upper = median(upr)\n#   )) \n\n\n\n\nInference TODO UPDATE\nWe fit a mixed logistic regression model predicting question-level accuracy by graph for only participants in the control condition (n = 61). The model included random intercepts for subject and question, and a fixed effect of GRAPH. The model implies that (with no scaffolding; in the control condition) the odds of a correct response on a linear-graph question are more than 4 times higher than the triangle graph, (\\(e^\\beta_1 = 4.34, 95 \\% CI [3.47, 5.44], p < 0.001\\))\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.73\n0.54 – 0.97\n0.031\n\n\ngraph [linear]\n4.34\n3.47 – 5.44\n<0.001\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n0.79\n\n\nτ00 q\n0.04\n\n\nICC\n0.20\n\n\nN subject\n61\n\n\nN q\n14\n\nObservations\n1708\n\n\nMarginal R2 / Conditional R2\n0.116 / 0.295\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n# \n# \n# \n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n#ONLY FOR BAYESIAN VERSION\n# result <- rope(m)\n# plot(result)\n# \n# result <- pd(m)\n# plot(result)\n\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")  \n\n\n$graph\n\n\n\n\n\nCODE\nplot_model(m, type = \"eff\")  \n\n\n$graph\n\n\n\n\n\nCODE\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n#TODO EMMEANS for the estimated marginal means OR USE IXN PLOT\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.73\n0.54 – 0.97\n0.031\n\n\ngraph [linear]\n4.34\n3.47 – 5.44\n<0.001\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n0.79\n\n\nτ00 q\n0.04\n\n\nICC\n0.20\n\n\nN subject\n61\n\n\nN q\n14\n\nObservations\n1708\n\n\nMarginal R2 / Conditional R2\n0.116 / 0.295\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#h3-the-effectiveness-of-scaffolding",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#h3-the-effectiveness-of-scaffolding",
    "title": "3  Hypothesis Testing",
    "section": "H3 | The Effectiveness of Scaffolding",
    "text": "H3 | The Effectiveness of Scaffolding\nHypothesis Qiang et. al found that the TM graph was more computationally efficient than the LM graph. We expect that for learners that do correctly interpret the graph, they will have lower response times for the TM vs. LM graph.\n\n!! USE THIS SCORE DIFFERENCE\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\ndf_s <- df_subjects %>% dplyr::select(total, triangular_score, score_diff, time_diff, subject, order, tm_scenarios, pretty_condition)\ndf_i <- df_items %>% filter(q %nin% c(3))\n\n\n\n\nVisualize\n\n\nCODE\n# Box plots\n# ++++++++++++++++++++\n# Plot weight by group and color by group\nlibrary(\"ggpubr\")\nggboxplot(df_s, x = \"pretty_condition\", y = \"score_diff\", \n          color = \"pretty_condition\", \n          # palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n          # order = c(\"ctrl\", \"trt1\", \"trt2\"),\n          title = \"DIFFERENCE IN GRAPH scores by Condition\",\n          ylab = \"TRI - LINEAR Score [-15,15]\", xlab = \"Condition\") +\n  geom_hline(yintercept = 0, color = \"black\") + \n  geom_jitter( aes(color = pretty_condition), width = 0.15, alpha = 0.5) +\n  ylim(-15,15) + \n  # facet_wrap(order~ tm_scenarios) +\n  easy_remove_legend() + theme_clean()\n\n\n\n\n\n\n\nCODE\nfavstats(score_diff ~ pretty_condition, data = df_s)\n\n\n  pretty_condition min Q1 median    Q3 max   mean   sd  n missing\n1          control -13 -8   -4.0 -1.00   5 -4.082 4.51 61       0\n2        text:what -12 -4   -2.0  0.00   4 -2.254 3.93 59       0\n3         text:how -11 -4   -2.0  1.00   4 -2.197 4.02 66       0\n4       img:static -11 -5   -1.0  0.75   4 -2.355 4.00 62       0\n5          img:ixv -12 -2    0.5  2.00   5 -0.221 3.23 68       0\n\n\n\n\nLINEAR REGRESSION [ SCORE diff ~ condition]\n\nFit Model\n\n\nCODE\n# empty model \nm0 <- lm( score_diff ~ 1, data = df_s)\n\n# CONDITION model \nm.C <- lm( score_diff ~ pretty_condition, data = df_s)\npaste(\"Condition model better fit than empty?\")\n\n\n[1] \"Condition model better fit than empty?\"\n\n\nCODE\ntest_lrt(m0,m.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName | Model | df | df_diff |  Chi2 |      p\n--------------------------------------------\nm0   |    lm |  2 |         |       |       \nm.C  |    lm |  6 |       4 | 31.10 | < .001\n\n\nCODE\n# car::Anova(m.C) #main effects condition\n\n# CONDITION + ORDER model \nm.CO <- lm( score_diff ~ pretty_condition*order, data = df_s)\npaste(\"Condition*Order model better fit than CONDITION?\")\n\n\n[1] \"Condition*Order model better fit than CONDITION?\"\n\n\nCODE\ntest_lrt(m.CO,m.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName | Model | df | df_diff |  Chi2 |     p\n-------------------------------------------\nm.CO |    lm | 11 |         |       |      \nm.C  |    lm |  6 |      -5 | 11.69 | 0.039\n\n\nCODE\n# car::Anova(m.CO) #main effects condition, order\n\n# CONDITION + ORDER + SCENARIO model \nm.C.O.S <- lm( score_diff ~ pretty_condition*tm_scenarios*order, data = df_s)\npaste(\"Condition*Order*Scenario model better fit than interactions model?\")\n\n\n[1] \"Condition*Order*Scenario model better fit than interactions model?\"\n\n\nCODE\ntest_lrt(m.C.O.S,m.CO)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName    | Model | df | df_diff |  Chi2 |      p\n-----------------------------------------------\nm.C.O.S |    lm | 21 |         |       |       \nm.CO    |    lm | 11 |     -10 | 40.05 | < .001\n\n\nCODE\n# car::Anova(m.COS, type = 2) #main effects condition, order scenario, scenario\n#no interactions were significant\n\n# #MAIN EFFECTS ONLY MODEL\nm.COS <- lm( score_diff ~ pretty_condition+order+tm_scenarios, data = df_s)\n# paste(\"Condition+Order+Scenario model better fit than interaction model?\")\ntest_lrt(m.C.O.S,m.COS)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName    | Model | df | df_diff |  Chi2 |     p\n----------------------------------------------\nm.C.O.S |    lm | 21 |         |       |      \nm.COS   |    lm |  8 |     -13 | 13.57 | 0.405\n\n\nThe best fitting model includes main effects CONDITION, ORDER and SCENARIO.\n\n\nDescribe\n\n\nCODE\n# best model\nm <- m.COS\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n\nCall:\nlm(formula = score_diff ~ pretty_condition + order + tm_scenarios, \n    data = df_s)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-10.326  -2.373   0.408   2.717   9.897 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                  -5.754      0.559  -10.29  < 2e-16 ***\npretty_conditiontext:what     2.037      0.682    2.99   0.0031 ** \npretty_conditiontext:how      1.923      0.662    2.90   0.0039 ** \npretty_conditionimg:static    1.780      0.672    2.65   0.0085 ** \npretty_conditionimg:ixv       4.080      0.659    6.19  1.9e-09 ***\norderLM-First                 0.857      0.420    2.04   0.0423 *  \ntm_scenarioslongmire          2.489      0.422    5.89  9.9e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.73 on 309 degrees of freedom\nMultiple R-squared:  0.193, Adjusted R-squared:  0.178 \nF-statistic: 12.3 on 6 and 309 DF,  p-value: 1.83e-12\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=2) #TYPE 3 SS FOR IXNS\n\n\nAnova Table (Type II tests)\n\nResponse: score_diff\n                 Sum Sq  Df F value  Pr(>F)    \npretty_condition    539   4    9.70 2.1e-07 ***\norder                58   1    4.16   0.042 *  \ntm_scenarios        483   1   34.73 9.9e-09 ***\nResiduals          4295 309                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: MANUAL ONE-SIDED SIGTEST \n#note: anova and chi square are always one-tailed, but that is independent of being one-sided\n#https://www.ibm.com/support/pages/can-one-get-one-tailed-tests-logistic-regression-dividing-significance-levels-half\n\n# one-sided (right tail) z test for B COEFFICIENT\n#SANITY CHECK 2-tailed test should match the model output\n#NOTE ... NEED TO DO THIS FOR _EACH_ COEFFICIENT\n# tt <- 2*pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,5))\n# ot <- pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"BUT we want a one  directional, null: B <= 0: \",round(ot,5))\n\n#:::::::: INTERPRET COEFFICIENTS\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 7 × 7\n  term                  estimate std.error statistic  p.value conf.low conf.high\n  <chr>                    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 (Intercept)             -5.75      0.559    -10.3  1.48e-21  -6.85       -4.65\n2 pretty_conditiontext…    2.04      0.682      2.99 3.06e- 3   0.695       3.38\n3 pretty_conditiontext…    1.92      0.662      2.90 3.95e- 3   0.620       3.23\n4 pretty_conditionimg:…    1.78      0.672      2.65 8.52e- 3   0.457       3.10\n5 pretty_conditionimg:…    4.08      0.659      6.19 1.87e- 9   2.78        5.38\n6 orderLM-First            0.857     0.420      2.04 4.23e- 2   0.0301      1.68\n7 tm_scenarioslongmire     2.49      0.422      5.89 9.88e- 9   1.66        3.32\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\nnewdata <- df_s %>% dplyr::select(pretty_condition, order, tm_scenarios, subject)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n(p <- preds %>%\n  group_by(pretty_condition, order, tm_scenarios) %>%\n  dplyr::summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 20 × 7\n# Groups:   pretty_condition, order [10]\n   pretty_condition order    tm_scenarios median    se    lwr    upr\n   <fct>            <fct>    <fct>         <dbl> <dbl>  <dbl>  <dbl>\n 1 control          TM-First axis         -5.75      0 -5.75  -5.75 \n 2 control          TM-First longmire     -3.27      0 -3.27  -3.27 \n 3 control          LM-First axis         -4.90      0 -4.90  -4.90 \n 4 control          LM-First longmire     -2.41      0 -2.41  -2.41 \n 5 text:what        TM-First axis         -3.72      0 -3.72  -3.72 \n 6 text:what        TM-First longmire     -1.23      0 -1.23  -1.23 \n 7 text:what        LM-First axis         -2.86      0 -2.86  -2.86 \n 8 text:what        LM-First longmire     -0.371     0 -0.371 -0.371\n 9 text:how         TM-First axis         -3.83      0 -3.83  -3.83 \n10 text:how         TM-First longmire     -1.34      0 -1.34  -1.34 \n11 text:how         LM-First axis         -2.97      0 -2.97  -2.97 \n12 text:how         LM-First longmire     -0.485     0 -0.485 -0.485\n13 img:static       TM-First axis         -3.97      0 -3.97  -3.97 \n14 img:static       TM-First longmire     -1.48      0 -1.48  -1.48 \n15 img:static       LM-First axis         -3.12      0 -3.12  -3.12 \n16 img:static       LM-First longmire     -0.628     0 -0.628 -0.628\n17 img:ixv          TM-First axis         -1.67      0 -1.67  -1.67 \n18 img:ixv          TM-First longmire      0.815     0  0.815  0.815\n19 img:ixv          LM-First axis         -0.817     0 -0.817 -0.817\n20 img:ixv          LM-First longmire      1.67      0  1.67   1.67 \n\n\n\n\nINFERENCE\nTo test the hypothesis that SCAFFOLD condition affects triangular score performance, we fit a linear regression model predicting difference score (triangular - linear; where + scores indicate better performance on triangular vs linear) by SCAFFOLD, ORDER and SCENARIO.\nIn this model, there were significant main effects of SCAFFOLD, ORDER and SCENARIO, but no interactions. The model estimates that each condition significantly improves performance on the triangular vs linear graph, increasing the difference in scores (score diff <0 means higher linear, scorediff > 0 higher triangular). The most effective scaffold was the interactive image, increasing the score difference by 4 points. Taking the LM before the TM had a small but significant effect increasing the differential by 1 point, while scenario increased the score by 2.5 points.\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Score Difference (TRI - LIN)\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"eff\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\")\n\n\n$pretty_condition\n\n\n\n\n\n\n$order\n\n\n\n\n\n\n$tm_scenarios\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n## | PLOT INTERACTIONS\n# plot_model(m.C.O.S, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\")\n# \n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \nscore diff\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-5.75\n-6.85 – -4.65\n<0.001\n\n\npretty conditiontext *what\n2.04\n0.69 – 3.38\n0.003\n\n\npretty conditiontext *how\n1.92\n0.62 – 3.23\n0.004\n\n\npretty conditionimg *static\n1.78\n0.46 – 3.10\n0.009\n\n\npretty conditionimg * ixv\n4.08\n2.78 – 5.38\n<0.001\n\n\norder [LM-First]\n0.86\n0.03 – 1.68\n0.042\n\n\ntm scenarios [longmire]\n2.49\n1.66 – 3.32\n<0.001\n\n\nObservations\n316\n\n\nR2 / R2 adjusted\n0.193 / 0.178\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n#DIAGNOSTICS\ncheck_model(m)\n\n\n\n\n\n\n\n\n\nTRIANGULAR SCORE\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\ndf_s <- df_subjects %>% dplyr::select(triangular_score, score_diff, subject, order, tm_scenarios, pretty_condition)\ndf_i <- df_items %>% filter(q %nin% c(3)) %>% filter(graph == \"triangular\")\n\n\n\n\nVisualize\n\n\nCODE\n# Box plots\n# ++++++++++++++++++++\n# Plot weight by group and color by group\nlibrary(\"ggpubr\")\nggboxplot(df_s, x = \"pretty_condition\", y = \"triangular_score\", \n          color = \"pretty_condition\", \n          # palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n          # order = c(\"ctrl\", \"trt1\", \"trt2\"),\n          title = \"TRIANGULAR SCORE by Condition\",\n          ylab = \"Triangular Score [0,15]\", xlab = \"Condition\") +\n  # geom_hline(yintercept = 0, color = \"black\") + \n  geom_jitter( aes(color = pretty_condition), width = 0.15, alpha = 0.5) +\n  # ylim(-15,15) + \n  # facet_wrap(order~ tm_scenarios) +\n  easy_remove_legend() + theme_clean()\n\n\n\n\n\nCODE\ngf_histogram(~triangular_score, data = df_s)\n\n\n\n\n\n\n\nCODE\nfavstats(triangular_score ~ pretty_condition, data = df_s)\n\n\n  pretty_condition min   Q1 median   Q3 max  mean   sd  n missing\n1          control   0  2.0      6 11.0  14  6.90 4.51 61       0\n2        text:what   0  6.5     10 12.5  14  8.81 4.28 59       0\n3         text:how   1  4.0     10 12.0  15  8.70 4.71 66       0\n4       img:static   0  5.0     10 12.0  15  8.56 4.57 62       0\n5          img:ixv   1 10.0     11 13.0  15 10.68 3.41 68       0\n\n\n\n\n[no] MIXED EFFECTS LOGISTIC REGRESSION –> RAW SCORE\nFit mixed effects logistic regression model to test effect of CONDITION ORDER, and SCENARIO on probability of correct response just in TRIANGULAR graph\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s)  #removed nondiscrim Q3\n\n\n[1] 14\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$graph) && is.factor(df_i$score) && is.factor(df_i$order) && is.factor(df_i$scenario)\n\n\n[1] TRUE\n\n\nCODE\n## 1 | SETUP RANDOM INTERCEPT SUBJECT\n\n#:: EMPTY MODEL (baseline, no random effect)\nprint(\"Empty fixed model\")\n\n\n[1] \"Empty fixed model\"\n\n\nCODE\nm0 = glm(accuracy ~ 1, family = \"binomial\", data = df_i) \n# summary(m0)\n\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n\n## 2 | ADD FIXED EFFECT CONDITION\n\nprint(\"Condition + Subject & Item random intercepts\")\n\n\n[1] \"Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.CrSQ <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\", \n                # control=glmerControl(optimizer=\"bobyqa\",\n                #                  optCtrl=list(maxfun=2e5))\n                )\n# car::Anova(mm.CrSQ) #main effects graph\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.CrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.CrSQ) \n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |  Chi2 |      p\n--------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |       |       \nmm.CrSQ | glmerMod |  7 |       4 | 24.75 | < .001\n\n\nCODE\n# 2 | ADD IXN ORDER\nprint(\"FIXED CONDITION + ORDER + Subject & Item random intercepts\")\n\n\n[1] \"FIXED CONDITION + ORDER + Subject & Item random intercepts\"\n\n\nCODE\nmm.COrSQ <- glmer(accuracy ~ pretty_condition*order + (1|subject) + (1|q),\n                   data = df_i, family = \"binomial\", \n                   control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n# car::Anova(mm.COrSQ, type = 3) #main effect condition\n\n\n# 2 | ADD IXN SCENARIO\nprint(\"FIXED CONDITION + ORDER + Subject & Item random intercepts\")\n\n\n[1] \"FIXED CONDITION + ORDER + Subject & Item random intercepts\"\n\n\nCODE\nmm.COSrSQ <- glmer(accuracy ~ pretty_condition*order*scenario + (1|subject) + (1|q),\n                   data = df_i, family = \"binomial\", \n                   control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\ncar::Anova(mm.COSrSQ, type = 3) #ME condition, scenario\n\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: accuracy\n                                Chisq Df Pr(>Chisq)  \n(Intercept)                      5.16  1      0.023 *\npretty_condition                 9.32  4      0.054 .\norder                            1.91  1      0.167  \nscenario                         3.78  1      0.052 .\npretty_condition:order           7.58  4      0.108  \npretty_condition:scenario        0.38  4      0.984  \norder:scenario                   1.46  1      0.227  \npretty_condition:order:scenario  2.25  4      0.690  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n# test_lrt(mm.COSrSQ,mm.COrSQ) \n\n\n# 3 | MAIN EFFECTS ONLY\n\n# print(\"CONDITION + SCENARIO + ORDER + Subject & Item random intercepts\")\n# mm.C.O.SrSQ <- glmer(accuracy ~ pretty_condition + order + scenario +  (1|subject) + (1|q) ,\n#                 data = df_i, family = \"binomial\",\n#                 control=glmerControl(optimizer=\"bobyqa\",\n#                                  optCtrl=list(maxfun=2e5)))\n# summary(mm.C.O.SrSQ)\n# car::Anova(mm.C.O.SrSQ, type = 2) #ME condition, scenario\n\n\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.COSrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ pretty_condition * order * scenario + (1 | subject) +  \n    (1 | q)\n   Data: df_i\nControl: glmerControl(optimizer = \"bobyqa\", optCtrl = list(maxfun = 200000))\n\n     AIC      BIC   logLik deviance df.resid \n    4904     5045    -2430     4860     4401 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-3.714 -0.553  0.338  0.600  3.390 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 2.222    1.490   \n q       (Intercept) 0.074    0.272   \nNumber of obs: 4423, groups:  subject, 316; q, 14\n\nFixed effects:\n                                                          Estimate Std. Error\n(Intercept)                                                -0.9288     0.4089\npretty_conditiontext:what                                   0.8730     0.5862\npretty_conditiontext:how                                    0.3869     0.5610\npretty_conditionimg:static                                  0.4084     0.5727\npretty_conditionimg:ixv                                     1.4869     0.5344\norderLM-First                                              -0.8707     0.6307\nscenariolongmire                                            1.1289     0.5809\npretty_conditiontext:what:orderLM-First                     0.4820     0.8448\npretty_conditiontext:how:orderLM-First                      1.9666     0.8577\npretty_conditionimg:static:orderLM-First                    1.6751     0.8586\npretty_conditionimg:ixv:orderLM-First                       1.2948     0.8171\npretty_conditiontext:what:scenariolongmire                  0.2258     0.8540\npretty_conditiontext:how:scenariolongmire                  -0.0786     0.7997\npretty_conditionimg:static:scenariolongmire                -0.1745     0.8189\npretty_conditionimg:ixv:scenariolongmire                   -0.2687     0.8323\norderLM-First:scenariolongmire                              1.0367     0.8583\npretty_conditiontext:what:orderLM-First:scenariolongmire   -0.9090     1.2274\npretty_conditiontext:how:orderLM-First:scenariolongmire    -1.7413     1.1838\npretty_conditionimg:static:orderLM-First:scenariolongmire  -1.1527     1.2001\npretty_conditionimg:ixv:orderLM-First:scenariolongmire     -1.1191     1.1902\n                                                          z value Pr(>|z|)   \n(Intercept)                                                 -2.27   0.0231 * \npretty_conditiontext:what                                    1.49   0.1364   \npretty_conditiontext:how                                     0.69   0.4904   \npretty_conditionimg:static                                   0.71   0.4758   \npretty_conditionimg:ixv                                      2.78   0.0054 **\norderLM-First                                               -1.38   0.1674   \nscenariolongmire                                             1.94   0.0520 . \npretty_conditiontext:what:orderLM-First                      0.57   0.5683   \npretty_conditiontext:how:orderLM-First                       2.29   0.0219 * \npretty_conditionimg:static:orderLM-First                     1.95   0.0511 . \npretty_conditionimg:ixv:orderLM-First                        1.58   0.1131   \npretty_conditiontext:what:scenariolongmire                   0.26   0.7915   \npretty_conditiontext:how:scenariolongmire                   -0.10   0.9217   \npretty_conditionimg:static:scenariolongmire                 -0.21   0.8313   \npretty_conditionimg:ixv:scenariolongmire                    -0.32   0.7468   \norderLM-First:scenariolongmire                               1.21   0.2271   \npretty_conditiontext:what:orderLM-First:scenariolongmire    -0.74   0.4589   \npretty_conditiontext:how:orderLM-First:scenariolongmire     -1.47   0.1413   \npretty_conditionimg:static:orderLM-First:scenariolongmire   -0.96   0.3368   \npretty_conditionimg:ixv:orderLM-First:scenariolongmire      -0.94   0.3471   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nCorrelation matrix not shown by default, as p = 20 > 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=3) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: accuracy\n                                Chisq Df Pr(>Chisq)  \n(Intercept)                      5.16  1      0.023 *\npretty_condition                 9.32  4      0.054 .\norder                            1.91  1      0.167  \nscenario                         3.78  1      0.052 .\npretty_condition:order           7.58  4      0.108  \npretty_condition:scenario        0.38  4      0.984  \norder:scenario                   1.46  1      0.227  \npretty_condition:order:scenario  2.25  4      0.690  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 22 × 9\n   effect group term     estimate std.error statistic p.value conf.low conf.high\n   <chr>  <chr> <chr>       <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 fixed  <NA>  (Interc…   -0.929     0.409    -2.27  0.0231  -1.73       -0.127\n 2 fixed  <NA>  pretty_…    0.873     0.586     1.49  0.136   -0.276       2.02 \n 3 fixed  <NA>  pretty_…    0.387     0.561     0.690 0.490   -0.713       1.49 \n 4 fixed  <NA>  pretty_…    0.408     0.573     0.713 0.476   -0.714       1.53 \n 5 fixed  <NA>  pretty_…    1.49      0.534     2.78  0.00540  0.440       2.53 \n 6 fixed  <NA>  orderLM…   -0.871     0.631    -1.38  0.167   -2.11        0.365\n 7 fixed  <NA>  scenari…    1.13      0.581     1.94  0.0520  -0.00968     2.27 \n 8 fixed  <NA>  pretty_…    0.482     0.845     0.571 0.568   -1.17        2.14 \n 9 fixed  <NA>  pretty_…    1.97      0.858     2.29  0.0219   0.286       3.65 \n10 fixed  <NA>  pretty_…    1.68      0.859     1.95  0.0511  -0.00768     3.36 \n# … with 12 more rows\n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 22 × 9\n   effect group term     estimate std.error statistic p.value conf.low conf.high\n   <chr>  <chr> <chr>       <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 fixed  <NA>  (Interc…    0.395     0.162    -2.27  0.0231     0.177     0.880\n 2 fixed  <NA>  pretty_…    2.39      1.40      1.49  0.136      0.759     7.55 \n 3 fixed  <NA>  pretty_…    1.47      0.826     0.690 0.490      0.490     4.42 \n 4 fixed  <NA>  pretty_…    1.50      0.862     0.713 0.476      0.490     4.62 \n 5 fixed  <NA>  pretty_…    4.42      2.36      2.78  0.00540    1.55     12.6  \n 6 fixed  <NA>  orderLM…    0.419     0.264    -1.38  0.167      0.122     1.44 \n 7 fixed  <NA>  scenari…    3.09      1.80      1.94  0.0520     0.990     9.65 \n 8 fixed  <NA>  pretty_…    1.62      1.37      0.571 0.568      0.309     8.48 \n 9 fixed  <NA>  pretty_…    7.15      6.13      2.29  0.0219     1.33     38.4  \n10 fixed  <NA>  pretty_…    5.34      4.58      1.95  0.0511     0.992    28.7  \n# … with 12 more rows\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM merTools\n#setup empty df \nnewdata <- df_i %>% dplyr::select(graph, pretty_condition, order, scenario, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning in predictInterval(m, newdata = newdata, which = \"fixed\", type = \"probability\", : newdata is tbl_df or tbl object from dplyr package and has been\n              coerced to a data.frame\n\n\nWarning: executing %dopar% sequentially: no parallel backend registered\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(graph, pretty_condition, scenario, order, fit, lwr, upr) %>% \n  group_by(graph, pretty_condition, scenario, order) %>% \n  dplyr::summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 20 × 7\n# Groups:   graph, pretty_condition, scenario [10]\n   graph      pretty_condition scenario order    median  lower upper\n   <fct>      <fct>            <fct>    <fct>     <dbl>  <dbl> <dbl>\n 1 triangular control          axis     TM-First  0.286 0.0912 0.614\n 2 triangular control          axis     LM-First  0.141 0.0373 0.405\n 3 triangular control          longmire TM-First  0.552 0.233  0.833\n 4 triangular control          longmire LM-First  0.587 0.261  0.850\n 5 triangular text:what        axis     TM-First  0.484 0.189  0.791\n 6 triangular text:what        axis     LM-First  0.391 0.141  0.716\n 7 triangular text:what        longmire TM-First  0.786 0.473  0.938\n 8 triangular text:what        longmire LM-First  0.736 0.400  0.921\n 9 triangular text:how         axis     TM-First  0.372 0.131  0.701\n10 triangular text:how         axis     LM-First  0.635 0.299  0.876\n11 triangular text:how         longmire TM-First  0.618 0.289  0.865\n12 triangular text:how         longmire LM-First  0.708 0.376  0.907\n13 triangular img:static       axis     TM-First  0.371 0.130  0.704\n14 triangular img:static       axis     LM-First  0.574 0.253  0.843\n15 triangular img:static       longmire TM-First  0.608 0.277  0.859\n16 triangular img:static       longmire LM-First  0.755 0.433  0.927\n17 triangular img:ixv          axis     TM-First  0.640 0.314  0.873\n18 triangular img:ixv          axis     LM-First  0.724 0.402  0.912\n19 triangular img:ixv          longmire TM-First  0.806 0.500  0.944\n20 triangular img:ixv          longmire LM-First  0.857 0.597  0.960\n\n\n\n\nInference TODO UPDATE\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\")\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n#TODO EMMEANS for the estimated marginal means OR USE IXN PLOT\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.40\n0.18 – 0.88\n0.023\n\n\npretty conditiontext *what\n2.39\n0.76 – 7.55\n0.136\n\n\npretty conditiontext *how\n1.47\n0.49 – 4.42\n0.490\n\n\npretty conditionimg *static\n1.50\n0.49 – 4.62\n0.476\n\n\npretty conditionimg * ixv\n4.42\n1.55 – 12.61\n0.005\n\n\norder [LM-First]\n0.42\n0.12 – 1.44\n0.167\n\n\nscenario [longmire]\n3.09\n0.99 – 9.65\n0.052\n\n\n(pretty conditiontext *what) * order [LM-First]\n1.62\n0.31 – 8.48\n0.568\n\n\n(pretty conditiontext *how) * order [LM-First]\n7.15\n1.33 – 38.38\n0.022\n\n\n(pretty conditionimg *static) * order[LM-First]\n5.34\n0.99 – 28.73\n0.051\n\n\n(pretty conditionimg *ixv) * order [LM-First]\n3.65\n0.74 – 18.11\n0.113\n\n\n(pretty conditiontext *what) * scenario[longmire]\n1.25\n0.24 – 6.68\n0.791\n\n\n(pretty conditiontext *how) * scenario[longmire]\n0.92\n0.19 – 4.43\n0.922\n\n\n(pretty conditionimg *static) * scenario[longmire]\n0.84\n0.17 – 4.18\n0.831\n\n\n(pretty conditionimg *ixv) * scenario[longmire]\n0.76\n0.15 – 3.91\n0.747\n\n\norder [LM-First] *scenario [longmire]\n2.82\n0.52 – 15.17\n0.227\n\n\n(pretty conditiontext *what * order [LM-First])* scenario [longmire]\n0.40\n0.04 – 4.47\n0.459\n\n\n(pretty conditiontext *how * order [LM-First]) *scenario [longmire]\n0.18\n0.02 – 1.78\n0.141\n\n\n(pretty conditionimg *static * order[LM-First]) * scenario[longmire]\n0.32\n0.03 – 3.32\n0.337\n\n\n(pretty conditionimg *ixv * order [LM-First]) *scenario [longmire]\n0.33\n0.03 – 3.37\n0.347\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n2.22\n\n\nτ00 q\n0.07\n\n\nICC\n0.41\n\n\nN subject\n316\n\n\nN q\n14\n\nObservations\n4423\n\n\nMarginal R2 / Conditional R2\n0.108 / 0.475\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)\n\n\n\n\n\n\n\n\n[no] LINEAR REGRESSION [ TRI SCORE ~ condition]\n[violates normality of residuals, and has issues with colinearity] ##### Fit Model\n\n\nCODE\n# empty model \nm0 <- lm( triangular_score ~ 1, data = df_s)\n\n# CONDITION model \nm.C <- lm( triangular_score ~ pretty_condition, data = df_s)\npaste(\"Condition model better fit than empty?\")\n\n\n[1] \"Condition model better fit than empty?\"\n\n\nCODE\ntest_lrt(m0,m.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName | Model | df | df_diff |  Chi2 |      p\n--------------------------------------------\nm0   |    lm |  2 |         |       |       \nm.C  |    lm |  6 |       4 | 24.94 | < .001\n\n\nCODE\n# car::Anova(m.C) #main effects condition\n\n# CONDITION + ORDER + SCENARIO model \nm.COS <- lm( triangular_score ~ pretty_condition*tm_scenarios*order, data = df_s)\npaste(\"Condition*Order*Scenario model better fit than interactions model?\")\n\n\n[1] \"Condition*Order*Scenario model better fit than interactions model?\"\n\n\nCODE\ntest_lrt(m.COS,m.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName  | Model | df | df_diff |  Chi2 |      p\n---------------------------------------------\nm.COS |    lm | 21 |         |       |       \nm.C   |    lm |  6 |     -15 | 44.97 | < .001\n\n\nCODE\ncar::Anova(m.COS, type = 3) #main effects condition, order scenario, scenario\n\n\nAnova Table (Type III tests)\n\nResponse: triangular_score\n                                    Sum Sq  Df F value  Pr(>F)    \n(Intercept)                            553   1   32.67 2.7e-08 ***\npretty_condition                       151   4    2.24   0.065 .  \ntm_scenarios                            58   1    3.41   0.066 .  \norder                                   14   1    0.85   0.357    \npretty_condition:tm_scenarios            4   4    0.07   0.992    \npretty_condition:order                 103   4    1.51   0.198    \ntm_scenarios:order                      13   1    0.78   0.377    \npretty_condition:tm_scenarios:order     28   4    0.41   0.799    \nResiduals                             5015 296                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#no interactions were significant; weak main effects\n\n# #MAIN EFFECTS ONLY MODEL\n# m.COS <- lm( triangular_score ~ pretty_condition+order+tm_scenarios, data = df_s)\n# paste(\"Condition+Order+Scenario model better fit than interaction model?\")\n# test_lrt(m.C.O.S,m.COS)\n\n\nThe best fitting model includes main effects CONDITION, ORDER and SCENARIO.\n\nDescribe\n\n\nCODE\n# best model\nm <- m.COS\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n\nCall:\nlm(formula = triangular_score ~ pretty_condition * tm_scenarios * \n    order, data = df_s)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-10.500  -3.308   0.775   2.817   7.692 \n\nCoefficients:\n                                                              Estimate\n(Intercept)                                                    5.70588\npretty_conditiontext:what                                      2.16078\npretty_conditiontext:how                                       0.84967\npretty_conditionimg:static                                     0.73162\npretty_conditionimg:ixv                                        3.52139\ntm_scenarioslongmire                                           2.69412\norderLM-First                                                 -1.39819\npretty_conditiontext:what:tm_scenarioslongmire                 0.66998\npretty_conditiontext:how:tm_scenarioslongmire                 -0.02745\npretty_conditionimg:static:tm_scenarioslongmire               -0.00662\npretty_conditionimg:ixv:tm_scenarioslongmire                  -0.42139\npretty_conditiontext:what:orderLM-First                        0.43152\npretty_conditiontext:how:orderLM-First                         4.04263\npretty_conditionimg:static:orderLM-First                       3.33569\npretty_conditionimg:ixv:orderLM-First                          2.67092\ntm_scenarioslongmire:orderLM-First                             1.87319\npretty_conditiontext:what:tm_scenarioslongmire:orderLM-First  -1.41002\npretty_conditiontext:how:tm_scenarioslongmire:orderLM-First   -3.60652\npretty_conditionimg:static:tm_scenarioslongmire:orderLM-First -2.36426\npretty_conditionimg:ixv:tm_scenarioslongmire:orderLM-First    -2.39592\n                                                              Std. Error\n(Intercept)                                                      0.99827\npretty_conditiontext:what                                        1.45806\npretty_conditiontext:how                                         1.39202\npretty_conditionimg:static                                       1.43365\npretty_conditionimg:ixv                                          1.32913\ntm_scenarioslongmire                                             1.45806\norderLM-First                                                    1.51648\npretty_conditiontext:what:tm_scenarioslongmire                   2.13507\npretty_conditiontext:how:tm_scenarioslongmire                    2.00208\npretty_conditionimg:static:tm_scenarioslongmire                  2.06000\npretty_conditionimg:ixv:tm_scenarioslongmire                     2.07552\npretty_conditiontext:what:orderLM-First                          2.06789\npretty_conditiontext:how:orderLM-First                           2.09053\npretty_conditionimg:static:orderLM-First                         2.10175\npretty_conditionimg:ixv:orderLM-First                            2.00273\ntm_scenarioslongmire:orderLM-First                               2.11848\npretty_conditiontext:what:tm_scenarioslongmire:orderLM-First     3.05085\npretty_conditiontext:how:tm_scenarioslongmire:orderLM-First      2.93754\npretty_conditionimg:static:tm_scenarioslongmire:orderLM-First    2.97901\npretty_conditionimg:ixv:tm_scenarioslongmire:orderLM-First       2.94445\n                                                              t value Pr(>|t|)\n(Intercept)                                                      5.72  2.7e-08\npretty_conditiontext:what                                        1.48   0.1394\npretty_conditiontext:how                                         0.61   0.5421\npretty_conditionimg:static                                       0.51   0.6102\npretty_conditionimg:ixv                                          2.65   0.0085\ntm_scenarioslongmire                                             1.85   0.0656\norderLM-First                                                   -0.92   0.3573\npretty_conditiontext:what:tm_scenarioslongmire                   0.31   0.7539\npretty_conditiontext:how:tm_scenarioslongmire                   -0.01   0.9891\npretty_conditionimg:static:tm_scenarioslongmire                  0.00   0.9974\npretty_conditionimg:ixv:tm_scenarioslongmire                    -0.20   0.8393\npretty_conditiontext:what:orderLM-First                          0.21   0.8348\npretty_conditiontext:how:orderLM-First                           1.93   0.0541\npretty_conditionimg:static:orderLM-First                         1.59   0.1136\npretty_conditionimg:ixv:orderLM-First                            1.33   0.1833\ntm_scenarioslongmire:orderLM-First                               0.88   0.3773\npretty_conditiontext:what:tm_scenarioslongmire:orderLM-First    -0.46   0.6443\npretty_conditiontext:how:tm_scenarioslongmire:orderLM-First     -1.23   0.2205\npretty_conditionimg:static:tm_scenarioslongmire:orderLM-First   -0.79   0.4280\npretty_conditionimg:ixv:tm_scenarioslongmire:orderLM-First      -0.81   0.4165\n                                                                 \n(Intercept)                                                   ***\npretty_conditiontext:what                                        \npretty_conditiontext:how                                         \npretty_conditionimg:static                                       \npretty_conditionimg:ixv                                       ** \ntm_scenarioslongmire                                          .  \norderLM-First                                                    \npretty_conditiontext:what:tm_scenarioslongmire                   \npretty_conditiontext:how:tm_scenarioslongmire                    \npretty_conditionimg:static:tm_scenarioslongmire                  \npretty_conditionimg:ixv:tm_scenarioslongmire                     \npretty_conditiontext:what:orderLM-First                          \npretty_conditiontext:how:orderLM-First                        .  \npretty_conditionimg:static:orderLM-First                         \npretty_conditionimg:ixv:orderLM-First                            \ntm_scenarioslongmire:orderLM-First                               \npretty_conditiontext:what:tm_scenarioslongmire:orderLM-First     \npretty_conditiontext:how:tm_scenarioslongmire:orderLM-First      \npretty_conditionimg:static:tm_scenarioslongmire:orderLM-First    \npretty_conditionimg:ixv:tm_scenarioslongmire:orderLM-First       \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.12 on 296 degrees of freedom\nMultiple R-squared:  0.196, Adjusted R-squared:  0.145 \nF-statistic: 3.81 on 19 and 296 DF,  p-value: 3.47e-07\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=3) #TYPE 3 SS FOR IXNS\n\n\nAnova Table (Type III tests)\n\nResponse: triangular_score\n                                    Sum Sq  Df F value  Pr(>F)    \n(Intercept)                            553   1   32.67 2.7e-08 ***\npretty_condition                       151   4    2.24   0.065 .  \ntm_scenarios                            58   1    3.41   0.066 .  \norder                                   14   1    0.85   0.357    \npretty_condition:tm_scenarios            4   4    0.07   0.992    \npretty_condition:order                 103   4    1.51   0.198    \ntm_scenarios:order                      13   1    0.78   0.377    \npretty_condition:tm_scenarios:order     28   4    0.41   0.799    \nResiduals                             5015 296                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: MANUAL ONE-SIDED SIGTEST \n#note: anova and chi square are always one-tailed, but that is independent of being one-sided\n#https://www.ibm.com/support/pages/can-one-get-one-tailed-tests-logistic-regression-dividing-significance-levels-half\n\n# one-sided (right tail) z test for B COEFFICIENT\n#SANITY CHECK 2-tailed test should match the model output\n#NOTE ... NEED TO DO THIS FOR _EACH_ COEFFICIENT\n# tt <- 2*pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,5))\n# ot <- pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"BUT we want a one  directional, null: B <= 0: \",round(ot,5))\n\n#:::::::: INTERPRET COEFFICIENTS\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 20 × 7\n   term                  estimate std.error statistic p.value conf.low conf.high\n   <chr>                    <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 (Intercept)            5.71        0.998   5.72    2.66e-8   3.74        7.67\n 2 pretty_conditiontext…  2.16        1.46    1.48    1.39e-1  -0.709       5.03\n 3 pretty_conditiontext…  0.850       1.39    0.610   5.42e-1  -1.89        3.59\n 4 pretty_conditionimg:…  0.732       1.43    0.510   6.10e-1  -2.09        3.55\n 5 pretty_conditionimg:…  3.52        1.33    2.65    8.50e-3   0.906       6.14\n 6 tm_scenarioslongmire   2.69        1.46    1.85    6.56e-2  -0.175       5.56\n 7 orderLM-First         -1.40        1.52   -0.922   3.57e-1  -4.38        1.59\n 8 pretty_conditiontext…  0.670       2.14    0.314   7.54e-1  -3.53        4.87\n 9 pretty_conditiontext… -0.0275      2.00   -0.0137  9.89e-1  -3.97        3.91\n10 pretty_conditionimg:… -0.00662     2.06   -0.00321 9.97e-1  -4.06        4.05\n11 pretty_conditionimg:… -0.421       2.08   -0.203   8.39e-1  -4.51        3.66\n12 pretty_conditiontext…  0.432       2.07    0.209   8.35e-1  -3.64        4.50\n13 pretty_conditiontext…  4.04        2.09    1.93    5.41e-2  -0.0715      8.16\n14 pretty_conditionimg:…  3.34        2.10    1.59    1.14e-1  -0.801       7.47\n15 pretty_conditionimg:…  2.67        2.00    1.33    1.83e-1  -1.27        6.61\n16 tm_scenarioslongmire…  1.87        2.12    0.884   3.77e-1  -2.30        6.04\n17 pretty_conditiontext… -1.41        3.05   -0.462   6.44e-1  -7.41        4.59\n18 pretty_conditiontext… -3.61        2.94   -1.23    2.21e-1  -9.39        2.17\n19 pretty_conditionimg:… -2.36        2.98   -0.794   4.28e-1  -8.23        3.50\n20 pretty_conditionimg:… -2.40        2.94   -0.814   4.16e-1  -8.19        3.40\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\nnewdata <- df_s %>% dplyr::select(pretty_condition, order, tm_scenarios, subject)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n(p <- preds %>%\n  group_by(pretty_condition, order, tm_scenarios) %>%\n  dplyr::summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 20 × 7\n# Groups:   pretty_condition, order [10]\n   pretty_condition order    tm_scenarios median    se   lwr   upr\n   <fct>            <fct>    <fct>         <dbl> <dbl> <dbl> <dbl>\n 1 control          TM-First axis           5.71     0  5.71  5.71\n 2 control          TM-First longmire       8.40     0  8.40  8.40\n 3 control          LM-First axis           4.31     0  4.31  4.31\n 4 control          LM-First longmire       8.88     0  8.88  8.88\n 5 text:what        TM-First axis           7.87     0  7.87  7.87\n 6 text:what        TM-First longmire      11.2      0 11.2  11.2 \n 7 text:what        LM-First axis           6.9      0  6.9   6.9 \n 8 text:what        LM-First longmire      10.7      0 10.7  10.7 \n 9 text:how         TM-First axis           6.56     0  6.56  6.56\n10 text:how         TM-First longmire       9.22     0  9.22  9.22\n11 text:how         LM-First axis           9.2      0  9.2   9.2 \n12 text:how         LM-First longmire      10.1      0 10.1  10.1 \n13 img:static       TM-First axis           6.44     0  6.44  6.44\n14 img:static       TM-First longmire       9.13     0  9.13  9.13\n15 img:static       LM-First axis           8.37     0  8.37  8.37\n16 img:static       LM-First longmire      10.6      0 10.6  10.6 \n17 img:ixv          TM-First axis           9.23     0  9.23  9.23\n18 img:ixv          TM-First longmire      11.5      0 11.5  11.5 \n19 img:ixv          LM-First axis          10.5      0 10.5  10.5 \n20 img:ixv          LM-First longmire      12.3      0 12.3  12.3 \n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Score Difference (TRI - LIN)\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"eff\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\")\n\n\n$pretty_condition\n\n\n\n\n\n\n$tm_scenarios\n\n\n\n\n\n\n$order\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n## | PLOT INTERACTIONS\nplot_model(m.C.O.S, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\")\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \ntriangular score\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n5.71\n3.74 – 7.67\n<0.001\n\n\npretty conditiontext *what\n2.16\n-0.71 – 5.03\n0.139\n\n\npretty conditiontext *how\n0.85\n-1.89 – 3.59\n0.542\n\n\npretty conditionimg *static\n0.73\n-2.09 – 3.55\n0.610\n\n\npretty conditionimg * ixv\n3.52\n0.91 – 6.14\n0.008\n\n\ntm scenarios [longmire]\n2.69\n-0.18 – 5.56\n0.066\n\n\norder [LM-First]\n-1.40\n-4.38 – 1.59\n0.357\n\n\n(pretty conditiontext *what) * tm scenarios[longmire]\n0.67\n-3.53 – 4.87\n0.754\n\n\n(pretty conditiontext *how) * tm scenarios[longmire]\n-0.03\n-3.97 – 3.91\n0.989\n\n\n(pretty conditionimg *static) * tm scenarios[longmire]\n-0.01\n-4.06 – 4.05\n0.997\n\n\n(pretty conditionimg *ixv) * tm scenarios[longmire]\n-0.42\n-4.51 – 3.66\n0.839\n\n\n(pretty conditiontext *what) * order [LM-First]\n0.43\n-3.64 – 4.50\n0.835\n\n\n(pretty conditiontext *how) * order [LM-First]\n4.04\n-0.07 – 8.16\n0.054\n\n\n(pretty conditionimg *static) * order[LM-First]\n3.34\n-0.80 – 7.47\n0.114\n\n\n(pretty conditionimg *ixv) * order [LM-First]\n2.67\n-1.27 – 6.61\n0.183\n\n\ntm scenarios [longmire] *order [LM-First]\n1.87\n-2.30 – 6.04\n0.377\n\n\n(pretty conditiontext *what * tm scenarios[longmire]) * order[LM-First]\n-1.41\n-7.41 – 4.59\n0.644\n\n\n(pretty conditiontext *how * tm scenarios[longmire]) * order[LM-First]\n-3.61\n-9.39 – 2.17\n0.221\n\n\n(pretty conditionimg *static * tm scenarios[longmire]) * order[LM-First]\n-2.36\n-8.23 – 3.50\n0.428\n\n\n(pretty conditionimg *ixv * tm scenarios[longmire]) * order[LM-First]\n-2.40\n-8.19 – 3.40\n0.416\n\n\nObservations\n316\n\n\nR2 / R2 adjusted\n0.196 / 0.145\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\n\nDiagnostics\n\n\nCODE\n#DIAGNOSTICS\ncheck_model(m)\n\n\n\n\n\n\n\n\nH2 | Realizing Computational Efficiency —— TIME EFFICIENCY\n\nSetup\n\n\nCODE\ndf_s <- df_subjects \ndf_i <- df_items \n\n\n\n\nVisualize\n\n\nCODE\nlibrary(ggpubr)\nggboxplot(df_s, x = \"pretty_condition\", y = \"time_diff\", \n          color = \"pretty_condition\", \n          # palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n          # order = c(\"ctrl\", \"trt1\", \"trt2\"),\n          title = \"DIFFERENCE IN TIME by Condition\",\n          ylab = \"TRI - LINEAR TIME (seconds)\", xlab = \"Condition\") +\n  geom_hline(yintercept = 0, color = \"black\") + \n  geom_jitter( aes(color = pretty_condition), width = 0.15, alpha = 0.5) +\n  # facet_wrap(order~ tm_scenarios) +\n  easy_remove_legend() + theme_clean()\n\n\n\n\n\n\n\nModel Response time for CORRECT answers\nIs the TRIANGULAR graph FASTER for correct answers? (i.e. computational efficiency)\n\n\nCODE\n#GET ONLY CORRECT ITEMS in TEST phase \ndf <- df_items %>% filter(q %nin% c(1,2,3,4,5)) %>% filter(score == 1)\n\ntable (df$pretty_condition)\n\n\n\n   control  text:what   text:how img:static    img:ixv \n       677        754        827        777        934 \n\n\nCODE\n# Box plots\n# ++++++++++++++++++++\nggplot( data = df, aes( x = pretty_condition, y = rt_sec, color = graph )) + \n  geom_boxplot(position = position_dodge()) \n\n\n\n\n\nCODE\n  # geom_point( alpha = 0.2, position = position_dodge(width = 2))\n\n\n## Does GRAPH predict rt_sec for correct items?\nm <- lmer( log(rt_sec) ~ graph + (1|q), data = df)\nsummary(m)\n\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: log(rt_sec) ~ graph + (1 | q)\n   Data: df\n\nREML criterion at convergence: 6398\n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-2.995 -0.716  0.030  0.670  4.072 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n q        (Intercept) 0.000729 0.027   \n Residual             0.292173 0.541   \nNumber of obs: 3969, groups:  q, 10\n\nFixed effects:\n                Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)     3.43e+00   1.45e-02 1.82e+01  237.00   <2e-16 ***\ngraphtriangular 6.45e-03   1.72e-02 3.96e+03    0.37     0.71    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr)\ngraphtrnglr -0.548\n\n\nCODE\ncar::Anova(m)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: log(rt_sec)\n      Chisq Df Pr(>Chisq)\ngraph  0.14  1       0.71\n\n\nCODE\nplot_model(m, type = \"pred\")\n\n\nModel has log-transformed response. Back-transforming predictions to original response scale. Standard errors are still on the log-scale.\n\n\n$graph\n\n\n\n\n\nA mixed log-linear model predicting response time by GRAPH for only CORRECT items in the test phase (i.e. without scaffolding text or images) indicates that there is not a significant difference between response times for linear and orthogonal graphs.\n\n\nModel Response time for by ACCURACY on TRIANGLE graph (Test Phase)\nAre correct answers FASTER than incorrect answers for the TRIANGULAR graph? (i.e. computational inefficiency of mental projection/transformation)\n\n\nCODE\n#GET ONLY CORRECT ITEMS in TEST phase \ndf <- df_items %>% filter(q %nin% c(1,2,3,4,5)) %>% filter(graph==\"triangular\")\n\ntable (df$pretty_condition)\n\n\n\n   control  text:what   text:how img:static    img:ixv \n       610        590        660        619        680 \n\n\nCODE\n# ++++++++++++++++++++\nggplot( data = df, aes( x = pretty_condition, y = rt_sec, color = score )) + \n  geom_boxplot(position = position_dodge()) \n\n\n\n\n\nCODE\n  # geom_point( alpha = 0.2, position = position_dodge(width = 2))\n\n\ngf_histogram(~log(rt_sec), data = df) %>% \n  gf_facet_grid(score ~ .)\n\n\n\n\n\nCODE\n## Does ACCURACY predict rt_sec for correct items?\nm <- lmer( log(rt_sec) ~ accuracy + (1|q), data = df)\nsummary(m)\n\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: log(rt_sec) ~ accuracy + (1 | q)\n   Data: df\n\nREML criterion at convergence: 5920\n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-4.929 -0.656  0.028  0.683  3.680 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n q        (Intercept) 0.00515  0.0718  \n Residual             0.37835  0.6151  \nNumber of obs: 3159, groups:  q, 10\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)    3.7155     0.0283   14.2947   131.3   <2e-16 ***\naccuracy1     -0.2773     0.0222 3149.8835   -12.5   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n          (Intr)\naccuracy1 -0.455\n\n\nCODE\ncar::Anova(m)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: log(rt_sec)\n         Chisq Df Pr(>Chisq)    \naccuracy   156  1     <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\nplot_model(m, type = \"pred\")\n\n\nModel has log-transformed response. Back-transforming predictions to original response scale. Standard errors are still on the log-scale.\n\n\n$accuracy\n\n\n\n\n\nA mixed log-linear model predicting response time by GRAPH for only CORRECT items in the test phase (i.e. without scaffolding text or images) indicates that there is not a significant difference between response times for linear and orthogonal graphs."
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#use-this-h3-the-effectiveness-of-scaffolding",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#use-this-h3-the-effectiveness-of-scaffolding",
    "title": "3  Hypothesis Testing",
    "section": "!! USE THIS H3 | The Effectiveness of Scaffolding",
    "text": "!! USE THIS H3 | The Effectiveness of Scaffolding\nHypothesis All of the designs offered by participants in Study 1 are promising. We expect that only a small amount of scaffolding (a little nudge) will be required to help readers correctly interpret the graph. We predict that learners with (any form of) scaffolding will perform better with the TM than readers in the CONTROL condition.\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\n#only control condition \ndf_s <- df_subjects \n\ndf_long <- df_s %>% dplyr::select(subject,pretty_condition,order,lm_scenarios,tm_scenarios,linear_score, triangular_score) %>% pivot_longer(\n  cols = ends_with(\"score\"),\n  names_to = \"graph\",\n  values_to = \"score\"\n)\n\ndf_i <- df_items %>% filter(q %nin% c(3))\n\n\n\n\nVisualize\n\n\nCODE\n## HISTOGRAM\ngf_histogram( ~ triangular_score, fill = ~pretty_condition, binwidth = 1, data = df_s) %>%\n  gf_facet_grid(pretty_condition ~ .)\n\n\n\n\n\nCODE\n## MEDIANS\nggbetweenstats( y = triangular_score, x = pretty_condition, data = df_s, \n                type = \"nonparametric\",   var.equal = FALSE,\n                pairwise.comparisons = TRUE,\n                pairwise.display = \"significant\",\n                p.adjust.method = \"none\"\n)\n\n\n\n\n\n\n\nCODE\n# Box plots\n# ++++++++++++++++++++\n# Plot weight by group and color by group\nlibrary(\"ggpubr\")\nggboxplot(df_s, x = \"pretty_condition\", y = \"linear_score\", \n          color = \"pretty_condition\", \n          # palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n          # order = c(\"ctrl\", \"trt1\", \"trt2\"),\n          title = \"LINEAR Graph Scores by Condition\",\n          subtitle = \"No effect of condition, order or scenario\",\n          ylab = \"Linear Score [0,15]\", xlab = \"Condition\") +\n  geom_jitter( aes(color = pretty_condition), width = 0.15, alpha = 0.5) +\n  facet_wrap(order~ tm_scenarios)+\n  easy_remove_legend() + theme_clean()\n\n\n\n\n\n\n\nCODE\n# Box plots\n# ++++++++++++++++++++\n# Plot weight by group and color by group\nlibrary(\"ggpubr\")\nggboxplot(df_s, x = \"pretty_condition\", y = \"triangular_score\", \n          color = \"pretty_condition\", \n          # palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n          # order = c(\"ctrl\", \"trt1\", \"trt2\"),\n          title = \"TRIANGULE Graph Scores by Condition\",\n          subtitle = \"Clear effect of condition, possible ixn scenario\",\n          ylab = \"Triangular Score [0,15]\", xlab = \"Condition\") +\n  geom_jitter( aes(color = pretty_condition), width = 0.15, alpha = 0.5) +\n  facet_wrap(order~ tm_scenarios)+\n  easy_remove_legend() + theme_clean()\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(order~graph) + \n   labs(title = \"Accuracy by Graph and Order\",\n       x = \"Condition\",\n       subtitle=\"Across graph orders, Accuracy is higher on the LINEAR than TRIANGULAR graph.\")\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(scenario ~ graph) + \n   labs(title = \"Accuracy by Graph and Scenario\",\n       x = \"Condition\",\n       subtitle=\"Accuracy is higher on the LINEAR than TRIANGULAR graph; much lower for TM = AXIS scenario.\")\n\n\n\n\n\nCODE\n# ##VERTICAL RAINCLOUD USING GGDISTR\n# ggplot(df_long, aes(x = graph, y = score,\n#                         fill = graph) ) + \n#   ggdist::stat_halfeye(\n#     side = \"left\",\n#     justification = 1.1,\n#     width = 1, \n#     point_colour = NA\n#    ) + \n#   geom_boxplot(\n#     inherit.aes = FALSE, #supress fill\n#     mapping = aes(x=graph, y = score),\n#     width = .15, \n#     outlier.shape = NA\n#   ) + \n#   geom_point(\n#     inherit.aes = FALSE, #supress fill\n#     mapping = aes(x=graph, y = score, color = graph),\n#     size = 1.3,\n#     alpha = .3,\n#     position = position_jitter( \n#       seed = 1, width = .05\n#   )) + labs( \n#     title = \"Distribution of scores in CONTROL condition\", \n#     x = \"Condition\", y = \"Score (# correct)\") +\n#   theme(legend.position = \"blank\") + \n#   coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n#DISTRIBUTION OF SCORE DIFFERENCE\ngf_dhistogram(~score_diff, fill = ~pretty_condition, data = df_s) %>% \n  gf_facet_grid(pretty_condition ~ order) +\n  xlim(-13,5) + \n  labs(title = \"Distribution of paired score differences by CONDITION and ORDER\") + \n  easy_remove_legend() \n\n\nWarning: Removed 20 rows containing missing values (geom_bar).\n\n\n\n\n\nCODE\n#DISTRIBUTION OF SCORE DIFFERENCE\ngf_dhistogram(~score_diff, fill = ~pretty_condition, data = df_s) %>% \n  gf_facet_grid(pretty_condition ~ tm_scenarios) +\n  xlim(-13,5) + \n  labs(title = \"Distribution of paired score differences by CONDITION and TM SCENARIO\") + \n  easy_remove_legend() \n\n\nWarning: Removed 20 rows containing missing values (geom_bar).\n\n\n\n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy by Block (CONTROL Condition)\"\nabs.stats <- rbind(\n  \"linear.block\"= df_s %>% dplyr::select(linear_score) %>% unlist() %>% favstats(),\n  \"triangular.block\" = df_s %>% dplyr::select(triangular_score) %>% unlist() %>% favstats(),\n  \"block.differences\" = df_s %>% dplyr::select(score_diff) %>% unlist() %>% favstats()\n)\n\nabs.stats %>% kbl (caption = title) %>% kable_classic() %>%\n  footnote(general = \"block # questions correct [0,15]; DIFF = triangular - linear\",\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nDescriptive Statistics of Response Accuracy by Block (CONTROL Condition)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    linear.block \n    2 \n    10 \n    11 \n    13 \n    15 \n    10.95 \n    2.13 \n    316 \n    0 \n  \n  \n    triangular.block \n    0 \n    5 \n    10 \n    12 \n    15 \n    8.77 \n    4.45 \n    316 \n    0 \n  \n  \n    block.differences \n    -13 \n    -5 \n    -1 \n    1 \n    5 \n    -2.18 \n    4.11 \n    316 \n    0 \n  \n\n\nNote:   block # questions correct [0,15]; DIFF = triangular - linear\n\n\n\n\nFor participants in the CONTROL condition, total absolute scores for the LINEAR graph (n = 316) range from 2 to 15 with a mean score of (M = 10.95, SD = 2.13).\nFor participants in the CONTROL condition, total absolute scores for the TRIANGULAR graph (n = 316) range from 0 to 15 with a mean score of (M = 8.77, SD = 4.45).\n\n\nCODE\n#PLOT PAIRED DATA\ngrouped_ggwithinstats(\n  grouping.var = pretty_condition,\n  data = df_long,\n  x    = graph,\n  y    = score, \n  type  = \"nonparametric\", #parametric, robust, bayes\n  annotation.args = list(title = \"Effect of Condition\"),\n)\n\n\n\n\n\n\n\nUSE THIS MIXED EFFECTS LOGISTIC REGRESSION –> RAW SCORE\nFit mixed effects logistic regression model to test effect of GRAPH, ORDER, and SCENARIO on probability of correct response [just in the control condition]\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s)  #28; removed nondiscrim Q3\n\n\n[1] 28\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$graph) && is.factor(df_i$score) && is.factor(df_i$order) && is.factor(df_i$scenario)\n\n\n[1] TRUE\n\n\nCODE\n## 1 | SETUP RANDOM INTERCEPT SUBJECT\n\n#:: EMPTY MODEL (baseline, no random effect)\nprint(\"Empty fixed model\")\n\n\n[1] \"Empty fixed model\"\n\n\nCODE\nm0 = glm(accuracy ~ 1, family = \"binomial\", data = df_i) \n# summary(m0)\n\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n## 2 | ADD FIXED EFFECT GRAPH\n\nprint(\"FIXED GRAPH + Subject & Item random intercepts\")\n\n\n[1] \"FIXED GRAPH + Subject & Item random intercepts\"\n\n\nCODE\nmm.GrSQ <- glmer(accuracy ~ graph + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# car::Anova(mm.GrSQ) #main effect graph\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.GrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.GrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |   Chi2 |      p\n---------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |        |       \nmm.GrSQ | glmerMod |  4 |       1 | 274.61 | < .001\n\n\nCODE\n## 2 | ADD FIXED EFFECT CONDITION\n\nprint(\"IXN GRAPH*Condition + Subject & Item random intercepts\")\n\n\n[1] \"IXN GRAPH*Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.GCrSQ <- glmer(accuracy ~ graph*pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\", \n                control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n#car::Anova(mm.GCrSQ) #main effects graph + IXN graph*condition\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.GCrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.GCrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName     |    Model | df | df_diff |   Chi2 |      p\n----------------------------------------------------\nmm.rSQ   | glmerMod |  3 |         |        |       \nmm.GCrSQ | glmerMod | 12 |       9 | 368.36 | < .001\n\n\nCODE\n# 2 | ADD IXN ORDER\nprint(\"FIXED Graph + ORDER + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Graph + ORDER + Subject & Item random intercepts\"\n\n\nCODE\nmm.GC.COrSQ <- glmer(accuracy ~ graph*pretty_condition + graph*order + (1|subject) + (1|q),\n                   data = df_i, family = \"binomial\", \n                   control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n# summary(mm.GC.COrSQ)\n#car::Anova(mm.GC.COrSQ, type = 3) #IXN graphX condition, GRAPH*order\n\n#x <-  mm.GCOrSQ <- glmer(accuracy ~ graph*pretty_condition*order + (1|subject) + (1|q),\n#                    data = df_i, family = \"binomial\", \n#                    control=glmerControl(optimizer=\"bobyqa\",\n#                                  optCtrl=list(maxfun=2e5)))\n# car::Anova(x) # 3 way ixn graph,condition,order??\n\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.GCrSQ)) > AIC(logLik(mm.GC.COrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.GCrSQ,mm.GC.COrSQ) \n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName        |    Model | df | df_diff | Chi2 |     p\n----------------------------------------------------\nmm.GCrSQ    | glmerMod | 12 |         |      |      \nmm.GC.COrSQ | glmerMod | 14 |       2 | 9.22 | 0.010\n\n\nCODE\n# 3 | ADD FIXED EFFECT SCENARIO\n\nprint(\"FIXED Graph * SCENARIO * ORDER + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Graph * SCENARIO * ORDER + Subject & Item random intercepts\"\n\n\nCODE\nmm.GC.CO.GSrSQ <- glmer(accuracy ~ graph*pretty_condition + graph*order + graph*scenario +  (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\",\n                control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n#summary(mm.GC.CO.GSrSQ)\n#car::Anova(mm.GC.CO.GSrSQ, type = 3) #IXN graphXscenario, graphXorder, graphXcondition, \n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.GC.COrSQ)) > AIC(logLik(mm.GC.CO.GSrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.GC.COrSQ,mm.GC.CO.GSrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName           |    Model | df | df_diff |  Chi2 |      p\n---------------------------------------------------------\nmm.GC.COrSQ    | glmerMod | 14 |         |       |       \nmm.GC.CO.GSrSQ | glmerMod | 16 |       2 | 70.17 | < .001\n\n\nThe best fitting model included interactions for graph X condition, graph X order, and graph X scenario\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.GC.CO.GSrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ graph * pretty_condition + graph * order + graph *  \n    scenario + (1 | subject) + (1 | q)\n   Data: df_i\nControl: glmerControl(optimizer = \"bobyqa\", optCtrl = list(maxfun = 200000))\n\n     AIC      BIC   logLik deviance df.resid \n   10304    10418    -5136    10272     8831 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-3.518 -0.772  0.442  0.656  2.465 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 0.698    0.836   \n q       (Intercept) 0.050    0.224   \nNumber of obs: 8847, groups:  subject, 316; q, 14\n\nFixed effects:\n                                           Estimate Std. Error z value Pr(>|z|)\n(Intercept)                                 1.23284    0.17025    7.24  4.4e-13\ngraphtriangular                            -2.10147    0.16515  -12.72  < 2e-16\npretty_conditiontext:what                   0.06087    0.19423    0.31   0.7540\npretty_conditiontext:how                    0.00227    0.18842    0.01   0.9904\npretty_conditionimg:static                 -0.02087    0.19087   -0.11   0.9129\npretty_conditionimg:ixv                    -0.06727    0.18602   -0.36   0.7176\norderLM-First                              -0.04563    0.11925   -0.38   0.7020\nscenariolongmire                           -0.15335    0.11994   -1.28   0.2010\ngraphtriangular:pretty_conditiontext:what   0.68217    0.16228    4.20  2.6e-05\ngraphtriangular:pretty_conditiontext:how    0.65579    0.15738    4.17  3.1e-05\ngraphtriangular:pretty_conditionimg:static  0.66430    0.15923    4.17  3.0e-05\ngraphtriangular:pretty_conditionimg:ixv     1.45041    0.15680    9.25  < 2e-16\ngraphtriangular:orderLM-First               0.28160    0.09952    2.83   0.0047\ngraphtriangular:scenariolongmire            0.99750    0.21493    4.64  3.5e-06\n                                              \n(Intercept)                                ***\ngraphtriangular                            ***\npretty_conditiontext:what                     \npretty_conditiontext:how                      \npretty_conditionimg:static                    \npretty_conditionimg:ixv                       \norderLM-First                                 \nscenariolongmire                              \ngraphtriangular:pretty_conditiontext:what  ***\ngraphtriangular:pretty_conditiontext:how   ***\ngraphtriangular:pretty_conditionimg:static ***\ngraphtriangular:pretty_conditionimg:ixv    ***\ngraphtriangular:orderLM-First              ** \ngraphtriangular:scenariolongmire           ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nCorrelation matrix not shown by default, as p = 14 > 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=3) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: accuracy\n                        Chisq Df Pr(>Chisq)    \n(Intercept)             52.44  1    4.4e-13 ***\ngraph                  161.91  1    < 2e-16 ***\npretty_condition         0.48  4     0.9751    \norder                    0.15  1     0.7020    \nscenario                 1.63  1     0.2010    \ngraph:pretty_condition  86.58  4    < 2e-16 ***\ngraph:order              8.01  1     0.0047 ** \ngraph:scenario          21.54  1    3.5e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 16 × 9\n   effect  group term  estimate std.error statistic   p.value conf.low conf.high\n   <chr>   <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 fixed   <NA>  (Int…  1.23       0.170     7.24    4.44e-13   0.899     1.57  \n 2 fixed   <NA>  grap… -2.10       0.165   -12.7     4.33e-37  -2.43     -1.78  \n 3 fixed   <NA>  pret…  0.0609     0.194     0.313   7.54e- 1  -0.320     0.442 \n 4 fixed   <NA>  pret…  0.00227    0.188     0.0120  9.90e- 1  -0.367     0.372 \n 5 fixed   <NA>  pret… -0.0209     0.191    -0.109   9.13e- 1  -0.395     0.353 \n 6 fixed   <NA>  pret… -0.0673     0.186    -0.362   7.18e- 1  -0.432     0.297 \n 7 fixed   <NA>  orde… -0.0456     0.119    -0.383   7.02e- 1  -0.279     0.188 \n 8 fixed   <NA>  scen… -0.153      0.120    -1.28    2.01e- 1  -0.388     0.0817\n 9 fixed   <NA>  grap…  0.682      0.162     4.20    2.63e- 5   0.364     1.00  \n10 fixed   <NA>  grap…  0.656      0.157     4.17    3.09e- 5   0.347     0.964 \n11 fixed   <NA>  grap…  0.664      0.159     4.17    3.02e- 5   0.352     0.976 \n12 fixed   <NA>  grap…  1.45       0.157     9.25    2.25e-20   1.14      1.76  \n13 fixed   <NA>  grap…  0.282      0.0995    2.83    4.66e- 3   0.0865    0.477 \n14 fixed   <NA>  grap…  0.997      0.215     4.64    3.47e- 6   0.576     1.42  \n15 ran_pa… subj… sd__…  0.836     NA        NA      NA         NA        NA     \n16 ran_pa… q     sd__…  0.224     NA        NA      NA         NA        NA     \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 16 × 9\n   effect  group term  estimate std.error statistic   p.value conf.low conf.high\n   <chr>   <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 fixed   <NA>  (Int…    3.43     0.584     7.24    4.44e-13   2.46       4.79 \n 2 fixed   <NA>  grap…    0.122    0.0202  -12.7     4.33e-37   0.0885     0.169\n 3 fixed   <NA>  pret…    1.06     0.206     0.313   7.54e- 1   0.726      1.56 \n 4 fixed   <NA>  pret…    1.00     0.189     0.0120  9.90e- 1   0.693      1.45 \n 5 fixed   <NA>  pret…    0.979    0.187    -0.109   9.13e- 1   0.674      1.42 \n 6 fixed   <NA>  pret…    0.935    0.174    -0.362   7.18e- 1   0.649      1.35 \n 7 fixed   <NA>  orde…    0.955    0.114    -0.383   7.02e- 1   0.756      1.21 \n 8 fixed   <NA>  scen…    0.858    0.103    -1.28    2.01e- 1   0.678      1.09 \n 9 fixed   <NA>  grap…    1.98     0.321     4.20    2.63e- 5   1.44       2.72 \n10 fixed   <NA>  grap…    1.93     0.303     4.17    3.09e- 5   1.42       2.62 \n11 fixed   <NA>  grap…    1.94     0.309     4.17    3.02e- 5   1.42       2.65 \n12 fixed   <NA>  grap…    4.26     0.669     9.25    2.25e-20   3.14       5.80 \n13 fixed   <NA>  grap…    1.33     0.132     2.83    4.66e- 3   1.09       1.61 \n14 fixed   <NA>  grap…    2.71     0.583     4.64    3.47e- 6   1.78       4.13 \n15 ran_pa… subj… sd__…    0.836   NA        NA      NA         NA         NA    \n16 ran_pa… q     sd__…    0.224   NA        NA      NA         NA         NA    \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM merTools\n#setup empty df \nnewdata <- df_i %>% dplyr::select(graph, pretty_condition, order, scenario, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning in predictInterval(m, newdata = newdata, which = \"fixed\", type = \"probability\", : newdata is tbl_df or tbl object from dplyr package and has been\n              coerced to a data.frame\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(graph, pretty_condition, scenario, order, fit, lwr, upr) %>% \n  group_by(graph, pretty_condition, scenario, order) %>% \n  dplyr::summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 40 × 7\n# Groups:   graph, pretty_condition, scenario [20]\n   graph  pretty_condition scenario order    median lower upper\n   <fct>  <fct>            <fct>    <fct>     <dbl> <dbl> <dbl>\n 1 linear control          axis     TM-First  0.773 0.484 0.927\n 2 linear control          axis     LM-First  0.766 0.473 0.923\n 3 linear control          longmire TM-First  0.747 0.448 0.915\n 4 linear control          longmire LM-First  0.738 0.436 0.911\n 5 linear text:what        axis     TM-First  0.783 0.495 0.930\n 6 linear text:what        axis     LM-First  0.777 0.489 0.928\n 7 linear text:what        longmire TM-First  0.757 0.460 0.919\n 8 linear text:what        longmire LM-First  0.750 0.449 0.917\n 9 linear text:how         axis     TM-First  0.773 0.483 0.925\n10 linear text:how         axis     LM-First  0.765 0.472 0.923\n# … with 30 more rows\n\n\n\n\nInference TODO UPDATE\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\np <- plot_model(m, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\")\np[[1]] + p[[2]] + p[[3]]\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")\n# plot_model(m, type = \"eff\")\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n3.43\n2.46 – 4.79\n<0.001\n\n\ngraph [triangular]\n0.12\n0.09 – 0.17\n<0.001\n\n\npretty conditiontext *what\n1.06\n0.73 – 1.56\n0.754\n\n\npretty conditiontext *how\n1.00\n0.69 – 1.45\n0.990\n\n\npretty conditionimg *static\n0.98\n0.67 – 1.42\n0.913\n\n\npretty conditionimg * ixv\n0.93\n0.65 – 1.35\n0.718\n\n\norder [LM-First]\n0.96\n0.76 – 1.21\n0.702\n\n\nscenario [longmire]\n0.86\n0.68 – 1.09\n0.201\n\n\ngraph [triangular] *pretty conditiontext *what\n1.98\n1.44 – 2.72\n<0.001\n\n\ngraph [triangular] *pretty conditiontext *how\n1.93\n1.42 – 2.62\n<0.001\n\n\ngraph [triangular] *pretty conditionimg *static\n1.94\n1.42 – 2.65\n<0.001\n\n\ngraph [triangular] *pretty conditionimg * ixv\n4.26\n3.14 – 5.80\n<0.001\n\n\ngraph [triangular] *order [LM-First]\n1.33\n1.09 – 1.61\n0.005\n\n\ngraph [triangular] *scenario [longmire]\n2.71\n1.78 – 4.13\n<0.001\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n0.70\n\n\nτ00 q\n0.05\n\n\nICC\n0.19\n\n\nN subject\n316\n\n\nN q\n14\n\nObservations\n8847\n\n\nMarginal R2 / Conditional R2\n0.078 / 0.249\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#drawing-task",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#drawing-task",
    "title": "3  Hypothesis Testing",
    "section": "DRAWING TASK",
    "text": "DRAWING TASK\n\nSetup\n\n\nCODE\ndf_s <- df_subjects \n\n\n\n\nVisualize\n\n\nCODE\nggbarstats( x = draw_type, y =pretty_condition , data = df_s,\n            title = \"Drawing Type by Condition\")\n\n\n\n\n\nCODE\n#drawing type by order \ngrouped_ggbarstats( x = draw_type, y =pretty_condition , \n                    grouping.var = order, data = df_s,\n                    annotation.args = list(\n                      title = \"Drawing type BY ORDER\"\n                    ))\n\n\n\n\n\nCODE\n#drawing type by tm-scenario \ngrouped_ggbarstats( x = draw_type, y =pretty_condition , \n                    grouping.var = tm_scenarios, data = df_s,\n                    annotation.args = list(\n                      title = \"Drawing type BY tm-scenario\"\n                    ))\n\n\n\n\n\n\n\nMULTINOMIAL REGRESSION\nDoes condition affect the type of drawing produced?\n\nFit Model [multinom]\n\n\nCODE\n#https://www.elff.eu/software/mclogit/manual/mblogit/\n#\"baseline category logit\" model matches multinom()\n\n#check reference level \nprint(\"Categories (first is reference)\")\n\n\n[1] \"Categories (first is reference)\"\n\n\nCODE\nlevels(df_s$draw_type)\n\n\n[1] \"Linear Model\"             \"Scatterplot\"             \n[3] \"Triangular\"               \"Triangular (asymmetric)\" \n[5] \"Triangular (right angle)\"\n\n\nCODE\n#FIT EMPTY MODEL\nprint(\"EMPTY MODEL\")\n\n\n[1] \"EMPTY MODEL\"\n\n\nCODE\nmm.cat.rSQ <- multinom(draw_type ~ 1 , data = df_s)\n\n\n# weights:  10 (4 variable)\ninitial  value 508.582380 \niter  10 value 282.089320\nfinal  value 282.088557 \nconverged\n\n\nCODE\n# summary(mm.cat.rSQ)\n\n#FIT PREDICTOR MODEL\nprint(\"CONDITION MODEL\")\n\n\n[1] \"CONDITION MODEL\"\n\n\nCODE\nmm.cat.CrSQ <- multinom(draw_type ~ pretty_condition , data = df_s)\n\n\n# weights:  30 (20 variable)\ninitial  value 508.582380 \niter  10 value 265.311738\niter  20 value 262.186739\niter  30 value 262.064683\niter  40 value 262.063130\nfinal  value 262.063125 \nconverged\n\n\nCODE\nmb <- mblogit(draw_type ~ pretty_condition , data = df_s)\n\n\n\nIteration 1 - deviance = 548 - criterion = 0.0223\nIteration 2 - deviance = 529 - criterion = 0.0357\nIteration 3 - deviance = 526 - criterion = 0.00618\nIteration 4 - deviance = 525 - criterion = 0.0018\nIteration 5 - deviance = 524 - criterion = 0.000653\nIteration 6 - deviance = 524 - criterion = 0.00024\nIteration 7 - deviance = 524 - criterion = 0.0000882\nIteration 8 - deviance = 524 - criterion = 0.0000324\nIteration 9 - deviance = 524 - criterion = 0.0000119\nIteration 10 - deviance = 524 - criterion = 4.39e-06\nIteration 11 - deviance = 524 - criterion = 1.61e-06\nIteration 12 - deviance = 524 - criterion = 5.94e-07\nIteration 13 - deviance = 524 - criterion = 2.18e-07\nIteration 14 - deviance = 524 - criterion = 8.04e-08\nIteration 15 - deviance = 524 - criterion = 2.96e-08\nIteration 16 - deviance = 524 - criterion = 1.09e-08\nIteration 17 - deviance = 524 - criterion = 4e-09\nconverged\n\n\nCODE\nsummary(mb)\n\n\n\nCall:\nmblogit(formula = draw_type ~ pretty_condition, data = df_s)\n\nEquation for Scatterplot vs Linear Model:\n                           Estimate Std. Error z value Pr(>|z|)  \n(Intercept)                  -1.792      1.080   -1.66    0.097 .\npretty_conditiontext:what     1.792   3232.468    0.00    1.000  \npretty_conditiontext:how      0.693      1.581    0.44    0.661  \npretty_conditionimg:static  -15.450   2096.388   -0.01    0.994  \npretty_conditionimg:ixv       1.792      1.780    1.01    0.314  \n\nEquation for Triangular vs Linear Model:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                   1.7346     0.4428    3.92    9e-05 ***\npretty_conditiontext:what    17.6463  2285.7001    0.01    0.994    \npretty_conditiontext:how      1.0380     0.7418    1.40    0.162    \npretty_conditionimg:static    0.0331     0.6028    0.05    0.956    \npretty_conditionimg:ixv       2.3085     1.1016    2.10    0.036 *  \n\nEquation for Triangular (asymmetric) vs Linear Model:\n                                                   Estimate Std. Error z value\nTriangular (asymmetric)~(Intercept)                  -0.693      0.707   -0.98\nTriangular (asymmetric)~pretty_conditiontext:what    17.261   2285.700    0.01\nTriangular (asymmetric)~pretty_conditiontext:how      1.204      1.017    1.18\nTriangular (asymmetric)~pretty_conditionimg:static    0.134      0.945    0.14\nTriangular (asymmetric)~pretty_conditionimg:ixv       2.639      1.282    2.06\n                                                   Pr(>|z|)  \nTriangular (asymmetric)~(Intercept)                   0.327  \nTriangular (asymmetric)~pretty_conditiontext:what     0.994  \nTriangular (asymmetric)~pretty_conditiontext:how      0.236  \nTriangular (asymmetric)~pretty_conditionimg:static    0.888  \nTriangular (asymmetric)~pretty_conditionimg:ixv       0.039 *\n\nEquation for Triangular (right angle) vs Linear Model:\n                                                     Estimate Std. Error\nTriangular (right angle)~(Intercept)                   1.0415     0.4749\nTriangular (right angle)~pretty_conditiontext:what    16.2192  2285.7002\nTriangular (right angle)~pretty_conditiontext:how      0.0572     0.8185\nTriangular (right angle)~pretty_conditionimg:static   -0.6848     0.6844\nTriangular (right angle)~pretty_conditionimg:ixv      -0.3483     1.3136\n                                                    z value Pr(>|z|)  \nTriangular (right angle)~(Intercept)                   2.19    0.028 *\nTriangular (right angle)~pretty_conditiontext:what     0.01    0.994  \nTriangular (right angle)~pretty_conditiontext:how      0.07    0.944  \nTriangular (right angle)~pretty_conditionimg:static   -1.00    0.317  \nTriangular (right angle)~pretty_conditionimg:ixv      -0.27    0.791  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNull Deviance:     1020 \nResidual Deviance: 524 \nNumber of Fisher Scoring iterations:  17 \nNumber of observations:  316 \n\n\nCODE\n# print(\"CONDITION + ORDER MODEL\")\nmm.cat.C.0rSQ <- multinom(draw_type ~ pretty_condition + order , data = df_s)\n\n\n# weights:  35 (24 variable)\ninitial  value 508.582380 \niter  10 value 258.913395\niter  20 value 255.317759\niter  30 value 255.089921\niter  40 value 255.087667\nfinal  value 255.087662 \nconverged\n\n\nCODE\nmb2 <- mblogit(draw_type ~ pretty_condition + order , data = df_s)\n\n\n\nIteration 1 - deviance = 540 - criterion = 0.00892\nIteration 2 - deviance = 518 - criterion = 0.0436\nIteration 3 - deviance = 513 - criterion = 0.00925\nIteration 4 - deviance = 511 - criterion = 0.00335\nIteration 5 - deviance = 511 - criterion = 0.00134\nIteration 6 - deviance = 510 - criterion = 0.000519\nIteration 7 - deviance = 510 - criterion = 0.000195\nIteration 8 - deviance = 510 - criterion = 0.0000723\nIteration 9 - deviance = 510 - criterion = 0.0000267\nIteration 10 - deviance = 510 - criterion = 9.83e-06\nIteration 11 - deviance = 510 - criterion = 3.62e-06\nIteration 12 - deviance = 510 - criterion = 1.33e-06\nIteration 13 - deviance = 510 - criterion = 4.9e-07\nIteration 14 - deviance = 510 - criterion = 1.8e-07\nIteration 15 - deviance = 510 - criterion = 6.63e-08\nIteration 16 - deviance = 510 - criterion = 2.44e-08\nIteration 17 - deviance = 510 - criterion = 8.97e-09\nconverged\n\n\nWarning: fitted probabilities numerically 0 occurred\n\n\nCODE\nsummary(mb2)\n\n\n\nCall:\nmblogit(formula = draw_type ~ pretty_condition + order, data = df_s)\n\nEquation for Scatterplot vs Linear Model:\n                           Estimate Std. Error z value Pr(>|z|)\n(Intercept)                  -1.592      1.087   -1.46     0.14\npretty_conditiontext:what     1.879   2986.518    0.00     1.00\npretty_conditiontext:how      0.662      1.582    0.42     0.68\npretty_conditionimg:static  -15.261   1907.957   -0.01     0.99\npretty_conditionimg:ixv       1.783      1.781    1.00     0.32\norderLM-First               -13.830   1283.205   -0.01     0.99\n\nEquation for Triangular vs Linear Model:\n                            Estimate Std. Error z value Pr(>|z|)  \n(Intercept)                   1.1497     0.4756    2.42    0.016 *\npretty_conditiontext:what    17.5381  2158.7014    0.01    0.994  \npretty_conditiontext:how      1.1034     0.7537    1.46    0.143  \npretty_conditionimg:static    0.0319     0.6179    0.05    0.959  \npretty_conditionimg:ixv       2.3259     1.1100    2.10    0.036 *\norderLM-First                 1.6837     0.6606    2.55    0.011 *\n\nEquation for Triangular (asymmetric) vs Linear Model:\n                                                   Estimate Std. Error z value\nTriangular (asymmetric)~(Intercept)                  -0.967      0.739   -1.31\nTriangular (asymmetric)~pretty_conditiontext:what    17.150   2158.701    0.01\nTriangular (asymmetric)~pretty_conditiontext:how      1.239      1.019    1.22\nTriangular (asymmetric)~pretty_conditionimg:static    0.133      0.948    0.14\nTriangular (asymmetric)~pretty_conditionimg:ixv       2.648      1.284    2.06\nTriangular (asymmetric)~orderLM-First                 1.007      0.785    1.28\n                                                   Pr(>|z|)  \nTriangular (asymmetric)~(Intercept)                   0.191  \nTriangular (asymmetric)~pretty_conditiontext:what     0.994  \nTriangular (asymmetric)~pretty_conditiontext:how      0.224  \nTriangular (asymmetric)~pretty_conditionimg:static    0.888  \nTriangular (asymmetric)~pretty_conditionimg:ixv       0.039 *\nTriangular (asymmetric)~orderLM-First                 0.199  \n\nEquation for Triangular (right angle) vs Linear Model:\n                                                    Estimate Std. Error z value\nTriangular (right angle)~(Intercept)                   0.573      0.513    1.12\nTriangular (right angle)~pretty_conditiontext:what    16.110   2158.701    0.01\nTriangular (right angle)~pretty_conditiontext:how      0.112      0.826    0.14\nTriangular (right angle)~pretty_conditionimg:static   -0.686      0.694   -0.99\nTriangular (right angle)~pretty_conditionimg:ixv      -0.334      1.319   -0.25\nTriangular (right angle)~orderLM-First                 1.458      0.707    2.06\n                                                    Pr(>|z|)  \nTriangular (right angle)~(Intercept)                   0.265  \nTriangular (right angle)~pretty_conditiontext:what     0.994  \nTriangular (right angle)~pretty_conditiontext:how      0.892  \nTriangular (right angle)~pretty_conditionimg:static    0.323  \nTriangular (right angle)~pretty_conditionimg:ixv       0.800  \nTriangular (right angle)~orderLM-First                 0.039 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNull Deviance:     1020 \nResidual Deviance: 510 \nNumber of Fisher Scoring iterations:  17 \nNumber of observations:  316 \n\n\nCODE\n#COMPARE MODEL FIT\npaste(\"AIC wth predictor is lower than empty model?\", AIC(mm.cat.rSQ) > AIC(mm.cat.CrSQ))\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(mm.cat.rSQ, mm.cat.CrSQ)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName        |    Model | df | df_diff |  Chi2 |      p\n------------------------------------------------------\nmm.cat.rSQ  | multinom |  4 |         |       |       \nmm.cat.CrSQ | multinom | 20 |      16 | 40.05 | < .001\n\n\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.cat.CrSQ\n\n#DESCRIBE MODEL\nsummary(mb) #use mblogit version to see estimate level p values\n\n\n\nCall:\nmblogit(formula = draw_type ~ pretty_condition, data = df_s)\n\nEquation for Scatterplot vs Linear Model:\n                           Estimate Std. Error z value Pr(>|z|)  \n(Intercept)                  -1.792      1.080   -1.66    0.097 .\npretty_conditiontext:what     1.792   3232.468    0.00    1.000  \npretty_conditiontext:how      0.693      1.581    0.44    0.661  \npretty_conditionimg:static  -15.450   2096.388   -0.01    0.994  \npretty_conditionimg:ixv       1.792      1.780    1.01    0.314  \n\nEquation for Triangular vs Linear Model:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                   1.7346     0.4428    3.92    9e-05 ***\npretty_conditiontext:what    17.6463  2285.7001    0.01    0.994    \npretty_conditiontext:how      1.0380     0.7418    1.40    0.162    \npretty_conditionimg:static    0.0331     0.6028    0.05    0.956    \npretty_conditionimg:ixv       2.3085     1.1016    2.10    0.036 *  \n\nEquation for Triangular (asymmetric) vs Linear Model:\n                                                   Estimate Std. Error z value\nTriangular (asymmetric)~(Intercept)                  -0.693      0.707   -0.98\nTriangular (asymmetric)~pretty_conditiontext:what    17.261   2285.700    0.01\nTriangular (asymmetric)~pretty_conditiontext:how      1.204      1.017    1.18\nTriangular (asymmetric)~pretty_conditionimg:static    0.134      0.945    0.14\nTriangular (asymmetric)~pretty_conditionimg:ixv       2.639      1.282    2.06\n                                                   Pr(>|z|)  \nTriangular (asymmetric)~(Intercept)                   0.327  \nTriangular (asymmetric)~pretty_conditiontext:what     0.994  \nTriangular (asymmetric)~pretty_conditiontext:how      0.236  \nTriangular (asymmetric)~pretty_conditionimg:static    0.888  \nTriangular (asymmetric)~pretty_conditionimg:ixv       0.039 *\n\nEquation for Triangular (right angle) vs Linear Model:\n                                                     Estimate Std. Error\nTriangular (right angle)~(Intercept)                   1.0415     0.4749\nTriangular (right angle)~pretty_conditiontext:what    16.2192  2285.7002\nTriangular (right angle)~pretty_conditiontext:how      0.0572     0.8185\nTriangular (right angle)~pretty_conditionimg:static   -0.6848     0.6844\nTriangular (right angle)~pretty_conditionimg:ixv      -0.3483     1.3136\n                                                    z value Pr(>|z|)  \nTriangular (right angle)~(Intercept)                   2.19    0.028 *\nTriangular (right angle)~pretty_conditiontext:what     0.01    0.994  \nTriangular (right angle)~pretty_conditiontext:how      0.07    0.944  \nTriangular (right angle)~pretty_conditionimg:static   -1.00    0.317  \nTriangular (right angle)~pretty_conditionimg:ixv      -0.27    0.791  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNull Deviance:     1020 \nResidual Deviance: 524 \nNumber of Fisher Scoring iterations:  17 \nNumber of observations:  316 \n\n\nCODE\n#INTERPRET COEFFICIENTS\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 20 × 8\n   y.level       term  estimate std.error statistic   p.value conf.low conf.high\n   <chr>         <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 Scatterplot   (Int…  -1.79     1.08e+0  -1.66e+0 9.72e-  2   -3.91      0.325\n 2 Scatterplot   pret…  -2.13     4.64e-8  -4.58e+7 0           -2.13     -2.13 \n 3 Scatterplot   pret…   0.693    1.58e+0   4.38e-1 6.61e-  1   -2.41      3.79 \n 4 Scatterplot   pret… -13.8      6.12e-6  -2.25e+6 0          -13.8     -13.8  \n 5 Scatterplot   pret…   1.79     1.78e+0   1.01e+0 3.14e-  1   -1.70      5.28 \n 6 Triangular    (Int…   1.73     4.43e-1   3.92e+0 8.95e-  5    0.867     2.60 \n 7 Triangular    pret…  16.4      3.48e-1   4.72e+1 0           15.7      17.1  \n 8 Triangular    pret…   1.04     7.42e-1   1.40e+0 1.62e-  1   -0.416     2.49 \n 9 Triangular    pret…   0.0329   6.03e-1   5.46e-2 9.56e-  1   -1.15      1.21 \n10 Triangular    pret…   2.31     1.10e+0   2.10e+0 3.61e-  2    0.149     4.47 \n11 Triangular (… (Int…  -0.693    7.07e-1  -9.80e-1 3.27e-  1   -2.08      0.693\n12 Triangular (… pret…  16.0      5.72e-1   2.81e+1 2.67e-173   14.9      17.2  \n13 Triangular (… pret…   1.20     1.02e+0   1.18e+0 2.36e-  1   -0.789     3.20 \n14 Triangular (… pret…   0.133    9.45e-1   1.41e-1 8.88e-  1   -1.72      1.99 \n15 Triangular (… pret…   2.64     1.28e+0   2.06e+0 3.95e-  2    0.127     5.15 \n16 Triangular (… (Int…   1.04     4.75e-1   2.19e+0 2.83e-  2    0.111     1.97 \n17 Triangular (… pret…  15.0      4.24e-1   3.54e+1 3.11e-274   14.2      15.8  \n18 Triangular (… pret…   0.0570   8.19e-1   6.96e-2 9.45e-  1   -1.55      1.66 \n19 Triangular (… pret…  -0.685    6.84e-1  -1.00e+0 3.17e-  1   -2.03      0.656\n20 Triangular (… pret…  -0.349    1.31e+0  -2.66e-1 7.91e-  1   -2.92      2.23 \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 20 × 8\n   y.level       term  estimate std.error statistic   p.value conf.low conf.high\n   <chr>         <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 Scatterplot   (Int…  1.67e-1   1.08e+0  -1.66e+0 9.72e-  2  2.01e-2   1.38e+0\n 2 Scatterplot   pret…  1.19e-1   4.64e-8  -4.58e+7 0          1.19e-1   1.19e-1\n 3 Scatterplot   pret…  2.00e+0   1.58e+0   4.38e-1 6.61e-  1  9.02e-2   4.44e+1\n 4 Scatterplot   pret…  1.05e-6   6.12e-6  -2.25e+6 0          1.05e-6   1.05e-6\n 5 Scatterplot   pret…  6.00e+0   1.78e+0   1.01e+0 3.14e-  1  1.83e-1   1.96e+2\n 6 Triangular    (Int…  5.67e+0   4.43e-1   3.92e+0 8.95e-  5  2.38e+0   1.35e+1\n 7 Triangular    pret…  1.37e+7   3.48e-1   4.72e+1 0          6.90e+6   2.70e+7\n 8 Triangular    pret…  2.82e+0   7.42e-1   1.40e+0 1.62e-  1  6.60e-1   1.21e+1\n 9 Triangular    pret…  1.03e+0   6.03e-1   5.46e-2 9.56e-  1  3.17e-1   3.37e+0\n10 Triangular    pret…  1.01e+1   1.10e+0   2.10e+0 3.61e-  2  1.16e+0   8.71e+1\n11 Triangular (… (Int…  5.00e-1   7.07e-1  -9.80e-1 3.27e-  1  1.25e-1   2.00e+0\n12 Triangular (… pret…  9.28e+6   5.72e-1   2.81e+1 2.67e-173  3.03e+6   2.85e+7\n13 Triangular (… pret…  3.33e+0   1.02e+0   1.18e+0 2.36e-  1  4.54e-1   2.44e+1\n14 Triangular (… pret…  1.14e+0   9.45e-1   1.41e-1 8.88e-  1  1.79e-1   7.28e+0\n15 Triangular (… pret…  1.40e+1   1.28e+0   2.06e+0 3.95e-  2  1.13e+0   1.73e+2\n16 Triangular (… (Int…  2.83e+0   4.75e-1   2.19e+0 2.83e-  2  1.12e+0   7.19e+0\n17 Triangular (… pret…  3.28e+6   4.24e-1   3.54e+1 3.11e-274  1.43e+6   7.52e+6\n18 Triangular (… pret…  1.06e+0   8.19e-1   6.96e-2 9.45e-  1  2.13e-1   5.27e+0\n19 Triangular (… pret…  5.04e-1   6.84e-1  -1.00e+0 3.17e-  1  1.32e-1   1.93e+0\n20 Triangular (… pret…  7.06e-1   1.31e+0  -2.66e-1 7.91e-  1  5.38e-2   9.26e+0\n\n\nCODE\n#PERFORMANCE\nperformance(m)\n\n\nCan't calculate log-loss.\nCan't calculate proper scoring rules for ordinal, multinomial or cumulative link models.\n\n\n# Indices of model performance\n\nAIC     |     BIC |    R2 | R2 (adj.) |  RMSE | Sigma\n-----------------------------------------------------\n564.126 | 639.241 | 0.071 |     0.067 | 0.291 | 1.331\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#PREDICT METHOD\nnewdata <- df_i %>% dplyr::select(pretty_condition, subject)\npreds <- predict(m, newdata = newdata, type = \"probs\")\npreds <- cbind(newdata, preds)\n#lengthen data frame to handle multinomial\npreds <- preds %>%\n  dplyr::select(-subject) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = !pretty_condition,\n  values_to = \"preds\",\n  names_to = \"drawing_type\",\n)\n\n(p <- preds %>%\n  group_by(pretty_condition, drawing_type ) %>%\n  dplyr::summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 25 × 6\n# Groups:   pretty_condition [5]\n   pretty_condition drawing_type               median    se      lwr      upr\n   <fct>            <chr>                       <dbl> <dbl>    <dbl>    <dbl>\n 1 control          Linear Model             9.83e- 2     0 9.83e- 2 9.83e- 2\n 2 control          Scatterplot              1.64e- 2     0 1.64e- 2 1.64e- 2\n 3 control          Triangular               5.57e- 1     0 5.57e- 1 5.57e- 1\n 4 control          Triangular (asymmetric)  4.92e- 2     0 4.92e- 2 4.92e- 2\n 5 control          Triangular (right angle) 2.79e- 1     0 2.79e- 1 2.79e- 1\n 6 text:what        Linear Model             1.10e- 8     0 1.10e- 8 1.10e- 8\n 7 text:what        Scatterplot              2.17e-10     0 2.17e-10 2.17e-10\n 8 text:what        Triangular               8.47e- 1     0 8.47e- 1 8.47e- 1\n 9 text:what        Triangular (asymmetric)  5.08e- 2     0 5.08e- 2 5.08e- 2\n10 text:what        Triangular (right angle) 1.02e- 1     0 1.02e- 1 1.02e- 1\n# … with 15 more rows\n\n\nCODE\n##DRAWS METHOD\n# GENERATE draws from model\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# # SUMMARIZE draws from model\n# (k <- kable(draws %>%\n#   dplyr::select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 4, col.names =\n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>%\n#   kable_styling())\n\n\n\n\nINFERENCE\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, vline.color = \"red\", \n#            show.intercept = TRUE, \n#            show.values = TRUE,\n#            p.threshold = 0.1, #manually adjust to account for directional test\n#            ci.lvl = 0.90 ) + #manually adjusted for directional test   \n#   labs(title = \"Model Estimate | Odds Ratio\",\n#        subtitle = \"\",\n#        x = \"Condition\")\n\n\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(m, exponentiate = TRUE, component = \"all\")\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n# + theme_clean()\n\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"eff\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Drawing Type\",\n           axis.title = c(\"Condition\",\"Probability of Drawing Type\"))\n\n\n$pretty_condition\n\n\n\n\n\n\n\nCODE\n#::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n##WORKING\n# https://mjskay.github.io/ggdist/reference/stat_slab.html\n## VIS probability of correct response\n#TAKES A REALLY LONG TIME\n\n#1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, ospan_split, subject, q) %>%\n#   add_epred_draws(m,\n#                    # ndraws = 100, # n = 100,\n#                    # dpar = TRUE,\n#                    transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n# \n# #2| VISUALIZE PREDICTIONS | GGDIST\n# ##TODO figure out height normalization.\n# ##do it with much smaller number of draws \n# #TODO adjust bandwidth/smoothing? + put on same line + \n# #TAKES A REAAALY LONG TIME\n# # d <- \n# \n# d <- draws %>% sample_n(10) %>% \n#   ggplot(aes(x = .epred,  y = pretty_condition, fill = ospan_split)) +\n#   stat_slab(width = c(.95), alpha = 0.5, normalize=\"xy\") +\n#   facet_wrap(~.category) +\n#   #   #normalize = all, panels, xy, groups, none\n#   xlim(0,1) + labs(\n#     title = \"Model Predicted Probability of Correct Response\",\n#     x = \"probability of correct response\",\n#     y = \"Interpretation\"\n#   ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()\n# # # \n# # # ggsave(d, filename = \"figures/sgc3a_BBm.cat.CrSQ_lab_posterior.svg\", width = 6, height =4)\n# d\n\n\n\n\nCODE\n#DISPLAY MODEL AS TABLE\ntab_model(m)\n\n\n\n\n \ndraw type\n\n\nPredictors\nOdds Ratios\nCI\np\nResponse\n\n\n(Intercept)\n0.17\n0.02 – 1.40\n0.098\nScatterplot\n\n\npretty conditiontext *what\n0.12\n0.12 – 0.12\n<0.001\nScatterplot\n\n\npretty conditiontext *how\n2.00\n0.09 – 44.93\n0.661\nScatterplot\n\n\npretty conditionimg *static\n0.00\n0.00 – 0.00\n<0.001\nScatterplot\n\n\npretty conditionimg * ixv\n6.00\n0.18 – 199.09\n0.315\nScatterplot\n\n\n(Intercept)\n5.67\n2.37 – 13.55\n<0.001\nTriangular\n\n\npretty conditiontext *what\n13653497.95\n6883935.96 – 27080148.24\n<0.001\nTriangular\n\n\npretty conditiontext *how\n2.82\n0.66 – 12.15\n0.163\nTriangular\n\n\npretty conditionimg *static\n1.03\n0.32 – 3.38\n0.957\nTriangular\n\n\npretty conditionimg * ixv\n10.06\n1.15 – 87.88\n0.037\nTriangular\n\n\n(Intercept)\n0.50\n0.12 – 2.01\n0.328\nTriangular (asymmetric)\n\n\npretty conditiontext *what\n9282527.20\n3013413.27 – 28593924.39\n<0.001\nTriangular (asymmetric)\n\n\npretty conditiontext *how\n3.33\n0.45 – 24.63\n0.237\nTriangular (asymmetric)\n\n\npretty conditionimg *static\n1.14\n0.18 – 7.34\n0.888\nTriangular (asymmetric)\n\n\npretty conditionimg * ixv\n13.99\n1.12 – 174.30\n0.040\nTriangular (asymmetric)\n\n\n(Intercept)\n2.83\n1.11 – 7.22\n0.029\nTriangular (right angle)\n\n\npretty conditiontext *what\n3276712.70\n1422488.59 – 7547931.30\n<0.001\nTriangular (right angle)\n\n\npretty conditiontext *how\n1.06\n0.21 – 5.30\n0.945\nTriangular (right angle)\n\n\npretty conditionimg *static\n0.50\n0.13 – 1.94\n0.318\nTriangular (right angle)\n\n\npretty conditionimg * ixv\n0.71\n0.05 – 9.36\n0.791\nTriangular (right angle)\n\n\nObservations\n316\n\n\nR2 / R2 adjusted\n0.071 / 0.067\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n#TODO OUTPUT TABLE \n\n#https://arelbundock.com/posts/modelsummary_multinomial_logit/\n# modelsummary(m)"
  },
  {
    "objectID": "analysis/SGC3A/1_sgc3A_introduction.html",
    "href": "analysis/SGC3A/1_sgc3A_introduction.html",
    "title": "4  Introduction",
    "section": "",
    "text": "In Study 3A we explore the extent to which confronting a learner with an implicit obstacle (a mental impasse) influences their interpretation of the underlying coordinate system. This is a hypothesis that emerged from analysis of Study 2, leading us to suspect that presenting a learner with a situation that induces a state of impasse will increase the probability that learners experience a moment of insight, and in turn restructure their interpretation of the coordinate system.\nIn the context of Study 2, an impasse state was (unintentionally) induced when the combination of question + data set yielded no available answer in the incorrect (cartesian) interpretation of the graph. In Study 3A, we test this hypothesis by comparing performance between a (treatment) group receiving impasse-inducing questions followed by normal questions, and a non-impasse control."
  },
  {
    "objectID": "analysis/SGC3A/1_sgc3A_introduction.html#methods",
    "href": "analysis/SGC3A/1_sgc3A_introduction.html#methods",
    "title": "4  Introduction",
    "section": "METHODS",
    "text": "METHODS\n\nDesign\nWe employed a mixed design with 1 between-subjects factor with 2 levels (Scaffold: control, impasse) and 15 items (within-subjects factor).\nIndependent Variables:\n\nB-S (Scaffold: control,impasse)\nW-S (Item x 15)\n\nDependent Variables:\n\nResponse Accuracy : Is the response triangular-correct?\nResponse Interpretation : (derived) With which interpretation of the graph is the subject’s response on an individual question consistent?\nResponse Latency : Time from stimulus onset to clicking ‘Submit’ button: time in (s)\n\n\n\nMaterials\nStimuli consisted of a series of 15 graph comprehension questions, each testing a different combination of time interval relations, to be read from a Triangular-Model graph. Figure 21.1. The list of questions can be found here.\n\n\n\nFigure 4.2: Sample Question (Q=1) for Graph Comprehension Task\n\n\nNote that across both control and impasse conditions, both the question, response options and graph structure were identical. The experimental manipulation (posing a mental impasse) was accomplished by changing the position of datapoints in the impasse-condition graph, such that for any given question, there was no available response option if the reader were to interpret the graph as cartesian (making an orthogonal rather than diagonal projection from the x-axis.)\nThe green line indicates the ideal-scanpath to the correct (triangular) answer to the first question, and the red line indicates the (incorrect) orthogonal interpretation. In the IMPASSE figure (at right), there are no data points that intersect the red line. We hypothesize that this presents the reader with an obstacle, at which point they are forced to confront their interpretation of the coordinate system and (ideally) develop a new strategy.\n\n\n\nFigure 4.3: Sample Question (Q=1) graphs for each condition\n\n\n\n\nProcedure\nParticipants completed the study via a web-browser.\n(1) Upon starting, they submitted informed consent, before reading task instructions.\n(2) Participants were introduced to a scenario in which they were to play the role of a project manager, scheduling shifts for a group of employees. The schedule of the employees was presented in a TriangularModel (TM) graph, and they would be answering question about the schedule.\n(3) Then participants completed an experimental block of 15 items.\n(3A) The first five items in the task are defined as the SCAFFOLDING block. In the IMPASSE condition, the first five questions included an IMPASSE problem state. For participants in the CONTROL condition, the dataset was structure such that there was always an available ‘orthogonal answer’ for the first 5 questions.\n(3B) The remaining 10 items are defined as the TESTING block. In both conditions, these questions were not structured as impasse (i.e. contained an available orthogonal answer)\n(4) Following the experimental block, participants answered a free-response question about their strategy for reading the graph, followed by a demographic questionnaire and debrief.\n\n\nSample\nData was collected by convenience sample of a university subject pool. Initial data (Fall 2017, Spring 2018) were collected in-person, with large groups of students simultaneously completing the study (independently) in a computer lab. In Fall 2021 and Winter 2022 we collected additional data to replicate results in a remote format (students completing the study asynchronously on their own computers)."
  },
  {
    "objectID": "analysis/SGC3A/1_sgc3A_introduction.html#analysis",
    "href": "analysis/SGC3A/1_sgc3A_introduction.html#analysis",
    "title": "4  Introduction",
    "section": "ANALYSIS",
    "text": "ANALYSIS\n\nData Preparation\nData were collected via a custom web application and stored in a NoSQL database. The following exclusion criteria were applied during data cleaning:\n\ncompletion status : “success” ; subject must have finished all parts of the study, including demographic questionnaire\nsession ID: [in list] ; subject must have been assigned to valid data collection session (discard testing and piloting data)\nbrowser interaction violations < 3; subject must have fewer than 3 violations of non-allowed browser interactions (i.e. resizing window, leaving browser tab or leaving fullscreen mode)\nself-rated effort > 2; subjects who reported, “not trying hard/rushing through questions” or “started out trying hard but giving up at some point” were excluded from analysis.\nattention check ==TRUE ; subjects who failed to answer a mid-study attention check question (Graph Comprehension Task Question #6) are excluded\n\nBefore analysis, data files from individual data collection periods are harmonized into a common data format.\n\n\n\n\n\n\n\nPre-Requisite\nFollowed By\n\n\n\n\nspring17_clean_data.Rmd  spring18_clean_data.Rmd  fall21_clean_data.Rmd  winter2022_clean_sgc3a.Rmd\n2_sgc3A_scoring.qmd\n\n\n\nData for study SGC_3A were collected across four time periods, interrupted by the Covid-19 pandemic.\n\n\n\nPeriod\nModality\n\n\n\n\nFall 2017\nin person, SONA groups in computer lab\n\n\nSpring 2018\nin person, SONA groups in computer lab\n\n\nFall 2021\nasynchronous, online, SONA\n\n\nWinter 2022\nasynchronous, online, SONA\n\n\n\nData collected in Fall 2017 (in person pilot) were analyzed and published as a Cognitive Science Society conference paper (“When Graph Comprehension is an Insight Problem). Additional data were collected in person in Spring 2018. Combined, Fall 2017 and Spring 2018 constitute the original SGC_3A study, conducted in person. Data collected in Fall 2021, Winter 2022 constitute the web-based replication, conducted online (asynchronously). In all cases, the experiment was administered via a web application. The replication study was conducted to validate the use of remote, asynchronous data collection during the Covid-19 pandemic.\nThe underlying data structure of the stimulus web application changed across the data collection period, resulting in slightly different data files (i.e. columns are not named consistently). In this section, we combine the files from each data collection period into a single harmonized data file for analysis (one for participants, one for items).\n\nParticipants\nFirst we import participant-level data from each data collection period, selecting only the columns relevant for analysis, and renaming columns to be consistent across each file. The result is a single data frame df_subjects containing one row for each subject (across all periods). Note that we are not discarding any response data. Rather, we discard columns that are automatically recorded by the stimulus web application and help the application run.\nNote that we discard some columns representing scores calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. No raw data (responses and response times) are discarded, only algorithmically-derived scores for the responses.\n\n\nCODE\n#IMPORT PARTICIPANT DATA\n\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#set datafiles\nfall17 <- \"analysis/SGC3A/data/0-session-level/fall17_sgc3a_participants.csv\" #COGSCI18 data\nspring18 <- \"analysis/SGC3A/data/0-session-level/spring18_sgc3a_participants.csv\"\nfall21 <- \"analysis/SGC3A/data/0-session-level/fall21_sgc3a_participants.csv\"\nwinter22 <- \"analysis/SGC3A/data/0-session-level/winter22_sgc3a_participants.rds\"\n\n#read datafiles, set mode and term\ndf_subjects_fall17 <- read_csv(fall17) %>% mutate(mode = \"lab-synch\", term = \"fall17\")\ndf_subjects_spring18 <- read_csv(spring18) %>% mutate(mode = \"lab-synch\", term = \"spring18\")\ndf_subjects_fall21 <- read_csv(fall21) %>% mutate(mode = \"asynch\", term = \"fall21\")\ndf_subjects_winter22 <- read_rds(winter22) #use RDS file as it contains metadata\n\n#SAVE METADATA FROM WINTER, but no rows \ndf_subjects <- df_subjects_winter22 %>% filter(condition=='X') %>% \n  dplyr::select(\n  subject,condition,term,mode,\n  gender,age,language, schoolyear, country,\n  effort,difficulty,confidence,enjoyment,other,\n  totaltime_m, \n  # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n  #exploratory factors\n  violations, browser, width, height\n)\n\n#reduce data collected using OLD webapp to useful columns\ndf_subjects_before <- rbind(df_subjects_fall17, df_subjects_spring18, df_subjects_fall21) %>% \n  #rename and summarize some columns\n  mutate(\n    totaltime_m = totalTime / 1000 / 60,  \n    absolute_score = triangular_score,\n    language = native_language,\n    gender = sex,\n    schoolyear = year) %>% \n  #create placeholders for cols not collected until NEW webapp [for later rbind]\n  mutate(\n    effort = \"NULL\",\n    difficulty = \"NULL\",\n    confidence = \"NULL\",\n    enjoyment = \"NULL\",\n    other = \"NULL\",\n    disability = \"NULL\",\n    violations = \"NULL\",\n    browser = \"NULL\",\n    width = \"NULL\",\n    height = \"NULL\"\n  ) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select(subject, condition, term, mode, \n                #demographics\n                gender, age, language, schoolyear, country,\n                #placeholder effort survey\n                effort, difficulty, confidence, enjoyment, \n                #placeholder misc \n                other, disability,\n                #response characteristics\n                totaltime_m, \n                # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                #exploratory factors\n                violations, browser, width, height)\n\n#save 'explanation' columns from winter22, which is actually a response to a free response item (Q16); was recorded with item_level data in old webapp\ndf_winter22_q16 <- df_subjects_winter22 %>% \n  dplyr::select(subject, condition, term , mode, explanation) %>% \n  mutate(\n    q = 16,\n    response = explanation\n  ) %>% dplyr::select(-explanation)\n\n#reduce data collected using NEW webapp to useful columns\ndf_subjects_winter22 <- df_subjects_winter22 %>% \n  mutate(score = absolute_score) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m, \n                 # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                 #exploratory factors \n                 violations, browser, width, height)\n\neffort_labels <- c(\"I tried my best on each question\", \"I tried my best on most questions\")\n\n#combine dataframes from old and new webapps\ndf_subjects <- rbind(df_subjects, df_subjects_winter22, df_subjects_before) %>% \n  #refactor factors\n  mutate (\n    subject = factor(subject),\n    condition = factor(condition),\n    pretty_condition = recode_factor(condition, \"111\" = \"control\", \"121\" =  \"impasse\"),\n    pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\"),\n    term = factor(term, levels= c(\"fall17\",\"spring18\",\"fall21\",\"winter22\")),\n    mode = factor(mode, levels=c(\"lab-synch\",\"asynch\")),\n    gender = factor(gender),\n    schoolyear = factor(schoolyear, levels=c(\"First\",\"Second\",\"Third\",\"Fourth\",\"Fifth\",\"Other\"))\n  )\n\n#FIX METADATA\n#Add metadata for columns that lost it [factors, for some reason!]\nvar_label(df_subjects$subject) <- \"ID of subject (randomly assigned in stimulus app).\"\nvar_label(df_subjects$condition) <- \"ID indicates randomly assigned condition (111 -> control, 121 -> impasse).\"\nvar_label(df_subjects$term) <- \"indicates if session was run with experimenter present or asynchronously\"\nvar_label(df_subjects$mode) <- \"indicates mode in which the participant completed the study\"\nvar_label(df_subjects$gender) <- \"What is your gender identity?\"\nvar_label(df_subjects$schoolyear) <- \"What is your year in school?\"\n\n#IMPORT OSPAN DATA \nospan <- read_csv(\"analysis/SGC3A/data/0-session-level/fall21_scored_ospan.csv\") %>% mutate(\n  subject = SUBJECTID\n) %>% dplyr::select(-SUBJECTID)\n\n#MERGE OSPAN DATA WITH SGC DATA \n#special dataframe with just ospan subjects\n#should be 133 subjects. Some of the 200 who completed the task failed the \n#attention check question. Others were allocated to SGC4A pilot. \n#note that rather than adding OSPAN data to main dataframe, the after-scored data\n#will be manually joined to df_ospan during exploratory analysis\ndf_ospan <- df_subjects %>% filter(\n  subject %in% ospan$subject\n) %>% merge(ospan) %>% rename(\n  OSPAN.order_num = order_num,\n  OSPAN.order_acc = order_acc,\n  OSPAN.math_acc = math_acc,\n  OSPAN.weighted = weighted\n) \n\n##CALCULATE OSPAN SPLIT\n#calculate ospan median split\nmedian_split <- median(df_ospan$OSPAN.weighted)\ndf_ospan <- df_ospan %>% mutate(\n  ospan_split = as.factor(OSPAN.weighted > median_split),\n  ospan_split = recode_factor(ospan_split, \"TRUE\" = \"high-memory\", \"FALSE\" = \"low-memory\")\n)\n\n#CLEANUP\nrm(df_subjects_fall17,df_subjects_fall21, df_subjects_spring18, df_subjects_winter22,df_subjects_before)\nrm(fall17,fall21,spring18,winter22)\n\n\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Control Condition\",\"Impasse Condition\",\"Total for Period\")\ncont <- table(df_subjects$term, df_subjects$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n      \n    Control Condition \n    Impasse Condition \n    Total for Period \n  \n \n\n  \n    fall17 \n    27 \n    27 \n    54 \n  \n  \n    spring18 \n    35 \n    37 \n    72 \n  \n  \n    fall21 \n    68 \n    71 \n    139 \n  \n  \n    winter22 \n    28 \n    37 \n    65 \n  \n  \n    Sum \n    158 \n    172 \n    330 \n  \n\n\n\n\n\nCODE\ntitle = \"Subset of Participants who completed OSPAN TASK [Fall 2021]\"\ncols = c(\"Control Condition\",\"Impasse Condition\",\"Total for Period\")\ncont <- table(df_ospan$mode, df_ospan$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nSubset of Participants who completed OSPAN TASK [Fall 2021]\n \n  \n      \n    Control Condition \n    Impasse Condition \n    Total for Period \n  \n \n\n  \n    lab-synch \n    0 \n    0 \n    0 \n  \n  \n    asynch \n    65 \n    68 \n    133 \n  \n  \n    Sum \n    65 \n    68 \n    133 \n  \n\n\n\n\n\n\n\nItems\nNext we import item-level data from each data collection period, selecting only the columns relevant for analysis, and renaming columns to be consistent across each file. The result is a single data frame df_items containing one row for each graph comprehension task question (qs=15) (across all periods). A second data frame df_freeresponse contains one row for each free response strategy question (last question posed to participants in Winter2022) Note that we do not discard any response data. Rather, we do discard several columns representing accuracy scores for responses that were calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. Original response data are always preserved.\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# #mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#set datafiles\nfall17 <- \"analysis/SGC3A/data/0-session-level/fall17_sgc3a_blocks.csv\"\nspring18 <- \"analysis/SGC3A/data/0-session-level/spring18_sgc3a_blocks.csv\"\nfall21 <- \"analysis/SGC3A/data/0-session-level/fall21_sgc3a_blocks.csv\"\nwinter22 <- \"analysis/SGC3A/data/0-session-level/winter22_sgc3a_items.rds\"\n\n#read datafiles, set mode and term\ndf_items_fall17 <- read_csv(fall17) %>% mutate(mode = \"lab-synch\", term = \"fall17\")\ndf_items_spring18 <- read_csv(spring18) %>% mutate(mode = \"lab-synch\", term = \"spring18\")\ndf_items_fall21 <- read_csv(fall21) %>% mutate(mode = \"asynch\", term = \"fall21\")\ndf_items_winter22 <- read_rds(winter22) #use RDS file as it contains metadata\n\n#get mapping being question # and interval relation the question tests, that is encoded only in the winter22 data files\nmap_relations <- df_items_winter22 %>% group_by(q) %>% dplyr::select(q,relation) %>% unique()\n\n#SAVE METADATA FROM WINTER, but no rows \ndf_items <- df_items_winter22 %>% filter(condition=='X') %>% dplyr::select(\n  subject,condition,term,mode,\n  question, q, answer, correct, rt_s\n) \n  \n#reduce data collected using old webapp\ndf_items_before <- rbind(df_items_fall17, df_items_spring18, df_items_fall21) %>% \n  mutate(rt_s = rt / 1000, correct = as.logical(correct)) %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) \n  \n#reduce data collected using new webapp\ndf_items_winter22 <- df_items_winter22 %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  )\n\n#combine dataframes from old and new webapps\ndf_items <- rbind(df_items, df_items_winter22,df_items_before) %>% \n  #refactorize columns\n  mutate(\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term, levels= c(\"fall17\",\"spring18\",\"fall21\",\"winter22\")),\n    mode = factor(mode, levels=c(\"lab-synch\",\"asynch\")),\n    q = as.integer(q)) %>% \n  #rename answer column to RESPONSE \n  rename(response = answer) %>% \n  #remove all commas and make as character string\n  mutate(\n    response = str_remove_all(as.character(response), \",\"),\n    num_o = str_length(response)\n  ) %>% \n  # handle NA values (why are some empty responses blank and others NA?) \n  mutate(\n    response = replace_na(response, \"\"),\n    num_o = replace_na(num_o, 0)\n  )\n\n#FIX METADATA\n#Add metadata for columns that lost it [factors, for some reason!]\nvar_label(df_items$subject) <- \"ID of subject (randomly assigned in stimulus app).\"\nvar_label(df_items$condition) <- \"ID indicates randomly assigned condition (111 -> control, 121 -> impasse).\"\nvar_label(df_items$term) <- \"indicates if session was run with experimenter present or asynchronously\"\nvar_label(df_items$mode) <- \"indicates mode in which the participant completed the study\"\nvar_label(df_items$q) <- \"Question Number (in order)\"\nvar_label(df_items$correct) <- \"Is the response (strictly) correct? [dichotomous scoring]\"\nvar_label(df_items$response) <- \"options (datapoints) selected by the subject\"\nvar_label(df_items$num_o) <- \"number of options selected by the subject\"\n\n#HANDLE FREE RESPONSE QUESTION #16 \n#save `free response` Q#16 in its own dataframe\ndf_freeresponse <- df_items %>% filter(q == 16) %>% dplyr::select(-question,-correct,-rt_s,-num_o)\n#add data from wi22 [stored on subject data]\ndf_freeresponse <- rbind(df_freeresponse, df_winter22_q16)\n#add question description\ndf_freeresponse <- df_freeresponse %>% mutate(\n    question = \"Please describe how to determine what event(s) start at 12pm?\",\n    response = as.character(response) #doesn't need to be factor\n  ) \n#remove 'free response' Q#16 from df_items\ndf_items <- df_items %>% filter (q != 16)\n\n#add back pretty condition \ndf_items <- df_items %>% mutate(\n  pretty_condition = recode_factor(condition, \"111\" = \"control\", \"121\" =  \"impasse\"),\n  pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\")\n) \n\n#CLEANUP\nrm(df_items_fall17,df_items_fall21, df_items_spring18, df_items_winter22, df_items_before, df_winter22_q16)\nrm(fall17,fall21,spring18,winter22, map_relations)\n\n\n\n\nValidation\nNext, we validate that we have the complete number of item-level records based on the number of subject-level records\n\n\nCODE\n#the number of items should be equal to 15 x the number of subjects\nnrow(df_items) == 15* nrow(df_subjects) #TRUE\n\n\n[1] TRUE\n\n\nCODE\n#each subject should have 15 items\ndf_items %>% group_by(subject) %>% summarise(n = n()) %>% filter(n != 15) %>% nrow() == 0\n\n\n[1] TRUE\n\n\n\n\nExport\nFinally, we export the (session-harmonized) data for analysis, as CSVs, and .RDS (includes metadata)\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# #mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC3A/data/1-study-level/sgc3a_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC3A/data/1-study-level/sgc3a_items.csv\", row.names = FALSE)\nwrite.csv(df_freeresponse,\"analysis/SGC3A/data/1-study-level/sgc3a_freeresponse.csv\", row.names = FALSE)\nwrite.csv(df_ospan,\"analysis/SGC3A/data/1-study-level/sgc3a_ospan.csv\", row.names = FALSE)\n\n#SAVE R Data Structures \n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC3A/data/1-study-level/sgc3a_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC3A/data/1-study-level/sgc3a_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html",
    "title": "5  Response Scoring",
    "section": "",
    "text": "TODO\nThe purpose of this notebook is to score (assign a measure of accuracy) to response data for the SGC3A study. This is required because the question type on the graph comprehension task used a ‘Multiple Response’ (MR) question design. Here, we evaluate different approaches to scoring multiple response questions, and transform raw item responses (e.g. boxes ABC are checked) to a measure of response accuracy. (Warning: this notebook takes several minutes to execute.) To review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3."
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html#score-sgc-data",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html#score-sgc-data",
    "title": "5  Response Scoring",
    "section": "SCORE SGC DATA",
    "text": "SCORE SGC DATA\nTo review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3.\nIn SGC we are fundamentally interested in understanding how a participant interprets the presented graph (stimulus). The graph comprehension task asks them to select the data points in the graph that meet the criteria posed in the question. To assess a participant’s performance, for each question (q=15) we will calculate the following scores:\nAn overall, strict score:\n1. Absolute Score : using dichotomous scoring referencing true (Triangular) answer. (see 1.2)\nSub-scores, for each alternative graph interpretation\n2. Triangular Score : using partial scoring [-1/q, +1/p] referencing true (Triangular) answer key.\n3. Orthogonal Score : using partial scoring [-1/q, +1/p] referencing (incorrect Orthogonal) answer key.\nBased on prior observational studies where we observed emergence of other alternative interpretations (i.e. transitional interpretations) we also calculate subscores for these alternatives.\n4. Tversky Score : using partial scoring [-1/q, +1/p] referencing (incorrect connecting-lines strategy) answer key. 5. Satisficing Score : using partial scoring [-1/q, +1/p] referencing (incorrect satisficing strategy) answer key.\n\nPrepare Answer Keys\nWe start by importing three answer keys: (1) Q1 - Q5 [control condition], (2) Q1-Q5 [impasse condition], (3) Q6-15. Separate answer keys by condition are required for Q1-Q5 because the stimuli for each condition visualize a different underlying dataset (i.e. the graphs show datapoints in different positions). Q6-Q15 are identical across conditions. Each answer key includes a row for each question, and a column defining the subset of response options that correspond to different graph interpretations.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#SAVE KEYS FOR FUTURE USE\nkeys_raw <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_raw\")\nkeys_orth <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_orth\")\nkeys_tri <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tri\")\nkeys_both <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_both\")\nkeys_satisfice_left <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_left\")\nkeys_satisfice_right <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_right\")\nkeys_tversky_duration <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_duration\")\nkeys_tversky_end <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_end\")\nkeys_tversky_max <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_max\")\nkeys_tversky_start <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_start\")\n\n\n\n\nCalculate Subscores\nNext, we import the item-level response data. For each row in the item level dataset (indicating the response to a single question-item for a single subject), we compare the raw response df_items$response with the answer keys in each interpretation (e.g. keys_orth, keys_tri, etc…), then using those sets, determine the number of correctly selected items(p) and incorrectly selected items (q), which in turn are used to calculate partial[-1/q, +1/p] scores for each interpretation. The resulting scores are then stored on each item in df_items, and can be used to determine which graph interpretation the subject held.\nSpecifically, the following scores are calculated for each item:\nInterpretation Subscores\n\nscore_TRI How consistent is the response with the triangularinterpretation?\nscore_ORTH How consistent is the response with the orthogonalinterpretation?\nscore_BOTH How consistent is the response with both the orthogonal and triangular interpretations?\nscore_SATISFICE is calculated by taking the maximum value of :\n\nscore_SAT_left How consistent is the response with the (left side) Satisficing interpretation?\nscore_SAT_right How consistent is the response with the (right side) Satisficing interpretation\n\nscore_TVERSKY is calculated by taking the maximum value of:\n\nscore_TV_max How consistent is the response with the (maximal) Tversky interpretation?\nscore_TV_start How consistent is the response with the (start-time) Tversky interpretation?\nscore_TV_end How consistent is the response with the (end-time) Tversky interpretation?\nscore_TV_duration How consistent is the response with the (duration) Tversky interpretation?\n\nscore_REF Did the response select only the reference point?\n\nAbsolute Scores\n\nscore_ABS Is the response strictly correct? (triangular interpretation)\nscore_niceABS Is the response strictly correct? (triangular interpretation, not penalizing ref points). This is a more generous version of the Absolute score that does not penalize the participant if in addition to the correct answer in addition to they also select the data point referenced in the question.\n\n\n\nCODE\n#HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#backup <- read_rds('analysis/SGC3A/data/1-study-level/sgc3a_items.rds') #for troubleshooting only\ndf_items <- read_rds('analysis/SGC3A/data/1-study-level/sgc3a_items.rds')\n\n#ADD TEMP IMPASSE COLUMN\ndf_items <- df_items %>% mutate(\n  IMPASSE = substr(condition,2,2),\n  IMPASSE = recode_factor(IMPASSE, \"1\"=\"none\", \"2\"=\"IMPASSE\")\n)\n\n\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\nsource(\"analysis/utils/scoring.R\")\n\n\nnote: this cell takes approximately 30 minutes to run on the full df_items dataframe with 4950 records\n\n\nCODE\n#RUN THIS <OR> THE CALCULATE-SCORES-FORLOOP [not both]\n\n#TROUBLESHOOTING\n# backup <- df_items\n# df_items <- backup %>% sample_n(20)\n\n#ALPHEBETIZE RESPONSE\ndf_items$response = pbmapply(reorder_inplace, df_items$response)\n\n#STRATEGY PARTIAL-SUBSCORES\ndf_items$score_TRI = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tri))\n\ndf_items$score_ORTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_orth))\n\ndf_items$score_BOTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_both))\n\ndf_items$score_SAT_left = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_left))\ndf_items$score_SAT_right = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_right))\n\ndf_items$score_TV_max = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_max))\ndf_items$score_TV_start = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_start))\ndf_items$score_TV_end = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_end))\ndf_items$score_TV_duration = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_duration))\n\n#SPECIAL ABSOLUTE SUBSCORES\ndf_items$score_REF = pbmapply(calc_refscore, df_items$q, df_items$response)\n\n#OLD score_BOTH... new one is above (explicitly in key)\n# df_items$score_BOTH = as.integer((df_items$score_TRI == 1) & (df_items$score_ORTH ==1))\n\n#ABSOLUTE SCORES\ndf_items$score_ABS = as.integer(df_items$correct) \ndf_items$score_niceABS  <- as.integer((df_items$score_TRI == 1)) #tri doesn't penalize ref or ve-area\n\n\n\n\nDerive Interpretation\nFinally, we use the interpretation subscores to classify the response as a particular interpretation. This classification algorithm : (1) First decides if the response matches one or more ‘special’ situations (blank response, reference point response, both ORTH and TRI) (2) If response doesn’t match a special situation, it compares the individual subscores, and subscores and decides if they are discriminant (i.e. are the scores different enough to make a prediction). A discriminant threshold of 0.5pts (on a scale from -1 to +1 is used) (2) If the variance in subscores surpasses the threshold, the interpretation is classified based on the highest subscore (TRIANGULAR, ORTHOGONAL, TVERSKY, SATISFICE) (3) If the variance does not surpass the threshold, the interpretation is labelled as “?”, indicating it cannot be classified, and is of an unknown interpretation.\nThe final output is called interpretation.\n\n\nCODE\n#stoopid extra copying for troubleshooting safety\ntemp <- df_items #%>% head(16) %>% tail(1)\ntemp <- derive_interpretation(temp)\n\n\n[1] \"DERIVING INTERPRETATION\"\n\n\nCODE\ndf_items <- temp\n\n\n\n\n? SPECIAL EXCEPTIONS\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nALSO reconciles issues when interpetation == triangular but scoreniceabs = 0 ::: {.cell}\n\nCODE\n# #temp setup for protection\n# backup <- df_items\ntemp <- df_items %>% mutate(\n  override = \"\"\n)\n\n## CONTROL. Q==1. \"FK\" derives as 'TRI', should be tversky start\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==1) & (IMPASSE ==\"none\") & (response == \"FK\"),\n  tv_type = \"score_TV_start\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"TRI\"\n)\n\n## IMPASS Q==2. \"EK\" derives as 'TRI', should be tversky MAX\ntemp <- temp %>% mutate_when(\n  (q==2) & (IMPASSE ==\"IMPASSE\") & (response == \"EK\"),\n  tv_type = \"score_TV_max\",\n  int2 = \"Tversky\", #override from TRI\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n## CONTROL. Q==3. \"A\" derives as 'unknown', should be tversky duration\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"A\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n\n## CONTROL  Q==3 \"AF\" derives as TRI. hardcode as \"both\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"AF\"),\n  int2 = \"both tri + orth\", #override from TRI\n  interpretation = \"both tri + orth\", #override from TRI\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## CONTROL  Q==3 derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response %in% c(\"EFK\",\"FO\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL  Q==3 \"FG\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"FG\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASS  Q==3 \"AF\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE  Q==3 \"AFG\" derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE  Q==3 \"AH\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n## IMPASSE  Q==3 \"AO\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE  Q==3 \"AOU\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AOU\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## CONTROL Q==4 AH Derives as TRI RECODE as TVERSKY\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"AH\",\"HK\")),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n## CONTROL Q==4 HJ DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"HJ\",\"HJK\") ),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==4 DEU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DEOU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEOU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 KU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"KU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## IMPASSE Q==4 BD Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BD\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 BDEG Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BDEG\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 AFG Derives as SATISFICE RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"?\", #override from Satisfice\n  interpretation = \"?\", #override from Satisfice\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE Q==4 DH Derives as TRI RECODE as BOTH\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"DH\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AU Derives as TRI RECODE as satisfice\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AU\"),\n  int2 = \"Satisfice\", #override from Triangular\n  interpretation = \"Satisfice\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AZ Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AZ\"),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AFG Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n\n## IMPASSE Q==5 AF Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AO Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"FO\",\"JO\") ),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"HO\",\"FO\",\"DJO\",\"FGKO\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n## CONTROL Q==5 KO Derives as TRI RECODE as tversky_duration\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response == \"KO\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==7 HOX, OX Derives as TRI but incorrect\n#includes H which is at rather than under 5 hours.\n#give credit \ntemp <- temp %>% mutate_when(\n  (q==7)  & (response %in% c(\"HOX\", \"OX\")),\n  score_niceABS = 1\n)\n\n##  Q==7 Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MO\",\"AX\",\"FJOX\",\"IO\")) ,\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==7 Derives as TRI RECODE as tversky\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MOX\", \"MX\", \"DX\",\"O\",\"X\",\"JX\",\"CO\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==8 Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==8)  & (response %in% c(\"FG\",\"CG\",\"CFG\",\"CGM\",\"CM\",\"ACGP\",\"GM\",\n                             \"AGK\", \"ACG\",\"AFGK\",\"GK\", \"AG\", \"CFGO\",\n                             \"BFG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==11 M Derives as TRI MISSING RESPONSE\n##LEAVE AS TRI + OVERRIDE SCORENABS\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"M\",\"L\") ),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==11 BLM Derives as TRI set at both\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response == \"BLM\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at ORTH\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"AGM\")),\n  int2 = \"Orthogonal\",\n  interpretation = \"Orthogonal\", \n  high_interpretation = \"orthogonal\", \n  override = \"Triangular\"\n)\n##  Q==11 EKM Derives as TRI set at other\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"EKM\",\"JM\")),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"KL\",\"MOX\",\"CLMP\",\"DKL\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==12 Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==12)  & (response %in% c(\"GP\", \"EG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13 E Derives as TRI but incorrect\n##LEAVE AS TRI + OVERRIDE SCORENABS\n##one of two correct answers\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response == \"E\"),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==13 CE Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"CE\",\"EH\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13  Derives as TRI set at ?\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"EO\",\"EK\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"FX\",\"CX\",\"EFX\", \"OX\", \"JX\", \"EX\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"AX\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\",\n  override = \"Triangular\"\n)\n\n##  Q==15 CX Derives as TRI but incorrect \n#within visual margin... give credit\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"CX\",\"KO\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n#  Q==15  Derives as TRI but incorrect \n#missing 1 right answer or within 0.5hr visual error \ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"X\",\"CK\",\"K\",\"GKX\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"DJNX\", \"OX\", \"AK\",\"DNX\", \"AX\",\"ACX\",\n                              \"AGX\",\"CGX\",\"CKX\",\"DKL\",\"GX\",\"GX\",\"HOX\",\n                              \"HX\",\"JNX\")),\n  # tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"AKPX\",\"GK\",\"JX\",\"LX\",\"BK\",\"HK\",\"HNX\",\n                              \"KP\",\"BX\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n#SET BACK\ndf_items <- temp\n\n:::\n\n\nDerive Scaled Score\nThe interpretation response variable gives us the finest grain indication of the reader’s understanding of the graph for a particular question. However, it is a categorical variable, which poses a challenge for analyzing cumulative performance at the subject level. To address this challenge, we derive a scaled_score that converts each possible interpretation to a numeric value on a scale from -1 to +1. This scaling takes advantage of the observation that each interpretation can be positioned along a spectrum of understanding from completely incorrect (orthogonal) to completely correct (triangular). Alternative interpretations lay somewhere between.\nSpecifically, we assign the following values to each interpretation:\n\n(-1) : ORTHOGONAL, SATISFICE (satisfice represents an attempt at an orthogonal answer when none is available)\n(-0.5): ? (some alternative that cannot be identified; but meaningful that it is not orthogonal)\n(0): REFERENCE POINT, BLANK (indicates the individual thinks there is no answer, recognizes that ORTHOGONAL cannot be correct, but does not conceive of triangular)\n(+0.5) TVERSKY, BOTH TRI + ORTH (indicates that they “see” a triangular response, but lack certainty and also select the ORTHOGONAL response)\n(+1) TRIANGULAR +1\n\n\n\nCODE\ndf_items$score_SCALED <- calc_scaled(df_items$interpretation)\n\n\n\n\nDerive State Score\nThe scaled score represents a 5-category ordering of understanding. We also derive a 3-category ordering that gives higher grained access to “orthogonal-like” vs “uncertain” vs “triangle-like” responses.\nSpecifically, we assign the following values to each interpretation:\n\n(orth-like) : orthogonal, satisfice\n(unknown) : unidentified alternatives, blank, both tri&orth, and reference point responses\n(tri-like) : Tverskian and triangular responses\n\n\n\nCODE\ndf_items <- df_items %>% mutate (\n  score_STATE = recode_factor(df_items$score_SCALED,\n                         \"-1\" = \"orth-like\",\n                         \"-0.5\" = \"unknown\",\n                         \"0\" = \"unknown\",\n                         \"0.5\" = \"tri-like\",\n                         \"1\" = \"tri-like\"),\n  score_STATE = as.ordered(score_STATE))"
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html#summarize-by-subject",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html#summarize-by-subject",
    "title": "5  Response Scoring",
    "section": "SUMMARIZE BY SUBJECT",
    "text": "SUMMARIZE BY SUBJECT\nNext, we summarize the item level scores by subject in order to calculate cummulative subscores to be stored on the subject record.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#import subjects\ndf_subjects <- read_rds('analysis/SGC3A/data/1-study-level/sgc3a_participants.rds') %>% mutate(subject = as.character(subject)) %>% arrange(subject)\n\n#make temporary copies for testing safety\ns = df_subjects\ni = df_items \n\n#summarize\ntest_subs <- summarise_bySubject(s,i)\n\n\n`summarise()` has grouped output by 'subject'. You can override using the\n`.groups` argument.\n\n\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n\n\nCODE\ndf_subjects <- test_subs\n\n\nWe also summarize absolute and scaled score progress at each question in the task, to explore cumulative performance over the task.\n\n\nCODE\n#GET ABSOLUTE PROGRESS \ndf_absolute_progress <- progress_Absolute(df_items)\n\n#GET SCALED PROGRESS\ndf_scaled_progress <- progress_Scaled(df_items)"
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html#explore-distributions",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html#explore-distributions",
    "title": "5  Response Scoring",
    "section": "EXPLORE DISTRIBUTIONS",
    "text": "EXPLORE DISTRIBUTIONS\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#create temp data frame for visualizations\ndf = df_items %>% filter (q %nin% c(6,9)) %>% mutate(\n  score_niceABS = as.factor(score_niceABS),\n  pretty_interpretation = factor(interpretation,\n    levels = c(\"Orthogonal\", \"Satisfice\", \n               \"frenzy\",\"?\",\n                \"reference\",\"blank\",\n                \"Tversky\", \"both tri + orth\",\n               \"Triangular\" ))\n  )\n\n\n\nAbsolute Score\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE FULL TASK\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (all Items)\",\n        subtitle = paste(\"Impasse Condition (blue) yields more correct responses across the entire task\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY ITEM\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(pretty_condition~q) + \n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields more correct responses on each item\",\n        y = \"Proprition of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY SUBJECT\ngf_props(~s_NABS, fill = ~pretty_condition, position = position_dodge(), data = df_subjects) %>%\ngf_facet_wrap(~pretty_condition)+\n  labs( x = \"Total Absolute Score\",\n        title = \"Distribution of Total Absolute Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher total absolute scores\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE TEST PHASE\ngf_props(~item_test_NABS, fill = ~pretty_condition, \n             data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + \n  labs( x = \"Absolute Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Absolute Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#QUICK PEEK\nresult <- two_sample_test(data = df_subjects, x = pretty_condition, y = s_NABS,\n                          type = \"nonparametric\", var.equal = FALSE,alternative = \"less\",\n                          k = 2L, conf.level = 0.89, effsize.type = \"g\",\n                          bf.prior = 0.707, tr = 0.2, nboot = 100L)\n\nggbetweenstats( data = df_subjects,\n                x = pretty_condition, y = s_NABS,\n                type = \"non-parametric\",\n                title = \"Total Absolute Score [directional test]\",\n                results.subtitle = FALSE,\n                subtitle = result$expression[[1]])\n\n\n\n\n\n\n\nScaled Score\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#DISTRIBUTION SCALED SCORE FULL TASK\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (all Items)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores across the entire task\",\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY ITEM\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(q~pretty_condition) + \n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores on each item\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  scale_y_continuous(breaks=c(0,0.5)) + \n  theme_minimal() + theme(legend.position=\"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY SUBJECT\ngf_props(~s_SCALED, fill = ~pretty_condition, data = df_subjects)  %>% \n  gf_facet_grid(pretty_condition ~. )+\n  labs( x = \"Total Scaled Score\", \n        title = \"Distribution of Total Scaled Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher cumulative scaled scores\",\n        y = \"Number of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE TEST PHASE\ngf_histogram(~item_test_SCALED, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + \n  labs( x = \"Scaled Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Scaled Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#QUICK PEEK\nresult <- two_sample_test(data = df_subjects, x = pretty_condition, y = s_SCALED,\n                          type = \"nonparametric\", var.equal = FALSE,alternative = \"less\",\n                          k = 2L, conf.level = 0.89, effsize.type = \"g\",\n                          bf.prior = 0.707, tr = 0.2, nboot = 100L)\n\nggbetweenstats( data = df_subjects,\n                x = pretty_condition, y = s_SCALED,\n                type = \"non-parametric\",\n                title = \"Total Scaled Score [directional test]\",\n                results.subtitle = FALSE,\n                subtitle = result$expression[[1]])\n\n\n\n\n\n\n\nInterpretations\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION\ngf_props(~pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition ~ ., labeller = label_both) + \n  labs( title = \"Distribution of Interpretations (across Task)\",\n        x = \"Graph Interpretation\",\n        y = \"Proportion of Responses\",\n        subtitle = \"Impasse condition (blue) yields fewer Orthogonal and more Triangular responses\") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION ACROSS ITEMS\ngf_propsh(~ pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more Triangular responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION TYPE ACROSS ITEMS\ngf_propsh(~ high_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more positive trending responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\nggbarstats( data = df, x = score_STATE, y = pretty_condition)\n\n\n\n\n\nCODE\nggbarstats( data = df, x = high_interpretation, y = pretty_condition)\n\n\n\n\n\n\n\nProgress over Task\n\n\nCODE\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nInterpretation Subscores\n\n\nCODE\ngf_density(~ s_TRI, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Triangular Score\",\n        subtitle = \"Impasse shifts density toward higher Triagular scores\",\n        x = \"Item Triangular Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_ORTH, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Orthogonal Score\",\n        subtitle = \"Impasse shifts density toward lower Orthogonal scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_TVERSKY, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Tversky Score\",\n        subtitle = \"Impasse shifts density toward higher Tversky scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_histogram(~ s_SATISFICE, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Satisfice Score\",\n        subtitle = \"Satisficing only occurs in impasse, when no orthogonal response is available\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html#peek",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html#peek",
    "title": "5  Response Scoring",
    "section": "PEEK",
    "text": "PEEK\n\n\nCODE\nggbetweenstats( data = df_subjects,\n                x = pretty_condition, y = s_NABS,\n                type = \"non-parametric\",\n                title = \"Total Absolute Score [directional test]\")\n\n\n\n\n\nCODE\nggbarstats( data = df_items,\n                x = score_niceABS, y = pretty_condition,\n                type = \"non-parametric\",\n                title = \"Total Absolute Score [directional test]\")\n\n\n\n\n\nCODE\nggbarstats( data = df_items,\n                x = interpretation, y = pretty_condition,\n                type = \"non-parametric\",\n                title = \"Interpretation [directional test]\")\n\n\nWarning: Number of labels is greater than default palette color count.Select\nanother color `palette` (and/or `package`).\n\n\n\n\n\nCODE\nggbarstats( data = df_items,\n                x = score_STATE, y = pretty_condition,\n                type = \"non-parametric\",\n                title = \"State [directional test]\")"
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html#explore-responses",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html#explore-responses",
    "title": "5  Response Scoring",
    "section": "EXPLORE RESPONSES",
    "text": "EXPLORE RESPONSES\nIn this section we explore responses given by participants to each particular item in the graph comprehension task, indicate how each response was scored, and what interpretation of the graph is indicated by different responses.\n\n\nCODE\ngf_props(~ score_niceABS, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Item Absolute Score\", title = \"Distribution of Accuracy  | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nSCAFFOLD PHASE\nThe first five questions constitute the ‘scaffold’ (or learning) phase, where participants see a different version of the stimulus (specifically a different dataset is visualized) invoking a different experimental condition.\n\nQuestion #1\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ1. Control Condition\nWe start by exploring the range of response options checked by participants on Question 1, for those assigned to the control (non-impasse) condition (condition = 111).\n\n\n\nFigure 5.1: Question 1 — Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==1)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q1 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q1 Control Condition :  Which shift(s) start at 11 am?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    A \n    OI \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    CF \n    Z \n  \n  \n    Tversky [start diagonal] \n    F \n    Z \n  \n  \n    Tversky [end diagonal] \n    C \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nHere we summarize the distinct response options given by participants on this item. Each letter in response indicates a checkbox selected by the participant (See Figure 22.1 ). n indicates the number of participants who gave this response, while interpretation indicates the graph interpretation most consistent with that response. At the right of this table are the Absolute, followed by Partial Credit subscores for each response. NA indicates that there is no score calculated (occurs when there is no subset of response options that accord with that interpretation for this question).\nNotice that for this Question, the Triangular answer is the same as the Tversky [start diagonal] answer. In fact, for most questions, one of the Tversky sub-types will match the correct response.\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #1 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 1 & condition == 111) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 1) %>% \n  # pack_rows(\"Lines-Connect\", 2, 2) %>% \n  # pack_rows(\"Orthogonal\", 3, 3) %>% \n  # pack_rows(\"Other\", 4, 4)  %>% \n  # pack_rows(\"Unknown\", 5, 7)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #1 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    22 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    CF \n    3 \n    Tversky \n    0 \n    0.923 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    A \n    129 \n    Orthogonal \n    0 \n    -0.077 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AF \n    1 \n    both tri + orth \n    0 \n    0.923 \n    0.923 \n    NA \n    0.917 \n    0.5 \n  \n  \n    DIJ \n    1 \n    ? \n    0 \n    -0.231 \n    -0.214 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\nWe see that nearly all of the subjects selected a response consistent with one of the identified interpretations. Responses that do not accord with any interpretation are indicated as ? .\n\n\n\n\n\n\n\nWhich shifts start at 11am?\n\n\n\n\n\n\nResponse: A\n\nindicates an orthogonal (incorrect) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (11am) on the x-axis, projecting an invisible orthogonal line upward, and locating data point A.\n\n\n\n\nResponse: F\n\nindicates the triangular (correct) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (11am) on the x-axis, and following the right-diagonal gridline, identifying data point F.\n\n\n\n\nResponse: C, F\n\nindicates a maximal-Tversky strategy following connecting lines\nConsistent with the reader identifying the reference point (11am) on the x-axis, and following both the right-diagonal and left-diagonal gridlines, identifying both datapoints F and C.\n\n\n\n\nResponse: A , F\n\nThe reader selects both triangular and orthogonal-consistent data points\nPossibly indicates uncertainty or confusion\n\n\n\n\nThree responses were given that were not consistent with any of the identified interpretations. Note that options highlighted in light grey are considered within the range of ‘visual error’, defined by 0.5hr offset from the interpretation-specific projection.\n\n\n\n\n\n\n\n\nD I J\nX\nZ\n[found this subject F86ZM, thought maybe this was a missed ‘F’, but they have a series of other unknown answers]\n\n\n\n\n\n\n\n\n\n\n\n\nQ1. Impasse Condition\n\n\n\nFigure 5.2: Question 1 — Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==1)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q1 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q1 Impasse Condition :  Which shift(s) start at 11 am?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n     \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n    O \n     \n  \n  \n    Satisficing [right] \n    AI \n     \n  \n  \n    Tversky [maximal] \n    CF \n     \n  \n  \n    Tversky [start diagonal] \n    F \n     \n  \n  \n    Tversky [end diagonal] \n    C \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nNotice that there is no orthogonal answer for this question. This is the purpose of the impasse condition, to remove the possibility of selecting the orthogonal answer, we expect learners will be more likely to restructure their understanding of the coordinate system, and arrive at a correct (triangular) interpretation.\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #1 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 1 & condition == 121) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 1) %>% \n  # pack_rows(\"Lines-Connect\", 2, 4) %>% \n  # pack_rows(\"Satisfice\", 5, 9) %>% \n  # pack_rows(\"Other\", 10, 10) %>% \n  # pack_rows(\"Unknown\", 11, 12) %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #1 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    49 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    -0.071 \n    NA \n    1.0 \n  \n  \n    CF \n    14 \n    Tversky \n    0 \n    0.929 \n    1.000 \n    -0.143 \n    NA \n    0.5 \n  \n  \n    C \n    3 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    -0.071 \n    NA \n    0.5 \n  \n  \n    CO \n    1 \n    Tversky \n    0 \n    -0.143 \n    0.929 \n    0.929 \n    NA \n    0.5 \n  \n  \n    O \n    28 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    AI \n    9 \n    Satisfice \n    0 \n    -0.143 \n    -0.143 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    A \n    4 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    AO \n    2 \n    Satisfice \n    0 \n    -0.143 \n    -0.143 \n    0.929 \n    NA \n    -1.0 \n  \n  \n    I \n    2 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    0.500 \n    NA \n    -1.0 \n  \n  \n     \n    57 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n    E \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.071 \n    NA \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.071 \n    NA \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\nWe see that nearly all of the subjects selected a response consistent with one of the identified interpretations. Responses that do not accord with any interpretation are indicated as ? .\nTODO ADJUST ‘both’ to select for both tri/satisfice or both tri/orth\n\n\n\n\n\n\n\nWhich shifts start at 11am?\n\n\n\n\n\n\nResponse: F\n\nindicates the triangular (correct) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (11am) on the x-axis, and following the right-diagonal gridline, identifying data point F.\n\n\n\n\nResponse: [C, F]\n\nindicates a maximal-Tversky strategy following connecting lines\nConsistent with the reader identifying the reference point (11am) on the x-axis, and following both the right-diagonal and left-diagonal gridlines, identifying both datapoints F and C gridline.\n\n\n\n\nResponses: [AOI]\n\nindicates a satisficing strategy\nConsistent with the reader identifying the datapoints nearest to the orthogonal projection from the reference point point\n\n\n\n\nTwo responses were given that were not consistent with any of the identified interpretations.\n\n\n\n\n\n\n[E],[X]\n\n\n\n\n\n\n\n\n\n\n\nQuestion #2\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ2. Control Condition\n\n\n\nFigure 5.3: Q2—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==2)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q2 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q2 Control Condition :  Which shift(s) start at the same time as D?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    K \n    Z \n  \n  \n    Orthgonal \n    E \n    G \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AKJX \n    Z \n  \n  \n    Tversky [start diagonal] \n    AK \n    Z \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    J \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #2 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 2 & condition == 111) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 2) %>%\n  # pack_rows(\"Lines-Connect\", 3, 4) %>% \n  # pack_rows(\"Orthogonal\", 5, 7) %>%\n  # pack_rows(\"Other\", 8, 8)  %>% \n  # pack_rows(\"Unknown\", 9, 10)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #2 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    K \n    24 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    DK \n    1 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    J \n    4 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AK \n    1 \n    Tversky \n    0 \n    0.917 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    E \n    121 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    DE \n    3 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EG \n    1 \n    Orthogonal \n    0 \n    -0.167 \n    -0.154 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    D \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\nAgain, we see that most subjects selected a response consistent with one of the identified interpretations. (note, when the question stem includes a data point rather than time as reference, we do not penalize respondents for selecting the reference data point in addition to an interpretation consistent response. For example, in this question, we do not penalize respondents for selecting option D, the reference point in the question. )\n\n\n\n\n\n\n\nWhich shift(s) start at the same time as D?\n\n\n\n\nReponse: E (also EG, DE)\n\nindicates an orthogonal (incorrect) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (D) on the graph, projecting an invisible orthogonal line through it, and locating data point E.\n\n\n\n\nResponse: K (also KD)\n\nindicates an triangular (correct) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (D) on the graph, and following its descending-leftward diagonal gridline, and locating data point K.\n\n\n\n\nResponse: AK\n\nindicates an Tversky strategy following connecting lines\nConsistent with the reader identifying the reference point (D) on the graph, and following its descending-leftward diagonal gridline, and locating data point K then continuing along the connecting ascending leftward diagonal locating data point A.\n\n\n\n\nResponse: J\n\nindicates an Tversky strategy following connecting lines\nConsistent with the reader identifying the reference point (D) on the graph, and following its horizontal gridline to the y-axis, locating data point J.\n\n\n\n\nResponse: D\n\nthe reader selected only the reference point\nConsistent with the reader identifying the reference point (D) on the graph\nPossibly indicates uncertainty or confusion\n\n\n\n\n\n\n\n\n\n\n\nB\nC\n\n\n\n\n\n\n\n\n\n\n\nQ2. Impasse Condition\n\n\n\nFigure 5.4: Q2—Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==2)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q2 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q2 Impasse Condition :  Which shift(s) start at the same time as D?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    K \n    Z \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n    G \n     \n  \n  \n    Tversky [maximal] \n    JKEX \n    Z \n  \n  \n    Tversky [start diagonal] \n    K \n    Z \n  \n  \n    Tversky [end diagonal] \n    EX \n     \n  \n  \n    Tversky [duration line] \n    J \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #2 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 2 & condition == 121) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 2) %>%\n  # pack_rows(\"Lines-Connect\", 3, 10) %>% \n  # pack_rows(\"Satisfice\", 11, 12) %>%\n  # pack_rows(\"Other\", 13, 16)  %>% \n  # pack_rows(\"Unknown\", 17, 18)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #2 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    K \n    69 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    DK \n    1 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    J \n    12 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    EK \n    3 \n    Tversky \n    0 \n    0.917 \n    0.917 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    EX \n    2 \n    Tversky \n    0 \n    -0.167 \n    1.000 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    E \n    1 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    EKX \n    1 \n    Tversky \n    0 \n    0.833 \n    0.917 \n    -0.231 \n    NA \n    0.5 \n  \n  \n    HJZ \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.846 \n    -0.231 \n    NA \n    0.5 \n  \n  \n    JK \n    1 \n    Tversky \n    0 \n    0.917 \n    0.923 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    G \n    19 \n    Satisfice \n    0 \n    -0.083 \n    -0.077 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    BG \n    2 \n    Satisfice \n    0 \n    -0.167 \n    -0.154 \n    0.923 \n    NA \n    -1.0 \n  \n  \n    BEG \n    1 \n    Satisfice \n    0 \n    -0.250 \n    0.333 \n    0.846 \n    NA \n    -1.0 \n  \n  \n    D \n    7 \n    reference \n    0 \n    0.000 \n    NA \n    0.000 \n    NA \n    0.0 \n  \n  \n     \n    43 \n    blank \n    0 \n    0.000 \n    NA \n    0.000 \n    NA \n    0.0 \n  \n  \n    ACDFHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.250 \n    0.250 \n    -0.846 \n    NA \n    -0.5 \n  \n  \n    BEGKUZ \n    1 \n    frenzy \n    0 \n    0.667 \n    0.667 \n    0.615 \n    NA \n    -0.5 \n  \n  \n    C \n    6 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    -0.167 \n    -0.154 \n    -0.154 \n    NA \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\n\nQuestion #3\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ3. Control Condition\n\n\n\nFigure 5.5: Q3—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==3)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q3 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q3 Control Condition :  Which shift(s) begin when C ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    Z \n    FIO \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AUBFOJ \n     \n  \n  \n    Tversky [start diagonal] \n    OJ \n     \n  \n  \n    Tversky [end diagonal] \n    F \n    Z \n  \n  \n    Tversky [duration line] \n    AUB \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #3 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 3 & condition == 111) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #3 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    24 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    0.0 \n    1.0 \n  \n  \n    A \n    18 \n    Tversky \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    ABU \n    4 \n    Tversky \n    0 \n    -0.250 \n    1.000 \n    NA \n    -0.3 \n    0.5 \n  \n  \n    O \n    3 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    0.0 \n    0.5 \n  \n  \n    JO \n    2 \n    Tversky \n    0 \n    -0.167 \n    1.000 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    DJO \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.917 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    KO \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    Z \n    94 \n    Orthogonal \n    0 \n    0.000 \n    0.000 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    C \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    0.0 \n  \n  \n    ABDEFGHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    -0.5 \n  \n  \n    K \n    3 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    AH \n    1 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    DE \n    1 \n    ? \n    0 \n    -0.167 \n    -0.167 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    EFK \n    1 \n    ? \n    0 \n    0.833 \n    0.833 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    EU \n    1 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    U \n    1 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 17)  \n\n\nTODO\n\naddress RESPONSE FKE which is classified as Triangular but doesn’t seem to fit this interpretation?\nShould O,K be considered Tvresky ?\nconsider adding trapdoor on n_q, such that score is penalized (OR interpretation is not predicted?) if the Ss selects more than 1 extra options, or is missing more than 2 options?\nLEFT OFF HERE\n\n\n\n\n\n\n\n\nWhat shift(s) begin when C ends?\n\n\n\n\n\n\nResponse: Z\n\nindicates an orthogonal (incorrect) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (C) then using the duration encoded on the y-axis (2) , project along the horizontal gridline by two hours, and then project an invisible orthogonal line through that time (12PM) locating data point Z.\n\n\n\n\nResponse: F\n\nindicates a (correct) triangular interpretation of the coordinate system\nConsistent with the reader identifying the reference point (C) on the graph, and following the descending gridline to the x-axis to identify the end-time (11AM) and then following the ascending gridline to identify datapoints starting at 11AM and locating data point F.\n\n\n\n\nResponse: AUB (also A)\n\nindicates a Tversky strategy following connecting lines (duration)\nConsistent with the reader identifying the reference point (C) on the graph, and following the horizontal y-axis gridline and locating data points A U B.\n\n\n\n\nResponse: OJ\n\nindicates a Tversky strategy following connecting lines (start-time)\nConsistent with the reader identifying the reference point (C) on the graph, and following the ascending diagonal gridline and locating data points O J.\n\n\n\n\nResponse: C\n\nthe participant selected the point referenced in the question\npossibly indicates confusion or uncertainty\n\n\n\n\nResponse: AIOZFHJXKUDEGB\n\nthe participant selects all (or nearly all) the data points\npossibly indicates confusion or uncertainty\n\n\n\n\nSix responses (from 9 participants) appear inconsistent with any interpretation.\n\n\n\n\n\n\n\n\nK (n=3)\nAH (n=1)\nDE (n=1)\n\n\n\n\n\n\n\n\n\nUE (n=1)\nU (n=1)\nE (n=1)\n\n\n\n\n\n\n\n\n\n\nQ3. Impasse Condition\n\n\n\nFigure 5.6: Q3—Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==3)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q3 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q3 Impasse Condition :  Which shift(s) begin when C ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n     \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n    AI \n     \n  \n  \n    Satisficing [right] \n    F \n     \n  \n  \n    Tversky [maximal] \n    BJ \n     \n  \n  \n    Tversky [start diagonal] \n    J \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n    B \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nTODO investigate these responses 17 at O?\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #3 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 3 & condition == 121) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #3 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    61 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    1.000 \n    NA \n    1.0 \n  \n  \n    B \n    8 \n    Tversky \n    0 \n    -0.077 \n    1.000 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    AF \n    5 \n    Tversky \n    0 \n    0.923 \n    -0.154 \n    0.923 \n    NA \n    0.5 \n  \n  \n    AH \n    5 \n    Tversky \n    0 \n    -0.154 \n    -0.154 \n    0.417 \n    NA \n    0.5 \n  \n  \n    AOU \n    3 \n    Tversky \n    0 \n    -0.231 \n    -0.231 \n    0.333 \n    NA \n    0.5 \n  \n  \n    J \n    3 \n    Tversky \n    0 \n    -0.077 \n    1.000 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    AO \n    2 \n    Tversky \n    0 \n    -0.154 \n    -0.154 \n    0.417 \n    NA \n    0.5 \n  \n  \n    BE \n    1 \n    Tversky \n    0 \n    -0.154 \n    0.923 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    BJ \n    1 \n    Tversky \n    0 \n    -0.154 \n    1.000 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    HJZ \n    1 \n    Tversky \n    0 \n    -0.231 \n    0.846 \n    -0.231 \n    NA \n    0.5 \n  \n  \n    A \n    7 \n    Satisfice \n    0 \n    -0.077 \n    -0.077 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    AI \n    3 \n    Satisfice \n    0 \n    -0.154 \n    -0.154 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    AFI \n    2 \n    Satisfice \n    0 \n    0.846 \n    -0.231 \n    0.917 \n    NA \n    -1.0 \n  \n  \n    AIO \n    2 \n    Satisfice \n    0 \n    -0.231 \n    -0.231 \n    0.917 \n    NA \n    -1.0 \n  \n  \n    C \n    2 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n     \n    36 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n    ABDEFGHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    -0.5 \n  \n  \n    ABDEFGHJKUZ \n    1 \n    frenzy \n    0 \n    0.231 \n    0.250 \n    0.231 \n    NA \n    -0.5 \n  \n  \n    BDEFGHJKU \n    1 \n    frenzy \n    0 \n    0.385 \n    0.417 \n    0.385 \n    NA \n    -0.5 \n  \n  \n    BDEFGHJKUXZ \n    1 \n    frenzy \n    0 \n    0.231 \n    0.250 \n    0.231 \n    NA \n    -0.5 \n  \n  \n    O \n    17 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    DK \n    2 \n    ? \n    0 \n    -0.154 \n    -0.154 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    AFG \n    1 \n    ? \n    0 \n    0.846 \n    -0.231 \n    0.846 \n    NA \n    -0.5 \n  \n  \n    FJZ \n    1 \n    ? \n    0 \n    0.846 \n    0.846 \n    0.846 \n    NA \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    KO \n    1 \n    ? \n    0 \n    -0.154 \n    -0.154 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    U \n    1 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 5) %>% \n#   pack_rows(\"Lines-Connect\", 3, 5) %>% \n#   pack_rows(\"Satisfice\", 6, 15) %>% \n#   pack_rows(\"Other\", 16, 21) %>% \n#   pack_rows(\"Unknown\", 22, 29) \n\n\n\n\n\nQuestion #4\n[PLACEHOLDER — NOT YET CONSIDERED THIS QUESTION]\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ4. Control Condition\n\n\n\nFigure 5.7: Q4—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==4)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q4 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q4 Control Condition :  Which shift(s) end at 4 pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    H \n     \n  \n  \n    Orthgonal \n    U \n    OF \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    BH \n     \n  \n  \n    Tversky [start diagonal] \n    B \n     \n  \n  \n    Tversky [end diagonal] \n    H \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #4 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 4 & condition == 111) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #4 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    H \n    29 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    B \n    3 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AH \n    1 \n    Tversky \n    0 \n    0.929 \n    0.929 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    U \n    87 \n    Orthogonal \n    0 \n    -0.071 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    2 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n     \n    6 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACFHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.286 \n    0.286 \n    NA \n    0.333 \n    -0.5 \n  \n  \n    DE \n    14 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    E \n    6 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DEOU \n    1 \n    ? \n    0 \n    -0.286 \n    -0.286 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    DEU \n    1 \n    ? \n    0 \n    -0.214 \n    -0.214 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    KU \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.917 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 3) %>% \n#   pack_rows(\"Orthogonal\", 4, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 16) \n\n\n\nTBL4 test\n\n\n\n\n\n\nOrthogonal\nOrthogonal-LinesConnecting\n\n\n\n\n |\n\n\n\nIf the subject calculates end time for each data point (using duration on the y axis), they find that an (incorrect) projection of point U ‘end time’ intersects with the (incorrect) orthogonal projection of 4:00PM.\nAlternatively, some subjects selected points E and D which intersect with an orthogonal projection from 4:00pm. We call this an ’orthogonal-lines connect” strategy, because it (incorrectly) adapts the orthogonal procedure for finding events that start at 4:00pm in order to find those that end at 4:00pm, thus selecting any data point with an orthogonal intersection with 4:00pm.\n\n\n\n\n\nQ4. Impasse Condition\n\n\n\nFigure 5.8: Q4—Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==4)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q4 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q4 Impasse Condition :  Which shift(s) end at 4 pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    H \n     \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n    FO \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    BH \n     \n  \n  \n    Tversky [start diagonal] \n    B \n     \n  \n  \n    Tversky [end diagonal] \n    H \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nTODO investigate D? add to tversky or orth?\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #4 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 4 & condition == 121) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #4 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    H \n    64 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    B \n    6 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    BH \n    2 \n    Tversky \n    0 \n    0.929 \n    1.000 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    O \n    11 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    F \n    8 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    FO \n    7 \n    Satisfice \n    0 \n    -0.143 \n    -0.143 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    DH \n    1 \n    both tri + orth \n    0 \n    0.929 \n    0.929 \n    -0.154 \n    NA \n    0.5 \n  \n  \n     \n    20 \n    blank \n    0 \n    0.000 \n    0.000 \n    0.000 \n    NA \n    0.0 \n  \n  \n    ACFHIJKOUZ \n    1 \n    frenzy \n    0 \n    0.357 \n    0.357 \n    0.385 \n    NA \n    -0.5 \n  \n  \n    D \n    35 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    A \n    5 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    K \n    3 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    BD \n    2 \n    ? \n    0 \n    -0.143 \n    0.929 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    AFG \n    1 \n    ? \n    0 \n    -0.214 \n    -0.214 \n    0.346 \n    NA \n    -0.5 \n  \n  \n    AI \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    BDEG \n    1 \n    ? \n    0 \n    -0.286 \n    0.786 \n    -0.308 \n    NA \n    -0.5 \n  \n  \n    DK \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 6) %>% \n#   pack_rows(\"Satisfice\", 7, 10) %>% \n#   pack_rows(\"Other\", 11, 12) %>% \n#   pack_rows(\"Unknown\", 13, 19) \n\n\n\n\n\nQuestion #5\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ5. Control Condition\n\n\n\nFigure 5.9: Q5—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==5)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q5 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q5 Control Condition :  Coffee breaks happen halfway through a shift. Which shift(s) share a break with I?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    O \n    AZ \n  \n  \n    Orthgonal \n    U \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    UGX \n    AZKD \n  \n  \n    Tversky [start diagonal] \n    X \n     \n  \n  \n    Tversky [end diagonal] \n    UG \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #5 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 5 & condition == 111) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #5 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    O \n    50 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    FG \n    2 \n    Tversky \n    0 \n    -0.182 \n    0.417 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    G \n    1 \n    Tversky \n    0 \n    -0.091 \n    0.500 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    KO \n    1 \n    Tversky \n    0 \n    0.909 \n    -0.143 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    X \n    1 \n    Tversky \n    0 \n    -0.091 \n    1.000 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    U \n    64 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    HU \n    1 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    I \n    1 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    6 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    F \n    10 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    FO \n    3 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    H \n    3 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    J \n    3 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    B \n    2 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    DJ \n    2 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    DEHJ \n    1 \n    ? \n    0 \n    -0.364 \n    -0.308 \n    NA \n    -0.308 \n    -0.5 \n  \n  \n    FK \n    1 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HJ \n    1 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>% \n#   pack_rows(\"Lines-Connect\", 5, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 9) %>% \n#   pack_rows(\"Other\", 10, 11) %>% \n#   pack_rows(\"Unknown\", 12, 22) \n\n\nTODO note the compelling cases of internal inconsistency (HJDE)\n\n\nQ5. Impasse Condition\n\n\n\nFigure 5.10: Q5—Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==5)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q5 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q5 Impasse Condition :  Coffee breaks happen halfway through a shift. Which shift(s) share a break with I?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    A \n     \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n    FUZ \n     \n  \n  \n    Satisficing [right] \n    H \n     \n  \n  \n    Tversky [maximal] \n    OX \n     \n  \n  \n    Tversky [start diagonal] \n    OX \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #5 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 5 & condition == 121) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #5 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    A \n    83 \n    Triangular \n    1 \n    1.000 \n    -0.083 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    AI \n    1 \n    Triangular \n    1 \n    1.000 \n    -0.083 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    O \n    6 \n    Tversky \n    0 \n    -0.077 \n    0.500 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    AFG \n    5 \n    Tversky \n    0 \n    0.846 \n    -0.250 \n    0.152 \n    NA \n    0.5 \n  \n  \n    AF \n    4 \n    Tversky \n    0 \n    0.923 \n    -0.167 \n    0.242 \n    NA \n    0.5 \n  \n  \n    AO \n    2 \n    Tversky \n    0 \n    0.923 \n    0.417 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    CO \n    1 \n    Tversky \n    0 \n    -0.154 \n    0.417 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    JO \n    1 \n    Tversky \n    0 \n    -0.154 \n    0.417 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    OX \n    1 \n    Tversky \n    0 \n    -0.154 \n    1.000 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    X \n    1 \n    Tversky \n    0 \n    -0.077 \n    0.500 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    H \n    11 \n    Satisfice \n    0 \n    -0.077 \n    -0.083 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    HK \n    3 \n    Satisfice \n    0 \n    -0.154 \n    -0.167 \n    0.923 \n    NA \n    -1.0 \n  \n  \n    FU \n    2 \n    Satisfice \n    0 \n    -0.154 \n    -0.167 \n    0.667 \n    NA \n    -1.0 \n  \n  \n    AU \n    1 \n    Satisfice \n    0 \n    0.923 \n    -0.167 \n    0.242 \n    NA \n    -1.0 \n  \n  \n    FHZ \n    1 \n    Satisfice \n    0 \n    -0.231 \n    -0.250 \n    0.846 \n    NA \n    -1.0 \n  \n  \n    HKUZ \n    1 \n    Satisfice \n    0 \n    -0.308 \n    -0.333 \n    0.769 \n    NA \n    -1.0 \n  \n  \n    UXZ \n    1 \n    Satisfice \n    0 \n    -0.231 \n    0.333 \n    0.576 \n    NA \n    -1.0 \n  \n  \n    I \n    2 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n     \n    24 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n    ABCFGUZ \n    1 \n    frenzy \n    0 \n    0.538 \n    -0.583 \n    0.636 \n    NA \n    -0.5 \n  \n  \n    ACDEFHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.154 \n    0.167 \n    0.182 \n    NA \n    -0.5 \n  \n  \n    FHJKX \n    1 \n    frenzy \n    0 \n    -0.385 \n    0.167 \n    0.692 \n    NA \n    -0.5 \n  \n  \n    K \n    5 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    J \n    3 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    C \n    2 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    DJ \n    2 \n    ? \n    0 \n    -0.154 \n    -0.167 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    F \n    2 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    0.333 \n    NA \n    -0.5 \n  \n  \n    AZ \n    1 \n    ? \n    0 \n    0.923 \n    -0.167 \n    0.242 \n    NA \n    -0.5 \n  \n  \n    DG \n    1 \n    ? \n    0 \n    -0.154 \n    -0.167 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    U \n    1 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    0.333 \n    NA \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    0.333 \n    NA \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 7) %>% \n#   pack_rows(\"Lines-Connect\", 8, 13) %>% \n#   pack_rows(\"Orthogonal\", 14, 16) %>% \n#   pack_rows(\"Other\", 17, 21) %>% \n#   pack_rows(\"Unknown\", 22, 31) \n\n\n\n\n\n\nTESTING PHASE\nThe following 10 questions were the same for both conditions.\n\nQuestion #7\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 5.11: Q7-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==7)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts less than 5 hours long start at the same time?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    OX \n     \n  \n  \n    Orthgonal \n    BF \n    M \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    IJZNCHOX \n     \n  \n  \n    Tversky [start diagonal] \n    OX \n     \n  \n  \n    Tversky [end diagonal] \n    IJZN \n     \n  \n  \n    Tversky [duration line] \n    CH \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #7\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 7) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #7\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    OX \n    93 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    IJ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.500 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    CH \n    1 \n    Tversky \n    0 \n    -0.125 \n    1.000 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    DJNX \n    1 \n    Tversky \n    0 \n    0.312 \n    0.357 \n    NA \n    -0.267 \n    0.5 \n  \n  \n    HK \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    MOX \n    1 \n    Tversky \n    0 \n    0.938 \n    0.938 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    MX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    BF \n    203 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FZ \n    16 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    B \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    F \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    MO \n    2 \n    ? \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AX \n    1 \n    ? \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    GK \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    KM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 5) %>%\n#   pack_rows(\"Lines-Connect\", 6, 9) %>%\n#   pack_rows(\"Orthogonal\", 10, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 17)\n\n\n\n\nQuestion #8\n\n\n\nFigure 5.12: Q8-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==8)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q: \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q:  Which shift(s) under 7 hours long starts before B starts, and ends after X ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    E \n    F \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #8\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 8) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #8\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    64 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.071 \n    1.0 \n  \n  \n    AGK \n    4 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CG \n    3 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    FG \n    3 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.071 \n    0.5 \n  \n  \n    AG \n    2 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    CFGO \n    2 \n    Tversky \n    0 \n    0.800 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    ACGP \n    1 \n    Tversky \n    0 \n    0.800 \n    NA \n    NA \n    -0.286 \n    0.5 \n  \n  \n    CFG \n    1 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    CGM \n    1 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CM \n    1 \n    Tversky \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    GM \n    1 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    E \n    157 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EIJ \n    5 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EFIJ \n    3 \n    Orthogonal \n    0 \n    -0.267 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EF \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EI \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EFI \n    1 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n     \n    12 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    DEHIJNOZ \n    2 \n    frenzy \n    0 \n    -0.533 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    EFGIJ \n    2 \n    frenzy \n    0 \n    0.733 \n    NA \n    NA \n    0.786 \n    -0.5 \n  \n  \n    CDGHLNOXZ \n    1 \n    frenzy \n    0 \n    0.533 \n    NA \n    NA \n    -0.571 \n    -0.5 \n  \n  \n    DEIJN \n    1 \n    frenzy \n    0 \n    -0.333 \n    NA \n    NA \n    0.714 \n    -0.5 \n  \n  \n    IJ \n    17 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    I \n    7 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    EFG \n    3 \n    ? \n    0 \n    0.867 \n    NA \n    NA \n    0.929 \n    -0.5 \n  \n  \n    J \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    O \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    A \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    AK \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    C \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    DN \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    F \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    IJM \n    2 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    L \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    CX \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    DHNZ \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    DIJN \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    EFGI \n    1 \n    ? \n    0 \n    0.800 \n    NA \n    NA \n    0.857 \n    -0.5 \n  \n  \n    HLO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    KL \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Orthogonal\", 11, 16) %>%\n#   pack_rows(\"Other\", 17, 21) %>%\n#   pack_rows(\"Unknown\", 22, 45)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #10\n\n\n\nFigure 5.13: Q10-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==10)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    E \n     \n  \n  \n    Orthgonal \n    X \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    EGZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n    E \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #10\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 10) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #10\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    E \n    103 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    EF \n    1 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    23 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    XZ \n    2 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    0.938 \n    0.5 \n  \n  \n    CG \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    G \n    1 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    HLPZ \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.812 \n    NA \n    -0.250 \n    0.5 \n  \n  \n    X \n    139 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BX \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    0.938 \n    -1.0 \n  \n  \n    FX \n    2 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AMX \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    -0.188 \n    NA \n    0.875 \n    -1.0 \n  \n  \n    F \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    6 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    CEGIO \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    B \n    27 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    6 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IJ \n    2 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    P \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    BO \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    HLP \n    1 \n    ? \n    0 \n    -0.188 \n    -0.188 \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>%\n#   pack_rows(\"Lines-Connect\", 3, 7) %>%\n#   pack_rows(\"Orthogonal\", 8, 11) %>%\n#   pack_rows(\"Other\", 12, 14) %>%\n#   pack_rows(\"Unknown\", 15, 27)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #11\n\n\n\nFigure 5.14: Q11-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==11)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at 12pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    ML \n     \n  \n  \n    Orthgonal \n    FB \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #11\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 11) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #11\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    LM \n    99 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.125 \n    1.0 \n  \n  \n    M \n    7 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    BF \n    201 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    B \n    4 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    F \n    2 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BFXZ \n    1 \n    Orthogonal \n    0 \n    -0.250 \n    NA \n    NA \n    0.875 \n    -1.0 \n  \n  \n    BH \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    0.438 \n    -1.0 \n  \n  \n    BLM \n    2 \n    both tri + orth \n    0 \n    0.938 \n    NA \n    NA \n    0.375 \n    0.5 \n  \n  \n     \n    4 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACDGHKLMNOPXZ \n    1 \n    frenzy \n    0 \n    0.312 \n    NA \n    NA \n    -0.812 \n    -0.5 \n  \n  \n    DHLMNOXZ \n    1 \n    frenzy \n    0 \n    0.625 \n    NA \n    NA \n    -0.500 \n    -0.5 \n  \n  \n    J \n    2 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    CX \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    EKM \n    1 \n    ? \n    0 \n    0.375 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    XZ \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 9) %>%\n#   pack_rows(\"Other\", 10, 12) %>%\n#   pack_rows(\"Unknown\", 13, 17)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 11)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 11)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #12\n\n\n\nFigure 5.15: Q12-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==12)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    GZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #12\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 12) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #12\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    98 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    FG \n    3 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    4 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    BZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    0.938 \n    0.5 \n  \n  \n    GP \n    1 \n    Tversky \n    0 \n    0.938 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    B \n    206 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    5 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n     \n    3 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    CEGIO \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    J \n    3 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    E \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    FM \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Lines-Connect\", 4, 6) %>%\n#   pack_rows(\"Orthogonal\", 7, 8) %>%\n#   pack_rows(\"Other\", 9, 10) %>%\n#   pack_rows(\"Unknown\", 11, 14)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #13\n\n\n\nFigure 5.16: Q13-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==13)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts end when Z begins?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EF \n     \n  \n  \n    Orthgonal \n    FX \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #13\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 13) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #13\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EF \n    91 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    0.433 \n    1.0 \n  \n  \n    E \n    1 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.067 \n    1.0 \n  \n  \n    FX \n    141 \n    Orthogonal \n    0 \n    0.433 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    X \n    9 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    OX \n    4 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    KX \n    3 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    ACX \n    1 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.367 \n    -1.0 \n  \n  \n    BX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    CX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    DJNX \n    1 \n    Orthogonal \n    0 \n    -0.267 \n    NA \n    NA \n    0.300 \n    -1.0 \n  \n  \n    GX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    JX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    5 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    HN \n    13 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BF \n    11 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    F \n    10 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    EX \n    6 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    HL \n    5 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HLP \n    5 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    BM \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CO \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DN \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    AG \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CE \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CG \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CGO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DKM \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    HZ \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    LP \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    NO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    NZ \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Orthogonal\", 4, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 36)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 13)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 13)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #14\n\n\n\nFigure 5.17: Q14-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==14)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at 3pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    X \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XJND \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    JND \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #14\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 14) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #14\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    X \n    107 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.059 \n    1.0 \n  \n  \n    FX \n    2 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    EX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    OX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    B \n    150 \n    Orthogonal \n    0 \n    -0.059 \n    -0.059 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    12 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BIO \n    2 \n    Orthogonal \n    0 \n    -0.176 \n    -0.176 \n    NA \n    0.882 \n    -1.0 \n  \n  \n    BX \n    2 \n    both tri + orth \n    0 \n    0.941 \n    0.941 \n    NA \n    0.941 \n    0.5 \n  \n  \n     \n    29 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    O \n    5 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    F \n    3 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    G \n    3 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    A \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    HLP \n    2 \n    ? \n    0 \n    -0.176 \n    -0.176 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    AH \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    DHO \n    1 \n    ? \n    0 \n    -0.176 \n    0.200 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    FG \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    HL \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    0 \n    -0.118 \n    0.267 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 7) %>%\n#   pack_rows(\"Other\", 8, 9) %>%\n#   pack_rows(\"Unknown\", 10, 22)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 14)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 14)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #15\n\n\n\nFigure 5.18: Q15-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==15)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Coffee breaks happen halfway through a shift. Which shifts share a break at 2pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    XK \n     \n  \n  \n    Orthgonal \n    EF \n    B \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XKZ \n     \n  \n  \n    Tversky [start diagonal] \n    Z \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #15\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 15) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #15\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    KX \n    100 \n    Triangular \n    1 \n    1.000 \n    0.667 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    X \n    6 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    CX \n    2 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    CK \n    1 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    K \n    1 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    FZ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    0.433 \n    0.5 \n  \n  \n    DJNX \n    2 \n    Tversky \n    0 \n    0.312 \n    0.133 \n    NA \n    -0.267 \n    0.5 \n  \n  \n    OZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    Z \n    1 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    EF \n    118 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    17 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    F \n    13 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    E \n    8 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BE \n    4 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BEF \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    -0.176 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EFZ \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    0.882 \n    NA \n    0.933 \n    -1.0 \n  \n  \n    EI \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FI \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    11 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    G \n    4 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    B \n    3 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    C \n    3 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    O \n    3 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AG \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BM \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CG \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AKPX \n    1 \n    ? \n    0 \n    0.875 \n    0.533 \n    NA \n    -0.267 \n    -0.5 \n  \n  \n    BG \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DN \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FK \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    0.433 \n    -0.5 \n  \n  \n    FX \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    0.433 \n    -0.5 \n  \n  \n    GK \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    HN \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    JX \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    LX \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Lines-Connect\", 11, 13) %>%\n#   pack_rows(\"Orthogonal\", 14, 22) %>%\n#   pack_rows(\"Other\", 23, 23) %>%\n#   pack_rows(\"Unknown\", 24, 44)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 15)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 15)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nNON-DISCRIMINANT QUESTIONS\n\nQuestion #6 NONDISCRIM\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 5.19: Q6-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==6)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) are six hours long?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EG \n     \n  \n  \n    Orthgonal \n    EG \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\nTODO discuss non discriminant\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #6\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 6) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #6\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EG \n    330 \n    both tri + orth \n    1 \n    1 \n    NA \n    NA \n    1 \n    0.5 \n  \n\n\n\n\n\n\n\nQuestion #9 NONDISCRIM\n\n\n\nFigure 5.20: Q9-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==9)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) begins before J begins and ends during B?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    I \n     \n  \n  \n    Orthgonal \n    I \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #9\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q ==9) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  pack_rows(\"Other\", 1, 2) %>%\n  pack_rows(\"Unknown\", 3, 19)\n\n\n\nFrequency of Selected Response Options for Question #9\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  Other\n\n    I \n    247 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    23 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  Unknown\n\n    E \n    29 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    F \n    6 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    EI \n    3 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    FI \n    3 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    J \n    3 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AGN \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CHO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    -0.5 \n  \n  \n    IM \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html#export",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html#export",
    "title": "5  Response Scoring",
    "section": "EXPORT",
    "text": "EXPORT\n\n\nCODE\ntable(df_subjects$mode, df_subjects$condition) %>% addmargins()\n\n\n           \n            111 121 Sum\n  lab-synch  62  64 126\n  asynch     96 108 204\n  Sum       158 172 330\n\n\n\nSGC3A Lab Study\n\n\nCODE\n# SGC3A IS JUST IN LAB\ndf_lab <- df_subjects %>% filter(mode == \"lab-synch\")\n\n#conditions\ntable(df_lab$mode, df_lab$condition) %>% addmargins()\n\n\n           \n            111 121 Sum\n  lab-synch  62  64 126\n  asynch      0   0   0\n  Sum        62  64 126\n\n\nCODE\n#filter items and progress\ndf_lab_items <- df_items %>% filter(subject %in% df_lab$subject)\ndf_lab_absolute <- df_absolute_progress %>% filter(subject %in% df_lab$subject)\ndf_lab_scaled <- df_scaled_progress %>% filter(subject %in% df_lab$subject)\n\n#confirm items and subjects\nnrow(df_lab_items) / nrow(df_lab) == 15\n\n\n[1] TRUE\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_lab,\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants_LAB.csv\", row.names = FALSE)\nwrite.csv(df_lab_items,\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items_LAB.csv\", row.names = FALSE)\nwrite.csv(df_lab_absolute,\"analysis/SGC3A/data/2-scored-data/sgc3a_absolute_progress_LAB.csv\", row.names = FALSE)\nwrite.csv(df_lab_scaled,\"analysis/SGC3A/data/2-scored-data/sgc3a_scaled_progress_LAB.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_lab, \"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants_LAB.rds\") # to R data structure file\nrio::export(df_lab_items, \"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items_LAB.rds\") # to R data structure file\n\n\n\n\nSGC3A OSPAN\n\n\nCODE\n## get (all) SGC3 online \ndf_online <- df_subjects %>% filter(mode == \"asynch\")\ntable(df_online$mode, df_online$condition) %>% addmargins()\n\n\n           \n            111 121 Sum\n  lab-synch   0   0   0\n  asynch     96 108 204\n  Sum        96 108 204\n\n\nCODE\n## get (just ospan) SGC3 OSPAN\n\n#load ospan scores\ndf_ospan <- read_csv('analysis/SGC3A/data/1-study-level/sgc3a_ospan.csv') %>% \n  dplyr::select(subject, OSPAN.order_num, OSPAN.order_acc, OSPAN.math_acc, OSPAN.weighted, ospan_split) \n\n\nRows: 133 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): subject, term, mode, gender, language, schoolyear, country, effort...\ndbl  (7): condition, age, totaltime_m, OSPAN.order_num, OSPAN.math_acc, OSPA...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCODE\ntemp_dfs <- df_online %>% filter(subject %in% df_ospan$subject)\n#scored ospan subjects\ndf_ospan <- merge(df_ospan, temp_dfs)\ntable(df_ospan$condition)\n\n\n\n111 121 \n 65  68 \n\n\nCODE\n#filter items and progress\ndf_ospan_items <- df_items %>% filter(subject %in% df_ospan$subject)\ndf_ospan_absolute <- df_absolute_progress %>% filter(subject %in% df_ospan$subject)\ndf_ospan_scaled <- df_scaled_progress %>% filter(subject %in% df_ospan$subject)\n\n#confirm items and subjects\nnrow(df_ospan_items) / nrow(df_ospan) == 15\n\n\n[1] TRUE\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_ospan,\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants_OSPAN.csv\", row.names = FALSE)\nwrite.csv(df_ospan_items,\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items_OSPAN.csv\", row.names = FALSE)\nwrite.csv(df_ospan_absolute,\"analysis/SGC3A/data/2-scored-data/sgc3a_absolute_progress_OSPAN.csv\", row.names = FALSE)\nwrite.csv(df_ospan_scaled,\"analysis/SGC3A/data/2-scored-data/sgc3a_scaled_progress_OSPAN.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_ospan, \"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants_OSPAN.rds\") # to R data structure file\nrio::export(df_ospan_items, \"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items_OSPAN.rds\") # to R data structure file\n\n\n\n\nSGC3A ONLINE REPLICATION\n\n\nCODE\n## get (not ospan) SGC3 online \ndf_rep <- df_subjects %>% filter(mode == \"asynch\") %>% \n  filter(subject %nin% df_ospan$subject)\ntable(df_rep$mode, df_rep$condition) %>% addmargins()\n\n\n           \n            111 121 Sum\n  lab-synch   0   0   0\n  asynch     31  40  71\n  Sum        31  40  71\n\n\nCODE\n#filter items and progress\ndf_rep_items <- df_items %>% filter(subject %in% df_rep$subject)\ndf_rep_absolute <- df_absolute_progress %>% filter(subject %in% df_rep$subject)\ndf_rep_scaled <- df_scaled_progress %>% filter(subject %in% df_rep$subject)\n\n#confirm items and subjects\nnrow(df_rep_items) / nrow(df_rep) == 15\n\n\n[1] TRUE\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_rep,\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants_REP.csv\", row.names = FALSE)\nwrite.csv(df_rep_items,\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items_REP.csv\", row.names = FALSE)\nwrite.csv(df_rep_absolute,\"analysis/SGC3A/data/2-scored-data/sgc3a_absolute_progress_REP.csv\", row.names = FALSE)\nwrite.csv(df_rep_scaled,\"analysis/SGC3A/data/2-scored-data/sgc3a_scaled_progress_REP.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_rep, \"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants_REP.rds\") # to R data structure file\nrio::export(df_rep_items, \"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items_REP.rds\") # to R data structure file\n\n\n\n\nSGC3A ALL DATA\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants_ALL.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items_ALL.csv\", row.names = FALSE)\nwrite.csv(df_absolute_progress,\"analysis/SGC3A/data/2-scored-data/sgc3a_absolute_progress_ALL.csv\", row.names = FALSE)\nwrite.csv(df_scaled_progress,\"analysis/SGC3A/data/2-scored-data/sgc3a_scaled_progress_ALL.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants_ALL.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items_ALL.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html#resources",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html#resources",
    "title": "5  Response Scoring",
    "section": "RESOURCES",
    "text": "RESOURCES\nset operations\nhttps://stat.ethz.ch/R-manual/R-devel/library/base/html/sets.html\nkableExtra tables\nhttps://haozhu233.github.io/kableExtra/awesome_table_in_html.html#grouped_columns__rows\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] forcats_0.5.1          stringr_1.4.0          dplyr_1.0.9           \n [4] purrr_0.3.4            readr_2.1.2            tidyr_1.2.0           \n [7] tibble_3.1.7           tidyverse_1.3.1        tidyfst_1.6.5         \n[10] statsExpressions_1.3.2 ggstatsplot_0.9.3      Hmisc_4.7-0           \n[13] Formula_1.2-4          survival_3.3-1         lattice_0.20-45       \n[16] pbapply_1.5-0          ggformula_0.10.1       ggridges_0.5.3        \n[19] scales_1.2.0           ggstance_0.3.5         ggplot2_3.3.6         \n[22] kableExtra_1.3.4      \n\nloaded via a namespace (and not attached):\n  [1] TH.data_1.1-1          colorspace_2.0-3       rio_0.5.29            \n  [4] ellipsis_0.3.2         estimability_1.4       htmlTable_2.4.0       \n  [7] fs_1.5.2               parameters_0.18.1      base64enc_0.1-3       \n [10] rstudioapi_0.13        farver_2.1.0           MatrixModels_0.5-0    \n [13] ggrepel_0.9.1          bit64_4.0.5            fansi_1.0.3           \n [16] mvtnorm_1.1-3          lubridate_1.8.0        xml2_1.3.3            \n [19] codetools_0.2-18       splines_4.2.1          knitr_1.39            \n [22] polyclip_1.10-0        zeallot_0.1.0          jsonlite_1.8.0        \n [25] broom_0.8.0            cluster_2.1.3          dbplyr_2.2.1          \n [28] png_0.1-7              effectsize_0.7.0       ggforce_0.3.3         \n [31] compiler_4.2.1         httr_1.4.3             emmeans_1.7.5         \n [34] backports_1.4.1        assertthat_0.2.1       Matrix_1.4-1          \n [37] fastmap_1.1.0          cli_3.3.0              tweenr_1.0.2          \n [40] htmltools_0.5.2        tools_4.2.1            coda_0.19-4           \n [43] gtable_0.3.0           glue_1.6.2             Rcpp_1.0.8.3          \n [46] cellranger_1.1.0       vctrs_0.4.1            svglite_2.1.0         \n [49] insight_0.18.2         xfun_0.31              openxlsx_4.2.5        \n [52] rvest_1.0.2            lifecycle_1.0.1        mosaicCore_0.9.0      \n [55] MASS_7.3-57            zoo_1.8-10             vroom_1.5.7           \n [58] BayesFactor_0.9.12-4.4 hms_1.1.1              parallel_4.2.1        \n [61] sandwich_3.0-2         rematch2_2.1.2         RColorBrewer_1.1-3    \n [64] prismatic_1.1.0        curl_4.3.2             yaml_2.3.5            \n [67] gridExtra_2.3          labelled_2.9.1         rpart_4.1.16          \n [70] latticeExtra_0.6-29    stringi_1.7.6          highr_0.9             \n [73] paletteer_1.4.0        bayestestR_0.12.1      checkmate_2.1.0       \n [76] zip_2.2.0              boot_1.3-28            fstcore_0.9.12        \n [79] rlang_1.0.3            pkgconfig_2.0.3        systemfonts_1.0.4     \n [82] evaluate_0.15          labeling_0.4.2         patchwork_1.1.1       \n [85] htmlwidgets_1.5.4      bit_4.0.4              tidyselect_1.1.2      \n [88] plyr_1.8.7             magrittr_2.0.3         R6_2.5.1              \n [91] generics_0.1.2         multcomp_1.4-19        DBI_1.1.3             \n [94] pillar_1.7.0           haven_2.5.0            foreign_0.8-82        \n [97] withr_2.5.0            datawizard_0.5.1       nnet_7.3-17           \n[100] performance_0.9.1      modelr_0.1.8           crayon_1.5.1          \n[103] utf8_1.2.2             tzdb_0.3.0             correlation_0.8.1     \n[106] rmarkdown_2.14         jpeg_0.1-9             readxl_1.4.0          \n[109] grid_4.2.1             data.table_1.14.2      reprex_2.0.1          \n[112] digest_0.6.29          webshot_0.5.3          xtable_1.8-4          \n[115] munsell_0.5.0          fst_0.9.8              viridisLite_0.4.0"
  },
  {
    "objectID": "analysis/SGC3A/2_sgc3A_scoring.html#archive",
    "href": "analysis/SGC3A/2_sgc3A_scoring.html#archive",
    "title": "5  Response Scoring",
    "section": "ARCHIVE",
    "text": "ARCHIVE\nPrior versions of functions for for-loop version of scoring, not optimized to use mapply\n\n\nCODE\n# #CALCULATE THE TRIANGULAR, ORTHOGONAL OR TVERSKIAN SUBSCORES FROM KEYFRAME\n# calc_sub_score <- function(question, cond, response,keyframe){\n# \n#   #STEP 1 GET KEY\n#   if (question < 6) #for q1 - q5 find key for question by condition\n#   {\n#     # print(keyframe)\n#     #GET KEY FOR THIS SCORE TYPE, QUESTION AND CONDITION\n#     p =  keyframe %>% filter(Q == question) %>% filter(condition == cond) %>% select(set_p) %>% pull(set_p) %>% str_split(\"\") %>% unlist()\n#     q =  keyframe %>% filter(Q == question) %>% filter(condition == cond) %>% select(set_q) %>% pull(set_q) %>% str_split(\"\") %>% unlist()\n#     pn = keyframe %>% filter(Q == question) %>% filter(condition == cond) %>% select(n_p)\n#     qn = keyframe %>% filter(Q == question) %>% filter(condition == cond) %>% select(n_q)\n# \n#   } else {\n#     #GET KEY FOR THIS SCORE TYPE, QUESTION\n#     p =  keyframe %>% filter(Q == question) %>% select(set_p) %>% pull(set_p) %>% str_split(\"\") %>% unlist()\n#     q =  keyframe %>% filter(Q == question) %>% select(set_q) %>% pull(set_q) %>% str_split(\"\") %>% unlist()\n#     pn = keyframe %>% filter(Q == question) %>% select(n_p)\n#     qn = keyframe %>% filter(Q == question) %>% select(n_q)\n#   }\n# \n#   #STEP 2 CALC INTERSECTIONS BETWEEN RESPONSE AND KEY\n#   \n#   #if response is not empty, split apart response for set comparison\n#     if(response != \"\")\n#     { response = response %>% str_split(\"\") %>% unlist()}\n#     \n#   ps = length(intersect(response,p))\n#   qs = length(intersect(response,q))\n#   # df_items[x,'tri_ps'] = tri_ps\n#   # df_items[x,'tri_qs'] = tri_qs\n# \n#   #STEP 3 CALC f_partialP schema SCORE FOR THIS INTERSECTION\n#   x = f_partialP(ps,pn,qs,qn) %>% unlist() %>% as.numeric()\n#   \n#   #cleanup\n#   rm(p,q,pn,qn,ps,qs)\n#   return(x)\n# \n# }\n# \n# #CALCULATE THE REFERENCE SCORES\n# calc_ref_score <- function(question, cond, response){\n#   \n#     #1. GET reference point from REF_POINT column in raw keys\n#     ref_p = keys_raw %>% filter(Q == question) %>% filter(condition == cond) %>% select(REF_POINT) %>% pull(REF_POINT) %>% str_split(\"\") %>% unlist()\n#      \n#     #2. if response has more than one character, it can't be correct\n#     #there is only ever 1 reference character\n#     n = nchar(response)\n#     if (n == 0) {x = 0}\n#     else if(n>1) {x = 0}\n#     else {\n#       #3 is the response PRECISELY the REFERENCE POINT?\n#       x = ref_p == response\n#       x = as.numeric(x)  \n#     }\n#     \n#     #cleanup\n#     rm(ref_p, response, question, cond)   \n#     return(x) #1 = match, 0 = not match\n# }\n# \n# \n# #CALCULATE SCORE BASED ON UNION OF ORTH & TRI (SUBJECT SELECTS BOTH ANSWERS )\n# calc_both_score <- function(question, cond, response){\n#   \n#TRAPDOOR \n#   #since no orth responses exist for impasse condition q1 - q5, set to 0\n#   if (question < 6 & cond == 121) {x = NA}\n#   \n#   #ELSE \n#   #calculate union of ORTH and TRI\n#   else {\n#     if (question < 6 & cond == 111) #for q1 - q5 find key for question by condition\n#   {\n#      #grab the tri and orth keys for this question as well as N option set\n#      tri_p =  keys_tri %>%  filter(Q == question) %>% filter(condition == cond) %>% select(set_p) %>% pull(set_p) %>% str_split(\"\") %>% unlist()\n#      orth_p = keys_orth %>% filter(Q == question) %>% filter(condition == cond) %>% select(set_p) %>% pull(set_p) %>% str_split(\"\") %>% unlist()\n#      set_n =  keys_tri %>%  filter(Q == question) %>% filter(condition == cond) %>% select(set_n) %>% pull(set_n) %>% str_split(\"\") %>% unlist() \n#      #1. calc answer that is both tri and orth and only these --> union of tri_p and orth_p\n#      both_p = union(tri_p, orth_p) #the selection of tri and p\n#      #2. calc answers that should't be selected as diffrence between N [same for all keys] and both_p\n#      both_q = setdiff(set_n,both_p)\n#      both_pn = length(both_p)\n#      both_qn = length(both_q)\n#   } else{\n#     \n#      #grab the tri and orth keys for this question as well as N option set\n#      tri_p =  keys_tri %>%  filter(Q == question) %>% select(set_p) %>% pull(set_p) %>% str_split(\"\") %>% unlist()\n#      orth_p = keys_orth %>% filter(Q == question) %>% select(set_p) %>% pull(set_p) %>% str_split(\"\") %>% unlist()\n#      set_n =  keys_tri %>%  filter(Q == question) %>% select(set_n) %>% pull(set_n) %>% str_split(\"\") %>% unlist() \n#      #1. calc answer that is both tri and orth and only these --> union of tri_p and orth_p\n#      both_p = union(tri_p, orth_p) #the selection of tri and p\n#      #2. calc answers that shouldn't be selected as difference between N [same for all keys] and both_p\n#      both_q = setdiff(set_n,both_p)\n#      both_pn = length(both_p)\n#      both_qn = length(both_q)\n#   }\n#     \n#   #STEP 2 CALC INTERSECTIONS BETWEEN RESPONSE AND KEY\n#   \n#   #if response is not empty, split apart response for set comparison\n#     if(response != \"\")\n#     { response = response %>% str_split(\"\") %>% unlist()}\n#   \n#     both_ps = length(intersect(response,both_p))\n#     both_qs = length(intersect(response,both_q))\n#   \n#  \n#   #STEP 3 CALC f_partialP schema SCORE FOR THIS INTERSECTION \n#   x = f_partialP(both_ps,both_pn,both_qs,both_qn)%>% unlist() %>% as.numeric()\n#   \n#   #cleanup\n#   rm(both_p,both_q,both_pn,both_qn,both_ps,both_qs, question, cond, response )   \n#   }\n#   \n#   return(x) #true correct, trues, false correct, falses\n# }\n\n\nLooping to do the scoring (not using MAPPLY)\n\n\nCODE\n#RUN THIS OR THE CALCULATE-SCORES-MAPPLY\n# df_items = trad \n# \n# pb <- timerProgressBar() \n# on.exit(close(pb)) \n#  \n# #CALCULATE SUBSCORES (in loop)\n# \n# for (x in 1:nrow(df_items)) {\n#   \n#   #show progress bar \n#   setTimerProgressBar(pb, x) \n#   \n#   #PREPARE ITEMS FOR SCORING\n#   #sort response vectors alphabetically\n#   #doesn't impact scoring, but does impact response display tables\n#    df_items[x,'response'] <-  df_items[x,'response'] %>% str_split(\"\") %>% unlist() %>% sort() %>% str_c(collapse=\"\")\n# \n#   #get properties of the RESPONSE ITEM\n#   qu = df_items[x,'q'] %>% as.numeric()\n#   cond = as.character(df_items[x,'condition']) %>% as.numeric()\n#   r = df_items[x,'response'] \n# \n#   #calculate the main subscores\n#   df_items[x,'score_TRI'] = calc_sub_score(qu, cond, r,keys_tri)\n#   df_items[x,'score_ORTH'] = calc_sub_score(qu, cond, r,keys_orth)\n#   df_items[x,'score_SATISFICE'] = calc_sub_score(qu, cond, r,keys_satisfice)\n#   df_items[x,'score_TV_max'] = calc_sub_score(qu, cond, r,keys_tversky_max)\n#   df_items[x,'score_TV_start'] = calc_sub_score(qu, cond, r,keys_tversky_start)\n#   df_items[x,'score_TV_end'] = calc_sub_score(qu, cond, r,keys_tversky_end)\n#   df_items[x,'score_TV_duration'] = calc_sub_score(qu, cond, r, keys_tversky_duration)\n#   \n#   #calculate special subscores\n#   df_items[x,'score_REF'] = calc_ref_score(qu, cond, r)\n#   df_items[x,'score_BOTH'] = calc_both_score(qu, cond, r)\n# }\n# \n# #CALCULATE ABSOLUTE SCORES\n# #calculate absolute scores dichotomous\n# df_items$score_ABS = as.integer(df_items$correct)\n# #niceABS indicates if the response is correct without penalizing the allowable triangular options(ie. the ref point)\n# df_items$score_niceABS  <- as.integer((df_items$score_TRI == 1))\n#  \n# #cleanup\n# rm(qu,cond,r, x)\n\n# trad_scored = df_items\n\n\nsanity check equivalence of for-loop and mapply scoring\n\n\nCODE\n#CHECK EQUIVALENCE OF LOOP AND MAPPLY SCORING \n# tests = data.frame (\n#   alt_tri = alt_scored$score_TRI,\n#   trad_tri = trad_scored$score_TRI,\n#   alt_orth = alt_scored$score_ORTH,\n#   trad_orth = trad_scored$score_ORTH,\n#   alt_ref = alt_scored$score_REF,\n#   trad_ref = trad_scored$score_REF,\n#   alt_tv_max = alt_scored$score_TV_max,\n#   trad_tv_max = trad_scored$score_TV_max,\n#   alt_tv_dur = alt_scored$score_TV_duration,\n#   trad_tv_dur = trad_scored$score_TV_duration,\n#   alt_tv_start = alt_scored$score_TV_start,\n#   trad_tv_start = trad_scored$score_TV_start,\n#   alt_tv_end = alt_scored$score_TV_end,\n#   trad_tv_end = trad_scored$score_TV_end,\n#   alt_both = alt_scored$score_BOTH,\n#   trad_both = trad_scored$score_BOTH,\n#   trad_response = trad_scored$response,\n#   alt_response = alt_scored$response,\n#   q_match = trad_scored$q == alt_scored$q,\n#   q = trad_scored$q,\n#   c_match = trad_scored$condition == alt_scored$condition,\n#   condition = trad_scored$condition\n# )\n# \n# tests$tri = tests$alt_tri == tests$trad_tri\n# tests$orth = tests$alt_orth == tests$trad_orth\n# tests$ref = tests$alt_ref == tests$trad_ref\n# tests$tvdur = tests$alt_tv_dur == tests$trad_tv_dur\n# tests$tvstart = tests$alt_tv_start == tests$trad_tv_start\n# tests$tvend = tests$alt_tv_end == tests$trad_tv_end\n# tests$both = tests$alt_both == tests$trad_both\n# \n# #CHECKS \n# unique(tests$tri)\n# unique(tests$orth)\n# unique(tests$ref)\n# unique(tests$tvdur)\n# unique(tests$tvstart)\n# unique(tests$tvend)\n# unique(tests$both)\n# \n# unique(alt_scored$score_ABS == trad_scored$score_ABS)\n# unique(alt_scored$score_niceABS == trad_scored$score_niceABS)\n\n\nPrior inline version of derive interpretation, before externalizing to a function in the scoring script.\n\n\nCODE\n# threshold_range = 0.5 #set required variance in subscores to be discriminant\n# threshold_frenzy = 4\n# \n# for (x in 1:nrow(df_items)) {\n#   \n#   #CALCULATE MAX TVERSKY SUBSCORE\n#   t = df_items[x,] %>% select(score_TV_max, score_TV_start, score_TV_end, score_TV_duration) #reshape\n#   t.long = gather(t,score, value, 1:4)\n#   t.long[t.long == \"\"] = NA #replace empty scores with NA so we can ignore them\n#   if(length(unique(t.long$value)) == 1 ){\n#     if(is.na(unique(t.long$value))){\n#       df_items[x,'score_TVERSKY'] = NA\n#       df_items[x,'tv_type'] = NA   \n#     }\n#   } else {\n#     df_items[x,'score_TVERSKY'] = as.numeric(max(t.long$value,na.rm = TRUE))\n#     df_items[x,'tv_type'] = t.long[which.max(t.long$value),'score']\n#   }\n#   \n#   #CALCULATE MAX SATISFICING SUBSCORE\n#   t = df_items[x,] %>% select(score_SAT_left, score_SAT_right)\n#   t.long = gather(t,score, value, 1:2)\n#   t.long[t.long == \"\"] = NA #replace empty scores\n#   if(length(unique(t.long$value)) == 1 ){\n#     if(is.na(unique(t.long$value))){\n#       df_items[x,'score_SATISFICE'] = NA\n#       df_items[x,'sat_type'] = NA   \n#     }\n#   } else {\n#     df_items[x,'score_SATISFICE'] = as.numeric(max(t.long$value,na.rm = TRUE))\n#     df_items[x,'sat_type'] = t.long[which.max(t.long$value),'score']  \n#   }\n#   \n#   #NOW CALCULATE RANGE AMONG SUBSCORES\n#   #order of this selection matters in breaking ties! \n#   t = df_items[x,] %>% select(score_TRI, score_TVERSKY, score_SATISFICE, score_ORTH)\n#   t.long = gather(t,score, value, 1:4)\n#   t.long[t.long == \"\"] = NA\n#   \n#   df_items[x,'top_score'] = as.numeric(max(t.long$value,na.rm = TRUE))\n#   df_items[x,'top_type'] = t.long[which.max(t.long$value),'score']\n#   \n#   #calculate the range between highest and lowest scores \n#   r = as.numeric(range(t.long$value,na.rm = TRUE))\n#   r = diff(r)\n#   df_items[x,'range'] = r\n#   \n#   #DISCRIMINANT BETWEEN SUBSCORES TO PREDICT BEST FIT INTERPRETATION\n#   \n#   if (r < threshold_range) {\n#       #then we can't predict the interpretation, leave it as \"?\"\n#     df_items[x,'best'] = \"?\"\n#   } else {\n#       p =  df_items[x,'top_type']\n#       if (p == \"score_TRI\") {df_items[x,'best'] = \"Triangular\"\n#       } else if(p == \"score_ORTH\") {df_items[x,'best'] = \"Orthogonal\"\n#       } else if(p == \"score_TVERSKY\") {df_items[x,'best'] = \"Tversky\"\n#       } else if(p == \"score_SATISFICE\") {df_items[x,'best'] = \"Satisfice\"}\n#   }\n#   \n#   #CHECK SPECIAL SITUATIONS\n# \n#   #BOTH TRI AND ORTH?  \n#   if (!is.na(df_items[x,'score_BOTH'])) { #only check if both is not null\n#       if( df_items[x,'score_BOTH'] == 1) {\n#         df_items[x,'best'] = \"both tri + orth\"}\n#   }\n#   \n#   #IS BLANK?\n#   if( df_items[x,'num_o'] == 0) {  \n#     df_items[x,'best'] = \"blank\"\n#   }\n#   \n#   #IS FRENZY?\n#   if( df_items[x,'num_o'] > threshold_frenzy) { \n#       df_items[x,'best'] = \"frenzy\"\n#   }\n# \n#   #IS REF POINT?\n#   if (!is.na(df_items[x,'score_REF'])) { #only check if the score is NOT null\n#       if( df_items[x,'score_REF'] == 1) {\n#           df_items[x,'best'] = \"reference\"\n#       }\n#   }\n# \n# }#end loop\n# \n# #cleanup \n# rm(t, t.long, x, r,p)\n# rm(threshold_frenzy, threshold_range)\n# \n# #set order of levels for response exploration table\n# df_items$int2 <- factor(df_items$best,\n#                                   levels = c(\"Triangular\", \"Tversky\",\n#                                              \"Satisfice\", \"Orthogonal\", \"reference\", \"both tri + orth\", \"blank\",\"frenzy\",\"?\"))\n# \n# #set order of levels\n# df_items$interpretation <- factor(df_items$best,\n#                                   levels = c(\"Orthogonal\",\"Satisfice\", \"frenzy\",\"?\",\"reference\",\"blank\",\n#                                                \"both tri + orth\", \"Tversky\",\"Triangular\"))\n# \n# #collapsed representation of scale of interpretations\n# df_items$high_interpretation <- fct_collapse(df_items$interpretation,\n#   orthogonal = c(\"Satisfice\", \"Orthogonal\"),\n#   neg.trans = c(\"frenzy\",\"?\"),\n#   neutral = c(\"reference\",\"blank\"),\n#   pos.trans = c(\"Tversky\",\"both tri + orth\"),\n#   triangular = \"Triangular\"\n# ) \n# \n# #reorder levels\n# df_items$high_interpretation = factor(df_items$high_interpretation, levels= c(\"orthogonal\", \"neg.trans\",\"neutral\",\"pos.trans\",\"triangular\"))\n# \n# #cleanup \n# df_items <- df_items %>% dplyr::select(-best)\n# \n# #recode as numeric inase they are char \n# # df_items$score_TV_duration <- df_items$score_TV_duration %>% as.numeric()\n# # df_items$score_SATISFICE <- df_items$score_SATISFICE %>% as.numeric()\n\n\nOld inline calculation of score_SCALED before externalizing as function\n\n\nCODE\n# df_items$score_SCALED <- recode(df_items$interpretation,\n#                           \"Orthogonal\" = -1,\n#                           \"Satisfice\" = -1,\n#                           \"frenzy\" = -0.5,\n#                           \"?\" = -0.5,\n#                           \"reference\" = 0,\n#                           \"blank\" = 0, \n#                           \"both tri + orth\" = 0.5,\n#                           \"Tversky\" = 0.5,\n#                           \"Triangular\" = 1)\n\n\nOriginal summary by subject before externalizing as function\n\n\nCODE\n# #prep items\n# df_items <- df_items %>% mutate(\n#   tv_type = as.factor(tv_type),\n#   top_type = as.factor(top_type)\n# )\n# \n# #summarize SCORES and TIME by subject\n# subjects_summary <- df_items %>% filter(q %nin% c(6,9)) %>% group_by(subject) %>% dplyr::summarise (\n#   subject = as.character(subject),\n#   pretty_condition = recode_factor(condition, \"111\" = \"control\", \"121\" =  \"impasse\"),\n#   s_TRI = sum(score_TRI,na.rm=TRUE),\n#   s_ORTH = sum(score_ORTH,na.rm=TRUE),\n#   s_TVERSKY = sum(score_TVERSKY,na.rm=TRUE),\n#   s_SATISFICE = sum(score_SATISFICE, na.rm=TRUE),\n#   s_REF = sum(score_REF,na.rm=TRUE),\n#   s_ABS = sum(score_ABS,na.rm=TRUE),\n#   s_NABS = sum(score_niceABS,na.rm=TRUE),\n#   s_SCALED = sum(score_SCALED,na.rm=TRUE),\n#   DV_percent_NABS = s_NABS/13,\n#   rt_m = sum(rt_s)/60,\n#   item_avg_rt = mean(rt_s),\n#   item_min_rt = min(rt_s),\n#   item_max_rt = max(rt_s),\n#   item_n_TRI = sum(interpretation == \"Triangular\"),\n#   item_n_ORTH = sum(interpretation == \"Orthogonal\"),\n#   item_n_TV = sum(interpretation == \"Tversky\"),\n#   item_n_SAT = sum(interpretation == \"Satisfice\"),\n#   item_n_OTHER = sum(interpretation %nin% c(\"Triangular\",\"Orthogonal\",\"Tversky\",\"Satisfice\")),\n#   item_n_POS = sum(high_interpretation == \"pos.trans\"),\n#   item_n_NEG = sum(high_interpretation == \"neg.trans\"),\n#   item_n_NEUTRAL = sum(high_interpretation == \"neutral\")\n# ) %>% arrange(subject) %>% slice(1L)\n# \n# #summarize first scaffold item of interest by subject\n# subjects_q1 <- df_items %>% filter(q == 1) %>% mutate(\n#   item_q1_NABS = score_niceABS,\n#   item_q1_SCALED = score_SCALED,\n#   item_q1_interpretation = interpretation,\n#   item_q1_rt = rt_s,\n# ) %>% dplyr::select(subject, item_q1_NABS, item_q1_SCALED, item_q1_interpretation,item_q1_rt) %>% arrange(subject)\n# \n# #summarize last test item of interest by subject\n# subjects_q5 <- df_items %>% filter(q == 5) %>% mutate(\n#   item_q5_NABS = score_niceABS,\n#   item_q5_SCALED = score_SCALED,\n#   item_q5_interpretation = interpretation,\n#   item_q5_rt = rt_s,\n# ) %>% dplyr::select(subject, item_q5_NABS, item_q5_SCALED, item_q5_interpretation,item_q5_rt) %>% arrange(subject)\n# \n# #summarize first test item of interest by subject\n# subjects_q7 <- df_items %>% filter(q == 7) %>% mutate(\n#   item_q7_NABS = score_niceABS,\n#   item_q7_interpretation = interpretation,\n#   item_q7_rt = rt_s,\n# ) %>% dplyr::select(subject, item_q7_NABS, item_q7_interpretation,item_q7_rt) %>% arrange(subject)\n# \n# #summarize last test item of interest by subject\n# subjects_q15 <- df_items %>% filter(q == 15) %>% mutate(\n#   item_q15_NABS = score_niceABS,\n#   item_q15_interpretation = interpretation,\n#   item_q15_rt = rt_s,\n# ) %>% dplyr::select(subject, item_q15_NABS, item_q15_interpretation,item_q15_rt) %>% arrange(subject)\n# \n# #summarize scaffold phase performance\n# subjects_scaffold <- df_items %>% filter(q<6)  %>% group_by(subject) %>% dplyr::summarise (\n#   item_scaffold_NABS = sum(score_niceABS),\n#   item_scaffold_SCALED = sum(score_SCALED),\n#   item_scaffold_rt = sum(rt_s)\n# )%>% dplyr::select(subject, item_scaffold_NABS, item_scaffold_SCALED, item_scaffold_rt) %>% arrange(subject)\n# \n# #summarize test phase performance\n# subjects_test <- df_items %>% filter(q %nin% c(1,2,3,4,5,6,9)) %>% group_by(subject) %>% dplyr::summarise (\n#   item_test_NABS = sum(score_niceABS),\n#   item_test_SCALED = sum(score_SCALED),\n#   item_test_rt = sum(rt_s)\n# )%>% dplyr::select(subject, item_test_NABS, item_test_SCALED, item_test_rt) %>% arrange(subject)\n# \n# #import subjects\n# df_subjects <- read_rds('analysis/SGC3A/data/1-study-level/sgc3a_participants.rds') %>% mutate(subject = as.character(subject)) %>% arrange(subject)\n# \n# #SANITY CHECK SUBJECT ORDER BEFORE MERGE; BOTH SHOULD BE TRUE\n# unique(subjects_summary$subject == df_subjects$subject)\n# unique(subjects_summary$subject == subjects_q1$subject)\n# unique(subjects_summary$subject == subjects_q5$subject)\n# unique(subjects_summary$subject == subjects_q7$subject)\n# unique(subjects_summary$subject == subjects_q15$subject)\n# unique(subjects_summary$subject == subjects_scaffold$subject)\n# unique(subjects_summary$subject == subjects_test$subject)\n# \n# #CAREFULLY CHECK THIS — RELIES ON \n# x = merge(df_subjects, subjects_summary)\n# x = merge(x, subjects_q1)\n# x = merge(x, subjects_q5)\n# x = merge(x, subjects_q7)\n# x = merge(x, subjects_q15)\n# x = merge(x, subjects_scaffold)\n# x = merge(x, subjects_test)\n# df_subjects <- x %>% dplyr::select(-absolute_score) #drop absolute score from webapp that includes Q6 and Q9\n# \n# #cleanup\n# rm(subjects_q1, subjects_q5, subjects_q7, subjects_q15, subjects_scaffold, subjects_test, subjects_summary, x)\n\n\nSummarize Cummulative Progress versions before functionize\n\n\nCODE\n# #SUMMARIZE-CUMULATIVE ABSOLUTE PROGRESS\n# \n# \n# #filter for valid items\n# x <- df_items %>% filter(q %nin% c(6,9)) %>% dplyr::select(subject,mode, pretty_condition, q,score_niceABS) \n# \n# #pivot wider\n# wide <- x %>% pivot_wider(names_from=q, names_glue = \"q_{q}\", values_from = score_niceABS)\n# \n# #calc stepwise cumulative score\n# wide$c1 = wide$q_1\n# wide$c2 = wide$c1 + wide$q_2\n# wide$c3 = wide$c2 + wide$q_3\n# wide$c4 = wide$c3 + wide$q_4\n# wide$c5 = wide$c4 + wide$q_5\n# wide$c6 = wide$c5 + wide$q_7\n# wide$c7 = wide$c6 + wide$q_8\n# wide$c8 = wide$c7 + wide$q_10\n# wide$c9 = wide$c8 + wide$q_11\n# wide$c10 = wide$c9 + wide$q_12\n# wide$c11 = wide$c10 + wide$q_13\n# wide$c12 = wide$c11 + wide$q_14\n# wide$c13 = wide$c12 + wide$q_15\n# wide <- wide %>% dplyr::select(subject,mode, pretty_condition,c1,c2,c3,c4,c5,c6, c7,c8,c9, c10,c11,c12,c13)\n# \n# #lengthen \n# df_absolute_progress <- wide %>% pivot_longer(cols= c1:c13, names_to = \"question\", names_pattern = \"c(.*)\", values_to = \"score\")\n# df_absolute_progress$question <- as.integer(df_absolute_progress$question)\n# \n# \n# #cleanup \n# rm(x,wide)\n#   \n# # SUMMARIZE-CUMULATIVE SCALED PROGRESS\n# \n# #filter for valid items\n# x <- df_items %>% filter(q %nin% c(6,9)) %>% select(subject,mode, pretty_condition, q,score_SCALED)\n# \n# #pivot wider\n# wide <- x %>% pivot_wider(names_from=q, names_glue = \"q_{q}\", values_from = score_SCALED)\n# \n# #calc stepwise cumulative score\n# wide$c1 = wide$q_1\n# wide$c2 = wide$c1 + wide$q_2\n# wide$c3 = wide$c2 + wide$q_3\n# wide$c4 = wide$c3 + wide$q_4\n# wide$c5 = wide$c4 + wide$q_5\n# wide$c6 = wide$c5 + wide$q_7\n# wide$c7 = wide$c6 + wide$q_8\n# wide$c8 = wide$c7 + wide$q_10\n# wide$c9 = wide$c8 + wide$q_11\n# wide$c10 = wide$c9 + wide$q_12\n# wide$c11 = wide$c10 + wide$q_13\n# wide$c12 = wide$c11 + wide$q_14\n# wide$c13 = wide$c12 + wide$q_15\n# wide <- wide %>% select(subject,mode, pretty_condition,c1,c2,c3,c4,c5,c6, c7,c8,c9, c10,c11,c12,c13)\n# \n# #lengthen \n# df_scaled_progress <- wide %>% pivot_longer(cols= c1:c13, names_to = \"question\", names_pattern = \"c(.*)\", values_to = \"score\")\n# df_scaled_progress$question <- as.integer(df_scaled_progress$question)\n# \n# #cleanup \n# rm(x,wide)"
  },
  {
    "objectID": "analysis/SGC3A/3_sgc3A_description.html",
    "href": "analysis/SGC3A/3_sgc3A_description.html",
    "title": "6  Description",
    "section": "",
    "text": "The purpose of this notebook is describe the distributions of dependent variables for Study SGC3A."
  },
  {
    "objectID": "analysis/SGC3A/3_sgc3A_description.html#sample",
    "href": "analysis/SGC3A/3_sgc3A_description.html#sample",
    "title": "6  Description",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\nData was initially collected (in person, SONA groups in computer lab) in Fall 2017. In Spring 2018, additional data were collected after small modifications were made to the experimental platform to increase the size of multiple-choice input buttons, and to add an additional free-response question following the main task block. In Fall 2021, the study was replicated using asynchronous, online SONA pool, with additional participants collected in Winter 2022.\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Control Condition\",\"Impasse Condition\",\"Total for Period\")\ncont <- table(df_subjects$pretty_mode, df_subjects$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n      \n    Control Condition \n    Impasse Condition \n    Total for Period \n  \n \n\n  \n    laboratory \n    62 \n    64 \n    126 \n  \n  \n    online-replication \n    96 \n    108 \n    204 \n  \n  \n    Sum \n    158 \n    172 \n    330 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(age) %>% unlist() %>% favstats(),\n  \"online\" = df_online %>% filter(mode == \"asynch\") %>% dplyr::select(age) %>% unlist() %>% favstats(),\n  \"combined\" = df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\n) \n\nsubject.stats$percent.male <- c(\n  (df_lab %>%  filter(gender==\"Male\") %>% count())$n/count(df_lab) %>% unlist(),\n  (df_online %>% filter(gender==\"Male\") %>% count())$n/count(df_online) %>% unlist(),\n  (df_subjects %>% filter(gender==\"Male\") %>% count())$n/count(df_subjects) %>% unlist()\n)\n\nsubject.stats$percent.female <- c(\n  (df_lab %>%  filter(gender==\"Female\") %>% count())$n/count(df_lab) %>% unlist(),\n  (df_online %>% filter(gender==\"Female\") %>% count())$n/count(df_online) %>% unlist(),\n  (df_subjects %>% filter(gender==\"Female\") %>% count())$n/count(df_subjects) %>% unlist()\n)\n\nsubject.stats$percent.other <- c(\n  (df_lab %>%  filter(gender %nin% c(\"Female\",\"Male\")) %>% count())$n/count(df_lab) %>% unlist(),\n  (df_online %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())$n/count(df_online) %>% unlist(),\n  (df_subjects %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())$n/count(df_subjects) %>% unlist()\n)\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n    lab \n    18 \n    19 \n    20 \n    21 \n    33 \n    20.4 \n    2.12 \n    126 \n    0 \n    0.373 \n    0.619 \n    0.008 \n  \n  \n    online \n    18 \n    20 \n    20 \n    21 \n    31 \n    20.6 \n    2.00 \n    204 \n    0 \n    0.304 \n    0.672 \n    0.025 \n  \n  \n    combined \n    18 \n    19 \n    20 \n    21 \n    33 \n    20.5 \n    2.05 \n    330 \n    0 \n    0.330 \n    0.652 \n    0.018 \n  \n\n\nNote:   Age in Years\n\n\n\n\nFor in-person collection, 126 participants (37 % male, 62 % female, 1 % other) undergraduate STEM majors at a public American University participated in person in exchange for course credit (age: 18 - 33 years). Participants were randomly assigned to one of two experimental groups.\nFor online replication 204 participants (30 % male, 67 % female, 2 % other) undergraduate STEM majors at a public American University participated online, asynchronously in exchange for course credit (age: 18 - 31 years). Participants were randomly assigned to one of two experimental groups.\nCombined overall 330 participants (33 % male, 65 % female, 2 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 33 years)."
  },
  {
    "objectID": "analysis/SGC3A/3_sgc3A_description.html#response-accuracy",
    "href": "analysis/SGC3A/3_sgc3A_description.html#response-accuracy",
    "title": "6  Description",
    "section": "RESPONSE ACCURACY",
    "text": "RESPONSE ACCURACY\n\nSubject Level Scores\nSubject level scores summarize the the response accuracy by a particular participant across all discriminant items in the graph comprehension task.\n\nTest Phase Absolute Score\nRecall from Section 3.1.2.1 that the absolute score (following the dichotomous scoring approach) s_NABS indicates if the subject’s response for a particular item was perfectly correct: whether they selected all correct answer options and no others (excluding certain allowed exceptions, such as also selecting the data point referenced in the question). The absolute score for an individual item is either 0 or 1. When summarized across the entire set of discriminant items, the total absolute score for an individual subject ranges from [0,13]. When summarized across just the test phase (final items following scaffolding phase) scores for an individual subject range from [0,8]. First we examine performance on the test phase (final 8 questions, appears after scaffolding phase). This tells us how the participants perform after exposure to the 5 scaffolding questions (in the impasse condition).\n\n\nCODE\ntitle = \"Descriptive Statistics of TEST PHASE Response Accuracy (Total Absolute Score)\"\nabs.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(item_test_NABS) %>% unlist() %>% favstats(),\n  \"online\" = df_online %>% dplyr::select(item_test_NABS) %>% unlist() %>% favstats(),\n  \"combined\" = df_subjects %>% dplyr::select(item_test_NABS) %>% unlist() %>% favstats()\n) \nabs.stats %>% kbl (caption = title) %>% kable_classic() %>% \n  footnote(general = \"# questions correct [0,8]\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of TEST PHASE Response Accuracy (Total Absolute Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    0 \n    0 \n    0 \n    6 \n    8 \n    2.58 \n    3.34 \n    126 \n    0 \n  \n  \n    online \n    0 \n    0 \n    0 \n    6 \n    8 \n    2.22 \n    3.22 \n    204 \n    0 \n  \n  \n    combined \n    0 \n    0 \n    0 \n    6 \n    8 \n    2.35 \n    3.27 \n    330 \n    0 \n  \n\n\nNote:   # questions correct [0,8]\n\n\n\n\nFor in person collection, total absolute scores in the TEST phase (n = 126) range from 0 to 8 with a mean score of (M = 2.58, SD = 3.34).\nFor online replication, (online) total absolute scores in the TEST phase (n = 204) range from 0 to 8 with a slightly lower mean score of (M = 2.22, SD = 3.22).\nWhen combined overall, total absolute accuracy scores in the TEST phase (n = 330) range from 0 to 8 with a slightly lower mean score of (M = 2.35, SD = 3.27).\n\n\nCODE\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL ABSOLUTE\n  gf_props(~item_test_NABS, data = df_subjects) + \n  labs(x = \"number of correct responses (test phase)\",\n       y = \"% of subjects\",\n       title = \"Distribution of TEST Absolute Score \",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_test_NABS\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n  labs( title = \"Distribution of TEST Absolute Score\",\n        subtitle =\"Pattern of response is similar across data collection modes but differs by condition\",\n        x = \"Total Absolute Score (Test Phase)\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = item_test_NABS,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_test_NABS),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_test_NABS, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of TEST Absolute Score \",\n    x = \"Condition\", y = \"Total Absolute Score (Test Phase)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\nCODE\n#STATSPLOT\nggbetweenstats(y = item_test_NABS, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n\n\n\n\n\nCODE\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(item_test_NABS)) + \n  stat_ecdf(geom = \"step\") +\n  facet_grid(pretty_condition~pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function — TEST Absolute Score \",\n        x = \"Total Absolute Score (Test Phase) [0,8]\", \n        y = \"Cumulative Probability\")\n\n\n\n\n\nCODE\n#NOTE this is clobbered by the shift function imports; so I load those later\n\n\nVisual inspection of this distribution suggests it is not normal, and likely bimodal. We verify this via an excess mass test (Ameijeiras-Alsonso et. al 2018). TODO REFERENCE\n\n\nCODE\nmultimode::modetest(df_subjects$item_test_NABS)\n\n\nWarning in multimode::modetest(df_subjects$item_test_NABS): A modification of\nthe data was made in order to compute the excess mass or the dip statistic\n\n\n\n    Ameijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df_subjects$item_test_NABS\nExcess mass = 0.2, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n\n\nCODE\nn_modes = multimode::nmodes(df_subjects$item_test_NABS, bw=2) #bw = 2questions/15 = 0.15%\nl_modes = multimode::locmodes(df_subjects$item_test_NABS,mod0 =  n_modes, display = TRUE)\n\n\nWarning in multimode::locmodes(df_subjects$item_test_NABS, mod0 = n_modes, : If\nthe density function has an unbounded support, artificial modes may have been\ncreated in the tails\n\n\n\n\n\nThe excess mass test for multimodality suggests the distribution is infact multimodal (m = 0.1, p < 0.001), with two identifiable modes at 0.008 and 7.951, and an antimode at 3.209.\n\n\n\n\n\n\nNote\n\n\n\nCondition appears (through visual inspection) to yield a positive influence on Total Absolute Score in the TEST Phase, across data collection modalities.\n\n\n\n\nTest Phase Absolute Percentage\nTest Phase Score converted to percentage.\n\n\nCODE\ntitle = \"Descriptive Statistics of TEST PHASE Response Accuracy (% Accuracy Absolute Score)\"\nabs.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(DV_ptest_NABS) %>% unlist() %>% favstats(),\n  \"online\" = df_online %>% dplyr::select(DV_ptest_NABS) %>% unlist() %>% favstats(),\n  \"combined\" = df_subjects %>% dplyr::select(DV_ptest_NABS) %>% unlist() %>% favstats()\n) \nabs.stats %>% kbl (caption = title) %>% kable_classic() %>% \n  footnote(general = \"% questions correct [0 - 100%]\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of TEST PHASE Response Accuracy (% Accuracy Absolute Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    0 \n    0 \n    0 \n    0.75 \n    1 \n    0.322 \n    0.418 \n    126 \n    0 \n  \n  \n    online \n    0 \n    0 \n    0 \n    0.75 \n    1 \n    0.277 \n    0.402 \n    204 \n    0 \n  \n  \n    combined \n    0 \n    0 \n    0 \n    0.75 \n    1 \n    0.294 \n    0.408 \n    330 \n    0 \n  \n\n\nNote:   % questions correct [0 - 100%]\n\n\n\n\nFor in person collection, total absolute scores in the TEST phase (n = 126) range from 0 to 1 with a mean score of (M = 0.32, SD = 0.42).\nFor online replication, (online) total absolute scores in the TEST phase (n = 204) range from 0 to 1 with a slightly lower mean score of (M = 0.28, SD = 0.4).\nWhen combined overall, total absolute accuracy scores in the TEST phase (n = 330) range from 0 to 1 with a slightly lower mean score of (M = 0.29, SD = 0.41).\n\n\nCODE\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL ABSOLUTE\n  gf_props(~DV_ptest_NABS, data = df_subjects) + \n  labs(x = \"number of correct responses (test phase)\",\n       y = \"% of subjects\",\n       title = \"Distribution of TEST Absolute Score \",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"DV_ptest_NABS\",\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\n\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\nCODE\nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n  labs( title = \"Distribution of TEST Absolute Score\",\n        subtitle =\"Pattern of response is similar across data collection modes but differs by condition\",\n        x = \"Total Absolute Score (Test Phase)\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = DV_ptest_NABS,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = DV_ptest_NABS),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = DV_ptest_NABS, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of TEST Absolute Score \",\n    x = \"Condition\", y = \"Total Absolute Score (Test Phase)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\nCODE\n#STATSPLOT\nggbetweenstats(y = DV_ptest_NABS, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n\n\n\n\n\nCODE\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(DV_ptest_NABS)) + \n  stat_ecdf(geom = \"step\") +\n  facet_grid(pretty_condition~pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function — TEST Absolute Score \",\n        x = \"Total Absolute Score (Test Phase) [0,8]\", \n        y = \"Cumulative Probability\")\n\n\n\n\n\nCODE\n#NOTE this is clobbered by the shift function imports; so I load those later\n\n\n\n\nTest Phase Scaled Scores\nThe test phase scaled score s_SCALED summarizes the scaled score on the 8 strategy-discriminant questions in the test phase, for each subject. This score ranges from from -8 (all orthogonal) to 8 (all triangular). Recall that the s_SCALED score for an item is a numeric representation of the strategy-consistent response, scaled from -1 to +1 (see Section 5.1.5)\nMost importantly, the Scaled score gives us a way of quantitatively examining how correctly a participant interpreted the coordinate system across the entire set of items. It offers a more nuanced look into performance than absolute score.\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total Scaled Score)\"\nscaled.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(item_test_SCALED) %>% unlist() %>% favstats(),\n  \"online\" = df_online %>% dplyr::select(item_test_SCALED) %>% unlist() %>% favstats(),\n  \"combined\" = df_subjects %>% dplyr::select(item_test_SCALED) %>% unlist() %>% favstats()\n) \nscaled.stats %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total Scaled Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    -8 \n    -8.0 \n    -6 \n    6.38 \n    8 \n    -2.14 \n    6.68 \n    126 \n    0 \n  \n  \n    online \n    -8 \n    -7.5 \n    -6 \n    5.00 \n    8 \n    -2.43 \n    6.23 \n    204 \n    0 \n  \n  \n    combined \n    -8 \n    -8.0 \n    -6 \n    5.50 \n    8 \n    -2.32 \n    6.40 \n    330 \n    0 \n  \n\n\n\n\n\nFor in person collection, TEST phase scaled scores (n = 126) range from -8 to 1 with a mean score of (M = -2.14, SD = 6.68).\nFor online replication, TEST phase scaled scores (n = 204) range from -8 to 8 with a slightly lower mean score of (M = -2.43, SD = 6.23).\nWhen combined overall, TEST phase scaled scores (n = 330) range from -8 to 8 with a slightly lower mean score of (M = -2.32, SD = 6.4).\n\n\nCODE\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL SCALED\ngf_props(~item_test_SCALED, data = df_subjects) +\n  labs(x = \"total scaled score (test phase)\",\n       y = \"% of subjects\",\n       title = \"Distribution of TEST Scaled Score \",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_test_SCALED\",binwidth=1,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) + \n  labs( title = \"Distribution of TEST Scaled Score\",\n        subtitle =\"Pattern of response is similar across data collection modes but differs by condition\",\n        x = \"total scaled score (test phase)\", y = \"number of participants\") + \n theme_minimal() + theme(legend.position = \"blank\") \n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = item_test_SCALED,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_test_SCALED),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_test_SCALED, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of TEST Scaled Score \",\n    x = \"Condition\", y = \"Total Scaled Score (Test Phase)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\nCODE\n#EASY STATS\nggbetweenstats(y = item_test_SCALED, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n\n\n\n\n\nCODE\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(item_test_SCALED)) + \n  stat_ecdf(geom = \"step\") + \n  facet_grid(pretty_condition ~ pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function — Test Phase Scaled Score\",\n        x = \"Test Phase Scaled Score [-8,8]\", \n        y = \"Cumulative Probability\") \n\n\n\n\n\nVisual inspection of this distribution suggests it is not normal, and perhaps perhaps bimodal. We verify this via an excess mass test (Ameijeiras-Alsonso et. al 2018).\n\n\nCODE\nmultimode::modetest(df_subjects$item_test_SCALED)\n\n\nWarning in multimode::modetest(df_subjects$item_test_SCALED): A modification of\nthe data was made in order to compute the excess mass or the dip statistic\n\n\n\n    Ameijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df_subjects$item_test_SCALED\nExcess mass = 0.2, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n\n\nCODE\nn_modes = multimode::nmodes(df_subjects$item_test_SCALED, bw=2) #bw = 2questions/15 = 0.15%\nl_modes = multimode::locmodes(df_subjects$item_test_SCALED,mod0 =  n_modes, display = TRUE)\n\n\nWarning in multimode::locmodes(df_subjects$item_test_SCALED, mod0 = n_modes, :\nIf the density function has an unbounded support, artificial modes may have been\ncreated in the tails\n\n\n\n\n\nThe excess mass test for multimodality suggests the distribution is in fact multimodal (m = 0.1, p < 0.001), with two identifiable modes at -7.447 and 7.467, and an antimode at 1.83.\n\n\n\nFirst Item Scores\nNext we consider the response accuracy on just the first question of the graph comprehension task: a subject’s first exposure to the TM graph.\n\nFirst Item Absolute Score\n\n\nCODE\ntitle = \"Proportion of Correct Response on First Item (Lab)\"\nitem.contingency <- df_lab %>%  dplyr::select(item_q1_NABS, pretty_condition) %>% table() %>%  addmargins(2) %>% prop.table(margin=2) %>% addmargins(1)\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Correct Response on First Item (Lab)\n \n  \n      \n    control \n    impasse \n    Sum \n  \n \n\n  \n    0 \n    0.839 \n    0.703 \n    0.77 \n  \n  \n    1 \n    0.161 \n    0.297 \n    0.23 \n  \n  \n    Sum \n    1.000 \n    1.000 \n    1.00 \n  \n\n\n\n\n\nCODE\ntitle = \"Proportion of Correct Response on First Item (Online)\"\nitem.contingency <- df_online %>%  dplyr::select(item_q1_NABS, pretty_condition) %>% table() %>%  addmargins(2) %>% prop.table(margin=2) %>% addmargins(1)\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Correct Response on First Item (Online)\n \n  \n      \n    control \n    impasse \n    Sum \n  \n \n\n  \n    0 \n    0.875 \n    0.722 \n    0.794 \n  \n  \n    1 \n    0.125 \n    0.278 \n    0.206 \n  \n  \n    Sum \n    1.000 \n    1.000 \n    1.000 \n  \n\n\n\n\n\nCODE\ntitle = \"Proportion of Correct Response on First Item (Combined)\"\nitem.contingency <- df_subjects %>%  dplyr::select(item_q1_NABS, pretty_condition) %>% table() %>%  addmargins(2) %>% prop.table(margin=2) %>% addmargins(1)\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Correct Response on First Item (Combined)\n \n  \n      \n    control \n    impasse \n    Sum \n  \n \n\n  \n    0 \n    0.861 \n    0.715 \n    0.785 \n  \n  \n    1 \n    0.139 \n    0.285 \n    0.215 \n  \n  \n    Sum \n    1.000 \n    1.000 \n    1.000 \n  \n\n\n\n\n\nAcross data collection sessions, first-item accuracy is consistent across experimental conditions. Incorrect answers are far more frequent (78%) than correct answers (22%). Accuracy is somewhat improved in the IMPASSE condition, with roughly 28% of all IMPASSE-condition questions answered correctly, compared to only 14% in the CONTROL condition.\n\n\nCODE\n#PROPORTIONAL BAR CHART\ngf_props(~item_q1_NABS, data = df_subjects) +\n  labs(x = \"response accuracy\",\n       y = \"% subjects\",\n       title = \"Proportion of Correct Responses on First Item\",\n       subtitle=\"\")+\n  theme(legend.position = \"none\")+theme_ggdist()\n\n\n\n\n\nCODE\n#STACKED BAR CHART\ndf_subjects %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(item_q1_NABS))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~pretty_mode) + \n  labs(x = \"response accuracy\",\n       title = \"Proportion of Correct Responses on First Item (by Modality and Condition)\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Impasse Condition yields a greater proportion of correct responses\")\n\n\n\n\n\nCODE\n#MOSAIC PLOT\nvcd::mosaic(main=\"Proportion of Correct Responses on First Item\",\n            data = df_subjects, item_q1_NABS ~ pretty_condition, rot_labels=c(0,90,0,0), \n            offset_varnames = c(left = 4.5), offset_labels = c(left = -0.5),just_labels = \"right\",\n            spacing = spacing_dimequal(unit(1:2, \"lines\"))) \n\n\n\n\n\nCODE\n#STATSPLOT\nggbarstats(\n  x = item_q1_NABS,\n  y = pretty_condition, \n  data = df_subjects\n)\n\n\n\n\n\n\n\nFirst Item Scaled Score\nAt the item level, the scaled score gives us a numeric measure of correctness of interpretation, ranging from -1 to 1. (note: we evaluate scaled_score on the first item rather than interpretation, because no orthogonal interpretation is available in the impasse condition)\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (First Item Scaled Score)\"\nfirstscaled.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(item_q1_SCALED) %>% unlist() %>% favstats(),\n  \"online\" = df_online %>% dplyr::select(item_q1_SCALED) %>% unlist() %>% favstats(),\n  \"combined\" = df_subjects %>% dplyr::select(item_q1_SCALED) %>% unlist() %>% favstats()\n) \nfirstscaled.stats %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (First Item Scaled Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    -1 \n    -1 \n    -1 \n    0.5 \n    1 \n    -0.290 \n    0.852 \n    126 \n    0 \n  \n  \n    online \n    -1 \n    -1 \n    -1 \n    0.5 \n    1 \n    -0.287 \n    0.812 \n    204 \n    0 \n  \n  \n    combined \n    -1 \n    -1 \n    -1 \n    0.5 \n    1 \n    -0.288 \n    0.826 \n    330 \n    0 \n  \n\n\n\n\n\nFor in person collection, first item scaled scores (n = 126) range from -1 to 1 with a mean score of (M = -0.29, SD = 0.85).\nFor online replication, (online) first item scaled scores (n = 204) range from -1 to 1 with a slightly lower mean score of (M = -0.29, SD = 0.81).\nWhen combined overall, first item scaled scores (n = 330) range from -1 to 1 with a slightly lower mean score of (M = -0.29, SD = 0.83).\n\n\nCODE\n#GGFORMULA | PROPORTIONAL HISTOGRAM SUBJECT FIRST SCALED\ngf_props(~item_q1_SCALED, data = df_subjects) +\n  labs(x = \"scaled score (first item)\",\n       y = \"% of subjects\",\n       title = \"Distribution of First Item Scaled Score\",\n       subtitle = \"\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_q1_SCALED\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) + \n  labs( title = \"Distribution of First Item Scaled Score (by Mode and Condition)\",\n        subtitle =\"Impasse condition yields more intermediate scores (indicating uncertainty)\",\n        x = \"scaled score (firt item) \", y = \"number of participants\") + \n  theme_minimal() + theme(legend.position = \"blank\") \n\n\n\n\n\nCODE\n#STACKED BAR CHART\ndf_subjects %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(item_q1_SCALED))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~pretty_mode) + \n  labs(x = \"response accuracy\",\n       title = \"Type of Responses on First Item (by Modality and Condition)\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Impasse Condition yields a greater proportion of correct responses\")\n\n\n\n\n\nCODE\n#STATSPLOT\nggbarstats(\n  x = item_q1_SCALED,\n  y = pretty_condition, \n  data = df_subjects\n)\n\n\n\n\n\n\n\n\nInterpretation Scores\nNext we consider the the interpretations assigned to each response. For each response given by a participant to a question, we assign an interpretation label based on the interpretation the response most closely matches (see Section 3.2.3).\n\n\nCODE\ntitle = \"Proportion of Interpretations Across Items Items By Condition (Lab)\"\nitem.contingency <- df_items %>% filter(mode == \"lab-synch\") %>% dplyr::select(interpretation, pretty_condition) %>% table() %>% prop.table() %>% addmargins()\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Interpretations Across Items Items By Condition (Lab)\n \n  \n      \n    control \n    impasse \n    Sum \n  \n \n\n  \n    Orthogonal \n    0.297 \n    0.116 \n    0.413 \n  \n  \n    Satisfice \n    0.000 \n    0.028 \n    0.028 \n  \n  \n    frenzy \n    0.002 \n    0.005 \n    0.007 \n  \n  \n    ? \n    0.024 \n    0.050 \n    0.074 \n  \n  \n    reference \n    0.001 \n    0.004 \n    0.005 \n  \n  \n    blank \n    0.008 \n    0.034 \n    0.042 \n  \n  \n    both tri + orth \n    0.061 \n    0.056 \n    0.117 \n  \n  \n    Tversky \n    0.009 \n    0.027 \n    0.036 \n  \n  \n    Triangular \n    0.090 \n    0.187 \n    0.277 \n  \n  \n    Sum \n    0.492 \n    0.508 \n    1.000 \n  \n\n\n\n\n\nCODE\ntitle = \"Proportion of Interpretations Across Items Items By Condition (Online)\"\nitem.contingency <- df_items %>% filter(mode == \"asynch\") %>% dplyr::select(interpretation, pretty_condition) %>% table() %>% prop.table() %>% addmargins()\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Interpretations Across Items Items By Condition (Online)\n \n  \n      \n    control \n    impasse \n    Sum \n  \n \n\n  \n    Orthogonal \n    0.259 \n    0.122 \n    0.381 \n  \n  \n    Satisfice \n    0.000 \n    0.024 \n    0.024 \n  \n  \n    frenzy \n    0.002 \n    0.001 \n    0.003 \n  \n  \n    ? \n    0.048 \n    0.069 \n    0.117 \n  \n  \n    reference \n    0.000 \n    0.002 \n    0.002 \n  \n  \n    blank \n    0.013 \n    0.055 \n    0.068 \n  \n  \n    both tri + orth \n    0.056 \n    0.062 \n    0.118 \n  \n  \n    Tversky \n    0.018 \n    0.030 \n    0.048 \n  \n  \n    Triangular \n    0.074 \n    0.165 \n    0.239 \n  \n  \n    Sum \n    0.471 \n    0.529 \n    1.000 \n  \n\n\n\n\n\nCODE\ntitle = \"Proportion of Interpretations Across Items Items By Condition (Combined)\"\nitem.contingency <- df_items %>%  dplyr::select(interpretation, pretty_condition) %>% table() %>% prop.table() %>% addmargins()\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Interpretations Across Items Items By Condition (Combined)\n \n  \n      \n    control \n    impasse \n    Sum \n  \n \n\n  \n    Orthogonal \n    0.274 \n    0.120 \n    0.394 \n  \n  \n    Satisfice \n    0.000 \n    0.026 \n    0.026 \n  \n  \n    frenzy \n    0.002 \n    0.003 \n    0.004 \n  \n  \n    ? \n    0.039 \n    0.062 \n    0.101 \n  \n  \n    reference \n    0.001 \n    0.002 \n    0.003 \n  \n  \n    blank \n    0.011 \n    0.047 \n    0.058 \n  \n  \n    both tri + orth \n    0.058 \n    0.060 \n    0.118 \n  \n  \n    Tversky \n    0.015 \n    0.029 \n    0.043 \n  \n  \n    Triangular \n    0.080 \n    0.174 \n    0.254 \n  \n  \n    Sum \n    0.479 \n    0.521 \n    1.000 \n  \n\n\n\n\n\n\n\nCODE\n#PROPORTIONAL BAR CHART\ngf_propsh(~interpretation, data = df_items, fill = ~pretty_condition) %>% \n  gf_facet_grid(pretty_condition~pretty_mode) +\n  labs(x = \"% of items\",\n       title = \"Proportion of Interpretations Across Items\",\n       subtitle=\"Impasse Condition yields shift from Orthogonal to alternative interpretations\")+\n  theme(legend.position = \"none\")\n\n\n\n\n\nCODE\n#STACKED BAR CHART\ndf_items %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(interpretation))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~pretty_mode) + \n  labs(x = \"response accuracy\",\n       title = \"Response Types on All Items (by Modality and Condition)\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Impasse Condition yields a greater proportion of correct responses\")\n\n\n\n\n\nCODE\n#MOSAIC PLOT\nvcd::mosaic(main=\"Proportion of Interpretations across Conditions\",\n            data = df_items, pretty_condition ~ interpretation, rot_labels=c(0,90,0,0),\n            offset_varnames = c(left = 4.5), offset_labels = c(left = -0.5),just_labels = \"right\",\n            spacing = spacing_dimequal(unit(1:2, \"lines\")))\n\n\n\n\n\nCODE\n#STATSPLOT\nggbarstats(\n  x = high_interpretation,\n  y = pretty_condition, \n  data = df_items\n)\n\n\n\n\n\n\n\nCumulative Task Performance\n\n\nCODE\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC3A/3_sgc3A_description.html#response-latency",
    "href": "analysis/SGC3A/3_sgc3A_description.html#response-latency",
    "title": "6  Description",
    "section": "RESPONSE LATENCY",
    "text": "RESPONSE LATENCY\n\nTime on Task\nHere we consider the time spent on the graph comprehension task portion of the study.\n\n\nCODE\n#DESCRIBE distribution of response time\ntime.stats <- rbind(\n  \"lab\"= df_lab%>% dplyr::select(totaltime_m) %>% unlist()  %>%  favstats(),\n  \"online\"= df_online %>% dplyr::select(totaltime_m) %>% unlist() %>% favstats(),\n  \"combined\"= df_subjects %>% dplyr::select(totaltime_m) %>% unlist() %>% favstats()\n)\n\ntitle = \"Descriptive Statistics of First Response Time (seconds)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of First Response Time (seconds)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    6.01 \n    10.50 \n    12.2 \n    14.4 \n    23.9 \n    12.8 \n    3.37 \n    126 \n    0 \n  \n  \n    online \n    2.91 \n    9.18 \n    11.5 \n    15.0 \n    111.0 \n    13.4 \n    9.21 \n    204 \n    0 \n  \n  \n    combined \n    2.91 \n    9.55 \n    12.0 \n    14.7 \n    111.0 \n    13.2 \n    7.53 \n    330 \n    0 \n  \n\n\n\n\n\nResponse time on the graph comprehension task for in person subjects (n = 126) ranged from 6.01 to 23.86 minutes with a mean duration of (M = 12.8, SD = 3.37).\nResponse time on the graph comprehension task for online replication subjects (n = 204) ranged from 2.91 to 111.02 minutes with a mean duration of (M = 13.37, SD = 9.21).\nResponse time on the graph comprehension task for combined subjects (n = 330) ranged from 2.91 to 111.02 minutes with a mean duration of (M = 13.16, SD = 7.53).\n\n\nCODE\n#HISTOGRAM\ngf_dhistogram(~totaltime_m, data = df_subjects) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of Task Time (minutes)\", subtitle = \"fit by gamma distribution\", x = \"Task Time (minutes)\", y = \"% items\")\n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"totaltime_m\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n   labs(title=\"Distribution of Task Time (minutes)\", subtitle = \"fit by gamma distribution\", x = \"Task Time (minutes)\", y = \"% items\") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nTime on First Item\nHere we consider the time spent on just the first individual item (first exposure to graph).\n\n\nCODE\n#DESCRIBE distribution of response time\ntime.stats <- rbind(\n  \"lab\"= df_lab%>% dplyr::select(item_q1_rt) %>% unlist()  %>%  favstats(),\n  \"online\"= df_online %>% dplyr::select(item_q1_rt) %>% unlist() %>% favstats(),\n  \"combined\"= df_subjects %>% dplyr::select(item_q1_rt) %>% unlist() %>% favstats()\n)\n\ntitle = \"Descriptive Statistics of First Response Time (seconds)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of First Response Time (seconds)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    7.22 \n    26.6 \n    39.3 \n    52.2 \n    161 \n    44.5 \n    26.2 \n    126 \n    0 \n  \n  \n    online \n    4.84 \n    19.9 \n    31.0 \n    48.9 \n    306 \n    43.3 \n    41.3 \n    204 \n    0 \n  \n  \n    combined \n    4.84 \n    22.3 \n    34.0 \n    50.7 \n    306 \n    43.8 \n    36.2 \n    330 \n    0 \n  \n\n\n\n\n\nResponse time on the first item for in person subjects (n = 126) ranged from 7.22 to 161.36 minutes with a mean duration of (M = 44.53, SD = 26.22).\nResponse time on the first item for online replication subjects (n = 204) ranged from 4.84 to 305.94 minutes with a mean duration of (M = 43.32, SD = 41.27).\nResponse time on the first item for combined subjects (n = 330) ranged from 4.84 to 305.94 minutes with a mean duration of (M = 43.78, SD = 36.23).\n\n\nCODE\n#HISTOGRAM\ngf_dhistogram(~item_q1_rt, data = df_subjects) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of First Item Response Time (seconds)\", subtitle = \"fit by gamma distribution\", x = \"First Item Response Time (seconds)\", y = \"% items\")\n\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_q1_rt\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n  labs( title = \"Distribution of First Item Response Time (seconds)\",\n        subtitle =\"\",\n        x = \"First Item Response Time (seconds)\", y = \"number of items\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#recode as boolean correct\ndf_subjects <- df_subjects %>% mutate(\n  item_q1_NABS = as.logical(item_q1_NABS)\n)\n\n##RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = item_q1_rt, color = item_q1_NABS) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .1\n  )) + \n  labs( title = \"Distribution of First Item Response Time (seconds)\",\n        subtitle =\"\",\n        y = \"First Item Response Time (s)\", x = \"Condition\") +\n  theme_ggdist() \n\n\n\n\n\nCODE\n# + theme(legend.position = \"blank\")\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n\n\n\n\nTime on Item\nHere we consider the time spent on an individual item (across all items).\n\n\nCODE\n#DESCRIBE distribution of response time\ntime.stats <- rbind(\n  \"lab\"= df_items %>% filter(mode == \"lab-synch\") %>% dplyr::select(rt_s) %>% unlist()  %>%  favstats(),\n  \"online\"= df_items %>% filter(mode == \"lab-synch\") %>% dplyr::select(rt_s) %>% unlist() %>% favstats(),\n  \"combined\"= df_items %>%   dplyr::select(rt_s) %>% unlist() %>% favstats()\n)\n\ntitle = \"Descriptive Statistics of Item Response Latency (seconds)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Item Response Latency (seconds)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    1.264 \n    13.8 \n    24.9 \n    46.1 \n    336 \n    35.5 \n    33.1 \n    1890 \n    0 \n  \n  \n    online \n    1.264 \n    13.8 \n    24.9 \n    46.1 \n    336 \n    35.5 \n    33.1 \n    1890 \n    0 \n  \n  \n    combined \n    0.003 \n    12.5 \n    23.7 \n    43.9 \n    532 \n    35.2 \n    37.2 \n    4950 \n    0 \n  \n\n\n\n\n\nTime on an individual item for in person subjects (n = 1890) ranged from 1.26 to 336.03 minutes with a mean duration of (M = 35.47, SD = 33.12).\nTime on an individual item for online replication subjects (n = 1890) ranged from 1.26 to 336.03 minutes with a mean duration of (M = 35.47, SD = 33.12).\nTime on an individual item for combined subjects (n = 4950) ranged from 0 to 531.52 minutes with a mean duration of (M = 35.24, SD = 37.21).\n\n\nCODE\n#HISTOGRAM\ngf_dhistogram(~rt_s, data = df_items) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of Item Response Time (seconds)\", \n       subtitle = \"fit by gamma distribution\", x = \"Item Response Time (seconds)\", y = \"% items\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_items, x = \"rt_s\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n  labs( title = \"Distribution of Item Response Time (seconds)\",\n        subtitle =\"\",\n        x = \"Item Response Time (seconds)\", y = \"number of items\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#recode as boolean correct\ndf_items <- df_items %>% mutate(\n  score_niceABS = as.logical(score_niceABS)\n)\n\n##RAINCLOUD USING GGDISTR\nggplot(df_items, aes(x = pretty_condition, y = rt_s, color = score_niceABS) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    # position = position_dodgejust(),\n    justification = 1.5, \n    # adjust = .5, \n    width = .5, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA,\n    position = position_dodge2()\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitterdodge(\n      # seed = 1,\n      dodge.width = 0.5,\n      jitter.width = 0.075\n  )) +\n  labs( title = \"Distribution of Item Response Time (seconds)\",\n        subtitle =\"\",\n        y = \"Item Response Time (s)\", x = \"Condition\") +\n  theme_ggdist() \n\n\n\n\n\nCODE\n# + theme(legend.position = \"blank\")\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n\n\n\n\nTime on SCAFFOLD Phase\nHere we consider just the time spent on the first five items of the task (the scaffold phase).\n\n\nCODE\n#DESCRIBE distribution of response time\ntime.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(item_scaffold_rt) %>% unlist()  %>%  favstats(),\n  \"online\"= df_online %>% dplyr::select(item_scaffold_rt) %>% unlist() %>% favstats(),\n  \"combined\"= df_subjects %>% dplyr::select(item_scaffold_rt) %>% unlist() %>% favstats()\n)\n\ntitle = \"Descriptive Statistics of SCAFFOLD Phase Response Latency (minutes)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of SCAFFOLD Phase Response Latency (minutes)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    1.235 \n    2.66 \n    3.71 \n    4.92 \n    11.1 \n    4.03 \n    1.88 \n    126 \n    0 \n  \n  \n    online \n    0.614 \n    2.10 \n    2.92 \n    4.31 \n    15.4 \n    3.52 \n    2.26 \n    204 \n    0 \n  \n  \n    combined \n    0.614 \n    2.29 \n    3.25 \n    4.58 \n    15.4 \n    3.72 \n    2.13 \n    330 \n    0 \n  \n\n\n\n\n\nTotal time on SCAFFOLD phase for in person subjects (n = 126) ranged from 1.24 to 11.1 minutes with a mean duration of (M = 4.03, SD = 1.88).\nTotal time on SCAFFOLD phase for online replication subjects (n = 204) ranged from 0.61 to 15.39 minutes with a mean duration of (M = 3.52, SD = 2.26).\nTotal time on SCAFFOLD phase for combined subjects (n = 330) ranged from 0.61 to 15.39 minutes with a mean duration of (M = 3.72, SD = 2.13).\n\n\nCODE\n#HISTOGRAM\ngf_dhistogram(~item_scaffold_rt, data = df_subjects) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of SCAFFOLD Phase Response Time (minutes)\", subtitle = \"fit by gamma distribution\", x = \"Scaffold Phase Time (minutes)\", y = \"% subjects\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_scaffold_rt\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n  labs( title = \"Distribution of SCAFFOLD Phase Response Time (minutes)\",\n        subtitle =\"\",\n        x = \"Scaffold Phase Time (minutes)\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = item_scaffold_rt, fill = pretty_condition)) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_scaffold_rt),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_scaffold_rt, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  ))+ labs( title = \"Distribution of SCAFFOLD Phase Response Time (minutes)\",\n        subtitle =\"\",\n        y = \"Total Study Time (minutes)\", x = \"Condition\") +\n  theme_ggdist() + theme(legend.position = \"blank\") #+\n\n\n\n\n\nCODE\n  # coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\nTime on TEST Phase\nHere we consider just the time spent on the remaining eight discriminant items of the task (the test phase).\n\n\nCODE\n#DESCRIBE distribution of response time\ntime.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(item_test_rt) %>% unlist()  %>%  favstats(),\n  \"online\"= df_online %>% dplyr::select(item_test_rt) %>% unlist() %>% favstats(),\n  \"combined\"= df_subjects %>% dplyr::select(item_test_rt) %>% unlist() %>% favstats()\n)\n\ntitle = \"Descriptive Statistics of TEST Phase Response Latency (minutes)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of TEST Phase Response Latency (minutes)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    1.022 \n    2.97 \n    3.75 \n    4.76 \n    10.8 \n    4.00 \n    1.37 \n    126 \n    0 \n  \n  \n    online \n    0.703 \n    3.10 \n    3.89 \n    5.17 \n    13.5 \n    4.41 \n    2.24 \n    204 \n    0 \n  \n  \n    combined \n    0.703 \n    3.03 \n    3.80 \n    4.99 \n    13.5 \n    4.26 \n    1.96 \n    330 \n    0 \n  \n\n\n\n\n\nTotal time on TEST phase for in person subjects (n = 126) ranged from 1.02 to 10.85 minutes with a mean duration of (M = 4, SD = 1.37).\nTotal time on TEST phase for online replication subjects (n = 204) ranged from 0.7 to 13.49 minutes with a mean duration of (M = 4.41, SD = 2.24).\nTotal time on TEST phase for combined subjects (n = 330) ranged from 0.7 to 13.49 minutes with a mean duration of (M = 4.26, SD = 1.96).\n\n\nCODE\n#HISTOGRAM\ngf_dhistogram(~item_test_rt, data = df_subjects) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of TEST Phase Response Time (minutes)\", subtitle = \"fit by gamma distribution\", x = \"Test Phase Time (minutes)\", y = \"% subjects\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_test_rt\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n  labs( title = \"Distribution of TEST Phase Response Time (minutes)\",\n        subtitle =\"\",\n        x = \"Test Phase Time (minutes)\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = item_test_rt, fill = pretty_condition)) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_test_rt),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_test_rt, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  ))+ \n  labs( title = \"Distribution of TEST Phase Response Time (minutes)\",\n        subtitle =\"\",\n        y = \"Total Study Time (minutes)\", x = \"Condition\") +\n  theme_ggdist() + theme(legend.position = \"blank\") #+\n\n\n\n\n\nCODE\n  # coord_cartesian(xlim = c(0.5, NA), clip = \"off\")"
  },
  {
    "objectID": "analysis/SGC3A/3_sgc3A_description.html#exploring-relationships",
    "href": "analysis/SGC3A/3_sgc3A_description.html#exploring-relationships",
    "title": "6  Description",
    "section": "EXPLORING RELATIONSHIPS",
    "text": "EXPLORING RELATIONSHIPS\n\nACCURACY (VS) LATENCY\n\nTotal Task\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ rt_m, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by TOTAL Item Response Time\",\n    subtitle = \"\", \n    x = \"Total Item Response Time (minutes)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_avg_rt, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by MEAN Item Response Time\",\n    subtitle = \"\", \n    x = \"Average Item Response Time (seconds)\", y = \"Total Scaled Score\"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_max_rt, data = df_subjects %>% filter(item_max_rt < 400), alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by MAX Item Response Time\",\n    subtitle = \"\", \n    x = \"MAX Item Response Time (s)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#NOTE: LOG transforms of the RT do not yield linear relationships\n\n\n\n\nPhase Specific\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_scaffold_rt, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by SCAFFOLD PHASE Item Response Time\",\n    subtitle = \"\", \n    x = \"SCAFFOLD PHASE Item Response Time (minutes)\", y = \"TOTAL Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( item_scaffold_NABS ~ item_scaffold_rt, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"SCAFFOLD (Scaled) Score by SCAFFOLD PHASE Item Response Time\",\n    subtitle = \"\", \n    x = \"SCAFFOLD PHASE Item Response Time (minutes)\", y = \"SCAFFOLD Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( item_test_NABS ~ item_scaffold_rt, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"TEST (Scaled) Score by SCAFFOLD PHASE Item Response Time\",\n    subtitle = \"\", \n    x = \"SCAFFOLD PHASE Item Response Time (minutes)\", y = \"TEST Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( item_test_NABS ~ item_avg_rt, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"TEST (Scaled) Score by SCAFFOLD PHASE Item Response Time\",\n    subtitle = \"\", \n    x = \"AVERAGE Item Response Time (minutes)\", y = \"TEST Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#NOTE: LOG transforms of the RT do not yield linear relationships\n\n\n\n\nAverage Item RT by Accuracy\n\n\nCODE\nq.stats <- df_items %>% filter(q != 6) %>% dplyr::group_by(q, pretty_condition, score_niceABS) %>% dplyr::summarise(\n  m = mean(rt_s),\n  sd = sd(rt_s),\n  sd = tidyr::replace_na(sd,0),\n  lo = m-sd/2,\n  hi = m+sd/2,\n  group = paste(pretty_condition,\"-\",score_niceABS)\n)\n\ngf_line( m ~ q, group = ~group,  color = ~as.factor(score_niceABS),data = q.stats) %>% \n  gf_point() %>% \n  gf_ribbon(lo+hi~q) %>% \n  gf_facet_wrap(~pretty_condition) + scale_color_manual(values=c(\"red\",\"green\")) + \n  labs(title = \"Average Item Response Time by Absolute Score\",\n       subtitle = \"Correct responses are generally faster [computational efficiency] except on Q1 [learning]\",\n       x = \"Question\", y = \"Averate Item Response Time\", color=\"Correct Response\")\n\n\n\n\n\nCODE\n#GGDIST LINERIBBON\n# df_items %>%\n#   ggplot(aes(y = rt_s, x = q,  fill = pretty_condition)) +\n#   stat_lineribbon(alpha = 1/4, point_interval = \"mean_qi\") + facet_wrap(~pretty_condition)\n\n\n\n\nCODE\nq.stats <- df_items %>% filter(q %nin% c(6,9)) %>% dplyr::group_by(q, pretty_condition, interpretation) %>% dplyr::summarise(\n  m = mean(rt_s),\n  sd = sd(rt_s),\n  sd = tidyr::replace_na(sd,0),\n  lo = m-sd/2,\n  hi = m+sd/2,\n  group = paste(pretty_condition,\"-\",score_SCALED)\n)\n\ngf_line( m ~ as.factor(q), group = ~group,  color = ~interpretation,data = q.stats) %>% \n  gf_point() %>% \n  gf_ribbon(lo+hi~as.factor(q)) %>% \n  gf_facet_grid(interpretation~pretty_condition) + #+ scale_color_manual(values=c(\"red\",\"green\")) + \n  labs(title = \"Average Item Response Time by Interpretation\",\n       subtitle = \"Correct responses are generally faster [computational efficiency] except on Q1 [learning]\",\n       caption=\"NOTE: Points with no ribbon indicate singular response\",\n       x = \"Question\", y = \"Averate Item Response Time\", color=\"Interpretation\")\n\n\n\n\n\nCODE\n#GGDIST LINERIBBON\ndf_items %>% filter(q %nin% c(6,9)) %>% mutate( interpretation = recode(interpretation, \"reference\" = \"blank\", \"frenzy\" = \"?\")) %>% \n  ggplot(aes(y = rt_s, x = q,  fill = interpretation)) +\n  stat_lineribbon(alpha = 1/4, point_interval = \"mean_qi\") + \n  facet_grid(interpretation ~ pretty_condition) + \n  labs( title = \"Average Response Time by Question Interpretation\", x = \"Question\", y=\"Averate Item Response Time (s)\")"
  },
  {
    "objectID": "analysis/SGC3A/3_sgc3A_description.html#replication-check",
    "href": "analysis/SGC3A/3_sgc3A_description.html#replication-check",
    "title": "6  Description",
    "section": "REPLICATION CHECK",
    "text": "REPLICATION CHECK\n\nData Collection Mode on Absolute Score\nDoes Mode Change Effect of Condition on Score?\nTo verify that the data collected in the lab and remotely online are comparable, we perform a t-test on group means of ABSOLUTE SCORE for each condition, and examine whether data collection modality is a significant predictor of variance in absolute score\n\n\nCODE\npaste(\"Two Sample T-Test for S_ABS LAB vs. ONLINE control condition\")\n\n\n[1] \"Two Sample T-Test for S_ABS LAB vs. ONLINE control condition\"\n\n\nCODE\nt.test(data = df_subjects %>% filter(condition == 111), s_ABS ~ mode )\n\n\n\n    Welch Two Sample t-test\n\ndata:  s_ABS by mode\nt = 0.5, df = 120, p-value = 0.6\nalternative hypothesis: true difference in means between group lab-synch and group asynch is not equal to 0\n95 percent confidence interval:\n -1.09  1.84\nsample estimates:\nmean in group lab-synch    mean in group asynch \n                   2.68                    2.30 \n\n\nCODE\npaste(\"Two Sample T-Test for S_ABS LAB vs. ONLINE impasse condition\")\n\n\n[1] \"Two Sample T-Test for S_ABS LAB vs. ONLINE impasse condition\"\n\n\nCODE\nt.test(data = df_subjects %>% filter(condition == 121), s_ABS ~ mode )\n\n\n\n    Welch Two Sample t-test\n\ndata:  s_ABS by mode\nt = 1, df = 135, p-value = 0.3\nalternative hypothesis: true difference in means between group lab-synch and group asynch is not equal to 0\n95 percent confidence interval:\n -0.727  2.435\nsample estimates:\nmean in group lab-synch    mean in group asynch \n                   5.44                    4.58 \n\n\nCODE\npaste(\"OLS Linear Regression Predicting Absolute Score by Data Collection Mode\")\n\n\n[1] \"OLS Linear Regression Predicting Absolute Score by Data Collection Mode\"\n\n\nCODE\nsummary(lm(data = df_subjects, formula = s_ABS ~ mode ))\n\n\n\nCall:\nlm(formula = s_ABS ~ mode, data = df_subjects)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -4.08  -3.51  -2.51   4.49   9.49 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     4.08       0.44    9.27   <2e-16 ***\nmodeasynch     -0.57       0.56   -1.02     0.31    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.94 on 328 degrees of freedom\nMultiple R-squared:  0.00314,   Adjusted R-squared:  0.000105 \nF-statistic: 1.03 on 1 and 328 DF,  p-value: 0.31\n\n\nBoth t-tests are non-significant with 95% confidence intervals including 0. Further, an OLS linear regression model predicting cumulative absolute score indicates that data collection mode is not a significant predictor, explaining only 0.01% of variance in absolute score, F(1,328) = 1.03, p > 0.05.\n\n\n\n\n\n\nDecision\n\n\n\nIt is reasonable to infer that data from both in-person and remote studies arise from the same data generating process.\n\n\n\n\nData Collection Mode on Cumulative Score\nAre the by-condition group means significantly different by data collection modality?\nTo verify that the data collected in the lab and remotely online are comparable, we perform a t-test on group means of SCALED SCORE for each condition.\n\n\nCODE\npaste(\"Two Sample T-Test for s_SCALED LAB vs. ONLINE control condition\")\n\n\n[1] \"Two Sample T-Test for s_SCALED LAB vs. ONLINE control condition\"\n\n\nCODE\nt.test(data = df_subjects %>% filter(condition == 111), s_SCALED ~ mode )\n\n\n\n    Welch Two Sample t-test\n\ndata:  s_SCALED by mode\nt = -0.1, df = 117, p-value = 0.9\nalternative hypothesis: true difference in means between group lab-synch and group asynch is not equal to 0\n95 percent confidence interval:\n -3.14  2.83\nsample estimates:\nmean in group lab-synch    mean in group asynch \n                  -6.49                   -6.34 \n\n\nCODE\npaste(\"Two Sample T-Test for s_SCALED LAB vs. ONLINE impasse condition\")\n\n\n[1] \"Two Sample T-Test for s_SCALED LAB vs. ONLINE impasse condition\"\n\n\nCODE\nt.test(data = df_subjects %>% filter(condition == 121), s_SCALED ~ mode )\n\n\n\n    Welch Two Sample t-test\n\ndata:  s_SCALED by mode\nt = 0.6, df = 130, p-value = 0.5\nalternative hypothesis: true difference in means between group lab-synch and group asynch is not equal to 0\n95 percent confidence interval:\n -1.91  3.72\nsample estimates:\nmean in group lab-synch    mean in group asynch \n                 0.9844                  0.0787 \n\n\nCODE\npaste(\"OLS Linear Regression Predicting Scaled Score by Data Collection Mode\")\n\n\n[1] \"OLS Linear Regression Predicting Scaled Score by Data Collection Mode\"\n\n\nCODE\nsummary(lm(data = df_subjects, formula = s_SCALED ~ mode ))\n\n\n\nCall:\nlm(formula = s_SCALED ~ mode, data = df_subjects)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-10.31  -8.06  -4.06  10.69  15.94 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   -2.694      0.853   -3.16   0.0017 **\nmodeasynch    -0.247      1.084   -0.23   0.8201   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 9.57 on 328 degrees of freedom\nMultiple R-squared:  0.000158,  Adjusted R-squared:  -0.00289 \nF-statistic: 0.0518 on 1 and 328 DF,  p-value: 0.82\n\n\nBoth t-tests are non-significant with 95% confidence intervals including 0. Further, an OLS linear regression model predicting cumulative scaled score indicates that data collection mode is not a significant predictor, explaining less than 0.001% of variance in absolute score, F(1,328) = 0.0078, p > 0.05.\n\n\n\n\n\n\nDecision\n\n\n\nIt is reasonable to infer that data from both in-person and remote studies arise from the same data generating process."
  },
  {
    "objectID": "analysis/SGC3A/3_sgc3A_description.html#archive",
    "href": "analysis/SGC3A/3_sgc3A_description.html#archive",
    "title": "6  Description",
    "section": "ARCHIVE",
    "text": "ARCHIVE\nSample ridgeplot code\n\n\nCODE\n#RIDGEPLOT\n# ggplot(data = df_subjects, aes(x = s_NABS, y = mode)) +\n#   geom_density_ridges() + xlim(0,13)+\n#   facet_wrap(~condition, labeller = label_both) +\n# labs(x = \"total number correct \",\n# y = \"proportion of subjects\",\n#        title = \"Subject Cumulative Score (Absolute)\",\n#        subtitle = \"Score distributions are comparable across modalities and different across conditions\") +\n#   theme_minimal()\n\n\n\nWhat Kind of Distribution is Total Score?\nWhat kind of distribution is the Total Absolute Score (TEST Phase) data? We use the fitdistrplus package to compare the distribution of this variable to a variety of probability distribution families. First, we transform the # correct items to % correct items by dividing it by the total number of items (n = 8).\n\n\nCODE\n#describe the distribution\ndescdist(data = df_subjects$item_test_NABS/8, discrete = FALSE, boot = 1000)\n\n\n\n\n\nsummary statistics\n------\nmin:  0   max:  1 \nmedian:  0 \nmean:  0.294 \nestimated sd:  0.408 \nestimated skewness:  0.854 \nestimated kurtosis:  1.89 \n\n\nCODE\nprint(\"FIT A NORMAL DISTRIBUTION\")\n\n\n[1] \"FIT A NORMAL DISTRIBUTION\"\n\n\nCODE\nnormal_ = fitdist(df_subjects$item_test_NABS/8,\"norm\")\nplot(normal_)\n\n\n\n\n\nCODE\nprint(\"FIT A BETA DISTRIBUTION\")\n\n\n[1] \"FIT A BETA DISTRIBUTION\"\n\n\nCODE\nbeta_ = fitdist(df_subjects$item_test_NABS/8,\"beta\", method=\"mme\" )\nplot(beta_)\n\n\n\n\n\nCODE\nsummary(beta_)\n\n\nFitting of the distribution ' beta ' by matching moments \nParameters : \n       estimate\nshape1   0.0735\nshape2   0.1763\nLoglikelihood:  Inf   AIC:  -Inf   BIC:  -Inf \n\n\nInterpreting the Cullen and Frey graph, it appears that number percentage of correct responses per subject may follow a beta distribution (u-shape tpe). If we fit this variable using both a normal and beta distribution (using method of moments), it appears that the beta distribution provides a much better fit. The parameter estimates for the beta distribution are: shape1 = 0.074, shape2 = 0.176. The beta distribution is a flexible distribution insofar as it can model a wide range of shapes with its two parameters. TODO: HOW might this be applied to the total score data?\nAnalysis Notes - This distribution is very bimodal, so OLS linear regression estimating means may not be informative, as the mean actually falls near the location of the anitmode (least common value) - Should investigate log transform to see if residuals of LM will be normal (no) - Should investigate beta regression\n\n\nWhole Task Scores\n\nAbsolute Score\nTotal Scores that include both Scaffolding Phase as well as Test Phase performance.\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total Absolute Score)\"\nabs.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(s_NABS) %>% unlist() %>% favstats(),\n  \"online\" = df_online %>% dplyr::select(s_NABS) %>% unlist() %>% favstats(),\n  \"combined\" = df_subjects %>% dplyr::select(s_NABS) %>% unlist() %>% favstats()\n) \nabs.stats %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total Absolute Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    0 \n    0 \n    1 \n    9 \n    13 \n    4.16 \n    5.11 \n    126 \n    0 \n  \n  \n    online \n    0 \n    0 \n    1 \n    8 \n    13 \n    3.58 \n    4.92 \n    204 \n    0 \n  \n  \n    combined \n    0 \n    0 \n    1 \n    9 \n    13 \n    3.80 \n    4.99 \n    330 \n    0 \n  \n\n\n\n\n\nFor in person collection, total absolute scores (n = 126) range from 0 to 13 with a mean score of (M = 4.16, SD = 5.11).\nFor online replication, (online) total absolute accuracy scores (n = 204) range from 0 to 13 with a slightly lower mean score of (M = 3.58, SD = 4.91).\nWhen combined overall, total absolute accuracy scores (n = 330) range from 0 to 13 with a slightly lower mean score of (M = 3.8, SD = 4.99).\n\n\nCODE\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL ABSOLUTE\n  gf_props(~s_NABS, data = df_subjects) + \n  labs(x = \"number of correct responses\",\n       y = \"% of subjects\",\n       title = \"Distribution of Task Absolute Score\",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") + \n  theme_minimal()\n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"s_NABS\", binwidth = 1,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n  labs( title = \"Distribution of Task Absolute Score (by Mode and Condition)\",\n        subtitle =\"Pattern of response is the same across data collection modes but differs by condition\",\n        x = \"Total Absolute Score\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n##RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = s_NABS, fill = pretty_condition)) + \n  ggdist::stat_halfeye(\n    adjust = .5, \n    width = .6, \n    .width = 0, \n    justification = -.3, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter(\n      seed = 1, width = .1\n    )\n  ) + labs(\n    title = \"Distribution of Task Absolute Score\",\n    x = \"Condition\", y = \"Total Absolute Score\"\n  ) + theme_ggdist() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n\n\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(s_NABS)) + \n  stat_ecdf(geom = \"step\") + \n  facet_grid(pretty_condition ~ pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function — Task Absolute Score\",\n        x = \"Task Absolute Score [0,13]\", \n        y = \"Cumulative Probability\") + theme_minimal()\n\n\n\n\n\nVisual inspection of this distribution suggests it is not normal, and likely bimodal. We verify this via an excess mass test (Ameijeiras-Alsonso et. al 2018). TODO REFERENCE\n\n\nCODE\nmultimode::modetest(df_subjects$s_NABS)\n\n\nWarning in multimode::modetest(df_subjects$s_NABS): A modification of the data\nwas made in order to compute the excess mass or the dip statistic\n\n\n\n    Ameijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df_subjects$s_NABS\nExcess mass = 0.1, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n\n\nCODE\nn_modes = multimode::nmodes(df_subjects$s_NABS, bw=2) #bw = 2questions/15 = 0.15%\nl_modes = multimode::locmodes(df_subjects$s_NABS,mod0 =  n_modes, display = TRUE)\n\n\nWarning in multimode::locmodes(df_subjects$s_NABS, mod0 = n_modes, display =\nTRUE): If the density function has an unbounded support, artificial modes may\nhave been created in the tails\n\n\n\n\n\nThe excess mass test for multimodality suggests the distribution is infact multimodal (m = 0.1, p < 0.001), with two identifiable modes at 0.237 and 12.309, and an antimode at 6.744.\n\n\n\n\n\n\nNote\n\n\n\nCondition appears (through visual inspection) to yield a positive influence on Total Absolute Score (across the entire task), across data collection modalities.\n\n\n\n\nScaled Score\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total Scaled Score)\"\nscaled.stats <- rbind(\n  \"lab\"= df_lab %>% dplyr::select(s_SCALED) %>% unlist() %>% favstats(),\n  \"online\" = df_online %>% dplyr::select(s_SCALED) %>% unlist() %>% favstats(),\n  \"combined\" = df_subjects %>% dplyr::select(s_SCALED) %>% unlist() %>% favstats()\n) \nscaled.stats %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total Scaled Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    -13 \n    -12 \n    -7.5 \n    8.75 \n    13 \n    -2.69 \n    10.11 \n    126 \n    0 \n  \n  \n    online \n    -13 \n    -10 \n    -7.0 \n    6.25 \n    13 \n    -2.94 \n    9.22 \n    204 \n    0 \n  \n  \n    combined \n    -13 \n    -11 \n    -7.0 \n    8.00 \n    13 \n    -2.85 \n    9.56 \n    330 \n    0 \n  \n\n\n\n\n\nFor in person collection, total scaled scores (n = 126) range from -13 to 13 with a mean score of (M = -2.69, SD = 10.11).\nFor online replication, total scaled scores (n = 204) range from -13 to 13 with a slightly lower mean score of (M = -2.94, SD = 9.22).\nWhen combined overall, total scaled scores (n = 330) range from -13 to 13 with a slightly lower mean score of (M = -2.85, SD = 9.56).\n\n\nCODE\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL SCALED\ngf_props(~s_SCALED, data = df_subjects) +\n  labs(x = \"total scaled score\",\n       y = \"% of subjects\",\n       title = \"Distribution of Total Scaled Score\",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") + \n  theme_minimal()\n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"s_SCALED\",binwidth=1,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) + \n  labs( title = \"Distribution of Total Scaled Score (by Condition and Mode)\",\n        subtitle =\"Pattern of response is similar across data collection modes but differs by condition\",\n        x = \"total scaled score\", y = \"number of participants\") + \n  theme_minimal() + theme(legend.position = \"blank\") \n\n\n\n\n\nCODE\n##RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = s_SCALED, fill = pretty_condition)) + \n  ggdist::stat_halfeye(\n    adjust = .5, \n    width = .6, \n    .width = 0, \n    justification = -.3, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter(\n      seed = 1, width = .1\n    )\n  ) + labs(\n    title = \"Distribution of Task Scaled Score \",\n    x = \"Condition\", y = \"Total Scaled Score\"\n  ) + theme_ggdist() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(s_SCALED)) + \n  stat_ecdf(geom = \"step\") + \n  facet_grid(pretty_condition ~ pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function — Task Scaled Score\",\n        x = \"Task Scaled Score [-13, 13]\", \n        y = \"Cumulative Probability\") + theme_minimal()\n\n\n\n\n\nVisual inspection of this distribution suggests it is not normal, and perhaps perhaps bimodal. We verify this via an excess mass test (Ameijeiras-Alsonso et. al 2018).\n\n\nCODE\nmultimode::modetest(df_subjects$s_SCALED)\n\n\nWarning in multimode::modetest(df_subjects$s_SCALED): A modification of the data\nwas made in order to compute the excess mass or the dip statistic\n\n\n\n    Ameijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df_subjects$s_SCALED\nExcess mass = 0.1, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n\n\nCODE\nn_modes = multimode::nmodes(df_subjects$s_SCALED, bw=2) #bw = 2questions/15 = 0.15%\nl_modes = multimode::locmodes(df_subjects$s_SCALED,mod0 =  n_modes, display = TRUE)\n\n\nWarning in multimode::locmodes(df_subjects$s_SCALED, mod0 = n_modes, display =\nTRUE): If the density function has an unbounded support, artificial modes may\nhave been created in the tails\n\n\n\n\n\nThe excess mass test for multimodality suggests the distribution is in fact multimodal (m = 0.1, p < 0.001), with two identifiable modes at -11.977 and 12.135, and an antimode at 3.339.\nAnalysis Notes - As with absolute score, the distribution of scaled score is very bimodal - Same need to investigate transformations and alternative distributions for regression\n\n\n\n\n\n\nNote\n\n\n\nCondition appears (through visual inspection) to yield a positive influence on Total Scaled Score across data collection modalities.\n\n\n\n\n\nItem Level Scores\n\nItem Absolute Score\nWhole Task Accuracy summarized over items rather than subjects\n\n\nCODE\nx <- df_items %>% mutate(score = as.logical(score_ABS))\n\ntitle = \"Proportion of Correct Items By Condition (Lab)\"\n\nitem.contingency <- df_items %>% filter(mode == \"lab-synch\") %>% dplyr::select(score_ABS, condition) %>% table() %>% prop.table() %>% addmargins()\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Correct Items By Condition (Lab)\n \n  \n      \n    111 \n    121 \n    Sum \n  \n \n\n  \n    0 \n    0.344 \n    0.268 \n    0.613 \n  \n  \n    1 \n    0.148 \n    0.240 \n    0.387 \n  \n  \n    Sum \n    0.492 \n    0.508 \n    1.000 \n  \n\n\n\n\n\nCODE\ntitle = \"Proportion of Correct Items By Condition (Online)\"\nitem.contingency <- df_items %>% filter(mode == \"asynch\") %>% dplyr::select(score_ABS, condition) %>% table() %>% prop.table() %>% addmargins()\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Correct Items By Condition (Online)\n \n  \n      \n    111 \n    121 \n    Sum \n  \n \n\n  \n    0 \n    0.342 \n    0.307 \n    0.649 \n  \n  \n    1 \n    0.128 \n    0.223 \n    0.351 \n  \n  \n    Sum \n    0.471 \n    0.529 \n    1.000 \n  \n\n\n\n\n\n\n\nCODE\n#VISUALIZE distribution of response accuracy across ITEMS\n\n#HISTOGRAM\nstats = df_items %>% group_by(condition, mode) %>% dplyr::summarise(mean = mean(score_niceABS))\ngf_props(~score_niceABS, data = df_items) %>% \n  gf_facet_grid(condition~mode, labeller = label_both) +\n  labs(x = \"Item Absolute Score\",\n       title = \"Item Absolute Score\",\n       subtitle=\"Across modalities, the impasse condition yielded more correct responses\")+\n  theme_minimal()\n\n\n\n\n\n\n\nItem Scaled Score\nAt the item level, the scaled score gives us a numeric measure of correctness of interpretation, ranging from -1 to 1.\n\n\nCODE\ntitle = \"Descriptive Statistics of Item Response Accuracy (Scaled Score)\"\nscaled.stats.items <- rbind(\n  \"lab\"= df_items %>% filter(mode == 'lab-synch') %>% dplyr::select(score_SCALED) %>% unlist() %>% favstats(),\n  \"online\" = df_items %>% filter(mode == \"asynch\") %>% dplyr::select(score_SCALED) %>% unlist() %>% favstats()\n) \nscaled.stats.items %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Item Response Accuracy (Scaled Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    lab \n    -1 \n    -1 \n    -0.5 \n    1.0 \n    1 \n    -0.128 \n    0.872 \n    1890 \n    0 \n  \n  \n    online \n    -1 \n    -1 \n    -0.5 \n    0.5 \n    1 \n    -0.144 \n    0.834 \n    3060 \n    0 \n  \n\n\n\n\n\n\n\nCODE\n#VISUALIZE distribution of response accuracy across ITEMS\n\n#HISTOGRAM\nstats = df_items %>% group_by(condition, mode) %>% dplyr::summarise(mean = mean(score_SCALED))\ngf_props(~score_SCALED, data = df_items) %>% \n  gf_facet_grid(condition~mode, labeller = label_both) %>% \n  gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n  labs(x = \"Scaled Score for Item\",\n       y = \"Proportion of Items\",\n       title = \"Distribution of Accuracy per Item (Scale Score)\",\n       subtitle=\"The impasse condition shifts density toward the positive score\")+\n  theme_minimal()"
  },
  {
    "objectID": "analysis/SGC3A/3_sgc3A_description.html#resources",
    "href": "analysis/SGC3A/3_sgc3A_description.html#resources",
    "title": "6  Description",
    "section": "RESOURCES",
    "text": "RESOURCES\n\nhttps://rpkgs.datanovia.com/ggpubr/reference/index.html\nAppropriate models for response time data. (see: https://lindeloev.github.io/shiny-rt/)]{style=“color: red;”}.\nEspecially see https://lindeloev.github.io/shiny-rt/ for ideas on modelling reaction time data\n\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] forcats_0.5.1      stringr_1.4.0      purrr_0.3.4        readr_2.1.2       \n [5] tidyr_1.2.0        tibble_3.1.7       tidyverse_1.3.1    performance_0.9.1 \n [9] fitdistrplus_1.1-8 MASS_7.3-57        multimode_1.5      ggeasy_0.1.3      \n[13] ggstatsplot_0.9.3  ggdist_3.1.1       ggpubr_0.4.0       vcd_1.4-10        \n[17] kableExtra_1.3.4   mosaic_1.8.3       ggridges_0.5.3     mosaicData_0.20.2 \n[21] ggformula_0.10.1   ggstance_0.3.5     dplyr_1.0.9        Matrix_1.4-1      \n[25] Hmisc_4.7-0        ggplot2_3.3.6      Formula_1.2-4      survival_3.3-1    \n[29] lattice_0.20-45   \n\nloaded via a namespace (and not attached):\n  [1] readxl_1.4.0           backports_1.4.1        systemfonts_1.0.4     \n  [4] plyr_1.8.7             splines_4.2.1          crosstalk_1.2.0       \n  [7] leaflet_2.1.1          TH.data_1.1-1          digest_0.6.29         \n [10] htmltools_0.5.2        fansi_1.0.3            magrittr_2.0.3        \n [13] checkmate_2.1.0        paletteer_1.4.0        cluster_2.1.3         \n [16] ks_1.13.5              tzdb_0.3.0             mosaicCore_0.9.0      \n [19] modelr_0.1.8           vroom_1.5.7            sandwich_3.0-2        \n [22] svglite_2.1.0          jpeg_0.1-9             colorspace_2.0-3      \n [25] rvest_1.0.2            ggrepel_0.9.1          haven_2.5.0           \n [28] xfun_0.31              prismatic_1.1.0        crayon_1.5.1          \n [31] jsonlite_1.8.0         zeallot_0.1.0          zoo_1.8-10            \n [34] glue_1.6.2             polyclip_1.10-0        gtable_0.3.0          \n [37] emmeans_1.7.5          MatrixModels_0.5-0     webshot_0.5.3         \n [40] statsExpressions_1.3.2 distributional_0.3.0   car_3.1-0             \n [43] abind_1.4-5            scales_1.2.0           mvtnorm_1.1-3         \n [46] DBI_1.1.3              rstatix_0.7.0          Rcpp_1.0.8.3          \n [49] viridisLite_0.4.0      xtable_1.8-4           htmlTable_2.4.0       \n [52] bit_4.0.4              mclust_5.4.10          foreign_0.8-82        \n [55] datawizard_0.4.1       htmlwidgets_1.5.4      httr_1.4.3            \n [58] RColorBrewer_1.1-3     ellipsis_0.3.2         pkgconfig_2.0.3       \n [61] farver_2.1.0           dbplyr_2.2.1           nnet_7.3-17           \n [64] utf8_1.2.2             effectsize_0.7.0       labeling_0.4.2        \n [67] tidyselect_1.1.2       rlang_1.0.3            cellranger_1.1.0      \n [70] munsell_0.5.0          tools_4.2.1            cli_3.3.0             \n [73] generics_0.1.2         broom_0.8.0            evaluate_0.15         \n [76] fastmap_1.1.0          ggdendro_0.1.23        yaml_2.3.5            \n [79] rematch2_2.1.2         bit64_4.0.5            fs_1.5.2              \n [82] knitr_1.39             rootSolve_1.8.2.3      pbapply_1.5-0         \n [85] pracma_2.3.8           xml2_1.3.3             correlation_0.8.1     \n [88] compiler_4.2.1         rstudioapi_0.13        png_0.1-7             \n [91] ggsignif_0.6.3         reprex_2.0.1           tweenr_1.0.2          \n [94] stringi_1.7.6          highr_0.9              parameters_0.18.1     \n [97] vctrs_0.4.1            pillar_1.7.0           lifecycle_1.0.1       \n[100] lmtest_0.9-40          estimability_1.4       data.table_1.14.2     \n[103] insight_0.18.0         patchwork_1.1.1        R6_2.5.1              \n[106] latticeExtra_0.6-29    KernSmooth_2.23-20     gridExtra_2.3         \n[109] BayesFactor_0.9.12-4.4 codetools_0.2-18       boot_1.3-28           \n[112] assertthat_0.2.1       withr_2.5.0            multcomp_1.4-19       \n[115] parallel_4.2.1         diptest_0.76-0         bayestestR_0.12.1     \n[118] hms_1.1.1              rpart_4.1.16           labelled_2.9.1        \n[121] coda_0.19-4            rmarkdown_2.14         carData_3.0-5         \n[124] ggforce_0.3.3          lubridate_1.8.0        base64enc_0.1-3"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html",
    "href": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html",
    "title": "7  SGC3A (Lab) Hypothesis Testing",
    "section": "",
    "text": "The purpose of this notebook is test the hypotheses that determined the design of the SGC3A study.\nResearch Questions\nIn SGC3A we set out to answer the following question: Does posing a mental impasse improve performance on the interval graph comprehension task?\nExperimental Hypothesis\nLearners posed with scenario designed to evoke a mental impasse will be more likely to correct interpret the graph.\nNull Hypothesis\nNo significant differences in performance will exist between learners in the IMPASSE and CONTROL conditions."
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#sample",
    "href": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#sample",
    "title": "7  SGC3A (Lab) Hypothesis Testing",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Control Condition\",\"Impasse Condition\",\"Total for Period\")\ncont <- table(df_subjects$term, df_subjects$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n      \n    Control Condition \n    Impasse Condition \n    Total for Period \n  \n \n\n  \n    fall17 \n    27 \n    27 \n    54 \n  \n  \n    spring18 \n    35 \n    37 \n    72 \n  \n  \n    Sum \n    62 \n    64 \n    126 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.male <- ((df_subjects %>% filter(gender==\"Male\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.female <- ((df_subjects %>% filter(gender==\"Female\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.other <- ((df_subjects %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())/count(df_subjects))$n\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n     \n    18 \n    19 \n    20 \n    21 \n    33 \n    20.4 \n    2.12 \n    126 \n    0 \n    0.373 \n    0.619 \n    0.008 \n  \n\n\nNote:   Age in Years\n\n\n\n\nREPORTED\nOverall 126 participants (37 % male, 62 % female, 1 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 33 years)."
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#h1a-overall-accuracy",
    "href": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#h1a-overall-accuracy",
    "title": "7  SGC3A (Lab) Hypothesis Testing",
    "section": "H1A | OVERALL ACCURACY",
    "text": "H1A | OVERALL ACCURACY\n\n\n\n\n\n\n\nResearch Question\nDo Ss in the IMPASSE condition score higher across the entire task than those in the CONTROL group?\n\n\n\n\nHypothesis\n(H1) Participants in the IMPASSE condition will be more likely to correctly interpret the graph than those in the CONTROL condition.\n\n\nData\ndata: df_items where q nin 6,9 (the 13 discriminating Qs ), df_subjects\noutcome:\n\n[at item level] : accuracy ( factor(incorrect/correct) from score_niceABS [absolute score]\n[subject level]: accuracy (number of test phase qs correct from total s_NABS)\n\npredictor: condition [between-subjects factor]\n\n\nAnalysis Strategy\n\nWilcoxon-Rank Sum (Mann-Whitney) test on subject-level total accuracy of test phase (s_NABS)\nMixed Logistic Regression\naccuracy ~ condition + (1 | subject ) + (1 | question)\nmodel effect of condition on probability of correct response [during test phase] while accounting for subject (and item-level?) effects\n\n\n\nAlternatives\n\nOrdinal Mixed Logistic Regression on scaled_score\nOLS Linear Regression: bimodal distribution at tails makes the mean a poor predictor; LMs violate assumptions of normally distributed residuals; both absolute and scaled scores yield non-normal residuals; no transformation of the outcome variables yield normal residuals\n\n\n\nNotes\nAlso exploring:\n\nHurdle model (mixture model w/ binomial + [poisson or negbinom count; 0s from 1 DGP)\nZero Inflated model (mixture model w/ binomial + poisson or negbinom count; 0s from 2 DGPs)\nBeta regression hurdle model? (mixture with location and scale parameters [mean, variance] and hurdles for floor and ceiling effects)\nOther way to account for the severe bimodality?\n\n\n\n\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% \n  dplyr::select(pretty_condition, accuracy, subject,q)\n\ndf_s <- df_subjects %>% \n   dplyr::select(pretty_condition, task_percent)\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\", width = 0.75 ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))+\n  # scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::Jewel_Bright\", 2))+\n  # scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 2))+\n  # scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~pretty_mode) + \n  # coord_flip() +\n  theme(legend.position=\"bottom\")+\n   labs(title = \"Study 3A | DISTRIBUTION of Question Accuracy\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"Impasse Condition yields a greater proportion of correct responses\")\n\n\n\n\n\nCODE\n#:::::::: LABELLED \n\ntemp <- df_i %>% mutate(\n  accuracy = fct_rev(accuracy)\n)  \n\np <-   ggbarstats(data = temp, x = accuracy, y = pretty_condition,\n               results.subtitle = FALSE,\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))\n                  # theme(axis.text.x = element_text(angle = 90)))\n               ))  + theme_clean() + theme(legend.position = \"bottom\")\n\n\nScale for 'fill' is already present. Adding another scale for 'fill', which\nwill replace the existing scale.\n\n\nCODE\np <- p + labs(title = \"DISTRIBUTION | Question Accuracy\",\n         y = \"Proportion of Questions\", x = \"Condition\",\n         subtitle = \"Impasse condition yields more correct responses\")\n\np\n\n\n\n\n\nCODE\n# ggsave(p, filename = \"figures/SGC3A_LAB_Accuracy.png\", width = 6, height =4)\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_items %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~q) +\n   labs(title = \"DISTRIBUTION | Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Q6 and Q9 are non-discriminative\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\nstats = df_s %>% group_by(pretty_condition) %>% dplyr::summarise(mean = mean(task_percent))\ngf_props(~task_percent,\n         fill = ~pretty_condition, data = df_s) %>%\n  # gf_facet_grid(pretty_condition ~ pretty_mode) %>%\n  gf_facet_grid(~pretty_condition) %>%\n  gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n  labs(x = \"% Correct\",\n       y = \"proportion of subjects\",\n       title = \"DISTRIBUTION | Total Absolute Score (% Correct)\",\n       subtitle = \"\") + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nCODE\n#:::::::: RAINCLOUD WITH STATS\n  \ndf <- df_s %>% mutate(task_percent = task_percent*100)\n\np <-   ggbetweenstats(data = df, x = pretty_condition, y = task_percent,\n               plot.type = \"box\", type = \"nonparametric\", var.equal = FALSE,\n               centrality.type = \"parametric\",\n               # package = \"RColorBrewer\",\n               # palette = \"PRGn\",\n               centrality.point.args = list(color=\"black\", size = 3, shape = 1),\n               point.args = list(alpha=0), #suppress points\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  # aes(color = pretty_condition, fill = pretty_condition),\n                  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  # scale_fill_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  theme(axis.text.x = element_text(angle = 90)))\n               ) +\n  ggdist::stat_halfeye(\n    alpha = 0.7, \n    point_colour = NA,\n    adjust = .5, \n    width = .5, .width = 0, \n    justification = -.5) +\n  geom_boxplot(\n    alpha = 0.1,\n    width = .2, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 2,\n    alpha = .5,\n    position = position_jitter(\n      seed = 1, width = .08, height = 1.5\n    )\n  )  +\ncoord_flip() + theme_clean() + theme(legend.position = \"blank\")\np$layers[[3]]=NULL #remove default boxplot\ne <- statsExpressions::two_sample_test(y = task_percent, x = pretty_condition, data = df,\n                                type = \"nonparametric\", alternative = \"less\",\n                                var.equal = FALSE)\n#labels are layer 4\np <- p + labs(title = \"STUDY 3A | Distribution of Total Score\",\n         y = \"Percentage of correct responses across task\", x = \"\",\n         # caption=e$expression[[1]],\n         subtitle = \"Impasse condition yields greater variance and more high scores\")\n\np\n\n\n\n\n\nCODE\n# ggsave(p, filename = \"figures/SGC3A_LAB_totalscore.png\", width = 6, height =4)\n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct)\"\ntbl1 <- mosaic::favstats(~task_percent, data = df_s) \ntbl1 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0 \n    0 \n    0.077 \n    0.692 \n    1 \n    0.32 \n    0.393 \n    126 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\"\ntbl2 <- mosaic::favstats(task_percent ~ pretty_condition, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\n \n  \n    pretty_condition \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    control \n    0 \n    0.000 \n    0.000 \n    0.154 \n    1 \n    0.211 \n    0.370 \n    62 \n    0 \n  \n  \n    impasse \n    0 \n    0.058 \n    0.346 \n    0.846 \n    1 \n    0.425 \n    0.389 \n    64 \n    0 \n  \n\n\n\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntitle = \"Descriptive Statistics of Item Accuracy (Total % Correct) BY CONDITION\"\ntable(df_i$accuracy, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) %>% #sanity check sum of columns\n      kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Item Accuracy (Total % Correct) BY CONDITION\n \n  \n      \n    control \n    impasse \n    Sum \n  \n \n\n  \n    incorrect \n    0.789 \n    0.575 \n    0.68 \n  \n  \n    correct \n    0.211 \n    0.425 \n    0.32 \n  \n  \n    Sum \n    1.000 \n    1.000 \n    1.00 \n  \n\n\n\n\n\n\nWILCOXON RANK SUM (Mann-Whitney Test)\n\nNon parametric alternative to t-test; compares median rather than mean by ranking data\nDoes not assume normality\nDoes not assume equal variance of samples (homogeneity of variance)\n\n\nTest\n\n\nCODE\n(w <- wilcox.test(df_s$task_percent ~ df_s$pretty_condition,\n                 paired = FALSE, alternative = \"less\")) #less, greater\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  df_s$task_percent by df_s$pretty_condition\nW = 1252, p-value = 9e-05\nalternative hypothesis: true location shift is less than 0\n\n\nCODE\nreport(w)\n\n\nEffect sizes were labelled following Funder's (2019) recommendations.\n\nThe Wilcoxon rank sum test with continuity correction testing the difference in\nranks between df_s$task_percent and df_s$pretty_condition suggests that the\neffect is negative, statistically significant, and large (W = 1251.50, p <\n.001; r (rank biserial) = -0.37, 95% CI [-1.00, -0.21])\n\n\n\n\nVisualize\n\n\nCODE\nggbetweenstats( x = pretty_condition, y = task_percent, data = df_s,\n                type = \"nonparametric\", var.equal = FALSE)\n\n\n\n\n\n\n\n\nMIXED LOGISTIC REGRESSION\nFit a mixed logistic regression (at the item level), predicting accuracy (absolute score) on all discriminating questions by condition; accounting for random effects of subject and item.\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 13\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy)\n\n\n[1] TRUE\n\n\nCODE\n## 1 | SETUP RANDOM INTERCEPT SUBJECT\n\n#:: EMPTY MODEL (baseline, no random effect)\nprint(\"Empty fixed model\")\n\n\n[1] \"Empty fixed model\"\n\n\nCODE\nm0 = glm(accuracy ~ 1, family = \"binomial\", data = df_i) \n# summary(m0)\n\n#:: RANDOM INTERCEPT SUBJECT\nprint(\"Subject intercept random model\")\n\n\n[1] \"Subject intercept random model\"\n\n\nCODE\nmm.rS <- glmer(accuracy ~ (1|subject), data = df_i, family = \"binomial\")\n# summary(mm.rS)\n\n# :: TEST random effect\npaste(\"AIC decreases w/ new model?\", m0$aic > AIC(logLik(mm.rS)))\n\n\n[1] \"AIC decreases w/ new model? TRUE\"\n\n\nCODE\ntest_lrt(m0,mm.rS) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName  |    Model | df | df_diff |    Chi2 |      p\n--------------------------------------------------\nm0    |      glm |  1 |         |         |       \nmm.rS | glmerMod |  2 |       1 | 1012.67 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(m0,mm.rS))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  3.16446641679611e-222\"\n\n\nCODE\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n# :: TEST random effect\npaste(\"AIC decreases w/ new model?\", AIC(logLik(mm.rS)) > AIC(logLik(mm.rSQ)))\n\n\n[1] \"AIC decreases w/ new model? TRUE\"\n\n\nCODE\ntest_lrt(mm.rS, mm.rSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\nSome of the nested models seem to be identical and probably only vary in\n  their random effects.\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff |  Chi2 |      p\n-------------------------------------------------\nmm.rS  | glmerMod |  2 |         |       |       \nmm.rSQ | glmerMod |  3 |       1 | 17.33 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rS, mm.rSQ))$p[2])\n\n\nSome of the nested models seem to be identical and probably only vary in\n  their random effects.\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0000314647123141284\"\n\n\nCODE\n## 2 | ADD FIXED EFFECT CONDITION\n\nprint(\"FIXED Condition + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.CrSQ <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n#summary(mm.CrSQ)\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.CrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.CrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |  Chi2 |      p\n--------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |       |       \nmm.CrSQ | glmerMod |  4 |       1 | 17.85 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rSQ,mm.CrSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0000239614654299457\"\n\n\nCODE\n# control = glmerControl(optimizer=\"bobyqa\", optCtrl=list(maxfun=2e5)))\n\n\nA likelihood ratio test indicates adding CONDITION as a fixed effect to a logistic regression model including a fixed effect random intercepts for SUBJECT and QUESTION explains more variance in the data than random-effects only model.\n\n\nDescribe\n\n\nCODE\n#::::::::: SETUP\nm <- mm.CrSQ\nm %>% write_rds(file = \"analysis/SGC3A/models/sgc3a_glmer_acc_mm.CrSQ_LAB.rds\")\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ pretty_condition + (1 | subject) + (1 | q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n    1014     1035     -503     1006     1634 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-3.265 -0.138 -0.058  0.180  5.639 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 21.002   4.58    \n q       (Intercept)  0.325   0.57    \nNumber of obs: 1638, groups:  subject, 126; q, 13\n\nFixed effects:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                -5.24       1.00   -5.24  1.6e-07 ***\npretty_conditionimpasse     4.13       1.10    3.76  0.00017 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr)\nprtty_cndtn -0.806\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type = 2)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n                 Chisq Df Pr(>Chisq)    \npretty_condition  14.1  1    0.00017 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: MANUAL ONE-SIDED SIGTEST \n#note: anova and chi square are always one-tailed, but that is independent of being one-sided\n#https://www.ibm.com/support/pages/can-one-get-one-tailed-tests-logistic-regression-dividing-significance-levels-half\n# one-sided (right tail) z test for B COEFFICIENT\n#SANITY CHECK 2-tailed test should match the model output\n# tt <- 2*pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,5))\n# ot <- pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"BUT we want a one  directional, null: B <= 0: \",round(ot,5))\n\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n# se <- sqrt(diag(stats::vcov(m)))\n# (tab <- cbind(Est = fixef(m),\n#               LL = fixef(m) - 1.96 * se,\n#               UL = fixef(m) + 1.96 * se))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 4 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…   -5.24       1.00     -5.24  1.61e-7    -7.20     -3.28\n2 fixed    <NA>   pret…    4.13       1.10      3.76  1.70e-4     1.97      6.28\n3 ran_pars subje… sd__…    4.58      NA        NA    NA          NA        NA   \n4 ran_pars q      sd__…    0.570     NA        NA    NA          NA        NA   \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n# (e <- exp(tab))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 4 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…  0.00530   0.00530     -5.24  1.61e-7  7.47e-4    0.0377\n2 fixed    <NA>   pret… 61.9      67.9          3.76  1.70e-4  7.21e+0  532.    \n3 ran_pars subje… sd__…  4.58     NA           NA    NA       NA         NA     \n4 ran_pars q      sd__…  0.570    NA           NA    NA       NA         NA     \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\n# newdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n# preds <- predict(m, newdata = newdata, type = \"response\")\n# preds <- cbind(newdata, preds)\n# p <- preds %>% \n#   dplyr::select(pretty_condition, preds) %>% \n#   group_by(pretty_condition) %>% \n#   summarise(\n#     median = median(preds),\n#     se = sd(preds)/sqrt(n()),\n#     lwr = median - 1.96*se,\n#     upr = median + 1.96*se)\n    \n  \n#FROM merTools\n#setup df \nnewdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning: executing %dopar% sequentially: no parallel backend registered\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(pretty_condition, fit, lwr, upr) %>% \n  group_by(pretty_condition) %>% \n  summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 2 × 4\n  pretty_condition  median    lower  upper\n  <fct>              <dbl>    <dbl>  <dbl>\n1 control          0.00492 0.000829 0.0295\n2 impasse          0.244   0.0643   0.597 \n\n\n\n\nINFERENCE\n(In Dissertation)\nWe fit a mixed effects binomial logistic regression model with random intercepts for subjects and questions. Note that we choose to model these data at the item (i.e. question) rather than than subject (i.e. total score) level because the structure of a mixed effects model allows us to differentiate between random variance introduced by individual subjects and questions, versus the expected systematic variance of CONDITION. A likelihood ratio test indicates that a model including a fixed effect of CONDITION explains significantly more variance in the data than an intercepts-only baseline model (\\(\\chi^2 (3) = 17.85, p < 0.001\\)). The explanatory power of the entire model is substantial (\\(conditional \\ R^2 = 0.89\\)) and the part related to the fixed effect CONDITION (\\(marginal \\ R^2\\)) explains 15% of variance. Consistent with our hypothesis, the impasse condition substantially increases the odds of a correct response. Across the entire task participants in the impasse condition were 62 times more likely to offer a correct response, compared with those in the control condition ( \\(e^{\\beta_1} = 61.9, p < 0.001\\), \\(95 \\% \\  CI [7.21, 531.75]\\)). Based on the fixed effect of CONDITION, The model predicts that the probability of a correct response in the control condition is effectively 0% (95% CI [8.7e-4, 0.03]), and the probability of a correct response in the impasse condition increases to 25% (95% CI [0.07, 0.60]).\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# title = \"Study 3A (Lab) | Question Accuracy | Mixed Logistic Regression\"\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              paste(\"n = \",n_obs(m), \"R^2(Conditional) =\", round(r2(m)[[1]],2),\n#                    \"R^2(Marginal) =\", round(r2(m)[[2]],2)),\n#              \"Accuracy  ~ Condition + (1 | subject) + (1 | q)\")\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = title,\n#              notes = notes,\n#              output = \"tables/SGC3A_LAB_GLMER_OverallAccuracy.tex\")\n#              # coef_omit = \"Intercept\",\n\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n\n#SJPLOT | MODEL | lOG ODDS\nplot_model(m, transform = NULL,\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.05, #manually adjust to account for directional test\n           ci.lvl = 0.95 ) + #manually adjusted for directional test   \n  labs(title = \"Model ESTIMATE | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, transform = \"exp\",\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.05, #manually adjust to account for directional test\n           ci.lvl = 0.95 ) + #manually adjusted for directional test   \n  labs(title = \"Model ESTIMATE | Log Odds\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result) + labs(\n#     title = \"Model ESTIMATE | ODDS RATIO\"\n#   )\n\n## | PLOT TESTS\n# result <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\n# plot(result)\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"eff\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n\n\n#GGDIST | MODEL | PREDICTED PROBABILITIES\npreds %>% \n  ggplot(aes( x = fit, y = pretty_condition, fill = pretty_condition)) + \n  stat_halfeye(alpha = 0.5, normalize = \"xy\") + \n  xlim(0,0.3) + theme_clean() + labs(\n    title = \"Model PREDICTION | Probability of Accurate Response\",\n    subtitle = \"TODO check preds to see if fixed or includes random\"\n  )\n\n\n\n\n\nCODE\n# SIMULATE FIXED EFFECTS\n# simulate values of fixed effects \n# (feEx <- FEsim(m,  oddsRatio = FALSE, n.sims = 1000))\n# PLOT estimates of fixed effects\n# plotFEsim(feEx) +\n#   theme_bw() + labs(title = \"Coefficient Plot of InstEval Model\",\n#                     x = \"Median Effect Estimate\")\n\n# SIMULATE RANDOM EFFECTS\n# simulate values of random effects\n# reEx <- REsim(m)\n# PLOT estimates of random effects\n# plotREsim(reEx)\n\n\n\n\nCODE\n#SJPLOT | MODEL | PROBABILITIES\np <- plot_model(m, type = \"pred\")[[1]]  +\n  ylim(0,1) +\n  labs(\n    title = \"Model PREDICTION | Probability of Correct Response\",\n    subtitle = \"Impasse increases probability of correct response\",\n    y = \"Probability of Correct Response\", x = \"Condition\"\n  )\n\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\nCODE\np\n\n\n\n\n\nCODE\n# ggsave(p, filename = \"figures/SGC3A_LAB_Accuracy_Predictions.png\", width = 4, height =4)\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)\n\n\n\n\n\n\n\nPOWER\n\n\nCODE\n# https://lkumle.github.io/power_notebooks/nestedGLMM_notebook.html\n\nlibrary(simr)\n\n\n\nAttaching package: 'simr'\n\n\nThe following object is masked from 'package:stringr':\n\n    fixed\n\n\nThe following object is masked from 'package:lme4':\n\n    getData\n\n\nThe following object is masked from 'package:mosaic':\n\n    compare\n\n\nCODE\n#WHAT IS THE POWER FOR THE ACTUAL OBSERVED EFFECT?\npower <- powerSim(m, test = fixed(\"pretty_condition\"), nsim=100)\n\n\nSimulating: |                                                                  |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=                                                                 |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==                                                                |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===                                                               |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |====                                                              |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=====                                                             |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |======                                                            |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=======                                                           |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |========                                                          |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=========                                                         |\n\n\nboundary (singular) fit: see help('isSingular')\n\n\n\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==========                                                        |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===========                                                       |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |============                                                      |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=============                                                     |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==============                                                    |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===============                                                   |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |================                                                  |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=================                                                 |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==================                                                |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===================                                               |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |====================                                              |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=====================                                             |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |======================                                            |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=======================                                           |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |========================                                          |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=========================                                         |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==========================                                        |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===========================                                       |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |============================                                      |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=============================                                     |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==============================                                    |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===============================                                   |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |================================                                  |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=================================                                 |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==================================                                |\n\n\nboundary (singular) fit: see help('isSingular')\n\n\nboundary (singular) fit: see help('isSingular')\n\n\n\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===================================                               |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |====================================                              |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=====================================                             |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |======================================                            |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=======================================                           |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |========================================                          |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=========================================                         |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==========================================                        |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===========================================                       |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |============================================                      |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=============================================                     |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==============================================                    |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===============================================                   |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |================================================                  |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=================================================                 |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==================================================                |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===================================================               |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |====================================================              |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=====================================================             |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |======================================================            |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=======================================================           |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |========================================================          |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=========================================================         |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==========================================================        |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===========================================================       |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |============================================================      |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |=============================================================     |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==============================================================    |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |===============================================================   |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |================================================================  |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |================================================================= |\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bSimulating: |==================================================================|\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\n\n\nWarning in observedPowerWarning(sim): This appears to be an \"observed power\"\ncalculation\n\n\nCODE\npower \n\n\nPower for predictor 'pretty_condition', (95% confidence interval):\n      96.00% (90.07, 98.90)\n\nTest: Likelihood ratio\n\nBased on 100 simulations, (11 warnings, 0 errors)\nalpha = 0.05, nrow = 1638\n\nTime elapsed: 0 h 1 m 48 s\n\nnb: result might be an observed power calculation\n\n\nCODE\n##HOW MANY SUBJECTS ARE NEEDED TO DETECT ACTUAL EFFECT OF TRI AT 80% POWER?\n#warning :: post hoc power analysis :: ca c'est tres bad \n# power <- powerCurve(m, test = fixed(\"pretty_condition\"), along = \"subject\", breaks = c(40, 50, 60, 70, 80, 90, 100), nsim = 1000)\n# power %>% write_rds(\"analysis/SGC3A/models/power_analysis_LAB.rds\")\npower <- read_rds(\"analysis/SGC3A/models/power_analysis_LAB.rds\")\npower\n\n\nPower for predictor 'pretty_condition', (95% confidence interval),\nby number of levels in subject:\n     40: 67.60% (64.60, 70.50) - 520 rows\n     50: 77.40% (74.68, 79.96) - 650 rows\n     60: 84.30% (81.89, 86.50) - 780 rows\n     70: 88.40% (86.25, 90.32) - 910 rows\n     80: 92.70% (90.91, 94.23) - 1040 rows\n     90: 94.70% (93.12, 96.01) - 1170 rows\n    100: 96.20% (94.82, 97.30) - 1300 rows\n\nTime elapsed: 5 h 50 m 34 s\n\n\nCODE\nplot(power)\n\n\n\n\n\nBased on observed power analysis for the actual effect observed (main effect of condition, on SGC3 study design, with the full model specification), it is indicated to reach 80% power we have ~60 subjects per experimental cell in future studies in which we want to detect an effect similar to that of the impasse condition.\n**Note that different model structures (and different fixed vs random effects structures) will yield different requirements.\n\n\nSanity Check :: Bayesian\n\n\nCODE\n# ## 0 | SETUP\n# #confirm 13 items [all discriminating items]\n# nrow(df_i) / nrow(df_s) == 13\n# #confirm all factors \n# is.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy)\n# \n#\n# \n# print(\"FIXED Condition + Subject & Item random intercepts\")\n# Bmm.CrSQ <- brm( accuracy ~ pretty_condition + (1|subject) + (1|q), \n#                  data = df_i, \n#                  family = \"bernoulli\",\n#                  chains = 4, iter = 2000, warmup = 1000,\n#                  cores = 4, seed = 1234,\n#                  backend = \"cmdstanr\",\n#                  file =\"analysis/SGC3A/models/sgc3a_brms_acc_Bmm.CrSQ_LAB.rds\")\n# \n# #get Priors \n# # describe_priors(Bmm.CrSQ)\n# \n# #GRAPHICAL POSTERIOR PREDICTION CHECKS\n# pp_check(Bmm.CrSQ)\n# \n# #DESCRIBE MODEL\n# (d <- describe_posterior(ci=.95, Bmm.CrSQ))\n# \n# #SEE MODEL\n# plot(pd(Bmm.CrSQ))\n# #convert to a pd value\n# (pds <- pd_to_p(d$pd))\n\n\nA likelihood ratio test indicates adding CONDITION as a fixed effect to a logistic regression model including a fixed effect random intercepts for SUBJECT and QUESTION explains more variance in the data than random-effects only model.\n\n\nCODE\n# #::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n# ##WORKING\n# ## VIS probability of correct response\n# #TAKES A REALLY LONG TIME\n# \n# #1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>%\n#   add_fitted_draws(Bmm.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(\"analysis/SGC3A/models/draws_BB.catCrSQ.rds\")\n# \n# #2| VISUALIZE PREDICTIONS | GGDIST\n# ##TODO figure out height normalization.\n# ##do it with much smaller number of draws \n# #TODO adjust bandwidth/smoothing? + put on same line + \n# #TAKES A REAAALY LONG TIME\n# # draws %>% sample_n(1000) %>% \n# #   ggplot(aes(x = .value,  y = 0, fill = pretty_condition)) +\n# #   stat_slab(width = c(.95), alpha = 1, normalize=\"xy\") +\n# #   #normalize = all, panels, xy, groups, none\n# #   xlim(0,1) + labs(\n# #     title = \"Model Predicted Probability of Correct Response\",\n# #     x = \"probability of correct response\",\n# #     y = \"Interpretation\"\n# #   ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#h1a-overall-interpretation-state",
    "href": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#h1a-overall-interpretation-state",
    "title": "7  SGC3A (Lab) Hypothesis Testing",
    "section": "H1A | OVERALL INTERPRETATION STATE",
    "text": "H1A | OVERALL INTERPRETATION STATE\nDo Ss in the IMPASSE condition offer less-orthogonal interpretations across the test phase questions?\nWhile absolute accuracy score tells us whether a participant successfully interpreted the coordinate system, it doesn’t allow us to differentiate between different kinds of incorrect interpretations. Here we examine the (categorical) interpretation state type based on the nature of subject’s response, and determine if these interpretations differ by experimental condition. State is a 3-category variable that groups the following interpretations:\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular => indicates a correct triangular coordinate understanding\n\n\n\n\n\n\n\n\nResearch Question\nDoes Ss in the impasse condition produce less orthogonal responses across questions?\n\n\n\n\nHypothesis\nH1A | Ss in the IMPASSE condition will have a higher likelihood of producing unknown and triangle-like response states across all items\n\n\nData\n\ndata: df_items where q nin 6,9 (13 discriminant test phase items)\noutcome: state ( 3 level factor from high_interpretation )\npredictor: condition [between-subjects factor]\n\n\n\nAnalysis Strategy\n\nMIXED Multinomial (Logistic) Regression on state predicted by condition\n\nAlternative:\n\nMIXED Ordinal regression on state (doesn’t meet proportional odds assumption-I think)\nMIXED Multinomial or Ordinal regression on high_interpretation (some cells are 0, produces problems)\n\n\n\n\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% dplyr::select(q,subject,state,pretty_condition)\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  # facet_wrap(~pretty_mode) + \n  theme(legend.position = \"bottom\")+\n   labs(title = \"DISTRIBUTION of Interpretation\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  facet_wrap(~q) +\n   labs(title = \"Interpretation by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#:::::::: LABELLED \n\ntemp <- df_i %>% mutate(\n  state = fct_rev(state)\n)  \n\np <-   ggbarstats(data = temp, x = state, y = pretty_condition,\n               results.subtitle = FALSE,\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))\n                  # theme(axis.text.x = element_text(angle = 90)))\n               ))  + theme_clean() + theme(legend.position = \"bottom\")\n\n\nScale for 'fill' is already present. Adding another scale for 'fill', which\nwill replace the existing scale.\n\n\nCODE\np <- p + labs(title = \"DISTRIBUTION | Question Accuracy\",\n         y = \"Proportion of Questions\", x = \"Condition\",\n         subtitle = \"Impasse condition yields more correct responses\")\n\np\n\n\n\n\n\nCODE\n# ggsave(p, filename = \"figures/SGC3A_LAB_Accuracy.png\", width = 6, height =4)\n\n\nA proportional bar chart visualizing the proportion of each interpretations type by condition for each data collection modality (left/right facet) reveals that the pattern of responses are similar regardless of the data collection modality, by differ by condition. In the impasse condition, there are more triangular responses than in control. In the impasse condition, there are also more positive transition (i.e. triangle-like) and neutral (ie. blank or uncertain response types) than in the control condition.\n\n\nDescribe\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             control impasse    Sum\n  orthogonal  0.6960  0.3281 0.5092\n  other       0.0682  0.1839 0.1270\n  angular     0.0248  0.0625 0.0440\n  triangular  0.2109  0.4255 0.3199\n  Sum         1.0000  1.0000 1.0000\n\n\nCODE\n(t <- table(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n            \n             control impasse  Sum\n  orthogonal     561     273  834\n  other           55     153  208\n  angular         20      52   72\n  triangular     170     354  524\n  Sum            806     832 1638\n\n\n\n\nMIXED MULTINOMIAL REGRESSION\nDoes condition affect the response state of of items across the task?\nFit a MIXED logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\nCan use mclogit mblogit() with random effect or bayesian brms package b/c nlme, lme4 don’t support random effects on multinomial (ie no categorical family on glmer())\nAlternative would be to manually run [k-1] X binomial mixed models [should compare outcomes]\n[k-1] equations will be estimated (# categories - 1); each representing the odds of answering in that particular interpretation (vs) the reference category (orthogonal answer) [essentially a series of binary logistic regressions, but instead of incorrect/correct, comparing [reference category] vs [this category])\nFor each equation:\n\n\\(\\beta_{0}\\) = Log Odds of [this category type vs. reference category type) response in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of [this category type vs. reference category type] response in CONTROL condition\n\\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for [this category] type response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of [this. vs reference category type] response in IMPASSE (vs) CONTROL\nTwo-tailed NHST Null hypothesis: \\(\\beta_{impasse} = 0\\) the odds for [this category of response vs. reference] are not different for IMPASSE condition\nAlternative hypothesis: \\(\\beta_{impasse} \\ne 0\\) the odds of [this category of response vs. reference] increases or decreases for IMPASSE condition\n\n\n\nFit Model [brms]\n\n\nCODE\n#BAYESIAN RANDOM ONLY\nBmm.cat.rSQ <- brm( state ~ 1 + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3A/models/sgc3a_brms_state_Bmm.cat.rSQ_LAB.rds\")\n\n\n#UNINFORMATIVE PRIOR BAYESIAN MIXED VERSION\n# flat_Bmm.cat.CrSQ <- brm( state ~ pretty_condition + (1|subject) + (1|q), \n#                  data = df_i, \n#                  family = \"categorical\",\n#                  chains = 4, iter = 2500, warmup = 1000,\n#                  cores = 4, seed = 1234,\n#                  save_pars = save_pars(all = TRUE),\n#                  # backend = \"cmdstanr\",\n#                  file =\"analysis/SGC3A/models/sgc3a_brms_state_FLAT_Bmm.cat.CrSQ_LAB.rds\")\n\n\n# determine default priors \n# prior_summary(flat_Bmm.cat.CrSQ)\n\n#set priors [see justification, below]\ninf_priors <- c(\n  # too strong?\n  # prior(normal(-6.91, 0.201),  class = \"Intercept\", dpar = \"muangular\"),\n  # prior(normal(-6.91, 0.201),  class = \"Intercept\", dpar = \"muother\"),\n  # prior(normal(-6.91, 0.201),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"mutriangular\")\n)\n\n#INFORMATIVE PRIORS\nBmm.cat.CrSQ <- brm( state ~ pretty_condition + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 prior = inf_priors,\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3A/models/sgc3a_brms_state_Bmm.cat.CrSQ_LAB.rds\"\n                 )\n\n#a bayes factor model comparison of the flat vs informative prior models suggest convicing evidence that \n#informative prior model is a better fit\n# bayesfactor(Bmm.cat.CrSQ, flat_Bmm.cat.CrSQ)\n\n# PRIORS LOGIC \n# https://www.bayesrulesbook.com/chapter-13.html#building-the-logistic-regression-model\n\n#expectation for probability of _better_ response [in control]?\n#very low probability center: 0.1% [very low]; as logodds = logit(0.001) = -6.91\n#range from 0 to 55%  logit(0.55) = 0.201\n#probability of 0.1 to 55% is equivalent to [logodds] -6.91 +/ 2* 0.201\n#therefore... prior for intercept => Normal(−6.91, 0)\n\n\n#expectation for probability of _better_ response [in impasse]?\n#increases probablity from 0 % \n# 0 [very low]; as OR  = exp(0) = 1\n#range from 0 to 90%  exp(0.9) = 2.46\n#probability of 0 to 90% is equivalent to [ODDS scale] 1 +/ 2* 2.42\n#on log odds scale ? [0, ]\n#therefore... prior for intercept => Normal(1, 2.42)\n                             # prior = normal(0.07, 0.035),\n\n\n\n\nDescribe\n\n\nCODE\n# best model\n# m <- Bmm.cat.CrSQ\nm <- Bmm.cat.CrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n Family: categorical \n  Links: muother = logit; muangular = logit; mutriangular = logit \nFormula: state ~ pretty_condition + (1 | subject) + (1 | q) \n   Data: df_i (Number of observations: 1638) \n  Draws: 4 chains, each with iter = 2500; warmup = 1000; thin = 1;\n         total post-warmup draws = 6000\n\nGroup-Level Effects: \n~q (Number of levels: 13) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.34      0.33     0.82     2.10 1.00     1553\nsd(muangular_Intercept)        1.64      0.49     0.94     2.80 1.00     1668\nsd(mutriangular_Intercept)     0.92      0.25     0.53     1.52 1.00     1935\n                           Tail_ESS\nsd(muother_Intercept)          2358\nsd(muangular_Intercept)        3076\nsd(mutriangular_Intercept)     3148\n\n~subject (Number of levels: 126) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.35      0.19     1.02     1.76 1.00     1739\nsd(muangular_Intercept)        2.15      0.35     1.54     2.90 1.00     1696\nsd(mutriangular_Intercept)     4.86      0.56     3.89     6.07 1.00     1211\n                           Tail_ESS\nsd(muother_Intercept)          2970\nsd(muangular_Intercept)        3115\nsd(mutriangular_Intercept)     2468\n\nPopulation-Level Effects: \n                                     Estimate Est.Error l-95% CI u-95% CI Rhat\nmuother_Intercept                       -3.19      0.45    -4.13    -2.34 1.00\nmuangular_Intercept                     -4.84      0.66    -6.15    -3.59 1.00\nmutriangular_Intercept                  -3.88      0.77    -5.47    -2.48 1.00\nmuother_pretty_conditionimpasse          2.51      0.36     1.84     3.23 1.00\nmuangular_pretty_conditionimpasse        2.45      0.57     1.37     3.63 1.00\nmutriangular_pretty_conditionimpasse     3.54      0.91     1.83     5.35 1.00\n                                     Bulk_ESS Tail_ESS\nmuother_Intercept                        1174     2100\nmuangular_Intercept                      1657     2589\nmutriangular_Intercept                    982     1722\nmuother_pretty_conditionimpasse          2000     3257\nmuangular_pretty_conditionimpasse        2224     3324\nmutriangular_pretty_conditionimpasse      832     1534\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCODE\n(d <- describe_posterior(ci=.95, Bmm.cat.CrSQ))\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.71). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nSummary of Posterior Distribution\n\nParameter                            | Median |         95% CI |   pd |          ROPE | % in ROPE |  Rhat |     ESS\n-------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                    |  -3.18 | [-4.13, -2.34] | 100% | [-0.18, 0.18] |        0% | 1.002 | 1175.00\nmuangular_Intercept                  |  -4.83 | [-6.15, -3.59] | 100% | [-0.18, 0.18] |        0% | 1.002 | 1600.00\nmutriangular_Intercept               |  -3.84 | [-5.47, -2.48] | 100% | [-0.18, 0.18] |        0% | 1.003 |  968.00\nmuother_pretty_conditionimpasse      |   2.50 | [ 1.84,  3.23] | 100% | [-0.18, 0.18] |        0% | 1.001 | 1980.00\nmuangular_pretty_conditionimpasse    |   2.44 | [ 1.37,  3.63] | 100% | [-0.18, 0.18] |        0% | 1.001 | 2210.00\nmutriangular_pretty_conditionimpasse |   3.52 | [ 1.83,  5.35] | 100% | [-0.18, 0.18] |        0% | 1.005 |  822.00\n\n\nCODE\nprint(\"BAYES FACTOR [comparison to null]\")\n\n\n[1] \"BAYES FACTOR [comparison to null]\"\n\n\nCODE\n#think of this like the anova(model) to get p values for each predictor\n#has to recompile the models with rstan. total drag\n(b <- bayesfactor(Bmm.cat.rSQ, m))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nBayes Factors for Model Comparison\n\n    Model                                            BF\n[2] pretty_condition + (1 | subject) + (1 | q) 1.79e+17\n\n* Against Denominator: [1] 1 + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\nprint(\"DESCRIBE POSTERIOR\")\n\n\n[1] \"DESCRIBE POSTERIOR\"\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n# se <- sqrt(diag(stats::vcov(m)))\n# # table of estimates with 95% CI\n# (tab <- cbind(Est = fixef(m),\n#               LL = fixef(m) - 1.96 * se,\n#               UL = fixef(m) + 1.96 * se))\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n(l <- describe_posterior(m))\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.71). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nSummary of Posterior Distribution\n\nParameter                            | Median |         95% CI |   pd |          ROPE | % in ROPE |  Rhat |     ESS\n-------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                    |  -3.18 | [-4.13, -2.34] | 100% | [-0.18, 0.18] |        0% | 1.002 | 1175.00\nmuangular_Intercept                  |  -4.83 | [-6.15, -3.59] | 100% | [-0.18, 0.18] |        0% | 1.002 | 1600.00\nmutriangular_Intercept               |  -3.84 | [-5.47, -2.48] | 100% | [-0.18, 0.18] |        0% | 1.003 |  968.00\nmuother_pretty_conditionimpasse      |   2.50 | [ 1.84,  3.23] | 100% | [-0.18, 0.18] |        0% | 1.001 | 1980.00\nmuangular_pretty_conditionimpasse    |   2.44 | [ 1.37,  3.63] | 100% | [-0.18, 0.18] |        0% | 1.001 | 2210.00\nmutriangular_pretty_conditionimpasse |   3.52 | [ 1.83,  5.35] | 100% | [-0.18, 0.18] |        0% | 1.005 |  822.00\n\n\nCODE\n# (tm <- tidy(m,   conf.int = TRUE))\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.71). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nParameter                            |   Median |         95% CI |   pd | % in ROPE |  Rhat |     ESS\n-----------------------------------------------------------------------------------------------------\nmuother_Intercept                    |     0.04 | [0.02,   0.10] | 100% |        0% | 1.002 | 1175.00\nmuangular_Intercept                  | 8.01e-03 | [0.00,   0.03] | 100% |        0% | 1.002 | 1600.00\nmutriangular_Intercept               |     0.02 | [0.00,   0.08] | 100% |        0% | 1.003 |  968.00\nmuother_pretty_conditionimpasse      |    12.13 | [6.29,  25.24] | 100% |        0% | 1.001 | 1980.00\nmuangular_pretty_conditionimpasse    |    11.48 | [3.95,  37.67] | 100% |        0% | 1.001 | 2210.00\nmutriangular_pretty_conditionimpasse |    33.90 | [6.22, 211.18] | 100% |        0% | 1.005 |  822.00\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nCODE\n# tidy(m,   conf.int = TRUE, exponentiate = TRUE)\n# tm %>% mutate(\n#   OR.est = exp(estimate),\n#   exp.low = exp(conf.low),\n#   exp.high = exp(conf.high)\n# ) %>% dplyr::select(effect, component, group, term, OR.est, exp.low, exp.high)\n\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#PREDICT METHOD\nnewdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n#lengthen data frame to handle multinomial\npreds <- preds %>% \n  dplyr::select(-subject, -q) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = !pretty_condition,\n  values_to = \"preds\",\n  names_to = \"state\",\n) \n\n(p <- preds %>% \n  group_by(pretty_condition, state ) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 8 × 6\n# Groups:   pretty_condition [2]\n  pretty_condition state              median      se      lwr    upr\n  <fct>            <chr>               <dbl>   <dbl>    <dbl>  <dbl>\n1 control          P(Y = angular)    0.00992 0.00165  0.00669 0.0131\n2 control          P(Y = orthogonal) 0.865   0.0123   0.841   0.889 \n3 control          P(Y = other)      0.0339  0.00333  0.0274  0.0404\n4 control          P(Y = triangular) 0.0148  0.0125  -0.00965 0.0393\n5 impasse          P(Y = angular)    0.0275  0.00297  0.0217  0.0333\n6 impasse          P(Y = orthogonal) 0.232   0.0102   0.212   0.252 \n7 impasse          P(Y = other)      0.118   0.00634  0.106   0.131 \n8 impasse          P(Y = triangular) 0.329   0.0132   0.303   0.355 \n\n\nCODE\n##DRAWS METHOD\n# GENERATE draws from model\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# # SUMMARIZE draws from model\n# (k <- kable(draws %>%\n#   dplyr::select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 4, col.names =\n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>%\n#   kable_styling())\n\n\n##EASY STATS INSIGHT \n# https://easystats.github.io/insight/reference/get_predicted.html\n# p <- get_predicted(m, predict = \"expectation\")\n\n\n\n\nINFERENCE\nREPORTED\n[REPORT POSTERIOR MEDIAN \\(\\exp_{beta}\\), 95 % credible interval, % probability of direction]\nWe fit a (bayesian) multinomial logistic regression model with random intercepts for subjects and questions. A Bayes Factor model comparison (against a random intercepts-only model) indicates extreme evidence for a main effect of CONDITION (BF = 1.38e+14).\nConsistent with our hypothesis, the impasse condition substantially increases the odds of transitional interpretations.\nAcross the entire task participants in the impasse condition were 12 times more likely to offer an ‘unknown’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 12.13, 95 \\% CI [6.29, 25.24], pd = 100\\%\\)). Participants in the impasse condition were 12 times more likely to offer an ‘angular’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 11.48, 95 \\% CI [3.95, 37.67], pd = 100\\%\\)), and 34 times more likely to offer an ‘triangular’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 33.90, 95 \\% CI [6.22, 211.18], pd = 100\\%\\)).\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n#model summary doesn't work for brms multinomial\n\n# DOESN'T WORK FOR BRMS\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n# \n# \n# #GET MODEL ESTIMATES\n# t <- as.data.frame(model_parameters(m, exponentiate = TRUE))\n# \n# #REFORMAT\n# x <- t %>%\n#   mutate(\n#     Interpretation = word(Parameter, 2, sep = \"_\"),\n#     Interpretation = str_remove_all(Interpretation,\"mu\"),\n#     Interpretation = fct_relevel(Interpretation, levels = c(\"other\",\"angular\",\"triangular\")),\n# \n#     Parameter = as.factor(word(Parameter, 3, sep = \"_\")),\n#     Parameter = recode_factor(Parameter,\n#                          \"Intercept\" = \"(Intercept)\",\n#                          \"pretty\" = \"Condition[impasse]\"),\n#     Median = round(Median,2),\n#     CI_low = round(CI_low,2),\n#     CI_high = round(CI_high,2),\n#     pd = round(pd,2),\n#     ROPE_Percentage = round(ROPE_Percentage,2)\n#   ) %>%\n#   arrange(Interpretation) %>%\n#   dplyr::select(-CI, -Rhat, -ESS) %>%\n#   rename( \"%_in_ROPE\"=\"ROPE_Percentage\",\n#           \"(Odds Ratio)\" = \"Median\") %>%\n#   dplyr::select(Interpretation, Parameter, `(Odds Ratio)`, CI_low, CI_high, pd, `%_in_ROPE`)\n\n\n# \n# #KNIT\n# title = \"Study 3A (Lab) | Question Interpretation | Mixed Multinomial Regression\"\n# tab <- kbl(x, format = \"latex\", caption = title,\n#            booktabs = FALSE) %>% kable_classic() %>%\n# footnote(general = paste(\"Model Interpretation ~ \",b$Model[2], \"Bayes Factor \", format( exp(b$log_BF[2]), digits =2 ) ), footnote_as_chunk = T, general_title = \"\")\n# writeLines(tab, \"tables/SGC3A_LAB_BRMS_state.tex\")\n\n\n\n\nCODE\n# ## POINT ESTIMATES IN PROBABILITY\n# #1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>%\n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #2 | SUMMARIZE draws \n# k <- kable(draws %>%\n#   select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 2, col.names = \n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>% \n#   kable_styling()\n# k\n\n#COMPARISONS\n# c <- draws %>% \n#   # dplyr::select(pretty_condition, .category, .value) %>%\n#   compare_levels(variable = .value, by = pretty_condition, \n#                  comparison = list(c(\"control\",\"impasse\"))) \n#                                    # c(\"adots\",\"interval\"),\n#                                    # c(\"adots\",\"mean\"),\n#                                    # c(\"adots\",\"text\"),\n#                                    # c(\"density\",\"interval\"),\n#                                    # c(\"density\",\"mean\"),\n#                                    # c(\"density\",\"text\"),\n#                                    # c(\"interval\",\"mean\"),\n#                                    # c(\"interval\",\"text\"),\n#                                    # c(\"mean\",\"text\")\n#                                    \n# c %>%\n#   ggplot(aes(x = .value, y = reorder(x =pretty_condition, X = .value)))+\n#   stat_interval(.width = .95, color = \"black\") +\n#   geom_vline(xintercept = 0)+\n#   theme_bw()+\n#   # coord_cartesian(xlim = c(-.5,1)) +\n#   theme_tidybayes() \n# comps\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, vline.color = \"red\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            p.threshold = 0.1, #manually adjust to account for directional test\n#            ci.lvl = 0.90 ) + #manually adjusted for directional test\n#   labs(title = \"Model Estimate | Odds Ratio\",\n#        subtitle = \"\",\n#        x = \"Condition\")\n\n\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(Bmm.cat.CrSQ, exponentiate = TRUE, component = \"all\")\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.71). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nCODE\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n# + theme_clean()\n\n# \n# result <- estimate_density(m,exponentiate = TRUE)\n# plot(result,  stack = FALSE, priors = TRUE)\n\n## | PLOT TESTS\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.71). This might lead to inappropriate results. See 'Details' in '?equivalence_test'.\n\n\nCODE\nplot(result)\n\n\nPicking joint bandwidth of 0.0784\n\n\nWarning: Removed 3600 rows containing non-finite values (stat_density_ridges).\n\n\n\n\n\nCODE\nresult <- rope(m)\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.71). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nCODE\nplot(result)\n\n\n\n\n\nCODE\n(result <- pd(m,exponentiate = TRUE))\n\n\nProbability of Direction\n\nParameter                            |   pd\n-------------------------------------------\nmuother_Intercept                    | 100%\nmuangular_Intercept                  | 100%\nmutriangular_Intercept               | 100%\nmuother_pretty_conditionimpasse      | 100%\nmuangular_pretty_conditionimpasse    | 100%\nmutriangular_pretty_conditionimpasse | 100%\n\n\nCODE\nplot(result, show_intercept = TRUE, show_labels = TRUE)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"eff\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n# #PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\",\n           title = \"Model PREDICTION | Probability of Response Interpretation\",\n           axis.title = c(\"Condition\", \"Probability of Response Interpretation\"))\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\n$pretty_condition\n\n\n\n\n\nCODE\n#TODO OUTPUT TABLE \n# modelsummary(m)\n\n\n\n\nCODE\n#::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n##WORKING\n# https://mjskay.github.io/ggdist/reference/stat_slab.html\n## VIS probability of correct response\n#TAKES A REALLY LONG TIME\n\n#1 | get draws\ndraws <- df_i %>%\n  data_grid(pretty_condition, subject, q) %>%\n  add_fitted_draws(Bmm.cat.CrSQ,\n                   # n = 100,\n                   # dpar = TRUE,\n                   # transform = TRUE, #gives prob%, otherwise OR\n                   re_formula = NA)\n\n\nWarning: `fitted_draws` and `add_fitted_draws` are deprecated as their names were confusing.\nUse [add_]epred_draws() to get the expectation of the posterior predictive.\nUse [add_]linpred_draws() to get the distribution of the linear predictor.\nFor example, you used [add_]fitted_draws(..., scale = \"response\"), which\nmeans you most likely want [add_]epred_draws(...).\n\n\nCODE\n# draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n\n#OR load from file\n# draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n\n#2| VISUALIZE PREDICTIONS | GGDIST\n##TODO figure out height normalization.\n##do it with much smaller number of draws \n#TODO adjust bandwidth/smoothing? + put on same line + \n#TAKES A REAAALY LONG TIME\nd <- draws %>% sample_n(10) %>% \n  ggplot(aes(x = .value,  y = .category, fill = pretty_condition)) +\n  stat_slab(width = c(.95), alpha = 0.5, normalize=\"xy\") +\n  # stat_halfeye(.width = c(.95), alpha = .6,interval_alpha = 0,point_alpha = 0, normalize = \"groups\") +\n  #   #normalize = all, panels, xy, groups, none\n  xlim(0,1) + labs(\n    title = \"Model Predicted Probability of Correct Response\",\n    x = \"probability of correct response\",\n    y = \"Interpretation\"\n  ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()\n# # \n# # ggsave(d, filename = \"figures/sgc3a_BBm.cat.CrSQ_lab_posterior.svg\", width = 6, height =4)\nd\n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n#CHECK Fit of posterior predictive to data\npp_check(Bmm.cat.CrSQ, ndraws=1000)\n\n\n\n\n\nCODE\n#CHECK posterior vs. priors\nresult <- estimate_density(Bmm.cat.CrSQ)\nplot(result, stack = FALSE, priors= TRUE)\n\n\n\n\n\nCODE\n#CHECK model\nplot(Bmm.cat.CrSQ)\n\n\n\n\n\n\n\n\n\n\n\n\n\nFit Model [mblogit]\n\n\nCODE\n# \n# #https://www.elff.eu/software/mclogit/manual/mblogit/\n# #\"baseline category logit\" model matches multinom()\n# \n# #check reference level \n# print(\"Categories (first is reference)\")\n# levels(df_i$state)\n# \n# #FIT EMPTY MODEL\n# # print(\"EMPTY MODEL\")\n# mm.cat.rSQ <- mblogit(state ~ 1 , \n#                       random = list( ~ 1|subject, ~1|q), \n#                       data = df_i)\n# #summary(mm.cat.rSQ)\n# \n# #FIT PREDICTOR MODEL\n# # print(\"PREDICTOR MODEL\")\n# mm.cat.CrSQ <- mblogit(state ~ pretty_condition , \n#                   random = list( ~ 1|subject, ~1|q), \n#                   data = df_i)\n# # summary(mm.cat.CrSQ)\n# \n# #COMPARE MODEL FIT\n# paste(\"AIC wth predictor is lower than empty model?\", AIC(mm.cat.rSQ) > AIC(mm.cat.CrSQ))\n# test_lrt(mm.cat.rSQ, mm.cat.CrSQ)\n\n\nNOTE: The empty model DOES NOT CONVERGE ##### Describe\n\n\nCODE\n# \n# m <- mm.cat.CrSQ\n# \n# #DESCRIBE MODEL\n# summary(m)\n# \n# #INTERPRET COEFFICIENTS\n# paste(\"LOG ODDS\")\n# tidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n# paste(\"ODDS RATIOS\")\n# tidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n# \n# # paste(\"MODEL INFO\")\n# # glance(m)\n# \n# #PERFORMANCE\n# performance(m)\n\n\n\n\nInference\nNOTE: For reference only; this model raised NaN errors\n\n\nVisualize\n\n\nCODE\n# \n# \n# ## | PLOT PARAMETERS \n# \n# #SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, \n#            transform = \"exp\",\n#            vline.color = \"red\", \n#            show.intercept = TRUE, \n#            show.values = TRUE)\n# \n# \n# #TODO SEPARATE THIS BY EQUATION \n# # ms <- model_parameters(Bmm.cat.CrSQ, component = \"conditional\")\n# # m1 <- ms %>% filter(str_detect(Parameter, \"muother\"))\n# # plot(m1)\n# \n# #EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result, show_labels = TRUE, n_columns = 3)\n# \n# # result <- simulate_parameters(m)\n# # plot(result, stack = FALSE)\n# \n# ## | PLOT TESTS\n# result <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\n# plot(result)\n# \n# ## | PLOT PREDICTIONS\n# \n# #SJPLOT | MODEL | PROBABILITIES\n# # plot_model(m, type=\"eff\",\n# #            show.intercept = TRUE,\n# #            show.values = TRUE,\n# #            title = \"Model Prediction | Probability of Accurate Response\",\n# #            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n# # \n# # #PLOT MODEL PREDICTION\n# # plot_model(m, type = \"pred\")[[1]] + \n# #   ylim(0,1) + labs(\n# #     title = \"Model Prediction | Probability of Accurate Response\",\n# #     subtitle = \"Impasse increases Probability of Correct Response\"\n# #   )\n# \n# #TODO EMMEANS for the estimated marginal means\n\n\n\n\nDiagnostics\n\n\nCODE\n# check_model(m)\n\n\n\n\nCOMPARE MBLOGIT to BRMS\n\n\nCODE\n# compare_models(mm.cat.CrSQ, Bmm.cat.CrSQ)\n\n\nThe predictions of the manual, frequentist mixed multinomial and bayesian mixed multinomial models are comparable."
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#h1b-q1-accuracy",
    "href": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#h1b-q1-accuracy",
    "title": "7  SGC3A (Lab) Hypothesis Testing",
    "section": "H1B | Q1 ACCURACY",
    "text": "H1B | Q1 ACCURACY\nDo Ss in the IMPASSE condition have a higher likelihood of producing a correct response to the first question?\nThe graph comprehension task includes 15 questions completed in sequence. But the first question the reader encounters (Q1) is the most important, as it is their first exposure to the unconventional triangular coordinate system.\n\n\n\n\n\n\n\nResearch Question\nDoes the frequency of correct (vs) incorrect responses on the first question differ by condition? [Is response accuracy independent of condition?]\n\n\n\n\nHypothesis\nH1A | Ss in the IMPASSE condition will have a higher likelihood of correctly responding to the first question than those in the CONTROL condition\n\n\nData\n\ndata: df_items where q == 1\noutcome: accuracy ( factor(incorrect/correct) from score_niceABS [absolute score]\npredictor: condition [between-subjects factor]\n\n\n\nAnalysis Strategy\n\nLogistic Regression on accuracy predicted by condition\n\naccount for difference in odds of correct score by condition\n\n\nAlternatives:\n\nChi-Square test of independence on outcome accuracy by condition\n\n\n\nNotes\n\nCHIQ SQR is simplest method to examine independence of two categorical factors; LOGISTIC REGRESSION is recommended for binomial ~ continuous; though with regression we can quantify the size of the effect and overall model fit\nindependence assumption : (CHI SQR) as we only consider responses on the first question, each observation corresponds to an individual subject, and are thus independent\ncell frequency : (CHI SQR) expected frequency in each cell of the contingency table is greater than 5 (more than 5 correct , more than 5 incorrect responses)\n\n\n\n\n\nSetup\n\n\nCODE\ndf <- df_items %>% filter(q==1)  %>% dplyr::select(accuracy, pretty_condition)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~pretty_mode) + \n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Accuracy\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Impasse Condition yields a greater proportion of correct responses\")\n\n\n\n\n\nA proportional bar chart visualizing the proportion of incorrect (vs) correct responses in each condition for each data collection modality (left/right facet) reveals that the pattern of responses appear the same regardless of the data collection modality. In both data collection sessions, the proportion of incorrect responses is much greater than the proportion of correct responses, regardless of condition (marginal probability of incorrect). In the impasse condition, the difference in proportions is smaller than the control condition (conditional probability of success in impasse; (i.e) There are more correct responses in the impasse condition than the control condition).\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\npaste(\"Proportions of Correct Responses by Condition\")\n\n\n[1] \"Proportions of Correct Responses by Condition\"\n\n\nCODE\ntable(df$accuracy, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n           \n            control impasse   Sum\n  incorrect   0.839   0.703 0.770\n  correct     0.161   0.297 0.230\n  Sum         1.000   1.000 1.000\n\n\nCODE\npaste(\"Number of Correct Responses by Condition\")\n\n\n[1] \"Number of Correct Responses by Condition\"\n\n\nCODE\ntable(df$accuracy, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      addmargins(1) #sanity check sum of columns\n\n\n           \n            control impasse Sum\n  incorrect      52      45  97\n  correct        10      19  29\n  Sum            62      64 126\n\n\n\n\nLOGISTIC REGRESSION\nFit a logistic regression predicting accuracy (absolute score) (n = 126) by condition (k = 2).\n\n\nParameter estimate: \\(\\beta_{0}\\) = Log Odds of (correct) responses in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of correct response in CONTROL condition\nParameter estimate: \\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for correct response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of correct response in IMPASSE (vs) CONTROL\nNull hypothesis:\\(\\beta_{impasse} \\le 0\\) the odds for a correct response does not change, or decreases\nAlternative hypothesis: \\(\\beta_{impasse} \\gt 0\\) the odds of a correct response increases\n\n\nFit Model\nFirst, we fit a logistic regression with condition as predictor, and compare its fit to an empty (intercept-only) model.\n\n\nCODE\n# MODEL FITTING ::::::::\n\n#: 1 EMPTY MODEL baseline glm model intercept only\nm0 = glm(accuracy ~ 1, data = df, family = \"binomial\")\n# print(\"EMPTY MODEL\")\n# summary(m0)\n\n#: 2 CONDITION model\nm1 <- glm( accuracy ~ pretty_condition, data = df, family = \"binomial\")\n# print(\"PREDICTOR MODEL\")\nsummary(m1)\n\n\n\nCall:\nglm(formula = accuracy ~ pretty_condition, family = \"binomial\", \n    data = df)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-0.839  -0.839  -0.593  -0.593   1.910  \n\nCoefficients:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -1.649      0.345   -4.77  1.8e-06 ***\npretty_conditionimpasse    0.786      0.441    1.79    0.074 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 135.95  on 125  degrees of freedom\nResidual deviance: 132.63  on 124  degrees of freedom\nAIC: 136.6\n\nNumber of Fisher Scoring iterations: 4\n\n\nCODE\ncar::Anova(m1)\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: accuracy\n                 LR Chisq Df Pr(>Chisq)  \npretty_condition     3.31  1      0.069 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#: 3 TEST SUPERIOR FIT\npaste(\"AIC wth predictor is lower than empty model?\", m0$aic > m1$aic)\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(m0,m1) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName | Model | df | df_diff | Chi2 |     p\n------------------------------------------\nm0   |   glm |  1 |         |      |      \nm1   |   glm |  2 |       1 | 3.31 | 0.069\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(m0,m1))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0687084837283363\"\n\n\nThe Condition predictor decreases AIC, but the Likelihood Ratio Test is marginal. We proceed to examine the predictor model, as we plan to do a 1-tailed NHST .\n\n\nDescribe\n\n\nCODE\n#best model \nm <- m1\n\n# DESCRIBE MODEL ::::::::::::::::::::::::::::::::::::: \n\nprint(\"PREDICTOR MODEL [default two-tailed sig test]\")\n\n\n[1] \"PREDICTOR MODEL [default two-tailed sig test]\"\n\n\nCODE\nsummary(m)\n\n\n\nCall:\nglm(formula = accuracy ~ pretty_condition, family = \"binomial\", \n    data = df)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-0.839  -0.839  -0.593  -0.593   1.910  \n\nCoefficients:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -1.649      0.345   -4.77  1.8e-06 ***\npretty_conditionimpasse    0.786      0.441    1.79    0.074 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 135.95  on 125  degrees of freedom\nResidual deviance: 132.63  on 124  degrees of freedom\nAIC: 136.6\n\nNumber of Fisher Scoring iterations: 4\n\n\nCODE\ncar::Anova(m)\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: accuracy\n                 LR Chisq Df Pr(>Chisq)  \npretty_condition     3.31  1      0.069 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n# MANUAL ONE-SIDED SIGTEST ::::::::::::::::::::::::::: \n\n# one-sided (right tail) z test for B COEFFICIENT\n#https://stats.stackexchange.com/questions/330655/strategy-for-a-one-sided-test-of-glms-coefficients\n\n#SANITY CHECK 2-tailed test should match the model output\n##TODO need to do for each coeff\n# tt <- 2*pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,3))\n# ot <- pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"BUT we want a one tailed directional, null: B <= 0: \",round(ot,3))\n# paste(\"adjusted confint for directional hypothesis\")\n# (dcint <- confint(m, level = 0.90)) # get 90% for right side))\n# https://stats.stackexchange.com/questions/20734/is-a-1-sided-90-prediction-interval-equivalent-to-a-2-sided-95-prediction-inte\n\n#:::::::: INTERPRET COEFFICIENTS\n\n# print(\"Confidence Interval —- LOG ODDS\")\n# confint(m1) #not adjusted for 1-tailed\n# print(\"Coefficients —- ODDS RATIOS\")\n# (e <- cbind( exp(coef(m1)), exp(confint(m1)))) #exponentiated, not adjusted\n# (e <- cbind( exp(coef(m1)), exp(dcint))) #exponentiated, adjusted\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n# (l <- describe_posterior(m))\n(tm <- tidy(m,   conf.int = TRUE))\n\n\n# A tibble: 2 × 7\n  term                   estimate std.error statistic p.value conf.low conf.high\n  <chr>                     <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n1 (Intercept)              -1.65      0.345     -4.77 1.80e-6  -2.39       -1.02\n2 pretty_conditionimpas…    0.786     0.441      1.79 7.42e-2  -0.0595      1.68\n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nParameter                  | Odds Ratio |   SE |       95% CI |     z |      p\n------------------------------------------------------------------------------\n(Intercept)                |       0.19 | 0.07 | [0.09, 0.36] | -4.77 | < .001\npretty condition [impasse] |       2.20 | 0.97 | [0.94, 5.38] |  1.79 | 0.074 \n\n\n\nUncertainty intervals (profile-likelihood) and p-values (two-tailed)\n  computed using a Wald z-distribution approximation.\n\n\nCODE\nprint(\"MODEL PREDICTIONS\")\n\n\n[1] \"MODEL PREDICTIONS\"\n\n\nCODE\n# Retrieve predictions as probabilities \n# (for each level of the predictor)\npred.control <- predict(m1,data.frame(pretty_condition=\"control\"),type=\"response\")\n#this should match : plogis(intercept coefficient)\npaste(\"Probability of success in control,\", pred.control)\n\n\n[1] \"Probability of success in control, 0.161290322580645\"\n\n\nCODE\npred.impasse <- predict(m1,data.frame(pretty_condition=\"impasse\"),type=\"response\")\n#this should match : plogis(intercept coefficient + predictor coeff)\npaste(\"Probability of success in impasse,\", pred.impasse)\n\n\n[1] \"Probability of success in impasse, 0.296875000000275\"\n\n\n\n\nInference\nWe fit a logistic regression model to explore the effect of experimental condition on probability of a correct answer on the first question. In this model, the effect of condition is statistically significant (z = 1.79, p = 0.04, one-tailed). The model predicts that the odds of a correct response on the first question in the impasse condition increase by nearly 120% (\\(e^{beta_{impasse}}\\) = 2.19, 95% CI [1.08, 4.63]) over the control condition. The intercept** \\(\\beta_{0}\\) **parameter is also significant, (\\(e^{b_{0}}\\) = 0.19, p < 0.001, 95% CI [0.11, 0.33]) indicating that the odds of a correct response in the control condition are significantly less than even (less than 50/50 chance of correct response in control condition).\nEquivalent statements:\n\nbeing in impasse condition increases log odds of correct response by 0.79 (over control)\nbeing in impasse increases odds of correct response in impasse over control increases by factor of 2.19\nprobability of correct response in impasse predicted as 30%, vs only 16% in control condition\n\n\n\nVisualize\n\n\nCODE\n#SET MODEL\nm <- m1\n\n#GGSTATS | MODEL | LOG ODDS \n# ggcoefstats(m1, output = \"plot\", \n#               conf.level = 0.90) + \n#   labs(x = \"Log Odds Estimate\", \n#        title = \"LOGODDS | Q1 Accuracy ~ condition\",\n#        subtitle = \"(p is for two tailed test)\")\n\n\n#PARAMETERS | MODEL | SIMULATED PARAMETERS\n# similar to bayesian dist of estimate\n# result <- simulate_parameters(m1)\n# #rename params so intercept is plotted \n# result$Parameter[1] <- \"condition [control]\"\n# result$Parameter[2] <- \"condition [impasse]\"\n# plot(result) \n\n#EQUIVALENCE TEST [not sure if appropriate for log model?]\n# https://journals.sagepub.com/doi/10.1177/2515245918770963#:~:text=Consequently%2C%20when%20reporting%20an%20equivalence,values%20is%20smaller%20than%20alpha.\n# https://easystats.github.io/parameters/reference/equivalence_test.lm.html\n# (result <- equivalence_test(m1, rule = \"classic\", component = c(\"all\")))\n# plot(result,   show_intercept = TRUE) + \n#   scale_y_discrete(labels = c(\"impasse\", \"control\")) + \n#   labs( title = \"Equivalence Test for Model Parameter Estimates\")\n\n\n#PARAMETERS | MODEL | ODDS RATIO \n# result <- model_parameters(m1,exponentiate = TRUE)\n# #rename params \n# result$Parameter[1] <- \"condition [control]\"\n# result$Parameter[2] <- \"condition [impasse]\"\n# plot(result,   show_intercept = TRUE) +  labs(\n#   title = \"Model Parameter Estimates\"\n# ) + theme_clean() + theme(legend.position=\"blank\")\n\n#SJPLOT | MODEL | ODDS RATIO\n#library(sjPlot)\nplot_model(m, type = \"est\",\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) +  #manually adjusted for directional test   \n  scale_y_continuous() + #remove to put on log scale x axis \n  scale_x_discrete(labels=c(\"control\",\"impasse\"))+\n  labs(title = \"MODEL ESTIMATE | Q1 Accuracy ~ condition\",\n       subtitle = \"Impasse increases odds of correct response on Q1\",\n       x = \"Condition\") + theme_clean()\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"pred\")[[1]] +\n  ylim(0,1) + #scale y axis to actual range\n  labs(title = \"MODEL PREDICTION  | Q1 Accuracy ~ condition\",\n       subtitle = \"Impasse increases probability of correct response on Q1\",\n       x = \"Condition\") + theme_clean()\n\n\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.19\n0.09 – 0.36\n<0.001\n\n\npretty condition[impasse]\n2.20\n0.94 – 5.38\n0.074\n\n\nObservations\n126\n\n\nR2 Tjur\n0.026\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report::report(m1)\n\n#print(\"MODEL PERFORMANCE\")\n# performance(m1)\n\nprint(\"MODEL DIAGNOSTICS\")\n\n\n[1] \"MODEL DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m1)"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#h1b-q1-interpretation-state",
    "href": "analysis/SGC3A/4_sgc3A_lab_hypotesting.html#h1b-q1-interpretation-state",
    "title": "7  SGC3A (Lab) Hypothesis Testing",
    "section": "H1B | Q1 INTERPRETATION STATE",
    "text": "H1B | Q1 INTERPRETATION STATE\nDo Ss in the IMPASSE condition offer less-orthogonal interpretations on first question?\nWhile absolute accuracy score tells us whether a participant successfully interpreted the coordinate system, it doesn’t allow us to differentiate between different kinds of incorrect interpretations. Here we examine the (categorical) interpretation state type based on the nature of subject’s response, and determine if these interpretations differ by experimental condition. State is a 3-category derived response variable that groups the following interpretations:\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular and ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n\n\n\n\n\n\n\n\nResearch Question\nDoes Ss in the impasse condition produce less orthogonal responses on the first question?\n\n\n\n\nHypothesis\nH1A | Ss in the IMPASSE condition will have a higher likelihood of producing unknown and and triangle-like response states, relative to orthogonal response states, on the first question\n\n\nData\n\ndata: df_items where q == 1\noutcome: state ( 4 level factor from 5 level high_interpretation )\npredictor: condition [between-subjects factor]\n\n\n\nAnalysis Strategy\n\nMultinomial (Logistic) Regression on state predicted by condition\n\nAlternative:\n\nOrdinal regression on state; but model doesn’t satisfy proportional odds assumption (parallel slopes)\nMultinomial or Ordinal regression on high_interpretation (5 category interpretation state which distinguishes between uncertain (blank, reference) unclassifiable, triangle-like and true triangular.) There are some cells with zeros, however (no uncertain responses in control) which means the model can’t accurately estimate those comparisons\n\n\n\n\n\nSetup\n\n\nCODE\ndf <- df_items %>% filter(q==1) %>% dplyr::select(pretty_condition, state)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~pretty_mode) + \n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Interpretation\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nA proportional bar chart visualizing the proportion of each interpretations type by condition for each data collection modality (left/right facet) reveals that the pattern of responses are similar regardless of the data collection modality, by differ by condition. In the impasse condition, there are more triangular responses than in control. We see that around half of the ‘incorrect’ (i.e. not triangular) responses in the impasse condition are not orthogonal-like, but “other/unknown”.\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df$state, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             control impasse    Sum\n  orthogonal  0.8065  0.3125 0.5556\n  other       0.0000  0.2812 0.1429\n  angular     0.0323  0.1094 0.0714\n  triangular  0.1613  0.2969 0.2302\n  Sum         1.0000  1.0000 1.0000\n\n\nCODE\n(t <- table(df$state, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n            \n             control impasse Sum\n  orthogonal      50      20  70\n  other            0      18  18\n  angular          2       7   9\n  triangular      10      19  29\n  Sum             62      64 126\n\n\n\n\nMULTINOMIAL REGRESSION\nDoes condition affect the response state of Q1?\nFit a logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\n3 equations will be estimated (# categories - 1); each representing the odds of answering in that particular interpretation (vs) the reference category (orthogonal answer) [essentially a series of binary logistic regressions, but instead of incorrect/correct, comparing [reference category] vs [this category])\nFor each equation:\n\n\\(\\beta_{0}\\) = Log Odds of [this category type vs. reference category type) response in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of [this category type vs. reference category type] response in CONTROL condition\n\\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for [this category] type response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of [this. vs reference category type] response in IMPASSE (vs) CONTROL\nTwo-tailed NHST Null hypothesis: \\(\\beta_{impasse} = 0\\) the odds for [this category of response vs. reference] are not different for IMPASSE condition\nAlternative hypothesis: \\(\\beta_{impasse} \\ne 0\\) the odds of [this category of response vs. reference] increases or decreases for IMPASSE condition\n\n\n\nTODO REDO BRMS Fit Model [MBLOGIT]\n\n\nCODE\n#check reference level \nprint(\"Categories (first is reference)\")\n\n\n[1] \"Categories (first is reference)\"\n\n\nCODE\nlevels(df$state)\n\n\n[1] \"orthogonal\" \"other\"      \"angular\"    \"triangular\"\n\n\nCODE\n#FIT EMPTY MODEL\n# print(\"EMPTY MODEL\")\nmbl.0 <- mblogit(state ~ 1, data = df)\n\n\n\nIteration 1 - deviance = 287 - criterion = 0.391\nIteration 2 - deviance = 285 - criterion = 0.00666\nIteration 3 - deviance = 285 - criterion = 0.0000143\nIteration 4 - deviance = 285 - criterion = 7.65e-11\nconverged\n\n\nCODE\n# summary(catm.0)\n\n#FIT PREDICTOR MODEL\n# print(\"PREDICTOR MODEL\")\nmbl.C <- mblogit(formula = state ~ pretty_condition, data = df, model = TRUE)\n\n\n\nIteration 1 - deviance = 248 - criterion = 0.295\nIteration 2 - deviance = 243 - criterion = 0.0202\nIteration 3 - deviance = 242 - criterion = 0.00509\nIteration 4 - deviance = 241 - criterion = 0.00176\nIteration 5 - deviance = 241 - criterion = 0.000646\nIteration 6 - deviance = 241 - criterion = 0.000237\nIteration 7 - deviance = 241 - criterion = 0.0000873\nIteration 8 - deviance = 241 - criterion = 0.0000321\nIteration 9 - deviance = 241 - criterion = 0.0000118\nIteration 10 - deviance = 241 - criterion = 4.34e-06\nIteration 11 - deviance = 241 - criterion = 1.6e-06\nIteration 12 - deviance = 241 - criterion = 5.88e-07\nIteration 13 - deviance = 241 - criterion = 2.16e-07\nIteration 14 - deviance = 241 - criterion = 7.95e-08\nIteration 15 - deviance = 241 - criterion = 2.93e-08\nIteration 16 - deviance = 241 - criterion = 1.08e-08\nIteration 17 - deviance = 241 - criterion = 3.96e-09\nconverged\n\n\nCODE\n#IDENTICAL TO MULTINOM() FROM nnet.. but multinom doesn't handle mixed\n#so use mblogit for consistency, but need catm for anova test\ncatm <- multinom(formula = state ~ pretty_condition, data = df, model = TRUE)\n\n\n# weights:  12 (6 variable)\ninitial  value 174.673090 \niter  10 value 120.901765\niter  20 value 120.556256\nfinal  value 120.530772 \nconverged\n\n\nCODE\n#COMPARE MODEL FIT\npaste(\"AIC wth predictor is lower than empty model?\", AIC(mbl.0) > AIC(mbl.C))\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(mbl.0, mbl.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName  |   Model | df | df_diff |  Chi2 |      p\n-----------------------------------------------\nmbl.0 | mblogit |  3 |         |       |       \nmbl.C | mblogit |  6 |       3 | 67.88 | < .001\n\n\nCODE\n##compare bayesian version\n#library(brms)\n# b.cat <- brm( state2 ~ pretty_condition, data = df, family = \"categorical\", backend = \"cmdstanr\")\n# summary(b.cat)\n# plot_model(b.cat)\n# report(b.cat)\n# coefficient estimates are very simliar to catm. super cool!\n\n##compare mclogit version\n#\"baseline-category logit model\n# https://www.elff.eu/software/mclogit/manual/mblogit/\n# blm1 <- mblogit(state2 ~ pretty_condition , data = df)\n# summary(blm1)\n#identical to catm. super cool!\n\n\nAIC in predictor model is less than empty model, and likelihood ratio test indicates predictor model is significantly better fit to the sample data than the empty (intercept only) model.\n\n\nDescribe\n\n\nCODE\n#set model\nm <- mbl.C\n\n#confirm models match \ncompare_models(mbl.C, catm)\n\n\nParameter                          |                      mbl.C |                     catm\n------------------------------------------------------------------------------------------\n(Intercept)                        |                            | -12.14 (-133.18, 108.90)\n(Intercept)                        |                            |  -3.22 (  -4.65,  -1.79)\n(Intercept)                        |                            |  -1.61 (  -2.30,  -0.92)\nother~(Intercept)                  | -19.01 (-3748.94, 3710.93) |                         \nangular~(Intercept)                |  -3.22 (   -4.64,   -1.80) |                         \ntriangular~(Intercept)             |  -1.61 (   -2.29,   -0.93) |                         \nother~pretty conditionimpasse      |  18.90 (-3711.03, 3748.84) |                         \nangular~pretty conditionimpasse    |   2.17 (    0.51,    3.83) |                         \ntriangular~pretty conditionimpasse |   1.56 (    0.63,    2.49) |                         \npretty condition (impasse)         |                            |  12.03 (-109.01, 133.08)\npretty_conditionimpasse            |                            |   2.17 (   0.50,   3.84)\npretty_conditionimpasse            |                            |   1.56 (   0.62,   2.49)\n------------------------------------------------------------------------------------------\nObservations                       |                        126 |                      126\n\n\nCODE\n#::::::::: PRINT MODEL \npaste(\"MODEL SUMMARY\")\n\n\n[1] \"MODEL SUMMARY\"\n\n\nCODE\nsummary(m)\n\n\n\nCall:\nmblogit(formula = state ~ pretty_condition, data = df, model = TRUE)\n\nEquation for other vs orthogonal:\n                        Estimate Std. Error z value Pr(>|z|)\n(Intercept)                -19.0     1896.9   -0.01     0.99\npretty_conditionimpasse     18.9     1896.9    0.01     0.99\n\nEquation for angular vs orthogonal:\n                           Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  -3.219      0.721   -4.46  8.1e-06 ***\ntri(Intercept)               -1.609      0.346   -4.65  3.4e-06 ***\npretty_conditionimpasse       2.169      0.844    2.57  0.01020 *  \ntripretty_conditionimpasse    1.558      0.472    3.30  0.00096 ***\n\nEquation for triangular vs orthogonal:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -1.609      0.346   -4.65  3.4e-06 ***\npretty_conditionimpasse    1.558      0.472    3.30  0.00096 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNull Deviance:     349 \nResidual Deviance: 241 \nNumber of Fisher Scoring iterations:  17 \nNumber of observations:  126 \n\n\nCODE\npaste(\"SIGNIFICANCE TEST\")\n\n\n[1] \"SIGNIFICANCE TEST\"\n\n\nCODE\n# car::Anova(mbl.C)\ncar::Anova(catm)\n\n\n# weights:  8 (3 variable)\ninitial  value 174.673090 \niter  10 value 142.524790\nfinal  value 142.523561 \nconverged\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: state\n                 LR Chisq Df Pr(>Chisq)    \npretty_condition       44  3    1.5e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n# (l <- describe_posterior(m))\n(tm <- tidy(m,   conf.int = TRUE))\n\n\nWarning: The `tidy()` method for objects of class mblogit is not maintained by\nthe broom team, and is only supported through the lm tidier method. Please be\ncautious in interpreting and reporting broom output.\n\n\n# A tibble: 6 × 7\n  term                   estimate std.error statistic p.value conf.low conf.high\n  <chr>                     <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n1 other~(Intercept)        -19.0   1897.     -0.0100  9.92e-1 -3.75e+3  3711.   \n2 angular~(Intercept)       -3.22     0.721  -4.46    8.05e-6 -4.64e+0    -1.80 \n3 triangular~(Intercept)    -1.61     0.346  -4.65    3.38e-6 -2.29e+0    -0.928\n4 other~pretty_conditio…    18.9   1897.      0.00997 9.92e-1 -3.71e+3  3749.   \n5 angular~pretty_condit…     2.17     0.844   2.57    1.02e-2  5.09e-1     3.83 \n6 triangular~pretty_con…     1.56     0.472   3.30    9.59e-4  6.30e-1     2.49 \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nParameter                          | Coefficient |       SE |           95% CI | Statistic |  df |      p\n---------------------------------------------------------------------------------------------------------\nother~(Intercept)                  |    5.56e-09 | 1.05e-05 | [0.00,      Inf] |     -0.01 | 372 | 0.992 \nangular~(Intercept)                |        0.04 |     0.03 | [0.01,     0.17] |     -4.46 | 372 | < .001\ntriangular~(Intercept)             |        0.20 |     0.07 | [0.10,     0.40] |     -4.65 | 372 | < .001\nother~pretty conditionimpasse      |    1.62e+08 | 3.07e+11 | [0.00,      Inf] |  9.97e-03 | 372 | 0.992 \nangular~pretty conditionimpasse    |        8.75 |     7.39 | [1.66,    46.03] |      2.57 | 372 | 0.011 \ntriangular~pretty conditionimpasse |        4.75 |     2.24 | [1.88,    12.01] |      3.30 | 372 | 0.001 \n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a Wald distribution approximation.\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\nnewdata <- df %>% dplyr::select(pretty_condition)\npreds <- predict(catm, newdata = newdata, type = \"probs\")\npreds <- cbind(newdata, preds)\n#LENGTHEN TO HANDLE MULTINOMIAL\npreds <- preds %>%\n  # dplyr::select(-subject, -q) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = !pretty_condition,\n  values_to = \"preds\",\n  names_to = \"state\",\n)\n\n(p <- preds %>%\n  group_by(pretty_condition, state ) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 8 × 6\n# Groups:   pretty_condition [2]\n  pretty_condition state          median    se        lwr        upr\n  <fct>            <chr>           <dbl> <dbl>      <dbl>      <dbl>\n1 control          angular    0.0323         0 0.0323     0.0323    \n2 control          orthogonal 0.806          0 0.806      0.806     \n3 control          other      0.00000432     0 0.00000432 0.00000432\n4 control          triangular 0.161          0 0.161      0.161     \n5 impasse          angular    0.109          0 0.109      0.109     \n6 impasse          orthogonal 0.312          0 0.312      0.312     \n7 impasse          other      0.281          0 0.281      0.281     \n8 impasse          triangular 0.297          0 0.297      0.297     \n\n\n\n\nInference TODO\n\nBeing in the IMPASSE condition increases the odds of giving an unknown (potentially nonsense) or blank/uncertain response rather than an orthogonal (or satisficing) response by a factor of 45 (z = 3.81, p < 0.001) . Participants in the impasse condition were 45x as likely to give an unknown/uncertain response rather than an orthogonal response compared to participants in control.\nBeing in the IMPASSE condition increases the odds of giving ‘triangle-like’ response rather than an orthogonal (or satisficing) response by a factor of 17.5 (z = 2.60, p < 0.001 ). Participants in the impasse condition were almost 6x as likely to give an a triangular response rather than an orthogonal response compared to participants in control.\nBeing in the IMPASSE condition increases the odds of giving ‘triangle-like’ response rather than an orthogonal (or satisficing) response by a factor of 4.8 (z = 3.30, p < 0.001 ). Participants in the impasse condition were almost 6x as likely to give an a triangular response rather than an orthogonal response compared to participants in control.\nAs with the (binary) logistic regression on accuracy ~ condition, significant model intercepts indicate that the odds of being in any particular response state (vs) orthogonal are significantly different than 1 in the control condition. (i.e. not 1:1 odds or 50% chance of being in that response state. Orthogonal is a much more probable response state in control)\n[need to to double check interpretation, but I think that the OR intercepts converted to probabilities equate to the marginal probability of being in each state in the control condition. which makes sense. I think.?]\nIF I change reference category for condition… then the intercepts should no longer be significant. The b1 coefficients should still be significant, but with changed sign (much less likely) [Yup! this works!]\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\n\n\nWarning: Could not estimate a good default ROPE range. Using 'c(-0.1, 0.1)'.\n\n\nCODE\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n#TODO NEED FIX THIS\n# (d <- p %>%\n#   ggplot(aes(y = median,  x = state, fill = pretty_condition)) +\n#   geom_point() +\n#   geom_errorbar(aes(ymin = lwr, ymax = upr))\n#     # stat_slab(width = c(.95), alpha = 0.5, normalize=\"xy\")\n#   #   #normalize = all, panels, xy, groups, none\n#   # xlim(0,1) + labs(\n#   #   title = \"Model Predicted Probability of Correct Response\",\n#   #   x = \"probability of correct response\",\n#   #   y = \"Interpretation\"\n#   # ) +  theme_clean() #+ ggeasy::easy_remove_legend() +\n# )\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \nstate\n\n\nPredictors\nEstimates\nCI\np\n\n\nother~(Intercept)\n-19.01\n-3748.94 – 3710.93\n0.992\n\n\nangular~(Intercept)\n-3.22\n-4.64 – -1.80\n<0.001\n\n\ntriangular~(Intercept)\n-1.61\n-2.29 – -0.93\n<0.001\n\n\nother~prettyconditionimpasse\n18.90\n-3711.03 – 3748.84\n0.992\n\n\nangular~prettyconditionimpasse\n2.17\n0.51 – 3.83\n0.011\n\n\ntriangular~prettyconditionimpasse\n1.56\n0.63 – 2.49\n0.001\n\n\nObservations\n126\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n# modelsummary(mixcat.1, s)\n#TODO OUTPUT TABLE \n#https://arelbundock.com/posts/modelsummary_multinomial_logit/\n\n\n\n\nDiagnostics\n\n\nCODE\n#EXAMINE PREDICTIONS\n# #create sample data frame\n# test <- data.frame(pretty_condition = c(\"control\", \"impasse\"))\n# pred <- predict(catm, newdata = test, \"probs\")\n# paste(\"Predicted Probability of Being in Each State\")\n# ( x <- cbind(test, pred))\n\nprint(\"MODEL PERFORMANCE\")\n\n\n[1] \"MODEL PERFORMANCE\"\n\n\nCODE\nperformance(catm)\n\n\nCan't calculate log-loss.\nCan't calculate proper scoring rules for ordinal, multinomial or cumulative link models.\n\n\n# Indices of model performance\n\nAIC     |     BIC |    R2 | R2 (adj.) |  RMSE | Sigma\n-----------------------------------------------------\n253.062 | 270.079 | 0.154 |     0.147 | 0.363 | 1.417\n\n\nCODE\nDescTools::PseudoR2(catm, which = c(\"McFadden\", \"CoxSnell\", \"Nagelkerke\"))\n\n\n  McFadden   CoxSnell Nagelkerke \n     0.154      0.295      0.329"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html",
    "href": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html",
    "title": "8  SGC3A (Replication) Hypothesis Testing",
    "section": "",
    "text": "The purpose of this notebook is test the hypotheses that determined the design of the SGC3A study (online replication, without OSPAN).\nResearch Questions\nIn SGC3A we set out to answer the following question: Does posing a mental impasse improve performance on the interval graph comprehension task?\nExperimental Hypothesis\nLearners posed with scenario designed to evoke a mental impasse will be more likely to correct interpret the graph.\nNull Hypothesis\nNo significant differences in performance will exist between learners in the IMPASSE and CONTROL conditions."
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#sample",
    "href": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#sample",
    "title": "8  SGC3A (Replication) Hypothesis Testing",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\nData was collected (online, via SONA) in Fall 2021 and Winter 2022, for the purpose of verifying the use of the graph comprehension task for online, asynchronous data collection.\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Control Condition\",\"Impasse Condition\",\"Total for Period\")\ncont <- table(df_subjects$term, df_subjects$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n      \n    Control Condition \n    Impasse Condition \n    Total for Period \n  \n \n\n  \n    fall21 \n    3 \n    3 \n    6 \n  \n  \n    winter22 \n    28 \n    37 \n    65 \n  \n  \n    Sum \n    31 \n    40 \n    71 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.male <- ((df_subjects %>% filter(gender==\"Male\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.female <- ((df_subjects %>% filter(gender==\"Female\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.other <- ((df_subjects %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())/count(df_subjects))$n\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n     \n    18 \n    20 \n    20 \n    21 \n    27 \n    20.6 \n    1.61 \n    71 \n    0 \n    0.282 \n    0.676 \n    0.042 \n  \n\n\nNote:   Age in Years\n\n\n\n\nREPORTED\nOverall 71 participants (28 % male, 68 % female, 4 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 27 years)."
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#h1a-overall-accuracy",
    "href": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#h1a-overall-accuracy",
    "title": "8  SGC3A (Replication) Hypothesis Testing",
    "section": "H1A | OVERALL ACCURACY",
    "text": "H1A | OVERALL ACCURACY\n\n\n\n\n\n\n\nResearch Question\nDo Ss in the IMPASSE condition score higher across the entire task than those in the CONTROL group?\n\n\n\n\nHypothesis\n(H1) Participants in the IMPASSE condition will be more likely to correctly interpret the graph than those in the CONTROL condition.\n\n\nData\ndata: df_items where q nin 6,9 (the 13 discriminating Qs ), df_subjects\noutcome:\n\n[at item level] : accuracy ( factor(incorrect/correct) from score_niceABS [absolute score]\n[subject level]: accuracy (number of test phase qs correct from total s_NABS)\n\npredictor: condition [between-subjects factor]\n\n\nAnalysis Strategy\n\nWilcoxon-Rank Sum (Mann-Whitney) test on subject-level total accuracy of test phase (s_NABS)\nMixed Logistic Regression\naccuracy ~ condition + (1 | subject ) + (1 | question)\nmodel effect of condition on probability of correct response [during test phase] while accounting for subject (and item-level?) effects\n\n\n\nAlternatives\n\nOrdinal Mixed Logistic Regression on scaled_score\nOLS Linear Regression: bimodal distribution at tails makes the mean a poor predictor; LMs violate assumptions of normally distributed residuals; both absolute and scaled scores yield non-normal residuals; no transformation of the outcome variables yield normal residuals\n\n\n\nNotes\nAlso exploring:\n\nHurdle model (mixture model w/ binomial + [poisson or negbinom count; 0s from 1 DGP)\nZero Inflated model (mixture model w/ binomial + poisson or negbinom count; 0s from 2 DGPs)\nBeta regression hurdle model? (mixture with location and scale parameters [mean, variance] and hurdles for floor and ceiling effects)\nOther way to account for the severe bimodality?\n\n\n\n\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% \n  dplyr::select(pretty_condition, accuracy, subject,q)\n\ndf_s <- df_subjects %>% \n   dplyr::select(pretty_condition, task_percent)\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  # scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 2))+\n  scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~pretty_mode) + \n  # coord_flip() +\n  theme(legend.position=\"bottom\")+\n   labs(title = \"STUDY 3A (online replication) | DISTRIBUTION of Question Accuracy\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"Impasse Condition yields a greater proportion of correct responses\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_items %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~q) +\n   labs(title = \"STUDY 3 (online replication) | DISTRIBUTION of Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Q6 and Q9 are non-discriminative\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\nstats = df_s %>% group_by(pretty_condition) %>% dplyr::summarise(mean = mean(task_percent))\ngf_props(~task_percent,\n         fill = ~pretty_condition, data = df_s) %>%\n  # gf_facet_grid(pretty_condition ~ pretty_mode) %>%\n  gf_facet_grid(~pretty_condition) %>%\n  gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n  labs(x = \"% Correct\",\n       y = \"proportion of subjects\",\n       title = \"DISTRIBUTION | Total Absolute Score (% Correct)\",\n       subtitle = \"\") + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nCODE\n#:::::::: RAINCLOUD WITH STATS\n  \ndf <- df_s %>% mutate(task_percent = task_percent*100)\n\np <-   ggbetweenstats(data = df, x = pretty_condition, y = task_percent,\n               plot.type = \"box\", type = \"nonparametric\", var.equal = FALSE,\n               centrality.type = \"parametric\",\n               # package = \"RColorBrewer\",\n               # palette = \"PRGn\",\n               centrality.point.args = list(color=\"black\", size = 3, shape = 1),\n               point.args = list(alpha=0), #suppress points\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  # aes(color = pretty_condition, fill = pretty_condition),\n                  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  # scale_fill_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  theme(axis.text.x = element_text(angle = 90)))\n               ) +\n  ggdist::stat_halfeye(\n    alpha = 0.7, \n    point_colour = NA,\n    adjust = .5, \n    width = .5, .width = 0, \n    justification = -.5) +\n  geom_boxplot(\n    alpha = 0.1,\n    width = .2, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 2,\n    alpha = .5,\n    position = position_jitter(\n      seed = 1, width = .08, height = 1.5\n    )\n  )  +\ncoord_flip() + theme_clean() + theme(legend.position = \"blank\")\np$layers[[3]]=NULL #remove default boxplot\ne <- statsExpressions::two_sample_test(y = task_percent, x = pretty_condition, data = df,\n                                type = \"nonparametric\", alternative = \"less\",\n                                var.equal = FALSE)\n#labels are layer 4\np <- p + labs(title = \"STUDY 3A (Online Replication) | Distribution of Total Score\",\n         y = \"Percentage of correct responses across task\", x = \"\",\n         # caption=e$expression[[1]],\n         subtitle = \"Impasse condition yields greater variance and more high scores\")\n\np\n\n\n\n\n\nCODE\nggsave(p, filename = \"figures/SGC3A_REP_totalscore.png\", width = 6, height =4)\n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct)\"\ntbl1 <- mosaic::favstats(~task_percent, data = df_s) \ntbl1 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0 \n    0 \n    0.077 \n    0.769 \n    1 \n    0.32 \n    0.392 \n    71 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\"\ntbl2 <- mosaic::favstats(task_percent ~ pretty_condition, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\n \n  \n    pretty_condition \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    control \n    0 \n    0.000 \n    0.000 \n    0.269 \n    1 \n    0.236 \n    0.372 \n    31 \n    0 \n  \n  \n    impasse \n    0 \n    0.058 \n    0.115 \n    0.846 \n    1 \n    0.385 \n    0.399 \n    40 \n    0 \n  \n\n\n\n\n\n\nWILCOXON RANK SUM (Mann-Whitney Test)\n\nNon parametric alternative to t-test; compares median rather than mean by ranking data\nDoes not assume normality\nDoes not assume equal variance of samples (homogeneity of variance)\n\n\nTest\n\n\nCODE\n(w <- wilcox.test(df_s$task_percent ~ df_s$pretty_condition,\n                 paired = FALSE, alternative = \"less\")) #less, greater\n\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  df_s$task_percent by df_s$pretty_condition\nW = 457, p-value = 0.03\nalternative hypothesis: true location shift is less than 0\n\n\nCODE\nreport(w)\n\n\nEffect sizes were labelled following Funder's (2019) recommendations.\n\nThe Wilcoxon rank sum test with continuity correction testing the difference in\nranks between df_s$task_percent and df_s$pretty_condition suggests that the\neffect is negative, statistically significant, and medium (W = 457.00, p =\n0.026; r (rank biserial) = -0.26, 95% CI [-1.00, -0.04])\n\n\n\n\nInference – DIRECTIONAL EFFECT\n\n\nVisualize\n\n\nCODE\nggbetweenstats( x = pretty_condition, y = task_percent, data = df_s,\n                type = \"nonparametric\", var.equal = FALSE)\n\n\n\n\n\n\n\n\nMIXED LOGISTIC REGRESSION\nFit a mixed logistic regression (at the item level), predicting accuracy (absolute score) on all discriminating questions by condition; accounting for random effects of subject and item.\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 13\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy)\n\n\n[1] TRUE\n\n\nCODE\n## 1 | SETUP RANDOM INTERCEPT SUBJECT\n\n#:: EMPTY MODEL (baseline, no random effect)\nprint(\"Empty fixed model\")\n\n\n[1] \"Empty fixed model\"\n\n\nCODE\nm0 = glm(accuracy ~ 1, family = \"binomial\", data = df_i) \n# summary(m0)\n\n#:: RANDOM INTERCEPT SUBJECT\nprint(\"Subject intercept random model\")\n\n\n[1] \"Subject intercept random model\"\n\n\nCODE\nmm.rS <- glmer(accuracy ~ (1|subject), data = df_i, family = \"binomial\")\n# summary(mm.rS)\n\n# :: TEST random effect\npaste(\"AIC decreases w/ new model?\", m0$aic > AIC(logLik(mm.rS)))\n\n\n[1] \"AIC decreases w/ new model? TRUE\"\n\n\nCODE\ntest_lrt(m0,mm.rS) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName  |    Model | df | df_diff |   Chi2 |      p\n-------------------------------------------------\nm0    |      glm |  1 |         |        |       \nmm.rS | glmerMod |  2 |       1 | 542.98 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(m0,mm.rS))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  4.24706346098158e-120\"\n\n\nCODE\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n# :: TEST random effect\npaste(\"AIC decreases w/ new model?\", AIC(logLik(mm.rS)) > AIC(logLik(mm.rSQ)))\n\n\n[1] \"AIC decreases w/ new model? TRUE\"\n\n\nCODE\ntest_lrt(mm.rS, mm.rSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\nSome of the nested models seem to be identical and probably only vary in\n  their random effects.\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff |  Chi2 |      p\n-------------------------------------------------\nmm.rS  | glmerMod |  2 |         |       |       \nmm.rSQ | glmerMod |  3 |       1 | 16.08 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rS, mm.rSQ))$p[2])\n\n\nSome of the nested models seem to be identical and probably only vary in\n  their random effects.\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0000608083810989485\"\n\n\nCODE\n## 2 | ADD FIXED EFFECT CONDITION\n\nprint(\"FIXED Condition + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.CrSQ <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n#summary(mm.CrSQ)\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.CrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.CrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff | Chi2 |     p\n------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |      |      \nmm.CrSQ | glmerMod |  4 |       1 | 4.19 | 0.041\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rSQ,mm.CrSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0405529998876994\"\n\n\nCODE\n# control = glmerControl(optimizer=\"bobyqa\", optCtrl=list(maxfun=2e5)))\n\n\nA likelihood ratio test indicates adding CONDITION as a fixed effect to a logistic regression model including a fixed effect random intercepts for SUBJECT and QUESTION explains more variance in the data than random-effects only model.\n\n\nDescribe\n\n\nCODE\n#::::::::: SETUP\nm <- mm.CrSQ\nm %>% write_rds(file = \"analysis/SGC3A/models/sgc3a_glmer_acc_mm.CrSQ_REP.rds\")\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ pretty_condition + (1 | subject) + (1 | q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n     601      621     -297      593      919 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-6.283 -0.231 -0.091  0.212  5.031 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 14.905   3.861   \n q       (Intercept)  0.545   0.738   \nNumber of obs: 923, groups:  subject, 71; q, 13\n\nFixed effects:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -3.542      0.944   -3.75  0.00018 ***\npretty_conditionimpasse    2.204      1.105    1.99  0.04619 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr)\nprtty_cndtn -0.771\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n                 Chisq Df Pr(>Chisq)  \npretty_condition  3.97  1      0.046 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\npaste(\"MODEL INFO\")\n\n\n[1] \"MODEL INFO\"\n\n\nCODE\nglance(m)\n\n\n# A tibble: 1 × 7\n   nobs sigma logLik   AIC   BIC deviance df.residual\n  <int> <dbl>  <dbl> <dbl> <dbl>    <dbl>       <int>\n1   923     1  -297.  601.  621.     367.         919\n\n\nCODE\n#:::::::: MANUAL ONE-SIDED SIGTEST \n#note: anova and chi square are always one-tailed, but that is independent of being one-sided\n#https://www.ibm.com/support/pages/can-one-get-one-tailed-tests-logistic-regression-dividing-significance-levels-half\n# one-sided (right tail) z test for B COEFFICIENT\n#SANITY CHECK 2-tailed test should match the model output\n# tt <- 2*pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,5))\n# ot <- pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"BUT we want a one  directional, null: B <= 0: \",round(ot,5))\n\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n# se <- sqrt(diag(stats::vcov(m)))\n# (tab <- cbind(Est = fixef(m),\n#               LL = fixef(m) - 1.96 * se,\n#               UL = fixef(m) + 1.96 * se))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 4 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…   -3.54      0.944     -3.75  1.75e-4  -5.39       -1.69\n2 fixed    <NA>   pret…    2.20      1.11       1.99  4.62e-2   0.0373      4.37\n3 ran_pars subje… sd__…    3.86     NA         NA    NA        NA          NA   \n4 ran_pars q      sd__…    0.738    NA         NA    NA        NA          NA   \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n# (e <- exp(tab))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 4 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…   0.0290    0.0273     -3.75  1.75e-4  0.00455     0.184\n2 fixed    <NA>   pret…   9.06     10.0         1.99  4.62e-2  1.04       79.1  \n3 ran_pars subje… sd__…   3.86     NA          NA    NA       NA          NA    \n4 ran_pars q      sd__…   0.738    NA          NA    NA       NA          NA    \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\n# newdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n# preds <- predict(m, newdata = newdata, type = \"response\")\n# preds <- cbind(newdata, preds)\n# p <- preds %>% \n#   dplyr::select(pretty_condition, preds) %>% \n#   group_by(pretty_condition) %>% \n#   summarise(\n#     median = median(preds),\n#     se = sd(preds)/sqrt(n()),\n#     lwr = median - 1.96*se,\n#     upr = median + 1.96*se)\n    \n  \n#FROM merTools\n#setup df \nnewdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(pretty_condition, fit, lwr, upr) %>% \n  group_by(pretty_condition) %>% \n  summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 2 × 4\n  pretty_condition median   lower upper\n  <fct>             <dbl>   <dbl> <dbl>\n1 control          0.0278 0.00474 0.147\n2 impasse          0.206  0.0516  0.555\n\n\n\n\nINFERENCE — SIGNIFICANT EFFECT\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n\nmodels <- list(\"odds ratios\" = m, \"(log odds)\" = m)\ntitle = \"Study 3A (Online Replication) | Question Accuracy | Mixed Logistic Regression\"\nnotes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n             paste(\"n = \",n_obs(m), \"R^2(Conditional) =\", round(r2(m)[[1]],2),\n                   \"R^2(Marginal) =\", round(r2(m)[[2]],2)),\n             \"Accuracy  ~ Condition + (1 | subject) + (1 | q)\")\n\nmodelsummary(models,\n             exponentiate = c(TRUE, FALSE),\n             shape = term ~ model + statistic,\n             fmt = 2, #two digits w/ trailing zero\n             estimate  = \"{estimate} {stars}\",\n             statistic = \"conf.int\",\n             gof_map = c(\"AIC\", \"sigma\"),\n             gof_omit = 'RMSE|ICC|BIC',\n             coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n             title = title,\n             notes = notes,\n             output = \"tables/SGC3A_REP_GLMER_OverallAccuracy.tex\")\n\n\nWarning: To compile a LaTeX document with this table, the following commands must be placed in the document preamble:\n\n\\usepackage{booktabs}\n\\usepackage{siunitx}\n\\newcolumntype{d}{S[input-symbols = ()]}\n\nTo disable `siunitx` and prevent `modelsummary` from wrapping numeric entries in `\\num{}`, call:\n\noptions(\"modelsummary_format_numeric_latex\" = \"plain\")\n This warning appears once per session.\n\n\nCODE\n# #              # coef_omit = \"Intercept\",\n\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n\n#SJPLOT | MODEL | lOG ODDS\nplot_model(m, transform = NULL,\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.06, #manually adjust to account for directional test\n           ci.lvl = 0.95 ) + #manually adjusted for directional test   \n  labs(title = \"Model ESTIMATE | LOG ODDS\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, transform = \"exp\",\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.06, #manually adjust to account for directional test\n           ci.lvl = 0.95 ) + #manually adjusted for directional test   \n  labs(title = \"Model ESTIMATE | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result) + labs(\n#     title = \"Model ESTIMATE | ODDS RATIO\"\n#   )\n\n## | PLOT TESTS\n# result <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\n# plot(result)\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"eff\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type = \"pred\")[[1]]  +\n  ylim(0,1) +\n  labs(\n    title = \"Model PREDICTION | Probability of Accurate Response\",\n    subtitle = \"Impasse increases probability of correct response\",\n    y = \"Probability of Correct Response\", x = \"Condition\"\n  )\n\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\nCODE\n#GGDIST | MODEL | PREDICTED PROBABILITIES\npreds %>% \n  ggplot(aes( x = fit, y = pretty_condition, fill = pretty_condition)) + \n  stat_halfeye(alpha = 0.5, normalize = \"xy\") + \n  xlim(0,0.3) + theme_clean() + labs(\n    title = \"Model PREDICTION | Probability of Accurate Response\",\n    subtitle = \"TODO check preds to see if fixed or includes random\"\n  )\n\n\n\n\n\nCODE\n# SIMULATE FIXED EFFECTS\n# simulate values of fixed effects \n# (feEx <- FEsim(m,  oddsRatio = FALSE, n.sims = 1000))\n# PLOT estimates of fixed effects\n# plotFEsim(feEx) +\n#   theme_bw() + labs(title = \"Coefficient Plot of InstEval Model\",\n#                     x = \"Median Effect Estimate\")\n\n# SIMULATE RANDOM EFFECTS\n# simulate values of random effects\n# reEx <- REsim(m)\n# PLOT estimates of random effects\n# plotREsim(reEx)\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)\n\n\n\n\n\n\n\nSanity Check :: Bayesian\n\n\nCODE\n# ## 0 | SETUP\n# #confirm 13 items [all discriminating items]\n# nrow(df_i) / nrow(df_s) == 13\n# #confirm all factors \n# is.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy)\n# \n#\n# \n# print(\"FIXED Condition + Subject & Item random intercepts\")\n# Bmm.CrSQ <- brm( accuracy ~ pretty_condition + (1|subject) + (1|q), \n#                  data = df_i, \n#                  family = \"bernoulli\",\n#                  chains = 4, iter = 2000, warmup = 1000,\n#                  cores = 4, seed = 1234,\n#                  backend = \"cmdstanr\",\n#                  file =\"analysis/SGC3A/models/sgc3a_brms_acc_Bmm.CrSQ_REP.rds\")\n# \n# #get Priors \n# # describe_priors(Bmm.CrSQ)\n# \n# #GRAPHICAL POSTERIOR PREDICTION CHECKS\n# pp_check(Bmm.CrSQ)\n# \n# #DESCRIBE MODEL\n# (d <- describe_posterior(ci=.95, Bmm.CrSQ))\n# \n# #SEE MODEL\n# plot(pd(Bmm.CrSQ))\n# #convert to a pd value\n# (pds <- pd_to_p(d$pd))\n\n\nA likelihood ratio test indicates adding CONDITION as a fixed effect to a logistic regression model including a fixed effect random intercepts for SUBJECT and QUESTION explains more variance in the data than random-effects only model.\n\n\nCODE\n# #::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n# ##WORKING\n# ## VIS probability of correct response\n# #TAKES A REALLY LONG TIME\n# \n# #1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>%\n#   add_fitted_draws(Bmm.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(\"analysis/SGC3A/models/draws_BB.catCrSQ.rds\")\n# \n# #2| VISUALIZE PREDICTIONS | GGDIST\n# ##TODO figure out height normalization.\n# ##do it with much smaller number of draws \n# #TODO adjust bandwidth/smoothing? + put on same line + \n# #TAKES A REAAALY LONG TIME\n# # draws %>% sample_n(1000) %>% \n# #   ggplot(aes(x = .value,  y = 0, fill = pretty_condition)) +\n# #   stat_slab(width = c(.95), alpha = 1, normalize=\"xy\") +\n# #   #normalize = all, panels, xy, groups, none\n# #   xlim(0,1) + labs(\n# #     title = \"Model Predicted Probability of Correct Response\",\n# #     x = \"probability of correct response\",\n# #     y = \"Interpretation\"\n# #   ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#h1a-overall-interpretation-state",
    "href": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#h1a-overall-interpretation-state",
    "title": "8  SGC3A (Replication) Hypothesis Testing",
    "section": "H1A | OVERALL INTERPRETATION STATE",
    "text": "H1A | OVERALL INTERPRETATION STATE\nDo Ss in the IMPASSE condition offer less-orthogonal interpretations across the test phase questions?\nWhile absolute accuracy score tells us whether a participant successfully interpreted the coordinate system, it doesn’t allow us to differentiate between different kinds of incorrect interpretations. Here we examine the (categorical) interpretation state type based on the nature of subject’s response, and determine if these interpretations differ by experimental condition. State is a 3-category variable that groups the following interpretations:\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular => indicates a correct triangular coordinate understanding\n\n\n\n\n\n\n\n\nResearch Question\nDoes Ss in the impasse condition produce less orthogonal responses across questions?\n\n\n\n\nHypothesis\nH1A | Ss in the IMPASSE condition will have a higher likelihood of producing unknown and triangle-like response states across all items\n\n\nData\n\ndata: df_items where q nin 6,9 (13 discriminant test phase items)\noutcome: state ( 3 level factor from high_interpretation )\npredictor: condition [between-subjects factor]\n\n\n\nAnalysis Strategy\n\nMIXED Multinomial (Logistic) Regression on state predicted by condition\n\nAlternative:\n\nMIXED Ordinal regression on state (doesn’t meet proportional odds assumption-I think)\nMIXED Multinomial or Ordinal regression on high_interpretation (some cells are 0, produces problems)\n\n\n\n\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% dplyr::select(q,subject,state,pretty_condition)\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  # facet_wrap(~pretty_mode) + \n  theme(legend.position = \"bottom\")+\n   labs(title = \"Study 3A (online replication) | DISTRIBUTION of Interpretation\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  facet_wrap(~q) +\n   labs(title = \"Interpretation by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nA proportional bar chart visualizing the proportion of each interpretations type by condition for each data collection modality (left/right facet) reveals that the pattern of responses are similar regardless of the data collection modality, by differ by condition. In the impasse condition, there are more triangular responses than in control. In the impasse condition, there are also more positive transition (i.e. triangle-like) and neutral (ie. blank or uncertain response types) than in the control condition.\n\n\nDescribe\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             control impasse    Sum\n  orthogonal  0.5682  0.3115 0.4236\n  other       0.1414  0.2308 0.1918\n  angular     0.0546  0.0731 0.0650\n  triangular  0.2357  0.3846 0.3196\n  Sum         1.0000  1.0000 1.0000\n\n\nCODE\n(t <- table(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n            \n             control impasse Sum\n  orthogonal     229     162 391\n  other           57     120 177\n  angular         22      38  60\n  triangular      95     200 295\n  Sum            403     520 923\n\n\n\n\nMIXED MULTINOMIAL REGRESSION\nDoes condition affect the response state of of items across the task?\nFit a MIXED logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\nFit Model [brms]\n\n\nCODE\n#BAYESIAN RANDOM ONLY\nBmm.cat.rSQ <- brm( state ~ 1 + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3A/models/sgc3a_brms_state_Bmm.cat.rSQ_REP.rds\")\n\n\n#UNINFORMATIVE PRIOR BAYESIAN MIXED VERSION\n# flat_Bmm.cat.CrSQ <- brm( state ~ pretty_condition + (1|subject) + (1|q), \n#                  data = df_i, \n#                  family = \"categorical\",\n#                  chains = 4, iter = 2500, warmup = 1000,\n#                  cores = 4, seed = 1234,\n#                  save_pars = save_pars(all = TRUE),\n#                  # backend = \"cmdstanr\",\n#                  file =\"analysis/SGC3A/models/sgc3a_brms_state_FLAT_Bmm.cat.CrSQ_REP.rds\")\n\n\n# determine default priors \n# prior_summary(flat_Bmm.cat.CrSQ)\n\n#set priors [see justification, below]\ninf_priors <- c(\n  # too strong?\n  # prior(normal(-6.91, 0.201),  class = \"Intercept\", dpar = \"muangular\"),\n  # prior(normal(-6.91, 0.201),  class = \"Intercept\", dpar = \"muother\"),\n  # prior(normal(-6.91, 0.201),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"mutriangular\")\n)\n\n#INFORMATIVE PRIORS\nBmm.cat.CrSQ <- brm( state ~ pretty_condition + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 prior = inf_priors,\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3A/models/sgc3a_brms_state_Bmm.cat.CrSQ_REP.rds\"\n                 )\n\n#a bayes factor model comparison of the flat vs informative prior models suggest convicing evidence that \n#informative prior model is a better fit\n# bayesfactor(Bmm.cat.CrSQ, flat_Bmm.cat.CrSQ)\n\n# PRIORS LOGIC \n# https://www.bayesrulesbook.com/chapter-13.html#building-the-logistic-regression-model\n\n#expectation for probability of _better_ response [in control]?\n#very low probability center: 0.1% [very low]; as logodds = logit(0.001) = -6.91\n#range from 0 to 55%  logit(0.55) = 0.201\n#probability of 0.1 to 55% is equivalent to [logodds] -6.91 +/ 2* 0.201\n#therefore... prior for intercept => Normal(−6.91, 0)\n\n\n#expectation for probability of _better_ response [in impasse]?\n#increases probablity from 0 % \n# 0 [very low]; as OR  = exp(0) = 1\n#range from 0 to 90%  exp(0.9) = 2.46\n#probability of 0 to 90% is equivalent to [ODDS scale] 1 +/ 2* 2.42\n#on log odds scale ? [0, ]\n#therefore... prior for intercept => Normal(1, 2.42)\n                             # prior = normal(0.07, 0.035),\n\n\n\n\nDescribe\n\n\nCODE\n# best model\nm <- Bmm.cat.CrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n Family: categorical \n  Links: muother = logit; muangular = logit; mutriangular = logit \nFormula: state ~ pretty_condition + (1 | subject) + (1 | q) \n   Data: df_i (Number of observations: 923) \n  Draws: 4 chains, each with iter = 2500; warmup = 1000; thin = 1;\n         total post-warmup draws = 6000\n\nGroup-Level Effects: \n~q (Number of levels: 13) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.53      0.40     0.93     2.50 1.00     2333\nsd(muangular_Intercept)        1.25      0.39     0.66     2.20 1.00     2334\nsd(mutriangular_Intercept)     0.96      0.30     0.50     1.64 1.00     2294\n                           Tail_ESS\nsd(muother_Intercept)          3830\nsd(muangular_Intercept)        3697\nsd(mutriangular_Intercept)     3092\n\n~subject (Number of levels: 71) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.06      0.20     0.70     1.49 1.00     2541\nsd(muangular_Intercept)        1.56      0.32     1.00     2.27 1.00     2374\nsd(mutriangular_Intercept)     4.40      0.61     3.36     5.77 1.00     1783\n                           Tail_ESS\nsd(muother_Intercept)          3759\nsd(muangular_Intercept)        3963\nsd(mutriangular_Intercept)     3493\n\nPopulation-Level Effects: \n                                     Estimate Est.Error l-95% CI u-95% CI Rhat\nmuother_Intercept                       -1.99      0.51    -2.99    -1.01 1.00\nmuangular_Intercept                     -3.25      0.57    -4.39    -2.16 1.00\nmutriangular_Intercept                  -2.74      0.91    -4.57    -1.02 1.00\nmuother_pretty_conditionimpasse          1.52      0.36     0.82     2.25 1.00\nmuangular_pretty_conditionimpasse        1.31      0.54     0.26     2.39 1.00\nmutriangular_pretty_conditionimpasse     2.19      1.08     0.04     4.31 1.00\n                                     Bulk_ESS Tail_ESS\nmuother_Intercept                        1577     3099\nmuangular_Intercept                      2984     4101\nmutriangular_Intercept                   1563     2547\nmuother_pretty_conditionimpasse          3924     4198\nmuangular_pretty_conditionimpasse        3980     4249\nmutriangular_pretty_conditionimpasse     1176     1865\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCODE\n(d <- describe_posterior(ci=.95, Bmm.cat.CrSQ))\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.74). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nSummary of Posterior Distribution\n\nParameter                            | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n---------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                    |  -2.00 | [-2.99, -1.01] |   100% | [-0.18, 0.18] |        0% | 1.000 | 1612.00\nmuangular_Intercept                  |  -3.24 | [-4.39, -2.16] |   100% | [-0.18, 0.18] |        0% | 1.000 | 2912.00\nmutriangular_Intercept               |  -2.71 | [-4.57, -1.02] | 99.85% | [-0.18, 0.18] |        0% | 1.002 | 1529.00\nmuother_pretty_conditionimpasse      |   1.52 | [ 0.82,  2.25] |   100% | [-0.18, 0.18] |        0% | 1.000 | 3882.00\nmuangular_pretty_conditionimpasse    |   1.31 | [ 0.26,  2.39] | 99.28% | [-0.18, 0.18] |        0% | 1.000 | 3983.00\nmutriangular_pretty_conditionimpasse |   2.18 | [ 0.04,  4.31] | 97.62% | [-0.18, 0.18] |     0.56% | 1.002 | 1168.00\n\n\nCODE\nprint(\"BAYES FACTOR [comparison to null]\")\n\n\n[1] \"BAYES FACTOR [comparison to null]\"\n\n\nCODE\n#think of this like the anova(model) to get p values for each predictor\n#has to recompile the models with rstan. total drag\n(b <- bayesfactor(Bmm.cat.rSQ, m))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\n\n\nBayes Factors for Model Comparison\n\n    Model                                            BF\n[2] pretty_condition + (1 | subject) + (1 | q) 3.08e+04\n\n* Against Denominator: [1] 1 + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\nprint(\"DESCRIBE POSTERIOR\")\n\n\n[1] \"DESCRIBE POSTERIOR\"\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n(l <- describe_posterior(m))\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.74). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nSummary of Posterior Distribution\n\nParameter                            | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n---------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                    |  -2.00 | [-2.99, -1.01] |   100% | [-0.18, 0.18] |        0% | 1.000 | 1612.00\nmuangular_Intercept                  |  -3.24 | [-4.39, -2.16] |   100% | [-0.18, 0.18] |        0% | 1.000 | 2912.00\nmutriangular_Intercept               |  -2.71 | [-4.57, -1.02] | 99.85% | [-0.18, 0.18] |        0% | 1.002 | 1529.00\nmuother_pretty_conditionimpasse      |   1.52 | [ 0.82,  2.25] |   100% | [-0.18, 0.18] |        0% | 1.000 | 3882.00\nmuangular_pretty_conditionimpasse    |   1.31 | [ 0.26,  2.39] | 99.28% | [-0.18, 0.18] |        0% | 1.000 | 3983.00\nmutriangular_pretty_conditionimpasse |   2.18 | [ 0.04,  4.31] | 97.62% | [-0.18, 0.18] |     0.56% | 1.002 | 1168.00\n\n\nCODE\n# (tm <- tidy(m,   conf.int = TRUE))\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.74). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nParameter                            | Median |        95% CI |     pd | % in ROPE |  Rhat |     ESS\n----------------------------------------------------------------------------------------------------\nmuother_Intercept                    |   0.14 | [0.05,  0.37] |   100% |        0% | 1.000 | 1612.00\nmuangular_Intercept                  |   0.04 | [0.01,  0.12] |   100% |        0% | 1.000 | 2912.00\nmutriangular_Intercept               |   0.07 | [0.01,  0.36] | 99.85% |        0% | 1.002 | 1529.00\nmuother_pretty_conditionimpasse      |   4.57 | [2.27,  9.52] |   100% |        0% | 1.000 | 3882.00\nmuangular_pretty_conditionimpasse    |   3.69 | [1.29, 10.91] | 99.28% |        0% | 1.000 | 3983.00\nmutriangular_pretty_conditionimpasse |   8.82 | [1.04, 74.73] | 97.62% |     0.56% | 1.002 | 1168.00\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nCODE\n# tidy(m,   conf.int = TRUE, exponentiate = TRUE)\n# tm %>% mutate(\n#   OR.est = exp(estimate),\n#   exp.low = exp(conf.low),\n#   exp.high = exp(conf.high)\n# ) %>% dplyr::select(effect, component, group, term, OR.est, exp.low, exp.high)\n\n# paste(\"PROBABILITIES\")\n# \n# #PREDICT METHOD\nnewdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n# #lengthen data frame to handle multinomial\npreds <- preds %>%\n  dplyr::select(-subject, -q) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = !pretty_condition,\n  values_to = \"preds\",\n  names_to = \"state\",\n)\n# \n(p <- preds %>%\n  group_by(pretty_condition, state ) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 8 × 6\n# Groups:   pretty_condition [2]\n  pretty_condition state             median      se     lwr    upr\n  <fct>            <chr>              <dbl>   <dbl>   <dbl>  <dbl>\n1 control          P(Y = angular)    0.0275 0.00382 0.0200  0.0350\n2 control          P(Y = orthogonal) 0.635  0.0156  0.605   0.666 \n3 control          P(Y = other)      0.0867 0.00753 0.0719  0.101 \n4 control          P(Y = triangular) 0.036  0.0177  0.00137 0.0706\n5 impasse          P(Y = angular)    0.0427 0.00393 0.0350  0.0504\n6 impasse          P(Y = orthogonal) 0.247  0.0119  0.224   0.271 \n7 impasse          P(Y = other)      0.166  0.00906 0.148   0.184 \n8 impasse          P(Y = triangular) 0.154  0.0170  0.121   0.187 \n\n\nCODE\n##DRAWS METHOD\n# GENERATE draws from model\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# # SUMMARIZE draws from model\n# (k <- kable(draws %>%\n#   dplyr::select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 4, col.names =\n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>%\n#   kable_styling())\n\n\n\n\nINFERENCE — EFFECT\n[REPORT POSTERIOR MEDIAN \\(\\exp_{beta}\\), 95 % credible interval, % probability of direction]\nWe fit a (bayesian) multinomial logistic regression model with random intercepts for subjects and questions. A Bayes Factor model comparison (against a random intercepts-only model) indicates extreme evidence for a main effect of CONDITION (BF = 4.09e+03). Consistent with our hypothesis, the impasse condition substantially increases the odds of transitional interpretations.\nAcross the entire task participants in the impasse condition were 5 times as likely to offer an ‘unknown’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 4.57, 95 \\% CI [2.27, 9.52], pd = 99.9\\%\\)). Participants in the impasse condition were 4 times more likely to offer an ‘angular’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 3.69, 95 \\% CI [1.29, 10.91], pd = 99.3\\%\\)), and 9 times more likely to offer an ‘triangular’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 8.82, 95 \\% CI [1.04, 74.73], pd = 97.6\\%\\)).\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n#model summary doesn't work for brms multinomial\n\n# DOESN'T WORK FOR BRMS\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n# \n# \n# # #GET MODEL ESTIMATES\n# t <- as.data.frame(model_parameters(m, exponentiate = TRUE))\n# \n# #REFORMAT\n# x <- t %>%\n#   mutate(\n#     Interpretation = word(Parameter, 2, sep = \"_\"),\n#     Interpretation = str_remove_all(Interpretation,\"mu\"),\n#     Interpretation = fct_relevel(Interpretation, levels = c(\"other\",\"angular\",\"triangular\")),\n# \n#     Parameter = as.factor(word(Parameter, 3, sep = \"_\")),\n#     Parameter = recode_factor(Parameter,\n#                          \"Intercept\" = \"(Intercept)\",\n#                          \"pretty\" = \"Condition[impasse]\"),\n#     Median = round(Median,2),\n#     CI_low = round(CI_low,2),\n#     CI_high = round(CI_high,2),\n#     pd = round(pd,2),\n#     ROPE_Percentage = round(ROPE_Percentage,2)\n#   ) %>%\n#   arrange(Interpretation) %>%\n#   dplyr::select(-CI, -Rhat, -ESS) %>%\n#   rename( \"%_in_ROPE\"=\"ROPE_Percentage\",\n#           \"(Odds Ratio)\" = \"Median\") %>%\n#   dplyr::select(Interpretation, Parameter, `(Odds Ratio)`, CI_low, CI_high, pd, `%_in_ROPE`)\n# \n# \n# \n# #KNIT\n# title = \"Study 3A (Online Replication) | Question Interpretation | Mixed Multinomial Regression\"\n# tab <- kbl(x, format = \"latex\", caption = title,\n#            booktabs = FALSE) %>% kable_classic() %>%\n# footnote(general = paste(\"Model Interpretation ~ \",b$Model[2], \"Bayes Factor \", format( exp(b$log_BF[2]), digits =2 ) ), footnote_as_chunk = T, general_title = \"\")\n# writeLines(tab, \"tables/SGC3A_REP_BRMS_state.tex\")\n\n\n\n\nCODE\n# ## POINT ESTIMATES IN PROBABILITY\n# #1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>%\n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #2 | SUMMARIZE draws \n# k <- kable(draws %>%\n#   select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 2, col.names = \n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>% \n#   kable_styling()\n# k\n\n#COMPARISONS\n# c <- draws %>% \n#   # dplyr::select(pretty_condition, .category, .value) %>%\n#   compare_levels(variable = .value, by = pretty_condition, \n#                  comparison = list(c(\"control\",\"impasse\"))) \n#                                    # c(\"adots\",\"interval\"),\n#                                    # c(\"adots\",\"mean\"),\n#                                    # c(\"adots\",\"text\"),\n#                                    # c(\"density\",\"interval\"),\n#                                    # c(\"density\",\"mean\"),\n#                                    # c(\"density\",\"text\"),\n#                                    # c(\"interval\",\"mean\"),\n#                                    # c(\"interval\",\"text\"),\n#                                    # c(\"mean\",\"text\")\n#                                    \n# c %>%\n#   ggplot(aes(x = .value, y = reorder(x =pretty_condition, X = .value)))+\n#   stat_interval(.width = .95, color = \"black\") +\n#   geom_vline(xintercept = 0)+\n#   theme_bw()+\n#   # coord_cartesian(xlim = c(-.5,1)) +\n#   theme_tidybayes() \n# comps\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n'bayes_R2' is not defined for unordered categorical models.\n\n\n\n\n \nstate: other\nstate: angular\nstate: triangular\nstate: other_pretty\nstate: angular_pretty\nstate: triangular_pretty\n\n\nPredictors\nOdds Ratios\nCI (95%)\nOdds Ratios\nCI (95%)\nOdds Ratios\nCI (95%)\nOdds Ratios\nCI (95%)\nOdds Ratios\nCI (95%)\nOdds Ratios\nCI (95%)\n\n\nIntercept\n0.04\n0.01 – 0.12\n\n\n0.14\n0.05 – 0.37\n\n\n0.07\n0.01 – 0.36\n\n\n\n\nconditionimpasse\n\n\n3.69\n1.29 – 10.91\n\n\n4.57\n2.27 – 9.52\n\n\n8.82\n1.04 – 74.73\n\n\nRandom Effects\n\n\n\nσ2\n0.43\n\n\n\nτ00\n1.26\n\n\nICC\n0.26\n\n\nN subject\n71\n\n\nN q\n13\n\nObservations\n923\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes)\n#              # output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n# \n# \n# ## POINT ESTIMATES IN PROBABILITY\n# #1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>%\n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #2 | SUMMARIZE draws \n# k <- kable(draws %>%\n#   select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 2, col.names = \n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>% \n#   kable_styling()\n# k\n\n#COMPARISONS\n# c <- draws %>% \n#   # dplyr::select(pretty_condition, .category, .value) %>%\n#   compare_levels(variable = .value, by = pretty_condition, \n#                  comparison = list(c(\"control\",\"impasse\"))) \n#                                    # c(\"adots\",\"interval\"),\n#                                    # c(\"adots\",\"mean\"),\n#                                    # c(\"adots\",\"text\"),\n#                                    # c(\"density\",\"interval\"),\n#                                    # c(\"density\",\"mean\"),\n#                                    # c(\"density\",\"text\"),\n#                                    # c(\"interval\",\"mean\"),\n#                                    # c(\"interval\",\"text\"),\n#                                    # c(\"mean\",\"text\")\n#                                    \n# c %>%\n#   ggplot(aes(x = .value, y = reorder(x =pretty_condition, X = .value)))+\n#   stat_interval(.width = .95, color = \"black\") +\n#   geom_vline(xintercept = 0)+\n#   theme_bw()+\n#   # coord_cartesian(xlim = c(-.5,1)) +\n#   theme_tidybayes() \n# comps\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, vline.color = \"red\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            p.threshold = 0.1, #manually adjust to account for directional test\n#            ci.lvl = 0.90 ) + #manually adjusted for directional test\n#   labs(title = \"Model Estimate | Odds Ratio\",\n#        subtitle = \"\",\n#        x = \"Condition\")\n\n\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(Bmm.cat.CrSQ, exponentiate = TRUE, component = \"all\")\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.74). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nCODE\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n# + theme_clean()\n\n# \n# result <- estimate_density(m,exponentiate = TRUE)\n# plot(result,  stack = FALSE, priors = TRUE)\n\n## | PLOT TESTS\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.74). This might lead to inappropriate results. See 'Details' in '?equivalence_test'.\n\n\nCODE\nplot(result)\n\n\nPicking joint bandwidth of 0.0835\n\n\nWarning: Removed 3600 rows containing non-finite values (stat_density_ridges).\n\n\n\n\n\nCODE\nresult <- rope(m)\n\n\nPossible multicollinearity between b_mutriangular_pretty_conditionimpasse and b_mutriangular_Intercept (r = 0.74). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nCODE\nplot(result)\n\n\n\n\n\nCODE\n(result <- pd(m,exponentiate = TRUE))\n\n\nProbability of Direction\n\nParameter                            |     pd\n---------------------------------------------\nmuother_Intercept                    |   100%\nmuangular_Intercept                  |   100%\nmutriangular_Intercept               | 99.85%\nmuother_pretty_conditionimpasse      |   100%\nmuangular_pretty_conditionimpasse    | 99.28%\nmutriangular_pretty_conditionimpasse | 97.62%\n\n\nCODE\nplot(result, show_intercept = TRUE, show_labels = TRUE)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"eff\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n# \n# #PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\n$pretty_condition\n\n\n\n\n\nCODE\n#TODO OUTPUT TABLE \n#https://arelbundock.com/posts/modelsummary_multinomial_logit/\n# modelsummary(m)\n\n\n\n\nCODE\n#::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n##WORKING\n# https://mjskay.github.io/ggdist/reference/stat_slab.html\n## VIS probability of correct response\n#TAKES A REALLY LONG TIME\n\n#1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA) \n# draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n\n#OR load from file\n# draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n\n#2| VISUALIZE PREDICTIONS | GGDIST\n##TODO figure out height normalization.\n##do it with much smaller number of draws \n#TODO adjust bandwidth/smoothing? + put on same line + \n#TAKES A REAAALY LONG TIME\n# d <- draws %>%\n#   ggplot(aes(x = .value,  y = pretty_condition, fill = .category)) +\n#   stat_slab(width = c(.95), alpha = 1, normalize=\"xy\") +\n#   #   #normalize = all, panels, xy, groups, none\n#   xlim(0,1) + labs(\n#     title = \"Model Predicted Probability of Correct Response\",\n#     x = \"probability of correct response\",\n#     y = \"Interpretation\"\n#   ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()\n# # \n# # ggsave(d, filename = \"figures/sgc3a_BBm.cat.CrSQ_lab_posterior.svg\", width = 6, height =4)\n# d\n\n\n##FROM PREDS\npreds %>% \n    ggplot(aes(x = preds,  y = state, fill = pretty_condition)) +\n    stat_slab(width = c(.95), alpha = 0.5, normalize=\"xy\") \n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n#CHECK Fit of posterior predictive to data\npp_check(Bmm.cat.CrSQ, ndraws=1000)\n\n\n\n\n\nCODE\n#CHECK posterior vs. priors\nresult <- estimate_density(Bmm.cat.CrSQ)\nplot(result, stack = FALSE, priors = TRUE)\n\n\n\n\n\nCODE\n#CHECK model\nplot(Bmm.cat.CrSQ)\n\n\n\n\n\n\n\n\n\n\n\n\n\nFit Model [mblogit]\n\n\nCODE\n# \n# #https://www.elff.eu/software/mclogit/manual/mblogit/\n# #\"baseline category logit\" model matches multinom()\n# \n# #check reference level \n# print(\"Categories (first is reference)\")\n# levels(df_i$state)\n# \n# #FIT EMPTY MODEL\n# # print(\"EMPTY MODEL\")\n# mm.cat.rSQ <- mblogit(state ~ 1 , \n#                       random = list( ~ 1|subject, ~1|q), \n#                       data = df_i)\n# #summary(mm.cat.rSQ)\n# \n# #FIT PREDICTOR MODEL\n# # print(\"PREDICTOR MODEL\")\n# mm.cat.CrSQ <- mblogit(state ~ pretty_condition , \n#                   random = list( ~ 1|subject, ~1|q), \n#                   data = df_i)\n# # summary(mm.cat.CrSQ)\n# \n# #COMPARE MODEL FIT\n# paste(\"AIC wth predictor is lower than empty model?\", AIC(mm.cat.rSQ) > AIC(mm.cat.CrSQ))\n# test_lrt(mm.cat.rSQ, mm.cat.CrSQ)\n\n\n\n\nDescribe\n\n\nCODE\n# \n# m <- mm.cat.CrSQ\n# \n# #DESCRIBE MODEL\n# summary(m)\n# \n# #INTERPRET COEFFICIENTS\n# paste(\"LOG ODDS\")\n# tidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n# paste(\"ODDS RATIOS\")\n# tidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n# \n# # paste(\"MODEL INFO\")\n# # glance(m)\n# \n# #PERFORMANCE\n# performance(m)\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes)\n#              # output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n\n\n\nVisualize\n\n\nCODE\n# \n# ## | PLOT PARAMETERS \n# \n# #SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, \n#            transform = \"exp\",\n#            vline.color = \"red\", \n#            show.intercept = TRUE, \n#            show.values = TRUE)\n# \n# \n# #TODO SEPARATE THIS BY EQUATION \n# # ms <- model_parameters(Bmm.cat.CrSQ, component = \"conditional\")\n# # m1 <- ms %>% filter(str_detect(Parameter, \"muother\"))\n# # plot(m1)\n# \n# #EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result, show_labels = TRUE, n_columns = 3)\n# \n# # result <- simulate_parameters(m)\n# # plot(result, stack = FALSE)\n# \n# ## | PLOT TESTS\n# result <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\n# plot(result)\n# \n# ## | PLOT PREDICTIONS\n# \n# #SJPLOT | MODEL | PROBABILITIES\n# # plot_model(m, type=\"eff\",\n# #            show.intercept = TRUE,\n# #            show.values = TRUE,\n# #            title = \"Model Prediction | Probability of Accurate Response\",\n# #            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n# # \n# # #PLOT MODEL PREDICTION\n# # plot_model(m, type = \"pred\")[[1]] + \n# #   ylim(0,1) + labs(\n# #     title = \"Model Prediction | Probability of Accurate Response\",\n# #     subtitle = \"Impasse increases Probability of Correct Response\"\n# #   )\n# \n# #TODO EMMEANS for the estimated marginal means\n\n\n\n\nDiagnostics\n\n\nCODE\n# check_model(m)\n\n\n\n\nCOMPARE MBLOGIT to BRMS\n\n\nCODE\n# compare_models(mm.cat.CrSQ, Bmm.cat.CrSQ)\n\n\nThe predictions of the manual, frequentist mixed multinomial and bayesian mixed multinomial models are comparable."
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#h1b-q1-accuracy",
    "href": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#h1b-q1-accuracy",
    "title": "8  SGC3A (Replication) Hypothesis Testing",
    "section": "H1B | Q1 ACCURACY",
    "text": "H1B | Q1 ACCURACY\nDo Ss in the IMPASSE condition have a higher likelihood of producing a correct response to the first question?\nThe graph comprehension task includes 15 questions completed in sequence. But the first question the reader encounters (Q1) is the most important, as it is their first exposure to the unconventional triangular coordinate system.\n\n\n\n\n\n\n\nResearch Question\nDoes the frequency of correct (vs) incorrect responses on the first question differ by condition? [Is response accuracy independent of condition?]\n\n\n\n\nHypothesis\nH1A | Ss in the IMPASSE condition will have a higher likelihood of correctly responding to the first question than those in the CONTROL condition\n\n\nData\n\ndata: df_items where q == 1\noutcome: accuracy ( factor(incorrect/correct) from score_niceABS [absolute score]\npredictor: condition [between-subjects factor]\n\n\n\nAnalysis Strategy\n\nLogistic Regression on accuracy predicted by condition\n\naccount for difference in odds of correct score by condition\n\n\nAlternatives:\n\nChi-Square test of independence on outcome accuracy by condition\n\n\n\nNotes\n\nCHIQ SQR is simplest method to examine independence of two categorical factors; LOGISTIC REGRESSION is recommended for binomial ~ continuous; though with regression we can quantify the size of the effect and overall model fit\nindependence assumption : (CHI SQR) as we only consider responses on the first question, each observation corresponds to an individual subject, and are thus independent\ncell frequency : (CHI SQR) expected frequency in each cell of the contingency table is greater than 5 (more than 5 correct , more than 5 incorrect responses)\n\n\n\n\n\nSetup\n\n\nCODE\n#:::::::: PREP DATA\ndf <- df_items %>% filter(q==1)  %>% dplyr::select(accuracy, pretty_condition)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~pretty_mode) + \n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Accuracy\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Impasse Condition yields a greater proportion of correct responses\")\n\n\n\n\n\nA proportional bar chart visualizing the proportion of incorrect (vs) correct responses in each condition for each data collection modality (left/right facet) reveals that the pattern of responses appear the same regardless of the data collection modality. In both data collection sessions, the proportion of incorrect responses is much greater than the proportion of correct responses, regardless of condition (marginal probability of incorrect). In the impasse condition, the difference in proportions is smaller than the control condition (conditional probability of success in impasse; (i.e) There are more correct responses in the impasse condition than the control condition).\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\npaste(\"Proportions of Correct Responses by Condition\")\n\n\n[1] \"Proportions of Correct Responses by Condition\"\n\n\nCODE\ntable(df$accuracy, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n           \n            control impasse   Sum\n  incorrect   0.839   0.650 0.732\n  correct     0.161   0.350 0.268\n  Sum         1.000   1.000 1.000\n\n\nCODE\npaste(\"Number of Correct Responses by Condition\")\n\n\n[1] \"Number of Correct Responses by Condition\"\n\n\nCODE\ntable(df$accuracy, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      addmargins(1) #sanity check sum of columns\n\n\n           \n            control impasse Sum\n  incorrect      26      26  52\n  correct         5      14  19\n  Sum            31      40  71\n\n\n\n\nLOGISTIC REGRESSION\nFit a logistic regression predicting accuracy (absolute score) (n = 71) by condition (k = 2).\n\n\nParameter estimate: \\(\\beta_{0}\\) = Log Odds of (correct) responses in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of correct response in CONTROL condition\nParameter estimate: \\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for correct response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of correct response in IMPASSE (vs) CONTROL\nNull hypothesis:\\(\\beta_{impasse} \\le 0\\) the odds for a correct response does not change, or decreases\nAlternative hypothesis: \\(\\beta_{impasse} \\gt 0\\) the odds of a correct response increases\n\n\nFit Model\nFirst, we fit a logistic regression with condition as predictor, and compare its fit to an empty (intercept-only) model.\n\n\nCODE\n# MODEL FITTING ::::::::\n\n#: 1 EMPTY MODEL baseline glm model intercept only\nm0 = glm(accuracy ~ 1, data = df, family = \"binomial\")\n# print(\"EMPTY MODEL\")\n# summary(m0)\n\n#: 2 CONDITION model\nm1 <- glm( accuracy ~ pretty_condition, data = df, family = \"binomial\")\n# print(\"PREDICTOR MODEL\")\nsummary(m1)\n\n\n\nCall:\nglm(formula = accuracy ~ pretty_condition, family = \"binomial\", \n    data = df)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-0.928  -0.928  -0.593   1.449   1.910  \n\nCoefficients:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -1.649      0.488   -3.38  0.00074 ***\npretty_conditionimpasse    1.030      0.590    1.74  0.08107 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 82.483  on 70  degrees of freedom\nResidual deviance: 79.188  on 69  degrees of freedom\nAIC: 83.19\n\nNumber of Fisher Scoring iterations: 4\n\n\nCODE\ncar::Anova(m1)\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: accuracy\n                 LR Chisq Df Pr(>Chisq)  \npretty_condition     3.29  1      0.069 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#: 3 TEST SUPERIOR FIT\npaste(\"AIC wth predictor is lower than empty model?\", m0$aic > m1$aic)\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(m0,m1) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName | Model | df | df_diff | Chi2 |     p\n------------------------------------------\nm0   |   glm |  1 |         |      |      \nm1   |   glm |  2 |       1 | 3.29 | 0.069\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(m0,m1))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.069492127779542\"\n\n\nThe Condition predictor decreases AIC, but the Likelihood Ratio Test is marginal. We proceed to examine the predictor model, as we plan to do a 1-tailed NHST .\n\n\nDescribe\n\n\nCODE\n# DESCRIBE MODEL ::::::::::::::::::::::::::::::::::::: \n\nprint(\"PREDICTOR MODEL [default two-tailed sig test]\")\n\n\n[1] \"PREDICTOR MODEL [default two-tailed sig test]\"\n\n\nCODE\nsummary(m1)\n\n\n\nCall:\nglm(formula = accuracy ~ pretty_condition, family = \"binomial\", \n    data = df)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-0.928  -0.928  -0.593   1.449   1.910  \n\nCoefficients:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -1.649      0.488   -3.38  0.00074 ***\npretty_conditionimpasse    1.030      0.590    1.74  0.08107 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 82.483  on 70  degrees of freedom\nResidual deviance: 79.188  on 69  degrees of freedom\nAIC: 83.19\n\nNumber of Fisher Scoring iterations: 4\n\n\nCODE\ncar::Anova(m1)\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: accuracy\n                 LR Chisq Df Pr(>Chisq)  \npretty_condition     3.29  1      0.069 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n# MANUAL ONE-SIDED SIGTEST ::::::::::::::::::::::::::: \n\n# one-sided (right tail) z test for B COEFFICIENT\n#https://stats.stackexchange.com/questions/330655/strategy-for-a-one-sided-test-of-glms-coefficients\n\n#SANITY CHECK 2-tailed test should match the model output\ntt <- 2*pnorm(summary(m1)$coefficients[2,3], lower.tail = F)\npaste(\"p value for two-tailed test, null B = 0 : \",round(tt,3))\n\n\n[1] \"p value for two-tailed test, null B = 0 :  0.081\"\n\n\nCODE\not <- pnorm(summary(m1)$coefficients[2,3], lower.tail = F)\npaste(\"BUT we want a one tailed directional, null: B <= 0: \",round(ot,3))\n\n\n[1] \"BUT we want a one tailed directional, null: B <= 0:  0.041\"\n\n\nCODE\npaste(\"adjusted confint for directional hypothesis\")\n\n\n[1] \"adjusted confint for directional hypothesis\"\n\n\nCODE\n(dcint <- confint(m1, level = 0.90)) # get 90% for right side))\n\n\nWaiting for profiling to be done...\n\n\n                           5 %   95 %\n(Intercept)             -2.538 -0.907\npretty_conditionimpasse  0.094  2.058\n\n\nCODE\n# https://stats.stackexchange.com/questions/20734/is-a-1-sided-90-prediction-interval-equivalent-to-a-2-sided-95-prediction-inte\n\n#:::::::: INTERPRET COEFFICIENTS\n\n# print(\"Confidence Interval —- LOG ODDS\")\n# confint(m1) #not adjusted for 1-tailed\nprint(\"Coefficients —- ODDS RATIOS\")\n\n\n[1] \"Coefficients —- ODDS RATIOS\"\n\n\nCODE\n# (e <- cbind( exp(coef(m1)), exp(confint(m1)))) #exponentiated, not adjusted\n(e <- cbind( exp(coef(m1)), exp(dcint))) #exponentiated, adjusted\n\n\n                                5 %  95 %\n(Intercept)             0.192 0.079 0.404\npretty_conditionimpasse 2.800 1.099 7.832\n\n\nCODE\nprint(\"MODEL PREDICTIONS\")\n\n\n[1] \"MODEL PREDICTIONS\"\n\n\nCODE\n# Retrieve predictions as probabilities \n# (for each level of the predictor)\npred.control <- predict(m1,data.frame(pretty_condition=\"control\"),type=\"response\")\n#this should match : plogis(intercept coefficient)\npaste(\"Probability of success in control,\", pred.control)\n\n\n[1] \"Probability of success in control, 0.161290322580645\"\n\n\nCODE\npred.impasse <- predict(m1,data.frame(pretty_condition=\"impasse\"),type=\"response\")\n#this should match : plogis(intercept coefficient + predictor coeff)\npaste(\"Probability of success in impasse,\", pred.impasse)\n\n\n[1] \"Probability of success in impasse, 0.350000000000014\"\n\n\n\n\nInference — DIRECTIONAL EFFECT\n\n\nVisualize\n\n\nCODE\n#SET MODEL\nm <- m1\n\n#GGSTATS | MODEL | LOG ODDS \n# ggcoefstats(m1, output = \"plot\", \n#               conf.level = 0.90) + \n#   labs(x = \"Log Odds Estimate\", \n#        title = \"LOGODDS | Q1 Accuracy ~ condition\",\n#        subtitle = \"(p is for two tailed test)\")\n\n\n#PARAMETERS | MODEL | SIMULATED PARAMETERS\n# similar to bayesian dist of estimate\n# result <- simulate_parameters(m1)\n# #rename params so intercept is plotted \n# result$Parameter[1] <- \"condition [control]\"\n# result$Parameter[2] <- \"condition [impasse]\"\n# plot(result) \n\n#EQUIVALENCE TEST [not sure if appropriate for log model?]\n# https://journals.sagepub.com/doi/10.1177/2515245918770963#:~:text=Consequently%2C%20when%20reporting%20an%20equivalence,values%20is%20smaller%20than%20alpha.\n# https://easystats.github.io/parameters/reference/equivalence_test.lm.html\n# (result <- equivalence_test(m1, rule = \"classic\", component = c(\"all\")))\n# plot(result,   show_intercept = TRUE) + \n#   scale_y_discrete(labels = c(\"impasse\", \"control\")) + \n#   labs( title = \"Equivalence Test for Model Parameter Estimates\")\n\n\n#PARAMETERS | MODEL | ODDS RATIO \n# result <- model_parameters(m1,exponentiate = TRUE)\n# #rename params \n# result$Parameter[1] <- \"condition [control]\"\n# result$Parameter[2] <- \"condition [impasse]\"\n# plot(result,   show_intercept = TRUE) +  labs(\n#   title = \"Model Parameter Estimates\"\n# ) + theme_clean() + theme(legend.position=\"blank\")\n\n#SJPLOT | MODEL | ODDS RATIO\n#library(sjPlot)\nplot_model(m, type = \"est\",\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) +  #manually adjusted for directional test   \n  scale_y_continuous() + #remove to put on log scale x axis \n  scale_x_discrete(labels=c(\"control\",\"impasse\"))+\n  labs(title = \"MODEL ESTIMATE | Q1 Accuracy ~ condition\",\n       subtitle = \"Impasse increases odds of correct response on Q1\",\n       x = \"Condition\") + theme_clean()\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"pred\")[[1]] +\n  ylim(0,1) + #scale y axis to actual range\n  labs(title = \"MODEL PREDICTION  | Q1 Accuracy ~ condition\",\n       subtitle = \"Impasse increases probability of correct response on Q1\",\n       x = \"Condition\") + theme_clean()\n\n\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.19\n0.07 – 0.46\n0.001\n\n\npretty condition[impasse]\n2.80\n0.92 – 9.70\n0.081\n\n\nObservations\n71\n\n\nR2 Tjur\n0.045\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\nprint(\"MODEL DIAGNOSTICS\")\n\n\n[1] \"MODEL DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m1)"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#h1b-q1-interpretation-state",
    "href": "analysis/SGC3A/4_sgc3A_replication_hypotesting.html#h1b-q1-interpretation-state",
    "title": "8  SGC3A (Replication) Hypothesis Testing",
    "section": "H1B | Q1 INTERPRETATION STATE",
    "text": "H1B | Q1 INTERPRETATION STATE\nDo Ss in the IMPASSE condition offer less-orthogonal interpretations on first question?\nWhile absolute accuracy score tells us whether a participant successfully interpreted the coordinate system, it doesn’t allow us to differentiate between different kinds of incorrect interpretations. Here we examine the (categorical) interpretation state type based on the nature of subject’s response, and determine if these interpretations differ by experimental condition. State is a 3-category derived response variable that groups the following interpretations:\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular and ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n\n\n\n\n\n\n\n\nResearch Question\nDoes Ss in the impasse condition produce less orthogonal responses on the first question?\n\n\n\n\nHypothesis\nH1A | Ss in the IMPASSE condition will have a higher likelihood of producing unknown and and triangle-like response states, relative to orthogonal response states, on the first question\n\n\nData\n\ndata: df_items where q == 1\noutcome: state ( 4 level factor from 5 level high_interpretation )\npredictor: condition [between-subjects factor]\n\n\n\nAnalysis Strategy\n\nMultinomial (Logistic) Regression on state predicted by condition\n\nAlternative:\n\nOrdinal regression on state; but model doesn’t satisfy proportional odds assumption (parallel slopes)\nMultinomial or Ordinal regression on high_interpretation (5 category interpretation state which distinguishes between uncertain (blank, reference) unclassifiable, triangle-like and true triangular.) There are some cells with zeros, however (no uncertain responses in control) which means the model can’t accurately estimate those comparisons\n\n\n\n\n\nSetup\n\n\nCODE\n#:::::::: PREP DATA\ndf <- df_items %>% filter(q==1) %>% dplyr::select(pretty_condition, state)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~pretty_mode) + \n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Interpretation\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nA proportional bar chart visualizing the proportion of each interpretations type by condition for each data collection modality (left/right facet) reveals that the pattern of responses are similar regardless of the data collection modality, by differ by condition. In the impasse condition, there are more triangular responses than in control. We see that around half of the ‘incorrect’ (i.e. not triangular) responses in the impasse condition are not orthogonal-like, but “other/unknown”.\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df$state, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             control impasse    Sum\n  orthogonal  0.8387  0.1750 0.4648\n  other       0.0000  0.4000 0.2254\n  angular     0.0000  0.0750 0.0423\n  triangular  0.1613  0.3500 0.2676\n  Sum         1.0000  1.0000 1.0000\n\n\nCODE\n(t <- table(df$state, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n            \n             control impasse Sum\n  orthogonal      26       7  33\n  other            0      16  16\n  angular          0       3   3\n  triangular       5      14  19\n  Sum             31      40  71\n\n\n\n\nMULTINOMIAL REGRESSION\nDoes condition affect the response state of Q1?\nFit a logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\n3 equations will be estimated (# categories - 1); each representing the odds of answering in that particular interpretation (vs) the reference category (orthogonal answer) [essentially a series of binary logistic regressions, but instead of incorrect/correct, comparing [reference category] vs [this category])\nFor each equation:\n\n\\(\\beta_{0}\\) = Log Odds of [this category type vs. reference category type) response in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of [this category type vs. reference category type] response in CONTROL condition\n\\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for [this category] type response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of [this. vs reference category type] response in IMPASSE (vs) CONTROL\nTwo-tailed NHST Null hypothesis: \\(\\beta_{impasse} = 0\\) the odds for [this category of response vs. reference] are not different for IMPASSE condition\nAlternative hypothesis: \\(\\beta_{impasse} \\ne 0\\) the odds of [this category of response vs. reference] increases or decreases for IMPASSE condition\n\n\n\nFit Model\n\n\nCODE\n#check reference level \nprint(\"Categories (first is reference)\")\n\n\n[1] \"Categories (first is reference)\"\n\n\nCODE\nlevels(df$state)\n\n\n[1] \"orthogonal\" \"other\"      \"angular\"    \"triangular\"\n\n\nCODE\n#FIT EMPTY MODEL\n# print(\"EMPTY MODEL\")\ncatm.0 <- multinom(state ~ 1, data = df)\n\n\n# weights:  8 (3 variable)\ninitial  value 98.426900 \niter  10 value 83.663951\nfinal  value 83.663925 \nconverged\n\n\nCODE\n# summary(catm.0)\n\n#FIT PREDICTOR MODEL\n# print(\"PREDICTOR MODEL\")\ncatm <- multinom(formula = state ~ pretty_condition, data = df, model = TRUE)\n\n\n# weights:  12 (6 variable)\ninitial  value 98.426900 \niter  10 value 63.286429\niter  20 value 63.042636\niter  30 value 63.026275\nfinal  value 63.026272 \nconverged\n\n\nCODE\n# summary(catm)\n\n#COMPARE MODEL FIT\npaste(\"AIC wth predictor is lower than empty model?\", catm.0$AIC > catm$AIC)\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(catm.0, catm)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff |  Chi2 |      p\n-------------------------------------------------\ncatm.0 | multinom |  3 |         |       |       \ncatm   | multinom |  6 |       3 | 41.28 | < .001\n\n\nCODE\n##compare bayesian version\n#library(brms)\n# b.cat <- brm( state2 ~ pretty_condition, data = df, family = \"categorical\", backend = \"cmdstanr\")\n# summary(b.cat)\n# plot_model(b.cat)\n# report(b.cat)\n# coefficient estimates are very simliar to catm. super cool!\n\n##compare mclogit version\n#\"baseline-category logit model\n# https://www.elff.eu/software/mclogit/manual/mblogit/\n# blm1 <- mblogit(state2 ~ pretty_condition , data = df)\n# summary(blm1)\n#identical to catm. super cool!\n\n\nAIC in predictor model is less than empty model, and likelihood ratio test indicates predictor model is significantly better fit to the sample data than the empty (intercept only) model.\n\n\nDescribe\n\n\nCODE\n#set model\nm <- catm\n\n#::::::::INTERPRETATION\npaste(\"MODEL SUMMARY\")\n\n\n[1] \"MODEL SUMMARY\"\n\n\nCODE\nsummary(m)\n\n\nCall:\nmultinom(formula = state ~ pretty_condition, data = df, model = TRUE)\n\nCoefficients:\n           (Intercept) pretty_conditionimpasse\nother           -12.20                   13.02\nangular         -10.88                   10.03\ntriangular       -1.65                    2.34\n\nStd. Errors:\n           (Intercept) pretty_conditionimpasse\nother           87.342                  87.343\nangular         45.215                  45.221\ntriangular       0.488                   0.673\n\nResidual Deviance: 126 \nAIC: 138 \n\n\nCODE\ncar::Anova(m)\n\n\n# weights:  8 (3 variable)\ninitial  value 98.426900 \niter  10 value 83.663951\nfinal  value 83.663925 \nconverged\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: state\n                 LR Chisq Df Pr(>Chisq)    \npretty_condition     41.3  3    5.7e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n# calculate z-statistics of coefficients\nz_stats <- summary(m)$coefficients/summary(m)$standard.errors\n# convert to p-values\np_values <- (1 - pnorm(abs(z_stats)))*2\n# display p-values in transposed data frame\n(p_values <- data.frame(p = (p_values)))\n\n\n           p..Intercept. p.pretty_conditionimpasse\nother           0.888933                  0.881461\nangular         0.809829                  0.824406\ntriangular      0.000735                  0.000501\n\n\nCODE\n# display odds ratios in transposed data frame\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\nodds_ratios <- data.frame(OR = exp(summary(m)$coefficients))\noptions(scipen = 2)\n(results <- cbind(odds_ratios, p_values))\n\n\n           OR..Intercept. OR.pretty_conditionimpasse p..Intercept.\nother          0.00000504                   453336.0      0.888933\nangular        0.00001881                    22779.9      0.809829\ntriangular     0.19230417                       10.4      0.000735\n           p.pretty_conditionimpasse\nother                       0.881461\nangular                     0.824406\ntriangular                  0.000501\n\n\n\n\nInference — CAN’T MODEL, SPARSE CELLS\nsample size is too low to estimate this model. There are no participants in the control condition with ‘other’ or ‘angular’ answers.\n\n\nVisualize\n\n\nCODE\n#:::::::: PLOT\n\n#GGSTATS | MODEL | LOG ODDS \n# ggcoefstats(m, output = \"plot\", \n#               # conf.level = 0.90,\n#               exclude.intercept = FALSE) + \n#   labs(x = \"Log Odds Estimate\", \n#        title = \"LOGODDS | Q1 State ~ condition\",\n#        subtitle = \"(p is for two tailed test)\")\n#:::::::: PLOT\n\n#PARAMETERS | MODEL | SIMULATED PARAMETERS\n# similar to bayesian dist of estimate\n# result <- simulate_parameters(m)\n# plot(result, show_intercept = TRUE, stack=FALSE)\n\n#PARAMETERS | MODEL | ODDS RATIO \n# result <- model_parameters(m1,exponentiate = TRUE)\n# #rename params \n# result$Parameter[1] <- \"condition [control]\"\n# result$Parameter[2] <- \"condition [impasse]\"\n# plot(result,   show_intercept = TRUE) +  labs(\n#   title = \"Model Parameter Estimates\"\n# ) + theme_clean() + theme(legend.position=\"blank\")\n\n#SJPLOT | MODEL | ODDS RATIO\n#library(sjPlot)\nplot_model(m, type = \"est\",\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) +  #manually adjusted for directional test   \n  # scale_y_continuous() + #remove to put on log scale x axis \n  scale_x_discrete(labels=c(\"control\",\"impasse\"))+\n  labs(title = \"MODEL ESTIMATE  | Q1 Accuracy ~ condition\",\n       subtitle = \"Impasse increases odds of correct response on Q1\",\n       x = \"Condition\") + theme_clean()\n\n\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"eff\", ci.lvl = 0.95)[[1]] +\n  ylim(0,1) +\n  labs(title = \"MODEL PREDICTION  | Q1 State ~ condition\",\n       subtitle = \"Impasse increases probability of more accurate response states Q1\",\n       x = \"Condition\") + theme_clean()\n\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\nCODE\n#MANUALLY BUILD PREDICTION PLOT FACET BY CONDITION RATHER THAN STATE\np <-plot_model(m, type=\"eff\")[[1]]\nd <- ggplot_build(p)[[1]]  \npoints <- d[[2]]\npoints <- points %>% mutate(\n  state = recode(PANEL, \"1\" =\"orth\", \"2\"=\"other\", \"3\" = \"trilike\", \"4\"=\"tri\"),\n  condition = recode(x, \"1\"=\"control\",\"2\"=\"impasse\"),\n  prob = y\n)\ngf_point( prob ~ state, group = ~x, data = points) + \n  geom_errorbar(aes( x = state, ymin = ymin, ymax = ymax)) + facet_grid(~condition) +ylim(0,1)\n\n\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \nstate\n\n\nPredictors\nOdds Ratios\nCI\np\nResponse\n\n\n(Intercept)\n0.00\n0.00 – 28722943722689885056297507068099247428705629324489501913190908976693248.00\n0.889\nother\n\n\npretty condition[impasse]\n453336.04\n0.00 – 2588676395945885478672530837777748631114813950974385474275281551223317278062804992.00\n0.882\nother\n\n\n(Intercept)\n0.00\n0.00 – 31041424057090752611383649685733376.00\n0.811\nangular\n\n\npretty condition[impasse]\n22779.87\n0.00 – 37983240834656997126437600879159232069369856.00\n0.825\nangular\n\n\n(Intercept)\n0.19\n0.07 – 0.51\n0.001\ntriangular\n\n\npretty condition[impasse]\n10.40\n2.71 – 39.87\n0.001\ntriangular\n\n\nObservations\n71\n\n\nR2 / R2 adjusted\n0.247 / 0.235\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n# modelsummary(mixcat.1, s)\n#TODO OUTPUT TABLE \n#https://arelbundock.com/posts/modelsummary_multinomial_logit/\n\n\n\n\nDiagnostics\n\n\nCODE\n#EXAMINE PREDICTIONS\n#create sample data frame\ntest <- data.frame(pretty_condition = c(\"control\", \"impasse\"))\npred <- predict(catm, newdata = test, \"probs\")\npaste(\"Predicted Probability of Being in Each State\")\n\n\n[1] \"Predicted Probability of Being in Each State\"\n\n\nCODE\n( x <- cbind(test, pred))\n\n\n  pretty_condition orthogonal      other   angular triangular\n1          control      0.839 0.00000423 0.0000158      0.161\n2          impasse      0.175 0.39999611 0.0750004      0.350\n\n\nCODE\nprint(\"MODEL PERFORMANCE\")\n\n\n[1] \"MODEL PERFORMANCE\"\n\n\nCODE\nperformance(catm)\n\n\nCan't calculate log-loss.\nCan't calculate proper scoring rules for ordinal, multinomial or cumulative link models.\n\n\n# Indices of model performance\n\nAIC     |     BIC |    R2 | R2 (adj.) |  RMSE | Sigma\n-----------------------------------------------------\n138.053 | 151.629 | 0.247 |     0.235 | 0.354 | 1.393\n\n\nCODE\nDescTools::PseudoR2(catm, which = c(\"McFadden\", \"CoxSnell\", \"Nagelkerke\"))\n\n\n  McFadden   CoxSnell Nagelkerke \n     0.247      0.441      0.487 \n\n\nCODE\n#General Goodness of Fit\n#library(generalhoslem)\n#logitgof(df$state, catm$fitted.values, g = 3)\n#A non-significant p value indicates that there is no evidence that the observed and expected frequencies differ (i.e., evidence of good fit).\n#don't fret! this version of the hoslem-lem test is problematic with fewer than 10 input variables\n# chisq.test(df$state, predict(catm)) #actual states VS predicted states\n# The chi-square test tests the decrease in unexplained variance from the baseline model to the final model\n\n# print(\"MODEL DIAGNOSTICS\")\n# check_model(m) can't do overall diagnostics, have to do them on individual model equations"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "",
    "text": "The purpose of this notebook is test the hypotheses that determined the design of the SGC3A study WITH OSPAN.\nIn SGC3A-OSPAN we set out to answer the following question: Does posing a mental impasse improve performance on the interval graph comprehension task? Does WORKING MEMORY CAPACITY (as measured by the OSPAN task) explain performance on the graph comprehension task?"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#sample",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#sample",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\nData was collected (online, via SONA) in Fall 2021. Note that approximately 200 subjects were run in Fall 2021, but only 133 of them completed the OSPAN task. Therefore subjects who did not complete the task are discarded from analysis.\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Control Condition\",\"Impasse Condition\",\"Total for Period\")\ncont <- table(df_subjects$term, df_subjects$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n      \n    Control Condition \n    Impasse Condition \n    Total for Period \n  \n \n\n  \n    fall21 \n    65 \n    68 \n    133 \n  \n  \n    Sum \n    65 \n    68 \n    133 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.male <- ((df_subjects %>% filter(gender==\"Male\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.female <- ((df_subjects %>% filter(gender==\"Female\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.other <- ((df_subjects %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())/count(df_subjects))$n\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n     \n    18 \n    19 \n    20 \n    21 \n    31 \n    20.6 \n    2.18 \n    133 \n    0 \n    0.316 \n    0.669 \n    0.015 \n  \n\n\nNote:   Age in Years\n\n\n\n\nREPORTED\nOverall 133 participants (32 % male, 67 % female, 2 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 31 years).\n[230 subjects were recorded to study database in FA21 - 32 pilot sgc3b]\n\n\nOSPAN\n\n\nCODE\ntitle = \"Descriptive Statistics of OSPAN Task Accuracy\"\nospan.stats <- rbind(\n  \"MATH\" = df_subjects %>% dplyr::select(OSPAN.math_acc) %>% unlist() %>% favstats(),\n  \"ORDER\" = df_subjects %>%  dplyr::select(OSPAN.order_acc) %>% unlist() %>% favstats(),\n  \"WEIGHTED\" = df_subjects %>% dplyr::select(OSPAN.weighted) %>% unlist() %>% favstats()\n\n)\nospan.stats %>% kbl (caption = title) %>% kable_classic() %>%\n  footnote(general = \"MATH = %correct of all math questions;\n           ORDER = % correct of OSPAN ordering (out of 30); WEIGHTED = math*ospan number correct\", general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nDescriptive Statistics of OSPAN Task Accuracy\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    MATH \n    0.517 \n    0.897 \n    0.931 \n    0.966 \n    1 \n    0.924 \n    0.085 \n    133 \n    0 \n  \n  \n    ORDER \n    0.000 \n    0.533 \n    0.733 \n    0.867 \n    1 \n    0.678 \n    0.253 \n    133 \n    0 \n  \n  \n    WEIGHTED \n    0.000 \n    13.448 \n    20.276 \n    24.828 \n    30 \n    19.082 \n    7.391 \n    133 \n    0 \n  \n\n\nNote:   MATH = %correct of all math questions;           ORDER = % correct of OSPAN ordering (out of 30); WEIGHTED = math*ospan number correct\n\n\n\n\n\n\nCODE\n# #GGFORMULA | DENSITY HISTOGRAM \n med = median(df_subjects$OSPAN.weighted)\n  gf_dhistogram(~OSPAN.weighted, data = df_subjects) %>% \n  gf_vline(xintercept = ~med, color = \"red\") +\n  labs(x = \"OSPAN (weighted) score\",\n       y = \"% of subjects\",\n       title = \"Distribution of OSPAN SCORE\",\n       subtitle = \"line indicates median split\")\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_subjects %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = ospan_split)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~ospan_split) + \n   labs(title = \"OSPAN SPLIT\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"After taking a median split, comparable high(vs) low in each condition\")"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#overall-accuracy",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#overall-accuracy",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "OVERALL ACCURACY",
    "text": "OVERALL ACCURACY\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% \n  dplyr::select(pretty_condition, accuracy, subject,q, ospan_split, OSPAN.weighted)\n\ndf_s <- df_subjects %>% \n  dplyr::select(pretty_condition, ospan_split, task_percent)\n\n\n\n\nVisualize\n\nExplore\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap( q ~ ospan_split) +\n   labs(title = \"Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Q6 and Q9 are non-discriminative\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\nstats = df_s %>% group_by(pretty_condition) %>% dplyr::summarise(mean = mean(task_percent))\ngf_props(~task_percent,\n         fill = ~pretty_condition, data = df_s) %>%\n  gf_facet_grid(pretty_condition ~ ospan_split) %>%\n  gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n  labs(x = \"% Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score (% Correct)\",\n       subtitle = \"\") + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nPresent\n\n\nCODE\n#TODO   \np <- grouped_ggbetweenstats(data = df_s,\n                       y = task_percent, x = pretty_condition, grouping.var = ospan_split,\n               plot.type = \"box\", type = \"nonparametric\", var.equal = FALSE,\n               centrality.type = \"parametric\",\n               results.subtitle = FALSE,\n               centrality.point.args = list(color=\"black\", size = 3, shape = 1),\n               # point.args = list(alpha=0), #suppress points\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  labs(y = \"Percentage of correct responses across task\", x = \"\"),\n                  aes(color = pretty_condition, fill = pretty_condition),\n                  scale_fill_grey(), scale_color_grey()\n                  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  # scale_fill_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3))\n                  # theme(axis.text.x = element_text(angle = 90)\n                )) \n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\nCODE\np1 <- p[[1]] + coord_flip() + theme_clean() +\n   ggeasy::easy_remove_legend()\n\np2 <- p[[2]] + coord_flip() + \n  labs(\n       subtitle = \"High working memory yields higher scores and greater variance in impasse condition\") + \n  theme_clean() + ggeasy::easy_remove_axes(which = \"x\") + ggeasy::easy_remove_legend()\n\n\npg <- plot_grid(p2, p1, ncol=1)\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Medium' not found in PostScript font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'BarlowSemiCondensed-Bold' not found in PostScript font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Barlow Semi Condensed' not found in PostScript font database\n\n\nCODE\npg\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\", width = 0.75 ) + #,color = \"black\") +\n  scale_fill_foxy(discrete = TRUE, \"accuracy\")  +\n  # scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))+\n  facet_wrap(~ospan_split)+\n  theme(legend.position=\"bottom\")+\n   labs(title = \"DISTRIBUTION | Question Accuracy\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"Impasse is particularly effective for participants with high-working memory\")\n\n\n\n\n\nCODE\n#:::::::: LABELLED \n# \n# temp <- df_i %>% mutate(\n#   accuracy = fct_rev(accuracy)\n# )  \n# \n# #CREATE PLOT WITH LABELS\n# p <- grouped_ggbarstats(data = temp, x = accuracy, y = pretty_condition,\n#                grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                ))  + theme_clean() \n# \n# #FIX LABELS\n# p1 <- p[[1]] +  labs(\n#   subtitle = \"Impasse is particularly effective for subjects with high-working memory\",\n#     x = \"Condition\", y = \"Probability of Response\"\n#   ) + theme_clean() + theme(legend.position = \"blank\") \n#  \n# p2 <-   p[[2]] + labs(\n#     x = \"Condition\", y = \"Probability of Response\",\n#     subtitle = \"   \"\n#   ) + theme_clean() + theme(legend.position = \"blank\") +\n#   ggeasy::easy_remove_axes(which=\"y\", what=c(\"text\",\"title\"))\n#   # ggeasy::easy_remove_axes(which=\"y\", what= \"\"))\n# \n# #CREATE ROW\n# \n# plot_row <- plot_grid(p1,p2, rel_widths = c(1,0.85))\n# \n# title <- ggdraw() + \n#   draw_label(\n#     \"DISTRIBUTION | Question Accuracy\",\n#     fontface = 'bold',\n#     x = 0,\n#     hjust = 0\n#   ) +\n#   theme(\n#     # add margin on the left of the drawing canvas,\n#     # so title is aligned with left edge of first plot\n#     plot.margin = margin(0, 0, 0, 7)\n#   )\n# \n# \n# pg <- plot_grid(\n#   title,\n#   plot_row,\n#   ncol = 1,\n#   # rel_heights values control vertical title margins\n#   rel_heights = c(0.1, 1)\n# ) + theme_clean()\n#   \n# pg\n# ggsave(pg, filename = \"figures/SGC3A_OSPAN_Accuracy.png\", width = 6, height =4)\n\n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct)\"\ntbl1 <- mosaic::favstats(~task_percent, data = df_s) \ntbl1 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0 \n    0 \n    0.077 \n    0.462 \n    1 \n    0.252 \n    0.37 \n    133 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\"\ntbl2 <- mosaic::favstats(task_percent ~ pretty_condition, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\n \n  \n    pretty_condition \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    control \n    0 \n    0 \n    0.000 \n    0.154 \n    1 \n    0.155 \n    0.303 \n    65 \n    0 \n  \n  \n    impasse \n    0 \n    0 \n    0.077 \n    0.788 \n    1 \n    0.345 \n    0.405 \n    68 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY OSPAN SPLIT\"\ntbl2 <- mosaic::favstats(task_percent ~ ospan_split, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY OSPAN SPLIT\n \n  \n    ospan_split \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    low-memory \n    0 \n    0 \n    0.077 \n    0.192 \n    1 \n    0.195 \n    0.314 \n    67 \n    0 \n  \n  \n    high-memory \n    0 \n    0 \n    0.077 \n    0.769 \n    1 \n    0.310 \n    0.413 \n    66 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY OSPAN SPLIT & CONDITION\"\ntbl2 <- mosaic::favstats(task_percent ~ ospan_split+pretty_condition, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY OSPAN SPLIT & CONDITION\n \n  \n    ospan_split.pretty_condition \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    low-memory.control \n    0 \n    0 \n    0.000 \n    0.077 \n    1 \n    0.149 \n    0.297 \n    31 \n    0 \n  \n  \n    high-memory.control \n    0 \n    0 \n    0.000 \n    0.154 \n    1 \n    0.161 \n    0.314 \n    34 \n    0 \n  \n  \n    low-memory.impasse \n    0 \n    0 \n    0.077 \n    0.423 \n    1 \n    0.235 \n    0.327 \n    36 \n    0 \n  \n  \n    high-memory.impasse \n    0 \n    0 \n    0.308 \n    1.000 \n    1 \n    0.469 \n    0.451 \n    32 \n    0 \n  \n\n\n\n\n\nREPORTED\nAcross both conditions, overall accuracy on the task ranges from 0 to 100 with a mean of 25.217. We see that the distribution of this outcome variable is clearly bimodal: with modes near the floor (0% correct) and ceiling (100% correct) of the scale. This bimodality is sensical considering the nature of the task, where each item in the task indexes a different information extraction operation over the same coordinate system.\nTask level accuracy on the graph comprehension task follows the same pattern of behaviour observed in Study 3A: the distribution is bimodal. Total scores were higher in the impasse condition (M = 35%, SD = 41%, n = 65) than control condition (M = 15%, SD = 30%, n = 68), implying a likely main effect of scaffold condition. Comparing total scores across the median split on the OSPAN task (high working memory (vs) low working memory), we see readers with high working memory (M = 31 %, SD = 41%, n = 66) performed better than readers with low working memory (M = 19 %, SD = 31%, n = 67). In Figure \\(\\ref{fig_3C_ospan_raw_accuracy}\\) we see that while readers in the impasse condition performed consistently better than those in the control condition, the effect is particularly pronounced for readers with high-working memory, implying a potential interaction between condition and working memory.\n\nWILCOXON RANK SUM (Mann-Whitney Test)\n\nNon parametric alternative to t-test; compares median rather than mean by ranking data\nDoes not assume normality\nDoes not assume equal variance of samples (homogeneity of variance)\n\n\nTest\n\n\nCODE\n#WILCOXON ON ACCURACY X OSPAN-SPLIT in LOW WORKING MEMORY\ndf_low <- df_s %>% filter(ospan_split == \"low-memory\")\n(w <- wilcox.test(df_low$task_percent ~ df_low$pretty_condition,\n                 paired = FALSE, alternative = \"less\")) #less, greater\n\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  df_low$task_percent by df_low$pretty_condition\nW = 458, p-value = 0.09\nalternative hypothesis: true location shift is less than 0\n\n\nCODE\n#WILCOXON ON ACCURACY X OSPAN-SPLIT in HIGH\ndf_high <- df_s %>% filter(ospan_split == \"high-memory\")\n(w <- wilcox.test(df_high$task_percent ~ df_high$pretty_condition,\n                 paired = FALSE, alternative = \"less\")) #less, greater\n\n\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  df_high$task_percent by df_high$pretty_condition\nW = 304, p-value = 0.0005\nalternative hypothesis: true location shift is less than 0\n\n\nCODE\ngrouped_ggbetweenstats( data = df_s, type = \"nonparametric\",\n                        y = task_percent, x = pretty_condition, grouping.var = ospan_split)\n\n\n\n\n\n\n\nInference — EFFECT\nA Wilcoxon-Rank sum test on task accuracy x condition for the low-memory participants indicate that impasse is not significantly higher. A Wilcoxon rank sum test on task accuracy x condition for high-memory participants indicate that impasse IS higher. Taken together, this indiates there may be an interaction between working memory and condition.\n\n\nVisualize\n\n\n\nMIXED LOGISTIC REGRESSION [IXN!!]\nFit a mixed logistic regression (at the item level), predicting accuracy (absolute score) on all discriminating questions by condition; accounting for random effects of subject and item.\nNOTE: that we take an opan_split on the data, but the same inference is valid on a mean-centered continuous OSPAN weighted score\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 13\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy) && is.factor(df_i$ospan_split)\n\n\n[1] FALSE\n\n\nCODE\n## 1 | SETUP RANDOM EFFECTS\n\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n## 2 | ADD FIXED EFFECT CONDITION\n\nprint(\"FIXED Condition + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.CrSQ <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n#summary(mm.CrSQ)\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.CrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.CrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |  Chi2 |      p\n--------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |       |       \nmm.CrSQ | glmerMod |  4 |       1 | 17.23 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rSQ,mm.CrSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0000330410023284755\"\n\n\nCODE\n## 3 | ADD INTERACTION OSPAN\n\nprint(\"FIXED Condition * FIXED OSPAN + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition * FIXED OSPAN + Subject & Item random intercepts\"\n\n\nCODE\nmm.COrSQ <- glmer(accuracy ~ pretty_condition *ospan_split + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# summary(mm.COrSQ)\n# car::Anova(mm.COrSQ)\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.CrSQ)) > AIC(logLik(mm.COrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.CrSQ,mm.COrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName     |    Model | df | df_diff | Chi2 |     p\n-------------------------------------------------\nmm.CrSQ  | glmerMod |  4 |         |      |      \nmm.COrSQ | glmerMod |  6 |       2 | 6.93 | 0.031\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.CrSQ,mm.COrSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0312599524800637\"\n\n\nCODE\npaste(\"Model Performance\")\n\n\n[1] \"Model Performance\"\n\n\nCODE\nperformance(mm.COrSQ)\n\n\n# Indices of model performance\n\nAIC     |    AICc |     BIC | R2 (cond.) | R2 (marg.) |   ICC |  RMSE | Sigma | Log_loss | Score_log | Score_spherical\n----------------------------------------------------------------------------------------------------------------------\n872.964 | 873.013 | 905.696 |      0.924 |      0.177 | 0.908 | 0.201 | 1.000 |    0.138 |      -Inf |           0.015\n\n\nREPORTED\nTo explore the effect of working memory capacity on ACCURACY, we fit a mixed effects logistic regression model with random intercepts for subjects and questions, with CONDITION, WORKING MEMORY and their interaction term as fixed effects. A likelihood ratio test indicates that a model including the fixed effect of CONDITION explains significantly more variance in the data than an intercepts-only baseline model (\\(\\chi^2 (3,4) = 17.23, p < 0.001\\)). The final model including fixed effects and interaction term of OSPAN is a significantly better fit than the CONDITION-only model (\\(\\chi^2(4,6) = 6.93, p < 0.05\\)). The explanatory power of the entire model is substantial (\\(conditional \\ R^2 = 0.92\\)) and the part related to the fixed effects CONDITION and WORKING MEMORY (\\(marginal \\ R^2\\)) explains 18% of variance.\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.COrSQ\nm %>% write_rds(file = \"analysis/SGC3A/models/sgc3a_glmer_acc_mm.COrSQ_OSPAN.rds\")\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ pretty_condition * ospan_split + (1 | subject) + (1 |  \n    q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n     873      906     -430      861     1723 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-7.040 -0.129 -0.031  0.024 11.797 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 31.30    5.59    \n q       (Intercept)  1.18    1.09    \nNumber of obs: 1729, groups:  subject, 133; q, 13\n\nFixed effects:\n                                               Estimate Std. Error z value\n(Intercept)                                      -6.832      1.463   -4.67\npretty_conditionimpasse                           2.348      1.599    1.47\nospan_splithigh-memory                           -0.669      1.432   -0.47\npretty_conditionimpasse:ospan_splithigh-memory    4.845      2.255    2.15\n                                               Pr(>|z|)    \n(Intercept)                                       3e-06 ***\npretty_conditionimpasse                           0.142    \nospan_splithigh-memory                            0.640    \npretty_conditionimpasse:ospan_splithigh-memory    0.032 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) prtty_ ospn_-\nprtty_cndtn -0.602              \nospn_splth- -0.594  0.531       \nprtty_cn:_-  0.183 -0.657 -0.625\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=3) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: accuracy\n                             Chisq Df Pr(>Chisq)    \n(Intercept)                  21.80  1      3e-06 ***\npretty_condition              2.15  1      0.142    \nospan_split                   0.22  1      0.640    \npretty_condition:ospan_split  4.62  1      0.032 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n# se <- sqrt(diag(stats::vcov(m)))\n# (tab <- cbind(Est = fixef(m),\n#               LL = fixef(m) - 1.96 * se,\n#               UL = fixef(m) + 1.96 * se))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 6 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…   -6.83       1.46    -4.67   3.03e-6   -9.70      -3.96\n2 fixed    <NA>   pret…    2.35       1.60     1.47   1.42e-1   -0.787      5.48\n3 fixed    <NA>   ospa…   -0.669      1.43    -0.467  6.40e-1   -3.47       2.14\n4 fixed    <NA>   pret…    4.84       2.25     2.15   3.17e-2    0.425      9.26\n5 ran_pars subje… sd__…    5.59      NA       NA     NA         NA         NA   \n6 ran_pars q      sd__…    1.09      NA       NA     NA         NA         NA   \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n# (e <- exp(tab))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 6 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…  1.08e-3   0.00158    -4.67   3.03e-6  6.13e-5   1.90e-2\n2 fixed    <NA>   pret…  1.05e+1  16.7         1.47   1.42e-1  4.55e-1   2.40e+2\n3 fixed    <NA>   ospa…  5.12e-1   0.733      -0.467  6.40e-1  3.10e-2   8.47e+0\n4 fixed    <NA>   pret…  1.27e+2 286.          2.15   3.17e-2  1.53e+0   1.05e+4\n5 ran_pars subje… sd__…  5.59e+0  NA          NA     NA       NA        NA      \n6 ran_pars q      sd__…  1.09e+0  NA          NA     NA       NA        NA      \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#sanity check\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\n# newdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n# preds <- predict(m, newdata = newdata, type = \"response\")\n# preds <- cbind(newdata, preds)\n# p <- preds %>% \n#   dplyr::select(pretty_condition, preds) %>% \n#   group_by(pretty_condition) %>% \n#   summarise(\n#     median = median(preds),\n#     se = sd(preds)/sqrt(n()),\n#     lwr = median - 1.96*se,\n#     upr = median + 1.96*se)\n    \n  \n#FROM merTools\nnewdata <- df_i %>% dplyr::select(pretty_condition, ospan_split, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning: executing %dopar% sequentially: no parallel backend registered\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(pretty_condition, ospan_split, fit, lwr, upr) %>% \n  group_by(pretty_condition, ospan_split) %>% \n  summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 4 × 5\n# Groups:   pretty_condition [2]\n  pretty_condition ospan_split   median     lower   upper\n  <fct>            <fct>          <dbl>     <dbl>   <dbl>\n1 control          low-memory  0.00119  0.000115  0.0118 \n2 control          high-memory 0.000589 0.0000722 0.00473\n3 impasse          low-memory  0.0118   0.00134   0.0931 \n4 impasse          high-memory 0.424    0.0899    0.845  \n\n\n\n\nINFERENCE\nREPORTED\nAlthough Wald Chi-Square tests revealed no significant main effects, there was a significant interaction between CONDITION and OSPAN, (\\(\\chi^2 (1) = 4.62, p < 0.05\\)). [SEE POSTHOCS BELOW]\nThe model predicts that, in the control condition, the probability of a correct response for a participant with high vs. low working memory increases from (0.1 to 0.5%) a negligible difference. In the impasse condition, however, the probability of a correct response increases from only 1% for participants with low working memory, to 42% for participants with high working memory. These results are consistent with the intuition we develop from Figure TODO. Participants with high working memory capacity are most able to take advantage of the impasse scaffold.\n\n\nInteractions\n\n\nCODE\n# https://cran.r-project.org/web/packages/emmeans/vignettes/interactions.html#simple\n# https://stats.oarc.ucla.edu/stata/faq/how-can-i-understand-a-categorical-by-categorical-interaction-in-logistic-regression-stata-12/\n# https://stats.oarc.ucla.edu/stata/seminars/deciphering-interactions-in-logistic-regression/\n  \nlibrary(emmeans)\n\n#sanity check reference grid\nref_grid(m)\n\n\n'emmGrid' object with variables:\n    pretty_condition = control, impasse\n    ospan_split = low-memory, high-memory\nTransformation: \"logit\" \n\n\nCODE\n#PRINT ESTIMATED MARGINAL MEANS\n#should be same as summ_preds\nemmeans(m,  ~ pretty_condition + ospan_split, type = \"response\")\n\n\n pretty_condition ospan_split  prob     SE  df asymp.LCL asymp.UCL\n control          low-memory  0.001 0.0016 Inf    0.0001     0.019\n impasse          low-memory  0.011 0.0151 Inf    0.0008     0.142\n control          high-memory 0.001 0.0007 Inf    0.0000     0.007\n impasse          high-memory 0.423 0.2877 Inf    0.0679     0.881\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n\nCODE\n##POST-HOC COMPARISONS\nprint(\"POSTHOC COMPARISONS\")\n\n\n[1] \"POSTHOC COMPARISONS\"\n\n\nCODE\nemmeans(m,  pairwise ~ pretty_condition + ospan_split, \n        type = \"response\" , adjust = \"none\") #sidak, tukey\n\n\n$emmeans\n pretty_condition ospan_split  prob     SE  df asymp.LCL asymp.UCL\n control          low-memory  0.001 0.0016 Inf    0.0001     0.019\n impasse          low-memory  0.011 0.0151 Inf    0.0008     0.142\n control          high-memory 0.001 0.0007 Inf    0.0000     0.007\n impasse          high-memory 0.423 0.2877 Inf    0.0679     0.881\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast                                      odds.ratio    SE  df null\n (control low-memory) / (impasse low-memory)         0.10  0.15 Inf    1\n (control low-memory) / (control high-memory)        1.95  2.80 Inf    1\n (control low-memory) / (impasse high-memory)        0.00  0.00 Inf    1\n (impasse low-memory) / (control high-memory)       20.42 30.13 Inf    1\n (impasse low-memory) / (impasse high-memory)        0.02  0.03 Inf    1\n (control high-memory) / (impasse high-memory)       0.00  0.00 Inf    1\n z.ratio p.value\n  -1.470  0.1420\n   0.470  0.6400\n  -3.560  <.0001\n   2.040  0.0410\n  -2.370  0.0180\n  -4.220  <.0001\n\nTests are performed on the log odds ratio scale \n\n\nCODE\n##PLOT INTERACTION\n#equivalent to plot_model, type = \"int\"\nemmip(m, ospan_split ~ pretty_condition ,\n      type = \"response\",\n      CIs = TRUE,\n      linearg = list(linetype = \"dashed\"),\n      engine = \"ggplot\")\n\n\n\n\n\nCODE\n##PLOT PROBABILITY\nplot(ref_grid(m), by = \"ospan_split\", type = \"response\")\n\n\n\n\n\nREPORTED\nPosthoc paired comparisons reveal that there is not a significant difference in accuracy between the control and impasse condition for participants in the low-memory group (OR = 0.1, SE = 0.15, z = -1.47, p = 0.46). For those with low working memory capacity, performance with comparably low, regardless of condition.\nFor those who were assigned to the control condition, working memory capacity did not change performance. There was not significant difference in accuracy between participants with low vs. high working memory (OR = 1.95, SE= 2.80, z = 0.47 p = 0.97).\nFor those assigned to the impasse condition, however, if you had high working memory capacity, you had significantly higher probability of accurate responses (OR = 0.02, SE = 0.03, z = -2.370 p = 0.0180).\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# title = \"Study 3C (OSPAN) | Question Accuracy | Mixed Logistic Regression\"\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              paste(\"n = \",n_obs(m), \"R^2(Conditional) =\", round(r2(m)[[1]],2),\n#                    \"R^2(Marginal) =\", round(r2(m)[[2]],2)),\n#              \"Accuracy  ~ Condition * OSPAN +  (1 | subject) + (1 | q)\")\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = title,\n#              notes = notes,\n#              output = \"tables/SGC3C_OSPAN_GLMER_OverallAccuracy.tex\")\n#              # coef_omit = \"Intercept\",\n\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n#ONLY FOR BAYESIAN VERSION\n# result <- rope(m)\n# plot(result)\n# \n# result <- pd(m)\n# plot(result)\n\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\",\n           axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")  \n\n\n$pretty_condition\n\n\n\n\n\n\n$ospan_split\n\n\n\n\n\nCODE\nplot_model(m, type = \"eff\")  \n\n\n$pretty_condition\n\n\n\n\n\n\n$ospan_split\n\n\n\n\n\nCODE\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n#GGDIST | MODEL | PREDICTED PROBABILITIES\npreds %>% \n  ggplot(aes( x = fit, y = pretty_condition, fill = ospan_split)) + \n  stat_halfeye(alpha = 0.5, normalize = \"panels\") + \n  xlim(0,0.3) + theme_clean() + labs(\n    title = \"Model PREDICTION | Probability of Accurate Response\",\n    subtitle = \"TODO check preds to see if fixed or includes random\"\n  )\n\n\nWarning: Removed 416 rows containing missing values (stat_slabinterval).\n\n\n\n\n\n\n\nCODE\n## PLOT INTERACTION\nlibrary(ggeffects)\n\n\n\nAttaching package: 'ggeffects'\n\n\nThe following object is masked from 'package:cowplot':\n\n    get_title\n\n\nThe following object is masked from 'package:modelr':\n\n    data_grid\n\n\nCODE\nggpredict(m, terms = c(\"pretty_condition\",\"ospan_split\")) %>% \n  plot(connect.lines = TRUE) + \n  scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 2)) + \n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"Condition\"\n) + theme(legend.position=\"bottom\")\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#overall-interpretation-state",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#overall-interpretation-state",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "OVERALL INTERPRETATION STATE",
    "text": "OVERALL INTERPRETATION STATE\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular => indicates a correct triangular coordinate understanding\n\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% dplyr::select(q,subject,state,pretty_condition, ospan_split) %>% droplevels()\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  facet_wrap(~ospan_split) +\n   labs(title = \"Interpretation across all Questions\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  # scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(q ~ ospan_split) +\n   labs(title = \"Interpretation by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\n\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_foxy(discrete = TRUE, \"state\")  +\n  facet_wrap(~ospan_split) +\n  labs(title = \"DISTRIBUTION | Interpretation\",\n       x = \"Condition\", y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"\") + theme_clean()\n\n\n\n\n\n\n\nCODE\n#:::::::: LABELLED \n\n# temp <- df_i %>% mutate(\n#   state = fct_rev(state)\n# )  \n# \n# p <-   grouped_ggbarstats(data = temp, x = state, y = pretty_condition,\n#                           grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                ))  + theme_clean() + theme(legend.position = \"bottom\")\n# \n# p <- p + labs(title = \"DISTRIBUTION | Question Accuracy\",\n#          y = \"Proportion of Questions\", x = \"Condition\",\n#          subtitle = \"Impasse condition yields more correct responses\")\n# \n# p\n# # ggsave(p, filename = \"figures/SGC3A_LAB_Accuracy.png\", width = 6, height =4)\n\n\n#:::::::: LABELLED \n# \n# temp <- df_i \n# # %>% mutate(\n# #   accuracy = fct_rev(accuracy)\n# # )\n# \n# #CREATE PLOT WITH LABELS\n# p <- grouped_ggbarstats(data = temp, x = state, y = pretty_condition,\n#                grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                )) \n# \n# #FIX LABELS\n# p1 <- p[[1]] +  labs(\n#   subtitle = \"Impasse is particularly effective for subjects with high-working memory\",\n#     x = \"Condition\", y = \"Probability of Response\"\n#   ) + theme_clean() + theme(legend.position = \"blank\") \n#  \n# p2 <-   p[[2]] + labs(\n#     x = \"Condition\", y = \"Probability of Response\",\n#     subtitle = \"   \"\n#   ) + theme_clean() + theme(legend.position = \"blank\") +\n#   ggeasy::easy_remove_axes(which=\"y\", what=c(\"text\",\"title\"))\n#   # ggeasy::easy_remove_axes(which=\"y\", what= \"\"))\n# \n# #CREATE ROW\n# \n# plot_row <- plot_grid(p1,p2, rel_widths = c(1,0.85))\n# \n# title <- ggdraw() + \n#   draw_label(\n#     \"DISTRIBUTION | Question Accuracy\",\n#     fontface = 'bold',\n#     x = 0,\n#     hjust = 0\n#   ) +\n#   theme(\n#     # add margin on the left of the drawing canvas,\n#     # so title is aligned with left edge of first plot\n#     plot.margin = margin(0, 0, 0, 7)\n#   )\n# \n# \n# pg <- plot_grid(\n#   title,\n#   plot_row,\n#   ncol = 1,\n#   # rel_heights values control vertical title margins\n#   rel_heights = c(0.1, 1)\n# ) + theme_clean()\n#   \n# \n# update_geom_defaults(\"text\", list(colour = \"grey20\", family = theme_get()$text$family))\n# \n# \n# pg\n\n\n# ggsave(pg, filename = \"figures/SGC3A_OSPAN_Accuracy.png\", width = 6, height =4)\n\n\n\n\nDescribe\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             control impasse    Sum\n  orthogonal  0.6686  0.3224 0.4916\n  other       0.1361  0.2704 0.2047\n  angular     0.0402  0.0622 0.0515\n  triangular  0.1550  0.3450 0.2522\n  Sum         1.0000  1.0000 1.0000\n\n\nCODE\n(t <- table(df_i$state, df_i$pretty_condition, df_i$ospan_split) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n, ,  = low-memory\n\n            \n             control impasse Sum\n  orthogonal     269     171 440\n  other           58     151 209\n  angular         16      36  52\n  triangular      60     110 170\n  Sum            403     468 871\n\n, ,  = high-memory\n\n            \n             control impasse Sum\n  orthogonal     296     114 410\n  other           57      88 145\n  angular         18      19  37\n  triangular      71     195 266\n  Sum            442     416 858\n\n\n\n\nMIXED MULTINOMIAL REGRESSION\nDoes condition affect the response state of of items across the task?\nFit a MIXED logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\nmblogit version wouldn’t coverge, so using brms\n\n\nFit Model [brms]\n\n\nCODE\ninf_priors_condition <- c(\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"mutriangular\")\n)\n\ninf_priors_condition.ospan <- c(\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"mutriangular\"),\n  #prior on OSPAN COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"ospan_splithighMmemory\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"ospan_splithighMmemory\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"ospan_splithighMmemory\", dpar = \"mutriangular\")\n)\n\ninf_priors_ixn <- c(\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on CONDITION COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse\", dpar = \"mutriangular\"),\n  #prior on OSPAN COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"ospan_splithighMmemory\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"ospan_splithighMmemory\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"ospan_splithighMmemory\", dpar = \"mutriangular\"),\n  #prior on IXN COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse:ospan_splithighMmemory\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse:ospan_splithighMmemory\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimpasse:ospan_splithighMmemory\", dpar = \"mutriangular\")\n)\n\n#BAYESIAN RANDOM ONLY\nBmm.cat.rSQ <- brm( state ~ 1 + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3A/models/sgc3a_brms_state_Bmm.cat.rSQ_OSPAN.rds\")\n\n\n# CONDITION ONLY MODEL\nBmm.cat.CrSQ <- brm( state ~ pretty_condition + (1|subject) + (1|q), \n                 data = df_i, \n                 prior = inf_priors_condition,\n                 family = \"categorical\",\n                 chains = 4, iter = 2000, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 backend = \"cmdstanr\",\n                 file =\"analysis/SGC3A/models/sgc3a_brms_state_Bmm.cat.CrSQ_OSPAN.rds\")\n\n\n##MODEL COMPARISON\n# print(\"MODEL COMPARISON: random effects (vs) CONDITION\")\n# bayesfactor(Bmm.cat.rSQ, Bmm.cat.CrSQ)\n#substantial evidence in favor of conditon model over random only BF 1.64e+16\n\n\n# CONDITION + OSPAN MODEL\nBmm.cat.C.OrSQ <- brm( state ~ pretty_condition+ospan_split + (1|subject) + (1|q), \n                 data = df_i, \n                 prior = inf_priors_condition.ospan,\n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 backend = \"cmdstanr\",\n                 file =\"analysis/SGC3A/models/sgc3a_brms_state_Bmm.cat.C.OrSQ_OSPAN.rds\")\n# summary(Bmm.cat.C.OrSQ)\n# describe_posterior(Bmm.cat.C.OrSQ)\n\n\n# CONDITION * OSPAN MODEL\nBmm.cat.COrSQ <- brm( state ~ pretty_condition*ospan_split + (1|subject) + (1|q), \n                 data = df_i, \n                 prior = inf_priors_ixn,\n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3A/models/sgc3a_brms_state_Bmm.cat.COrSQ_OSPAN.rds\")\n# describe_posterior(Bmm.cat.COrSQ)\n\n\n##MODEL COMPARISON\nprint(\"IS FACTORIAL better than MAIN EFFECTS model?\")\n\n\n[1] \"IS FACTORIAL better than MAIN EFFECTS model?\"\n\n\nCODE\n(b <- bayesfactor(Bmm.cat.CrSQ, Bmm.cat.COrSQ))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\n\n\nRecompiling the model with 'rstan'\n\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -mmacosx-version-min=10.13 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include   -fPIC  -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n\n\nRecompilation done\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nBayes Factors for Model Comparison\n\n    Model                                                       BF\n[2] pretty_condition * ospan_split + (1 | subject) + (1 | q) 0.324\n\n* Against Denominator: [1] pretty_condition + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\ncompare_models(Bmm.cat.CrSQ, Bmm.cat.COrSQ)\n\n\nParameter                                                   |         Bmm.cat.CrSQ |        Bmm.cat.COrSQ\n---------------------------------------------------------------------------------------------------------\nmuother_Intercept                                           | -2.03 (-2.82, -1.27) | -1.95 (-2.80, -1.18)\nmuangular_Intercept                                         | -3.94 (-5.19, -2.71) | -4.10 (-5.53, -2.72)\nmutriangular_Intercept                                      | -4.70 (-6.43, -3.14) | -4.82 (-6.86, -2.93)\nmuother_pretty_conditionimpasse                             |  1.80 ( 1.37,  2.25) |  1.81 ( 1.23,  2.45)\nmuangular_pretty_conditionimpasse                           |  1.67 ( 0.90,  2.50) |  1.85 ( 0.79,  3.00)\nmutriangular_pretty_conditionimpasse                        |  3.56 ( 1.61,  5.54) |  2.45 ( 0.24,  4.68)\nmuother_ospan_splithighMmemory                              |                      | -0.18 (-0.81,  0.45)\nmuother_pretty_conditionimpasse:ospan_splithighMmemory      |                      | -0.08 (-0.98,  0.81)\nmutriangular_ospan_splithighMmemory                         |                      |  0.07 (-2.25,  2.28)\nmuangular_ospan_splithighMmemory                            |                      |  0.16 (-1.01,  1.32)\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory    |                      | -0.33 (-1.84,  1.23)\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory |                      |  2.76 (-0.12,  5.52)\n---------------------------------------------------------------------------------------------------------\nObservations                                                |                 1729 |                 1729\n\n\nReported\nTo quantify the effect of working memory capacity on INTERPRETATION, we fit a (bayesian) mixed multinomial regression model with random intercepts for subjects and questions.\nA Bayes Factor model comparison (against a random intercepts only model) indicates extreme evidence for the final model including fixed effects of CONDITION, OSPAN and their interaction term (BF = 1.69e+13)\n(note, the BF may change as it is estimated via simulation each time)\n\n\nDescribe\n\n\nCODE\n# best model\nm <- Bmm.cat.COrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n Family: categorical \n  Links: muother = logit; muangular = logit; mutriangular = logit \nFormula: state ~ pretty_condition * ospan_split + (1 | subject) + (1 | q) \n   Data: df_i (Number of observations: 1729) \n  Draws: 4 chains, each with iter = 2500; warmup = 1000; thin = 1;\n         total post-warmup draws = 6000\n\nGroup-Level Effects: \n~q (Number of levels: 13) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.28      0.32     0.81     2.07 1.00     1338\nsd(muangular_Intercept)        1.97      0.56     1.18     3.36 1.00     1556\nsd(mutriangular_Intercept)     1.50      0.37     0.95     2.37 1.00     1924\n                           Tail_ESS\nsd(muother_Intercept)          2804\nsd(muangular_Intercept)        2534\nsd(mutriangular_Intercept)     3273\n\n~subject (Number of levels: 133) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          0.90      0.13     0.66     1.17 1.00     2005\nsd(muangular_Intercept)        1.65      0.28     1.15     2.24 1.00     1800\nsd(mutriangular_Intercept)     5.33      0.62     4.25     6.65 1.00     1149\n                           Tail_ESS\nsd(muother_Intercept)          3045\nsd(muangular_Intercept)        3459\nsd(mutriangular_Intercept)     2307\n\nPopulation-Level Effects: \n                                                            Estimate Est.Error\nmuother_Intercept                                              -1.96      0.42\nmuangular_Intercept                                            -4.11      0.71\nmutriangular_Intercept                                         -4.85      1.00\nmuother_pretty_conditionimpasse                                 1.82      0.31\nmuother_ospan_splithighMmemory                                 -0.18      0.32\nmuother_pretty_conditionimpasse:ospan_splithighMmemory         -0.07      0.45\nmuangular_pretty_conditionimpasse                               1.86      0.56\nmuangular_ospan_splithighMmemory                                0.16      0.59\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory       -0.32      0.78\nmutriangular_pretty_conditionimpasse                            2.47      1.12\nmutriangular_ospan_splithighMmemory                             0.05      1.17\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory     2.74      1.46\n                                                            l-95% CI u-95% CI\nmuother_Intercept                                              -2.80    -1.18\nmuangular_Intercept                                            -5.53    -2.72\nmutriangular_Intercept                                         -6.86    -2.93\nmuother_pretty_conditionimpasse                                 1.23     2.45\nmuother_ospan_splithighMmemory                                 -0.81     0.45\nmuother_pretty_conditionimpasse:ospan_splithighMmemory         -0.98     0.81\nmuangular_pretty_conditionimpasse                               0.79     3.00\nmuangular_ospan_splithighMmemory                               -1.01     1.32\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory       -1.84     1.23\nmutriangular_pretty_conditionimpasse                            0.24     4.68\nmutriangular_ospan_splithighMmemory                            -2.25     2.28\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory    -0.12     5.52\n                                                            Rhat Bulk_ESS\nmuother_Intercept                                           1.00     1051\nmuangular_Intercept                                         1.00     1411\nmutriangular_Intercept                                      1.00     1109\nmuother_pretty_conditionimpasse                             1.00     2022\nmuother_ospan_splithighMmemory                              1.00     2358\nmuother_pretty_conditionimpasse:ospan_splithighMmemory      1.00     1927\nmuangular_pretty_conditionimpasse                           1.00     1894\nmuangular_ospan_splithighMmemory                            1.00     1947\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory    1.00     1990\nmutriangular_pretty_conditionimpasse                        1.00      819\nmutriangular_ospan_splithighMmemory                         1.01     1166\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory 1.00     1281\n                                                            Tail_ESS\nmuother_Intercept                                               2068\nmuangular_Intercept                                             2534\nmutriangular_Intercept                                          1663\nmuother_pretty_conditionimpasse                                 2940\nmuother_ospan_splithighMmemory                                  3218\nmuother_pretty_conditionimpasse:ospan_splithighMmemory          3157\nmuangular_pretty_conditionimpasse                               2465\nmuangular_ospan_splithighMmemory                                3299\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory        2629\nmutriangular_pretty_conditionimpasse                            1699\nmutriangular_ospan_splithighMmemory                             2366\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory     2310\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCODE\n(d <- describe_posterior(ci=.95, m))\n\n\nSummary of Posterior Distribution\n\nParameter                                                   | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                                           |  -1.95 | [-2.80, -1.18] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1040.00\nmuangular_Intercept                                         |  -4.10 | [-5.53, -2.72] |   100% | [-0.18, 0.18] |        0% | 1.000 | 1378.00\nmutriangular_Intercept                                      |  -4.82 | [-6.86, -2.93] |   100% | [-0.18, 0.18] |        0% | 1.000 | 1102.00\nmuother_pretty_conditionimpasse                             |   1.81 | [ 1.23,  2.45] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1993.00\nmuother_ospan_splithighMmemory                              |  -0.18 | [-0.81,  0.45] | 71.52% | [-0.18, 0.18] |    38.68% | 1.001 | 2323.00\nmuother_pretty_conditionimpasse:ospan_splithighMmemory      |  -0.08 | [-0.98,  0.81] | 56.37% | [-0.18, 0.18] |    32.33% | 1.001 | 1907.00\nmuangular_pretty_conditionimpasse                           |   1.85 | [ 0.79,  3.00] | 99.98% | [-0.18, 0.18] |        0% | 1.001 | 1900.00\nmuangular_ospan_splithighMmemory                            |   0.16 | [-1.01,  1.32] | 60.73% | [-0.18, 0.18] |    25.18% | 1.002 | 1892.00\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory    |  -0.33 | [-1.84,  1.23] | 66.37% | [-0.18, 0.18] |    17.42% | 1.000 | 1986.00\nmutriangular_pretty_conditionimpasse                        |   2.45 | [ 0.24,  4.68] | 98.75% | [-0.18, 0.18] |        0% | 1.002 |  824.00\nmutriangular_ospan_splithighMmemory                         |   0.07 | [-2.25,  2.28] | 52.40% | [-0.18, 0.18] |    12.63% | 1.005 | 1164.00\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory |   2.76 | [-0.12,  5.52] | 97.03% | [-0.18, 0.18] |     1.37% | 1.001 | 1268.00\n\n\nCODE\nprint(\"BAYES FACTOR [comparison to RANDOM ONLY model]\")\n\n\n[1] \"BAYES FACTOR [comparison to RANDOM ONLY model]\"\n\n\nCODE\n#think of this like the anova(model) to get p values for each predictor\n#has to recompile the models with rstan. total drag\n#already calculated bayes factor above, this just interprets it\neffectsize::interpret_bf(exp(b$log_BF), include_value = TRUE)\n\n\n[1] \"no evidence (BF = 1.00) against or in favour of\"\n[2] \"moderate evidence (BF = 1/3.08) against\"        \n(Rules: jeffreys1961)\n\n\nCODE\nprint(\"DESCRIBE POSTERIOR\")\n\n\n[1] \"DESCRIBE POSTERIOR\"\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n(l <- describe_posterior(m))\n\n\nSummary of Posterior Distribution\n\nParameter                                                   | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                                           |  -1.95 | [-2.80, -1.18] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1040.00\nmuangular_Intercept                                         |  -4.10 | [-5.53, -2.72] |   100% | [-0.18, 0.18] |        0% | 1.000 | 1378.00\nmutriangular_Intercept                                      |  -4.82 | [-6.86, -2.93] |   100% | [-0.18, 0.18] |        0% | 1.000 | 1102.00\nmuother_pretty_conditionimpasse                             |   1.81 | [ 1.23,  2.45] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1993.00\nmuother_ospan_splithighMmemory                              |  -0.18 | [-0.81,  0.45] | 71.52% | [-0.18, 0.18] |    38.68% | 1.001 | 2323.00\nmuother_pretty_conditionimpasse:ospan_splithighMmemory      |  -0.08 | [-0.98,  0.81] | 56.37% | [-0.18, 0.18] |    32.33% | 1.001 | 1907.00\nmuangular_pretty_conditionimpasse                           |   1.85 | [ 0.79,  3.00] | 99.98% | [-0.18, 0.18] |        0% | 1.001 | 1900.00\nmuangular_ospan_splithighMmemory                            |   0.16 | [-1.01,  1.32] | 60.73% | [-0.18, 0.18] |    25.18% | 1.002 | 1892.00\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory    |  -0.33 | [-1.84,  1.23] | 66.37% | [-0.18, 0.18] |    17.42% | 1.000 | 1986.00\nmutriangular_pretty_conditionimpasse                        |   2.45 | [ 0.24,  4.68] | 98.75% | [-0.18, 0.18] |        0% | 1.002 |  824.00\nmutriangular_ospan_splithighMmemory                         |   0.07 | [-2.25,  2.28] | 52.40% | [-0.18, 0.18] |    12.63% | 1.005 | 1164.00\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory |   2.76 | [-0.12,  5.52] | 97.03% | [-0.18, 0.18] |     1.37% | 1.001 | 1268.00\n\n\nCODE\n# (tm <- tidy(m,   conf.int = TRUE))\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nParameter                                                   |   Median |         95% CI |     pd | % in ROPE |  Rhat |     ESS\n------------------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                                           |     0.14 | [0.06,   0.31] |   100% |        0% | 1.001 | 1040.00\nmuangular_Intercept                                         |     0.02 | [0.00,   0.07] |   100% |        0% | 1.000 | 1378.00\nmutriangular_Intercept                                      | 8.07e-03 | [0.00,   0.05] |   100% |        0% | 1.000 | 1102.00\nmuother_pretty_conditionimpasse                             |     6.13 | [3.42,  11.53] |   100% |        0% | 1.001 | 1993.00\nmuother_ospan_splithighMmemory                              |     0.83 | [0.44,   1.56] | 71.52% |    38.68% | 1.001 | 2323.00\nmuother_pretty_conditionimpasse:ospan_splithighMmemory      |     0.93 | [0.38,   2.25] | 56.37% |    32.33% | 1.001 | 1907.00\nmuangular_pretty_conditionimpasse                           |     6.39 | [2.21,  20.08] | 99.98% |        0% | 1.001 | 1900.00\nmuangular_ospan_splithighMmemory                            |     1.18 | [0.37,   3.74] | 60.73% |    25.18% | 1.002 | 1892.00\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory    |     0.72 | [0.16,   3.41] | 66.37% |    17.42% | 1.000 | 1986.00\nmutriangular_pretty_conditionimpasse                        |    11.64 | [1.27, 107.34] | 98.75% |        0% | 1.002 |  824.00\nmutriangular_ospan_splithighMmemory                         |     1.07 | [0.11,   9.76] | 52.40% |    12.63% | 1.005 | 1164.00\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory |    15.73 | [0.89, 249.91] | 97.03% |     1.37% | 1.001 | 1268.00\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#PREDICT METHOD\nnewdata <- df_i %>% dplyr::select(pretty_condition, ospan_split, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n# lengthen data frame to handle multinomial\npreds <- preds %>%\n  dplyr::select(-subject, -q) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = !pretty_condition & !ospan_split,\n  values_to = \"preds\",\n  names_to = \"state\",\n)\n\n(p <- preds %>%\n  group_by(pretty_condition, ospan_split, state ) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 16 × 7\n# Groups:   pretty_condition, ospan_split [4]\n   pretty_condition ospan_split state             median      se      lwr    upr\n   <fct>            <fct>       <chr>              <dbl>   <dbl>    <dbl>  <dbl>\n 1 control          low-memory  P(Y = angular)   0.0133  0.00376  0.00596 0.0207\n 2 control          low-memory  P(Y = orthogona… 0.755   0.0141   0.727   0.783 \n 3 control          low-memory  P(Y = other)     0.132   0.00576  0.121   0.143 \n 4 control          low-memory  P(Y = triangula… 0.00967 0.0145  -0.0188  0.0381\n 5 control          high-memory P(Y = angular)   0.0162  0.00296  0.0104  0.0220\n 6 control          high-memory P(Y = orthogona… 0.773   0.0142   0.746   0.801 \n 7 control          high-memory P(Y = other)     0.0953  0.00568  0.0842  0.106 \n 8 control          high-memory P(Y = triangula… 0.00733 0.0146  -0.0213  0.0360\n 9 impasse          low-memory  P(Y = angular)   0.0362  0.00473  0.0270  0.0455\n10 impasse          low-memory  P(Y = orthogona… 0.337   0.0119   0.314   0.361 \n11 impasse          low-memory  P(Y = other)     0.325   0.00989  0.305   0.344 \n12 impasse          low-memory  P(Y = triangula… 0.0511  0.0153   0.0212  0.0810\n13 impasse          high-memory P(Y = angular)   0.0128  0.00371  0.00548 0.0200\n14 impasse          high-memory P(Y = orthogona… 0.161   0.0140   0.134   0.189 \n15 impasse          high-memory P(Y = other)     0.113   0.0112   0.0909  0.135 \n16 impasse          high-memory P(Y = triangula… 0.341   0.0215   0.299   0.383 \n\n\nCODE\n##DRAWS METHOD\n# GENERATE draws from model\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# # SUMMARIZE draws from model\n# (k <- kable(draws %>%\n#   dplyr::select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 4, col.names =\n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>%\n#   kable_styling())\n\n\n\n## USING MARGINALEFFECTS package\nlibrary(marginaleffects)\n\n\n\n\nINFERENCE\n\n\nBayes Factor\n\nhttps://easystats.github.io/bayestestR/articles/bayes_factors.html\n\nCompute bayes factor for model parameters\n\n\nCODE\n#define null on the log odds scale as the range from -0.4 to 0.4, a 1.5X increase or decrease in odds \n(coef_bf <- bayesfactor(m, null = c(-0.4, 0.4)))\n\n\nSampling priors, please wait...\n\n\nBayes Factor (Null-Interval)\n\nParameter                                                   |       BF\n----------------------------------------------------------------------\nmuother_Intercept                                           |   624.85\nmuangular_Intercept                                         | 1.39e+03\nmutriangular_Intercept                                      | 1.34e+03\nmuother_pretty_conditionimpasse                             | 3.79e+03\nmuother_ospan_splithighMmemory                              |    0.060\nmuother_pretty_conditionimpasse:ospan_splithighMmemory      |    0.096\nmuangular_pretty_conditionimpasse                           |    31.39\nmuangular_ospan_splithighMmemory                            |    0.157\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory    |    0.254\nmutriangular_pretty_conditionimpasse                        |     5.71\nmutriangular_ospan_splithighMmemory                         |    0.398\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory |     3.85\n\n* Evidence Against The Null: [-0.400, 0.400]\n\n\nCODE\n#plot bayes factors\nplot(coef_bf)\n\n\n\n\n\nCODE\n#interpretation guidelines\neffectsize::interpret_bf(exp(coef_bf$log_BF), include_value = TRUE)\n\n\n [1] \"extreme evidence (BF = 624.85) in favour of\"   \n [2] \"extreme evidence (BF = 1.39e+03) in favour of\" \n [3] \"extreme evidence (BF = 1.34e+03) in favour of\" \n [4] \"extreme evidence (BF = 3.79e+03) in favour of\" \n [5] \"strong evidence (BF = 1/16.75) against\"        \n [6] \"strong evidence (BF = 1/10.41) against\"        \n [7] \"very strong evidence (BF = 31.39) in favour of\"\n [8] \"moderate evidence (BF = 1/6.35) against\"       \n [9] \"moderate evidence (BF = 1/3.93) against\"       \n[10] \"moderate evidence (BF = 5.71) in favour of\"    \n[11] \"anecdotal evidence (BF = 1/2.51) against\"      \n[12] \"moderate evidence (BF = 3.85) in favour of\"    \n(Rules: jeffreys1961)\n\n\nREPORTED\nThe model predicts similar probabilities for orthogonal, other, and angular interpretations by high vs. low working memory participants. It is only the (correct) triangular interpretation in which we have evidence for a reliable interaction between OSPAN and CONDITION.\nIt is only the (correct) triangular interpretation in which we have moderate evidence for a reliable interaction between OSPAN and CONDITION ($e^{_{interaction}} = 15.73,   95 %  CI   [0.89, 249.91],  pd = 97.3%, BF = 3.86 $)\nMuch like the pattern of results for accuracy, it is high working memory participants with higher probability of triangular responses, but only in impasse condition.\n\n\nInteractions\n\n\nCODE\n#EMMEANS doesn't support multinomial brms models. BUMMER\n#BUT brms has some built in stuffs. \n\n# FOR MAIN EFFECTS PLOTS \nprint(\"MAIN EFFECTS\")\n\n\n[1] \"MAIN EFFECTS\"\n\n\nCODE\nconditional_effects(m, categorical = TRUE)\n\n\nWarning: Interactions cannot be plotted directly if 'categorical' is TRUE.\nPlease use argument 'conditions' instead.\n\n\n\n\n\n\n\n\nCODE\nprint(\"INTERACTION PLOT\")\n\n\n[1] \"INTERACTION PLOT\"\n\n\nCODE\nconditions <- make_conditions(m, vars = c(\"ospan_split\"))\nconditional_effects(m, \"pretty_condition\", conditions = conditions,\n                    categorical = TRUE)\n\n\n\n\n\nCODE\nprint(\"INTERACTION PLOT\")\n\n\n[1] \"INTERACTION PLOT\"\n\n\nCODE\nplot_model(m, type=\"int\")\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\n\n\n\nCODE\n## MARGINAL EFFECTS\n\n# from easystats \n# library(modelbased)\n# uses emmeans, doesn't support brms categorical \n# estimate_contrasts(m, test = \"bf\", bf_prior = m)\n\n# library(marginaleffects)\n# https://vincentarelbundock.github.io/marginaleffects/articles/brms.html\n## takes a really long time... maybe hangs machine??\n(mfx <- marginaleffects::marginaleffects(m))\n\n\n     rowid     type      group             term                 contrast\n1        1 response orthogonal pretty_condition        impasse - control\n2        2 response orthogonal pretty_condition        impasse - control\n3        3 response orthogonal pretty_condition        impasse - control\n4        4 response orthogonal pretty_condition        impasse - control\n5        5 response orthogonal pretty_condition        impasse - control\n6        6 response orthogonal pretty_condition        impasse - control\n7        7 response orthogonal pretty_condition        impasse - control\n8        8 response orthogonal pretty_condition        impasse - control\n9        9 response orthogonal pretty_condition        impasse - control\n10      10 response orthogonal pretty_condition        impasse - control\n11      11 response orthogonal pretty_condition        impasse - control\n12      12 response orthogonal pretty_condition        impasse - control\n13      13 response orthogonal pretty_condition        impasse - control\n14      14 response orthogonal pretty_condition        impasse - control\n15      15 response orthogonal pretty_condition        impasse - control\n16      16 response orthogonal pretty_condition        impasse - control\n17      17 response orthogonal pretty_condition        impasse - control\n18      18 response orthogonal pretty_condition        impasse - control\n19      19 response orthogonal pretty_condition        impasse - control\n20      20 response orthogonal pretty_condition        impasse - control\n21      21 response orthogonal pretty_condition        impasse - control\n22      22 response orthogonal pretty_condition        impasse - control\n23      23 response orthogonal pretty_condition        impasse - control\n24      24 response orthogonal pretty_condition        impasse - control\n25      25 response orthogonal pretty_condition        impasse - control\n26      26 response orthogonal pretty_condition        impasse - control\n27      27 response orthogonal pretty_condition        impasse - control\n28      28 response orthogonal pretty_condition        impasse - control\n29      29 response orthogonal pretty_condition        impasse - control\n30      30 response orthogonal pretty_condition        impasse - control\n31      31 response orthogonal pretty_condition        impasse - control\n32      32 response orthogonal pretty_condition        impasse - control\n33      33 response orthogonal pretty_condition        impasse - control\n34      34 response orthogonal pretty_condition        impasse - control\n35      35 response orthogonal pretty_condition        impasse - control\n36      36 response orthogonal pretty_condition        impasse - control\n37      37 response orthogonal pretty_condition        impasse - control\n38      38 response orthogonal pretty_condition        impasse - control\n39      39 response orthogonal pretty_condition        impasse - control\n40      40 response orthogonal pretty_condition        impasse - control\n41      41 response orthogonal pretty_condition        impasse - control\n42      42 response orthogonal pretty_condition        impasse - control\n43      43 response orthogonal pretty_condition        impasse - control\n44      44 response orthogonal pretty_condition        impasse - control\n45      45 response orthogonal pretty_condition        impasse - control\n46      46 response orthogonal pretty_condition        impasse - control\n47      47 response orthogonal pretty_condition        impasse - control\n48      48 response orthogonal pretty_condition        impasse - control\n49      49 response orthogonal pretty_condition        impasse - control\n50      50 response orthogonal pretty_condition        impasse - control\n51      51 response orthogonal pretty_condition        impasse - control\n52      52 response orthogonal pretty_condition        impasse - control\n53      53 response orthogonal pretty_condition        impasse - control\n54      54 response orthogonal pretty_condition        impasse - control\n55      55 response orthogonal pretty_condition        impasse - control\n56      56 response orthogonal pretty_condition        impasse - control\n57      57 response orthogonal pretty_condition        impasse - control\n58      58 response orthogonal pretty_condition        impasse - control\n59      59 response orthogonal pretty_condition        impasse - control\n60      60 response orthogonal pretty_condition        impasse - control\n61      61 response orthogonal pretty_condition        impasse - control\n62      62 response orthogonal pretty_condition        impasse - control\n63      63 response orthogonal pretty_condition        impasse - control\n64      64 response orthogonal pretty_condition        impasse - control\n65      65 response orthogonal pretty_condition        impasse - control\n66      66 response orthogonal pretty_condition        impasse - control\n67      67 response orthogonal pretty_condition        impasse - control\n68      68 response orthogonal pretty_condition        impasse - control\n69      69 response orthogonal pretty_condition        impasse - control\n70      70 response orthogonal pretty_condition        impasse - control\n71      71 response orthogonal pretty_condition        impasse - control\n72      72 response orthogonal pretty_condition        impasse - control\n73      73 response orthogonal pretty_condition        impasse - control\n74      74 response orthogonal pretty_condition        impasse - control\n75      75 response orthogonal pretty_condition        impasse - control\n76      76 response orthogonal pretty_condition        impasse - control\n77      77 response orthogonal pretty_condition        impasse - control\n78      78 response orthogonal pretty_condition        impasse - control\n79      79 response orthogonal pretty_condition        impasse - control\n80      80 response orthogonal pretty_condition        impasse - control\n81      81 response orthogonal pretty_condition        impasse - control\n82      82 response orthogonal pretty_condition        impasse - control\n83      83 response orthogonal pretty_condition        impasse - control\n84      84 response orthogonal pretty_condition        impasse - control\n85      85 response orthogonal pretty_condition        impasse - control\n86      86 response orthogonal pretty_condition        impasse - control\n87      87 response orthogonal pretty_condition        impasse - control\n88      88 response orthogonal pretty_condition        impasse - control\n89      89 response orthogonal pretty_condition        impasse - control\n90      90 response orthogonal pretty_condition        impasse - control\n91      91 response orthogonal pretty_condition        impasse - control\n92      92 response orthogonal pretty_condition        impasse - control\n93      93 response orthogonal pretty_condition        impasse - control\n94      94 response orthogonal pretty_condition        impasse - control\n95      95 response orthogonal pretty_condition        impasse - control\n96      96 response orthogonal pretty_condition        impasse - control\n97      97 response orthogonal pretty_condition        impasse - control\n98      98 response orthogonal pretty_condition        impasse - control\n99      99 response orthogonal pretty_condition        impasse - control\n100    100 response orthogonal pretty_condition        impasse - control\n101    101 response orthogonal pretty_condition        impasse - control\n102    102 response orthogonal pretty_condition        impasse - control\n103    103 response orthogonal pretty_condition        impasse - control\n104    104 response orthogonal pretty_condition        impasse - control\n105    105 response orthogonal pretty_condition        impasse - control\n106    106 response orthogonal pretty_condition        impasse - control\n107    107 response orthogonal pretty_condition        impasse - control\n108    108 response orthogonal pretty_condition        impasse - control\n109    109 response orthogonal pretty_condition        impasse - control\n110    110 response orthogonal pretty_condition        impasse - control\n111    111 response orthogonal pretty_condition        impasse - control\n112    112 response orthogonal pretty_condition        impasse - control\n113    113 response orthogonal pretty_condition        impasse - control\n114    114 response orthogonal pretty_condition        impasse - control\n115    115 response orthogonal pretty_condition        impasse - control\n116    116 response orthogonal pretty_condition        impasse - control\n117    117 response orthogonal pretty_condition        impasse - control\n118    118 response orthogonal pretty_condition        impasse - control\n119    119 response orthogonal pretty_condition        impasse - control\n120    120 response orthogonal pretty_condition        impasse - control\n121    121 response orthogonal pretty_condition        impasse - control\n122    122 response orthogonal pretty_condition        impasse - control\n123    123 response orthogonal pretty_condition        impasse - control\n124    124 response orthogonal pretty_condition        impasse - control\n125    125 response orthogonal pretty_condition        impasse - control\n126    126 response orthogonal pretty_condition        impasse - control\n127    127 response orthogonal pretty_condition        impasse - control\n128    128 response orthogonal pretty_condition        impasse - control\n129    129 response orthogonal pretty_condition        impasse - control\n130    130 response orthogonal pretty_condition        impasse - control\n131    131 response orthogonal pretty_condition        impasse - control\n132    132 response orthogonal pretty_condition        impasse - control\n133    133 response orthogonal pretty_condition        impasse - control\n134    134 response orthogonal pretty_condition        impasse - control\n135    135 response orthogonal pretty_condition        impasse - control\n136    136 response orthogonal pretty_condition        impasse - control\n137    137 response orthogonal pretty_condition        impasse - control\n138    138 response orthogonal pretty_condition        impasse - control\n139    139 response orthogonal pretty_condition        impasse - control\n140    140 response orthogonal pretty_condition        impasse - control\n141    141 response orthogonal pretty_condition        impasse - control\n142    142 response orthogonal pretty_condition        impasse - control\n143    143 response orthogonal pretty_condition        impasse - control\n144    144 response orthogonal pretty_condition        impasse - control\n145    145 response orthogonal pretty_condition        impasse - control\n146    146 response orthogonal pretty_condition        impasse - control\n147    147 response orthogonal pretty_condition        impasse - control\n148    148 response orthogonal pretty_condition        impasse - control\n149    149 response orthogonal pretty_condition        impasse - control\n150    150 response orthogonal pretty_condition        impasse - control\n151    151 response orthogonal pretty_condition        impasse - control\n152    152 response orthogonal pretty_condition        impasse - control\n153    153 response orthogonal pretty_condition        impasse - control\n154    154 response orthogonal pretty_condition        impasse - control\n155    155 response orthogonal pretty_condition        impasse - control\n156    156 response orthogonal pretty_condition        impasse - control\n157    157 response orthogonal pretty_condition        impasse - control\n158    158 response orthogonal pretty_condition        impasse - control\n159    159 response orthogonal pretty_condition        impasse - control\n160    160 response orthogonal pretty_condition        impasse - control\n161    161 response orthogonal pretty_condition        impasse - control\n162    162 response orthogonal pretty_condition        impasse - control\n163    163 response orthogonal pretty_condition        impasse - control\n164    164 response orthogonal pretty_condition        impasse - control\n165    165 response orthogonal pretty_condition        impasse - control\n166    166 response orthogonal pretty_condition        impasse - control\n167    167 response orthogonal pretty_condition        impasse - control\n168    168 response orthogonal pretty_condition        impasse - control\n169    169 response orthogonal pretty_condition        impasse - control\n170    170 response orthogonal pretty_condition        impasse - control\n171    171 response orthogonal pretty_condition        impasse - control\n172    172 response orthogonal pretty_condition        impasse - control\n173    173 response orthogonal pretty_condition        impasse - control\n174    174 response orthogonal pretty_condition        impasse - control\n175    175 response orthogonal pretty_condition        impasse - control\n176    176 response orthogonal pretty_condition        impasse - control\n177    177 response orthogonal pretty_condition        impasse - control\n178    178 response orthogonal pretty_condition        impasse - control\n179    179 response orthogonal pretty_condition        impasse - control\n180    180 response orthogonal pretty_condition        impasse - control\n181    181 response orthogonal pretty_condition        impasse - control\n182    182 response orthogonal pretty_condition        impasse - control\n183    183 response orthogonal pretty_condition        impasse - control\n184    184 response orthogonal pretty_condition        impasse - control\n185    185 response orthogonal pretty_condition        impasse - control\n186    186 response orthogonal pretty_condition        impasse - control\n187    187 response orthogonal pretty_condition        impasse - control\n188    188 response orthogonal pretty_condition        impasse - control\n189    189 response orthogonal pretty_condition        impasse - control\n190    190 response orthogonal pretty_condition        impasse - control\n191    191 response orthogonal pretty_condition        impasse - control\n192    192 response orthogonal pretty_condition        impasse - control\n193    193 response orthogonal pretty_condition        impasse - control\n194    194 response orthogonal pretty_condition        impasse - control\n195    195 response orthogonal pretty_condition        impasse - control\n196    196 response orthogonal pretty_condition        impasse - control\n197    197 response orthogonal pretty_condition        impasse - control\n198    198 response orthogonal pretty_condition        impasse - control\n199    199 response orthogonal pretty_condition        impasse - control\n200    200 response orthogonal pretty_condition        impasse - control\n201    201 response orthogonal pretty_condition        impasse - control\n202    202 response orthogonal pretty_condition        impasse - control\n203    203 response orthogonal pretty_condition        impasse - control\n204    204 response orthogonal pretty_condition        impasse - control\n205    205 response orthogonal pretty_condition        impasse - control\n206    206 response orthogonal pretty_condition        impasse - control\n207    207 response orthogonal pretty_condition        impasse - control\n208    208 response orthogonal pretty_condition        impasse - control\n209    209 response orthogonal pretty_condition        impasse - control\n210    210 response orthogonal pretty_condition        impasse - control\n211    211 response orthogonal pretty_condition        impasse - control\n212    212 response orthogonal pretty_condition        impasse - control\n213    213 response orthogonal pretty_condition        impasse - control\n214    214 response orthogonal pretty_condition        impasse - control\n215    215 response orthogonal pretty_condition        impasse - control\n216    216 response orthogonal pretty_condition        impasse - control\n217    217 response orthogonal pretty_condition        impasse - control\n218    218 response orthogonal pretty_condition        impasse - control\n219    219 response orthogonal pretty_condition        impasse - control\n220    220 response orthogonal pretty_condition        impasse - control\n221    221 response orthogonal pretty_condition        impasse - control\n222    222 response orthogonal pretty_condition        impasse - control\n223    223 response orthogonal pretty_condition        impasse - control\n224    224 response orthogonal pretty_condition        impasse - control\n225    225 response orthogonal pretty_condition        impasse - control\n226    226 response orthogonal pretty_condition        impasse - control\n227    227 response orthogonal pretty_condition        impasse - control\n228    228 response orthogonal pretty_condition        impasse - control\n229    229 response orthogonal pretty_condition        impasse - control\n230    230 response orthogonal pretty_condition        impasse - control\n231    231 response orthogonal pretty_condition        impasse - control\n232    232 response orthogonal pretty_condition        impasse - control\n233    233 response orthogonal pretty_condition        impasse - control\n234    234 response orthogonal pretty_condition        impasse - control\n235    235 response orthogonal pretty_condition        impasse - control\n236    236 response orthogonal pretty_condition        impasse - control\n237    237 response orthogonal pretty_condition        impasse - control\n238    238 response orthogonal pretty_condition        impasse - control\n239    239 response orthogonal pretty_condition        impasse - control\n240    240 response orthogonal pretty_condition        impasse - control\n241    241 response orthogonal pretty_condition        impasse - control\n242    242 response orthogonal pretty_condition        impasse - control\n243    243 response orthogonal pretty_condition        impasse - control\n244    244 response orthogonal pretty_condition        impasse - control\n245    245 response orthogonal pretty_condition        impasse - control\n246    246 response orthogonal pretty_condition        impasse - control\n247    247 response orthogonal pretty_condition        impasse - control\n248    248 response orthogonal pretty_condition        impasse - control\n249    249 response orthogonal pretty_condition        impasse - control\n250    250 response orthogonal pretty_condition        impasse - control\n251    251 response orthogonal pretty_condition        impasse - control\n252    252 response orthogonal pretty_condition        impasse - control\n253    253 response orthogonal pretty_condition        impasse - control\n254    254 response orthogonal pretty_condition        impasse - control\n255    255 response orthogonal pretty_condition        impasse - control\n256    256 response orthogonal pretty_condition        impasse - control\n257    257 response orthogonal pretty_condition        impasse - control\n258    258 response orthogonal pretty_condition        impasse - control\n259    259 response orthogonal pretty_condition        impasse - control\n260    260 response orthogonal pretty_condition        impasse - control\n261    261 response orthogonal pretty_condition        impasse - control\n262    262 response orthogonal pretty_condition        impasse - control\n263    263 response orthogonal pretty_condition        impasse - control\n264    264 response orthogonal pretty_condition        impasse - control\n265    265 response orthogonal pretty_condition        impasse - control\n266    266 response orthogonal pretty_condition        impasse - control\n267    267 response orthogonal pretty_condition        impasse - control\n268    268 response orthogonal pretty_condition        impasse - control\n269    269 response orthogonal pretty_condition        impasse - control\n270    270 response orthogonal pretty_condition        impasse - control\n271    271 response orthogonal pretty_condition        impasse - control\n272    272 response orthogonal pretty_condition        impasse - control\n273    273 response orthogonal pretty_condition        impasse - control\n274    274 response orthogonal pretty_condition        impasse - control\n275    275 response orthogonal pretty_condition        impasse - control\n276    276 response orthogonal pretty_condition        impasse - control\n277    277 response orthogonal pretty_condition        impasse - control\n278    278 response orthogonal pretty_condition        impasse - control\n279    279 response orthogonal pretty_condition        impasse - control\n280    280 response orthogonal pretty_condition        impasse - control\n281    281 response orthogonal pretty_condition        impasse - control\n282    282 response orthogonal pretty_condition        impasse - control\n283    283 response orthogonal pretty_condition        impasse - control\n284    284 response orthogonal pretty_condition        impasse - control\n285    285 response orthogonal pretty_condition        impasse - control\n286    286 response orthogonal pretty_condition        impasse - control\n287    287 response orthogonal pretty_condition        impasse - control\n288    288 response orthogonal pretty_condition        impasse - control\n289    289 response orthogonal pretty_condition        impasse - control\n290    290 response orthogonal pretty_condition        impasse - control\n291    291 response orthogonal pretty_condition        impasse - control\n292    292 response orthogonal pretty_condition        impasse - control\n293    293 response orthogonal pretty_condition        impasse - control\n294    294 response orthogonal pretty_condition        impasse - control\n295    295 response orthogonal pretty_condition        impasse - control\n296    296 response orthogonal pretty_condition        impasse - control\n297    297 response orthogonal pretty_condition        impasse - control\n298    298 response orthogonal pretty_condition        impasse - control\n299    299 response orthogonal pretty_condition        impasse - control\n300    300 response orthogonal pretty_condition        impasse - control\n301    301 response orthogonal pretty_condition        impasse - control\n302    302 response orthogonal pretty_condition        impasse - control\n303    303 response orthogonal pretty_condition        impasse - control\n304    304 response orthogonal pretty_condition        impasse - control\n305    305 response orthogonal pretty_condition        impasse - control\n306    306 response orthogonal pretty_condition        impasse - control\n307    307 response orthogonal pretty_condition        impasse - control\n308    308 response orthogonal pretty_condition        impasse - control\n309    309 response orthogonal pretty_condition        impasse - control\n310    310 response orthogonal pretty_condition        impasse - control\n311    311 response orthogonal pretty_condition        impasse - control\n312    312 response orthogonal pretty_condition        impasse - control\n313    313 response orthogonal pretty_condition        impasse - control\n314    314 response orthogonal pretty_condition        impasse - control\n315    315 response orthogonal pretty_condition        impasse - control\n316    316 response orthogonal pretty_condition        impasse - control\n317    317 response orthogonal pretty_condition        impasse - control\n318    318 response orthogonal pretty_condition        impasse - control\n319    319 response orthogonal pretty_condition        impasse - control\n320    320 response orthogonal pretty_condition        impasse - control\n321    321 response orthogonal pretty_condition        impasse - control\n322    322 response orthogonal pretty_condition        impasse - control\n323    323 response orthogonal pretty_condition        impasse - control\n324    324 response orthogonal pretty_condition        impasse - control\n325    325 response orthogonal pretty_condition        impasse - control\n326    326 response orthogonal pretty_condition        impasse - control\n327    327 response orthogonal pretty_condition        impasse - control\n328    328 response orthogonal pretty_condition        impasse - control\n329    329 response orthogonal pretty_condition        impasse - control\n330    330 response orthogonal pretty_condition        impasse - control\n331    331 response orthogonal pretty_condition        impasse - control\n332    332 response orthogonal pretty_condition        impasse - control\n333    333 response orthogonal pretty_condition        impasse - control\n334    334 response orthogonal pretty_condition        impasse - control\n335    335 response orthogonal pretty_condition        impasse - control\n336    336 response orthogonal pretty_condition        impasse - control\n337    337 response orthogonal pretty_condition        impasse - control\n338    338 response orthogonal pretty_condition        impasse - control\n339    339 response orthogonal pretty_condition        impasse - control\n340    340 response orthogonal pretty_condition        impasse - control\n341    341 response orthogonal pretty_condition        impasse - control\n342    342 response orthogonal pretty_condition        impasse - control\n343    343 response orthogonal pretty_condition        impasse - control\n344    344 response orthogonal pretty_condition        impasse - control\n345    345 response orthogonal pretty_condition        impasse - control\n346    346 response orthogonal pretty_condition        impasse - control\n347    347 response orthogonal pretty_condition        impasse - control\n348    348 response orthogonal pretty_condition        impasse - control\n349    349 response orthogonal pretty_condition        impasse - control\n350    350 response orthogonal pretty_condition        impasse - control\n351    351 response orthogonal pretty_condition        impasse - control\n352    352 response orthogonal pretty_condition        impasse - control\n353    353 response orthogonal pretty_condition        impasse - control\n354    354 response orthogonal pretty_condition        impasse - control\n355    355 response orthogonal pretty_condition        impasse - control\n356    356 response orthogonal pretty_condition        impasse - control\n357    357 response orthogonal pretty_condition        impasse - control\n358    358 response orthogonal pretty_condition        impasse - control\n359    359 response orthogonal pretty_condition        impasse - control\n360    360 response orthogonal pretty_condition        impasse - control\n361    361 response orthogonal pretty_condition        impasse - control\n362    362 response orthogonal pretty_condition        impasse - control\n363    363 response orthogonal pretty_condition        impasse - control\n364    364 response orthogonal pretty_condition        impasse - control\n365    365 response orthogonal pretty_condition        impasse - control\n366    366 response orthogonal pretty_condition        impasse - control\n367    367 response orthogonal pretty_condition        impasse - control\n368    368 response orthogonal pretty_condition        impasse - control\n369    369 response orthogonal pretty_condition        impasse - control\n370    370 response orthogonal pretty_condition        impasse - control\n371    371 response orthogonal pretty_condition        impasse - control\n372    372 response orthogonal pretty_condition        impasse - control\n373    373 response orthogonal pretty_condition        impasse - control\n374    374 response orthogonal pretty_condition        impasse - control\n375    375 response orthogonal pretty_condition        impasse - control\n376    376 response orthogonal pretty_condition        impasse - control\n377    377 response orthogonal pretty_condition        impasse - control\n378    378 response orthogonal pretty_condition        impasse - control\n379    379 response orthogonal pretty_condition        impasse - control\n380    380 response orthogonal pretty_condition        impasse - control\n381    381 response orthogonal pretty_condition        impasse - control\n382    382 response orthogonal pretty_condition        impasse - control\n383    383 response orthogonal pretty_condition        impasse - control\n384    384 response orthogonal pretty_condition        impasse - control\n385    385 response orthogonal pretty_condition        impasse - control\n386    386 response orthogonal pretty_condition        impasse - control\n387    387 response orthogonal pretty_condition        impasse - control\n388    388 response orthogonal pretty_condition        impasse - control\n389    389 response orthogonal pretty_condition        impasse - control\n390    390 response orthogonal pretty_condition        impasse - control\n391    391 response orthogonal pretty_condition        impasse - control\n392    392 response orthogonal pretty_condition        impasse - control\n393    393 response orthogonal pretty_condition        impasse - control\n394    394 response orthogonal pretty_condition        impasse - control\n395    395 response orthogonal pretty_condition        impasse - control\n396    396 response orthogonal pretty_condition        impasse - control\n397    397 response orthogonal pretty_condition        impasse - control\n398    398 response orthogonal pretty_condition        impasse - control\n399    399 response orthogonal pretty_condition        impasse - control\n400    400 response orthogonal pretty_condition        impasse - control\n401    401 response orthogonal pretty_condition        impasse - control\n402    402 response orthogonal pretty_condition        impasse - control\n403    403 response orthogonal pretty_condition        impasse - control\n404    404 response orthogonal pretty_condition        impasse - control\n405    405 response orthogonal pretty_condition        impasse - control\n406    406 response orthogonal pretty_condition        impasse - control\n407    407 response orthogonal pretty_condition        impasse - control\n408    408 response orthogonal pretty_condition        impasse - control\n409    409 response orthogonal pretty_condition        impasse - control\n410    410 response orthogonal pretty_condition        impasse - control\n411    411 response orthogonal pretty_condition        impasse - control\n412    412 response orthogonal pretty_condition        impasse - control\n413    413 response orthogonal pretty_condition        impasse - control\n414    414 response orthogonal pretty_condition        impasse - control\n415    415 response orthogonal pretty_condition        impasse - control\n416    416 response orthogonal pretty_condition        impasse - control\n417    417 response orthogonal pretty_condition        impasse - control\n418    418 response orthogonal pretty_condition        impasse - control\n419    419 response orthogonal pretty_condition        impasse - control\n420    420 response orthogonal pretty_condition        impasse - control\n421    421 response orthogonal pretty_condition        impasse - control\n422    422 response orthogonal pretty_condition        impasse - control\n423    423 response orthogonal pretty_condition        impasse - control\n424    424 response orthogonal pretty_condition        impasse - control\n425    425 response orthogonal pretty_condition        impasse - control\n426    426 response orthogonal pretty_condition        impasse - control\n427    427 response orthogonal pretty_condition        impasse - control\n428    428 response orthogonal pretty_condition        impasse - control\n429    429 response orthogonal pretty_condition        impasse - control\n430    430 response orthogonal pretty_condition        impasse - control\n431    431 response orthogonal pretty_condition        impasse - control\n432    432 response orthogonal pretty_condition        impasse - control\n433    433 response orthogonal pretty_condition        impasse - control\n434    434 response orthogonal pretty_condition        impasse - control\n435    435 response orthogonal pretty_condition        impasse - control\n436    436 response orthogonal pretty_condition        impasse - control\n437    437 response orthogonal pretty_condition        impasse - control\n438    438 response orthogonal pretty_condition        impasse - control\n439    439 response orthogonal pretty_condition        impasse - control\n440    440 response orthogonal pretty_condition        impasse - control\n441    441 response orthogonal pretty_condition        impasse - control\n442    442 response orthogonal pretty_condition        impasse - control\n443    443 response orthogonal pretty_condition        impasse - control\n444    444 response orthogonal pretty_condition        impasse - control\n445    445 response orthogonal pretty_condition        impasse - control\n446    446 response orthogonal pretty_condition        impasse - control\n447    447 response orthogonal pretty_condition        impasse - control\n448    448 response orthogonal pretty_condition        impasse - control\n449    449 response orthogonal pretty_condition        impasse - control\n450    450 response orthogonal pretty_condition        impasse - control\n451    451 response orthogonal pretty_condition        impasse - control\n452    452 response orthogonal pretty_condition        impasse - control\n453    453 response orthogonal pretty_condition        impasse - control\n454    454 response orthogonal pretty_condition        impasse - control\n455    455 response orthogonal pretty_condition        impasse - control\n456    456 response orthogonal pretty_condition        impasse - control\n457    457 response orthogonal pretty_condition        impasse - control\n458    458 response orthogonal pretty_condition        impasse - control\n459    459 response orthogonal pretty_condition        impasse - control\n460    460 response orthogonal pretty_condition        impasse - control\n461    461 response orthogonal pretty_condition        impasse - control\n462    462 response orthogonal pretty_condition        impasse - control\n463    463 response orthogonal pretty_condition        impasse - control\n464    464 response orthogonal pretty_condition        impasse - control\n465    465 response orthogonal pretty_condition        impasse - control\n466    466 response orthogonal pretty_condition        impasse - control\n467    467 response orthogonal pretty_condition        impasse - control\n468    468 response orthogonal pretty_condition        impasse - control\n469    469 response orthogonal pretty_condition        impasse - control\n470    470 response orthogonal pretty_condition        impasse - control\n471    471 response orthogonal pretty_condition        impasse - control\n472    472 response orthogonal pretty_condition        impasse - control\n473    473 response orthogonal pretty_condition        impasse - control\n474    474 response orthogonal pretty_condition        impasse - control\n475    475 response orthogonal pretty_condition        impasse - control\n476    476 response orthogonal pretty_condition        impasse - control\n477    477 response orthogonal pretty_condition        impasse - control\n478    478 response orthogonal pretty_condition        impasse - control\n479    479 response orthogonal pretty_condition        impasse - control\n480    480 response orthogonal pretty_condition        impasse - control\n481    481 response orthogonal pretty_condition        impasse - control\n482    482 response orthogonal pretty_condition        impasse - control\n483    483 response orthogonal pretty_condition        impasse - control\n484    484 response orthogonal pretty_condition        impasse - control\n485    485 response orthogonal pretty_condition        impasse - control\n486    486 response orthogonal pretty_condition        impasse - control\n487    487 response orthogonal pretty_condition        impasse - control\n488    488 response orthogonal pretty_condition        impasse - control\n489    489 response orthogonal pretty_condition        impasse - control\n490    490 response orthogonal pretty_condition        impasse - control\n491    491 response orthogonal pretty_condition        impasse - control\n492    492 response orthogonal pretty_condition        impasse - control\n493    493 response orthogonal pretty_condition        impasse - control\n494    494 response orthogonal pretty_condition        impasse - control\n495    495 response orthogonal pretty_condition        impasse - control\n496    496 response orthogonal pretty_condition        impasse - control\n497    497 response orthogonal pretty_condition        impasse - control\n498    498 response orthogonal pretty_condition        impasse - control\n499    499 response orthogonal pretty_condition        impasse - control\n500    500 response orthogonal pretty_condition        impasse - control\n501    501 response orthogonal pretty_condition        impasse - control\n502    502 response orthogonal pretty_condition        impasse - control\n503    503 response orthogonal pretty_condition        impasse - control\n504    504 response orthogonal pretty_condition        impasse - control\n505    505 response orthogonal pretty_condition        impasse - control\n506    506 response orthogonal pretty_condition        impasse - control\n507    507 response orthogonal pretty_condition        impasse - control\n508    508 response orthogonal pretty_condition        impasse - control\n509    509 response orthogonal pretty_condition        impasse - control\n510    510 response orthogonal pretty_condition        impasse - control\n511    511 response orthogonal pretty_condition        impasse - control\n512    512 response orthogonal pretty_condition        impasse - control\n513    513 response orthogonal pretty_condition        impasse - control\n514    514 response orthogonal pretty_condition        impasse - control\n515    515 response orthogonal pretty_condition        impasse - control\n516    516 response orthogonal pretty_condition        impasse - control\n517    517 response orthogonal pretty_condition        impasse - control\n518    518 response orthogonal pretty_condition        impasse - control\n519    519 response orthogonal pretty_condition        impasse - control\n520    520 response orthogonal pretty_condition        impasse - control\n521    521 response orthogonal pretty_condition        impasse - control\n522    522 response orthogonal pretty_condition        impasse - control\n523    523 response orthogonal pretty_condition        impasse - control\n524    524 response orthogonal pretty_condition        impasse - control\n525    525 response orthogonal pretty_condition        impasse - control\n526    526 response orthogonal pretty_condition        impasse - control\n527    527 response orthogonal pretty_condition        impasse - control\n528    528 response orthogonal pretty_condition        impasse - control\n529    529 response orthogonal pretty_condition        impasse - control\n530    530 response orthogonal pretty_condition        impasse - control\n531    531 response orthogonal pretty_condition        impasse - control\n532    532 response orthogonal pretty_condition        impasse - control\n533    533 response orthogonal pretty_condition        impasse - control\n534    534 response orthogonal pretty_condition        impasse - control\n535    535 response orthogonal pretty_condition        impasse - control\n536    536 response orthogonal pretty_condition        impasse - control\n537    537 response orthogonal pretty_condition        impasse - control\n538    538 response orthogonal pretty_condition        impasse - control\n539    539 response orthogonal pretty_condition        impasse - control\n540    540 response orthogonal pretty_condition        impasse - control\n541    541 response orthogonal pretty_condition        impasse - control\n542    542 response orthogonal pretty_condition        impasse - control\n543    543 response orthogonal pretty_condition        impasse - control\n544    544 response orthogonal pretty_condition        impasse - control\n545    545 response orthogonal pretty_condition        impasse - control\n546    546 response orthogonal pretty_condition        impasse - control\n547    547 response orthogonal pretty_condition        impasse - control\n548    548 response orthogonal pretty_condition        impasse - control\n549    549 response orthogonal pretty_condition        impasse - control\n550    550 response orthogonal pretty_condition        impasse - control\n551    551 response orthogonal pretty_condition        impasse - control\n552    552 response orthogonal pretty_condition        impasse - control\n553    553 response orthogonal pretty_condition        impasse - control\n554    554 response orthogonal pretty_condition        impasse - control\n555    555 response orthogonal pretty_condition        impasse - control\n556    556 response orthogonal pretty_condition        impasse - control\n557    557 response orthogonal pretty_condition        impasse - control\n558    558 response orthogonal pretty_condition        impasse - control\n559    559 response orthogonal pretty_condition        impasse - control\n560    560 response orthogonal pretty_condition        impasse - control\n561    561 response orthogonal pretty_condition        impasse - control\n562    562 response orthogonal pretty_condition        impasse - control\n563    563 response orthogonal pretty_condition        impasse - control\n564    564 response orthogonal pretty_condition        impasse - control\n565    565 response orthogonal pretty_condition        impasse - control\n566    566 response orthogonal pretty_condition        impasse - control\n567    567 response orthogonal pretty_condition        impasse - control\n568    568 response orthogonal pretty_condition        impasse - control\n569    569 response orthogonal pretty_condition        impasse - control\n570    570 response orthogonal pretty_condition        impasse - control\n571    571 response orthogonal pretty_condition        impasse - control\n572    572 response orthogonal pretty_condition        impasse - control\n573    573 response orthogonal pretty_condition        impasse - control\n574    574 response orthogonal pretty_condition        impasse - control\n575    575 response orthogonal pretty_condition        impasse - control\n576    576 response orthogonal pretty_condition        impasse - control\n577    577 response orthogonal pretty_condition        impasse - control\n578    578 response orthogonal pretty_condition        impasse - control\n579    579 response orthogonal pretty_condition        impasse - control\n580    580 response orthogonal pretty_condition        impasse - control\n581    581 response orthogonal pretty_condition        impasse - control\n582    582 response orthogonal pretty_condition        impasse - control\n583    583 response orthogonal pretty_condition        impasse - control\n584    584 response orthogonal pretty_condition        impasse - control\n585    585 response orthogonal pretty_condition        impasse - control\n586    586 response orthogonal pretty_condition        impasse - control\n587    587 response orthogonal pretty_condition        impasse - control\n588    588 response orthogonal pretty_condition        impasse - control\n589    589 response orthogonal pretty_condition        impasse - control\n590    590 response orthogonal pretty_condition        impasse - control\n591    591 response orthogonal pretty_condition        impasse - control\n592    592 response orthogonal pretty_condition        impasse - control\n593    593 response orthogonal pretty_condition        impasse - control\n594    594 response orthogonal pretty_condition        impasse - control\n595    595 response orthogonal pretty_condition        impasse - control\n596    596 response orthogonal pretty_condition        impasse - control\n597    597 response orthogonal pretty_condition        impasse - control\n598    598 response orthogonal pretty_condition        impasse - control\n599    599 response orthogonal pretty_condition        impasse - control\n600    600 response orthogonal pretty_condition        impasse - control\n601    601 response orthogonal pretty_condition        impasse - control\n602    602 response orthogonal pretty_condition        impasse - control\n603    603 response orthogonal pretty_condition        impasse - control\n604    604 response orthogonal pretty_condition        impasse - control\n605    605 response orthogonal pretty_condition        impasse - control\n606    606 response orthogonal pretty_condition        impasse - control\n607    607 response orthogonal pretty_condition        impasse - control\n608    608 response orthogonal pretty_condition        impasse - control\n609    609 response orthogonal pretty_condition        impasse - control\n610    610 response orthogonal pretty_condition        impasse - control\n611    611 response orthogonal pretty_condition        impasse - control\n612    612 response orthogonal pretty_condition        impasse - control\n613    613 response orthogonal pretty_condition        impasse - control\n614    614 response orthogonal pretty_condition        impasse - control\n615    615 response orthogonal pretty_condition        impasse - control\n616    616 response orthogonal pretty_condition        impasse - control\n617    617 response orthogonal pretty_condition        impasse - control\n618    618 response orthogonal pretty_condition        impasse - control\n619    619 response orthogonal pretty_condition        impasse - control\n620    620 response orthogonal pretty_condition        impasse - control\n621    621 response orthogonal pretty_condition        impasse - control\n622    622 response orthogonal pretty_condition        impasse - control\n623    623 response orthogonal pretty_condition        impasse - control\n624    624 response orthogonal pretty_condition        impasse - control\n625    625 response orthogonal pretty_condition        impasse - control\n626    626 response orthogonal pretty_condition        impasse - control\n627    627 response orthogonal pretty_condition        impasse - control\n628    628 response orthogonal pretty_condition        impasse - control\n629    629 response orthogonal pretty_condition        impasse - control\n630    630 response orthogonal pretty_condition        impasse - control\n631    631 response orthogonal pretty_condition        impasse - control\n632    632 response orthogonal pretty_condition        impasse - control\n633    633 response orthogonal pretty_condition        impasse - control\n634    634 response orthogonal pretty_condition        impasse - control\n635    635 response orthogonal pretty_condition        impasse - control\n636    636 response orthogonal pretty_condition        impasse - control\n637    637 response orthogonal pretty_condition        impasse - control\n638    638 response orthogonal pretty_condition        impasse - control\n639    639 response orthogonal pretty_condition        impasse - control\n640    640 response orthogonal pretty_condition        impasse - control\n641    641 response orthogonal pretty_condition        impasse - control\n642    642 response orthogonal pretty_condition        impasse - control\n643    643 response orthogonal pretty_condition        impasse - control\n644    644 response orthogonal pretty_condition        impasse - control\n645    645 response orthogonal pretty_condition        impasse - control\n646    646 response orthogonal pretty_condition        impasse - control\n647    647 response orthogonal pretty_condition        impasse - control\n648    648 response orthogonal pretty_condition        impasse - control\n649    649 response orthogonal pretty_condition        impasse - control\n650    650 response orthogonal pretty_condition        impasse - control\n651    651 response orthogonal pretty_condition        impasse - control\n652    652 response orthogonal pretty_condition        impasse - control\n653    653 response orthogonal pretty_condition        impasse - control\n654    654 response orthogonal pretty_condition        impasse - control\n655    655 response orthogonal pretty_condition        impasse - control\n656    656 response orthogonal pretty_condition        impasse - control\n657    657 response orthogonal pretty_condition        impasse - control\n658    658 response orthogonal pretty_condition        impasse - control\n659    659 response orthogonal pretty_condition        impasse - control\n660    660 response orthogonal pretty_condition        impasse - control\n661    661 response orthogonal pretty_condition        impasse - control\n662    662 response orthogonal pretty_condition        impasse - control\n663    663 response orthogonal pretty_condition        impasse - control\n664    664 response orthogonal pretty_condition        impasse - control\n665    665 response orthogonal pretty_condition        impasse - control\n666    666 response orthogonal pretty_condition        impasse - control\n667    667 response orthogonal pretty_condition        impasse - control\n668    668 response orthogonal pretty_condition        impasse - control\n669    669 response orthogonal pretty_condition        impasse - control\n670    670 response orthogonal pretty_condition        impasse - control\n671    671 response orthogonal pretty_condition        impasse - control\n672    672 response orthogonal pretty_condition        impasse - control\n673    673 response orthogonal pretty_condition        impasse - control\n674    674 response orthogonal pretty_condition        impasse - control\n675    675 response orthogonal pretty_condition        impasse - control\n676    676 response orthogonal pretty_condition        impasse - control\n677    677 response orthogonal pretty_condition        impasse - control\n678    678 response orthogonal pretty_condition        impasse - control\n679    679 response orthogonal pretty_condition        impasse - control\n680    680 response orthogonal pretty_condition        impasse - control\n681    681 response orthogonal pretty_condition        impasse - control\n682    682 response orthogonal pretty_condition        impasse - control\n683    683 response orthogonal pretty_condition        impasse - control\n684    684 response orthogonal pretty_condition        impasse - control\n685    685 response orthogonal pretty_condition        impasse - control\n686    686 response orthogonal pretty_condition        impasse - control\n687    687 response orthogonal pretty_condition        impasse - control\n688    688 response orthogonal pretty_condition        impasse - control\n689    689 response orthogonal pretty_condition        impasse - control\n690    690 response orthogonal pretty_condition        impasse - control\n691    691 response orthogonal pretty_condition        impasse - control\n692    692 response orthogonal pretty_condition        impasse - control\n693    693 response orthogonal pretty_condition        impasse - control\n694    694 response orthogonal pretty_condition        impasse - control\n695    695 response orthogonal pretty_condition        impasse - control\n696    696 response orthogonal pretty_condition        impasse - control\n697    697 response orthogonal pretty_condition        impasse - control\n698    698 response orthogonal pretty_condition        impasse - control\n699    699 response orthogonal pretty_condition        impasse - control\n700    700 response orthogonal pretty_condition        impasse - control\n701    701 response orthogonal pretty_condition        impasse - control\n702    702 response orthogonal pretty_condition        impasse - control\n703    703 response orthogonal pretty_condition        impasse - control\n704    704 response orthogonal pretty_condition        impasse - control\n705    705 response orthogonal pretty_condition        impasse - control\n706    706 response orthogonal pretty_condition        impasse - control\n707    707 response orthogonal pretty_condition        impasse - control\n708    708 response orthogonal pretty_condition        impasse - control\n709    709 response orthogonal pretty_condition        impasse - control\n710    710 response orthogonal pretty_condition        impasse - control\n711    711 response orthogonal pretty_condition        impasse - control\n712    712 response orthogonal pretty_condition        impasse - control\n713    713 response orthogonal pretty_condition        impasse - control\n714    714 response orthogonal pretty_condition        impasse - control\n715    715 response orthogonal pretty_condition        impasse - control\n716    716 response orthogonal pretty_condition        impasse - control\n717    717 response orthogonal pretty_condition        impasse - control\n718    718 response orthogonal pretty_condition        impasse - control\n719    719 response orthogonal pretty_condition        impasse - control\n720    720 response orthogonal pretty_condition        impasse - control\n721    721 response orthogonal pretty_condition        impasse - control\n722    722 response orthogonal pretty_condition        impasse - control\n723    723 response orthogonal pretty_condition        impasse - control\n724    724 response orthogonal pretty_condition        impasse - control\n725    725 response orthogonal pretty_condition        impasse - control\n726    726 response orthogonal pretty_condition        impasse - control\n727    727 response orthogonal pretty_condition        impasse - control\n728    728 response orthogonal pretty_condition        impasse - control\n729    729 response orthogonal pretty_condition        impasse - control\n730    730 response orthogonal pretty_condition        impasse - control\n731    731 response orthogonal pretty_condition        impasse - control\n732    732 response orthogonal pretty_condition        impasse - control\n733    733 response orthogonal pretty_condition        impasse - control\n734    734 response orthogonal pretty_condition        impasse - control\n735    735 response orthogonal pretty_condition        impasse - control\n736    736 response orthogonal pretty_condition        impasse - control\n737    737 response orthogonal pretty_condition        impasse - control\n738    738 response orthogonal pretty_condition        impasse - control\n739    739 response orthogonal pretty_condition        impasse - control\n740    740 response orthogonal pretty_condition        impasse - control\n741    741 response orthogonal pretty_condition        impasse - control\n742    742 response orthogonal pretty_condition        impasse - control\n743    743 response orthogonal pretty_condition        impasse - control\n744    744 response orthogonal pretty_condition        impasse - control\n745    745 response orthogonal pretty_condition        impasse - control\n746    746 response orthogonal pretty_condition        impasse - control\n747    747 response orthogonal pretty_condition        impasse - control\n748    748 response orthogonal pretty_condition        impasse - control\n749    749 response orthogonal pretty_condition        impasse - control\n750    750 response orthogonal pretty_condition        impasse - control\n751    751 response orthogonal pretty_condition        impasse - control\n752    752 response orthogonal pretty_condition        impasse - control\n753    753 response orthogonal pretty_condition        impasse - control\n754    754 response orthogonal pretty_condition        impasse - control\n755    755 response orthogonal pretty_condition        impasse - control\n756    756 response orthogonal pretty_condition        impasse - control\n757    757 response orthogonal pretty_condition        impasse - control\n758    758 response orthogonal pretty_condition        impasse - control\n759    759 response orthogonal pretty_condition        impasse - control\n760    760 response orthogonal pretty_condition        impasse - control\n761    761 response orthogonal pretty_condition        impasse - control\n762    762 response orthogonal pretty_condition        impasse - control\n763    763 response orthogonal pretty_condition        impasse - control\n764    764 response orthogonal pretty_condition        impasse - control\n765    765 response orthogonal pretty_condition        impasse - control\n766    766 response orthogonal pretty_condition        impasse - control\n767    767 response orthogonal pretty_condition        impasse - control\n768    768 response orthogonal pretty_condition        impasse - control\n769    769 response orthogonal pretty_condition        impasse - control\n770    770 response orthogonal pretty_condition        impasse - control\n771    771 response orthogonal pretty_condition        impasse - control\n772    772 response orthogonal pretty_condition        impasse - control\n773    773 response orthogonal pretty_condition        impasse - control\n774    774 response orthogonal pretty_condition        impasse - control\n775    775 response orthogonal pretty_condition        impasse - control\n776    776 response orthogonal pretty_condition        impasse - control\n777    777 response orthogonal pretty_condition        impasse - control\n778    778 response orthogonal pretty_condition        impasse - control\n779    779 response orthogonal pretty_condition        impasse - control\n780    780 response orthogonal pretty_condition        impasse - control\n781    781 response orthogonal pretty_condition        impasse - control\n782    782 response orthogonal pretty_condition        impasse - control\n783    783 response orthogonal pretty_condition        impasse - control\n784    784 response orthogonal pretty_condition        impasse - control\n785    785 response orthogonal pretty_condition        impasse - control\n786    786 response orthogonal pretty_condition        impasse - control\n787    787 response orthogonal pretty_condition        impasse - control\n788    788 response orthogonal pretty_condition        impasse - control\n789    789 response orthogonal pretty_condition        impasse - control\n790    790 response orthogonal pretty_condition        impasse - control\n791    791 response orthogonal pretty_condition        impasse - control\n792    792 response orthogonal pretty_condition        impasse - control\n793    793 response orthogonal pretty_condition        impasse - control\n794    794 response orthogonal pretty_condition        impasse - control\n795    795 response orthogonal pretty_condition        impasse - control\n796    796 response orthogonal pretty_condition        impasse - control\n797    797 response orthogonal pretty_condition        impasse - control\n798    798 response orthogonal pretty_condition        impasse - control\n799    799 response orthogonal pretty_condition        impasse - control\n800    800 response orthogonal pretty_condition        impasse - control\n801    801 response orthogonal pretty_condition        impasse - control\n802    802 response orthogonal pretty_condition        impasse - control\n803    803 response orthogonal pretty_condition        impasse - control\n804    804 response orthogonal pretty_condition        impasse - control\n805    805 response orthogonal pretty_condition        impasse - control\n806    806 response orthogonal pretty_condition        impasse - control\n807    807 response orthogonal pretty_condition        impasse - control\n808    808 response orthogonal pretty_condition        impasse - control\n809    809 response orthogonal pretty_condition        impasse - control\n810    810 response orthogonal pretty_condition        impasse - control\n811    811 response orthogonal pretty_condition        impasse - control\n812    812 response orthogonal pretty_condition        impasse - control\n813    813 response orthogonal pretty_condition        impasse - control\n814    814 response orthogonal pretty_condition        impasse - control\n815    815 response orthogonal pretty_condition        impasse - control\n816    816 response orthogonal pretty_condition        impasse - control\n817    817 response orthogonal pretty_condition        impasse - control\n818    818 response orthogonal pretty_condition        impasse - control\n819    819 response orthogonal pretty_condition        impasse - control\n820    820 response orthogonal pretty_condition        impasse - control\n821    821 response orthogonal pretty_condition        impasse - control\n822    822 response orthogonal pretty_condition        impasse - control\n823    823 response orthogonal pretty_condition        impasse - control\n824    824 response orthogonal pretty_condition        impasse - control\n825    825 response orthogonal pretty_condition        impasse - control\n826    826 response orthogonal pretty_condition        impasse - control\n827    827 response orthogonal pretty_condition        impasse - control\n828    828 response orthogonal pretty_condition        impasse - control\n829    829 response orthogonal pretty_condition        impasse - control\n830    830 response orthogonal pretty_condition        impasse - control\n831    831 response orthogonal pretty_condition        impasse - control\n832    832 response orthogonal pretty_condition        impasse - control\n833    833 response orthogonal pretty_condition        impasse - control\n834    834 response orthogonal pretty_condition        impasse - control\n835    835 response orthogonal pretty_condition        impasse - control\n836    836 response orthogonal pretty_condition        impasse - control\n837    837 response orthogonal pretty_condition        impasse - control\n838    838 response orthogonal pretty_condition        impasse - control\n839    839 response orthogonal pretty_condition        impasse - control\n840    840 response orthogonal pretty_condition        impasse - control\n841    841 response orthogonal pretty_condition        impasse - control\n842    842 response orthogonal pretty_condition        impasse - control\n843    843 response orthogonal pretty_condition        impasse - control\n844    844 response orthogonal pretty_condition        impasse - control\n845    845 response orthogonal pretty_condition        impasse - control\n846    846 response orthogonal pretty_condition        impasse - control\n847    847 response orthogonal pretty_condition        impasse - control\n848    848 response orthogonal pretty_condition        impasse - control\n849    849 response orthogonal pretty_condition        impasse - control\n850    850 response orthogonal pretty_condition        impasse - control\n851    851 response orthogonal pretty_condition        impasse - control\n852    852 response orthogonal pretty_condition        impasse - control\n853    853 response orthogonal pretty_condition        impasse - control\n854    854 response orthogonal pretty_condition        impasse - control\n855    855 response orthogonal pretty_condition        impasse - control\n856    856 response orthogonal pretty_condition        impasse - control\n857    857 response orthogonal pretty_condition        impasse - control\n858    858 response orthogonal pretty_condition        impasse - control\n859    859 response orthogonal pretty_condition        impasse - control\n860    860 response orthogonal pretty_condition        impasse - control\n861    861 response orthogonal pretty_condition        impasse - control\n862    862 response orthogonal pretty_condition        impasse - control\n863    863 response orthogonal pretty_condition        impasse - control\n864    864 response orthogonal pretty_condition        impasse - control\n865    865 response orthogonal pretty_condition        impasse - control\n866    866 response orthogonal pretty_condition        impasse - control\n867    867 response orthogonal pretty_condition        impasse - control\n868    868 response orthogonal pretty_condition        impasse - control\n869    869 response orthogonal pretty_condition        impasse - control\n870    870 response orthogonal pretty_condition        impasse - control\n871    871 response orthogonal pretty_condition        impasse - control\n872    872 response orthogonal pretty_condition        impasse - control\n873    873 response orthogonal pretty_condition        impasse - control\n874    874 response orthogonal pretty_condition        impasse - control\n875    875 response orthogonal pretty_condition        impasse - control\n876    876 response orthogonal pretty_condition        impasse - control\n877    877 response orthogonal pretty_condition        impasse - control\n878    878 response orthogonal pretty_condition        impasse - control\n879    879 response orthogonal pretty_condition        impasse - control\n880    880 response orthogonal pretty_condition        impasse - control\n881    881 response orthogonal pretty_condition        impasse - control\n882    882 response orthogonal pretty_condition        impasse - control\n883    883 response orthogonal pretty_condition        impasse - control\n884    884 response orthogonal pretty_condition        impasse - control\n885    885 response orthogonal pretty_condition        impasse - control\n886    886 response orthogonal pretty_condition        impasse - control\n887    887 response orthogonal pretty_condition        impasse - control\n888    888 response orthogonal pretty_condition        impasse - control\n889    889 response orthogonal pretty_condition        impasse - control\n890    890 response orthogonal pretty_condition        impasse - control\n891    891 response orthogonal pretty_condition        impasse - control\n892    892 response orthogonal pretty_condition        impasse - control\n893    893 response orthogonal pretty_condition        impasse - control\n894    894 response orthogonal pretty_condition        impasse - control\n895    895 response orthogonal pretty_condition        impasse - control\n896    896 response orthogonal pretty_condition        impasse - control\n897    897 response orthogonal pretty_condition        impasse - control\n898    898 response orthogonal pretty_condition        impasse - control\n899    899 response orthogonal pretty_condition        impasse - control\n900    900 response orthogonal pretty_condition        impasse - control\n901    901 response orthogonal pretty_condition        impasse - control\n902    902 response orthogonal pretty_condition        impasse - control\n903    903 response orthogonal pretty_condition        impasse - control\n904    904 response orthogonal pretty_condition        impasse - control\n905    905 response orthogonal pretty_condition        impasse - control\n906    906 response orthogonal pretty_condition        impasse - control\n907    907 response orthogonal pretty_condition        impasse - control\n908    908 response orthogonal pretty_condition        impasse - control\n909    909 response orthogonal pretty_condition        impasse - control\n910    910 response orthogonal pretty_condition        impasse - control\n911    911 response orthogonal pretty_condition        impasse - control\n912    912 response orthogonal pretty_condition        impasse - control\n913    913 response orthogonal pretty_condition        impasse - control\n914    914 response orthogonal pretty_condition        impasse - control\n915    915 response orthogonal pretty_condition        impasse - control\n916    916 response orthogonal pretty_condition        impasse - control\n917    917 response orthogonal pretty_condition        impasse - control\n918    918 response orthogonal pretty_condition        impasse - control\n919    919 response orthogonal pretty_condition        impasse - control\n920    920 response orthogonal pretty_condition        impasse - control\n921    921 response orthogonal pretty_condition        impasse - control\n922    922 response orthogonal pretty_condition        impasse - control\n923    923 response orthogonal pretty_condition        impasse - control\n924    924 response orthogonal pretty_condition        impasse - control\n925    925 response orthogonal pretty_condition        impasse - control\n926    926 response orthogonal pretty_condition        impasse - control\n927    927 response orthogonal pretty_condition        impasse - control\n928    928 response orthogonal pretty_condition        impasse - control\n929    929 response orthogonal pretty_condition        impasse - control\n930    930 response orthogonal pretty_condition        impasse - control\n931    931 response orthogonal pretty_condition        impasse - control\n932    932 response orthogonal pretty_condition        impasse - control\n933    933 response orthogonal pretty_condition        impasse - control\n934    934 response orthogonal pretty_condition        impasse - control\n935    935 response orthogonal pretty_condition        impasse - control\n936    936 response orthogonal pretty_condition        impasse - control\n937    937 response orthogonal pretty_condition        impasse - control\n938    938 response orthogonal pretty_condition        impasse - control\n939    939 response orthogonal pretty_condition        impasse - control\n940    940 response orthogonal pretty_condition        impasse - control\n941    941 response orthogonal pretty_condition        impasse - control\n942    942 response orthogonal pretty_condition        impasse - control\n943    943 response orthogonal pretty_condition        impasse - control\n944    944 response orthogonal pretty_condition        impasse - control\n945    945 response orthogonal pretty_condition        impasse - control\n946    946 response orthogonal pretty_condition        impasse - control\n947    947 response orthogonal pretty_condition        impasse - control\n948    948 response orthogonal pretty_condition        impasse - control\n949    949 response orthogonal pretty_condition        impasse - control\n950    950 response orthogonal pretty_condition        impasse - control\n951    951 response orthogonal pretty_condition        impasse - control\n952    952 response orthogonal pretty_condition        impasse - control\n953    953 response orthogonal pretty_condition        impasse - control\n954    954 response orthogonal pretty_condition        impasse - control\n955    955 response orthogonal pretty_condition        impasse - control\n956    956 response orthogonal pretty_condition        impasse - control\n957    957 response orthogonal pretty_condition        impasse - control\n958    958 response orthogonal pretty_condition        impasse - control\n959    959 response orthogonal pretty_condition        impasse - control\n960    960 response orthogonal pretty_condition        impasse - control\n961    961 response orthogonal pretty_condition        impasse - control\n962    962 response orthogonal pretty_condition        impasse - control\n963    963 response orthogonal pretty_condition        impasse - control\n964    964 response orthogonal pretty_condition        impasse - control\n965    965 response orthogonal pretty_condition        impasse - control\n966    966 response orthogonal pretty_condition        impasse - control\n967    967 response orthogonal pretty_condition        impasse - control\n968    968 response orthogonal pretty_condition        impasse - control\n969    969 response orthogonal pretty_condition        impasse - control\n970    970 response orthogonal pretty_condition        impasse - control\n971    971 response orthogonal pretty_condition        impasse - control\n972    972 response orthogonal pretty_condition        impasse - control\n973    973 response orthogonal pretty_condition        impasse - control\n974    974 response orthogonal pretty_condition        impasse - control\n975    975 response orthogonal pretty_condition        impasse - control\n976    976 response orthogonal pretty_condition        impasse - control\n977    977 response orthogonal pretty_condition        impasse - control\n978    978 response orthogonal pretty_condition        impasse - control\n979    979 response orthogonal pretty_condition        impasse - control\n980    980 response orthogonal pretty_condition        impasse - control\n981    981 response orthogonal pretty_condition        impasse - control\n982    982 response orthogonal pretty_condition        impasse - control\n983    983 response orthogonal pretty_condition        impasse - control\n984    984 response orthogonal pretty_condition        impasse - control\n985    985 response orthogonal pretty_condition        impasse - control\n986    986 response orthogonal pretty_condition        impasse - control\n987    987 response orthogonal pretty_condition        impasse - control\n988    988 response orthogonal pretty_condition        impasse - control\n989    989 response orthogonal pretty_condition        impasse - control\n990    990 response orthogonal pretty_condition        impasse - control\n991    991 response orthogonal pretty_condition        impasse - control\n992    992 response orthogonal pretty_condition        impasse - control\n993    993 response orthogonal pretty_condition        impasse - control\n994    994 response orthogonal pretty_condition        impasse - control\n995    995 response orthogonal pretty_condition        impasse - control\n996    996 response orthogonal pretty_condition        impasse - control\n997    997 response orthogonal pretty_condition        impasse - control\n998    998 response orthogonal pretty_condition        impasse - control\n999    999 response orthogonal pretty_condition        impasse - control\n1000  1000 response orthogonal pretty_condition        impasse - control\n1001  1001 response orthogonal pretty_condition        impasse - control\n1002  1002 response orthogonal pretty_condition        impasse - control\n1003  1003 response orthogonal pretty_condition        impasse - control\n1004  1004 response orthogonal pretty_condition        impasse - control\n1005  1005 response orthogonal pretty_condition        impasse - control\n1006  1006 response orthogonal pretty_condition        impasse - control\n1007  1007 response orthogonal pretty_condition        impasse - control\n1008  1008 response orthogonal pretty_condition        impasse - control\n1009  1009 response orthogonal pretty_condition        impasse - control\n1010  1010 response orthogonal pretty_condition        impasse - control\n1011  1011 response orthogonal pretty_condition        impasse - control\n1012  1012 response orthogonal pretty_condition        impasse - control\n1013  1013 response orthogonal pretty_condition        impasse - control\n1014  1014 response orthogonal pretty_condition        impasse - control\n1015  1015 response orthogonal pretty_condition        impasse - control\n1016  1016 response orthogonal pretty_condition        impasse - control\n1017  1017 response orthogonal pretty_condition        impasse - control\n1018  1018 response orthogonal pretty_condition        impasse - control\n1019  1019 response orthogonal pretty_condition        impasse - control\n1020  1020 response orthogonal pretty_condition        impasse - control\n1021  1021 response orthogonal pretty_condition        impasse - control\n1022  1022 response orthogonal pretty_condition        impasse - control\n1023  1023 response orthogonal pretty_condition        impasse - control\n1024  1024 response orthogonal pretty_condition        impasse - control\n1025  1025 response orthogonal pretty_condition        impasse - control\n1026  1026 response orthogonal pretty_condition        impasse - control\n1027  1027 response orthogonal pretty_condition        impasse - control\n1028  1028 response orthogonal pretty_condition        impasse - control\n1029  1029 response orthogonal pretty_condition        impasse - control\n1030  1030 response orthogonal pretty_condition        impasse - control\n1031  1031 response orthogonal pretty_condition        impasse - control\n1032  1032 response orthogonal pretty_condition        impasse - control\n1033  1033 response orthogonal pretty_condition        impasse - control\n1034  1034 response orthogonal pretty_condition        impasse - control\n1035  1035 response orthogonal pretty_condition        impasse - control\n1036  1036 response orthogonal pretty_condition        impasse - control\n1037  1037 response orthogonal pretty_condition        impasse - control\n1038  1038 response orthogonal pretty_condition        impasse - control\n1039  1039 response orthogonal pretty_condition        impasse - control\n1040  1040 response orthogonal pretty_condition        impasse - control\n1041  1041 response orthogonal pretty_condition        impasse - control\n1042  1042 response orthogonal pretty_condition        impasse - control\n1043  1043 response orthogonal pretty_condition        impasse - control\n1044  1044 response orthogonal pretty_condition        impasse - control\n1045  1045 response orthogonal pretty_condition        impasse - control\n1046  1046 response orthogonal pretty_condition        impasse - control\n1047  1047 response orthogonal pretty_condition        impasse - control\n1048  1048 response orthogonal pretty_condition        impasse - control\n1049  1049 response orthogonal pretty_condition        impasse - control\n1050  1050 response orthogonal pretty_condition        impasse - control\n1051  1051 response orthogonal pretty_condition        impasse - control\n1052  1052 response orthogonal pretty_condition        impasse - control\n1053  1053 response orthogonal pretty_condition        impasse - control\n1054  1054 response orthogonal pretty_condition        impasse - control\n1055  1055 response orthogonal pretty_condition        impasse - control\n1056  1056 response orthogonal pretty_condition        impasse - control\n1057  1057 response orthogonal pretty_condition        impasse - control\n1058  1058 response orthogonal pretty_condition        impasse - control\n1059  1059 response orthogonal pretty_condition        impasse - control\n1060  1060 response orthogonal pretty_condition        impasse - control\n1061  1061 response orthogonal pretty_condition        impasse - control\n1062  1062 response orthogonal pretty_condition        impasse - control\n1063  1063 response orthogonal pretty_condition        impasse - control\n1064  1064 response orthogonal pretty_condition        impasse - control\n1065  1065 response orthogonal pretty_condition        impasse - control\n1066  1066 response orthogonal pretty_condition        impasse - control\n1067  1067 response orthogonal pretty_condition        impasse - control\n1068  1068 response orthogonal pretty_condition        impasse - control\n1069  1069 response orthogonal pretty_condition        impasse - control\n1070  1070 response orthogonal pretty_condition        impasse - control\n1071  1071 response orthogonal pretty_condition        impasse - control\n1072  1072 response orthogonal pretty_condition        impasse - control\n1073  1073 response orthogonal pretty_condition        impasse - control\n1074  1074 response orthogonal pretty_condition        impasse - control\n1075  1075 response orthogonal pretty_condition        impasse - control\n1076  1076 response orthogonal pretty_condition        impasse - control\n1077  1077 response orthogonal pretty_condition        impasse - control\n1078  1078 response orthogonal pretty_condition        impasse - control\n1079  1079 response orthogonal pretty_condition        impasse - control\n1080  1080 response orthogonal pretty_condition        impasse - control\n1081  1081 response orthogonal pretty_condition        impasse - control\n1082  1082 response orthogonal pretty_condition        impasse - control\n1083  1083 response orthogonal pretty_condition        impasse - control\n1084  1084 response orthogonal pretty_condition        impasse - control\n1085  1085 response orthogonal pretty_condition        impasse - control\n1086  1086 response orthogonal pretty_condition        impasse - control\n1087  1087 response orthogonal pretty_condition        impasse - control\n1088  1088 response orthogonal pretty_condition        impasse - control\n1089  1089 response orthogonal pretty_condition        impasse - control\n1090  1090 response orthogonal pretty_condition        impasse - control\n1091  1091 response orthogonal pretty_condition        impasse - control\n1092  1092 response orthogonal pretty_condition        impasse - control\n1093  1093 response orthogonal pretty_condition        impasse - control\n1094  1094 response orthogonal pretty_condition        impasse - control\n1095  1095 response orthogonal pretty_condition        impasse - control\n1096  1096 response orthogonal pretty_condition        impasse - control\n1097  1097 response orthogonal pretty_condition        impasse - control\n1098  1098 response orthogonal pretty_condition        impasse - control\n1099  1099 response orthogonal pretty_condition        impasse - control\n1100  1100 response orthogonal pretty_condition        impasse - control\n1101  1101 response orthogonal pretty_condition        impasse - control\n1102  1102 response orthogonal pretty_condition        impasse - control\n1103  1103 response orthogonal pretty_condition        impasse - control\n1104  1104 response orthogonal pretty_condition        impasse - control\n1105  1105 response orthogonal pretty_condition        impasse - control\n1106  1106 response orthogonal pretty_condition        impasse - control\n1107  1107 response orthogonal pretty_condition        impasse - control\n1108  1108 response orthogonal pretty_condition        impasse - control\n1109  1109 response orthogonal pretty_condition        impasse - control\n1110  1110 response orthogonal pretty_condition        impasse - control\n1111  1111 response orthogonal pretty_condition        impasse - control\n1112  1112 response orthogonal pretty_condition        impasse - control\n1113  1113 response orthogonal pretty_condition        impasse - control\n1114  1114 response orthogonal pretty_condition        impasse - control\n1115  1115 response orthogonal pretty_condition        impasse - control\n1116  1116 response orthogonal pretty_condition        impasse - control\n1117  1117 response orthogonal pretty_condition        impasse - control\n1118  1118 response orthogonal pretty_condition        impasse - control\n1119  1119 response orthogonal pretty_condition        impasse - control\n1120  1120 response orthogonal pretty_condition        impasse - control\n1121  1121 response orthogonal pretty_condition        impasse - control\n1122  1122 response orthogonal pretty_condition        impasse - control\n1123  1123 response orthogonal pretty_condition        impasse - control\n1124  1124 response orthogonal pretty_condition        impasse - control\n1125  1125 response orthogonal pretty_condition        impasse - control\n1126  1126 response orthogonal pretty_condition        impasse - control\n1127  1127 response orthogonal pretty_condition        impasse - control\n1128  1128 response orthogonal pretty_condition        impasse - control\n1129  1129 response orthogonal pretty_condition        impasse - control\n1130  1130 response orthogonal pretty_condition        impasse - control\n1131  1131 response orthogonal pretty_condition        impasse - control\n1132  1132 response orthogonal pretty_condition        impasse - control\n1133  1133 response orthogonal pretty_condition        impasse - control\n1134  1134 response orthogonal pretty_condition        impasse - control\n1135  1135 response orthogonal pretty_condition        impasse - control\n1136  1136 response orthogonal pretty_condition        impasse - control\n1137  1137 response orthogonal pretty_condition        impasse - control\n1138  1138 response orthogonal pretty_condition        impasse - control\n1139  1139 response orthogonal pretty_condition        impasse - control\n1140  1140 response orthogonal pretty_condition        impasse - control\n1141  1141 response orthogonal pretty_condition        impasse - control\n1142  1142 response orthogonal pretty_condition        impasse - control\n1143  1143 response orthogonal pretty_condition        impasse - control\n1144  1144 response orthogonal pretty_condition        impasse - control\n1145  1145 response orthogonal pretty_condition        impasse - control\n1146  1146 response orthogonal pretty_condition        impasse - control\n1147  1147 response orthogonal pretty_condition        impasse - control\n1148  1148 response orthogonal pretty_condition        impasse - control\n1149  1149 response orthogonal pretty_condition        impasse - control\n1150  1150 response orthogonal pretty_condition        impasse - control\n1151  1151 response orthogonal pretty_condition        impasse - control\n1152  1152 response orthogonal pretty_condition        impasse - control\n1153  1153 response orthogonal pretty_condition        impasse - control\n1154  1154 response orthogonal pretty_condition        impasse - control\n1155  1155 response orthogonal pretty_condition        impasse - control\n1156  1156 response orthogonal pretty_condition        impasse - control\n1157  1157 response orthogonal pretty_condition        impasse - control\n1158  1158 response orthogonal pretty_condition        impasse - control\n1159  1159 response orthogonal pretty_condition        impasse - control\n1160  1160 response orthogonal pretty_condition        impasse - control\n1161  1161 response orthogonal pretty_condition        impasse - control\n1162  1162 response orthogonal pretty_condition        impasse - control\n1163  1163 response orthogonal pretty_condition        impasse - control\n1164  1164 response orthogonal pretty_condition        impasse - control\n1165  1165 response orthogonal pretty_condition        impasse - control\n1166  1166 response orthogonal pretty_condition        impasse - control\n1167  1167 response orthogonal pretty_condition        impasse - control\n1168  1168 response orthogonal pretty_condition        impasse - control\n1169  1169 response orthogonal pretty_condition        impasse - control\n1170  1170 response orthogonal pretty_condition        impasse - control\n1171  1171 response orthogonal pretty_condition        impasse - control\n1172  1172 response orthogonal pretty_condition        impasse - control\n1173  1173 response orthogonal pretty_condition        impasse - control\n1174  1174 response orthogonal pretty_condition        impasse - control\n1175  1175 response orthogonal pretty_condition        impasse - control\n1176  1176 response orthogonal pretty_condition        impasse - control\n1177  1177 response orthogonal pretty_condition        impasse - control\n1178  1178 response orthogonal pretty_condition        impasse - control\n1179  1179 response orthogonal pretty_condition        impasse - control\n1180  1180 response orthogonal pretty_condition        impasse - control\n1181  1181 response orthogonal pretty_condition        impasse - control\n1182  1182 response orthogonal pretty_condition        impasse - control\n1183  1183 response orthogonal pretty_condition        impasse - control\n1184  1184 response orthogonal pretty_condition        impasse - control\n1185  1185 response orthogonal pretty_condition        impasse - control\n1186  1186 response orthogonal pretty_condition        impasse - control\n1187  1187 response orthogonal pretty_condition        impasse - control\n1188  1188 response orthogonal pretty_condition        impasse - control\n1189  1189 response orthogonal pretty_condition        impasse - control\n1190  1190 response orthogonal pretty_condition        impasse - control\n1191  1191 response orthogonal pretty_condition        impasse - control\n1192  1192 response orthogonal pretty_condition        impasse - control\n1193  1193 response orthogonal pretty_condition        impasse - control\n1194  1194 response orthogonal pretty_condition        impasse - control\n1195  1195 response orthogonal pretty_condition        impasse - control\n1196  1196 response orthogonal pretty_condition        impasse - control\n1197  1197 response orthogonal pretty_condition        impasse - control\n1198  1198 response orthogonal pretty_condition        impasse - control\n1199  1199 response orthogonal pretty_condition        impasse - control\n1200  1200 response orthogonal pretty_condition        impasse - control\n1201  1201 response orthogonal pretty_condition        impasse - control\n1202  1202 response orthogonal pretty_condition        impasse - control\n1203  1203 response orthogonal pretty_condition        impasse - control\n1204  1204 response orthogonal pretty_condition        impasse - control\n1205  1205 response orthogonal pretty_condition        impasse - control\n1206  1206 response orthogonal pretty_condition        impasse - control\n1207  1207 response orthogonal pretty_condition        impasse - control\n1208  1208 response orthogonal pretty_condition        impasse - control\n1209  1209 response orthogonal pretty_condition        impasse - control\n1210  1210 response orthogonal pretty_condition        impasse - control\n1211  1211 response orthogonal pretty_condition        impasse - control\n1212  1212 response orthogonal pretty_condition        impasse - control\n1213  1213 response orthogonal pretty_condition        impasse - control\n1214  1214 response orthogonal pretty_condition        impasse - control\n1215  1215 response orthogonal pretty_condition        impasse - control\n1216  1216 response orthogonal pretty_condition        impasse - control\n1217  1217 response orthogonal pretty_condition        impasse - control\n1218  1218 response orthogonal pretty_condition        impasse - control\n1219  1219 response orthogonal pretty_condition        impasse - control\n1220  1220 response orthogonal pretty_condition        impasse - control\n1221  1221 response orthogonal pretty_condition        impasse - control\n1222  1222 response orthogonal pretty_condition        impasse - control\n1223  1223 response orthogonal pretty_condition        impasse - control\n1224  1224 response orthogonal pretty_condition        impasse - control\n1225  1225 response orthogonal pretty_condition        impasse - control\n1226  1226 response orthogonal pretty_condition        impasse - control\n1227  1227 response orthogonal pretty_condition        impasse - control\n1228  1228 response orthogonal pretty_condition        impasse - control\n1229  1229 response orthogonal pretty_condition        impasse - control\n1230  1230 response orthogonal pretty_condition        impasse - control\n1231  1231 response orthogonal pretty_condition        impasse - control\n1232  1232 response orthogonal pretty_condition        impasse - control\n1233  1233 response orthogonal pretty_condition        impasse - control\n1234  1234 response orthogonal pretty_condition        impasse - control\n1235  1235 response orthogonal pretty_condition        impasse - control\n1236  1236 response orthogonal pretty_condition        impasse - control\n1237  1237 response orthogonal pretty_condition        impasse - control\n1238  1238 response orthogonal pretty_condition        impasse - control\n1239  1239 response orthogonal pretty_condition        impasse - control\n1240  1240 response orthogonal pretty_condition        impasse - control\n1241  1241 response orthogonal pretty_condition        impasse - control\n1242  1242 response orthogonal pretty_condition        impasse - control\n1243  1243 response orthogonal pretty_condition        impasse - control\n1244  1244 response orthogonal pretty_condition        impasse - control\n1245  1245 response orthogonal pretty_condition        impasse - control\n1246  1246 response orthogonal pretty_condition        impasse - control\n1247  1247 response orthogonal pretty_condition        impasse - control\n1248  1248 response orthogonal pretty_condition        impasse - control\n1249  1249 response orthogonal pretty_condition        impasse - control\n1250  1250 response orthogonal pretty_condition        impasse - control\n1251  1251 response orthogonal pretty_condition        impasse - control\n1252  1252 response orthogonal pretty_condition        impasse - control\n1253  1253 response orthogonal pretty_condition        impasse - control\n1254  1254 response orthogonal pretty_condition        impasse - control\n1255  1255 response orthogonal pretty_condition        impasse - control\n1256  1256 response orthogonal pretty_condition        impasse - control\n1257  1257 response orthogonal pretty_condition        impasse - control\n1258  1258 response orthogonal pretty_condition        impasse - control\n1259  1259 response orthogonal pretty_condition        impasse - control\n1260  1260 response orthogonal pretty_condition        impasse - control\n1261  1261 response orthogonal pretty_condition        impasse - control\n1262  1262 response orthogonal pretty_condition        impasse - control\n1263  1263 response orthogonal pretty_condition        impasse - control\n1264  1264 response orthogonal pretty_condition        impasse - control\n1265  1265 response orthogonal pretty_condition        impasse - control\n1266  1266 response orthogonal pretty_condition        impasse - control\n1267  1267 response orthogonal pretty_condition        impasse - control\n1268  1268 response orthogonal pretty_condition        impasse - control\n1269  1269 response orthogonal pretty_condition        impasse - control\n1270  1270 response orthogonal pretty_condition        impasse - control\n1271  1271 response orthogonal pretty_condition        impasse - control\n1272  1272 response orthogonal pretty_condition        impasse - control\n1273  1273 response orthogonal pretty_condition        impasse - control\n1274  1274 response orthogonal pretty_condition        impasse - control\n1275  1275 response orthogonal pretty_condition        impasse - control\n1276  1276 response orthogonal pretty_condition        impasse - control\n1277  1277 response orthogonal pretty_condition        impasse - control\n1278  1278 response orthogonal pretty_condition        impasse - control\n1279  1279 response orthogonal pretty_condition        impasse - control\n1280  1280 response orthogonal pretty_condition        impasse - control\n1281  1281 response orthogonal pretty_condition        impasse - control\n1282  1282 response orthogonal pretty_condition        impasse - control\n1283  1283 response orthogonal pretty_condition        impasse - control\n1284  1284 response orthogonal pretty_condition        impasse - control\n1285  1285 response orthogonal pretty_condition        impasse - control\n1286  1286 response orthogonal pretty_condition        impasse - control\n1287  1287 response orthogonal pretty_condition        impasse - control\n1288  1288 response orthogonal pretty_condition        impasse - control\n1289  1289 response orthogonal pretty_condition        impasse - control\n1290  1290 response orthogonal pretty_condition        impasse - control\n1291  1291 response orthogonal pretty_condition        impasse - control\n1292  1292 response orthogonal pretty_condition        impasse - control\n1293  1293 response orthogonal pretty_condition        impasse - control\n1294  1294 response orthogonal pretty_condition        impasse - control\n1295  1295 response orthogonal pretty_condition        impasse - control\n1296  1296 response orthogonal pretty_condition        impasse - control\n1297  1297 response orthogonal pretty_condition        impasse - control\n1298  1298 response orthogonal pretty_condition        impasse - control\n1299  1299 response orthogonal pretty_condition        impasse - control\n1300  1300 response orthogonal pretty_condition        impasse - control\n1301  1301 response orthogonal pretty_condition        impasse - control\n1302  1302 response orthogonal pretty_condition        impasse - control\n1303  1303 response orthogonal pretty_condition        impasse - control\n1304  1304 response orthogonal pretty_condition        impasse - control\n1305  1305 response orthogonal pretty_condition        impasse - control\n1306  1306 response orthogonal pretty_condition        impasse - control\n1307  1307 response orthogonal pretty_condition        impasse - control\n1308  1308 response orthogonal pretty_condition        impasse - control\n1309  1309 response orthogonal pretty_condition        impasse - control\n1310  1310 response orthogonal pretty_condition        impasse - control\n1311  1311 response orthogonal pretty_condition        impasse - control\n1312  1312 response orthogonal pretty_condition        impasse - control\n1313  1313 response orthogonal pretty_condition        impasse - control\n1314  1314 response orthogonal pretty_condition        impasse - control\n1315  1315 response orthogonal pretty_condition        impasse - control\n1316  1316 response orthogonal pretty_condition        impasse - control\n1317  1317 response orthogonal pretty_condition        impasse - control\n1318  1318 response orthogonal pretty_condition        impasse - control\n1319  1319 response orthogonal pretty_condition        impasse - control\n1320  1320 response orthogonal pretty_condition        impasse - control\n1321  1321 response orthogonal pretty_condition        impasse - control\n1322  1322 response orthogonal pretty_condition        impasse - control\n1323  1323 response orthogonal pretty_condition        impasse - control\n1324  1324 response orthogonal pretty_condition        impasse - control\n1325  1325 response orthogonal pretty_condition        impasse - control\n1326  1326 response orthogonal pretty_condition        impasse - control\n1327  1327 response orthogonal pretty_condition        impasse - control\n1328  1328 response orthogonal pretty_condition        impasse - control\n1329  1329 response orthogonal pretty_condition        impasse - control\n1330  1330 response orthogonal pretty_condition        impasse - control\n1331  1331 response orthogonal pretty_condition        impasse - control\n1332  1332 response orthogonal pretty_condition        impasse - control\n1333  1333 response orthogonal pretty_condition        impasse - control\n1334  1334 response orthogonal pretty_condition        impasse - control\n1335  1335 response orthogonal pretty_condition        impasse - control\n1336  1336 response orthogonal pretty_condition        impasse - control\n1337  1337 response orthogonal pretty_condition        impasse - control\n1338  1338 response orthogonal pretty_condition        impasse - control\n1339  1339 response orthogonal pretty_condition        impasse - control\n1340  1340 response orthogonal pretty_condition        impasse - control\n1341  1341 response orthogonal pretty_condition        impasse - control\n1342  1342 response orthogonal pretty_condition        impasse - control\n1343  1343 response orthogonal pretty_condition        impasse - control\n1344  1344 response orthogonal pretty_condition        impasse - control\n1345  1345 response orthogonal pretty_condition        impasse - control\n1346  1346 response orthogonal pretty_condition        impasse - control\n1347  1347 response orthogonal pretty_condition        impasse - control\n1348  1348 response orthogonal pretty_condition        impasse - control\n1349  1349 response orthogonal pretty_condition        impasse - control\n1350  1350 response orthogonal pretty_condition        impasse - control\n1351  1351 response orthogonal pretty_condition        impasse - control\n1352  1352 response orthogonal pretty_condition        impasse - control\n1353  1353 response orthogonal pretty_condition        impasse - control\n1354  1354 response orthogonal pretty_condition        impasse - control\n1355  1355 response orthogonal pretty_condition        impasse - control\n1356  1356 response orthogonal pretty_condition        impasse - control\n1357  1357 response orthogonal pretty_condition        impasse - control\n1358  1358 response orthogonal pretty_condition        impasse - control\n1359  1359 response orthogonal pretty_condition        impasse - control\n1360  1360 response orthogonal pretty_condition        impasse - control\n1361  1361 response orthogonal pretty_condition        impasse - control\n1362  1362 response orthogonal pretty_condition        impasse - control\n1363  1363 response orthogonal pretty_condition        impasse - control\n1364  1364 response orthogonal pretty_condition        impasse - control\n1365  1365 response orthogonal pretty_condition        impasse - control\n1366  1366 response orthogonal pretty_condition        impasse - control\n1367  1367 response orthogonal pretty_condition        impasse - control\n1368  1368 response orthogonal pretty_condition        impasse - control\n1369  1369 response orthogonal pretty_condition        impasse - control\n1370  1370 response orthogonal pretty_condition        impasse - control\n1371  1371 response orthogonal pretty_condition        impasse - control\n1372  1372 response orthogonal pretty_condition        impasse - control\n1373  1373 response orthogonal pretty_condition        impasse - control\n1374  1374 response orthogonal pretty_condition        impasse - control\n1375  1375 response orthogonal pretty_condition        impasse - control\n1376  1376 response orthogonal pretty_condition        impasse - control\n1377  1377 response orthogonal pretty_condition        impasse - control\n1378  1378 response orthogonal pretty_condition        impasse - control\n1379  1379 response orthogonal pretty_condition        impasse - control\n1380  1380 response orthogonal pretty_condition        impasse - control\n1381  1381 response orthogonal pretty_condition        impasse - control\n1382  1382 response orthogonal pretty_condition        impasse - control\n1383  1383 response orthogonal pretty_condition        impasse - control\n1384  1384 response orthogonal pretty_condition        impasse - control\n1385  1385 response orthogonal pretty_condition        impasse - control\n1386  1386 response orthogonal pretty_condition        impasse - control\n1387  1387 response orthogonal pretty_condition        impasse - control\n1388  1388 response orthogonal pretty_condition        impasse - control\n1389  1389 response orthogonal pretty_condition        impasse - control\n1390  1390 response orthogonal pretty_condition        impasse - control\n1391  1391 response orthogonal pretty_condition        impasse - control\n1392  1392 response orthogonal pretty_condition        impasse - control\n1393  1393 response orthogonal pretty_condition        impasse - control\n1394  1394 response orthogonal pretty_condition        impasse - control\n1395  1395 response orthogonal pretty_condition        impasse - control\n1396  1396 response orthogonal pretty_condition        impasse - control\n1397  1397 response orthogonal pretty_condition        impasse - control\n1398  1398 response orthogonal pretty_condition        impasse - control\n1399  1399 response orthogonal pretty_condition        impasse - control\n1400  1400 response orthogonal pretty_condition        impasse - control\n1401  1401 response orthogonal pretty_condition        impasse - control\n1402  1402 response orthogonal pretty_condition        impasse - control\n1403  1403 response orthogonal pretty_condition        impasse - control\n1404  1404 response orthogonal pretty_condition        impasse - control\n1405  1405 response orthogonal pretty_condition        impasse - control\n1406  1406 response orthogonal pretty_condition        impasse - control\n1407  1407 response orthogonal pretty_condition        impasse - control\n1408  1408 response orthogonal pretty_condition        impasse - control\n1409  1409 response orthogonal pretty_condition        impasse - control\n1410  1410 response orthogonal pretty_condition        impasse - control\n1411  1411 response orthogonal pretty_condition        impasse - control\n1412  1412 response orthogonal pretty_condition        impasse - control\n1413  1413 response orthogonal pretty_condition        impasse - control\n1414  1414 response orthogonal pretty_condition        impasse - control\n1415  1415 response orthogonal pretty_condition        impasse - control\n1416  1416 response orthogonal pretty_condition        impasse - control\n1417  1417 response orthogonal pretty_condition        impasse - control\n1418  1418 response orthogonal pretty_condition        impasse - control\n1419  1419 response orthogonal pretty_condition        impasse - control\n1420  1420 response orthogonal pretty_condition        impasse - control\n1421  1421 response orthogonal pretty_condition        impasse - control\n1422  1422 response orthogonal pretty_condition        impasse - control\n1423  1423 response orthogonal pretty_condition        impasse - control\n1424  1424 response orthogonal pretty_condition        impasse - control\n1425  1425 response orthogonal pretty_condition        impasse - control\n1426  1426 response orthogonal pretty_condition        impasse - control\n1427  1427 response orthogonal pretty_condition        impasse - control\n1428  1428 response orthogonal pretty_condition        impasse - control\n1429  1429 response orthogonal pretty_condition        impasse - control\n1430  1430 response orthogonal pretty_condition        impasse - control\n1431  1431 response orthogonal pretty_condition        impasse - control\n1432  1432 response orthogonal pretty_condition        impasse - control\n1433  1433 response orthogonal pretty_condition        impasse - control\n1434  1434 response orthogonal pretty_condition        impasse - control\n1435  1435 response orthogonal pretty_condition        impasse - control\n1436  1436 response orthogonal pretty_condition        impasse - control\n1437  1437 response orthogonal pretty_condition        impasse - control\n1438  1438 response orthogonal pretty_condition        impasse - control\n1439  1439 response orthogonal pretty_condition        impasse - control\n1440  1440 response orthogonal pretty_condition        impasse - control\n1441  1441 response orthogonal pretty_condition        impasse - control\n1442  1442 response orthogonal pretty_condition        impasse - control\n1443  1443 response orthogonal pretty_condition        impasse - control\n1444  1444 response orthogonal pretty_condition        impasse - control\n1445  1445 response orthogonal pretty_condition        impasse - control\n1446  1446 response orthogonal pretty_condition        impasse - control\n1447  1447 response orthogonal pretty_condition        impasse - control\n1448  1448 response orthogonal pretty_condition        impasse - control\n1449  1449 response orthogonal pretty_condition        impasse - control\n1450  1450 response orthogonal pretty_condition        impasse - control\n1451  1451 response orthogonal pretty_condition        impasse - control\n1452  1452 response orthogonal pretty_condition        impasse - control\n1453  1453 response orthogonal pretty_condition        impasse - control\n1454  1454 response orthogonal pretty_condition        impasse - control\n1455  1455 response orthogonal pretty_condition        impasse - control\n1456  1456 response orthogonal pretty_condition        impasse - control\n1457  1457 response orthogonal pretty_condition        impasse - control\n1458  1458 response orthogonal pretty_condition        impasse - control\n1459  1459 response orthogonal pretty_condition        impasse - control\n1460  1460 response orthogonal pretty_condition        impasse - control\n1461  1461 response orthogonal pretty_condition        impasse - control\n1462  1462 response orthogonal pretty_condition        impasse - control\n1463  1463 response orthogonal pretty_condition        impasse - control\n1464  1464 response orthogonal pretty_condition        impasse - control\n1465  1465 response orthogonal pretty_condition        impasse - control\n1466  1466 response orthogonal pretty_condition        impasse - control\n1467  1467 response orthogonal pretty_condition        impasse - control\n1468  1468 response orthogonal pretty_condition        impasse - control\n1469  1469 response orthogonal pretty_condition        impasse - control\n1470  1470 response orthogonal pretty_condition        impasse - control\n1471  1471 response orthogonal pretty_condition        impasse - control\n1472  1472 response orthogonal pretty_condition        impasse - control\n1473  1473 response orthogonal pretty_condition        impasse - control\n1474  1474 response orthogonal pretty_condition        impasse - control\n1475  1475 response orthogonal pretty_condition        impasse - control\n1476  1476 response orthogonal pretty_condition        impasse - control\n1477  1477 response orthogonal pretty_condition        impasse - control\n1478  1478 response orthogonal pretty_condition        impasse - control\n1479  1479 response orthogonal pretty_condition        impasse - control\n1480  1480 response orthogonal pretty_condition        impasse - control\n1481  1481 response orthogonal pretty_condition        impasse - control\n1482  1482 response orthogonal pretty_condition        impasse - control\n1483  1483 response orthogonal pretty_condition        impasse - control\n1484  1484 response orthogonal pretty_condition        impasse - control\n1485  1485 response orthogonal pretty_condition        impasse - control\n1486  1486 response orthogonal pretty_condition        impasse - control\n1487  1487 response orthogonal pretty_condition        impasse - control\n1488  1488 response orthogonal pretty_condition        impasse - control\n1489  1489 response orthogonal pretty_condition        impasse - control\n1490  1490 response orthogonal pretty_condition        impasse - control\n1491  1491 response orthogonal pretty_condition        impasse - control\n1492  1492 response orthogonal pretty_condition        impasse - control\n1493  1493 response orthogonal pretty_condition        impasse - control\n1494  1494 response orthogonal pretty_condition        impasse - control\n1495  1495 response orthogonal pretty_condition        impasse - control\n1496  1496 response orthogonal pretty_condition        impasse - control\n1497  1497 response orthogonal pretty_condition        impasse - control\n1498  1498 response orthogonal pretty_condition        impasse - control\n1499  1499 response orthogonal pretty_condition        impasse - control\n1500  1500 response orthogonal pretty_condition        impasse - control\n1501  1501 response orthogonal pretty_condition        impasse - control\n1502  1502 response orthogonal pretty_condition        impasse - control\n1503  1503 response orthogonal pretty_condition        impasse - control\n1504  1504 response orthogonal pretty_condition        impasse - control\n1505  1505 response orthogonal pretty_condition        impasse - control\n1506  1506 response orthogonal pretty_condition        impasse - control\n1507  1507 response orthogonal pretty_condition        impasse - control\n1508  1508 response orthogonal pretty_condition        impasse - control\n1509  1509 response orthogonal pretty_condition        impasse - control\n1510  1510 response orthogonal pretty_condition        impasse - control\n1511  1511 response orthogonal pretty_condition        impasse - control\n1512  1512 response orthogonal pretty_condition        impasse - control\n1513  1513 response orthogonal pretty_condition        impasse - control\n1514  1514 response orthogonal pretty_condition        impasse - control\n1515  1515 response orthogonal pretty_condition        impasse - control\n1516  1516 response orthogonal pretty_condition        impasse - control\n1517  1517 response orthogonal pretty_condition        impasse - control\n1518  1518 response orthogonal pretty_condition        impasse - control\n1519  1519 response orthogonal pretty_condition        impasse - control\n1520  1520 response orthogonal pretty_condition        impasse - control\n1521  1521 response orthogonal pretty_condition        impasse - control\n1522  1522 response orthogonal pretty_condition        impasse - control\n1523  1523 response orthogonal pretty_condition        impasse - control\n1524  1524 response orthogonal pretty_condition        impasse - control\n1525  1525 response orthogonal pretty_condition        impasse - control\n1526  1526 response orthogonal pretty_condition        impasse - control\n1527  1527 response orthogonal pretty_condition        impasse - control\n1528  1528 response orthogonal pretty_condition        impasse - control\n1529  1529 response orthogonal pretty_condition        impasse - control\n1530  1530 response orthogonal pretty_condition        impasse - control\n1531  1531 response orthogonal pretty_condition        impasse - control\n1532  1532 response orthogonal pretty_condition        impasse - control\n1533  1533 response orthogonal pretty_condition        impasse - control\n1534  1534 response orthogonal pretty_condition        impasse - control\n1535  1535 response orthogonal pretty_condition        impasse - control\n1536  1536 response orthogonal pretty_condition        impasse - control\n1537  1537 response orthogonal pretty_condition        impasse - control\n1538  1538 response orthogonal pretty_condition        impasse - control\n1539  1539 response orthogonal pretty_condition        impasse - control\n1540  1540 response orthogonal pretty_condition        impasse - control\n1541  1541 response orthogonal pretty_condition        impasse - control\n1542  1542 response orthogonal pretty_condition        impasse - control\n1543  1543 response orthogonal pretty_condition        impasse - control\n1544  1544 response orthogonal pretty_condition        impasse - control\n1545  1545 response orthogonal pretty_condition        impasse - control\n1546  1546 response orthogonal pretty_condition        impasse - control\n1547  1547 response orthogonal pretty_condition        impasse - control\n1548  1548 response orthogonal pretty_condition        impasse - control\n1549  1549 response orthogonal pretty_condition        impasse - control\n1550  1550 response orthogonal pretty_condition        impasse - control\n1551  1551 response orthogonal pretty_condition        impasse - control\n1552  1552 response orthogonal pretty_condition        impasse - control\n1553  1553 response orthogonal pretty_condition        impasse - control\n1554  1554 response orthogonal pretty_condition        impasse - control\n1555  1555 response orthogonal pretty_condition        impasse - control\n1556  1556 response orthogonal pretty_condition        impasse - control\n1557  1557 response orthogonal pretty_condition        impasse - control\n1558  1558 response orthogonal pretty_condition        impasse - control\n1559  1559 response orthogonal pretty_condition        impasse - control\n1560  1560 response orthogonal pretty_condition        impasse - control\n1561  1561 response orthogonal pretty_condition        impasse - control\n1562  1562 response orthogonal pretty_condition        impasse - control\n1563  1563 response orthogonal pretty_condition        impasse - control\n1564  1564 response orthogonal pretty_condition        impasse - control\n1565  1565 response orthogonal pretty_condition        impasse - control\n1566  1566 response orthogonal pretty_condition        impasse - control\n1567  1567 response orthogonal pretty_condition        impasse - control\n1568  1568 response orthogonal pretty_condition        impasse - control\n1569  1569 response orthogonal pretty_condition        impasse - control\n1570  1570 response orthogonal pretty_condition        impasse - control\n1571  1571 response orthogonal pretty_condition        impasse - control\n1572  1572 response orthogonal pretty_condition        impasse - control\n1573  1573 response orthogonal pretty_condition        impasse - control\n1574  1574 response orthogonal pretty_condition        impasse - control\n1575  1575 response orthogonal pretty_condition        impasse - control\n1576  1576 response orthogonal pretty_condition        impasse - control\n1577  1577 response orthogonal pretty_condition        impasse - control\n1578  1578 response orthogonal pretty_condition        impasse - control\n1579  1579 response orthogonal pretty_condition        impasse - control\n1580  1580 response orthogonal pretty_condition        impasse - control\n1581  1581 response orthogonal pretty_condition        impasse - control\n1582  1582 response orthogonal pretty_condition        impasse - control\n1583  1583 response orthogonal pretty_condition        impasse - control\n1584  1584 response orthogonal pretty_condition        impasse - control\n1585  1585 response orthogonal pretty_condition        impasse - control\n1586  1586 response orthogonal pretty_condition        impasse - control\n1587  1587 response orthogonal pretty_condition        impasse - control\n1588  1588 response orthogonal pretty_condition        impasse - control\n1589  1589 response orthogonal pretty_condition        impasse - control\n1590  1590 response orthogonal pretty_condition        impasse - control\n1591  1591 response orthogonal pretty_condition        impasse - control\n1592  1592 response orthogonal pretty_condition        impasse - control\n1593  1593 response orthogonal pretty_condition        impasse - control\n1594  1594 response orthogonal pretty_condition        impasse - control\n1595  1595 response orthogonal pretty_condition        impasse - control\n1596  1596 response orthogonal pretty_condition        impasse - control\n1597  1597 response orthogonal pretty_condition        impasse - control\n1598  1598 response orthogonal pretty_condition        impasse - control\n1599  1599 response orthogonal pretty_condition        impasse - control\n1600  1600 response orthogonal pretty_condition        impasse - control\n1601  1601 response orthogonal pretty_condition        impasse - control\n1602  1602 response orthogonal pretty_condition        impasse - control\n1603  1603 response orthogonal pretty_condition        impasse - control\n1604  1604 response orthogonal pretty_condition        impasse - control\n1605  1605 response orthogonal pretty_condition        impasse - control\n1606  1606 response orthogonal pretty_condition        impasse - control\n1607  1607 response orthogonal pretty_condition        impasse - control\n1608  1608 response orthogonal pretty_condition        impasse - control\n1609  1609 response orthogonal pretty_condition        impasse - control\n1610  1610 response orthogonal pretty_condition        impasse - control\n1611  1611 response orthogonal pretty_condition        impasse - control\n1612  1612 response orthogonal pretty_condition        impasse - control\n1613  1613 response orthogonal pretty_condition        impasse - control\n1614  1614 response orthogonal pretty_condition        impasse - control\n1615  1615 response orthogonal pretty_condition        impasse - control\n1616  1616 response orthogonal pretty_condition        impasse - control\n1617  1617 response orthogonal pretty_condition        impasse - control\n1618  1618 response orthogonal pretty_condition        impasse - control\n1619  1619 response orthogonal pretty_condition        impasse - control\n1620  1620 response orthogonal pretty_condition        impasse - control\n1621  1621 response orthogonal pretty_condition        impasse - control\n1622  1622 response orthogonal pretty_condition        impasse - control\n1623  1623 response orthogonal pretty_condition        impasse - control\n1624  1624 response orthogonal pretty_condition        impasse - control\n1625  1625 response orthogonal pretty_condition        impasse - control\n1626  1626 response orthogonal pretty_condition        impasse - control\n1627  1627 response orthogonal pretty_condition        impasse - control\n1628  1628 response orthogonal pretty_condition        impasse - control\n1629  1629 response orthogonal pretty_condition        impasse - control\n1630  1630 response orthogonal pretty_condition        impasse - control\n1631  1631 response orthogonal pretty_condition        impasse - control\n1632  1632 response orthogonal pretty_condition        impasse - control\n1633  1633 response orthogonal pretty_condition        impasse - control\n1634  1634 response orthogonal pretty_condition        impasse - control\n1635  1635 response orthogonal pretty_condition        impasse - control\n1636  1636 response orthogonal pretty_condition        impasse - control\n1637  1637 response orthogonal pretty_condition        impasse - control\n1638  1638 response orthogonal pretty_condition        impasse - control\n1639  1639 response orthogonal pretty_condition        impasse - control\n1640  1640 response orthogonal pretty_condition        impasse - control\n1641  1641 response orthogonal pretty_condition        impasse - control\n1642  1642 response orthogonal pretty_condition        impasse - control\n1643  1643 response orthogonal pretty_condition        impasse - control\n1644  1644 response orthogonal pretty_condition        impasse - control\n1645  1645 response orthogonal pretty_condition        impasse - control\n1646  1646 response orthogonal pretty_condition        impasse - control\n1647  1647 response orthogonal pretty_condition        impasse - control\n1648  1648 response orthogonal pretty_condition        impasse - control\n1649  1649 response orthogonal pretty_condition        impasse - control\n1650  1650 response orthogonal pretty_condition        impasse - control\n1651  1651 response orthogonal pretty_condition        impasse - control\n1652  1652 response orthogonal pretty_condition        impasse - control\n1653  1653 response orthogonal pretty_condition        impasse - control\n1654  1654 response orthogonal pretty_condition        impasse - control\n1655  1655 response orthogonal pretty_condition        impasse - control\n1656  1656 response orthogonal pretty_condition        impasse - control\n1657  1657 response orthogonal pretty_condition        impasse - control\n1658  1658 response orthogonal pretty_condition        impasse - control\n1659  1659 response orthogonal pretty_condition        impasse - control\n1660  1660 response orthogonal pretty_condition        impasse - control\n1661  1661 response orthogonal pretty_condition        impasse - control\n1662  1662 response orthogonal pretty_condition        impasse - control\n1663  1663 response orthogonal pretty_condition        impasse - control\n1664  1664 response orthogonal pretty_condition        impasse - control\n1665  1665 response orthogonal pretty_condition        impasse - control\n1666  1666 response orthogonal pretty_condition        impasse - control\n1667  1667 response orthogonal pretty_condition        impasse - control\n1668  1668 response orthogonal pretty_condition        impasse - control\n1669  1669 response orthogonal pretty_condition        impasse - control\n1670  1670 response orthogonal pretty_condition        impasse - control\n1671  1671 response orthogonal pretty_condition        impasse - control\n1672  1672 response orthogonal pretty_condition        impasse - control\n1673  1673 response orthogonal pretty_condition        impasse - control\n1674  1674 response orthogonal pretty_condition        impasse - control\n1675  1675 response orthogonal pretty_condition        impasse - control\n1676  1676 response orthogonal pretty_condition        impasse - control\n1677  1677 response orthogonal pretty_condition        impasse - control\n1678  1678 response orthogonal pretty_condition        impasse - control\n1679  1679 response orthogonal pretty_condition        impasse - control\n1680  1680 response orthogonal pretty_condition        impasse - control\n1681  1681 response orthogonal pretty_condition        impasse - control\n1682  1682 response orthogonal pretty_condition        impasse - control\n1683  1683 response orthogonal pretty_condition        impasse - control\n1684  1684 response orthogonal pretty_condition        impasse - control\n1685  1685 response orthogonal pretty_condition        impasse - control\n1686  1686 response orthogonal pretty_condition        impasse - control\n1687  1687 response orthogonal pretty_condition        impasse - control\n1688  1688 response orthogonal pretty_condition        impasse - control\n1689  1689 response orthogonal pretty_condition        impasse - control\n1690  1690 response orthogonal pretty_condition        impasse - control\n1691  1691 response orthogonal pretty_condition        impasse - control\n1692  1692 response orthogonal pretty_condition        impasse - control\n1693  1693 response orthogonal pretty_condition        impasse - control\n1694  1694 response orthogonal pretty_condition        impasse - control\n1695  1695 response orthogonal pretty_condition        impasse - control\n1696  1696 response orthogonal pretty_condition        impasse - control\n1697  1697 response orthogonal pretty_condition        impasse - control\n1698  1698 response orthogonal pretty_condition        impasse - control\n1699  1699 response orthogonal pretty_condition        impasse - control\n1700  1700 response orthogonal pretty_condition        impasse - control\n1701  1701 response orthogonal pretty_condition        impasse - control\n1702  1702 response orthogonal pretty_condition        impasse - control\n1703  1703 response orthogonal pretty_condition        impasse - control\n1704  1704 response orthogonal pretty_condition        impasse - control\n1705  1705 response orthogonal pretty_condition        impasse - control\n1706  1706 response orthogonal pretty_condition        impasse - control\n1707  1707 response orthogonal pretty_condition        impasse - control\n1708  1708 response orthogonal pretty_condition        impasse - control\n1709  1709 response orthogonal pretty_condition        impasse - control\n1710  1710 response orthogonal pretty_condition        impasse - control\n1711  1711 response orthogonal pretty_condition        impasse - control\n1712  1712 response orthogonal pretty_condition        impasse - control\n1713  1713 response orthogonal pretty_condition        impasse - control\n1714  1714 response orthogonal pretty_condition        impasse - control\n1715  1715 response orthogonal pretty_condition        impasse - control\n1716  1716 response orthogonal pretty_condition        impasse - control\n1717  1717 response orthogonal pretty_condition        impasse - control\n1718  1718 response orthogonal pretty_condition        impasse - control\n1719  1719 response orthogonal pretty_condition        impasse - control\n1720  1720 response orthogonal pretty_condition        impasse - control\n1721  1721 response orthogonal pretty_condition        impasse - control\n1722  1722 response orthogonal pretty_condition        impasse - control\n1723  1723 response orthogonal pretty_condition        impasse - control\n1724  1724 response orthogonal pretty_condition        impasse - control\n1725  1725 response orthogonal pretty_condition        impasse - control\n1726  1726 response orthogonal pretty_condition        impasse - control\n1727  1727 response orthogonal pretty_condition        impasse - control\n1728  1728 response orthogonal pretty_condition        impasse - control\n1729  1729 response orthogonal pretty_condition        impasse - control\n1730     1 response orthogonal      ospan_split high-memory - low-memory\n1731     2 response orthogonal      ospan_split high-memory - low-memory\n1732     3 response orthogonal      ospan_split high-memory - low-memory\n1733     4 response orthogonal      ospan_split high-memory - low-memory\n1734     5 response orthogonal      ospan_split high-memory - low-memory\n1735     6 response orthogonal      ospan_split high-memory - low-memory\n1736     7 response orthogonal      ospan_split high-memory - low-memory\n1737     8 response orthogonal      ospan_split high-memory - low-memory\n1738     9 response orthogonal      ospan_split high-memory - low-memory\n1739    10 response orthogonal      ospan_split high-memory - low-memory\n1740    11 response orthogonal      ospan_split high-memory - low-memory\n1741    12 response orthogonal      ospan_split high-memory - low-memory\n1742    13 response orthogonal      ospan_split high-memory - low-memory\n1743    14 response orthogonal      ospan_split high-memory - low-memory\n1744    15 response orthogonal      ospan_split high-memory - low-memory\n1745    16 response orthogonal      ospan_split high-memory - low-memory\n1746    17 response orthogonal      ospan_split high-memory - low-memory\n1747    18 response orthogonal      ospan_split high-memory - low-memory\n1748    19 response orthogonal      ospan_split high-memory - low-memory\n1749    20 response orthogonal      ospan_split high-memory - low-memory\n1750    21 response orthogonal      ospan_split high-memory - low-memory\n1751    22 response orthogonal      ospan_split high-memory - low-memory\n1752    23 response orthogonal      ospan_split high-memory - low-memory\n1753    24 response orthogonal      ospan_split high-memory - low-memory\n1754    25 response orthogonal      ospan_split high-memory - low-memory\n1755    26 response orthogonal      ospan_split high-memory - low-memory\n1756    27 response orthogonal      ospan_split high-memory - low-memory\n1757    28 response orthogonal      ospan_split high-memory - low-memory\n1758    29 response orthogonal      ospan_split high-memory - low-memory\n1759    30 response orthogonal      ospan_split high-memory - low-memory\n1760    31 response orthogonal      ospan_split high-memory - low-memory\n1761    32 response orthogonal      ospan_split high-memory - low-memory\n1762    33 response orthogonal      ospan_split high-memory - low-memory\n1763    34 response orthogonal      ospan_split high-memory - low-memory\n1764    35 response orthogonal      ospan_split high-memory - low-memory\n1765    36 response orthogonal      ospan_split high-memory - low-memory\n1766    37 response orthogonal      ospan_split high-memory - low-memory\n1767    38 response orthogonal      ospan_split high-memory - low-memory\n1768    39 response orthogonal      ospan_split high-memory - low-memory\n1769    40 response orthogonal      ospan_split high-memory - low-memory\n1770    41 response orthogonal      ospan_split high-memory - low-memory\n1771    42 response orthogonal      ospan_split high-memory - low-memory\n1772    43 response orthogonal      ospan_split high-memory - low-memory\n1773    44 response orthogonal      ospan_split high-memory - low-memory\n1774    45 response orthogonal      ospan_split high-memory - low-memory\n1775    46 response orthogonal      ospan_split high-memory - low-memory\n1776    47 response orthogonal      ospan_split high-memory - low-memory\n1777    48 response orthogonal      ospan_split high-memory - low-memory\n1778    49 response orthogonal      ospan_split high-memory - low-memory\n1779    50 response orthogonal      ospan_split high-memory - low-memory\n1780    51 response orthogonal      ospan_split high-memory - low-memory\n1781    52 response orthogonal      ospan_split high-memory - low-memory\n1782    53 response orthogonal      ospan_split high-memory - low-memory\n1783    54 response orthogonal      ospan_split high-memory - low-memory\n1784    55 response orthogonal      ospan_split high-memory - low-memory\n1785    56 response orthogonal      ospan_split high-memory - low-memory\n1786    57 response orthogonal      ospan_split high-memory - low-memory\n1787    58 response orthogonal      ospan_split high-memory - low-memory\n1788    59 response orthogonal      ospan_split high-memory - low-memory\n1789    60 response orthogonal      ospan_split high-memory - low-memory\n1790    61 response orthogonal      ospan_split high-memory - low-memory\n1791    62 response orthogonal      ospan_split high-memory - low-memory\n1792    63 response orthogonal      ospan_split high-memory - low-memory\n1793    64 response orthogonal      ospan_split high-memory - low-memory\n1794    65 response orthogonal      ospan_split high-memory - low-memory\n1795    66 response orthogonal      ospan_split high-memory - low-memory\n1796    67 response orthogonal      ospan_split high-memory - low-memory\n1797    68 response orthogonal      ospan_split high-memory - low-memory\n1798    69 response orthogonal      ospan_split high-memory - low-memory\n1799    70 response orthogonal      ospan_split high-memory - low-memory\n1800    71 response orthogonal      ospan_split high-memory - low-memory\n1801    72 response orthogonal      ospan_split high-memory - low-memory\n1802    73 response orthogonal      ospan_split high-memory - low-memory\n1803    74 response orthogonal      ospan_split high-memory - low-memory\n1804    75 response orthogonal      ospan_split high-memory - low-memory\n1805    76 response orthogonal      ospan_split high-memory - low-memory\n1806    77 response orthogonal      ospan_split high-memory - low-memory\n1807    78 response orthogonal      ospan_split high-memory - low-memory\n1808    79 response orthogonal      ospan_split high-memory - low-memory\n1809    80 response orthogonal      ospan_split high-memory - low-memory\n1810    81 response orthogonal      ospan_split high-memory - low-memory\n1811    82 response orthogonal      ospan_split high-memory - low-memory\n1812    83 response orthogonal      ospan_split high-memory - low-memory\n1813    84 response orthogonal      ospan_split high-memory - low-memory\n1814    85 response orthogonal      ospan_split high-memory - low-memory\n1815    86 response orthogonal      ospan_split high-memory - low-memory\n1816    87 response orthogonal      ospan_split high-memory - low-memory\n1817    88 response orthogonal      ospan_split high-memory - low-memory\n1818    89 response orthogonal      ospan_split high-memory - low-memory\n1819    90 response orthogonal      ospan_split high-memory - low-memory\n1820    91 response orthogonal      ospan_split high-memory - low-memory\n1821    92 response orthogonal      ospan_split high-memory - low-memory\n1822    93 response orthogonal      ospan_split high-memory - low-memory\n1823    94 response orthogonal      ospan_split high-memory - low-memory\n1824    95 response orthogonal      ospan_split high-memory - low-memory\n1825    96 response orthogonal      ospan_split high-memory - low-memory\n1826    97 response orthogonal      ospan_split high-memory - low-memory\n1827    98 response orthogonal      ospan_split high-memory - low-memory\n1828    99 response orthogonal      ospan_split high-memory - low-memory\n1829   100 response orthogonal      ospan_split high-memory - low-memory\n1830   101 response orthogonal      ospan_split high-memory - low-memory\n1831   102 response orthogonal      ospan_split high-memory - low-memory\n1832   103 response orthogonal      ospan_split high-memory - low-memory\n1833   104 response orthogonal      ospan_split high-memory - low-memory\n1834   105 response orthogonal      ospan_split high-memory - low-memory\n1835   106 response orthogonal      ospan_split high-memory - low-memory\n1836   107 response orthogonal      ospan_split high-memory - low-memory\n1837   108 response orthogonal      ospan_split high-memory - low-memory\n1838   109 response orthogonal      ospan_split high-memory - low-memory\n1839   110 response orthogonal      ospan_split high-memory - low-memory\n1840   111 response orthogonal      ospan_split high-memory - low-memory\n1841   112 response orthogonal      ospan_split high-memory - low-memory\n1842   113 response orthogonal      ospan_split high-memory - low-memory\n1843   114 response orthogonal      ospan_split high-memory - low-memory\n1844   115 response orthogonal      ospan_split high-memory - low-memory\n1845   116 response orthogonal      ospan_split high-memory - low-memory\n1846   117 response orthogonal      ospan_split high-memory - low-memory\n1847   118 response orthogonal      ospan_split high-memory - low-memory\n1848   119 response orthogonal      ospan_split high-memory - low-memory\n1849   120 response orthogonal      ospan_split high-memory - low-memory\n1850   121 response orthogonal      ospan_split high-memory - low-memory\n1851   122 response orthogonal      ospan_split high-memory - low-memory\n1852   123 response orthogonal      ospan_split high-memory - low-memory\n1853   124 response orthogonal      ospan_split high-memory - low-memory\n1854   125 response orthogonal      ospan_split high-memory - low-memory\n1855   126 response orthogonal      ospan_split high-memory - low-memory\n1856   127 response orthogonal      ospan_split high-memory - low-memory\n1857   128 response orthogonal      ospan_split high-memory - low-memory\n1858   129 response orthogonal      ospan_split high-memory - low-memory\n1859   130 response orthogonal      ospan_split high-memory - low-memory\n1860   131 response orthogonal      ospan_split high-memory - low-memory\n1861   132 response orthogonal      ospan_split high-memory - low-memory\n1862   133 response orthogonal      ospan_split high-memory - low-memory\n1863   134 response orthogonal      ospan_split high-memory - low-memory\n1864   135 response orthogonal      ospan_split high-memory - low-memory\n1865   136 response orthogonal      ospan_split high-memory - low-memory\n1866   137 response orthogonal      ospan_split high-memory - low-memory\n1867   138 response orthogonal      ospan_split high-memory - low-memory\n1868   139 response orthogonal      ospan_split high-memory - low-memory\n1869   140 response orthogonal      ospan_split high-memory - low-memory\n1870   141 response orthogonal      ospan_split high-memory - low-memory\n1871   142 response orthogonal      ospan_split high-memory - low-memory\n1872   143 response orthogonal      ospan_split high-memory - low-memory\n1873   144 response orthogonal      ospan_split high-memory - low-memory\n1874   145 response orthogonal      ospan_split high-memory - low-memory\n1875   146 response orthogonal      ospan_split high-memory - low-memory\n1876   147 response orthogonal      ospan_split high-memory - low-memory\n1877   148 response orthogonal      ospan_split high-memory - low-memory\n1878   149 response orthogonal      ospan_split high-memory - low-memory\n1879   150 response orthogonal      ospan_split high-memory - low-memory\n1880   151 response orthogonal      ospan_split high-memory - low-memory\n1881   152 response orthogonal      ospan_split high-memory - low-memory\n1882   153 response orthogonal      ospan_split high-memory - low-memory\n1883   154 response orthogonal      ospan_split high-memory - low-memory\n1884   155 response orthogonal      ospan_split high-memory - low-memory\n1885   156 response orthogonal      ospan_split high-memory - low-memory\n1886   157 response orthogonal      ospan_split high-memory - low-memory\n1887   158 response orthogonal      ospan_split high-memory - low-memory\n1888   159 response orthogonal      ospan_split high-memory - low-memory\n1889   160 response orthogonal      ospan_split high-memory - low-memory\n1890   161 response orthogonal      ospan_split high-memory - low-memory\n1891   162 response orthogonal      ospan_split high-memory - low-memory\n1892   163 response orthogonal      ospan_split high-memory - low-memory\n1893   164 response orthogonal      ospan_split high-memory - low-memory\n1894   165 response orthogonal      ospan_split high-memory - low-memory\n1895   166 response orthogonal      ospan_split high-memory - low-memory\n1896   167 response orthogonal      ospan_split high-memory - low-memory\n1897   168 response orthogonal      ospan_split high-memory - low-memory\n1898   169 response orthogonal      ospan_split high-memory - low-memory\n1899   170 response orthogonal      ospan_split high-memory - low-memory\n1900   171 response orthogonal      ospan_split high-memory - low-memory\n1901   172 response orthogonal      ospan_split high-memory - low-memory\n1902   173 response orthogonal      ospan_split high-memory - low-memory\n1903   174 response orthogonal      ospan_split high-memory - low-memory\n1904   175 response orthogonal      ospan_split high-memory - low-memory\n1905   176 response orthogonal      ospan_split high-memory - low-memory\n1906   177 response orthogonal      ospan_split high-memory - low-memory\n1907   178 response orthogonal      ospan_split high-memory - low-memory\n1908   179 response orthogonal      ospan_split high-memory - low-memory\n1909   180 response orthogonal      ospan_split high-memory - low-memory\n1910   181 response orthogonal      ospan_split high-memory - low-memory\n1911   182 response orthogonal      ospan_split high-memory - low-memory\n1912   183 response orthogonal      ospan_split high-memory - low-memory\n1913   184 response orthogonal      ospan_split high-memory - low-memory\n1914   185 response orthogonal      ospan_split high-memory - low-memory\n1915   186 response orthogonal      ospan_split high-memory - low-memory\n1916   187 response orthogonal      ospan_split high-memory - low-memory\n1917   188 response orthogonal      ospan_split high-memory - low-memory\n1918   189 response orthogonal      ospan_split high-memory - low-memory\n1919   190 response orthogonal      ospan_split high-memory - low-memory\n1920   191 response orthogonal      ospan_split high-memory - low-memory\n1921   192 response orthogonal      ospan_split high-memory - low-memory\n1922   193 response orthogonal      ospan_split high-memory - low-memory\n1923   194 response orthogonal      ospan_split high-memory - low-memory\n1924   195 response orthogonal      ospan_split high-memory - low-memory\n1925   196 response orthogonal      ospan_split high-memory - low-memory\n1926   197 response orthogonal      ospan_split high-memory - low-memory\n1927   198 response orthogonal      ospan_split high-memory - low-memory\n1928   199 response orthogonal      ospan_split high-memory - low-memory\n1929   200 response orthogonal      ospan_split high-memory - low-memory\n1930   201 response orthogonal      ospan_split high-memory - low-memory\n1931   202 response orthogonal      ospan_split high-memory - low-memory\n1932   203 response orthogonal      ospan_split high-memory - low-memory\n1933   204 response orthogonal      ospan_split high-memory - low-memory\n1934   205 response orthogonal      ospan_split high-memory - low-memory\n1935   206 response orthogonal      ospan_split high-memory - low-memory\n1936   207 response orthogonal      ospan_split high-memory - low-memory\n1937   208 response orthogonal      ospan_split high-memory - low-memory\n1938   209 response orthogonal      ospan_split high-memory - low-memory\n1939   210 response orthogonal      ospan_split high-memory - low-memory\n1940   211 response orthogonal      ospan_split high-memory - low-memory\n1941   212 response orthogonal      ospan_split high-memory - low-memory\n1942   213 response orthogonal      ospan_split high-memory - low-memory\n1943   214 response orthogonal      ospan_split high-memory - low-memory\n1944   215 response orthogonal      ospan_split high-memory - low-memory\n1945   216 response orthogonal      ospan_split high-memory - low-memory\n1946   217 response orthogonal      ospan_split high-memory - low-memory\n1947   218 response orthogonal      ospan_split high-memory - low-memory\n1948   219 response orthogonal      ospan_split high-memory - low-memory\n1949   220 response orthogonal      ospan_split high-memory - low-memory\n1950   221 response orthogonal      ospan_split high-memory - low-memory\n1951   222 response orthogonal      ospan_split high-memory - low-memory\n1952   223 response orthogonal      ospan_split high-memory - low-memory\n1953   224 response orthogonal      ospan_split high-memory - low-memory\n1954   225 response orthogonal      ospan_split high-memory - low-memory\n1955   226 response orthogonal      ospan_split high-memory - low-memory\n1956   227 response orthogonal      ospan_split high-memory - low-memory\n1957   228 response orthogonal      ospan_split high-memory - low-memory\n1958   229 response orthogonal      ospan_split high-memory - low-memory\n1959   230 response orthogonal      ospan_split high-memory - low-memory\n1960   231 response orthogonal      ospan_split high-memory - low-memory\n1961   232 response orthogonal      ospan_split high-memory - low-memory\n1962   233 response orthogonal      ospan_split high-memory - low-memory\n1963   234 response orthogonal      ospan_split high-memory - low-memory\n1964   235 response orthogonal      ospan_split high-memory - low-memory\n1965   236 response orthogonal      ospan_split high-memory - low-memory\n1966   237 response orthogonal      ospan_split high-memory - low-memory\n1967   238 response orthogonal      ospan_split high-memory - low-memory\n1968   239 response orthogonal      ospan_split high-memory - low-memory\n1969   240 response orthogonal      ospan_split high-memory - low-memory\n1970   241 response orthogonal      ospan_split high-memory - low-memory\n1971   242 response orthogonal      ospan_split high-memory - low-memory\n1972   243 response orthogonal      ospan_split high-memory - low-memory\n1973   244 response orthogonal      ospan_split high-memory - low-memory\n1974   245 response orthogonal      ospan_split high-memory - low-memory\n1975   246 response orthogonal      ospan_split high-memory - low-memory\n1976   247 response orthogonal      ospan_split high-memory - low-memory\n1977   248 response orthogonal      ospan_split high-memory - low-memory\n1978   249 response orthogonal      ospan_split high-memory - low-memory\n1979   250 response orthogonal      ospan_split high-memory - low-memory\n1980   251 response orthogonal      ospan_split high-memory - low-memory\n1981   252 response orthogonal      ospan_split high-memory - low-memory\n1982   253 response orthogonal      ospan_split high-memory - low-memory\n1983   254 response orthogonal      ospan_split high-memory - low-memory\n1984   255 response orthogonal      ospan_split high-memory - low-memory\n1985   256 response orthogonal      ospan_split high-memory - low-memory\n1986   257 response orthogonal      ospan_split high-memory - low-memory\n1987   258 response orthogonal      ospan_split high-memory - low-memory\n1988   259 response orthogonal      ospan_split high-memory - low-memory\n1989   260 response orthogonal      ospan_split high-memory - low-memory\n1990   261 response orthogonal      ospan_split high-memory - low-memory\n1991   262 response orthogonal      ospan_split high-memory - low-memory\n1992   263 response orthogonal      ospan_split high-memory - low-memory\n1993   264 response orthogonal      ospan_split high-memory - low-memory\n1994   265 response orthogonal      ospan_split high-memory - low-memory\n1995   266 response orthogonal      ospan_split high-memory - low-memory\n1996   267 response orthogonal      ospan_split high-memory - low-memory\n1997   268 response orthogonal      ospan_split high-memory - low-memory\n1998   269 response orthogonal      ospan_split high-memory - low-memory\n1999   270 response orthogonal      ospan_split high-memory - low-memory\n2000   271 response orthogonal      ospan_split high-memory - low-memory\n2001   272 response orthogonal      ospan_split high-memory - low-memory\n2002   273 response orthogonal      ospan_split high-memory - low-memory\n2003   274 response orthogonal      ospan_split high-memory - low-memory\n2004   275 response orthogonal      ospan_split high-memory - low-memory\n2005   276 response orthogonal      ospan_split high-memory - low-memory\n2006   277 response orthogonal      ospan_split high-memory - low-memory\n2007   278 response orthogonal      ospan_split high-memory - low-memory\n2008   279 response orthogonal      ospan_split high-memory - low-memory\n2009   280 response orthogonal      ospan_split high-memory - low-memory\n2010   281 response orthogonal      ospan_split high-memory - low-memory\n2011   282 response orthogonal      ospan_split high-memory - low-memory\n2012   283 response orthogonal      ospan_split high-memory - low-memory\n2013   284 response orthogonal      ospan_split high-memory - low-memory\n2014   285 response orthogonal      ospan_split high-memory - low-memory\n2015   286 response orthogonal      ospan_split high-memory - low-memory\n2016   287 response orthogonal      ospan_split high-memory - low-memory\n2017   288 response orthogonal      ospan_split high-memory - low-memory\n2018   289 response orthogonal      ospan_split high-memory - low-memory\n2019   290 response orthogonal      ospan_split high-memory - low-memory\n2020   291 response orthogonal      ospan_split high-memory - low-memory\n2021   292 response orthogonal      ospan_split high-memory - low-memory\n2022   293 response orthogonal      ospan_split high-memory - low-memory\n2023   294 response orthogonal      ospan_split high-memory - low-memory\n2024   295 response orthogonal      ospan_split high-memory - low-memory\n2025   296 response orthogonal      ospan_split high-memory - low-memory\n2026   297 response orthogonal      ospan_split high-memory - low-memory\n2027   298 response orthogonal      ospan_split high-memory - low-memory\n2028   299 response orthogonal      ospan_split high-memory - low-memory\n2029   300 response orthogonal      ospan_split high-memory - low-memory\n2030   301 response orthogonal      ospan_split high-memory - low-memory\n2031   302 response orthogonal      ospan_split high-memory - low-memory\n2032   303 response orthogonal      ospan_split high-memory - low-memory\n2033   304 response orthogonal      ospan_split high-memory - low-memory\n2034   305 response orthogonal      ospan_split high-memory - low-memory\n2035   306 response orthogonal      ospan_split high-memory - low-memory\n2036   307 response orthogonal      ospan_split high-memory - low-memory\n2037   308 response orthogonal      ospan_split high-memory - low-memory\n2038   309 response orthogonal      ospan_split high-memory - low-memory\n2039   310 response orthogonal      ospan_split high-memory - low-memory\n2040   311 response orthogonal      ospan_split high-memory - low-memory\n2041   312 response orthogonal      ospan_split high-memory - low-memory\n2042   313 response orthogonal      ospan_split high-memory - low-memory\n2043   314 response orthogonal      ospan_split high-memory - low-memory\n2044   315 response orthogonal      ospan_split high-memory - low-memory\n2045   316 response orthogonal      ospan_split high-memory - low-memory\n2046   317 response orthogonal      ospan_split high-memory - low-memory\n2047   318 response orthogonal      ospan_split high-memory - low-memory\n2048   319 response orthogonal      ospan_split high-memory - low-memory\n2049   320 response orthogonal      ospan_split high-memory - low-memory\n2050   321 response orthogonal      ospan_split high-memory - low-memory\n2051   322 response orthogonal      ospan_split high-memory - low-memory\n2052   323 response orthogonal      ospan_split high-memory - low-memory\n2053   324 response orthogonal      ospan_split high-memory - low-memory\n2054   325 response orthogonal      ospan_split high-memory - low-memory\n2055   326 response orthogonal      ospan_split high-memory - low-memory\n2056   327 response orthogonal      ospan_split high-memory - low-memory\n2057   328 response orthogonal      ospan_split high-memory - low-memory\n2058   329 response orthogonal      ospan_split high-memory - low-memory\n2059   330 response orthogonal      ospan_split high-memory - low-memory\n2060   331 response orthogonal      ospan_split high-memory - low-memory\n2061   332 response orthogonal      ospan_split high-memory - low-memory\n2062   333 response orthogonal      ospan_split high-memory - low-memory\n2063   334 response orthogonal      ospan_split high-memory - low-memory\n2064   335 response orthogonal      ospan_split high-memory - low-memory\n2065   336 response orthogonal      ospan_split high-memory - low-memory\n2066   337 response orthogonal      ospan_split high-memory - low-memory\n2067   338 response orthogonal      ospan_split high-memory - low-memory\n2068   339 response orthogonal      ospan_split high-memory - low-memory\n2069   340 response orthogonal      ospan_split high-memory - low-memory\n2070   341 response orthogonal      ospan_split high-memory - low-memory\n2071   342 response orthogonal      ospan_split high-memory - low-memory\n2072   343 response orthogonal      ospan_split high-memory - low-memory\n2073   344 response orthogonal      ospan_split high-memory - low-memory\n2074   345 response orthogonal      ospan_split high-memory - low-memory\n2075   346 response orthogonal      ospan_split high-memory - low-memory\n2076   347 response orthogonal      ospan_split high-memory - low-memory\n2077   348 response orthogonal      ospan_split high-memory - low-memory\n2078   349 response orthogonal      ospan_split high-memory - low-memory\n2079   350 response orthogonal      ospan_split high-memory - low-memory\n2080   351 response orthogonal      ospan_split high-memory - low-memory\n2081   352 response orthogonal      ospan_split high-memory - low-memory\n2082   353 response orthogonal      ospan_split high-memory - low-memory\n2083   354 response orthogonal      ospan_split high-memory - low-memory\n2084   355 response orthogonal      ospan_split high-memory - low-memory\n2085   356 response orthogonal      ospan_split high-memory - low-memory\n2086   357 response orthogonal      ospan_split high-memory - low-memory\n2087   358 response orthogonal      ospan_split high-memory - low-memory\n2088   359 response orthogonal      ospan_split high-memory - low-memory\n2089   360 response orthogonal      ospan_split high-memory - low-memory\n2090   361 response orthogonal      ospan_split high-memory - low-memory\n2091   362 response orthogonal      ospan_split high-memory - low-memory\n2092   363 response orthogonal      ospan_split high-memory - low-memory\n2093   364 response orthogonal      ospan_split high-memory - low-memory\n2094   365 response orthogonal      ospan_split high-memory - low-memory\n2095   366 response orthogonal      ospan_split high-memory - low-memory\n2096   367 response orthogonal      ospan_split high-memory - low-memory\n2097   368 response orthogonal      ospan_split high-memory - low-memory\n2098   369 response orthogonal      ospan_split high-memory - low-memory\n2099   370 response orthogonal      ospan_split high-memory - low-memory\n2100   371 response orthogonal      ospan_split high-memory - low-memory\n2101   372 response orthogonal      ospan_split high-memory - low-memory\n2102   373 response orthogonal      ospan_split high-memory - low-memory\n2103   374 response orthogonal      ospan_split high-memory - low-memory\n2104   375 response orthogonal      ospan_split high-memory - low-memory\n2105   376 response orthogonal      ospan_split high-memory - low-memory\n2106   377 response orthogonal      ospan_split high-memory - low-memory\n2107   378 response orthogonal      ospan_split high-memory - low-memory\n2108   379 response orthogonal      ospan_split high-memory - low-memory\n2109   380 response orthogonal      ospan_split high-memory - low-memory\n2110   381 response orthogonal      ospan_split high-memory - low-memory\n2111   382 response orthogonal      ospan_split high-memory - low-memory\n2112   383 response orthogonal      ospan_split high-memory - low-memory\n2113   384 response orthogonal      ospan_split high-memory - low-memory\n2114   385 response orthogonal      ospan_split high-memory - low-memory\n2115   386 response orthogonal      ospan_split high-memory - low-memory\n2116   387 response orthogonal      ospan_split high-memory - low-memory\n2117   388 response orthogonal      ospan_split high-memory - low-memory\n2118   389 response orthogonal      ospan_split high-memory - low-memory\n2119   390 response orthogonal      ospan_split high-memory - low-memory\n2120   391 response orthogonal      ospan_split high-memory - low-memory\n2121   392 response orthogonal      ospan_split high-memory - low-memory\n2122   393 response orthogonal      ospan_split high-memory - low-memory\n2123   394 response orthogonal      ospan_split high-memory - low-memory\n2124   395 response orthogonal      ospan_split high-memory - low-memory\n2125   396 response orthogonal      ospan_split high-memory - low-memory\n2126   397 response orthogonal      ospan_split high-memory - low-memory\n2127   398 response orthogonal      ospan_split high-memory - low-memory\n2128   399 response orthogonal      ospan_split high-memory - low-memory\n2129   400 response orthogonal      ospan_split high-memory - low-memory\n2130   401 response orthogonal      ospan_split high-memory - low-memory\n2131   402 response orthogonal      ospan_split high-memory - low-memory\n2132   403 response orthogonal      ospan_split high-memory - low-memory\n2133   404 response orthogonal      ospan_split high-memory - low-memory\n2134   405 response orthogonal      ospan_split high-memory - low-memory\n2135   406 response orthogonal      ospan_split high-memory - low-memory\n2136   407 response orthogonal      ospan_split high-memory - low-memory\n2137   408 response orthogonal      ospan_split high-memory - low-memory\n2138   409 response orthogonal      ospan_split high-memory - low-memory\n2139   410 response orthogonal      ospan_split high-memory - low-memory\n2140   411 response orthogonal      ospan_split high-memory - low-memory\n2141   412 response orthogonal      ospan_split high-memory - low-memory\n2142   413 response orthogonal      ospan_split high-memory - low-memory\n2143   414 response orthogonal      ospan_split high-memory - low-memory\n2144   415 response orthogonal      ospan_split high-memory - low-memory\n2145   416 response orthogonal      ospan_split high-memory - low-memory\n2146   417 response orthogonal      ospan_split high-memory - low-memory\n2147   418 response orthogonal      ospan_split high-memory - low-memory\n2148   419 response orthogonal      ospan_split high-memory - low-memory\n2149   420 response orthogonal      ospan_split high-memory - low-memory\n2150   421 response orthogonal      ospan_split high-memory - low-memory\n2151   422 response orthogonal      ospan_split high-memory - low-memory\n2152   423 response orthogonal      ospan_split high-memory - low-memory\n2153   424 response orthogonal      ospan_split high-memory - low-memory\n2154   425 response orthogonal      ospan_split high-memory - low-memory\n2155   426 response orthogonal      ospan_split high-memory - low-memory\n2156   427 response orthogonal      ospan_split high-memory - low-memory\n2157   428 response orthogonal      ospan_split high-memory - low-memory\n2158   429 response orthogonal      ospan_split high-memory - low-memory\n2159   430 response orthogonal      ospan_split high-memory - low-memory\n2160   431 response orthogonal      ospan_split high-memory - low-memory\n2161   432 response orthogonal      ospan_split high-memory - low-memory\n2162   433 response orthogonal      ospan_split high-memory - low-memory\n2163   434 response orthogonal      ospan_split high-memory - low-memory\n2164   435 response orthogonal      ospan_split high-memory - low-memory\n2165   436 response orthogonal      ospan_split high-memory - low-memory\n2166   437 response orthogonal      ospan_split high-memory - low-memory\n2167   438 response orthogonal      ospan_split high-memory - low-memory\n2168   439 response orthogonal      ospan_split high-memory - low-memory\n2169   440 response orthogonal      ospan_split high-memory - low-memory\n2170   441 response orthogonal      ospan_split high-memory - low-memory\n2171   442 response orthogonal      ospan_split high-memory - low-memory\n2172   443 response orthogonal      ospan_split high-memory - low-memory\n2173   444 response orthogonal      ospan_split high-memory - low-memory\n2174   445 response orthogonal      ospan_split high-memory - low-memory\n2175   446 response orthogonal      ospan_split high-memory - low-memory\n2176   447 response orthogonal      ospan_split high-memory - low-memory\n2177   448 response orthogonal      ospan_split high-memory - low-memory\n2178   449 response orthogonal      ospan_split high-memory - low-memory\n2179   450 response orthogonal      ospan_split high-memory - low-memory\n2180   451 response orthogonal      ospan_split high-memory - low-memory\n2181   452 response orthogonal      ospan_split high-memory - low-memory\n2182   453 response orthogonal      ospan_split high-memory - low-memory\n2183   454 response orthogonal      ospan_split high-memory - low-memory\n2184   455 response orthogonal      ospan_split high-memory - low-memory\n2185   456 response orthogonal      ospan_split high-memory - low-memory\n2186   457 response orthogonal      ospan_split high-memory - low-memory\n2187   458 response orthogonal      ospan_split high-memory - low-memory\n2188   459 response orthogonal      ospan_split high-memory - low-memory\n2189   460 response orthogonal      ospan_split high-memory - low-memory\n2190   461 response orthogonal      ospan_split high-memory - low-memory\n2191   462 response orthogonal      ospan_split high-memory - low-memory\n2192   463 response orthogonal      ospan_split high-memory - low-memory\n2193   464 response orthogonal      ospan_split high-memory - low-memory\n2194   465 response orthogonal      ospan_split high-memory - low-memory\n2195   466 response orthogonal      ospan_split high-memory - low-memory\n2196   467 response orthogonal      ospan_split high-memory - low-memory\n2197   468 response orthogonal      ospan_split high-memory - low-memory\n2198   469 response orthogonal      ospan_split high-memory - low-memory\n2199   470 response orthogonal      ospan_split high-memory - low-memory\n2200   471 response orthogonal      ospan_split high-memory - low-memory\n2201   472 response orthogonal      ospan_split high-memory - low-memory\n2202   473 response orthogonal      ospan_split high-memory - low-memory\n2203   474 response orthogonal      ospan_split high-memory - low-memory\n2204   475 response orthogonal      ospan_split high-memory - low-memory\n2205   476 response orthogonal      ospan_split high-memory - low-memory\n2206   477 response orthogonal      ospan_split high-memory - low-memory\n2207   478 response orthogonal      ospan_split high-memory - low-memory\n2208   479 response orthogonal      ospan_split high-memory - low-memory\n2209   480 response orthogonal      ospan_split high-memory - low-memory\n2210   481 response orthogonal      ospan_split high-memory - low-memory\n2211   482 response orthogonal      ospan_split high-memory - low-memory\n2212   483 response orthogonal      ospan_split high-memory - low-memory\n2213   484 response orthogonal      ospan_split high-memory - low-memory\n2214   485 response orthogonal      ospan_split high-memory - low-memory\n2215   486 response orthogonal      ospan_split high-memory - low-memory\n2216   487 response orthogonal      ospan_split high-memory - low-memory\n2217   488 response orthogonal      ospan_split high-memory - low-memory\n2218   489 response orthogonal      ospan_split high-memory - low-memory\n2219   490 response orthogonal      ospan_split high-memory - low-memory\n2220   491 response orthogonal      ospan_split high-memory - low-memory\n2221   492 response orthogonal      ospan_split high-memory - low-memory\n2222   493 response orthogonal      ospan_split high-memory - low-memory\n2223   494 response orthogonal      ospan_split high-memory - low-memory\n2224   495 response orthogonal      ospan_split high-memory - low-memory\n2225   496 response orthogonal      ospan_split high-memory - low-memory\n2226   497 response orthogonal      ospan_split high-memory - low-memory\n2227   498 response orthogonal      ospan_split high-memory - low-memory\n2228   499 response orthogonal      ospan_split high-memory - low-memory\n2229   500 response orthogonal      ospan_split high-memory - low-memory\n2230   501 response orthogonal      ospan_split high-memory - low-memory\n2231   502 response orthogonal      ospan_split high-memory - low-memory\n2232   503 response orthogonal      ospan_split high-memory - low-memory\n2233   504 response orthogonal      ospan_split high-memory - low-memory\n2234   505 response orthogonal      ospan_split high-memory - low-memory\n2235   506 response orthogonal      ospan_split high-memory - low-memory\n2236   507 response orthogonal      ospan_split high-memory - low-memory\n2237   508 response orthogonal      ospan_split high-memory - low-memory\n2238   509 response orthogonal      ospan_split high-memory - low-memory\n2239   510 response orthogonal      ospan_split high-memory - low-memory\n2240   511 response orthogonal      ospan_split high-memory - low-memory\n2241   512 response orthogonal      ospan_split high-memory - low-memory\n2242   513 response orthogonal      ospan_split high-memory - low-memory\n2243   514 response orthogonal      ospan_split high-memory - low-memory\n2244   515 response orthogonal      ospan_split high-memory - low-memory\n2245   516 response orthogonal      ospan_split high-memory - low-memory\n2246   517 response orthogonal      ospan_split high-memory - low-memory\n2247   518 response orthogonal      ospan_split high-memory - low-memory\n2248   519 response orthogonal      ospan_split high-memory - low-memory\n2249   520 response orthogonal      ospan_split high-memory - low-memory\n2250   521 response orthogonal      ospan_split high-memory - low-memory\n2251   522 response orthogonal      ospan_split high-memory - low-memory\n2252   523 response orthogonal      ospan_split high-memory - low-memory\n2253   524 response orthogonal      ospan_split high-memory - low-memory\n2254   525 response orthogonal      ospan_split high-memory - low-memory\n2255   526 response orthogonal      ospan_split high-memory - low-memory\n2256   527 response orthogonal      ospan_split high-memory - low-memory\n2257   528 response orthogonal      ospan_split high-memory - low-memory\n2258   529 response orthogonal      ospan_split high-memory - low-memory\n2259   530 response orthogonal      ospan_split high-memory - low-memory\n2260   531 response orthogonal      ospan_split high-memory - low-memory\n2261   532 response orthogonal      ospan_split high-memory - low-memory\n2262   533 response orthogonal      ospan_split high-memory - low-memory\n2263   534 response orthogonal      ospan_split high-memory - low-memory\n2264   535 response orthogonal      ospan_split high-memory - low-memory\n2265   536 response orthogonal      ospan_split high-memory - low-memory\n2266   537 response orthogonal      ospan_split high-memory - low-memory\n2267   538 response orthogonal      ospan_split high-memory - low-memory\n2268   539 response orthogonal      ospan_split high-memory - low-memory\n2269   540 response orthogonal      ospan_split high-memory - low-memory\n2270   541 response orthogonal      ospan_split high-memory - low-memory\n2271   542 response orthogonal      ospan_split high-memory - low-memory\n2272   543 response orthogonal      ospan_split high-memory - low-memory\n2273   544 response orthogonal      ospan_split high-memory - low-memory\n2274   545 response orthogonal      ospan_split high-memory - low-memory\n2275   546 response orthogonal      ospan_split high-memory - low-memory\n2276   547 response orthogonal      ospan_split high-memory - low-memory\n2277   548 response orthogonal      ospan_split high-memory - low-memory\n2278   549 response orthogonal      ospan_split high-memory - low-memory\n2279   550 response orthogonal      ospan_split high-memory - low-memory\n2280   551 response orthogonal      ospan_split high-memory - low-memory\n2281   552 response orthogonal      ospan_split high-memory - low-memory\n2282   553 response orthogonal      ospan_split high-memory - low-memory\n2283   554 response orthogonal      ospan_split high-memory - low-memory\n2284   555 response orthogonal      ospan_split high-memory - low-memory\n2285   556 response orthogonal      ospan_split high-memory - low-memory\n2286   557 response orthogonal      ospan_split high-memory - low-memory\n2287   558 response orthogonal      ospan_split high-memory - low-memory\n2288   559 response orthogonal      ospan_split high-memory - low-memory\n2289   560 response orthogonal      ospan_split high-memory - low-memory\n2290   561 response orthogonal      ospan_split high-memory - low-memory\n2291   562 response orthogonal      ospan_split high-memory - low-memory\n2292   563 response orthogonal      ospan_split high-memory - low-memory\n2293   564 response orthogonal      ospan_split high-memory - low-memory\n2294   565 response orthogonal      ospan_split high-memory - low-memory\n2295   566 response orthogonal      ospan_split high-memory - low-memory\n2296   567 response orthogonal      ospan_split high-memory - low-memory\n2297   568 response orthogonal      ospan_split high-memory - low-memory\n2298   569 response orthogonal      ospan_split high-memory - low-memory\n2299   570 response orthogonal      ospan_split high-memory - low-memory\n2300   571 response orthogonal      ospan_split high-memory - low-memory\n2301   572 response orthogonal      ospan_split high-memory - low-memory\n2302   573 response orthogonal      ospan_split high-memory - low-memory\n2303   574 response orthogonal      ospan_split high-memory - low-memory\n2304   575 response orthogonal      ospan_split high-memory - low-memory\n2305   576 response orthogonal      ospan_split high-memory - low-memory\n2306   577 response orthogonal      ospan_split high-memory - low-memory\n2307   578 response orthogonal      ospan_split high-memory - low-memory\n2308   579 response orthogonal      ospan_split high-memory - low-memory\n2309   580 response orthogonal      ospan_split high-memory - low-memory\n2310   581 response orthogonal      ospan_split high-memory - low-memory\n2311   582 response orthogonal      ospan_split high-memory - low-memory\n2312   583 response orthogonal      ospan_split high-memory - low-memory\n2313   584 response orthogonal      ospan_split high-memory - low-memory\n2314   585 response orthogonal      ospan_split high-memory - low-memory\n2315   586 response orthogonal      ospan_split high-memory - low-memory\n2316   587 response orthogonal      ospan_split high-memory - low-memory\n2317   588 response orthogonal      ospan_split high-memory - low-memory\n2318   589 response orthogonal      ospan_split high-memory - low-memory\n2319   590 response orthogonal      ospan_split high-memory - low-memory\n2320   591 response orthogonal      ospan_split high-memory - low-memory\n2321   592 response orthogonal      ospan_split high-memory - low-memory\n2322   593 response orthogonal      ospan_split high-memory - low-memory\n2323   594 response orthogonal      ospan_split high-memory - low-memory\n2324   595 response orthogonal      ospan_split high-memory - low-memory\n2325   596 response orthogonal      ospan_split high-memory - low-memory\n2326   597 response orthogonal      ospan_split high-memory - low-memory\n2327   598 response orthogonal      ospan_split high-memory - low-memory\n2328   599 response orthogonal      ospan_split high-memory - low-memory\n2329   600 response orthogonal      ospan_split high-memory - low-memory\n2330   601 response orthogonal      ospan_split high-memory - low-memory\n2331   602 response orthogonal      ospan_split high-memory - low-memory\n2332   603 response orthogonal      ospan_split high-memory - low-memory\n2333   604 response orthogonal      ospan_split high-memory - low-memory\n2334   605 response orthogonal      ospan_split high-memory - low-memory\n2335   606 response orthogonal      ospan_split high-memory - low-memory\n2336   607 response orthogonal      ospan_split high-memory - low-memory\n2337   608 response orthogonal      ospan_split high-memory - low-memory\n2338   609 response orthogonal      ospan_split high-memory - low-memory\n2339   610 response orthogonal      ospan_split high-memory - low-memory\n2340   611 response orthogonal      ospan_split high-memory - low-memory\n2341   612 response orthogonal      ospan_split high-memory - low-memory\n2342   613 response orthogonal      ospan_split high-memory - low-memory\n2343   614 response orthogonal      ospan_split high-memory - low-memory\n2344   615 response orthogonal      ospan_split high-memory - low-memory\n2345   616 response orthogonal      ospan_split high-memory - low-memory\n2346   617 response orthogonal      ospan_split high-memory - low-memory\n2347   618 response orthogonal      ospan_split high-memory - low-memory\n2348   619 response orthogonal      ospan_split high-memory - low-memory\n2349   620 response orthogonal      ospan_split high-memory - low-memory\n2350   621 response orthogonal      ospan_split high-memory - low-memory\n2351   622 response orthogonal      ospan_split high-memory - low-memory\n2352   623 response orthogonal      ospan_split high-memory - low-memory\n2353   624 response orthogonal      ospan_split high-memory - low-memory\n2354   625 response orthogonal      ospan_split high-memory - low-memory\n2355   626 response orthogonal      ospan_split high-memory - low-memory\n2356   627 response orthogonal      ospan_split high-memory - low-memory\n2357   628 response orthogonal      ospan_split high-memory - low-memory\n2358   629 response orthogonal      ospan_split high-memory - low-memory\n2359   630 response orthogonal      ospan_split high-memory - low-memory\n2360   631 response orthogonal      ospan_split high-memory - low-memory\n2361   632 response orthogonal      ospan_split high-memory - low-memory\n2362   633 response orthogonal      ospan_split high-memory - low-memory\n2363   634 response orthogonal      ospan_split high-memory - low-memory\n2364   635 response orthogonal      ospan_split high-memory - low-memory\n2365   636 response orthogonal      ospan_split high-memory - low-memory\n2366   637 response orthogonal      ospan_split high-memory - low-memory\n2367   638 response orthogonal      ospan_split high-memory - low-memory\n2368   639 response orthogonal      ospan_split high-memory - low-memory\n2369   640 response orthogonal      ospan_split high-memory - low-memory\n2370   641 response orthogonal      ospan_split high-memory - low-memory\n2371   642 response orthogonal      ospan_split high-memory - low-memory\n2372   643 response orthogonal      ospan_split high-memory - low-memory\n2373   644 response orthogonal      ospan_split high-memory - low-memory\n2374   645 response orthogonal      ospan_split high-memory - low-memory\n2375   646 response orthogonal      ospan_split high-memory - low-memory\n2376   647 response orthogonal      ospan_split high-memory - low-memory\n2377   648 response orthogonal      ospan_split high-memory - low-memory\n2378   649 response orthogonal      ospan_split high-memory - low-memory\n2379   650 response orthogonal      ospan_split high-memory - low-memory\n2380   651 response orthogonal      ospan_split high-memory - low-memory\n2381   652 response orthogonal      ospan_split high-memory - low-memory\n2382   653 response orthogonal      ospan_split high-memory - low-memory\n2383   654 response orthogonal      ospan_split high-memory - low-memory\n2384   655 response orthogonal      ospan_split high-memory - low-memory\n2385   656 response orthogonal      ospan_split high-memory - low-memory\n2386   657 response orthogonal      ospan_split high-memory - low-memory\n2387   658 response orthogonal      ospan_split high-memory - low-memory\n2388   659 response orthogonal      ospan_split high-memory - low-memory\n2389   660 response orthogonal      ospan_split high-memory - low-memory\n2390   661 response orthogonal      ospan_split high-memory - low-memory\n2391   662 response orthogonal      ospan_split high-memory - low-memory\n2392   663 response orthogonal      ospan_split high-memory - low-memory\n2393   664 response orthogonal      ospan_split high-memory - low-memory\n2394   665 response orthogonal      ospan_split high-memory - low-memory\n2395   666 response orthogonal      ospan_split high-memory - low-memory\n2396   667 response orthogonal      ospan_split high-memory - low-memory\n2397   668 response orthogonal      ospan_split high-memory - low-memory\n2398   669 response orthogonal      ospan_split high-memory - low-memory\n2399   670 response orthogonal      ospan_split high-memory - low-memory\n2400   671 response orthogonal      ospan_split high-memory - low-memory\n2401   672 response orthogonal      ospan_split high-memory - low-memory\n2402   673 response orthogonal      ospan_split high-memory - low-memory\n2403   674 response orthogonal      ospan_split high-memory - low-memory\n2404   675 response orthogonal      ospan_split high-memory - low-memory\n2405   676 response orthogonal      ospan_split high-memory - low-memory\n2406   677 response orthogonal      ospan_split high-memory - low-memory\n2407   678 response orthogonal      ospan_split high-memory - low-memory\n2408   679 response orthogonal      ospan_split high-memory - low-memory\n2409   680 response orthogonal      ospan_split high-memory - low-memory\n2410   681 response orthogonal      ospan_split high-memory - low-memory\n2411   682 response orthogonal      ospan_split high-memory - low-memory\n2412   683 response orthogonal      ospan_split high-memory - low-memory\n2413   684 response orthogonal      ospan_split high-memory - low-memory\n2414   685 response orthogonal      ospan_split high-memory - low-memory\n2415   686 response orthogonal      ospan_split high-memory - low-memory\n2416   687 response orthogonal      ospan_split high-memory - low-memory\n2417   688 response orthogonal      ospan_split high-memory - low-memory\n2418   689 response orthogonal      ospan_split high-memory - low-memory\n2419   690 response orthogonal      ospan_split high-memory - low-memory\n2420   691 response orthogonal      ospan_split high-memory - low-memory\n2421   692 response orthogonal      ospan_split high-memory - low-memory\n2422   693 response orthogonal      ospan_split high-memory - low-memory\n2423   694 response orthogonal      ospan_split high-memory - low-memory\n2424   695 response orthogonal      ospan_split high-memory - low-memory\n2425   696 response orthogonal      ospan_split high-memory - low-memory\n2426   697 response orthogonal      ospan_split high-memory - low-memory\n2427   698 response orthogonal      ospan_split high-memory - low-memory\n2428   699 response orthogonal      ospan_split high-memory - low-memory\n2429   700 response orthogonal      ospan_split high-memory - low-memory\n2430   701 response orthogonal      ospan_split high-memory - low-memory\n2431   702 response orthogonal      ospan_split high-memory - low-memory\n2432   703 response orthogonal      ospan_split high-memory - low-memory\n2433   704 response orthogonal      ospan_split high-memory - low-memory\n2434   705 response orthogonal      ospan_split high-memory - low-memory\n2435   706 response orthogonal      ospan_split high-memory - low-memory\n2436   707 response orthogonal      ospan_split high-memory - low-memory\n2437   708 response orthogonal      ospan_split high-memory - low-memory\n2438   709 response orthogonal      ospan_split high-memory - low-memory\n2439   710 response orthogonal      ospan_split high-memory - low-memory\n2440   711 response orthogonal      ospan_split high-memory - low-memory\n2441   712 response orthogonal      ospan_split high-memory - low-memory\n2442   713 response orthogonal      ospan_split high-memory - low-memory\n2443   714 response orthogonal      ospan_split high-memory - low-memory\n2444   715 response orthogonal      ospan_split high-memory - low-memory\n2445   716 response orthogonal      ospan_split high-memory - low-memory\n2446   717 response orthogonal      ospan_split high-memory - low-memory\n2447   718 response orthogonal      ospan_split high-memory - low-memory\n2448   719 response orthogonal      ospan_split high-memory - low-memory\n2449   720 response orthogonal      ospan_split high-memory - low-memory\n2450   721 response orthogonal      ospan_split high-memory - low-memory\n2451   722 response orthogonal      ospan_split high-memory - low-memory\n2452   723 response orthogonal      ospan_split high-memory - low-memory\n2453   724 response orthogonal      ospan_split high-memory - low-memory\n2454   725 response orthogonal      ospan_split high-memory - low-memory\n2455   726 response orthogonal      ospan_split high-memory - low-memory\n2456   727 response orthogonal      ospan_split high-memory - low-memory\n2457   728 response orthogonal      ospan_split high-memory - low-memory\n2458   729 response orthogonal      ospan_split high-memory - low-memory\n2459   730 response orthogonal      ospan_split high-memory - low-memory\n2460   731 response orthogonal      ospan_split high-memory - low-memory\n2461   732 response orthogonal      ospan_split high-memory - low-memory\n2462   733 response orthogonal      ospan_split high-memory - low-memory\n2463   734 response orthogonal      ospan_split high-memory - low-memory\n2464   735 response orthogonal      ospan_split high-memory - low-memory\n2465   736 response orthogonal      ospan_split high-memory - low-memory\n2466   737 response orthogonal      ospan_split high-memory - low-memory\n2467   738 response orthogonal      ospan_split high-memory - low-memory\n2468   739 response orthogonal      ospan_split high-memory - low-memory\n2469   740 response orthogonal      ospan_split high-memory - low-memory\n2470   741 response orthogonal      ospan_split high-memory - low-memory\n2471   742 response orthogonal      ospan_split high-memory - low-memory\n2472   743 response orthogonal      ospan_split high-memory - low-memory\n2473   744 response orthogonal      ospan_split high-memory - low-memory\n2474   745 response orthogonal      ospan_split high-memory - low-memory\n2475   746 response orthogonal      ospan_split high-memory - low-memory\n2476   747 response orthogonal      ospan_split high-memory - low-memory\n2477   748 response orthogonal      ospan_split high-memory - low-memory\n2478   749 response orthogonal      ospan_split high-memory - low-memory\n2479   750 response orthogonal      ospan_split high-memory - low-memory\n2480   751 response orthogonal      ospan_split high-memory - low-memory\n2481   752 response orthogonal      ospan_split high-memory - low-memory\n2482   753 response orthogonal      ospan_split high-memory - low-memory\n2483   754 response orthogonal      ospan_split high-memory - low-memory\n2484   755 response orthogonal      ospan_split high-memory - low-memory\n2485   756 response orthogonal      ospan_split high-memory - low-memory\n2486   757 response orthogonal      ospan_split high-memory - low-memory\n2487   758 response orthogonal      ospan_split high-memory - low-memory\n2488   759 response orthogonal      ospan_split high-memory - low-memory\n2489   760 response orthogonal      ospan_split high-memory - low-memory\n2490   761 response orthogonal      ospan_split high-memory - low-memory\n2491   762 response orthogonal      ospan_split high-memory - low-memory\n2492   763 response orthogonal      ospan_split high-memory - low-memory\n2493   764 response orthogonal      ospan_split high-memory - low-memory\n2494   765 response orthogonal      ospan_split high-memory - low-memory\n2495   766 response orthogonal      ospan_split high-memory - low-memory\n2496   767 response orthogonal      ospan_split high-memory - low-memory\n2497   768 response orthogonal      ospan_split high-memory - low-memory\n2498   769 response orthogonal      ospan_split high-memory - low-memory\n2499   770 response orthogonal      ospan_split high-memory - low-memory\n2500   771 response orthogonal      ospan_split high-memory - low-memory\n2501   772 response orthogonal      ospan_split high-memory - low-memory\n2502   773 response orthogonal      ospan_split high-memory - low-memory\n2503   774 response orthogonal      ospan_split high-memory - low-memory\n2504   775 response orthogonal      ospan_split high-memory - low-memory\n2505   776 response orthogonal      ospan_split high-memory - low-memory\n2506   777 response orthogonal      ospan_split high-memory - low-memory\n2507   778 response orthogonal      ospan_split high-memory - low-memory\n2508   779 response orthogonal      ospan_split high-memory - low-memory\n2509   780 response orthogonal      ospan_split high-memory - low-memory\n2510   781 response orthogonal      ospan_split high-memory - low-memory\n2511   782 response orthogonal      ospan_split high-memory - low-memory\n2512   783 response orthogonal      ospan_split high-memory - low-memory\n2513   784 response orthogonal      ospan_split high-memory - low-memory\n2514   785 response orthogonal      ospan_split high-memory - low-memory\n2515   786 response orthogonal      ospan_split high-memory - low-memory\n2516   787 response orthogonal      ospan_split high-memory - low-memory\n2517   788 response orthogonal      ospan_split high-memory - low-memory\n2518   789 response orthogonal      ospan_split high-memory - low-memory\n2519   790 response orthogonal      ospan_split high-memory - low-memory\n2520   791 response orthogonal      ospan_split high-memory - low-memory\n2521   792 response orthogonal      ospan_split high-memory - low-memory\n2522   793 response orthogonal      ospan_split high-memory - low-memory\n2523   794 response orthogonal      ospan_split high-memory - low-memory\n2524   795 response orthogonal      ospan_split high-memory - low-memory\n2525   796 response orthogonal      ospan_split high-memory - low-memory\n2526   797 response orthogonal      ospan_split high-memory - low-memory\n2527   798 response orthogonal      ospan_split high-memory - low-memory\n2528   799 response orthogonal      ospan_split high-memory - low-memory\n2529   800 response orthogonal      ospan_split high-memory - low-memory\n2530   801 response orthogonal      ospan_split high-memory - low-memory\n2531   802 response orthogonal      ospan_split high-memory - low-memory\n2532   803 response orthogonal      ospan_split high-memory - low-memory\n2533   804 response orthogonal      ospan_split high-memory - low-memory\n2534   805 response orthogonal      ospan_split high-memory - low-memory\n2535   806 response orthogonal      ospan_split high-memory - low-memory\n2536   807 response orthogonal      ospan_split high-memory - low-memory\n2537   808 response orthogonal      ospan_split high-memory - low-memory\n2538   809 response orthogonal      ospan_split high-memory - low-memory\n2539   810 response orthogonal      ospan_split high-memory - low-memory\n2540   811 response orthogonal      ospan_split high-memory - low-memory\n2541   812 response orthogonal      ospan_split high-memory - low-memory\n2542   813 response orthogonal      ospan_split high-memory - low-memory\n2543   814 response orthogonal      ospan_split high-memory - low-memory\n2544   815 response orthogonal      ospan_split high-memory - low-memory\n2545   816 response orthogonal      ospan_split high-memory - low-memory\n2546   817 response orthogonal      ospan_split high-memory - low-memory\n2547   818 response orthogonal      ospan_split high-memory - low-memory\n2548   819 response orthogonal      ospan_split high-memory - low-memory\n2549   820 response orthogonal      ospan_split high-memory - low-memory\n2550   821 response orthogonal      ospan_split high-memory - low-memory\n2551   822 response orthogonal      ospan_split high-memory - low-memory\n2552   823 response orthogonal      ospan_split high-memory - low-memory\n2553   824 response orthogonal      ospan_split high-memory - low-memory\n2554   825 response orthogonal      ospan_split high-memory - low-memory\n2555   826 response orthogonal      ospan_split high-memory - low-memory\n2556   827 response orthogonal      ospan_split high-memory - low-memory\n2557   828 response orthogonal      ospan_split high-memory - low-memory\n2558   829 response orthogonal      ospan_split high-memory - low-memory\n2559   830 response orthogonal      ospan_split high-memory - low-memory\n2560   831 response orthogonal      ospan_split high-memory - low-memory\n2561   832 response orthogonal      ospan_split high-memory - low-memory\n2562   833 response orthogonal      ospan_split high-memory - low-memory\n2563   834 response orthogonal      ospan_split high-memory - low-memory\n2564   835 response orthogonal      ospan_split high-memory - low-memory\n2565   836 response orthogonal      ospan_split high-memory - low-memory\n2566   837 response orthogonal      ospan_split high-memory - low-memory\n2567   838 response orthogonal      ospan_split high-memory - low-memory\n2568   839 response orthogonal      ospan_split high-memory - low-memory\n2569   840 response orthogonal      ospan_split high-memory - low-memory\n2570   841 response orthogonal      ospan_split high-memory - low-memory\n2571   842 response orthogonal      ospan_split high-memory - low-memory\n2572   843 response orthogonal      ospan_split high-memory - low-memory\n2573   844 response orthogonal      ospan_split high-memory - low-memory\n2574   845 response orthogonal      ospan_split high-memory - low-memory\n2575   846 response orthogonal      ospan_split high-memory - low-memory\n2576   847 response orthogonal      ospan_split high-memory - low-memory\n2577   848 response orthogonal      ospan_split high-memory - low-memory\n2578   849 response orthogonal      ospan_split high-memory - low-memory\n2579   850 response orthogonal      ospan_split high-memory - low-memory\n2580   851 response orthogonal      ospan_split high-memory - low-memory\n2581   852 response orthogonal      ospan_split high-memory - low-memory\n2582   853 response orthogonal      ospan_split high-memory - low-memory\n2583   854 response orthogonal      ospan_split high-memory - low-memory\n2584   855 response orthogonal      ospan_split high-memory - low-memory\n2585   856 response orthogonal      ospan_split high-memory - low-memory\n2586   857 response orthogonal      ospan_split high-memory - low-memory\n2587   858 response orthogonal      ospan_split high-memory - low-memory\n2588   859 response orthogonal      ospan_split high-memory - low-memory\n2589   860 response orthogonal      ospan_split high-memory - low-memory\n2590   861 response orthogonal      ospan_split high-memory - low-memory\n2591   862 response orthogonal      ospan_split high-memory - low-memory\n2592   863 response orthogonal      ospan_split high-memory - low-memory\n2593   864 response orthogonal      ospan_split high-memory - low-memory\n2594   865 response orthogonal      ospan_split high-memory - low-memory\n2595   866 response orthogonal      ospan_split high-memory - low-memory\n2596   867 response orthogonal      ospan_split high-memory - low-memory\n2597   868 response orthogonal      ospan_split high-memory - low-memory\n2598   869 response orthogonal      ospan_split high-memory - low-memory\n2599   870 response orthogonal      ospan_split high-memory - low-memory\n2600   871 response orthogonal      ospan_split high-memory - low-memory\n2601   872 response orthogonal      ospan_split high-memory - low-memory\n2602   873 response orthogonal      ospan_split high-memory - low-memory\n2603   874 response orthogonal      ospan_split high-memory - low-memory\n2604   875 response orthogonal      ospan_split high-memory - low-memory\n2605   876 response orthogonal      ospan_split high-memory - low-memory\n2606   877 response orthogonal      ospan_split high-memory - low-memory\n2607   878 response orthogonal      ospan_split high-memory - low-memory\n2608   879 response orthogonal      ospan_split high-memory - low-memory\n2609   880 response orthogonal      ospan_split high-memory - low-memory\n2610   881 response orthogonal      ospan_split high-memory - low-memory\n2611   882 response orthogonal      ospan_split high-memory - low-memory\n2612   883 response orthogonal      ospan_split high-memory - low-memory\n2613   884 response orthogonal      ospan_split high-memory - low-memory\n2614   885 response orthogonal      ospan_split high-memory - low-memory\n2615   886 response orthogonal      ospan_split high-memory - low-memory\n2616   887 response orthogonal      ospan_split high-memory - low-memory\n2617   888 response orthogonal      ospan_split high-memory - low-memory\n2618   889 response orthogonal      ospan_split high-memory - low-memory\n2619   890 response orthogonal      ospan_split high-memory - low-memory\n2620   891 response orthogonal      ospan_split high-memory - low-memory\n2621   892 response orthogonal      ospan_split high-memory - low-memory\n2622   893 response orthogonal      ospan_split high-memory - low-memory\n2623   894 response orthogonal      ospan_split high-memory - low-memory\n2624   895 response orthogonal      ospan_split high-memory - low-memory\n2625   896 response orthogonal      ospan_split high-memory - low-memory\n2626   897 response orthogonal      ospan_split high-memory - low-memory\n2627   898 response orthogonal      ospan_split high-memory - low-memory\n2628   899 response orthogonal      ospan_split high-memory - low-memory\n2629   900 response orthogonal      ospan_split high-memory - low-memory\n2630   901 response orthogonal      ospan_split high-memory - low-memory\n2631   902 response orthogonal      ospan_split high-memory - low-memory\n2632   903 response orthogonal      ospan_split high-memory - low-memory\n2633   904 response orthogonal      ospan_split high-memory - low-memory\n2634   905 response orthogonal      ospan_split high-memory - low-memory\n2635   906 response orthogonal      ospan_split high-memory - low-memory\n2636   907 response orthogonal      ospan_split high-memory - low-memory\n2637   908 response orthogonal      ospan_split high-memory - low-memory\n2638   909 response orthogonal      ospan_split high-memory - low-memory\n2639   910 response orthogonal      ospan_split high-memory - low-memory\n2640   911 response orthogonal      ospan_split high-memory - low-memory\n2641   912 response orthogonal      ospan_split high-memory - low-memory\n2642   913 response orthogonal      ospan_split high-memory - low-memory\n2643   914 response orthogonal      ospan_split high-memory - low-memory\n2644   915 response orthogonal      ospan_split high-memory - low-memory\n2645   916 response orthogonal      ospan_split high-memory - low-memory\n2646   917 response orthogonal      ospan_split high-memory - low-memory\n2647   918 response orthogonal      ospan_split high-memory - low-memory\n2648   919 response orthogonal      ospan_split high-memory - low-memory\n2649   920 response orthogonal      ospan_split high-memory - low-memory\n2650   921 response orthogonal      ospan_split high-memory - low-memory\n2651   922 response orthogonal      ospan_split high-memory - low-memory\n2652   923 response orthogonal      ospan_split high-memory - low-memory\n2653   924 response orthogonal      ospan_split high-memory - low-memory\n2654   925 response orthogonal      ospan_split high-memory - low-memory\n2655   926 response orthogonal      ospan_split high-memory - low-memory\n2656   927 response orthogonal      ospan_split high-memory - low-memory\n2657   928 response orthogonal      ospan_split high-memory - low-memory\n2658   929 response orthogonal      ospan_split high-memory - low-memory\n2659   930 response orthogonal      ospan_split high-memory - low-memory\n2660   931 response orthogonal      ospan_split high-memory - low-memory\n2661   932 response orthogonal      ospan_split high-memory - low-memory\n2662   933 response orthogonal      ospan_split high-memory - low-memory\n2663   934 response orthogonal      ospan_split high-memory - low-memory\n2664   935 response orthogonal      ospan_split high-memory - low-memory\n2665   936 response orthogonal      ospan_split high-memory - low-memory\n2666   937 response orthogonal      ospan_split high-memory - low-memory\n2667   938 response orthogonal      ospan_split high-memory - low-memory\n2668   939 response orthogonal      ospan_split high-memory - low-memory\n2669   940 response orthogonal      ospan_split high-memory - low-memory\n2670   941 response orthogonal      ospan_split high-memory - low-memory\n2671   942 response orthogonal      ospan_split high-memory - low-memory\n2672   943 response orthogonal      ospan_split high-memory - low-memory\n2673   944 response orthogonal      ospan_split high-memory - low-memory\n2674   945 response orthogonal      ospan_split high-memory - low-memory\n2675   946 response orthogonal      ospan_split high-memory - low-memory\n2676   947 response orthogonal      ospan_split high-memory - low-memory\n2677   948 response orthogonal      ospan_split high-memory - low-memory\n2678   949 response orthogonal      ospan_split high-memory - low-memory\n2679   950 response orthogonal      ospan_split high-memory - low-memory\n2680   951 response orthogonal      ospan_split high-memory - low-memory\n2681   952 response orthogonal      ospan_split high-memory - low-memory\n2682   953 response orthogonal      ospan_split high-memory - low-memory\n2683   954 response orthogonal      ospan_split high-memory - low-memory\n2684   955 response orthogonal      ospan_split high-memory - low-memory\n2685   956 response orthogonal      ospan_split high-memory - low-memory\n2686   957 response orthogonal      ospan_split high-memory - low-memory\n2687   958 response orthogonal      ospan_split high-memory - low-memory\n2688   959 response orthogonal      ospan_split high-memory - low-memory\n2689   960 response orthogonal      ospan_split high-memory - low-memory\n2690   961 response orthogonal      ospan_split high-memory - low-memory\n2691   962 response orthogonal      ospan_split high-memory - low-memory\n2692   963 response orthogonal      ospan_split high-memory - low-memory\n2693   964 response orthogonal      ospan_split high-memory - low-memory\n2694   965 response orthogonal      ospan_split high-memory - low-memory\n2695   966 response orthogonal      ospan_split high-memory - low-memory\n2696   967 response orthogonal      ospan_split high-memory - low-memory\n2697   968 response orthogonal      ospan_split high-memory - low-memory\n2698   969 response orthogonal      ospan_split high-memory - low-memory\n2699   970 response orthogonal      ospan_split high-memory - low-memory\n2700   971 response orthogonal      ospan_split high-memory - low-memory\n2701   972 response orthogonal      ospan_split high-memory - low-memory\n2702   973 response orthogonal      ospan_split high-memory - low-memory\n2703   974 response orthogonal      ospan_split high-memory - low-memory\n2704   975 response orthogonal      ospan_split high-memory - low-memory\n2705   976 response orthogonal      ospan_split high-memory - low-memory\n2706   977 response orthogonal      ospan_split high-memory - low-memory\n2707   978 response orthogonal      ospan_split high-memory - low-memory\n2708   979 response orthogonal      ospan_split high-memory - low-memory\n2709   980 response orthogonal      ospan_split high-memory - low-memory\n2710   981 response orthogonal      ospan_split high-memory - low-memory\n2711   982 response orthogonal      ospan_split high-memory - low-memory\n2712   983 response orthogonal      ospan_split high-memory - low-memory\n2713   984 response orthogonal      ospan_split high-memory - low-memory\n2714   985 response orthogonal      ospan_split high-memory - low-memory\n2715   986 response orthogonal      ospan_split high-memory - low-memory\n2716   987 response orthogonal      ospan_split high-memory - low-memory\n2717   988 response orthogonal      ospan_split high-memory - low-memory\n2718   989 response orthogonal      ospan_split high-memory - low-memory\n2719   990 response orthogonal      ospan_split high-memory - low-memory\n2720   991 response orthogonal      ospan_split high-memory - low-memory\n2721   992 response orthogonal      ospan_split high-memory - low-memory\n2722   993 response orthogonal      ospan_split high-memory - low-memory\n2723   994 response orthogonal      ospan_split high-memory - low-memory\n2724   995 response orthogonal      ospan_split high-memory - low-memory\n2725   996 response orthogonal      ospan_split high-memory - low-memory\n2726   997 response orthogonal      ospan_split high-memory - low-memory\n2727   998 response orthogonal      ospan_split high-memory - low-memory\n2728   999 response orthogonal      ospan_split high-memory - low-memory\n2729  1000 response orthogonal      ospan_split high-memory - low-memory\n2730  1001 response orthogonal      ospan_split high-memory - low-memory\n2731  1002 response orthogonal      ospan_split high-memory - low-memory\n2732  1003 response orthogonal      ospan_split high-memory - low-memory\n2733  1004 response orthogonal      ospan_split high-memory - low-memory\n2734  1005 response orthogonal      ospan_split high-memory - low-memory\n2735  1006 response orthogonal      ospan_split high-memory - low-memory\n2736  1007 response orthogonal      ospan_split high-memory - low-memory\n2737  1008 response orthogonal      ospan_split high-memory - low-memory\n2738  1009 response orthogonal      ospan_split high-memory - low-memory\n2739  1010 response orthogonal      ospan_split high-memory - low-memory\n2740  1011 response orthogonal      ospan_split high-memory - low-memory\n2741  1012 response orthogonal      ospan_split high-memory - low-memory\n2742  1013 response orthogonal      ospan_split high-memory - low-memory\n2743  1014 response orthogonal      ospan_split high-memory - low-memory\n2744  1015 response orthogonal      ospan_split high-memory - low-memory\n2745  1016 response orthogonal      ospan_split high-memory - low-memory\n2746  1017 response orthogonal      ospan_split high-memory - low-memory\n2747  1018 response orthogonal      ospan_split high-memory - low-memory\n2748  1019 response orthogonal      ospan_split high-memory - low-memory\n2749  1020 response orthogonal      ospan_split high-memory - low-memory\n2750  1021 response orthogonal      ospan_split high-memory - low-memory\n2751  1022 response orthogonal      ospan_split high-memory - low-memory\n2752  1023 response orthogonal      ospan_split high-memory - low-memory\n2753  1024 response orthogonal      ospan_split high-memory - low-memory\n2754  1025 response orthogonal      ospan_split high-memory - low-memory\n2755  1026 response orthogonal      ospan_split high-memory - low-memory\n2756  1027 response orthogonal      ospan_split high-memory - low-memory\n2757  1028 response orthogonal      ospan_split high-memory - low-memory\n2758  1029 response orthogonal      ospan_split high-memory - low-memory\n2759  1030 response orthogonal      ospan_split high-memory - low-memory\n2760  1031 response orthogonal      ospan_split high-memory - low-memory\n2761  1032 response orthogonal      ospan_split high-memory - low-memory\n2762  1033 response orthogonal      ospan_split high-memory - low-memory\n2763  1034 response orthogonal      ospan_split high-memory - low-memory\n2764  1035 response orthogonal      ospan_split high-memory - low-memory\n2765  1036 response orthogonal      ospan_split high-memory - low-memory\n2766  1037 response orthogonal      ospan_split high-memory - low-memory\n2767  1038 response orthogonal      ospan_split high-memory - low-memory\n2768  1039 response orthogonal      ospan_split high-memory - low-memory\n2769  1040 response orthogonal      ospan_split high-memory - low-memory\n2770  1041 response orthogonal      ospan_split high-memory - low-memory\n2771  1042 response orthogonal      ospan_split high-memory - low-memory\n2772  1043 response orthogonal      ospan_split high-memory - low-memory\n2773  1044 response orthogonal      ospan_split high-memory - low-memory\n2774  1045 response orthogonal      ospan_split high-memory - low-memory\n2775  1046 response orthogonal      ospan_split high-memory - low-memory\n2776  1047 response orthogonal      ospan_split high-memory - low-memory\n2777  1048 response orthogonal      ospan_split high-memory - low-memory\n2778  1049 response orthogonal      ospan_split high-memory - low-memory\n2779  1050 response orthogonal      ospan_split high-memory - low-memory\n2780  1051 response orthogonal      ospan_split high-memory - low-memory\n2781  1052 response orthogonal      ospan_split high-memory - low-memory\n2782  1053 response orthogonal      ospan_split high-memory - low-memory\n2783  1054 response orthogonal      ospan_split high-memory - low-memory\n2784  1055 response orthogonal      ospan_split high-memory - low-memory\n2785  1056 response orthogonal      ospan_split high-memory - low-memory\n2786  1057 response orthogonal      ospan_split high-memory - low-memory\n2787  1058 response orthogonal      ospan_split high-memory - low-memory\n2788  1059 response orthogonal      ospan_split high-memory - low-memory\n2789  1060 response orthogonal      ospan_split high-memory - low-memory\n2790  1061 response orthogonal      ospan_split high-memory - low-memory\n2791  1062 response orthogonal      ospan_split high-memory - low-memory\n2792  1063 response orthogonal      ospan_split high-memory - low-memory\n2793  1064 response orthogonal      ospan_split high-memory - low-memory\n2794  1065 response orthogonal      ospan_split high-memory - low-memory\n2795  1066 response orthogonal      ospan_split high-memory - low-memory\n2796  1067 response orthogonal      ospan_split high-memory - low-memory\n2797  1068 response orthogonal      ospan_split high-memory - low-memory\n2798  1069 response orthogonal      ospan_split high-memory - low-memory\n2799  1070 response orthogonal      ospan_split high-memory - low-memory\n2800  1071 response orthogonal      ospan_split high-memory - low-memory\n2801  1072 response orthogonal      ospan_split high-memory - low-memory\n2802  1073 response orthogonal      ospan_split high-memory - low-memory\n2803  1074 response orthogonal      ospan_split high-memory - low-memory\n2804  1075 response orthogonal      ospan_split high-memory - low-memory\n2805  1076 response orthogonal      ospan_split high-memory - low-memory\n2806  1077 response orthogonal      ospan_split high-memory - low-memory\n2807  1078 response orthogonal      ospan_split high-memory - low-memory\n2808  1079 response orthogonal      ospan_split high-memory - low-memory\n2809  1080 response orthogonal      ospan_split high-memory - low-memory\n2810  1081 response orthogonal      ospan_split high-memory - low-memory\n2811  1082 response orthogonal      ospan_split high-memory - low-memory\n2812  1083 response orthogonal      ospan_split high-memory - low-memory\n2813  1084 response orthogonal      ospan_split high-memory - low-memory\n2814  1085 response orthogonal      ospan_split high-memory - low-memory\n2815  1086 response orthogonal      ospan_split high-memory - low-memory\n2816  1087 response orthogonal      ospan_split high-memory - low-memory\n2817  1088 response orthogonal      ospan_split high-memory - low-memory\n2818  1089 response orthogonal      ospan_split high-memory - low-memory\n2819  1090 response orthogonal      ospan_split high-memory - low-memory\n2820  1091 response orthogonal      ospan_split high-memory - low-memory\n2821  1092 response orthogonal      ospan_split high-memory - low-memory\n2822  1093 response orthogonal      ospan_split high-memory - low-memory\n2823  1094 response orthogonal      ospan_split high-memory - low-memory\n2824  1095 response orthogonal      ospan_split high-memory - low-memory\n2825  1096 response orthogonal      ospan_split high-memory - low-memory\n2826  1097 response orthogonal      ospan_split high-memory - low-memory\n2827  1098 response orthogonal      ospan_split high-memory - low-memory\n2828  1099 response orthogonal      ospan_split high-memory - low-memory\n2829  1100 response orthogonal      ospan_split high-memory - low-memory\n2830  1101 response orthogonal      ospan_split high-memory - low-memory\n2831  1102 response orthogonal      ospan_split high-memory - low-memory\n2832  1103 response orthogonal      ospan_split high-memory - low-memory\n2833  1104 response orthogonal      ospan_split high-memory - low-memory\n2834  1105 response orthogonal      ospan_split high-memory - low-memory\n2835  1106 response orthogonal      ospan_split high-memory - low-memory\n2836  1107 response orthogonal      ospan_split high-memory - low-memory\n2837  1108 response orthogonal      ospan_split high-memory - low-memory\n2838  1109 response orthogonal      ospan_split high-memory - low-memory\n2839  1110 response orthogonal      ospan_split high-memory - low-memory\n2840  1111 response orthogonal      ospan_split high-memory - low-memory\n2841  1112 response orthogonal      ospan_split high-memory - low-memory\n2842  1113 response orthogonal      ospan_split high-memory - low-memory\n2843  1114 response orthogonal      ospan_split high-memory - low-memory\n2844  1115 response orthogonal      ospan_split high-memory - low-memory\n2845  1116 response orthogonal      ospan_split high-memory - low-memory\n2846  1117 response orthogonal      ospan_split high-memory - low-memory\n2847  1118 response orthogonal      ospan_split high-memory - low-memory\n2848  1119 response orthogonal      ospan_split high-memory - low-memory\n2849  1120 response orthogonal      ospan_split high-memory - low-memory\n2850  1121 response orthogonal      ospan_split high-memory - low-memory\n2851  1122 response orthogonal      ospan_split high-memory - low-memory\n2852  1123 response orthogonal      ospan_split high-memory - low-memory\n2853  1124 response orthogonal      ospan_split high-memory - low-memory\n2854  1125 response orthogonal      ospan_split high-memory - low-memory\n2855  1126 response orthogonal      ospan_split high-memory - low-memory\n2856  1127 response orthogonal      ospan_split high-memory - low-memory\n2857  1128 response orthogonal      ospan_split high-memory - low-memory\n2858  1129 response orthogonal      ospan_split high-memory - low-memory\n2859  1130 response orthogonal      ospan_split high-memory - low-memory\n2860  1131 response orthogonal      ospan_split high-memory - low-memory\n2861  1132 response orthogonal      ospan_split high-memory - low-memory\n2862  1133 response orthogonal      ospan_split high-memory - low-memory\n2863  1134 response orthogonal      ospan_split high-memory - low-memory\n2864  1135 response orthogonal      ospan_split high-memory - low-memory\n2865  1136 response orthogonal      ospan_split high-memory - low-memory\n2866  1137 response orthogonal      ospan_split high-memory - low-memory\n2867  1138 response orthogonal      ospan_split high-memory - low-memory\n2868  1139 response orthogonal      ospan_split high-memory - low-memory\n2869  1140 response orthogonal      ospan_split high-memory - low-memory\n2870  1141 response orthogonal      ospan_split high-memory - low-memory\n2871  1142 response orthogonal      ospan_split high-memory - low-memory\n2872  1143 response orthogonal      ospan_split high-memory - low-memory\n2873  1144 response orthogonal      ospan_split high-memory - low-memory\n2874  1145 response orthogonal      ospan_split high-memory - low-memory\n2875  1146 response orthogonal      ospan_split high-memory - low-memory\n2876  1147 response orthogonal      ospan_split high-memory - low-memory\n2877  1148 response orthogonal      ospan_split high-memory - low-memory\n2878  1149 response orthogonal      ospan_split high-memory - low-memory\n2879  1150 response orthogonal      ospan_split high-memory - low-memory\n2880  1151 response orthogonal      ospan_split high-memory - low-memory\n2881  1152 response orthogonal      ospan_split high-memory - low-memory\n2882  1153 response orthogonal      ospan_split high-memory - low-memory\n2883  1154 response orthogonal      ospan_split high-memory - low-memory\n2884  1155 response orthogonal      ospan_split high-memory - low-memory\n2885  1156 response orthogonal      ospan_split high-memory - low-memory\n2886  1157 response orthogonal      ospan_split high-memory - low-memory\n2887  1158 response orthogonal      ospan_split high-memory - low-memory\n2888  1159 response orthogonal      ospan_split high-memory - low-memory\n2889  1160 response orthogonal      ospan_split high-memory - low-memory\n2890  1161 response orthogonal      ospan_split high-memory - low-memory\n2891  1162 response orthogonal      ospan_split high-memory - low-memory\n2892  1163 response orthogonal      ospan_split high-memory - low-memory\n2893  1164 response orthogonal      ospan_split high-memory - low-memory\n2894  1165 response orthogonal      ospan_split high-memory - low-memory\n2895  1166 response orthogonal      ospan_split high-memory - low-memory\n2896  1167 response orthogonal      ospan_split high-memory - low-memory\n2897  1168 response orthogonal      ospan_split high-memory - low-memory\n2898  1169 response orthogonal      ospan_split high-memory - low-memory\n2899  1170 response orthogonal      ospan_split high-memory - low-memory\n2900  1171 response orthogonal      ospan_split high-memory - low-memory\n2901  1172 response orthogonal      ospan_split high-memory - low-memory\n2902  1173 response orthogonal      ospan_split high-memory - low-memory\n2903  1174 response orthogonal      ospan_split high-memory - low-memory\n2904  1175 response orthogonal      ospan_split high-memory - low-memory\n2905  1176 response orthogonal      ospan_split high-memory - low-memory\n2906  1177 response orthogonal      ospan_split high-memory - low-memory\n2907  1178 response orthogonal      ospan_split high-memory - low-memory\n2908  1179 response orthogonal      ospan_split high-memory - low-memory\n2909  1180 response orthogonal      ospan_split high-memory - low-memory\n2910  1181 response orthogonal      ospan_split high-memory - low-memory\n2911  1182 response orthogonal      ospan_split high-memory - low-memory\n2912  1183 response orthogonal      ospan_split high-memory - low-memory\n2913  1184 response orthogonal      ospan_split high-memory - low-memory\n2914  1185 response orthogonal      ospan_split high-memory - low-memory\n2915  1186 response orthogonal      ospan_split high-memory - low-memory\n2916  1187 response orthogonal      ospan_split high-memory - low-memory\n2917  1188 response orthogonal      ospan_split high-memory - low-memory\n2918  1189 response orthogonal      ospan_split high-memory - low-memory\n2919  1190 response orthogonal      ospan_split high-memory - low-memory\n2920  1191 response orthogonal      ospan_split high-memory - low-memory\n2921  1192 response orthogonal      ospan_split high-memory - low-memory\n2922  1193 response orthogonal      ospan_split high-memory - low-memory\n2923  1194 response orthogonal      ospan_split high-memory - low-memory\n2924  1195 response orthogonal      ospan_split high-memory - low-memory\n2925  1196 response orthogonal      ospan_split high-memory - low-memory\n2926  1197 response orthogonal      ospan_split high-memory - low-memory\n2927  1198 response orthogonal      ospan_split high-memory - low-memory\n2928  1199 response orthogonal      ospan_split high-memory - low-memory\n2929  1200 response orthogonal      ospan_split high-memory - low-memory\n2930  1201 response orthogonal      ospan_split high-memory - low-memory\n2931  1202 response orthogonal      ospan_split high-memory - low-memory\n2932  1203 response orthogonal      ospan_split high-memory - low-memory\n2933  1204 response orthogonal      ospan_split high-memory - low-memory\n2934  1205 response orthogonal      ospan_split high-memory - low-memory\n2935  1206 response orthogonal      ospan_split high-memory - low-memory\n2936  1207 response orthogonal      ospan_split high-memory - low-memory\n2937  1208 response orthogonal      ospan_split high-memory - low-memory\n2938  1209 response orthogonal      ospan_split high-memory - low-memory\n2939  1210 response orthogonal      ospan_split high-memory - low-memory\n2940  1211 response orthogonal      ospan_split high-memory - low-memory\n2941  1212 response orthogonal      ospan_split high-memory - low-memory\n2942  1213 response orthogonal      ospan_split high-memory - low-memory\n2943  1214 response orthogonal      ospan_split high-memory - low-memory\n2944  1215 response orthogonal      ospan_split high-memory - low-memory\n2945  1216 response orthogonal      ospan_split high-memory - low-memory\n2946  1217 response orthogonal      ospan_split high-memory - low-memory\n2947  1218 response orthogonal      ospan_split high-memory - low-memory\n2948  1219 response orthogonal      ospan_split high-memory - low-memory\n2949  1220 response orthogonal      ospan_split high-memory - low-memory\n2950  1221 response orthogonal      ospan_split high-memory - low-memory\n2951  1222 response orthogonal      ospan_split high-memory - low-memory\n2952  1223 response orthogonal      ospan_split high-memory - low-memory\n2953  1224 response orthogonal      ospan_split high-memory - low-memory\n2954  1225 response orthogonal      ospan_split high-memory - low-memory\n2955  1226 response orthogonal      ospan_split high-memory - low-memory\n2956  1227 response orthogonal      ospan_split high-memory - low-memory\n2957  1228 response orthogonal      ospan_split high-memory - low-memory\n2958  1229 response orthogonal      ospan_split high-memory - low-memory\n2959  1230 response orthogonal      ospan_split high-memory - low-memory\n2960  1231 response orthogonal      ospan_split high-memory - low-memory\n2961  1232 response orthogonal      ospan_split high-memory - low-memory\n2962  1233 response orthogonal      ospan_split high-memory - low-memory\n2963  1234 response orthogonal      ospan_split high-memory - low-memory\n2964  1235 response orthogonal      ospan_split high-memory - low-memory\n2965  1236 response orthogonal      ospan_split high-memory - low-memory\n2966  1237 response orthogonal      ospan_split high-memory - low-memory\n2967  1238 response orthogonal      ospan_split high-memory - low-memory\n2968  1239 response orthogonal      ospan_split high-memory - low-memory\n2969  1240 response orthogonal      ospan_split high-memory - low-memory\n2970  1241 response orthogonal      ospan_split high-memory - low-memory\n2971  1242 response orthogonal      ospan_split high-memory - low-memory\n2972  1243 response orthogonal      ospan_split high-memory - low-memory\n2973  1244 response orthogonal      ospan_split high-memory - low-memory\n2974  1245 response orthogonal      ospan_split high-memory - low-memory\n2975  1246 response orthogonal      ospan_split high-memory - low-memory\n2976  1247 response orthogonal      ospan_split high-memory - low-memory\n2977  1248 response orthogonal      ospan_split high-memory - low-memory\n2978  1249 response orthogonal      ospan_split high-memory - low-memory\n2979  1250 response orthogonal      ospan_split high-memory - low-memory\n2980  1251 response orthogonal      ospan_split high-memory - low-memory\n2981  1252 response orthogonal      ospan_split high-memory - low-memory\n2982  1253 response orthogonal      ospan_split high-memory - low-memory\n2983  1254 response orthogonal      ospan_split high-memory - low-memory\n2984  1255 response orthogonal      ospan_split high-memory - low-memory\n2985  1256 response orthogonal      ospan_split high-memory - low-memory\n2986  1257 response orthogonal      ospan_split high-memory - low-memory\n2987  1258 response orthogonal      ospan_split high-memory - low-memory\n2988  1259 response orthogonal      ospan_split high-memory - low-memory\n2989  1260 response orthogonal      ospan_split high-memory - low-memory\n2990  1261 response orthogonal      ospan_split high-memory - low-memory\n2991  1262 response orthogonal      ospan_split high-memory - low-memory\n2992  1263 response orthogonal      ospan_split high-memory - low-memory\n2993  1264 response orthogonal      ospan_split high-memory - low-memory\n2994  1265 response orthogonal      ospan_split high-memory - low-memory\n2995  1266 response orthogonal      ospan_split high-memory - low-memory\n2996  1267 response orthogonal      ospan_split high-memory - low-memory\n2997  1268 response orthogonal      ospan_split high-memory - low-memory\n2998  1269 response orthogonal      ospan_split high-memory - low-memory\n2999  1270 response orthogonal      ospan_split high-memory - low-memory\n3000  1271 response orthogonal      ospan_split high-memory - low-memory\n3001  1272 response orthogonal      ospan_split high-memory - low-memory\n3002  1273 response orthogonal      ospan_split high-memory - low-memory\n3003  1274 response orthogonal      ospan_split high-memory - low-memory\n3004  1275 response orthogonal      ospan_split high-memory - low-memory\n3005  1276 response orthogonal      ospan_split high-memory - low-memory\n3006  1277 response orthogonal      ospan_split high-memory - low-memory\n3007  1278 response orthogonal      ospan_split high-memory - low-memory\n3008  1279 response orthogonal      ospan_split high-memory - low-memory\n3009  1280 response orthogonal      ospan_split high-memory - low-memory\n3010  1281 response orthogonal      ospan_split high-memory - low-memory\n3011  1282 response orthogonal      ospan_split high-memory - low-memory\n3012  1283 response orthogonal      ospan_split high-memory - low-memory\n3013  1284 response orthogonal      ospan_split high-memory - low-memory\n3014  1285 response orthogonal      ospan_split high-memory - low-memory\n3015  1286 response orthogonal      ospan_split high-memory - low-memory\n3016  1287 response orthogonal      ospan_split high-memory - low-memory\n3017  1288 response orthogonal      ospan_split high-memory - low-memory\n3018  1289 response orthogonal      ospan_split high-memory - low-memory\n3019  1290 response orthogonal      ospan_split high-memory - low-memory\n3020  1291 response orthogonal      ospan_split high-memory - low-memory\n3021  1292 response orthogonal      ospan_split high-memory - low-memory\n3022  1293 response orthogonal      ospan_split high-memory - low-memory\n3023  1294 response orthogonal      ospan_split high-memory - low-memory\n3024  1295 response orthogonal      ospan_split high-memory - low-memory\n3025  1296 response orthogonal      ospan_split high-memory - low-memory\n3026  1297 response orthogonal      ospan_split high-memory - low-memory\n3027  1298 response orthogonal      ospan_split high-memory - low-memory\n3028  1299 response orthogonal      ospan_split high-memory - low-memory\n3029  1300 response orthogonal      ospan_split high-memory - low-memory\n3030  1301 response orthogonal      ospan_split high-memory - low-memory\n3031  1302 response orthogonal      ospan_split high-memory - low-memory\n3032  1303 response orthogonal      ospan_split high-memory - low-memory\n3033  1304 response orthogonal      ospan_split high-memory - low-memory\n3034  1305 response orthogonal      ospan_split high-memory - low-memory\n3035  1306 response orthogonal      ospan_split high-memory - low-memory\n3036  1307 response orthogonal      ospan_split high-memory - low-memory\n3037  1308 response orthogonal      ospan_split high-memory - low-memory\n3038  1309 response orthogonal      ospan_split high-memory - low-memory\n3039  1310 response orthogonal      ospan_split high-memory - low-memory\n3040  1311 response orthogonal      ospan_split high-memory - low-memory\n3041  1312 response orthogonal      ospan_split high-memory - low-memory\n3042  1313 response orthogonal      ospan_split high-memory - low-memory\n3043  1314 response orthogonal      ospan_split high-memory - low-memory\n3044  1315 response orthogonal      ospan_split high-memory - low-memory\n3045  1316 response orthogonal      ospan_split high-memory - low-memory\n3046  1317 response orthogonal      ospan_split high-memory - low-memory\n3047  1318 response orthogonal      ospan_split high-memory - low-memory\n3048  1319 response orthogonal      ospan_split high-memory - low-memory\n3049  1320 response orthogonal      ospan_split high-memory - low-memory\n3050  1321 response orthogonal      ospan_split high-memory - low-memory\n3051  1322 response orthogonal      ospan_split high-memory - low-memory\n3052  1323 response orthogonal      ospan_split high-memory - low-memory\n3053  1324 response orthogonal      ospan_split high-memory - low-memory\n3054  1325 response orthogonal      ospan_split high-memory - low-memory\n3055  1326 response orthogonal      ospan_split high-memory - low-memory\n3056  1327 response orthogonal      ospan_split high-memory - low-memory\n3057  1328 response orthogonal      ospan_split high-memory - low-memory\n3058  1329 response orthogonal      ospan_split high-memory - low-memory\n3059  1330 response orthogonal      ospan_split high-memory - low-memory\n3060  1331 response orthogonal      ospan_split high-memory - low-memory\n3061  1332 response orthogonal      ospan_split high-memory - low-memory\n3062  1333 response orthogonal      ospan_split high-memory - low-memory\n3063  1334 response orthogonal      ospan_split high-memory - low-memory\n3064  1335 response orthogonal      ospan_split high-memory - low-memory\n3065  1336 response orthogonal      ospan_split high-memory - low-memory\n3066  1337 response orthogonal      ospan_split high-memory - low-memory\n3067  1338 response orthogonal      ospan_split high-memory - low-memory\n3068  1339 response orthogonal      ospan_split high-memory - low-memory\n3069  1340 response orthogonal      ospan_split high-memory - low-memory\n3070  1341 response orthogonal      ospan_split high-memory - low-memory\n3071  1342 response orthogonal      ospan_split high-memory - low-memory\n3072  1343 response orthogonal      ospan_split high-memory - low-memory\n3073  1344 response orthogonal      ospan_split high-memory - low-memory\n3074  1345 response orthogonal      ospan_split high-memory - low-memory\n3075  1346 response orthogonal      ospan_split high-memory - low-memory\n3076  1347 response orthogonal      ospan_split high-memory - low-memory\n3077  1348 response orthogonal      ospan_split high-memory - low-memory\n3078  1349 response orthogonal      ospan_split high-memory - low-memory\n3079  1350 response orthogonal      ospan_split high-memory - low-memory\n3080  1351 response orthogonal      ospan_split high-memory - low-memory\n3081  1352 response orthogonal      ospan_split high-memory - low-memory\n3082  1353 response orthogonal      ospan_split high-memory - low-memory\n3083  1354 response orthogonal      ospan_split high-memory - low-memory\n3084  1355 response orthogonal      ospan_split high-memory - low-memory\n3085  1356 response orthogonal      ospan_split high-memory - low-memory\n3086  1357 response orthogonal      ospan_split high-memory - low-memory\n3087  1358 response orthogonal      ospan_split high-memory - low-memory\n3088  1359 response orthogonal      ospan_split high-memory - low-memory\n3089  1360 response orthogonal      ospan_split high-memory - low-memory\n3090  1361 response orthogonal      ospan_split high-memory - low-memory\n3091  1362 response orthogonal      ospan_split high-memory - low-memory\n3092  1363 response orthogonal      ospan_split high-memory - low-memory\n3093  1364 response orthogonal      ospan_split high-memory - low-memory\n3094  1365 response orthogonal      ospan_split high-memory - low-memory\n3095  1366 response orthogonal      ospan_split high-memory - low-memory\n3096  1367 response orthogonal      ospan_split high-memory - low-memory\n3097  1368 response orthogonal      ospan_split high-memory - low-memory\n3098  1369 response orthogonal      ospan_split high-memory - low-memory\n3099  1370 response orthogonal      ospan_split high-memory - low-memory\n3100  1371 response orthogonal      ospan_split high-memory - low-memory\n3101  1372 response orthogonal      ospan_split high-memory - low-memory\n3102  1373 response orthogonal      ospan_split high-memory - low-memory\n3103  1374 response orthogonal      ospan_split high-memory - low-memory\n3104  1375 response orthogonal      ospan_split high-memory - low-memory\n3105  1376 response orthogonal      ospan_split high-memory - low-memory\n3106  1377 response orthogonal      ospan_split high-memory - low-memory\n3107  1378 response orthogonal      ospan_split high-memory - low-memory\n3108  1379 response orthogonal      ospan_split high-memory - low-memory\n3109  1380 response orthogonal      ospan_split high-memory - low-memory\n3110  1381 response orthogonal      ospan_split high-memory - low-memory\n3111  1382 response orthogonal      ospan_split high-memory - low-memory\n3112  1383 response orthogonal      ospan_split high-memory - low-memory\n3113  1384 response orthogonal      ospan_split high-memory - low-memory\n3114  1385 response orthogonal      ospan_split high-memory - low-memory\n3115  1386 response orthogonal      ospan_split high-memory - low-memory\n3116  1387 response orthogonal      ospan_split high-memory - low-memory\n3117  1388 response orthogonal      ospan_split high-memory - low-memory\n3118  1389 response orthogonal      ospan_split high-memory - low-memory\n3119  1390 response orthogonal      ospan_split high-memory - low-memory\n3120  1391 response orthogonal      ospan_split high-memory - low-memory\n3121  1392 response orthogonal      ospan_split high-memory - low-memory\n3122  1393 response orthogonal      ospan_split high-memory - low-memory\n3123  1394 response orthogonal      ospan_split high-memory - low-memory\n3124  1395 response orthogonal      ospan_split high-memory - low-memory\n3125  1396 response orthogonal      ospan_split high-memory - low-memory\n3126  1397 response orthogonal      ospan_split high-memory - low-memory\n3127  1398 response orthogonal      ospan_split high-memory - low-memory\n3128  1399 response orthogonal      ospan_split high-memory - low-memory\n3129  1400 response orthogonal      ospan_split high-memory - low-memory\n3130  1401 response orthogonal      ospan_split high-memory - low-memory\n3131  1402 response orthogonal      ospan_split high-memory - low-memory\n3132  1403 response orthogonal      ospan_split high-memory - low-memory\n3133  1404 response orthogonal      ospan_split high-memory - low-memory\n3134  1405 response orthogonal      ospan_split high-memory - low-memory\n3135  1406 response orthogonal      ospan_split high-memory - low-memory\n3136  1407 response orthogonal      ospan_split high-memory - low-memory\n3137  1408 response orthogonal      ospan_split high-memory - low-memory\n3138  1409 response orthogonal      ospan_split high-memory - low-memory\n3139  1410 response orthogonal      ospan_split high-memory - low-memory\n3140  1411 response orthogonal      ospan_split high-memory - low-memory\n3141  1412 response orthogonal      ospan_split high-memory - low-memory\n3142  1413 response orthogonal      ospan_split high-memory - low-memory\n3143  1414 response orthogonal      ospan_split high-memory - low-memory\n3144  1415 response orthogonal      ospan_split high-memory - low-memory\n3145  1416 response orthogonal      ospan_split high-memory - low-memory\n3146  1417 response orthogonal      ospan_split high-memory - low-memory\n3147  1418 response orthogonal      ospan_split high-memory - low-memory\n3148  1419 response orthogonal      ospan_split high-memory - low-memory\n3149  1420 response orthogonal      ospan_split high-memory - low-memory\n3150  1421 response orthogonal      ospan_split high-memory - low-memory\n3151  1422 response orthogonal      ospan_split high-memory - low-memory\n3152  1423 response orthogonal      ospan_split high-memory - low-memory\n3153  1424 response orthogonal      ospan_split high-memory - low-memory\n3154  1425 response orthogonal      ospan_split high-memory - low-memory\n3155  1426 response orthogonal      ospan_split high-memory - low-memory\n3156  1427 response orthogonal      ospan_split high-memory - low-memory\n3157  1428 response orthogonal      ospan_split high-memory - low-memory\n3158  1429 response orthogonal      ospan_split high-memory - low-memory\n3159  1430 response orthogonal      ospan_split high-memory - low-memory\n3160  1431 response orthogonal      ospan_split high-memory - low-memory\n3161  1432 response orthogonal      ospan_split high-memory - low-memory\n3162  1433 response orthogonal      ospan_split high-memory - low-memory\n3163  1434 response orthogonal      ospan_split high-memory - low-memory\n3164  1435 response orthogonal      ospan_split high-memory - low-memory\n3165  1436 response orthogonal      ospan_split high-memory - low-memory\n3166  1437 response orthogonal      ospan_split high-memory - low-memory\n3167  1438 response orthogonal      ospan_split high-memory - low-memory\n3168  1439 response orthogonal      ospan_split high-memory - low-memory\n3169  1440 response orthogonal      ospan_split high-memory - low-memory\n3170  1441 response orthogonal      ospan_split high-memory - low-memory\n3171  1442 response orthogonal      ospan_split high-memory - low-memory\n3172  1443 response orthogonal      ospan_split high-memory - low-memory\n3173  1444 response orthogonal      ospan_split high-memory - low-memory\n3174  1445 response orthogonal      ospan_split high-memory - low-memory\n3175  1446 response orthogonal      ospan_split high-memory - low-memory\n3176  1447 response orthogonal      ospan_split high-memory - low-memory\n3177  1448 response orthogonal      ospan_split high-memory - low-memory\n3178  1449 response orthogonal      ospan_split high-memory - low-memory\n3179  1450 response orthogonal      ospan_split high-memory - low-memory\n3180  1451 response orthogonal      ospan_split high-memory - low-memory\n3181  1452 response orthogonal      ospan_split high-memory - low-memory\n3182  1453 response orthogonal      ospan_split high-memory - low-memory\n3183  1454 response orthogonal      ospan_split high-memory - low-memory\n3184  1455 response orthogonal      ospan_split high-memory - low-memory\n3185  1456 response orthogonal      ospan_split high-memory - low-memory\n3186  1457 response orthogonal      ospan_split high-memory - low-memory\n3187  1458 response orthogonal      ospan_split high-memory - low-memory\n3188  1459 response orthogonal      ospan_split high-memory - low-memory\n3189  1460 response orthogonal      ospan_split high-memory - low-memory\n3190  1461 response orthogonal      ospan_split high-memory - low-memory\n3191  1462 response orthogonal      ospan_split high-memory - low-memory\n3192  1463 response orthogonal      ospan_split high-memory - low-memory\n3193  1464 response orthogonal      ospan_split high-memory - low-memory\n3194  1465 response orthogonal      ospan_split high-memory - low-memory\n3195  1466 response orthogonal      ospan_split high-memory - low-memory\n3196  1467 response orthogonal      ospan_split high-memory - low-memory\n3197  1468 response orthogonal      ospan_split high-memory - low-memory\n3198  1469 response orthogonal      ospan_split high-memory - low-memory\n3199  1470 response orthogonal      ospan_split high-memory - low-memory\n3200  1471 response orthogonal      ospan_split high-memory - low-memory\n3201  1472 response orthogonal      ospan_split high-memory - low-memory\n3202  1473 response orthogonal      ospan_split high-memory - low-memory\n3203  1474 response orthogonal      ospan_split high-memory - low-memory\n3204  1475 response orthogonal      ospan_split high-memory - low-memory\n3205  1476 response orthogonal      ospan_split high-memory - low-memory\n3206  1477 response orthogonal      ospan_split high-memory - low-memory\n3207  1478 response orthogonal      ospan_split high-memory - low-memory\n3208  1479 response orthogonal      ospan_split high-memory - low-memory\n3209  1480 response orthogonal      ospan_split high-memory - low-memory\n3210  1481 response orthogonal      ospan_split high-memory - low-memory\n3211  1482 response orthogonal      ospan_split high-memory - low-memory\n3212  1483 response orthogonal      ospan_split high-memory - low-memory\n3213  1484 response orthogonal      ospan_split high-memory - low-memory\n3214  1485 response orthogonal      ospan_split high-memory - low-memory\n3215  1486 response orthogonal      ospan_split high-memory - low-memory\n3216  1487 response orthogonal      ospan_split high-memory - low-memory\n3217  1488 response orthogonal      ospan_split high-memory - low-memory\n3218  1489 response orthogonal      ospan_split high-memory - low-memory\n3219  1490 response orthogonal      ospan_split high-memory - low-memory\n3220  1491 response orthogonal      ospan_split high-memory - low-memory\n3221  1492 response orthogonal      ospan_split high-memory - low-memory\n3222  1493 response orthogonal      ospan_split high-memory - low-memory\n3223  1494 response orthogonal      ospan_split high-memory - low-memory\n3224  1495 response orthogonal      ospan_split high-memory - low-memory\n3225  1496 response orthogonal      ospan_split high-memory - low-memory\n3226  1497 response orthogonal      ospan_split high-memory - low-memory\n3227  1498 response orthogonal      ospan_split high-memory - low-memory\n3228  1499 response orthogonal      ospan_split high-memory - low-memory\n3229  1500 response orthogonal      ospan_split high-memory - low-memory\n3230  1501 response orthogonal      ospan_split high-memory - low-memory\n3231  1502 response orthogonal      ospan_split high-memory - low-memory\n3232  1503 response orthogonal      ospan_split high-memory - low-memory\n3233  1504 response orthogonal      ospan_split high-memory - low-memory\n3234  1505 response orthogonal      ospan_split high-memory - low-memory\n3235  1506 response orthogonal      ospan_split high-memory - low-memory\n3236  1507 response orthogonal      ospan_split high-memory - low-memory\n3237  1508 response orthogonal      ospan_split high-memory - low-memory\n3238  1509 response orthogonal      ospan_split high-memory - low-memory\n3239  1510 response orthogonal      ospan_split high-memory - low-memory\n3240  1511 response orthogonal      ospan_split high-memory - low-memory\n3241  1512 response orthogonal      ospan_split high-memory - low-memory\n3242  1513 response orthogonal      ospan_split high-memory - low-memory\n3243  1514 response orthogonal      ospan_split high-memory - low-memory\n3244  1515 response orthogonal      ospan_split high-memory - low-memory\n3245  1516 response orthogonal      ospan_split high-memory - low-memory\n3246  1517 response orthogonal      ospan_split high-memory - low-memory\n3247  1518 response orthogonal      ospan_split high-memory - low-memory\n3248  1519 response orthogonal      ospan_split high-memory - low-memory\n3249  1520 response orthogonal      ospan_split high-memory - low-memory\n3250  1521 response orthogonal      ospan_split high-memory - low-memory\n3251  1522 response orthogonal      ospan_split high-memory - low-memory\n3252  1523 response orthogonal      ospan_split high-memory - low-memory\n3253  1524 response orthogonal      ospan_split high-memory - low-memory\n3254  1525 response orthogonal      ospan_split high-memory - low-memory\n3255  1526 response orthogonal      ospan_split high-memory - low-memory\n3256  1527 response orthogonal      ospan_split high-memory - low-memory\n3257  1528 response orthogonal      ospan_split high-memory - low-memory\n3258  1529 response orthogonal      ospan_split high-memory - low-memory\n3259  1530 response orthogonal      ospan_split high-memory - low-memory\n3260  1531 response orthogonal      ospan_split high-memory - low-memory\n3261  1532 response orthogonal      ospan_split high-memory - low-memory\n3262  1533 response orthogonal      ospan_split high-memory - low-memory\n3263  1534 response orthogonal      ospan_split high-memory - low-memory\n3264  1535 response orthogonal      ospan_split high-memory - low-memory\n3265  1536 response orthogonal      ospan_split high-memory - low-memory\n3266  1537 response orthogonal      ospan_split high-memory - low-memory\n3267  1538 response orthogonal      ospan_split high-memory - low-memory\n3268  1539 response orthogonal      ospan_split high-memory - low-memory\n3269  1540 response orthogonal      ospan_split high-memory - low-memory\n3270  1541 response orthogonal      ospan_split high-memory - low-memory\n3271  1542 response orthogonal      ospan_split high-memory - low-memory\n3272  1543 response orthogonal      ospan_split high-memory - low-memory\n3273  1544 response orthogonal      ospan_split high-memory - low-memory\n3274  1545 response orthogonal      ospan_split high-memory - low-memory\n3275  1546 response orthogonal      ospan_split high-memory - low-memory\n3276  1547 response orthogonal      ospan_split high-memory - low-memory\n3277  1548 response orthogonal      ospan_split high-memory - low-memory\n3278  1549 response orthogonal      ospan_split high-memory - low-memory\n3279  1550 response orthogonal      ospan_split high-memory - low-memory\n3280  1551 response orthogonal      ospan_split high-memory - low-memory\n3281  1552 response orthogonal      ospan_split high-memory - low-memory\n3282  1553 response orthogonal      ospan_split high-memory - low-memory\n3283  1554 response orthogonal      ospan_split high-memory - low-memory\n3284  1555 response orthogonal      ospan_split high-memory - low-memory\n3285  1556 response orthogonal      ospan_split high-memory - low-memory\n3286  1557 response orthogonal      ospan_split high-memory - low-memory\n3287  1558 response orthogonal      ospan_split high-memory - low-memory\n3288  1559 response orthogonal      ospan_split high-memory - low-memory\n3289  1560 response orthogonal      ospan_split high-memory - low-memory\n3290  1561 response orthogonal      ospan_split high-memory - low-memory\n3291  1562 response orthogonal      ospan_split high-memory - low-memory\n3292  1563 response orthogonal      ospan_split high-memory - low-memory\n3293  1564 response orthogonal      ospan_split high-memory - low-memory\n3294  1565 response orthogonal      ospan_split high-memory - low-memory\n3295  1566 response orthogonal      ospan_split high-memory - low-memory\n3296  1567 response orthogonal      ospan_split high-memory - low-memory\n3297  1568 response orthogonal      ospan_split high-memory - low-memory\n3298  1569 response orthogonal      ospan_split high-memory - low-memory\n3299  1570 response orthogonal      ospan_split high-memory - low-memory\n3300  1571 response orthogonal      ospan_split high-memory - low-memory\n3301  1572 response orthogonal      ospan_split high-memory - low-memory\n3302  1573 response orthogonal      ospan_split high-memory - low-memory\n3303  1574 response orthogonal      ospan_split high-memory - low-memory\n3304  1575 response orthogonal      ospan_split high-memory - low-memory\n3305  1576 response orthogonal      ospan_split high-memory - low-memory\n3306  1577 response orthogonal      ospan_split high-memory - low-memory\n3307  1578 response orthogonal      ospan_split high-memory - low-memory\n3308  1579 response orthogonal      ospan_split high-memory - low-memory\n3309  1580 response orthogonal      ospan_split high-memory - low-memory\n3310  1581 response orthogonal      ospan_split high-memory - low-memory\n3311  1582 response orthogonal      ospan_split high-memory - low-memory\n3312  1583 response orthogonal      ospan_split high-memory - low-memory\n3313  1584 response orthogonal      ospan_split high-memory - low-memory\n3314  1585 response orthogonal      ospan_split high-memory - low-memory\n3315  1586 response orthogonal      ospan_split high-memory - low-memory\n3316  1587 response orthogonal      ospan_split high-memory - low-memory\n3317  1588 response orthogonal      ospan_split high-memory - low-memory\n3318  1589 response orthogonal      ospan_split high-memory - low-memory\n3319  1590 response orthogonal      ospan_split high-memory - low-memory\n3320  1591 response orthogonal      ospan_split high-memory - low-memory\n3321  1592 response orthogonal      ospan_split high-memory - low-memory\n3322  1593 response orthogonal      ospan_split high-memory - low-memory\n3323  1594 response orthogonal      ospan_split high-memory - low-memory\n3324  1595 response orthogonal      ospan_split high-memory - low-memory\n3325  1596 response orthogonal      ospan_split high-memory - low-memory\n3326  1597 response orthogonal      ospan_split high-memory - low-memory\n3327  1598 response orthogonal      ospan_split high-memory - low-memory\n3328  1599 response orthogonal      ospan_split high-memory - low-memory\n3329  1600 response orthogonal      ospan_split high-memory - low-memory\n3330  1601 response orthogonal      ospan_split high-memory - low-memory\n3331  1602 response orthogonal      ospan_split high-memory - low-memory\n3332  1603 response orthogonal      ospan_split high-memory - low-memory\n3333  1604 response orthogonal      ospan_split high-memory - low-memory\n3334  1605 response orthogonal      ospan_split high-memory - low-memory\n3335  1606 response orthogonal      ospan_split high-memory - low-memory\n3336  1607 response orthogonal      ospan_split high-memory - low-memory\n3337  1608 response orthogonal      ospan_split high-memory - low-memory\n3338  1609 response orthogonal      ospan_split high-memory - low-memory\n3339  1610 response orthogonal      ospan_split high-memory - low-memory\n3340  1611 response orthogonal      ospan_split high-memory - low-memory\n3341  1612 response orthogonal      ospan_split high-memory - low-memory\n3342  1613 response orthogonal      ospan_split high-memory - low-memory\n3343  1614 response orthogonal      ospan_split high-memory - low-memory\n3344  1615 response orthogonal      ospan_split high-memory - low-memory\n3345  1616 response orthogonal      ospan_split high-memory - low-memory\n3346  1617 response orthogonal      ospan_split high-memory - low-memory\n3347  1618 response orthogonal      ospan_split high-memory - low-memory\n3348  1619 response orthogonal      ospan_split high-memory - low-memory\n3349  1620 response orthogonal      ospan_split high-memory - low-memory\n3350  1621 response orthogonal      ospan_split high-memory - low-memory\n3351  1622 response orthogonal      ospan_split high-memory - low-memory\n3352  1623 response orthogonal      ospan_split high-memory - low-memory\n3353  1624 response orthogonal      ospan_split high-memory - low-memory\n3354  1625 response orthogonal      ospan_split high-memory - low-memory\n3355  1626 response orthogonal      ospan_split high-memory - low-memory\n3356  1627 response orthogonal      ospan_split high-memory - low-memory\n3357  1628 response orthogonal      ospan_split high-memory - low-memory\n3358  1629 response orthogonal      ospan_split high-memory - low-memory\n3359  1630 response orthogonal      ospan_split high-memory - low-memory\n3360  1631 response orthogonal      ospan_split high-memory - low-memory\n3361  1632 response orthogonal      ospan_split high-memory - low-memory\n3362  1633 response orthogonal      ospan_split high-memory - low-memory\n3363  1634 response orthogonal      ospan_split high-memory - low-memory\n3364  1635 response orthogonal      ospan_split high-memory - low-memory\n3365  1636 response orthogonal      ospan_split high-memory - low-memory\n3366  1637 response orthogonal      ospan_split high-memory - low-memory\n3367  1638 response orthogonal      ospan_split high-memory - low-memory\n3368  1639 response orthogonal      ospan_split high-memory - low-memory\n3369  1640 response orthogonal      ospan_split high-memory - low-memory\n3370  1641 response orthogonal      ospan_split high-memory - low-memory\n3371  1642 response orthogonal      ospan_split high-memory - low-memory\n3372  1643 response orthogonal      ospan_split high-memory - low-memory\n3373  1644 response orthogonal      ospan_split high-memory - low-memory\n3374  1645 response orthogonal      ospan_split high-memory - low-memory\n3375  1646 response orthogonal      ospan_split high-memory - low-memory\n3376  1647 response orthogonal      ospan_split high-memory - low-memory\n3377  1648 response orthogonal      ospan_split high-memory - low-memory\n3378  1649 response orthogonal      ospan_split high-memory - low-memory\n3379  1650 response orthogonal      ospan_split high-memory - low-memory\n3380  1651 response orthogonal      ospan_split high-memory - low-memory\n3381  1652 response orthogonal      ospan_split high-memory - low-memory\n3382  1653 response orthogonal      ospan_split high-memory - low-memory\n3383  1654 response orthogonal      ospan_split high-memory - low-memory\n3384  1655 response orthogonal      ospan_split high-memory - low-memory\n3385  1656 response orthogonal      ospan_split high-memory - low-memory\n3386  1657 response orthogonal      ospan_split high-memory - low-memory\n3387  1658 response orthogonal      ospan_split high-memory - low-memory\n3388  1659 response orthogonal      ospan_split high-memory - low-memory\n3389  1660 response orthogonal      ospan_split high-memory - low-memory\n3390  1661 response orthogonal      ospan_split high-memory - low-memory\n3391  1662 response orthogonal      ospan_split high-memory - low-memory\n3392  1663 response orthogonal      ospan_split high-memory - low-memory\n3393  1664 response orthogonal      ospan_split high-memory - low-memory\n3394  1665 response orthogonal      ospan_split high-memory - low-memory\n3395  1666 response orthogonal      ospan_split high-memory - low-memory\n3396  1667 response orthogonal      ospan_split high-memory - low-memory\n3397  1668 response orthogonal      ospan_split high-memory - low-memory\n3398  1669 response orthogonal      ospan_split high-memory - low-memory\n3399  1670 response orthogonal      ospan_split high-memory - low-memory\n3400  1671 response orthogonal      ospan_split high-memory - low-memory\n3401  1672 response orthogonal      ospan_split high-memory - low-memory\n3402  1673 response orthogonal      ospan_split high-memory - low-memory\n3403  1674 response orthogonal      ospan_split high-memory - low-memory\n3404  1675 response orthogonal      ospan_split high-memory - low-memory\n3405  1676 response orthogonal      ospan_split high-memory - low-memory\n3406  1677 response orthogonal      ospan_split high-memory - low-memory\n3407  1678 response orthogonal      ospan_split high-memory - low-memory\n3408  1679 response orthogonal      ospan_split high-memory - low-memory\n3409  1680 response orthogonal      ospan_split high-memory - low-memory\n3410  1681 response orthogonal      ospan_split high-memory - low-memory\n3411  1682 response orthogonal      ospan_split high-memory - low-memory\n3412  1683 response orthogonal      ospan_split high-memory - low-memory\n3413  1684 response orthogonal      ospan_split high-memory - low-memory\n3414  1685 response orthogonal      ospan_split high-memory - low-memory\n3415  1686 response orthogonal      ospan_split high-memory - low-memory\n3416  1687 response orthogonal      ospan_split high-memory - low-memory\n3417  1688 response orthogonal      ospan_split high-memory - low-memory\n3418  1689 response orthogonal      ospan_split high-memory - low-memory\n3419  1690 response orthogonal      ospan_split high-memory - low-memory\n3420  1691 response orthogonal      ospan_split high-memory - low-memory\n3421  1692 response orthogonal      ospan_split high-memory - low-memory\n3422  1693 response orthogonal      ospan_split high-memory - low-memory\n3423  1694 response orthogonal      ospan_split high-memory - low-memory\n3424  1695 response orthogonal      ospan_split high-memory - low-memory\n3425  1696 response orthogonal      ospan_split high-memory - low-memory\n3426  1697 response orthogonal      ospan_split high-memory - low-memory\n3427  1698 response orthogonal      ospan_split high-memory - low-memory\n3428  1699 response orthogonal      ospan_split high-memory - low-memory\n3429  1700 response orthogonal      ospan_split high-memory - low-memory\n3430  1701 response orthogonal      ospan_split high-memory - low-memory\n3431  1702 response orthogonal      ospan_split high-memory - low-memory\n3432  1703 response orthogonal      ospan_split high-memory - low-memory\n3433  1704 response orthogonal      ospan_split high-memory - low-memory\n3434  1705 response orthogonal      ospan_split high-memory - low-memory\n3435  1706 response orthogonal      ospan_split high-memory - low-memory\n3436  1707 response orthogonal      ospan_split high-memory - low-memory\n3437  1708 response orthogonal      ospan_split high-memory - low-memory\n3438  1709 response orthogonal      ospan_split high-memory - low-memory\n3439  1710 response orthogonal      ospan_split high-memory - low-memory\n3440  1711 response orthogonal      ospan_split high-memory - low-memory\n3441  1712 response orthogonal      ospan_split high-memory - low-memory\n3442  1713 response orthogonal      ospan_split high-memory - low-memory\n3443  1714 response orthogonal      ospan_split high-memory - low-memory\n3444  1715 response orthogonal      ospan_split high-memory - low-memory\n3445  1716 response orthogonal      ospan_split high-memory - low-memory\n3446  1717 response orthogonal      ospan_split high-memory - low-memory\n3447  1718 response orthogonal      ospan_split high-memory - low-memory\n3448  1719 response orthogonal      ospan_split high-memory - low-memory\n3449  1720 response orthogonal      ospan_split high-memory - low-memory\n3450  1721 response orthogonal      ospan_split high-memory - low-memory\n3451  1722 response orthogonal      ospan_split high-memory - low-memory\n3452  1723 response orthogonal      ospan_split high-memory - low-memory\n3453  1724 response orthogonal      ospan_split high-memory - low-memory\n3454  1725 response orthogonal      ospan_split high-memory - low-memory\n3455  1726 response orthogonal      ospan_split high-memory - low-memory\n3456  1727 response orthogonal      ospan_split high-memory - low-memory\n3457  1728 response orthogonal      ospan_split high-memory - low-memory\n3458  1729 response orthogonal      ospan_split high-memory - low-memory\n3459     1 response      other pretty_condition        impasse - control\n3460     2 response      other pretty_condition        impasse - control\n3461     3 response      other pretty_condition        impasse - control\n3462     4 response      other pretty_condition        impasse - control\n3463     5 response      other pretty_condition        impasse - control\n3464     6 response      other pretty_condition        impasse - control\n3465     7 response      other pretty_condition        impasse - control\n3466     8 response      other pretty_condition        impasse - control\n3467     9 response      other pretty_condition        impasse - control\n3468    10 response      other pretty_condition        impasse - control\n3469    11 response      other pretty_condition        impasse - control\n3470    12 response      other pretty_condition        impasse - control\n3471    13 response      other pretty_condition        impasse - control\n3472    14 response      other pretty_condition        impasse - control\n3473    15 response      other pretty_condition        impasse - control\n3474    16 response      other pretty_condition        impasse - control\n3475    17 response      other pretty_condition        impasse - control\n3476    18 response      other pretty_condition        impasse - control\n3477    19 response      other pretty_condition        impasse - control\n3478    20 response      other pretty_condition        impasse - control\n3479    21 response      other pretty_condition        impasse - control\n3480    22 response      other pretty_condition        impasse - control\n3481    23 response      other pretty_condition        impasse - control\n3482    24 response      other pretty_condition        impasse - control\n3483    25 response      other pretty_condition        impasse - control\n3484    26 response      other pretty_condition        impasse - control\n3485    27 response      other pretty_condition        impasse - control\n3486    28 response      other pretty_condition        impasse - control\n3487    29 response      other pretty_condition        impasse - control\n3488    30 response      other pretty_condition        impasse - control\n3489    31 response      other pretty_condition        impasse - control\n3490    32 response      other pretty_condition        impasse - control\n3491    33 response      other pretty_condition        impasse - control\n3492    34 response      other pretty_condition        impasse - control\n3493    35 response      other pretty_condition        impasse - control\n3494    36 response      other pretty_condition        impasse - control\n3495    37 response      other pretty_condition        impasse - control\n3496    38 response      other pretty_condition        impasse - control\n3497    39 response      other pretty_condition        impasse - control\n3498    40 response      other pretty_condition        impasse - control\n3499    41 response      other pretty_condition        impasse - control\n3500    42 response      other pretty_condition        impasse - control\n3501    43 response      other pretty_condition        impasse - control\n3502    44 response      other pretty_condition        impasse - control\n3503    45 response      other pretty_condition        impasse - control\n3504    46 response      other pretty_condition        impasse - control\n3505    47 response      other pretty_condition        impasse - control\n3506    48 response      other pretty_condition        impasse - control\n3507    49 response      other pretty_condition        impasse - control\n3508    50 response      other pretty_condition        impasse - control\n3509    51 response      other pretty_condition        impasse - control\n3510    52 response      other pretty_condition        impasse - control\n3511    53 response      other pretty_condition        impasse - control\n3512    54 response      other pretty_condition        impasse - control\n3513    55 response      other pretty_condition        impasse - control\n3514    56 response      other pretty_condition        impasse - control\n3515    57 response      other pretty_condition        impasse - control\n3516    58 response      other pretty_condition        impasse - control\n3517    59 response      other pretty_condition        impasse - control\n3518    60 response      other pretty_condition        impasse - control\n3519    61 response      other pretty_condition        impasse - control\n3520    62 response      other pretty_condition        impasse - control\n3521    63 response      other pretty_condition        impasse - control\n3522    64 response      other pretty_condition        impasse - control\n3523    65 response      other pretty_condition        impasse - control\n3524    66 response      other pretty_condition        impasse - control\n3525    67 response      other pretty_condition        impasse - control\n3526    68 response      other pretty_condition        impasse - control\n3527    69 response      other pretty_condition        impasse - control\n3528    70 response      other pretty_condition        impasse - control\n3529    71 response      other pretty_condition        impasse - control\n3530    72 response      other pretty_condition        impasse - control\n3531    73 response      other pretty_condition        impasse - control\n3532    74 response      other pretty_condition        impasse - control\n3533    75 response      other pretty_condition        impasse - control\n3534    76 response      other pretty_condition        impasse - control\n3535    77 response      other pretty_condition        impasse - control\n3536    78 response      other pretty_condition        impasse - control\n3537    79 response      other pretty_condition        impasse - control\n3538    80 response      other pretty_condition        impasse - control\n3539    81 response      other pretty_condition        impasse - control\n3540    82 response      other pretty_condition        impasse - control\n3541    83 response      other pretty_condition        impasse - control\n3542    84 response      other pretty_condition        impasse - control\n3543    85 response      other pretty_condition        impasse - control\n3544    86 response      other pretty_condition        impasse - control\n3545    87 response      other pretty_condition        impasse - control\n3546    88 response      other pretty_condition        impasse - control\n3547    89 response      other pretty_condition        impasse - control\n3548    90 response      other pretty_condition        impasse - control\n3549    91 response      other pretty_condition        impasse - control\n3550    92 response      other pretty_condition        impasse - control\n3551    93 response      other pretty_condition        impasse - control\n3552    94 response      other pretty_condition        impasse - control\n3553    95 response      other pretty_condition        impasse - control\n3554    96 response      other pretty_condition        impasse - control\n3555    97 response      other pretty_condition        impasse - control\n3556    98 response      other pretty_condition        impasse - control\n3557    99 response      other pretty_condition        impasse - control\n3558   100 response      other pretty_condition        impasse - control\n3559   101 response      other pretty_condition        impasse - control\n3560   102 response      other pretty_condition        impasse - control\n3561   103 response      other pretty_condition        impasse - control\n3562   104 response      other pretty_condition        impasse - control\n3563   105 response      other pretty_condition        impasse - control\n3564   106 response      other pretty_condition        impasse - control\n3565   107 response      other pretty_condition        impasse - control\n3566   108 response      other pretty_condition        impasse - control\n3567   109 response      other pretty_condition        impasse - control\n3568   110 response      other pretty_condition        impasse - control\n3569   111 response      other pretty_condition        impasse - control\n3570   112 response      other pretty_condition        impasse - control\n3571   113 response      other pretty_condition        impasse - control\n3572   114 response      other pretty_condition        impasse - control\n3573   115 response      other pretty_condition        impasse - control\n3574   116 response      other pretty_condition        impasse - control\n3575   117 response      other pretty_condition        impasse - control\n3576   118 response      other pretty_condition        impasse - control\n3577   119 response      other pretty_condition        impasse - control\n3578   120 response      other pretty_condition        impasse - control\n3579   121 response      other pretty_condition        impasse - control\n3580   122 response      other pretty_condition        impasse - control\n3581   123 response      other pretty_condition        impasse - control\n3582   124 response      other pretty_condition        impasse - control\n3583   125 response      other pretty_condition        impasse - control\n3584   126 response      other pretty_condition        impasse - control\n3585   127 response      other pretty_condition        impasse - control\n3586   128 response      other pretty_condition        impasse - control\n3587   129 response      other pretty_condition        impasse - control\n3588   130 response      other pretty_condition        impasse - control\n3589   131 response      other pretty_condition        impasse - control\n3590   132 response      other pretty_condition        impasse - control\n3591   133 response      other pretty_condition        impasse - control\n3592   134 response      other pretty_condition        impasse - control\n3593   135 response      other pretty_condition        impasse - control\n3594   136 response      other pretty_condition        impasse - control\n3595   137 response      other pretty_condition        impasse - control\n3596   138 response      other pretty_condition        impasse - control\n3597   139 response      other pretty_condition        impasse - control\n3598   140 response      other pretty_condition        impasse - control\n3599   141 response      other pretty_condition        impasse - control\n3600   142 response      other pretty_condition        impasse - control\n3601   143 response      other pretty_condition        impasse - control\n3602   144 response      other pretty_condition        impasse - control\n3603   145 response      other pretty_condition        impasse - control\n3604   146 response      other pretty_condition        impasse - control\n3605   147 response      other pretty_condition        impasse - control\n3606   148 response      other pretty_condition        impasse - control\n3607   149 response      other pretty_condition        impasse - control\n3608   150 response      other pretty_condition        impasse - control\n3609   151 response      other pretty_condition        impasse - control\n3610   152 response      other pretty_condition        impasse - control\n3611   153 response      other pretty_condition        impasse - control\n3612   154 response      other pretty_condition        impasse - control\n3613   155 response      other pretty_condition        impasse - control\n3614   156 response      other pretty_condition        impasse - control\n3615   157 response      other pretty_condition        impasse - control\n3616   158 response      other pretty_condition        impasse - control\n3617   159 response      other pretty_condition        impasse - control\n3618   160 response      other pretty_condition        impasse - control\n3619   161 response      other pretty_condition        impasse - control\n3620   162 response      other pretty_condition        impasse - control\n3621   163 response      other pretty_condition        impasse - control\n3622   164 response      other pretty_condition        impasse - control\n3623   165 response      other pretty_condition        impasse - control\n3624   166 response      other pretty_condition        impasse - control\n3625   167 response      other pretty_condition        impasse - control\n3626   168 response      other pretty_condition        impasse - control\n3627   169 response      other pretty_condition        impasse - control\n3628   170 response      other pretty_condition        impasse - control\n3629   171 response      other pretty_condition        impasse - control\n3630   172 response      other pretty_condition        impasse - control\n3631   173 response      other pretty_condition        impasse - control\n3632   174 response      other pretty_condition        impasse - control\n3633   175 response      other pretty_condition        impasse - control\n3634   176 response      other pretty_condition        impasse - control\n3635   177 response      other pretty_condition        impasse - control\n3636   178 response      other pretty_condition        impasse - control\n3637   179 response      other pretty_condition        impasse - control\n3638   180 response      other pretty_condition        impasse - control\n3639   181 response      other pretty_condition        impasse - control\n3640   182 response      other pretty_condition        impasse - control\n3641   183 response      other pretty_condition        impasse - control\n3642   184 response      other pretty_condition        impasse - control\n3643   185 response      other pretty_condition        impasse - control\n3644   186 response      other pretty_condition        impasse - control\n3645   187 response      other pretty_condition        impasse - control\n3646   188 response      other pretty_condition        impasse - control\n3647   189 response      other pretty_condition        impasse - control\n3648   190 response      other pretty_condition        impasse - control\n3649   191 response      other pretty_condition        impasse - control\n3650   192 response      other pretty_condition        impasse - control\n3651   193 response      other pretty_condition        impasse - control\n3652   194 response      other pretty_condition        impasse - control\n3653   195 response      other pretty_condition        impasse - control\n3654   196 response      other pretty_condition        impasse - control\n3655   197 response      other pretty_condition        impasse - control\n3656   198 response      other pretty_condition        impasse - control\n3657   199 response      other pretty_condition        impasse - control\n3658   200 response      other pretty_condition        impasse - control\n3659   201 response      other pretty_condition        impasse - control\n3660   202 response      other pretty_condition        impasse - control\n3661   203 response      other pretty_condition        impasse - control\n3662   204 response      other pretty_condition        impasse - control\n3663   205 response      other pretty_condition        impasse - control\n3664   206 response      other pretty_condition        impasse - control\n3665   207 response      other pretty_condition        impasse - control\n3666   208 response      other pretty_condition        impasse - control\n3667   209 response      other pretty_condition        impasse - control\n3668   210 response      other pretty_condition        impasse - control\n3669   211 response      other pretty_condition        impasse - control\n3670   212 response      other pretty_condition        impasse - control\n3671   213 response      other pretty_condition        impasse - control\n3672   214 response      other pretty_condition        impasse - control\n3673   215 response      other pretty_condition        impasse - control\n3674   216 response      other pretty_condition        impasse - control\n3675   217 response      other pretty_condition        impasse - control\n3676   218 response      other pretty_condition        impasse - control\n3677   219 response      other pretty_condition        impasse - control\n3678   220 response      other pretty_condition        impasse - control\n3679   221 response      other pretty_condition        impasse - control\n3680   222 response      other pretty_condition        impasse - control\n3681   223 response      other pretty_condition        impasse - control\n3682   224 response      other pretty_condition        impasse - control\n3683   225 response      other pretty_condition        impasse - control\n3684   226 response      other pretty_condition        impasse - control\n3685   227 response      other pretty_condition        impasse - control\n3686   228 response      other pretty_condition        impasse - control\n3687   229 response      other pretty_condition        impasse - control\n3688   230 response      other pretty_condition        impasse - control\n3689   231 response      other pretty_condition        impasse - control\n3690   232 response      other pretty_condition        impasse - control\n3691   233 response      other pretty_condition        impasse - control\n3692   234 response      other pretty_condition        impasse - control\n3693   235 response      other pretty_condition        impasse - control\n3694   236 response      other pretty_condition        impasse - control\n3695   237 response      other pretty_condition        impasse - control\n3696   238 response      other pretty_condition        impasse - control\n3697   239 response      other pretty_condition        impasse - control\n3698   240 response      other pretty_condition        impasse - control\n3699   241 response      other pretty_condition        impasse - control\n3700   242 response      other pretty_condition        impasse - control\n3701   243 response      other pretty_condition        impasse - control\n3702   244 response      other pretty_condition        impasse - control\n3703   245 response      other pretty_condition        impasse - control\n3704   246 response      other pretty_condition        impasse - control\n3705   247 response      other pretty_condition        impasse - control\n3706   248 response      other pretty_condition        impasse - control\n3707   249 response      other pretty_condition        impasse - control\n3708   250 response      other pretty_condition        impasse - control\n3709   251 response      other pretty_condition        impasse - control\n3710   252 response      other pretty_condition        impasse - control\n3711   253 response      other pretty_condition        impasse - control\n3712   254 response      other pretty_condition        impasse - control\n3713   255 response      other pretty_condition        impasse - control\n3714   256 response      other pretty_condition        impasse - control\n3715   257 response      other pretty_condition        impasse - control\n3716   258 response      other pretty_condition        impasse - control\n3717   259 response      other pretty_condition        impasse - control\n3718   260 response      other pretty_condition        impasse - control\n3719   261 response      other pretty_condition        impasse - control\n3720   262 response      other pretty_condition        impasse - control\n3721   263 response      other pretty_condition        impasse - control\n3722   264 response      other pretty_condition        impasse - control\n3723   265 response      other pretty_condition        impasse - control\n3724   266 response      other pretty_condition        impasse - control\n3725   267 response      other pretty_condition        impasse - control\n3726   268 response      other pretty_condition        impasse - control\n3727   269 response      other pretty_condition        impasse - control\n3728   270 response      other pretty_condition        impasse - control\n3729   271 response      other pretty_condition        impasse - control\n3730   272 response      other pretty_condition        impasse - control\n3731   273 response      other pretty_condition        impasse - control\n3732   274 response      other pretty_condition        impasse - control\n3733   275 response      other pretty_condition        impasse - control\n3734   276 response      other pretty_condition        impasse - control\n3735   277 response      other pretty_condition        impasse - control\n3736   278 response      other pretty_condition        impasse - control\n3737   279 response      other pretty_condition        impasse - control\n3738   280 response      other pretty_condition        impasse - control\n3739   281 response      other pretty_condition        impasse - control\n3740   282 response      other pretty_condition        impasse - control\n3741   283 response      other pretty_condition        impasse - control\n3742   284 response      other pretty_condition        impasse - control\n3743   285 response      other pretty_condition        impasse - control\n3744   286 response      other pretty_condition        impasse - control\n3745   287 response      other pretty_condition        impasse - control\n3746   288 response      other pretty_condition        impasse - control\n3747   289 response      other pretty_condition        impasse - control\n3748   290 response      other pretty_condition        impasse - control\n3749   291 response      other pretty_condition        impasse - control\n3750   292 response      other pretty_condition        impasse - control\n3751   293 response      other pretty_condition        impasse - control\n3752   294 response      other pretty_condition        impasse - control\n3753   295 response      other pretty_condition        impasse - control\n3754   296 response      other pretty_condition        impasse - control\n3755   297 response      other pretty_condition        impasse - control\n3756   298 response      other pretty_condition        impasse - control\n3757   299 response      other pretty_condition        impasse - control\n3758   300 response      other pretty_condition        impasse - control\n3759   301 response      other pretty_condition        impasse - control\n3760   302 response      other pretty_condition        impasse - control\n3761   303 response      other pretty_condition        impasse - control\n3762   304 response      other pretty_condition        impasse - control\n3763   305 response      other pretty_condition        impasse - control\n3764   306 response      other pretty_condition        impasse - control\n3765   307 response      other pretty_condition        impasse - control\n3766   308 response      other pretty_condition        impasse - control\n3767   309 response      other pretty_condition        impasse - control\n3768   310 response      other pretty_condition        impasse - control\n3769   311 response      other pretty_condition        impasse - control\n3770   312 response      other pretty_condition        impasse - control\n3771   313 response      other pretty_condition        impasse - control\n3772   314 response      other pretty_condition        impasse - control\n3773   315 response      other pretty_condition        impasse - control\n3774   316 response      other pretty_condition        impasse - control\n3775   317 response      other pretty_condition        impasse - control\n3776   318 response      other pretty_condition        impasse - control\n3777   319 response      other pretty_condition        impasse - control\n3778   320 response      other pretty_condition        impasse - control\n3779   321 response      other pretty_condition        impasse - control\n3780   322 response      other pretty_condition        impasse - control\n3781   323 response      other pretty_condition        impasse - control\n3782   324 response      other pretty_condition        impasse - control\n3783   325 response      other pretty_condition        impasse - control\n3784   326 response      other pretty_condition        impasse - control\n3785   327 response      other pretty_condition        impasse - control\n3786   328 response      other pretty_condition        impasse - control\n3787   329 response      other pretty_condition        impasse - control\n3788   330 response      other pretty_condition        impasse - control\n3789   331 response      other pretty_condition        impasse - control\n3790   332 response      other pretty_condition        impasse - control\n3791   333 response      other pretty_condition        impasse - control\n3792   334 response      other pretty_condition        impasse - control\n3793   335 response      other pretty_condition        impasse - control\n3794   336 response      other pretty_condition        impasse - control\n3795   337 response      other pretty_condition        impasse - control\n3796   338 response      other pretty_condition        impasse - control\n3797   339 response      other pretty_condition        impasse - control\n3798   340 response      other pretty_condition        impasse - control\n3799   341 response      other pretty_condition        impasse - control\n3800   342 response      other pretty_condition        impasse - control\n3801   343 response      other pretty_condition        impasse - control\n3802   344 response      other pretty_condition        impasse - control\n3803   345 response      other pretty_condition        impasse - control\n3804   346 response      other pretty_condition        impasse - control\n3805   347 response      other pretty_condition        impasse - control\n3806   348 response      other pretty_condition        impasse - control\n3807   349 response      other pretty_condition        impasse - control\n3808   350 response      other pretty_condition        impasse - control\n3809   351 response      other pretty_condition        impasse - control\n3810   352 response      other pretty_condition        impasse - control\n3811   353 response      other pretty_condition        impasse - control\n3812   354 response      other pretty_condition        impasse - control\n3813   355 response      other pretty_condition        impasse - control\n3814   356 response      other pretty_condition        impasse - control\n3815   357 response      other pretty_condition        impasse - control\n3816   358 response      other pretty_condition        impasse - control\n3817   359 response      other pretty_condition        impasse - control\n3818   360 response      other pretty_condition        impasse - control\n3819   361 response      other pretty_condition        impasse - control\n3820   362 response      other pretty_condition        impasse - control\n3821   363 response      other pretty_condition        impasse - control\n3822   364 response      other pretty_condition        impasse - control\n3823   365 response      other pretty_condition        impasse - control\n3824   366 response      other pretty_condition        impasse - control\n3825   367 response      other pretty_condition        impasse - control\n3826   368 response      other pretty_condition        impasse - control\n3827   369 response      other pretty_condition        impasse - control\n3828   370 response      other pretty_condition        impasse - control\n3829   371 response      other pretty_condition        impasse - control\n3830   372 response      other pretty_condition        impasse - control\n3831   373 response      other pretty_condition        impasse - control\n3832   374 response      other pretty_condition        impasse - control\n3833   375 response      other pretty_condition        impasse - control\n3834   376 response      other pretty_condition        impasse - control\n3835   377 response      other pretty_condition        impasse - control\n3836   378 response      other pretty_condition        impasse - control\n3837   379 response      other pretty_condition        impasse - control\n3838   380 response      other pretty_condition        impasse - control\n3839   381 response      other pretty_condition        impasse - control\n3840   382 response      other pretty_condition        impasse - control\n3841   383 response      other pretty_condition        impasse - control\n3842   384 response      other pretty_condition        impasse - control\n3843   385 response      other pretty_condition        impasse - control\n3844   386 response      other pretty_condition        impasse - control\n3845   387 response      other pretty_condition        impasse - control\n3846   388 response      other pretty_condition        impasse - control\n3847   389 response      other pretty_condition        impasse - control\n3848   390 response      other pretty_condition        impasse - control\n3849   391 response      other pretty_condition        impasse - control\n3850   392 response      other pretty_condition        impasse - control\n3851   393 response      other pretty_condition        impasse - control\n3852   394 response      other pretty_condition        impasse - control\n3853   395 response      other pretty_condition        impasse - control\n3854   396 response      other pretty_condition        impasse - control\n3855   397 response      other pretty_condition        impasse - control\n3856   398 response      other pretty_condition        impasse - control\n3857   399 response      other pretty_condition        impasse - control\n3858   400 response      other pretty_condition        impasse - control\n3859   401 response      other pretty_condition        impasse - control\n3860   402 response      other pretty_condition        impasse - control\n3861   403 response      other pretty_condition        impasse - control\n3862   404 response      other pretty_condition        impasse - control\n3863   405 response      other pretty_condition        impasse - control\n3864   406 response      other pretty_condition        impasse - control\n3865   407 response      other pretty_condition        impasse - control\n3866   408 response      other pretty_condition        impasse - control\n3867   409 response      other pretty_condition        impasse - control\n3868   410 response      other pretty_condition        impasse - control\n3869   411 response      other pretty_condition        impasse - control\n3870   412 response      other pretty_condition        impasse - control\n3871   413 response      other pretty_condition        impasse - control\n3872   414 response      other pretty_condition        impasse - control\n3873   415 response      other pretty_condition        impasse - control\n3874   416 response      other pretty_condition        impasse - control\n3875   417 response      other pretty_condition        impasse - control\n3876   418 response      other pretty_condition        impasse - control\n3877   419 response      other pretty_condition        impasse - control\n3878   420 response      other pretty_condition        impasse - control\n3879   421 response      other pretty_condition        impasse - control\n3880   422 response      other pretty_condition        impasse - control\n3881   423 response      other pretty_condition        impasse - control\n3882   424 response      other pretty_condition        impasse - control\n3883   425 response      other pretty_condition        impasse - control\n3884   426 response      other pretty_condition        impasse - control\n3885   427 response      other pretty_condition        impasse - control\n3886   428 response      other pretty_condition        impasse - control\n3887   429 response      other pretty_condition        impasse - control\n3888   430 response      other pretty_condition        impasse - control\n3889   431 response      other pretty_condition        impasse - control\n3890   432 response      other pretty_condition        impasse - control\n3891   433 response      other pretty_condition        impasse - control\n3892   434 response      other pretty_condition        impasse - control\n3893   435 response      other pretty_condition        impasse - control\n3894   436 response      other pretty_condition        impasse - control\n3895   437 response      other pretty_condition        impasse - control\n3896   438 response      other pretty_condition        impasse - control\n3897   439 response      other pretty_condition        impasse - control\n3898   440 response      other pretty_condition        impasse - control\n3899   441 response      other pretty_condition        impasse - control\n3900   442 response      other pretty_condition        impasse - control\n3901   443 response      other pretty_condition        impasse - control\n3902   444 response      other pretty_condition        impasse - control\n3903   445 response      other pretty_condition        impasse - control\n3904   446 response      other pretty_condition        impasse - control\n3905   447 response      other pretty_condition        impasse - control\n3906   448 response      other pretty_condition        impasse - control\n3907   449 response      other pretty_condition        impasse - control\n3908   450 response      other pretty_condition        impasse - control\n3909   451 response      other pretty_condition        impasse - control\n3910   452 response      other pretty_condition        impasse - control\n3911   453 response      other pretty_condition        impasse - control\n3912   454 response      other pretty_condition        impasse - control\n3913   455 response      other pretty_condition        impasse - control\n3914   456 response      other pretty_condition        impasse - control\n3915   457 response      other pretty_condition        impasse - control\n3916   458 response      other pretty_condition        impasse - control\n3917   459 response      other pretty_condition        impasse - control\n3918   460 response      other pretty_condition        impasse - control\n3919   461 response      other pretty_condition        impasse - control\n3920   462 response      other pretty_condition        impasse - control\n3921   463 response      other pretty_condition        impasse - control\n3922   464 response      other pretty_condition        impasse - control\n3923   465 response      other pretty_condition        impasse - control\n3924   466 response      other pretty_condition        impasse - control\n3925   467 response      other pretty_condition        impasse - control\n3926   468 response      other pretty_condition        impasse - control\n3927   469 response      other pretty_condition        impasse - control\n3928   470 response      other pretty_condition        impasse - control\n3929   471 response      other pretty_condition        impasse - control\n3930   472 response      other pretty_condition        impasse - control\n3931   473 response      other pretty_condition        impasse - control\n3932   474 response      other pretty_condition        impasse - control\n3933   475 response      other pretty_condition        impasse - control\n3934   476 response      other pretty_condition        impasse - control\n3935   477 response      other pretty_condition        impasse - control\n3936   478 response      other pretty_condition        impasse - control\n3937   479 response      other pretty_condition        impasse - control\n3938   480 response      other pretty_condition        impasse - control\n3939   481 response      other pretty_condition        impasse - control\n3940   482 response      other pretty_condition        impasse - control\n3941   483 response      other pretty_condition        impasse - control\n3942   484 response      other pretty_condition        impasse - control\n3943   485 response      other pretty_condition        impasse - control\n3944   486 response      other pretty_condition        impasse - control\n3945   487 response      other pretty_condition        impasse - control\n3946   488 response      other pretty_condition        impasse - control\n3947   489 response      other pretty_condition        impasse - control\n3948   490 response      other pretty_condition        impasse - control\n3949   491 response      other pretty_condition        impasse - control\n3950   492 response      other pretty_condition        impasse - control\n3951   493 response      other pretty_condition        impasse - control\n3952   494 response      other pretty_condition        impasse - control\n3953   495 response      other pretty_condition        impasse - control\n3954   496 response      other pretty_condition        impasse - control\n3955   497 response      other pretty_condition        impasse - control\n3956   498 response      other pretty_condition        impasse - control\n3957   499 response      other pretty_condition        impasse - control\n3958   500 response      other pretty_condition        impasse - control\n3959   501 response      other pretty_condition        impasse - control\n3960   502 response      other pretty_condition        impasse - control\n3961   503 response      other pretty_condition        impasse - control\n3962   504 response      other pretty_condition        impasse - control\n3963   505 response      other pretty_condition        impasse - control\n3964   506 response      other pretty_condition        impasse - control\n3965   507 response      other pretty_condition        impasse - control\n3966   508 response      other pretty_condition        impasse - control\n3967   509 response      other pretty_condition        impasse - control\n3968   510 response      other pretty_condition        impasse - control\n3969   511 response      other pretty_condition        impasse - control\n3970   512 response      other pretty_condition        impasse - control\n3971   513 response      other pretty_condition        impasse - control\n3972   514 response      other pretty_condition        impasse - control\n3973   515 response      other pretty_condition        impasse - control\n3974   516 response      other pretty_condition        impasse - control\n3975   517 response      other pretty_condition        impasse - control\n3976   518 response      other pretty_condition        impasse - control\n3977   519 response      other pretty_condition        impasse - control\n3978   520 response      other pretty_condition        impasse - control\n3979   521 response      other pretty_condition        impasse - control\n3980   522 response      other pretty_condition        impasse - control\n3981   523 response      other pretty_condition        impasse - control\n3982   524 response      other pretty_condition        impasse - control\n3983   525 response      other pretty_condition        impasse - control\n3984   526 response      other pretty_condition        impasse - control\n3985   527 response      other pretty_condition        impasse - control\n3986   528 response      other pretty_condition        impasse - control\n3987   529 response      other pretty_condition        impasse - control\n3988   530 response      other pretty_condition        impasse - control\n3989   531 response      other pretty_condition        impasse - control\n3990   532 response      other pretty_condition        impasse - control\n3991   533 response      other pretty_condition        impasse - control\n3992   534 response      other pretty_condition        impasse - control\n3993   535 response      other pretty_condition        impasse - control\n3994   536 response      other pretty_condition        impasse - control\n3995   537 response      other pretty_condition        impasse - control\n3996   538 response      other pretty_condition        impasse - control\n3997   539 response      other pretty_condition        impasse - control\n3998   540 response      other pretty_condition        impasse - control\n3999   541 response      other pretty_condition        impasse - control\n4000   542 response      other pretty_condition        impasse - control\n4001   543 response      other pretty_condition        impasse - control\n4002   544 response      other pretty_condition        impasse - control\n4003   545 response      other pretty_condition        impasse - control\n4004   546 response      other pretty_condition        impasse - control\n4005   547 response      other pretty_condition        impasse - control\n4006   548 response      other pretty_condition        impasse - control\n4007   549 response      other pretty_condition        impasse - control\n4008   550 response      other pretty_condition        impasse - control\n4009   551 response      other pretty_condition        impasse - control\n4010   552 response      other pretty_condition        impasse - control\n4011   553 response      other pretty_condition        impasse - control\n4012   554 response      other pretty_condition        impasse - control\n4013   555 response      other pretty_condition        impasse - control\n4014   556 response      other pretty_condition        impasse - control\n4015   557 response      other pretty_condition        impasse - control\n4016   558 response      other pretty_condition        impasse - control\n4017   559 response      other pretty_condition        impasse - control\n4018   560 response      other pretty_condition        impasse - control\n4019   561 response      other pretty_condition        impasse - control\n4020   562 response      other pretty_condition        impasse - control\n4021   563 response      other pretty_condition        impasse - control\n4022   564 response      other pretty_condition        impasse - control\n4023   565 response      other pretty_condition        impasse - control\n4024   566 response      other pretty_condition        impasse - control\n4025   567 response      other pretty_condition        impasse - control\n4026   568 response      other pretty_condition        impasse - control\n4027   569 response      other pretty_condition        impasse - control\n4028   570 response      other pretty_condition        impasse - control\n4029   571 response      other pretty_condition        impasse - control\n4030   572 response      other pretty_condition        impasse - control\n4031   573 response      other pretty_condition        impasse - control\n4032   574 response      other pretty_condition        impasse - control\n4033   575 response      other pretty_condition        impasse - control\n4034   576 response      other pretty_condition        impasse - control\n4035   577 response      other pretty_condition        impasse - control\n4036   578 response      other pretty_condition        impasse - control\n4037   579 response      other pretty_condition        impasse - control\n4038   580 response      other pretty_condition        impasse - control\n4039   581 response      other pretty_condition        impasse - control\n4040   582 response      other pretty_condition        impasse - control\n4041   583 response      other pretty_condition        impasse - control\n4042   584 response      other pretty_condition        impasse - control\n4043   585 response      other pretty_condition        impasse - control\n4044   586 response      other pretty_condition        impasse - control\n4045   587 response      other pretty_condition        impasse - control\n4046   588 response      other pretty_condition        impasse - control\n4047   589 response      other pretty_condition        impasse - control\n4048   590 response      other pretty_condition        impasse - control\n4049   591 response      other pretty_condition        impasse - control\n4050   592 response      other pretty_condition        impasse - control\n4051   593 response      other pretty_condition        impasse - control\n4052   594 response      other pretty_condition        impasse - control\n4053   595 response      other pretty_condition        impasse - control\n4054   596 response      other pretty_condition        impasse - control\n4055   597 response      other pretty_condition        impasse - control\n4056   598 response      other pretty_condition        impasse - control\n4057   599 response      other pretty_condition        impasse - control\n4058   600 response      other pretty_condition        impasse - control\n4059   601 response      other pretty_condition        impasse - control\n4060   602 response      other pretty_condition        impasse - control\n4061   603 response      other pretty_condition        impasse - control\n4062   604 response      other pretty_condition        impasse - control\n4063   605 response      other pretty_condition        impasse - control\n4064   606 response      other pretty_condition        impasse - control\n4065   607 response      other pretty_condition        impasse - control\n4066   608 response      other pretty_condition        impasse - control\n4067   609 response      other pretty_condition        impasse - control\n4068   610 response      other pretty_condition        impasse - control\n4069   611 response      other pretty_condition        impasse - control\n4070   612 response      other pretty_condition        impasse - control\n4071   613 response      other pretty_condition        impasse - control\n4072   614 response      other pretty_condition        impasse - control\n4073   615 response      other pretty_condition        impasse - control\n4074   616 response      other pretty_condition        impasse - control\n4075   617 response      other pretty_condition        impasse - control\n4076   618 response      other pretty_condition        impasse - control\n4077   619 response      other pretty_condition        impasse - control\n4078   620 response      other pretty_condition        impasse - control\n4079   621 response      other pretty_condition        impasse - control\n4080   622 response      other pretty_condition        impasse - control\n4081   623 response      other pretty_condition        impasse - control\n4082   624 response      other pretty_condition        impasse - control\n4083   625 response      other pretty_condition        impasse - control\n4084   626 response      other pretty_condition        impasse - control\n4085   627 response      other pretty_condition        impasse - control\n4086   628 response      other pretty_condition        impasse - control\n4087   629 response      other pretty_condition        impasse - control\n4088   630 response      other pretty_condition        impasse - control\n4089   631 response      other pretty_condition        impasse - control\n4090   632 response      other pretty_condition        impasse - control\n4091   633 response      other pretty_condition        impasse - control\n4092   634 response      other pretty_condition        impasse - control\n4093   635 response      other pretty_condition        impasse - control\n4094   636 response      other pretty_condition        impasse - control\n4095   637 response      other pretty_condition        impasse - control\n4096   638 response      other pretty_condition        impasse - control\n4097   639 response      other pretty_condition        impasse - control\n4098   640 response      other pretty_condition        impasse - control\n4099   641 response      other pretty_condition        impasse - control\n4100   642 response      other pretty_condition        impasse - control\n4101   643 response      other pretty_condition        impasse - control\n4102   644 response      other pretty_condition        impasse - control\n4103   645 response      other pretty_condition        impasse - control\n4104   646 response      other pretty_condition        impasse - control\n4105   647 response      other pretty_condition        impasse - control\n4106   648 response      other pretty_condition        impasse - control\n4107   649 response      other pretty_condition        impasse - control\n4108   650 response      other pretty_condition        impasse - control\n4109   651 response      other pretty_condition        impasse - control\n4110   652 response      other pretty_condition        impasse - control\n4111   653 response      other pretty_condition        impasse - control\n4112   654 response      other pretty_condition        impasse - control\n4113   655 response      other pretty_condition        impasse - control\n4114   656 response      other pretty_condition        impasse - control\n4115   657 response      other pretty_condition        impasse - control\n4116   658 response      other pretty_condition        impasse - control\n4117   659 response      other pretty_condition        impasse - control\n4118   660 response      other pretty_condition        impasse - control\n4119   661 response      other pretty_condition        impasse - control\n4120   662 response      other pretty_condition        impasse - control\n4121   663 response      other pretty_condition        impasse - control\n4122   664 response      other pretty_condition        impasse - control\n4123   665 response      other pretty_condition        impasse - control\n4124   666 response      other pretty_condition        impasse - control\n4125   667 response      other pretty_condition        impasse - control\n4126   668 response      other pretty_condition        impasse - control\n4127   669 response      other pretty_condition        impasse - control\n4128   670 response      other pretty_condition        impasse - control\n4129   671 response      other pretty_condition        impasse - control\n4130   672 response      other pretty_condition        impasse - control\n4131   673 response      other pretty_condition        impasse - control\n4132   674 response      other pretty_condition        impasse - control\n4133   675 response      other pretty_condition        impasse - control\n4134   676 response      other pretty_condition        impasse - control\n4135   677 response      other pretty_condition        impasse - control\n4136   678 response      other pretty_condition        impasse - control\n4137   679 response      other pretty_condition        impasse - control\n4138   680 response      other pretty_condition        impasse - control\n4139   681 response      other pretty_condition        impasse - control\n4140   682 response      other pretty_condition        impasse - control\n4141   683 response      other pretty_condition        impasse - control\n4142   684 response      other pretty_condition        impasse - control\n4143   685 response      other pretty_condition        impasse - control\n4144   686 response      other pretty_condition        impasse - control\n4145   687 response      other pretty_condition        impasse - control\n4146   688 response      other pretty_condition        impasse - control\n4147   689 response      other pretty_condition        impasse - control\n4148   690 response      other pretty_condition        impasse - control\n4149   691 response      other pretty_condition        impasse - control\n4150   692 response      other pretty_condition        impasse - control\n4151   693 response      other pretty_condition        impasse - control\n4152   694 response      other pretty_condition        impasse - control\n4153   695 response      other pretty_condition        impasse - control\n4154   696 response      other pretty_condition        impasse - control\n4155   697 response      other pretty_condition        impasse - control\n4156   698 response      other pretty_condition        impasse - control\n4157   699 response      other pretty_condition        impasse - control\n4158   700 response      other pretty_condition        impasse - control\n4159   701 response      other pretty_condition        impasse - control\n4160   702 response      other pretty_condition        impasse - control\n4161   703 response      other pretty_condition        impasse - control\n4162   704 response      other pretty_condition        impasse - control\n4163   705 response      other pretty_condition        impasse - control\n4164   706 response      other pretty_condition        impasse - control\n4165   707 response      other pretty_condition        impasse - control\n4166   708 response      other pretty_condition        impasse - control\n4167   709 response      other pretty_condition        impasse - control\n4168   710 response      other pretty_condition        impasse - control\n4169   711 response      other pretty_condition        impasse - control\n4170   712 response      other pretty_condition        impasse - control\n4171   713 response      other pretty_condition        impasse - control\n4172   714 response      other pretty_condition        impasse - control\n4173   715 response      other pretty_condition        impasse - control\n4174   716 response      other pretty_condition        impasse - control\n4175   717 response      other pretty_condition        impasse - control\n4176   718 response      other pretty_condition        impasse - control\n4177   719 response      other pretty_condition        impasse - control\n4178   720 response      other pretty_condition        impasse - control\n4179   721 response      other pretty_condition        impasse - control\n4180   722 response      other pretty_condition        impasse - control\n4181   723 response      other pretty_condition        impasse - control\n4182   724 response      other pretty_condition        impasse - control\n4183   725 response      other pretty_condition        impasse - control\n4184   726 response      other pretty_condition        impasse - control\n4185   727 response      other pretty_condition        impasse - control\n4186   728 response      other pretty_condition        impasse - control\n4187   729 response      other pretty_condition        impasse - control\n4188   730 response      other pretty_condition        impasse - control\n4189   731 response      other pretty_condition        impasse - control\n4190   732 response      other pretty_condition        impasse - control\n4191   733 response      other pretty_condition        impasse - control\n4192   734 response      other pretty_condition        impasse - control\n4193   735 response      other pretty_condition        impasse - control\n4194   736 response      other pretty_condition        impasse - control\n4195   737 response      other pretty_condition        impasse - control\n4196   738 response      other pretty_condition        impasse - control\n4197   739 response      other pretty_condition        impasse - control\n4198   740 response      other pretty_condition        impasse - control\n4199   741 response      other pretty_condition        impasse - control\n4200   742 response      other pretty_condition        impasse - control\n4201   743 response      other pretty_condition        impasse - control\n4202   744 response      other pretty_condition        impasse - control\n4203   745 response      other pretty_condition        impasse - control\n4204   746 response      other pretty_condition        impasse - control\n4205   747 response      other pretty_condition        impasse - control\n4206   748 response      other pretty_condition        impasse - control\n4207   749 response      other pretty_condition        impasse - control\n4208   750 response      other pretty_condition        impasse - control\n4209   751 response      other pretty_condition        impasse - control\n4210   752 response      other pretty_condition        impasse - control\n4211   753 response      other pretty_condition        impasse - control\n4212   754 response      other pretty_condition        impasse - control\n4213   755 response      other pretty_condition        impasse - control\n4214   756 response      other pretty_condition        impasse - control\n4215   757 response      other pretty_condition        impasse - control\n4216   758 response      other pretty_condition        impasse - control\n4217   759 response      other pretty_condition        impasse - control\n4218   760 response      other pretty_condition        impasse - control\n4219   761 response      other pretty_condition        impasse - control\n4220   762 response      other pretty_condition        impasse - control\n4221   763 response      other pretty_condition        impasse - control\n4222   764 response      other pretty_condition        impasse - control\n4223   765 response      other pretty_condition        impasse - control\n4224   766 response      other pretty_condition        impasse - control\n4225   767 response      other pretty_condition        impasse - control\n4226   768 response      other pretty_condition        impasse - control\n4227   769 response      other pretty_condition        impasse - control\n4228   770 response      other pretty_condition        impasse - control\n4229   771 response      other pretty_condition        impasse - control\n4230   772 response      other pretty_condition        impasse - control\n4231   773 response      other pretty_condition        impasse - control\n4232   774 response      other pretty_condition        impasse - control\n4233   775 response      other pretty_condition        impasse - control\n4234   776 response      other pretty_condition        impasse - control\n4235   777 response      other pretty_condition        impasse - control\n4236   778 response      other pretty_condition        impasse - control\n4237   779 response      other pretty_condition        impasse - control\n4238   780 response      other pretty_condition        impasse - control\n4239   781 response      other pretty_condition        impasse - control\n4240   782 response      other pretty_condition        impasse - control\n4241   783 response      other pretty_condition        impasse - control\n4242   784 response      other pretty_condition        impasse - control\n4243   785 response      other pretty_condition        impasse - control\n4244   786 response      other pretty_condition        impasse - control\n4245   787 response      other pretty_condition        impasse - control\n4246   788 response      other pretty_condition        impasse - control\n4247   789 response      other pretty_condition        impasse - control\n4248   790 response      other pretty_condition        impasse - control\n4249   791 response      other pretty_condition        impasse - control\n4250   792 response      other pretty_condition        impasse - control\n4251   793 response      other pretty_condition        impasse - control\n4252   794 response      other pretty_condition        impasse - control\n4253   795 response      other pretty_condition        impasse - control\n4254   796 response      other pretty_condition        impasse - control\n4255   797 response      other pretty_condition        impasse - control\n4256   798 response      other pretty_condition        impasse - control\n4257   799 response      other pretty_condition        impasse - control\n4258   800 response      other pretty_condition        impasse - control\n4259   801 response      other pretty_condition        impasse - control\n4260   802 response      other pretty_condition        impasse - control\n4261   803 response      other pretty_condition        impasse - control\n4262   804 response      other pretty_condition        impasse - control\n4263   805 response      other pretty_condition        impasse - control\n4264   806 response      other pretty_condition        impasse - control\n4265   807 response      other pretty_condition        impasse - control\n4266   808 response      other pretty_condition        impasse - control\n4267   809 response      other pretty_condition        impasse - control\n4268   810 response      other pretty_condition        impasse - control\n4269   811 response      other pretty_condition        impasse - control\n4270   812 response      other pretty_condition        impasse - control\n4271   813 response      other pretty_condition        impasse - control\n4272   814 response      other pretty_condition        impasse - control\n4273   815 response      other pretty_condition        impasse - control\n4274   816 response      other pretty_condition        impasse - control\n4275   817 response      other pretty_condition        impasse - control\n4276   818 response      other pretty_condition        impasse - control\n4277   819 response      other pretty_condition        impasse - control\n4278   820 response      other pretty_condition        impasse - control\n4279   821 response      other pretty_condition        impasse - control\n4280   822 response      other pretty_condition        impasse - control\n4281   823 response      other pretty_condition        impasse - control\n4282   824 response      other pretty_condition        impasse - control\n4283   825 response      other pretty_condition        impasse - control\n4284   826 response      other pretty_condition        impasse - control\n4285   827 response      other pretty_condition        impasse - control\n4286   828 response      other pretty_condition        impasse - control\n4287   829 response      other pretty_condition        impasse - control\n4288   830 response      other pretty_condition        impasse - control\n4289   831 response      other pretty_condition        impasse - control\n4290   832 response      other pretty_condition        impasse - control\n4291   833 response      other pretty_condition        impasse - control\n4292   834 response      other pretty_condition        impasse - control\n4293   835 response      other pretty_condition        impasse - control\n4294   836 response      other pretty_condition        impasse - control\n4295   837 response      other pretty_condition        impasse - control\n4296   838 response      other pretty_condition        impasse - control\n4297   839 response      other pretty_condition        impasse - control\n4298   840 response      other pretty_condition        impasse - control\n4299   841 response      other pretty_condition        impasse - control\n4300   842 response      other pretty_condition        impasse - control\n4301   843 response      other pretty_condition        impasse - control\n4302   844 response      other pretty_condition        impasse - control\n4303   845 response      other pretty_condition        impasse - control\n4304   846 response      other pretty_condition        impasse - control\n4305   847 response      other pretty_condition        impasse - control\n4306   848 response      other pretty_condition        impasse - control\n4307   849 response      other pretty_condition        impasse - control\n4308   850 response      other pretty_condition        impasse - control\n4309   851 response      other pretty_condition        impasse - control\n4310   852 response      other pretty_condition        impasse - control\n4311   853 response      other pretty_condition        impasse - control\n4312   854 response      other pretty_condition        impasse - control\n4313   855 response      other pretty_condition        impasse - control\n4314   856 response      other pretty_condition        impasse - control\n4315   857 response      other pretty_condition        impasse - control\n4316   858 response      other pretty_condition        impasse - control\n4317   859 response      other pretty_condition        impasse - control\n4318   860 response      other pretty_condition        impasse - control\n4319   861 response      other pretty_condition        impasse - control\n4320   862 response      other pretty_condition        impasse - control\n4321   863 response      other pretty_condition        impasse - control\n4322   864 response      other pretty_condition        impasse - control\n4323   865 response      other pretty_condition        impasse - control\n4324   866 response      other pretty_condition        impasse - control\n4325   867 response      other pretty_condition        impasse - control\n4326   868 response      other pretty_condition        impasse - control\n4327   869 response      other pretty_condition        impasse - control\n4328   870 response      other pretty_condition        impasse - control\n4329   871 response      other pretty_condition        impasse - control\n4330   872 response      other pretty_condition        impasse - control\n4331   873 response      other pretty_condition        impasse - control\n4332   874 response      other pretty_condition        impasse - control\n4333   875 response      other pretty_condition        impasse - control\n4334   876 response      other pretty_condition        impasse - control\n4335   877 response      other pretty_condition        impasse - control\n4336   878 response      other pretty_condition        impasse - control\n4337   879 response      other pretty_condition        impasse - control\n4338   880 response      other pretty_condition        impasse - control\n4339   881 response      other pretty_condition        impasse - control\n4340   882 response      other pretty_condition        impasse - control\n4341   883 response      other pretty_condition        impasse - control\n4342   884 response      other pretty_condition        impasse - control\n4343   885 response      other pretty_condition        impasse - control\n4344   886 response      other pretty_condition        impasse - control\n4345   887 response      other pretty_condition        impasse - control\n4346   888 response      other pretty_condition        impasse - control\n4347   889 response      other pretty_condition        impasse - control\n4348   890 response      other pretty_condition        impasse - control\n4349   891 response      other pretty_condition        impasse - control\n4350   892 response      other pretty_condition        impasse - control\n4351   893 response      other pretty_condition        impasse - control\n4352   894 response      other pretty_condition        impasse - control\n4353   895 response      other pretty_condition        impasse - control\n4354   896 response      other pretty_condition        impasse - control\n4355   897 response      other pretty_condition        impasse - control\n4356   898 response      other pretty_condition        impasse - control\n4357   899 response      other pretty_condition        impasse - control\n4358   900 response      other pretty_condition        impasse - control\n4359   901 response      other pretty_condition        impasse - control\n4360   902 response      other pretty_condition        impasse - control\n4361   903 response      other pretty_condition        impasse - control\n4362   904 response      other pretty_condition        impasse - control\n4363   905 response      other pretty_condition        impasse - control\n4364   906 response      other pretty_condition        impasse - control\n4365   907 response      other pretty_condition        impasse - control\n4366   908 response      other pretty_condition        impasse - control\n4367   909 response      other pretty_condition        impasse - control\n4368   910 response      other pretty_condition        impasse - control\n4369   911 response      other pretty_condition        impasse - control\n4370   912 response      other pretty_condition        impasse - control\n4371   913 response      other pretty_condition        impasse - control\n4372   914 response      other pretty_condition        impasse - control\n4373   915 response      other pretty_condition        impasse - control\n4374   916 response      other pretty_condition        impasse - control\n4375   917 response      other pretty_condition        impasse - control\n4376   918 response      other pretty_condition        impasse - control\n4377   919 response      other pretty_condition        impasse - control\n4378   920 response      other pretty_condition        impasse - control\n4379   921 response      other pretty_condition        impasse - control\n4380   922 response      other pretty_condition        impasse - control\n4381   923 response      other pretty_condition        impasse - control\n4382   924 response      other pretty_condition        impasse - control\n4383   925 response      other pretty_condition        impasse - control\n4384   926 response      other pretty_condition        impasse - control\n4385   927 response      other pretty_condition        impasse - control\n4386   928 response      other pretty_condition        impasse - control\n4387   929 response      other pretty_condition        impasse - control\n4388   930 response      other pretty_condition        impasse - control\n4389   931 response      other pretty_condition        impasse - control\n4390   932 response      other pretty_condition        impasse - control\n4391   933 response      other pretty_condition        impasse - control\n4392   934 response      other pretty_condition        impasse - control\n4393   935 response      other pretty_condition        impasse - control\n4394   936 response      other pretty_condition        impasse - control\n4395   937 response      other pretty_condition        impasse - control\n4396   938 response      other pretty_condition        impasse - control\n4397   939 response      other pretty_condition        impasse - control\n4398   940 response      other pretty_condition        impasse - control\n4399   941 response      other pretty_condition        impasse - control\n4400   942 response      other pretty_condition        impasse - control\n4401   943 response      other pretty_condition        impasse - control\n4402   944 response      other pretty_condition        impasse - control\n4403   945 response      other pretty_condition        impasse - control\n4404   946 response      other pretty_condition        impasse - control\n4405   947 response      other pretty_condition        impasse - control\n4406   948 response      other pretty_condition        impasse - control\n4407   949 response      other pretty_condition        impasse - control\n4408   950 response      other pretty_condition        impasse - control\n4409   951 response      other pretty_condition        impasse - control\n4410   952 response      other pretty_condition        impasse - control\n4411   953 response      other pretty_condition        impasse - control\n4412   954 response      other pretty_condition        impasse - control\n4413   955 response      other pretty_condition        impasse - control\n4414   956 response      other pretty_condition        impasse - control\n4415   957 response      other pretty_condition        impasse - control\n4416   958 response      other pretty_condition        impasse - control\n4417   959 response      other pretty_condition        impasse - control\n4418   960 response      other pretty_condition        impasse - control\n4419   961 response      other pretty_condition        impasse - control\n4420   962 response      other pretty_condition        impasse - control\n4421   963 response      other pretty_condition        impasse - control\n4422   964 response      other pretty_condition        impasse - control\n4423   965 response      other pretty_condition        impasse - control\n4424   966 response      other pretty_condition        impasse - control\n4425   967 response      other pretty_condition        impasse - control\n4426   968 response      other pretty_condition        impasse - control\n4427   969 response      other pretty_condition        impasse - control\n4428   970 response      other pretty_condition        impasse - control\n4429   971 response      other pretty_condition        impasse - control\n4430   972 response      other pretty_condition        impasse - control\n4431   973 response      other pretty_condition        impasse - control\n4432   974 response      other pretty_condition        impasse - control\n4433   975 response      other pretty_condition        impasse - control\n4434   976 response      other pretty_condition        impasse - control\n4435   977 response      other pretty_condition        impasse - control\n4436   978 response      other pretty_condition        impasse - control\n4437   979 response      other pretty_condition        impasse - control\n4438   980 response      other pretty_condition        impasse - control\n4439   981 response      other pretty_condition        impasse - control\n4440   982 response      other pretty_condition        impasse - control\n4441   983 response      other pretty_condition        impasse - control\n4442   984 response      other pretty_condition        impasse - control\n4443   985 response      other pretty_condition        impasse - control\n4444   986 response      other pretty_condition        impasse - control\n4445   987 response      other pretty_condition        impasse - control\n4446   988 response      other pretty_condition        impasse - control\n4447   989 response      other pretty_condition        impasse - control\n4448   990 response      other pretty_condition        impasse - control\n4449   991 response      other pretty_condition        impasse - control\n4450   992 response      other pretty_condition        impasse - control\n4451   993 response      other pretty_condition        impasse - control\n4452   994 response      other pretty_condition        impasse - control\n4453   995 response      other pretty_condition        impasse - control\n4454   996 response      other pretty_condition        impasse - control\n4455   997 response      other pretty_condition        impasse - control\n4456   998 response      other pretty_condition        impasse - control\n4457   999 response      other pretty_condition        impasse - control\n4458  1000 response      other pretty_condition        impasse - control\n4459  1001 response      other pretty_condition        impasse - control\n4460  1002 response      other pretty_condition        impasse - control\n4461  1003 response      other pretty_condition        impasse - control\n4462  1004 response      other pretty_condition        impasse - control\n4463  1005 response      other pretty_condition        impasse - control\n4464  1006 response      other pretty_condition        impasse - control\n4465  1007 response      other pretty_condition        impasse - control\n4466  1008 response      other pretty_condition        impasse - control\n4467  1009 response      other pretty_condition        impasse - control\n4468  1010 response      other pretty_condition        impasse - control\n4469  1011 response      other pretty_condition        impasse - control\n4470  1012 response      other pretty_condition        impasse - control\n4471  1013 response      other pretty_condition        impasse - control\n4472  1014 response      other pretty_condition        impasse - control\n4473  1015 response      other pretty_condition        impasse - control\n4474  1016 response      other pretty_condition        impasse - control\n4475  1017 response      other pretty_condition        impasse - control\n4476  1018 response      other pretty_condition        impasse - control\n4477  1019 response      other pretty_condition        impasse - control\n4478  1020 response      other pretty_condition        impasse - control\n4479  1021 response      other pretty_condition        impasse - control\n4480  1022 response      other pretty_condition        impasse - control\n4481  1023 response      other pretty_condition        impasse - control\n4482  1024 response      other pretty_condition        impasse - control\n4483  1025 response      other pretty_condition        impasse - control\n4484  1026 response      other pretty_condition        impasse - control\n4485  1027 response      other pretty_condition        impasse - control\n4486  1028 response      other pretty_condition        impasse - control\n4487  1029 response      other pretty_condition        impasse - control\n4488  1030 response      other pretty_condition        impasse - control\n4489  1031 response      other pretty_condition        impasse - control\n4490  1032 response      other pretty_condition        impasse - control\n4491  1033 response      other pretty_condition        impasse - control\n4492  1034 response      other pretty_condition        impasse - control\n4493  1035 response      other pretty_condition        impasse - control\n4494  1036 response      other pretty_condition        impasse - control\n4495  1037 response      other pretty_condition        impasse - control\n4496  1038 response      other pretty_condition        impasse - control\n4497  1039 response      other pretty_condition        impasse - control\n4498  1040 response      other pretty_condition        impasse - control\n4499  1041 response      other pretty_condition        impasse - control\n4500  1042 response      other pretty_condition        impasse - control\n4501  1043 response      other pretty_condition        impasse - control\n4502  1044 response      other pretty_condition        impasse - control\n4503  1045 response      other pretty_condition        impasse - control\n4504  1046 response      other pretty_condition        impasse - control\n4505  1047 response      other pretty_condition        impasse - control\n4506  1048 response      other pretty_condition        impasse - control\n4507  1049 response      other pretty_condition        impasse - control\n4508  1050 response      other pretty_condition        impasse - control\n4509  1051 response      other pretty_condition        impasse - control\n4510  1052 response      other pretty_condition        impasse - control\n4511  1053 response      other pretty_condition        impasse - control\n4512  1054 response      other pretty_condition        impasse - control\n4513  1055 response      other pretty_condition        impasse - control\n4514  1056 response      other pretty_condition        impasse - control\n4515  1057 response      other pretty_condition        impasse - control\n4516  1058 response      other pretty_condition        impasse - control\n4517  1059 response      other pretty_condition        impasse - control\n4518  1060 response      other pretty_condition        impasse - control\n4519  1061 response      other pretty_condition        impasse - control\n4520  1062 response      other pretty_condition        impasse - control\n4521  1063 response      other pretty_condition        impasse - control\n4522  1064 response      other pretty_condition        impasse - control\n4523  1065 response      other pretty_condition        impasse - control\n4524  1066 response      other pretty_condition        impasse - control\n4525  1067 response      other pretty_condition        impasse - control\n4526  1068 response      other pretty_condition        impasse - control\n4527  1069 response      other pretty_condition        impasse - control\n4528  1070 response      other pretty_condition        impasse - control\n4529  1071 response      other pretty_condition        impasse - control\n4530  1072 response      other pretty_condition        impasse - control\n4531  1073 response      other pretty_condition        impasse - control\n4532  1074 response      other pretty_condition        impasse - control\n4533  1075 response      other pretty_condition        impasse - control\n4534  1076 response      other pretty_condition        impasse - control\n4535  1077 response      other pretty_condition        impasse - control\n4536  1078 response      other pretty_condition        impasse - control\n4537  1079 response      other pretty_condition        impasse - control\n4538  1080 response      other pretty_condition        impasse - control\n4539  1081 response      other pretty_condition        impasse - control\n4540  1082 response      other pretty_condition        impasse - control\n4541  1083 response      other pretty_condition        impasse - control\n4542  1084 response      other pretty_condition        impasse - control\n4543  1085 response      other pretty_condition        impasse - control\n4544  1086 response      other pretty_condition        impasse - control\n4545  1087 response      other pretty_condition        impasse - control\n4546  1088 response      other pretty_condition        impasse - control\n4547  1089 response      other pretty_condition        impasse - control\n4548  1090 response      other pretty_condition        impasse - control\n4549  1091 response      other pretty_condition        impasse - control\n4550  1092 response      other pretty_condition        impasse - control\n4551  1093 response      other pretty_condition        impasse - control\n4552  1094 response      other pretty_condition        impasse - control\n4553  1095 response      other pretty_condition        impasse - control\n4554  1096 response      other pretty_condition        impasse - control\n4555  1097 response      other pretty_condition        impasse - control\n4556  1098 response      other pretty_condition        impasse - control\n4557  1099 response      other pretty_condition        impasse - control\n4558  1100 response      other pretty_condition        impasse - control\n4559  1101 response      other pretty_condition        impasse - control\n4560  1102 response      other pretty_condition        impasse - control\n4561  1103 response      other pretty_condition        impasse - control\n4562  1104 response      other pretty_condition        impasse - control\n4563  1105 response      other pretty_condition        impasse - control\n4564  1106 response      other pretty_condition        impasse - control\n4565  1107 response      other pretty_condition        impasse - control\n4566  1108 response      other pretty_condition        impasse - control\n4567  1109 response      other pretty_condition        impasse - control\n4568  1110 response      other pretty_condition        impasse - control\n4569  1111 response      other pretty_condition        impasse - control\n4570  1112 response      other pretty_condition        impasse - control\n4571  1113 response      other pretty_condition        impasse - control\n4572  1114 response      other pretty_condition        impasse - control\n4573  1115 response      other pretty_condition        impasse - control\n4574  1116 response      other pretty_condition        impasse - control\n4575  1117 response      other pretty_condition        impasse - control\n4576  1118 response      other pretty_condition        impasse - control\n4577  1119 response      other pretty_condition        impasse - control\n4578  1120 response      other pretty_condition        impasse - control\n4579  1121 response      other pretty_condition        impasse - control\n4580  1122 response      other pretty_condition        impasse - control\n4581  1123 response      other pretty_condition        impasse - control\n4582  1124 response      other pretty_condition        impasse - control\n4583  1125 response      other pretty_condition        impasse - control\n4584  1126 response      other pretty_condition        impasse - control\n4585  1127 response      other pretty_condition        impasse - control\n4586  1128 response      other pretty_condition        impasse - control\n4587  1129 response      other pretty_condition        impasse - control\n4588  1130 response      other pretty_condition        impasse - control\n4589  1131 response      other pretty_condition        impasse - control\n4590  1132 response      other pretty_condition        impasse - control\n4591  1133 response      other pretty_condition        impasse - control\n4592  1134 response      other pretty_condition        impasse - control\n4593  1135 response      other pretty_condition        impasse - control\n4594  1136 response      other pretty_condition        impasse - control\n4595  1137 response      other pretty_condition        impasse - control\n4596  1138 response      other pretty_condition        impasse - control\n4597  1139 response      other pretty_condition        impasse - control\n4598  1140 response      other pretty_condition        impasse - control\n4599  1141 response      other pretty_condition        impasse - control\n4600  1142 response      other pretty_condition        impasse - control\n4601  1143 response      other pretty_condition        impasse - control\n4602  1144 response      other pretty_condition        impasse - control\n4603  1145 response      other pretty_condition        impasse - control\n4604  1146 response      other pretty_condition        impasse - control\n4605  1147 response      other pretty_condition        impasse - control\n4606  1148 response      other pretty_condition        impasse - control\n4607  1149 response      other pretty_condition        impasse - control\n4608  1150 response      other pretty_condition        impasse - control\n4609  1151 response      other pretty_condition        impasse - control\n4610  1152 response      other pretty_condition        impasse - control\n4611  1153 response      other pretty_condition        impasse - control\n4612  1154 response      other pretty_condition        impasse - control\n4613  1155 response      other pretty_condition        impasse - control\n4614  1156 response      other pretty_condition        impasse - control\n4615  1157 response      other pretty_condition        impasse - control\n4616  1158 response      other pretty_condition        impasse - control\n4617  1159 response      other pretty_condition        impasse - control\n4618  1160 response      other pretty_condition        impasse - control\n4619  1161 response      other pretty_condition        impasse - control\n4620  1162 response      other pretty_condition        impasse - control\n4621  1163 response      other pretty_condition        impasse - control\n4622  1164 response      other pretty_condition        impasse - control\n4623  1165 response      other pretty_condition        impasse - control\n4624  1166 response      other pretty_condition        impasse - control\n4625  1167 response      other pretty_condition        impasse - control\n4626  1168 response      other pretty_condition        impasse - control\n4627  1169 response      other pretty_condition        impasse - control\n4628  1170 response      other pretty_condition        impasse - control\n4629  1171 response      other pretty_condition        impasse - control\n4630  1172 response      other pretty_condition        impasse - control\n4631  1173 response      other pretty_condition        impasse - control\n4632  1174 response      other pretty_condition        impasse - control\n4633  1175 response      other pretty_condition        impasse - control\n4634  1176 response      other pretty_condition        impasse - control\n4635  1177 response      other pretty_condition        impasse - control\n4636  1178 response      other pretty_condition        impasse - control\n4637  1179 response      other pretty_condition        impasse - control\n4638  1180 response      other pretty_condition        impasse - control\n4639  1181 response      other pretty_condition        impasse - control\n4640  1182 response      other pretty_condition        impasse - control\n4641  1183 response      other pretty_condition        impasse - control\n4642  1184 response      other pretty_condition        impasse - control\n4643  1185 response      other pretty_condition        impasse - control\n4644  1186 response      other pretty_condition        impasse - control\n4645  1187 response      other pretty_condition        impasse - control\n4646  1188 response      other pretty_condition        impasse - control\n4647  1189 response      other pretty_condition        impasse - control\n4648  1190 response      other pretty_condition        impasse - control\n4649  1191 response      other pretty_condition        impasse - control\n4650  1192 response      other pretty_condition        impasse - control\n4651  1193 response      other pretty_condition        impasse - control\n4652  1194 response      other pretty_condition        impasse - control\n4653  1195 response      other pretty_condition        impasse - control\n4654  1196 response      other pretty_condition        impasse - control\n4655  1197 response      other pretty_condition        impasse - control\n4656  1198 response      other pretty_condition        impasse - control\n4657  1199 response      other pretty_condition        impasse - control\n4658  1200 response      other pretty_condition        impasse - control\n4659  1201 response      other pretty_condition        impasse - control\n4660  1202 response      other pretty_condition        impasse - control\n4661  1203 response      other pretty_condition        impasse - control\n4662  1204 response      other pretty_condition        impasse - control\n4663  1205 response      other pretty_condition        impasse - control\n4664  1206 response      other pretty_condition        impasse - control\n4665  1207 response      other pretty_condition        impasse - control\n4666  1208 response      other pretty_condition        impasse - control\n4667  1209 response      other pretty_condition        impasse - control\n4668  1210 response      other pretty_condition        impasse - control\n4669  1211 response      other pretty_condition        impasse - control\n4670  1212 response      other pretty_condition        impasse - control\n4671  1213 response      other pretty_condition        impasse - control\n4672  1214 response      other pretty_condition        impasse - control\n4673  1215 response      other pretty_condition        impasse - control\n4674  1216 response      other pretty_condition        impasse - control\n4675  1217 response      other pretty_condition        impasse - control\n4676  1218 response      other pretty_condition        impasse - control\n4677  1219 response      other pretty_condition        impasse - control\n4678  1220 response      other pretty_condition        impasse - control\n4679  1221 response      other pretty_condition        impasse - control\n4680  1222 response      other pretty_condition        impasse - control\n4681  1223 response      other pretty_condition        impasse - control\n4682  1224 response      other pretty_condition        impasse - control\n4683  1225 response      other pretty_condition        impasse - control\n4684  1226 response      other pretty_condition        impasse - control\n4685  1227 response      other pretty_condition        impasse - control\n4686  1228 response      other pretty_condition        impasse - control\n4687  1229 response      other pretty_condition        impasse - control\n4688  1230 response      other pretty_condition        impasse - control\n4689  1231 response      other pretty_condition        impasse - control\n4690  1232 response      other pretty_condition        impasse - control\n4691  1233 response      other pretty_condition        impasse - control\n4692  1234 response      other pretty_condition        impasse - control\n4693  1235 response      other pretty_condition        impasse - control\n4694  1236 response      other pretty_condition        impasse - control\n4695  1237 response      other pretty_condition        impasse - control\n4696  1238 response      other pretty_condition        impasse - control\n4697  1239 response      other pretty_condition        impasse - control\n4698  1240 response      other pretty_condition        impasse - control\n4699  1241 response      other pretty_condition        impasse - control\n4700  1242 response      other pretty_condition        impasse - control\n4701  1243 response      other pretty_condition        impasse - control\n4702  1244 response      other pretty_condition        impasse - control\n4703  1245 response      other pretty_condition        impasse - control\n4704  1246 response      other pretty_condition        impasse - control\n4705  1247 response      other pretty_condition        impasse - control\n4706  1248 response      other pretty_condition        impasse - control\n4707  1249 response      other pretty_condition        impasse - control\n4708  1250 response      other pretty_condition        impasse - control\n4709  1251 response      other pretty_condition        impasse - control\n4710  1252 response      other pretty_condition        impasse - control\n4711  1253 response      other pretty_condition        impasse - control\n4712  1254 response      other pretty_condition        impasse - control\n4713  1255 response      other pretty_condition        impasse - control\n4714  1256 response      other pretty_condition        impasse - control\n4715  1257 response      other pretty_condition        impasse - control\n4716  1258 response      other pretty_condition        impasse - control\n4717  1259 response      other pretty_condition        impasse - control\n4718  1260 response      other pretty_condition        impasse - control\n4719  1261 response      other pretty_condition        impasse - control\n4720  1262 response      other pretty_condition        impasse - control\n4721  1263 response      other pretty_condition        impasse - control\n4722  1264 response      other pretty_condition        impasse - control\n4723  1265 response      other pretty_condition        impasse - control\n4724  1266 response      other pretty_condition        impasse - control\n4725  1267 response      other pretty_condition        impasse - control\n4726  1268 response      other pretty_condition        impasse - control\n4727  1269 response      other pretty_condition        impasse - control\n4728  1270 response      other pretty_condition        impasse - control\n4729  1271 response      other pretty_condition        impasse - control\n4730  1272 response      other pretty_condition        impasse - control\n4731  1273 response      other pretty_condition        impasse - control\n4732  1274 response      other pretty_condition        impasse - control\n4733  1275 response      other pretty_condition        impasse - control\n4734  1276 response      other pretty_condition        impasse - control\n4735  1277 response      other pretty_condition        impasse - control\n4736  1278 response      other pretty_condition        impasse - control\n4737  1279 response      other pretty_condition        impasse - control\n4738  1280 response      other pretty_condition        impasse - control\n4739  1281 response      other pretty_condition        impasse - control\n4740  1282 response      other pretty_condition        impasse - control\n4741  1283 response      other pretty_condition        impasse - control\n4742  1284 response      other pretty_condition        impasse - control\n4743  1285 response      other pretty_condition        impasse - control\n4744  1286 response      other pretty_condition        impasse - control\n4745  1287 response      other pretty_condition        impasse - control\n4746  1288 response      other pretty_condition        impasse - control\n4747  1289 response      other pretty_condition        impasse - control\n4748  1290 response      other pretty_condition        impasse - control\n4749  1291 response      other pretty_condition        impasse - control\n4750  1292 response      other pretty_condition        impasse - control\n4751  1293 response      other pretty_condition        impasse - control\n4752  1294 response      other pretty_condition        impasse - control\n4753  1295 response      other pretty_condition        impasse - control\n4754  1296 response      other pretty_condition        impasse - control\n4755  1297 response      other pretty_condition        impasse - control\n4756  1298 response      other pretty_condition        impasse - control\n4757  1299 response      other pretty_condition        impasse - control\n4758  1300 response      other pretty_condition        impasse - control\n4759  1301 response      other pretty_condition        impasse - control\n4760  1302 response      other pretty_condition        impasse - control\n4761  1303 response      other pretty_condition        impasse - control\n4762  1304 response      other pretty_condition        impasse - control\n4763  1305 response      other pretty_condition        impasse - control\n4764  1306 response      other pretty_condition        impasse - control\n4765  1307 response      other pretty_condition        impasse - control\n4766  1308 response      other pretty_condition        impasse - control\n4767  1309 response      other pretty_condition        impasse - control\n4768  1310 response      other pretty_condition        impasse - control\n4769  1311 response      other pretty_condition        impasse - control\n4770  1312 response      other pretty_condition        impasse - control\n4771  1313 response      other pretty_condition        impasse - control\n4772  1314 response      other pretty_condition        impasse - control\n4773  1315 response      other pretty_condition        impasse - control\n4774  1316 response      other pretty_condition        impasse - control\n4775  1317 response      other pretty_condition        impasse - control\n4776  1318 response      other pretty_condition        impasse - control\n4777  1319 response      other pretty_condition        impasse - control\n4778  1320 response      other pretty_condition        impasse - control\n4779  1321 response      other pretty_condition        impasse - control\n4780  1322 response      other pretty_condition        impasse - control\n4781  1323 response      other pretty_condition        impasse - control\n4782  1324 response      other pretty_condition        impasse - control\n4783  1325 response      other pretty_condition        impasse - control\n4784  1326 response      other pretty_condition        impasse - control\n4785  1327 response      other pretty_condition        impasse - control\n4786  1328 response      other pretty_condition        impasse - control\n4787  1329 response      other pretty_condition        impasse - control\n4788  1330 response      other pretty_condition        impasse - control\n4789  1331 response      other pretty_condition        impasse - control\n4790  1332 response      other pretty_condition        impasse - control\n4791  1333 response      other pretty_condition        impasse - control\n4792  1334 response      other pretty_condition        impasse - control\n4793  1335 response      other pretty_condition        impasse - control\n4794  1336 response      other pretty_condition        impasse - control\n4795  1337 response      other pretty_condition        impasse - control\n4796  1338 response      other pretty_condition        impasse - control\n4797  1339 response      other pretty_condition        impasse - control\n4798  1340 response      other pretty_condition        impasse - control\n4799  1341 response      other pretty_condition        impasse - control\n4800  1342 response      other pretty_condition        impasse - control\n4801  1343 response      other pretty_condition        impasse - control\n4802  1344 response      other pretty_condition        impasse - control\n4803  1345 response      other pretty_condition        impasse - control\n4804  1346 response      other pretty_condition        impasse - control\n4805  1347 response      other pretty_condition        impasse - control\n4806  1348 response      other pretty_condition        impasse - control\n4807  1349 response      other pretty_condition        impasse - control\n4808  1350 response      other pretty_condition        impasse - control\n4809  1351 response      other pretty_condition        impasse - control\n4810  1352 response      other pretty_condition        impasse - control\n4811  1353 response      other pretty_condition        impasse - control\n4812  1354 response      other pretty_condition        impasse - control\n4813  1355 response      other pretty_condition        impasse - control\n4814  1356 response      other pretty_condition        impasse - control\n4815  1357 response      other pretty_condition        impasse - control\n4816  1358 response      other pretty_condition        impasse - control\n4817  1359 response      other pretty_condition        impasse - control\n4818  1360 response      other pretty_condition        impasse - control\n4819  1361 response      other pretty_condition        impasse - control\n4820  1362 response      other pretty_condition        impasse - control\n4821  1363 response      other pretty_condition        impasse - control\n4822  1364 response      other pretty_condition        impasse - control\n4823  1365 response      other pretty_condition        impasse - control\n4824  1366 response      other pretty_condition        impasse - control\n4825  1367 response      other pretty_condition        impasse - control\n4826  1368 response      other pretty_condition        impasse - control\n4827  1369 response      other pretty_condition        impasse - control\n4828  1370 response      other pretty_condition        impasse - control\n4829  1371 response      other pretty_condition        impasse - control\n4830  1372 response      other pretty_condition        impasse - control\n4831  1373 response      other pretty_condition        impasse - control\n4832  1374 response      other pretty_condition        impasse - control\n4833  1375 response      other pretty_condition        impasse - control\n4834  1376 response      other pretty_condition        impasse - control\n4835  1377 response      other pretty_condition        impasse - control\n4836  1378 response      other pretty_condition        impasse - control\n4837  1379 response      other pretty_condition        impasse - control\n4838  1380 response      other pretty_condition        impasse - control\n4839  1381 response      other pretty_condition        impasse - control\n4840  1382 response      other pretty_condition        impasse - control\n4841  1383 response      other pretty_condition        impasse - control\n4842  1384 response      other pretty_condition        impasse - control\n4843  1385 response      other pretty_condition        impasse - control\n4844  1386 response      other pretty_condition        impasse - control\n4845  1387 response      other pretty_condition        impasse - control\n4846  1388 response      other pretty_condition        impasse - control\n4847  1389 response      other pretty_condition        impasse - control\n4848  1390 response      other pretty_condition        impasse - control\n4849  1391 response      other pretty_condition        impasse - control\n4850  1392 response      other pretty_condition        impasse - control\n4851  1393 response      other pretty_condition        impasse - control\n4852  1394 response      other pretty_condition        impasse - control\n4853  1395 response      other pretty_condition        impasse - control\n4854  1396 response      other pretty_condition        impasse - control\n4855  1397 response      other pretty_condition        impasse - control\n4856  1398 response      other pretty_condition        impasse - control\n4857  1399 response      other pretty_condition        impasse - control\n4858  1400 response      other pretty_condition        impasse - control\n4859  1401 response      other pretty_condition        impasse - control\n4860  1402 response      other pretty_condition        impasse - control\n4861  1403 response      other pretty_condition        impasse - control\n4862  1404 response      other pretty_condition        impasse - control\n4863  1405 response      other pretty_condition        impasse - control\n4864  1406 response      other pretty_condition        impasse - control\n4865  1407 response      other pretty_condition        impasse - control\n4866  1408 response      other pretty_condition        impasse - control\n4867  1409 response      other pretty_condition        impasse - control\n4868  1410 response      other pretty_condition        impasse - control\n4869  1411 response      other pretty_condition        impasse - control\n4870  1412 response      other pretty_condition        impasse - control\n4871  1413 response      other pretty_condition        impasse - control\n4872  1414 response      other pretty_condition        impasse - control\n4873  1415 response      other pretty_condition        impasse - control\n4874  1416 response      other pretty_condition        impasse - control\n4875  1417 response      other pretty_condition        impasse - control\n4876  1418 response      other pretty_condition        impasse - control\n4877  1419 response      other pretty_condition        impasse - control\n4878  1420 response      other pretty_condition        impasse - control\n4879  1421 response      other pretty_condition        impasse - control\n4880  1422 response      other pretty_condition        impasse - control\n4881  1423 response      other pretty_condition        impasse - control\n4882  1424 response      other pretty_condition        impasse - control\n4883  1425 response      other pretty_condition        impasse - control\n4884  1426 response      other pretty_condition        impasse - control\n4885  1427 response      other pretty_condition        impasse - control\n4886  1428 response      other pretty_condition        impasse - control\n4887  1429 response      other pretty_condition        impasse - control\n4888  1430 response      other pretty_condition        impasse - control\n4889  1431 response      other pretty_condition        impasse - control\n4890  1432 response      other pretty_condition        impasse - control\n4891  1433 response      other pretty_condition        impasse - control\n4892  1434 response      other pretty_condition        impasse - control\n4893  1435 response      other pretty_condition        impasse - control\n4894  1436 response      other pretty_condition        impasse - control\n4895  1437 response      other pretty_condition        impasse - control\n4896  1438 response      other pretty_condition        impasse - control\n4897  1439 response      other pretty_condition        impasse - control\n4898  1440 response      other pretty_condition        impasse - control\n4899  1441 response      other pretty_condition        impasse - control\n4900  1442 response      other pretty_condition        impasse - control\n4901  1443 response      other pretty_condition        impasse - control\n4902  1444 response      other pretty_condition        impasse - control\n4903  1445 response      other pretty_condition        impasse - control\n4904  1446 response      other pretty_condition        impasse - control\n4905  1447 response      other pretty_condition        impasse - control\n4906  1448 response      other pretty_condition        impasse - control\n4907  1449 response      other pretty_condition        impasse - control\n4908  1450 response      other pretty_condition        impasse - control\n4909  1451 response      other pretty_condition        impasse - control\n4910  1452 response      other pretty_condition        impasse - control\n4911  1453 response      other pretty_condition        impasse - control\n4912  1454 response      other pretty_condition        impasse - control\n4913  1455 response      other pretty_condition        impasse - control\n4914  1456 response      other pretty_condition        impasse - control\n4915  1457 response      other pretty_condition        impasse - control\n4916  1458 response      other pretty_condition        impasse - control\n4917  1459 response      other pretty_condition        impasse - control\n4918  1460 response      other pretty_condition        impasse - control\n4919  1461 response      other pretty_condition        impasse - control\n4920  1462 response      other pretty_condition        impasse - control\n4921  1463 response      other pretty_condition        impasse - control\n4922  1464 response      other pretty_condition        impasse - control\n4923  1465 response      other pretty_condition        impasse - control\n4924  1466 response      other pretty_condition        impasse - control\n4925  1467 response      other pretty_condition        impasse - control\n4926  1468 response      other pretty_condition        impasse - control\n4927  1469 response      other pretty_condition        impasse - control\n4928  1470 response      other pretty_condition        impasse - control\n4929  1471 response      other pretty_condition        impasse - control\n4930  1472 response      other pretty_condition        impasse - control\n4931  1473 response      other pretty_condition        impasse - control\n4932  1474 response      other pretty_condition        impasse - control\n4933  1475 response      other pretty_condition        impasse - control\n4934  1476 response      other pretty_condition        impasse - control\n4935  1477 response      other pretty_condition        impasse - control\n4936  1478 response      other pretty_condition        impasse - control\n4937  1479 response      other pretty_condition        impasse - control\n4938  1480 response      other pretty_condition        impasse - control\n4939  1481 response      other pretty_condition        impasse - control\n4940  1482 response      other pretty_condition        impasse - control\n4941  1483 response      other pretty_condition        impasse - control\n4942  1484 response      other pretty_condition        impasse - control\n4943  1485 response      other pretty_condition        impasse - control\n4944  1486 response      other pretty_condition        impasse - control\n4945  1487 response      other pretty_condition        impasse - control\n4946  1488 response      other pretty_condition        impasse - control\n4947  1489 response      other pretty_condition        impasse - control\n4948  1490 response      other pretty_condition        impasse - control\n4949  1491 response      other pretty_condition        impasse - control\n4950  1492 response      other pretty_condition        impasse - control\n4951  1493 response      other pretty_condition        impasse - control\n4952  1494 response      other pretty_condition        impasse - control\n4953  1495 response      other pretty_condition        impasse - control\n4954  1496 response      other pretty_condition        impasse - control\n4955  1497 response      other pretty_condition        impasse - control\n4956  1498 response      other pretty_condition        impasse - control\n4957  1499 response      other pretty_condition        impasse - control\n4958  1500 response      other pretty_condition        impasse - control\n4959  1501 response      other pretty_condition        impasse - control\n4960  1502 response      other pretty_condition        impasse - control\n4961  1503 response      other pretty_condition        impasse - control\n4962  1504 response      other pretty_condition        impasse - control\n4963  1505 response      other pretty_condition        impasse - control\n4964  1506 response      other pretty_condition        impasse - control\n4965  1507 response      other pretty_condition        impasse - control\n4966  1508 response      other pretty_condition        impasse - control\n4967  1509 response      other pretty_condition        impasse - control\n4968  1510 response      other pretty_condition        impasse - control\n4969  1511 response      other pretty_condition        impasse - control\n4970  1512 response      other pretty_condition        impasse - control\n4971  1513 response      other pretty_condition        impasse - control\n4972  1514 response      other pretty_condition        impasse - control\n4973  1515 response      other pretty_condition        impasse - control\n4974  1516 response      other pretty_condition        impasse - control\n4975  1517 response      other pretty_condition        impasse - control\n4976  1518 response      other pretty_condition        impasse - control\n4977  1519 response      other pretty_condition        impasse - control\n4978  1520 response      other pretty_condition        impasse - control\n4979  1521 response      other pretty_condition        impasse - control\n4980  1522 response      other pretty_condition        impasse - control\n4981  1523 response      other pretty_condition        impasse - control\n4982  1524 response      other pretty_condition        impasse - control\n4983  1525 response      other pretty_condition        impasse - control\n4984  1526 response      other pretty_condition        impasse - control\n4985  1527 response      other pretty_condition        impasse - control\n4986  1528 response      other pretty_condition        impasse - control\n4987  1529 response      other pretty_condition        impasse - control\n4988  1530 response      other pretty_condition        impasse - control\n4989  1531 response      other pretty_condition        impasse - control\n4990  1532 response      other pretty_condition        impasse - control\n4991  1533 response      other pretty_condition        impasse - control\n4992  1534 response      other pretty_condition        impasse - control\n4993  1535 response      other pretty_condition        impasse - control\n4994  1536 response      other pretty_condition        impasse - control\n4995  1537 response      other pretty_condition        impasse - control\n4996  1538 response      other pretty_condition        impasse - control\n4997  1539 response      other pretty_condition        impasse - control\n4998  1540 response      other pretty_condition        impasse - control\n4999  1541 response      other pretty_condition        impasse - control\n5000  1542 response      other pretty_condition        impasse - control\n5001  1543 response      other pretty_condition        impasse - control\n5002  1544 response      other pretty_condition        impasse - control\n5003  1545 response      other pretty_condition        impasse - control\n5004  1546 response      other pretty_condition        impasse - control\n5005  1547 response      other pretty_condition        impasse - control\n5006  1548 response      other pretty_condition        impasse - control\n5007  1549 response      other pretty_condition        impasse - control\n5008  1550 response      other pretty_condition        impasse - control\n5009  1551 response      other pretty_condition        impasse - control\n5010  1552 response      other pretty_condition        impasse - control\n5011  1553 response      other pretty_condition        impasse - control\n5012  1554 response      other pretty_condition        impasse - control\n5013  1555 response      other pretty_condition        impasse - control\n5014  1556 response      other pretty_condition        impasse - control\n5015  1557 response      other pretty_condition        impasse - control\n5016  1558 response      other pretty_condition        impasse - control\n5017  1559 response      other pretty_condition        impasse - control\n5018  1560 response      other pretty_condition        impasse - control\n5019  1561 response      other pretty_condition        impasse - control\n5020  1562 response      other pretty_condition        impasse - control\n5021  1563 response      other pretty_condition        impasse - control\n5022  1564 response      other pretty_condition        impasse - control\n5023  1565 response      other pretty_condition        impasse - control\n5024  1566 response      other pretty_condition        impasse - control\n5025  1567 response      other pretty_condition        impasse - control\n5026  1568 response      other pretty_condition        impasse - control\n5027  1569 response      other pretty_condition        impasse - control\n5028  1570 response      other pretty_condition        impasse - control\n5029  1571 response      other pretty_condition        impasse - control\n5030  1572 response      other pretty_condition        impasse - control\n5031  1573 response      other pretty_condition        impasse - control\n5032  1574 response      other pretty_condition        impasse - control\n5033  1575 response      other pretty_condition        impasse - control\n5034  1576 response      other pretty_condition        impasse - control\n5035  1577 response      other pretty_condition        impasse - control\n5036  1578 response      other pretty_condition        impasse - control\n5037  1579 response      other pretty_condition        impasse - control\n5038  1580 response      other pretty_condition        impasse - control\n5039  1581 response      other pretty_condition        impasse - control\n5040  1582 response      other pretty_condition        impasse - control\n5041  1583 response      other pretty_condition        impasse - control\n5042  1584 response      other pretty_condition        impasse - control\n5043  1585 response      other pretty_condition        impasse - control\n5044  1586 response      other pretty_condition        impasse - control\n5045  1587 response      other pretty_condition        impasse - control\n5046  1588 response      other pretty_condition        impasse - control\n5047  1589 response      other pretty_condition        impasse - control\n5048  1590 response      other pretty_condition        impasse - control\n5049  1591 response      other pretty_condition        impasse - control\n5050  1592 response      other pretty_condition        impasse - control\n5051  1593 response      other pretty_condition        impasse - control\n5052  1594 response      other pretty_condition        impasse - control\n5053  1595 response      other pretty_condition        impasse - control\n5054  1596 response      other pretty_condition        impasse - control\n5055  1597 response      other pretty_condition        impasse - control\n5056  1598 response      other pretty_condition        impasse - control\n5057  1599 response      other pretty_condition        impasse - control\n5058  1600 response      other pretty_condition        impasse - control\n5059  1601 response      other pretty_condition        impasse - control\n5060  1602 response      other pretty_condition        impasse - control\n5061  1603 response      other pretty_condition        impasse - control\n5062  1604 response      other pretty_condition        impasse - control\n5063  1605 response      other pretty_condition        impasse - control\n5064  1606 response      other pretty_condition        impasse - control\n5065  1607 response      other pretty_condition        impasse - control\n5066  1608 response      other pretty_condition        impasse - control\n5067  1609 response      other pretty_condition        impasse - control\n5068  1610 response      other pretty_condition        impasse - control\n5069  1611 response      other pretty_condition        impasse - control\n5070  1612 response      other pretty_condition        impasse - control\n5071  1613 response      other pretty_condition        impasse - control\n5072  1614 response      other pretty_condition        impasse - control\n5073  1615 response      other pretty_condition        impasse - control\n5074  1616 response      other pretty_condition        impasse - control\n5075  1617 response      other pretty_condition        impasse - control\n5076  1618 response      other pretty_condition        impasse - control\n5077  1619 response      other pretty_condition        impasse - control\n5078  1620 response      other pretty_condition        impasse - control\n5079  1621 response      other pretty_condition        impasse - control\n5080  1622 response      other pretty_condition        impasse - control\n5081  1623 response      other pretty_condition        impasse - control\n5082  1624 response      other pretty_condition        impasse - control\n5083  1625 response      other pretty_condition        impasse - control\n5084  1626 response      other pretty_condition        impasse - control\n5085  1627 response      other pretty_condition        impasse - control\n5086  1628 response      other pretty_condition        impasse - control\n5087  1629 response      other pretty_condition        impasse - control\n5088  1630 response      other pretty_condition        impasse - control\n5089  1631 response      other pretty_condition        impasse - control\n5090  1632 response      other pretty_condition        impasse - control\n5091  1633 response      other pretty_condition        impasse - control\n5092  1634 response      other pretty_condition        impasse - control\n5093  1635 response      other pretty_condition        impasse - control\n5094  1636 response      other pretty_condition        impasse - control\n5095  1637 response      other pretty_condition        impasse - control\n5096  1638 response      other pretty_condition        impasse - control\n5097  1639 response      other pretty_condition        impasse - control\n5098  1640 response      other pretty_condition        impasse - control\n5099  1641 response      other pretty_condition        impasse - control\n5100  1642 response      other pretty_condition        impasse - control\n5101  1643 response      other pretty_condition        impasse - control\n5102  1644 response      other pretty_condition        impasse - control\n5103  1645 response      other pretty_condition        impasse - control\n5104  1646 response      other pretty_condition        impasse - control\n5105  1647 response      other pretty_condition        impasse - control\n5106  1648 response      other pretty_condition        impasse - control\n5107  1649 response      other pretty_condition        impasse - control\n5108  1650 response      other pretty_condition        impasse - control\n5109  1651 response      other pretty_condition        impasse - control\n5110  1652 response      other pretty_condition        impasse - control\n5111  1653 response      other pretty_condition        impasse - control\n5112  1654 response      other pretty_condition        impasse - control\n5113  1655 response      other pretty_condition        impasse - control\n5114  1656 response      other pretty_condition        impasse - control\n5115  1657 response      other pretty_condition        impasse - control\n5116  1658 response      other pretty_condition        impasse - control\n5117  1659 response      other pretty_condition        impasse - control\n5118  1660 response      other pretty_condition        impasse - control\n5119  1661 response      other pretty_condition        impasse - control\n5120  1662 response      other pretty_condition        impasse - control\n5121  1663 response      other pretty_condition        impasse - control\n5122  1664 response      other pretty_condition        impasse - control\n5123  1665 response      other pretty_condition        impasse - control\n5124  1666 response      other pretty_condition        impasse - control\n5125  1667 response      other pretty_condition        impasse - control\n5126  1668 response      other pretty_condition        impasse - control\n5127  1669 response      other pretty_condition        impasse - control\n5128  1670 response      other pretty_condition        impasse - control\n5129  1671 response      other pretty_condition        impasse - control\n5130  1672 response      other pretty_condition        impasse - control\n5131  1673 response      other pretty_condition        impasse - control\n5132  1674 response      other pretty_condition        impasse - control\n5133  1675 response      other pretty_condition        impasse - control\n5134  1676 response      other pretty_condition        impasse - control\n5135  1677 response      other pretty_condition        impasse - control\n5136  1678 response      other pretty_condition        impasse - control\n5137  1679 response      other pretty_condition        impasse - control\n5138  1680 response      other pretty_condition        impasse - control\n5139  1681 response      other pretty_condition        impasse - control\n5140  1682 response      other pretty_condition        impasse - control\n5141  1683 response      other pretty_condition        impasse - control\n5142  1684 response      other pretty_condition        impasse - control\n5143  1685 response      other pretty_condition        impasse - control\n5144  1686 response      other pretty_condition        impasse - control\n5145  1687 response      other pretty_condition        impasse - control\n5146  1688 response      other pretty_condition        impasse - control\n5147  1689 response      other pretty_condition        impasse - control\n5148  1690 response      other pretty_condition        impasse - control\n5149  1691 response      other pretty_condition        impasse - control\n5150  1692 response      other pretty_condition        impasse - control\n5151  1693 response      other pretty_condition        impasse - control\n5152  1694 response      other pretty_condition        impasse - control\n5153  1695 response      other pretty_condition        impasse - control\n5154  1696 response      other pretty_condition        impasse - control\n5155  1697 response      other pretty_condition        impasse - control\n5156  1698 response      other pretty_condition        impasse - control\n5157  1699 response      other pretty_condition        impasse - control\n5158  1700 response      other pretty_condition        impasse - control\n5159  1701 response      other pretty_condition        impasse - control\n5160  1702 response      other pretty_condition        impasse - control\n5161  1703 response      other pretty_condition        impasse - control\n5162  1704 response      other pretty_condition        impasse - control\n5163  1705 response      other pretty_condition        impasse - control\n5164  1706 response      other pretty_condition        impasse - control\n5165  1707 response      other pretty_condition        impasse - control\n5166  1708 response      other pretty_condition        impasse - control\n5167  1709 response      other pretty_condition        impasse - control\n5168  1710 response      other pretty_condition        impasse - control\n5169  1711 response      other pretty_condition        impasse - control\n5170  1712 response      other pretty_condition        impasse - control\n5171  1713 response      other pretty_condition        impasse - control\n5172  1714 response      other pretty_condition        impasse - control\n5173  1715 response      other pretty_condition        impasse - control\n5174  1716 response      other pretty_condition        impasse - control\n5175  1717 response      other pretty_condition        impasse - control\n5176  1718 response      other pretty_condition        impasse - control\n5177  1719 response      other pretty_condition        impasse - control\n5178  1720 response      other pretty_condition        impasse - control\n5179  1721 response      other pretty_condition        impasse - control\n5180  1722 response      other pretty_condition        impasse - control\n5181  1723 response      other pretty_condition        impasse - control\n5182  1724 response      other pretty_condition        impasse - control\n5183  1725 response      other pretty_condition        impasse - control\n5184  1726 response      other pretty_condition        impasse - control\n5185  1727 response      other pretty_condition        impasse - control\n5186  1728 response      other pretty_condition        impasse - control\n5187  1729 response      other pretty_condition        impasse - control\n5188     1 response      other      ospan_split high-memory - low-memory\n5189     2 response      other      ospan_split high-memory - low-memory\n5190     3 response      other      ospan_split high-memory - low-memory\n5191     4 response      other      ospan_split high-memory - low-memory\n5192     5 response      other      ospan_split high-memory - low-memory\n5193     6 response      other      ospan_split high-memory - low-memory\n5194     7 response      other      ospan_split high-memory - low-memory\n5195     8 response      other      ospan_split high-memory - low-memory\n5196     9 response      other      ospan_split high-memory - low-memory\n5197    10 response      other      ospan_split high-memory - low-memory\n5198    11 response      other      ospan_split high-memory - low-memory\n5199    12 response      other      ospan_split high-memory - low-memory\n5200    13 response      other      ospan_split high-memory - low-memory\n5201    14 response      other      ospan_split high-memory - low-memory\n5202    15 response      other      ospan_split high-memory - low-memory\n5203    16 response      other      ospan_split high-memory - low-memory\n5204    17 response      other      ospan_split high-memory - low-memory\n5205    18 response      other      ospan_split high-memory - low-memory\n5206    19 response      other      ospan_split high-memory - low-memory\n5207    20 response      other      ospan_split high-memory - low-memory\n5208    21 response      other      ospan_split high-memory - low-memory\n5209    22 response      other      ospan_split high-memory - low-memory\n5210    23 response      other      ospan_split high-memory - low-memory\n5211    24 response      other      ospan_split high-memory - low-memory\n5212    25 response      other      ospan_split high-memory - low-memory\n5213    26 response      other      ospan_split high-memory - low-memory\n5214    27 response      other      ospan_split high-memory - low-memory\n5215    28 response      other      ospan_split high-memory - low-memory\n5216    29 response      other      ospan_split high-memory - low-memory\n5217    30 response      other      ospan_split high-memory - low-memory\n5218    31 response      other      ospan_split high-memory - low-memory\n5219    32 response      other      ospan_split high-memory - low-memory\n5220    33 response      other      ospan_split high-memory - low-memory\n5221    34 response      other      ospan_split high-memory - low-memory\n5222    35 response      other      ospan_split high-memory - low-memory\n5223    36 response      other      ospan_split high-memory - low-memory\n5224    37 response      other      ospan_split high-memory - low-memory\n5225    38 response      other      ospan_split high-memory - low-memory\n5226    39 response      other      ospan_split high-memory - low-memory\n5227    40 response      other      ospan_split high-memory - low-memory\n5228    41 response      other      ospan_split high-memory - low-memory\n5229    42 response      other      ospan_split high-memory - low-memory\n5230    43 response      other      ospan_split high-memory - low-memory\n5231    44 response      other      ospan_split high-memory - low-memory\n5232    45 response      other      ospan_split high-memory - low-memory\n5233    46 response      other      ospan_split high-memory - low-memory\n5234    47 response      other      ospan_split high-memory - low-memory\n5235    48 response      other      ospan_split high-memory - low-memory\n5236    49 response      other      ospan_split high-memory - low-memory\n5237    50 response      other      ospan_split high-memory - low-memory\n5238    51 response      other      ospan_split high-memory - low-memory\n5239    52 response      other      ospan_split high-memory - low-memory\n5240    53 response      other      ospan_split high-memory - low-memory\n5241    54 response      other      ospan_split high-memory - low-memory\n5242    55 response      other      ospan_split high-memory - low-memory\n5243    56 response      other      ospan_split high-memory - low-memory\n5244    57 response      other      ospan_split high-memory - low-memory\n5245    58 response      other      ospan_split high-memory - low-memory\n5246    59 response      other      ospan_split high-memory - low-memory\n5247    60 response      other      ospan_split high-memory - low-memory\n5248    61 response      other      ospan_split high-memory - low-memory\n5249    62 response      other      ospan_split high-memory - low-memory\n5250    63 response      other      ospan_split high-memory - low-memory\n5251    64 response      other      ospan_split high-memory - low-memory\n5252    65 response      other      ospan_split high-memory - low-memory\n5253    66 response      other      ospan_split high-memory - low-memory\n5254    67 response      other      ospan_split high-memory - low-memory\n5255    68 response      other      ospan_split high-memory - low-memory\n5256    69 response      other      ospan_split high-memory - low-memory\n5257    70 response      other      ospan_split high-memory - low-memory\n5258    71 response      other      ospan_split high-memory - low-memory\n5259    72 response      other      ospan_split high-memory - low-memory\n5260    73 response      other      ospan_split high-memory - low-memory\n5261    74 response      other      ospan_split high-memory - low-memory\n5262    75 response      other      ospan_split high-memory - low-memory\n5263    76 response      other      ospan_split high-memory - low-memory\n5264    77 response      other      ospan_split high-memory - low-memory\n5265    78 response      other      ospan_split high-memory - low-memory\n5266    79 response      other      ospan_split high-memory - low-memory\n5267    80 response      other      ospan_split high-memory - low-memory\n5268    81 response      other      ospan_split high-memory - low-memory\n5269    82 response      other      ospan_split high-memory - low-memory\n5270    83 response      other      ospan_split high-memory - low-memory\n5271    84 response      other      ospan_split high-memory - low-memory\n5272    85 response      other      ospan_split high-memory - low-memory\n5273    86 response      other      ospan_split high-memory - low-memory\n5274    87 response      other      ospan_split high-memory - low-memory\n5275    88 response      other      ospan_split high-memory - low-memory\n5276    89 response      other      ospan_split high-memory - low-memory\n5277    90 response      other      ospan_split high-memory - low-memory\n5278    91 response      other      ospan_split high-memory - low-memory\n5279    92 response      other      ospan_split high-memory - low-memory\n5280    93 response      other      ospan_split high-memory - low-memory\n5281    94 response      other      ospan_split high-memory - low-memory\n5282    95 response      other      ospan_split high-memory - low-memory\n5283    96 response      other      ospan_split high-memory - low-memory\n5284    97 response      other      ospan_split high-memory - low-memory\n5285    98 response      other      ospan_split high-memory - low-memory\n5286    99 response      other      ospan_split high-memory - low-memory\n5287   100 response      other      ospan_split high-memory - low-memory\n5288   101 response      other      ospan_split high-memory - low-memory\n5289   102 response      other      ospan_split high-memory - low-memory\n5290   103 response      other      ospan_split high-memory - low-memory\n5291   104 response      other      ospan_split high-memory - low-memory\n5292   105 response      other      ospan_split high-memory - low-memory\n5293   106 response      other      ospan_split high-memory - low-memory\n5294   107 response      other      ospan_split high-memory - low-memory\n5295   108 response      other      ospan_split high-memory - low-memory\n5296   109 response      other      ospan_split high-memory - low-memory\n5297   110 response      other      ospan_split high-memory - low-memory\n5298   111 response      other      ospan_split high-memory - low-memory\n5299   112 response      other      ospan_split high-memory - low-memory\n5300   113 response      other      ospan_split high-memory - low-memory\n5301   114 response      other      ospan_split high-memory - low-memory\n5302   115 response      other      ospan_split high-memory - low-memory\n5303   116 response      other      ospan_split high-memory - low-memory\n5304   117 response      other      ospan_split high-memory - low-memory\n5305   118 response      other      ospan_split high-memory - low-memory\n5306   119 response      other      ospan_split high-memory - low-memory\n5307   120 response      other      ospan_split high-memory - low-memory\n5308   121 response      other      ospan_split high-memory - low-memory\n5309   122 response      other      ospan_split high-memory - low-memory\n5310   123 response      other      ospan_split high-memory - low-memory\n5311   124 response      other      ospan_split high-memory - low-memory\n5312   125 response      other      ospan_split high-memory - low-memory\n5313   126 response      other      ospan_split high-memory - low-memory\n5314   127 response      other      ospan_split high-memory - low-memory\n5315   128 response      other      ospan_split high-memory - low-memory\n5316   129 response      other      ospan_split high-memory - low-memory\n5317   130 response      other      ospan_split high-memory - low-memory\n5318   131 response      other      ospan_split high-memory - low-memory\n5319   132 response      other      ospan_split high-memory - low-memory\n5320   133 response      other      ospan_split high-memory - low-memory\n5321   134 response      other      ospan_split high-memory - low-memory\n5322   135 response      other      ospan_split high-memory - low-memory\n5323   136 response      other      ospan_split high-memory - low-memory\n5324   137 response      other      ospan_split high-memory - low-memory\n5325   138 response      other      ospan_split high-memory - low-memory\n5326   139 response      other      ospan_split high-memory - low-memory\n5327   140 response      other      ospan_split high-memory - low-memory\n5328   141 response      other      ospan_split high-memory - low-memory\n5329   142 response      other      ospan_split high-memory - low-memory\n5330   143 response      other      ospan_split high-memory - low-memory\n5331   144 response      other      ospan_split high-memory - low-memory\n5332   145 response      other      ospan_split high-memory - low-memory\n5333   146 response      other      ospan_split high-memory - low-memory\n5334   147 response      other      ospan_split high-memory - low-memory\n5335   148 response      other      ospan_split high-memory - low-memory\n5336   149 response      other      ospan_split high-memory - low-memory\n5337   150 response      other      ospan_split high-memory - low-memory\n5338   151 response      other      ospan_split high-memory - low-memory\n5339   152 response      other      ospan_split high-memory - low-memory\n5340   153 response      other      ospan_split high-memory - low-memory\n5341   154 response      other      ospan_split high-memory - low-memory\n5342   155 response      other      ospan_split high-memory - low-memory\n5343   156 response      other      ospan_split high-memory - low-memory\n5344   157 response      other      ospan_split high-memory - low-memory\n5345   158 response      other      ospan_split high-memory - low-memory\n5346   159 response      other      ospan_split high-memory - low-memory\n5347   160 response      other      ospan_split high-memory - low-memory\n5348   161 response      other      ospan_split high-memory - low-memory\n5349   162 response      other      ospan_split high-memory - low-memory\n5350   163 response      other      ospan_split high-memory - low-memory\n5351   164 response      other      ospan_split high-memory - low-memory\n5352   165 response      other      ospan_split high-memory - low-memory\n5353   166 response      other      ospan_split high-memory - low-memory\n5354   167 response      other      ospan_split high-memory - low-memory\n5355   168 response      other      ospan_split high-memory - low-memory\n5356   169 response      other      ospan_split high-memory - low-memory\n5357   170 response      other      ospan_split high-memory - low-memory\n5358   171 response      other      ospan_split high-memory - low-memory\n5359   172 response      other      ospan_split high-memory - low-memory\n5360   173 response      other      ospan_split high-memory - low-memory\n5361   174 response      other      ospan_split high-memory - low-memory\n5362   175 response      other      ospan_split high-memory - low-memory\n5363   176 response      other      ospan_split high-memory - low-memory\n5364   177 response      other      ospan_split high-memory - low-memory\n5365   178 response      other      ospan_split high-memory - low-memory\n5366   179 response      other      ospan_split high-memory - low-memory\n5367   180 response      other      ospan_split high-memory - low-memory\n5368   181 response      other      ospan_split high-memory - low-memory\n5369   182 response      other      ospan_split high-memory - low-memory\n5370   183 response      other      ospan_split high-memory - low-memory\n5371   184 response      other      ospan_split high-memory - low-memory\n5372   185 response      other      ospan_split high-memory - low-memory\n5373   186 response      other      ospan_split high-memory - low-memory\n5374   187 response      other      ospan_split high-memory - low-memory\n5375   188 response      other      ospan_split high-memory - low-memory\n5376   189 response      other      ospan_split high-memory - low-memory\n5377   190 response      other      ospan_split high-memory - low-memory\n5378   191 response      other      ospan_split high-memory - low-memory\n5379   192 response      other      ospan_split high-memory - low-memory\n5380   193 response      other      ospan_split high-memory - low-memory\n5381   194 response      other      ospan_split high-memory - low-memory\n5382   195 response      other      ospan_split high-memory - low-memory\n5383   196 response      other      ospan_split high-memory - low-memory\n5384   197 response      other      ospan_split high-memory - low-memory\n5385   198 response      other      ospan_split high-memory - low-memory\n5386   199 response      other      ospan_split high-memory - low-memory\n5387   200 response      other      ospan_split high-memory - low-memory\n5388   201 response      other      ospan_split high-memory - low-memory\n5389   202 response      other      ospan_split high-memory - low-memory\n5390   203 response      other      ospan_split high-memory - low-memory\n5391   204 response      other      ospan_split high-memory - low-memory\n5392   205 response      other      ospan_split high-memory - low-memory\n5393   206 response      other      ospan_split high-memory - low-memory\n5394   207 response      other      ospan_split high-memory - low-memory\n5395   208 response      other      ospan_split high-memory - low-memory\n5396   209 response      other      ospan_split high-memory - low-memory\n5397   210 response      other      ospan_split high-memory - low-memory\n5398   211 response      other      ospan_split high-memory - low-memory\n5399   212 response      other      ospan_split high-memory - low-memory\n5400   213 response      other      ospan_split high-memory - low-memory\n5401   214 response      other      ospan_split high-memory - low-memory\n5402   215 response      other      ospan_split high-memory - low-memory\n5403   216 response      other      ospan_split high-memory - low-memory\n5404   217 response      other      ospan_split high-memory - low-memory\n5405   218 response      other      ospan_split high-memory - low-memory\n5406   219 response      other      ospan_split high-memory - low-memory\n5407   220 response      other      ospan_split high-memory - low-memory\n5408   221 response      other      ospan_split high-memory - low-memory\n5409   222 response      other      ospan_split high-memory - low-memory\n5410   223 response      other      ospan_split high-memory - low-memory\n5411   224 response      other      ospan_split high-memory - low-memory\n5412   225 response      other      ospan_split high-memory - low-memory\n5413   226 response      other      ospan_split high-memory - low-memory\n5414   227 response      other      ospan_split high-memory - low-memory\n5415   228 response      other      ospan_split high-memory - low-memory\n5416   229 response      other      ospan_split high-memory - low-memory\n5417   230 response      other      ospan_split high-memory - low-memory\n5418   231 response      other      ospan_split high-memory - low-memory\n5419   232 response      other      ospan_split high-memory - low-memory\n5420   233 response      other      ospan_split high-memory - low-memory\n5421   234 response      other      ospan_split high-memory - low-memory\n5422   235 response      other      ospan_split high-memory - low-memory\n5423   236 response      other      ospan_split high-memory - low-memory\n5424   237 response      other      ospan_split high-memory - low-memory\n5425   238 response      other      ospan_split high-memory - low-memory\n5426   239 response      other      ospan_split high-memory - low-memory\n5427   240 response      other      ospan_split high-memory - low-memory\n5428   241 response      other      ospan_split high-memory - low-memory\n5429   242 response      other      ospan_split high-memory - low-memory\n5430   243 response      other      ospan_split high-memory - low-memory\n5431   244 response      other      ospan_split high-memory - low-memory\n5432   245 response      other      ospan_split high-memory - low-memory\n5433   246 response      other      ospan_split high-memory - low-memory\n5434   247 response      other      ospan_split high-memory - low-memory\n5435   248 response      other      ospan_split high-memory - low-memory\n5436   249 response      other      ospan_split high-memory - low-memory\n5437   250 response      other      ospan_split high-memory - low-memory\n5438   251 response      other      ospan_split high-memory - low-memory\n5439   252 response      other      ospan_split high-memory - low-memory\n5440   253 response      other      ospan_split high-memory - low-memory\n5441   254 response      other      ospan_split high-memory - low-memory\n5442   255 response      other      ospan_split high-memory - low-memory\n5443   256 response      other      ospan_split high-memory - low-memory\n5444   257 response      other      ospan_split high-memory - low-memory\n5445   258 response      other      ospan_split high-memory - low-memory\n5446   259 response      other      ospan_split high-memory - low-memory\n5447   260 response      other      ospan_split high-memory - low-memory\n5448   261 response      other      ospan_split high-memory - low-memory\n5449   262 response      other      ospan_split high-memory - low-memory\n5450   263 response      other      ospan_split high-memory - low-memory\n5451   264 response      other      ospan_split high-memory - low-memory\n5452   265 response      other      ospan_split high-memory - low-memory\n5453   266 response      other      ospan_split high-memory - low-memory\n5454   267 response      other      ospan_split high-memory - low-memory\n5455   268 response      other      ospan_split high-memory - low-memory\n5456   269 response      other      ospan_split high-memory - low-memory\n5457   270 response      other      ospan_split high-memory - low-memory\n5458   271 response      other      ospan_split high-memory - low-memory\n5459   272 response      other      ospan_split high-memory - low-memory\n5460   273 response      other      ospan_split high-memory - low-memory\n5461   274 response      other      ospan_split high-memory - low-memory\n5462   275 response      other      ospan_split high-memory - low-memory\n5463   276 response      other      ospan_split high-memory - low-memory\n5464   277 response      other      ospan_split high-memory - low-memory\n5465   278 response      other      ospan_split high-memory - low-memory\n5466   279 response      other      ospan_split high-memory - low-memory\n5467   280 response      other      ospan_split high-memory - low-memory\n5468   281 response      other      ospan_split high-memory - low-memory\n5469   282 response      other      ospan_split high-memory - low-memory\n5470   283 response      other      ospan_split high-memory - low-memory\n5471   284 response      other      ospan_split high-memory - low-memory\n5472   285 response      other      ospan_split high-memory - low-memory\n5473   286 response      other      ospan_split high-memory - low-memory\n5474   287 response      other      ospan_split high-memory - low-memory\n5475   288 response      other      ospan_split high-memory - low-memory\n5476   289 response      other      ospan_split high-memory - low-memory\n5477   290 response      other      ospan_split high-memory - low-memory\n5478   291 response      other      ospan_split high-memory - low-memory\n5479   292 response      other      ospan_split high-memory - low-memory\n5480   293 response      other      ospan_split high-memory - low-memory\n5481   294 response      other      ospan_split high-memory - low-memory\n5482   295 response      other      ospan_split high-memory - low-memory\n5483   296 response      other      ospan_split high-memory - low-memory\n5484   297 response      other      ospan_split high-memory - low-memory\n5485   298 response      other      ospan_split high-memory - low-memory\n5486   299 response      other      ospan_split high-memory - low-memory\n5487   300 response      other      ospan_split high-memory - low-memory\n5488   301 response      other      ospan_split high-memory - low-memory\n5489   302 response      other      ospan_split high-memory - low-memory\n5490   303 response      other      ospan_split high-memory - low-memory\n5491   304 response      other      ospan_split high-memory - low-memory\n5492   305 response      other      ospan_split high-memory - low-memory\n5493   306 response      other      ospan_split high-memory - low-memory\n5494   307 response      other      ospan_split high-memory - low-memory\n5495   308 response      other      ospan_split high-memory - low-memory\n5496   309 response      other      ospan_split high-memory - low-memory\n5497   310 response      other      ospan_split high-memory - low-memory\n5498   311 response      other      ospan_split high-memory - low-memory\n5499   312 response      other      ospan_split high-memory - low-memory\n5500   313 response      other      ospan_split high-memory - low-memory\n5501   314 response      other      ospan_split high-memory - low-memory\n5502   315 response      other      ospan_split high-memory - low-memory\n5503   316 response      other      ospan_split high-memory - low-memory\n5504   317 response      other      ospan_split high-memory - low-memory\n5505   318 response      other      ospan_split high-memory - low-memory\n5506   319 response      other      ospan_split high-memory - low-memory\n5507   320 response      other      ospan_split high-memory - low-memory\n5508   321 response      other      ospan_split high-memory - low-memory\n5509   322 response      other      ospan_split high-memory - low-memory\n5510   323 response      other      ospan_split high-memory - low-memory\n5511   324 response      other      ospan_split high-memory - low-memory\n5512   325 response      other      ospan_split high-memory - low-memory\n5513   326 response      other      ospan_split high-memory - low-memory\n5514   327 response      other      ospan_split high-memory - low-memory\n5515   328 response      other      ospan_split high-memory - low-memory\n5516   329 response      other      ospan_split high-memory - low-memory\n5517   330 response      other      ospan_split high-memory - low-memory\n5518   331 response      other      ospan_split high-memory - low-memory\n5519   332 response      other      ospan_split high-memory - low-memory\n5520   333 response      other      ospan_split high-memory - low-memory\n5521   334 response      other      ospan_split high-memory - low-memory\n5522   335 response      other      ospan_split high-memory - low-memory\n5523   336 response      other      ospan_split high-memory - low-memory\n5524   337 response      other      ospan_split high-memory - low-memory\n5525   338 response      other      ospan_split high-memory - low-memory\n5526   339 response      other      ospan_split high-memory - low-memory\n5527   340 response      other      ospan_split high-memory - low-memory\n5528   341 response      other      ospan_split high-memory - low-memory\n5529   342 response      other      ospan_split high-memory - low-memory\n5530   343 response      other      ospan_split high-memory - low-memory\n5531   344 response      other      ospan_split high-memory - low-memory\n5532   345 response      other      ospan_split high-memory - low-memory\n5533   346 response      other      ospan_split high-memory - low-memory\n5534   347 response      other      ospan_split high-memory - low-memory\n5535   348 response      other      ospan_split high-memory - low-memory\n5536   349 response      other      ospan_split high-memory - low-memory\n5537   350 response      other      ospan_split high-memory - low-memory\n5538   351 response      other      ospan_split high-memory - low-memory\n5539   352 response      other      ospan_split high-memory - low-memory\n5540   353 response      other      ospan_split high-memory - low-memory\n5541   354 response      other      ospan_split high-memory - low-memory\n5542   355 response      other      ospan_split high-memory - low-memory\n5543   356 response      other      ospan_split high-memory - low-memory\n5544   357 response      other      ospan_split high-memory - low-memory\n5545   358 response      other      ospan_split high-memory - low-memory\n5546   359 response      other      ospan_split high-memory - low-memory\n5547   360 response      other      ospan_split high-memory - low-memory\n5548   361 response      other      ospan_split high-memory - low-memory\n5549   362 response      other      ospan_split high-memory - low-memory\n5550   363 response      other      ospan_split high-memory - low-memory\n5551   364 response      other      ospan_split high-memory - low-memory\n5552   365 response      other      ospan_split high-memory - low-memory\n5553   366 response      other      ospan_split high-memory - low-memory\n5554   367 response      other      ospan_split high-memory - low-memory\n5555   368 response      other      ospan_split high-memory - low-memory\n5556   369 response      other      ospan_split high-memory - low-memory\n5557   370 response      other      ospan_split high-memory - low-memory\n5558   371 response      other      ospan_split high-memory - low-memory\n5559   372 response      other      ospan_split high-memory - low-memory\n5560   373 response      other      ospan_split high-memory - low-memory\n5561   374 response      other      ospan_split high-memory - low-memory\n5562   375 response      other      ospan_split high-memory - low-memory\n5563   376 response      other      ospan_split high-memory - low-memory\n5564   377 response      other      ospan_split high-memory - low-memory\n5565   378 response      other      ospan_split high-memory - low-memory\n5566   379 response      other      ospan_split high-memory - low-memory\n5567   380 response      other      ospan_split high-memory - low-memory\n5568   381 response      other      ospan_split high-memory - low-memory\n5569   382 response      other      ospan_split high-memory - low-memory\n5570   383 response      other      ospan_split high-memory - low-memory\n5571   384 response      other      ospan_split high-memory - low-memory\n5572   385 response      other      ospan_split high-memory - low-memory\n5573   386 response      other      ospan_split high-memory - low-memory\n5574   387 response      other      ospan_split high-memory - low-memory\n5575   388 response      other      ospan_split high-memory - low-memory\n5576   389 response      other      ospan_split high-memory - low-memory\n5577   390 response      other      ospan_split high-memory - low-memory\n5578   391 response      other      ospan_split high-memory - low-memory\n5579   392 response      other      ospan_split high-memory - low-memory\n5580   393 response      other      ospan_split high-memory - low-memory\n5581   394 response      other      ospan_split high-memory - low-memory\n5582   395 response      other      ospan_split high-memory - low-memory\n5583   396 response      other      ospan_split high-memory - low-memory\n5584   397 response      other      ospan_split high-memory - low-memory\n5585   398 response      other      ospan_split high-memory - low-memory\n5586   399 response      other      ospan_split high-memory - low-memory\n5587   400 response      other      ospan_split high-memory - low-memory\n5588   401 response      other      ospan_split high-memory - low-memory\n5589   402 response      other      ospan_split high-memory - low-memory\n5590   403 response      other      ospan_split high-memory - low-memory\n5591   404 response      other      ospan_split high-memory - low-memory\n5592   405 response      other      ospan_split high-memory - low-memory\n5593   406 response      other      ospan_split high-memory - low-memory\n5594   407 response      other      ospan_split high-memory - low-memory\n5595   408 response      other      ospan_split high-memory - low-memory\n5596   409 response      other      ospan_split high-memory - low-memory\n5597   410 response      other      ospan_split high-memory - low-memory\n5598   411 response      other      ospan_split high-memory - low-memory\n5599   412 response      other      ospan_split high-memory - low-memory\n5600   413 response      other      ospan_split high-memory - low-memory\n5601   414 response      other      ospan_split high-memory - low-memory\n5602   415 response      other      ospan_split high-memory - low-memory\n5603   416 response      other      ospan_split high-memory - low-memory\n5604   417 response      other      ospan_split high-memory - low-memory\n5605   418 response      other      ospan_split high-memory - low-memory\n5606   419 response      other      ospan_split high-memory - low-memory\n5607   420 response      other      ospan_split high-memory - low-memory\n5608   421 response      other      ospan_split high-memory - low-memory\n5609   422 response      other      ospan_split high-memory - low-memory\n5610   423 response      other      ospan_split high-memory - low-memory\n5611   424 response      other      ospan_split high-memory - low-memory\n5612   425 response      other      ospan_split high-memory - low-memory\n5613   426 response      other      ospan_split high-memory - low-memory\n5614   427 response      other      ospan_split high-memory - low-memory\n5615   428 response      other      ospan_split high-memory - low-memory\n5616   429 response      other      ospan_split high-memory - low-memory\n5617   430 response      other      ospan_split high-memory - low-memory\n5618   431 response      other      ospan_split high-memory - low-memory\n5619   432 response      other      ospan_split high-memory - low-memory\n5620   433 response      other      ospan_split high-memory - low-memory\n5621   434 response      other      ospan_split high-memory - low-memory\n5622   435 response      other      ospan_split high-memory - low-memory\n5623   436 response      other      ospan_split high-memory - low-memory\n5624   437 response      other      ospan_split high-memory - low-memory\n5625   438 response      other      ospan_split high-memory - low-memory\n5626   439 response      other      ospan_split high-memory - low-memory\n5627   440 response      other      ospan_split high-memory - low-memory\n5628   441 response      other      ospan_split high-memory - low-memory\n5629   442 response      other      ospan_split high-memory - low-memory\n5630   443 response      other      ospan_split high-memory - low-memory\n5631   444 response      other      ospan_split high-memory - low-memory\n5632   445 response      other      ospan_split high-memory - low-memory\n5633   446 response      other      ospan_split high-memory - low-memory\n5634   447 response      other      ospan_split high-memory - low-memory\n5635   448 response      other      ospan_split high-memory - low-memory\n5636   449 response      other      ospan_split high-memory - low-memory\n5637   450 response      other      ospan_split high-memory - low-memory\n5638   451 response      other      ospan_split high-memory - low-memory\n5639   452 response      other      ospan_split high-memory - low-memory\n5640   453 response      other      ospan_split high-memory - low-memory\n5641   454 response      other      ospan_split high-memory - low-memory\n5642   455 response      other      ospan_split high-memory - low-memory\n5643   456 response      other      ospan_split high-memory - low-memory\n5644   457 response      other      ospan_split high-memory - low-memory\n5645   458 response      other      ospan_split high-memory - low-memory\n5646   459 response      other      ospan_split high-memory - low-memory\n5647   460 response      other      ospan_split high-memory - low-memory\n5648   461 response      other      ospan_split high-memory - low-memory\n5649   462 response      other      ospan_split high-memory - low-memory\n5650   463 response      other      ospan_split high-memory - low-memory\n5651   464 response      other      ospan_split high-memory - low-memory\n5652   465 response      other      ospan_split high-memory - low-memory\n5653   466 response      other      ospan_split high-memory - low-memory\n5654   467 response      other      ospan_split high-memory - low-memory\n5655   468 response      other      ospan_split high-memory - low-memory\n5656   469 response      other      ospan_split high-memory - low-memory\n5657   470 response      other      ospan_split high-memory - low-memory\n5658   471 response      other      ospan_split high-memory - low-memory\n5659   472 response      other      ospan_split high-memory - low-memory\n5660   473 response      other      ospan_split high-memory - low-memory\n5661   474 response      other      ospan_split high-memory - low-memory\n5662   475 response      other      ospan_split high-memory - low-memory\n5663   476 response      other      ospan_split high-memory - low-memory\n5664   477 response      other      ospan_split high-memory - low-memory\n5665   478 response      other      ospan_split high-memory - low-memory\n5666   479 response      other      ospan_split high-memory - low-memory\n5667   480 response      other      ospan_split high-memory - low-memory\n5668   481 response      other      ospan_split high-memory - low-memory\n5669   482 response      other      ospan_split high-memory - low-memory\n5670   483 response      other      ospan_split high-memory - low-memory\n5671   484 response      other      ospan_split high-memory - low-memory\n5672   485 response      other      ospan_split high-memory - low-memory\n5673   486 response      other      ospan_split high-memory - low-memory\n5674   487 response      other      ospan_split high-memory - low-memory\n5675   488 response      other      ospan_split high-memory - low-memory\n5676   489 response      other      ospan_split high-memory - low-memory\n5677   490 response      other      ospan_split high-memory - low-memory\n5678   491 response      other      ospan_split high-memory - low-memory\n5679   492 response      other      ospan_split high-memory - low-memory\n5680   493 response      other      ospan_split high-memory - low-memory\n5681   494 response      other      ospan_split high-memory - low-memory\n5682   495 response      other      ospan_split high-memory - low-memory\n5683   496 response      other      ospan_split high-memory - low-memory\n5684   497 response      other      ospan_split high-memory - low-memory\n5685   498 response      other      ospan_split high-memory - low-memory\n5686   499 response      other      ospan_split high-memory - low-memory\n5687   500 response      other      ospan_split high-memory - low-memory\n5688   501 response      other      ospan_split high-memory - low-memory\n5689   502 response      other      ospan_split high-memory - low-memory\n5690   503 response      other      ospan_split high-memory - low-memory\n5691   504 response      other      ospan_split high-memory - low-memory\n5692   505 response      other      ospan_split high-memory - low-memory\n5693   506 response      other      ospan_split high-memory - low-memory\n5694   507 response      other      ospan_split high-memory - low-memory\n5695   508 response      other      ospan_split high-memory - low-memory\n5696   509 response      other      ospan_split high-memory - low-memory\n5697   510 response      other      ospan_split high-memory - low-memory\n5698   511 response      other      ospan_split high-memory - low-memory\n5699   512 response      other      ospan_split high-memory - low-memory\n5700   513 response      other      ospan_split high-memory - low-memory\n5701   514 response      other      ospan_split high-memory - low-memory\n5702   515 response      other      ospan_split high-memory - low-memory\n5703   516 response      other      ospan_split high-memory - low-memory\n5704   517 response      other      ospan_split high-memory - low-memory\n5705   518 response      other      ospan_split high-memory - low-memory\n5706   519 response      other      ospan_split high-memory - low-memory\n5707   520 response      other      ospan_split high-memory - low-memory\n5708   521 response      other      ospan_split high-memory - low-memory\n5709   522 response      other      ospan_split high-memory - low-memory\n5710   523 response      other      ospan_split high-memory - low-memory\n5711   524 response      other      ospan_split high-memory - low-memory\n5712   525 response      other      ospan_split high-memory - low-memory\n5713   526 response      other      ospan_split high-memory - low-memory\n5714   527 response      other      ospan_split high-memory - low-memory\n5715   528 response      other      ospan_split high-memory - low-memory\n5716   529 response      other      ospan_split high-memory - low-memory\n5717   530 response      other      ospan_split high-memory - low-memory\n5718   531 response      other      ospan_split high-memory - low-memory\n5719   532 response      other      ospan_split high-memory - low-memory\n5720   533 response      other      ospan_split high-memory - low-memory\n5721   534 response      other      ospan_split high-memory - low-memory\n5722   535 response      other      ospan_split high-memory - low-memory\n5723   536 response      other      ospan_split high-memory - low-memory\n5724   537 response      other      ospan_split high-memory - low-memory\n5725   538 response      other      ospan_split high-memory - low-memory\n5726   539 response      other      ospan_split high-memory - low-memory\n5727   540 response      other      ospan_split high-memory - low-memory\n5728   541 response      other      ospan_split high-memory - low-memory\n5729   542 response      other      ospan_split high-memory - low-memory\n5730   543 response      other      ospan_split high-memory - low-memory\n5731   544 response      other      ospan_split high-memory - low-memory\n5732   545 response      other      ospan_split high-memory - low-memory\n5733   546 response      other      ospan_split high-memory - low-memory\n5734   547 response      other      ospan_split high-memory - low-memory\n5735   548 response      other      ospan_split high-memory - low-memory\n5736   549 response      other      ospan_split high-memory - low-memory\n5737   550 response      other      ospan_split high-memory - low-memory\n5738   551 response      other      ospan_split high-memory - low-memory\n5739   552 response      other      ospan_split high-memory - low-memory\n5740   553 response      other      ospan_split high-memory - low-memory\n5741   554 response      other      ospan_split high-memory - low-memory\n5742   555 response      other      ospan_split high-memory - low-memory\n5743   556 response      other      ospan_split high-memory - low-memory\n5744   557 response      other      ospan_split high-memory - low-memory\n5745   558 response      other      ospan_split high-memory - low-memory\n5746   559 response      other      ospan_split high-memory - low-memory\n5747   560 response      other      ospan_split high-memory - low-memory\n5748   561 response      other      ospan_split high-memory - low-memory\n5749   562 response      other      ospan_split high-memory - low-memory\n5750   563 response      other      ospan_split high-memory - low-memory\n5751   564 response      other      ospan_split high-memory - low-memory\n5752   565 response      other      ospan_split high-memory - low-memory\n5753   566 response      other      ospan_split high-memory - low-memory\n5754   567 response      other      ospan_split high-memory - low-memory\n5755   568 response      other      ospan_split high-memory - low-memory\n5756   569 response      other      ospan_split high-memory - low-memory\n5757   570 response      other      ospan_split high-memory - low-memory\n5758   571 response      other      ospan_split high-memory - low-memory\n5759   572 response      other      ospan_split high-memory - low-memory\n5760   573 response      other      ospan_split high-memory - low-memory\n5761   574 response      other      ospan_split high-memory - low-memory\n5762   575 response      other      ospan_split high-memory - low-memory\n5763   576 response      other      ospan_split high-memory - low-memory\n5764   577 response      other      ospan_split high-memory - low-memory\n5765   578 response      other      ospan_split high-memory - low-memory\n5766   579 response      other      ospan_split high-memory - low-memory\n5767   580 response      other      ospan_split high-memory - low-memory\n5768   581 response      other      ospan_split high-memory - low-memory\n5769   582 response      other      ospan_split high-memory - low-memory\n5770   583 response      other      ospan_split high-memory - low-memory\n5771   584 response      other      ospan_split high-memory - low-memory\n5772   585 response      other      ospan_split high-memory - low-memory\n5773   586 response      other      ospan_split high-memory - low-memory\n5774   587 response      other      ospan_split high-memory - low-memory\n5775   588 response      other      ospan_split high-memory - low-memory\n5776   589 response      other      ospan_split high-memory - low-memory\n5777   590 response      other      ospan_split high-memory - low-memory\n5778   591 response      other      ospan_split high-memory - low-memory\n5779   592 response      other      ospan_split high-memory - low-memory\n5780   593 response      other      ospan_split high-memory - low-memory\n5781   594 response      other      ospan_split high-memory - low-memory\n5782   595 response      other      ospan_split high-memory - low-memory\n5783   596 response      other      ospan_split high-memory - low-memory\n5784   597 response      other      ospan_split high-memory - low-memory\n5785   598 response      other      ospan_split high-memory - low-memory\n5786   599 response      other      ospan_split high-memory - low-memory\n5787   600 response      other      ospan_split high-memory - low-memory\n5788   601 response      other      ospan_split high-memory - low-memory\n5789   602 response      other      ospan_split high-memory - low-memory\n5790   603 response      other      ospan_split high-memory - low-memory\n5791   604 response      other      ospan_split high-memory - low-memory\n5792   605 response      other      ospan_split high-memory - low-memory\n5793   606 response      other      ospan_split high-memory - low-memory\n5794   607 response      other      ospan_split high-memory - low-memory\n5795   608 response      other      ospan_split high-memory - low-memory\n5796   609 response      other      ospan_split high-memory - low-memory\n5797   610 response      other      ospan_split high-memory - low-memory\n5798   611 response      other      ospan_split high-memory - low-memory\n5799   612 response      other      ospan_split high-memory - low-memory\n5800   613 response      other      ospan_split high-memory - low-memory\n5801   614 response      other      ospan_split high-memory - low-memory\n5802   615 response      other      ospan_split high-memory - low-memory\n5803   616 response      other      ospan_split high-memory - low-memory\n5804   617 response      other      ospan_split high-memory - low-memory\n5805   618 response      other      ospan_split high-memory - low-memory\n5806   619 response      other      ospan_split high-memory - low-memory\n5807   620 response      other      ospan_split high-memory - low-memory\n5808   621 response      other      ospan_split high-memory - low-memory\n5809   622 response      other      ospan_split high-memory - low-memory\n5810   623 response      other      ospan_split high-memory - low-memory\n5811   624 response      other      ospan_split high-memory - low-memory\n5812   625 response      other      ospan_split high-memory - low-memory\n5813   626 response      other      ospan_split high-memory - low-memory\n5814   627 response      other      ospan_split high-memory - low-memory\n5815   628 response      other      ospan_split high-memory - low-memory\n5816   629 response      other      ospan_split high-memory - low-memory\n5817   630 response      other      ospan_split high-memory - low-memory\n5818   631 response      other      ospan_split high-memory - low-memory\n5819   632 response      other      ospan_split high-memory - low-memory\n5820   633 response      other      ospan_split high-memory - low-memory\n5821   634 response      other      ospan_split high-memory - low-memory\n5822   635 response      other      ospan_split high-memory - low-memory\n5823   636 response      other      ospan_split high-memory - low-memory\n5824   637 response      other      ospan_split high-memory - low-memory\n5825   638 response      other      ospan_split high-memory - low-memory\n5826   639 response      other      ospan_split high-memory - low-memory\n5827   640 response      other      ospan_split high-memory - low-memory\n5828   641 response      other      ospan_split high-memory - low-memory\n5829   642 response      other      ospan_split high-memory - low-memory\n5830   643 response      other      ospan_split high-memory - low-memory\n5831   644 response      other      ospan_split high-memory - low-memory\n5832   645 response      other      ospan_split high-memory - low-memory\n5833   646 response      other      ospan_split high-memory - low-memory\n5834   647 response      other      ospan_split high-memory - low-memory\n5835   648 response      other      ospan_split high-memory - low-memory\n5836   649 response      other      ospan_split high-memory - low-memory\n5837   650 response      other      ospan_split high-memory - low-memory\n5838   651 response      other      ospan_split high-memory - low-memory\n5839   652 response      other      ospan_split high-memory - low-memory\n5840   653 response      other      ospan_split high-memory - low-memory\n5841   654 response      other      ospan_split high-memory - low-memory\n5842   655 response      other      ospan_split high-memory - low-memory\n5843   656 response      other      ospan_split high-memory - low-memory\n5844   657 response      other      ospan_split high-memory - low-memory\n5845   658 response      other      ospan_split high-memory - low-memory\n5846   659 response      other      ospan_split high-memory - low-memory\n5847   660 response      other      ospan_split high-memory - low-memory\n5848   661 response      other      ospan_split high-memory - low-memory\n5849   662 response      other      ospan_split high-memory - low-memory\n5850   663 response      other      ospan_split high-memory - low-memory\n5851   664 response      other      ospan_split high-memory - low-memory\n5852   665 response      other      ospan_split high-memory - low-memory\n5853   666 response      other      ospan_split high-memory - low-memory\n5854   667 response      other      ospan_split high-memory - low-memory\n5855   668 response      other      ospan_split high-memory - low-memory\n5856   669 response      other      ospan_split high-memory - low-memory\n5857   670 response      other      ospan_split high-memory - low-memory\n5858   671 response      other      ospan_split high-memory - low-memory\n5859   672 response      other      ospan_split high-memory - low-memory\n5860   673 response      other      ospan_split high-memory - low-memory\n5861   674 response      other      ospan_split high-memory - low-memory\n5862   675 response      other      ospan_split high-memory - low-memory\n5863   676 response      other      ospan_split high-memory - low-memory\n5864   677 response      other      ospan_split high-memory - low-memory\n5865   678 response      other      ospan_split high-memory - low-memory\n5866   679 response      other      ospan_split high-memory - low-memory\n5867   680 response      other      ospan_split high-memory - low-memory\n5868   681 response      other      ospan_split high-memory - low-memory\n5869   682 response      other      ospan_split high-memory - low-memory\n5870   683 response      other      ospan_split high-memory - low-memory\n5871   684 response      other      ospan_split high-memory - low-memory\n5872   685 response      other      ospan_split high-memory - low-memory\n5873   686 response      other      ospan_split high-memory - low-memory\n5874   687 response      other      ospan_split high-memory - low-memory\n5875   688 response      other      ospan_split high-memory - low-memory\n5876   689 response      other      ospan_split high-memory - low-memory\n5877   690 response      other      ospan_split high-memory - low-memory\n5878   691 response      other      ospan_split high-memory - low-memory\n5879   692 response      other      ospan_split high-memory - low-memory\n5880   693 response      other      ospan_split high-memory - low-memory\n5881   694 response      other      ospan_split high-memory - low-memory\n5882   695 response      other      ospan_split high-memory - low-memory\n5883   696 response      other      ospan_split high-memory - low-memory\n5884   697 response      other      ospan_split high-memory - low-memory\n5885   698 response      other      ospan_split high-memory - low-memory\n5886   699 response      other      ospan_split high-memory - low-memory\n5887   700 response      other      ospan_split high-memory - low-memory\n5888   701 response      other      ospan_split high-memory - low-memory\n5889   702 response      other      ospan_split high-memory - low-memory\n5890   703 response      other      ospan_split high-memory - low-memory\n5891   704 response      other      ospan_split high-memory - low-memory\n5892   705 response      other      ospan_split high-memory - low-memory\n5893   706 response      other      ospan_split high-memory - low-memory\n5894   707 response      other      ospan_split high-memory - low-memory\n5895   708 response      other      ospan_split high-memory - low-memory\n5896   709 response      other      ospan_split high-memory - low-memory\n5897   710 response      other      ospan_split high-memory - low-memory\n5898   711 response      other      ospan_split high-memory - low-memory\n5899   712 response      other      ospan_split high-memory - low-memory\n5900   713 response      other      ospan_split high-memory - low-memory\n5901   714 response      other      ospan_split high-memory - low-memory\n5902   715 response      other      ospan_split high-memory - low-memory\n5903   716 response      other      ospan_split high-memory - low-memory\n5904   717 response      other      ospan_split high-memory - low-memory\n5905   718 response      other      ospan_split high-memory - low-memory\n5906   719 response      other      ospan_split high-memory - low-memory\n5907   720 response      other      ospan_split high-memory - low-memory\n5908   721 response      other      ospan_split high-memory - low-memory\n5909   722 response      other      ospan_split high-memory - low-memory\n5910   723 response      other      ospan_split high-memory - low-memory\n5911   724 response      other      ospan_split high-memory - low-memory\n5912   725 response      other      ospan_split high-memory - low-memory\n5913   726 response      other      ospan_split high-memory - low-memory\n5914   727 response      other      ospan_split high-memory - low-memory\n5915   728 response      other      ospan_split high-memory - low-memory\n5916   729 response      other      ospan_split high-memory - low-memory\n5917   730 response      other      ospan_split high-memory - low-memory\n5918   731 response      other      ospan_split high-memory - low-memory\n5919   732 response      other      ospan_split high-memory - low-memory\n5920   733 response      other      ospan_split high-memory - low-memory\n5921   734 response      other      ospan_split high-memory - low-memory\n5922   735 response      other      ospan_split high-memory - low-memory\n5923   736 response      other      ospan_split high-memory - low-memory\n5924   737 response      other      ospan_split high-memory - low-memory\n5925   738 response      other      ospan_split high-memory - low-memory\n5926   739 response      other      ospan_split high-memory - low-memory\n5927   740 response      other      ospan_split high-memory - low-memory\n5928   741 response      other      ospan_split high-memory - low-memory\n5929   742 response      other      ospan_split high-memory - low-memory\n5930   743 response      other      ospan_split high-memory - low-memory\n5931   744 response      other      ospan_split high-memory - low-memory\n5932   745 response      other      ospan_split high-memory - low-memory\n5933   746 response      other      ospan_split high-memory - low-memory\n5934   747 response      other      ospan_split high-memory - low-memory\n5935   748 response      other      ospan_split high-memory - low-memory\n5936   749 response      other      ospan_split high-memory - low-memory\n5937   750 response      other      ospan_split high-memory - low-memory\n5938   751 response      other      ospan_split high-memory - low-memory\n5939   752 response      other      ospan_split high-memory - low-memory\n5940   753 response      other      ospan_split high-memory - low-memory\n5941   754 response      other      ospan_split high-memory - low-memory\n5942   755 response      other      ospan_split high-memory - low-memory\n5943   756 response      other      ospan_split high-memory - low-memory\n5944   757 response      other      ospan_split high-memory - low-memory\n5945   758 response      other      ospan_split high-memory - low-memory\n5946   759 response      other      ospan_split high-memory - low-memory\n5947   760 response      other      ospan_split high-memory - low-memory\n5948   761 response      other      ospan_split high-memory - low-memory\n5949   762 response      other      ospan_split high-memory - low-memory\n5950   763 response      other      ospan_split high-memory - low-memory\n5951   764 response      other      ospan_split high-memory - low-memory\n5952   765 response      other      ospan_split high-memory - low-memory\n5953   766 response      other      ospan_split high-memory - low-memory\n5954   767 response      other      ospan_split high-memory - low-memory\n5955   768 response      other      ospan_split high-memory - low-memory\n5956   769 response      other      ospan_split high-memory - low-memory\n5957   770 response      other      ospan_split high-memory - low-memory\n5958   771 response      other      ospan_split high-memory - low-memory\n5959   772 response      other      ospan_split high-memory - low-memory\n5960   773 response      other      ospan_split high-memory - low-memory\n5961   774 response      other      ospan_split high-memory - low-memory\n5962   775 response      other      ospan_split high-memory - low-memory\n5963   776 response      other      ospan_split high-memory - low-memory\n5964   777 response      other      ospan_split high-memory - low-memory\n5965   778 response      other      ospan_split high-memory - low-memory\n5966   779 response      other      ospan_split high-memory - low-memory\n5967   780 response      other      ospan_split high-memory - low-memory\n5968   781 response      other      ospan_split high-memory - low-memory\n5969   782 response      other      ospan_split high-memory - low-memory\n5970   783 response      other      ospan_split high-memory - low-memory\n5971   784 response      other      ospan_split high-memory - low-memory\n5972   785 response      other      ospan_split high-memory - low-memory\n5973   786 response      other      ospan_split high-memory - low-memory\n5974   787 response      other      ospan_split high-memory - low-memory\n5975   788 response      other      ospan_split high-memory - low-memory\n5976   789 response      other      ospan_split high-memory - low-memory\n5977   790 response      other      ospan_split high-memory - low-memory\n5978   791 response      other      ospan_split high-memory - low-memory\n5979   792 response      other      ospan_split high-memory - low-memory\n5980   793 response      other      ospan_split high-memory - low-memory\n5981   794 response      other      ospan_split high-memory - low-memory\n5982   795 response      other      ospan_split high-memory - low-memory\n5983   796 response      other      ospan_split high-memory - low-memory\n5984   797 response      other      ospan_split high-memory - low-memory\n5985   798 response      other      ospan_split high-memory - low-memory\n5986   799 response      other      ospan_split high-memory - low-memory\n5987   800 response      other      ospan_split high-memory - low-memory\n5988   801 response      other      ospan_split high-memory - low-memory\n5989   802 response      other      ospan_split high-memory - low-memory\n5990   803 response      other      ospan_split high-memory - low-memory\n5991   804 response      other      ospan_split high-memory - low-memory\n5992   805 response      other      ospan_split high-memory - low-memory\n5993   806 response      other      ospan_split high-memory - low-memory\n5994   807 response      other      ospan_split high-memory - low-memory\n5995   808 response      other      ospan_split high-memory - low-memory\n5996   809 response      other      ospan_split high-memory - low-memory\n5997   810 response      other      ospan_split high-memory - low-memory\n5998   811 response      other      ospan_split high-memory - low-memory\n5999   812 response      other      ospan_split high-memory - low-memory\n6000   813 response      other      ospan_split high-memory - low-memory\n6001   814 response      other      ospan_split high-memory - low-memory\n6002   815 response      other      ospan_split high-memory - low-memory\n6003   816 response      other      ospan_split high-memory - low-memory\n6004   817 response      other      ospan_split high-memory - low-memory\n6005   818 response      other      ospan_split high-memory - low-memory\n6006   819 response      other      ospan_split high-memory - low-memory\n6007   820 response      other      ospan_split high-memory - low-memory\n6008   821 response      other      ospan_split high-memory - low-memory\n6009   822 response      other      ospan_split high-memory - low-memory\n6010   823 response      other      ospan_split high-memory - low-memory\n6011   824 response      other      ospan_split high-memory - low-memory\n6012   825 response      other      ospan_split high-memory - low-memory\n6013   826 response      other      ospan_split high-memory - low-memory\n6014   827 response      other      ospan_split high-memory - low-memory\n6015   828 response      other      ospan_split high-memory - low-memory\n6016   829 response      other      ospan_split high-memory - low-memory\n6017   830 response      other      ospan_split high-memory - low-memory\n6018   831 response      other      ospan_split high-memory - low-memory\n6019   832 response      other      ospan_split high-memory - low-memory\n6020   833 response      other      ospan_split high-memory - low-memory\n6021   834 response      other      ospan_split high-memory - low-memory\n6022   835 response      other      ospan_split high-memory - low-memory\n6023   836 response      other      ospan_split high-memory - low-memory\n6024   837 response      other      ospan_split high-memory - low-memory\n6025   838 response      other      ospan_split high-memory - low-memory\n6026   839 response      other      ospan_split high-memory - low-memory\n6027   840 response      other      ospan_split high-memory - low-memory\n6028   841 response      other      ospan_split high-memory - low-memory\n6029   842 response      other      ospan_split high-memory - low-memory\n6030   843 response      other      ospan_split high-memory - low-memory\n6031   844 response      other      ospan_split high-memory - low-memory\n6032   845 response      other      ospan_split high-memory - low-memory\n6033   846 response      other      ospan_split high-memory - low-memory\n6034   847 response      other      ospan_split high-memory - low-memory\n6035   848 response      other      ospan_split high-memory - low-memory\n6036   849 response      other      ospan_split high-memory - low-memory\n6037   850 response      other      ospan_split high-memory - low-memory\n6038   851 response      other      ospan_split high-memory - low-memory\n6039   852 response      other      ospan_split high-memory - low-memory\n6040   853 response      other      ospan_split high-memory - low-memory\n6041   854 response      other      ospan_split high-memory - low-memory\n6042   855 response      other      ospan_split high-memory - low-memory\n6043   856 response      other      ospan_split high-memory - low-memory\n6044   857 response      other      ospan_split high-memory - low-memory\n6045   858 response      other      ospan_split high-memory - low-memory\n6046   859 response      other      ospan_split high-memory - low-memory\n6047   860 response      other      ospan_split high-memory - low-memory\n6048   861 response      other      ospan_split high-memory - low-memory\n6049   862 response      other      ospan_split high-memory - low-memory\n6050   863 response      other      ospan_split high-memory - low-memory\n6051   864 response      other      ospan_split high-memory - low-memory\n6052   865 response      other      ospan_split high-memory - low-memory\n6053   866 response      other      ospan_split high-memory - low-memory\n6054   867 response      other      ospan_split high-memory - low-memory\n6055   868 response      other      ospan_split high-memory - low-memory\n6056   869 response      other      ospan_split high-memory - low-memory\n6057   870 response      other      ospan_split high-memory - low-memory\n6058   871 response      other      ospan_split high-memory - low-memory\n6059   872 response      other      ospan_split high-memory - low-memory\n6060   873 response      other      ospan_split high-memory - low-memory\n6061   874 response      other      ospan_split high-memory - low-memory\n6062   875 response      other      ospan_split high-memory - low-memory\n6063   876 response      other      ospan_split high-memory - low-memory\n6064   877 response      other      ospan_split high-memory - low-memory\n6065   878 response      other      ospan_split high-memory - low-memory\n6066   879 response      other      ospan_split high-memory - low-memory\n6067   880 response      other      ospan_split high-memory - low-memory\n6068   881 response      other      ospan_split high-memory - low-memory\n6069   882 response      other      ospan_split high-memory - low-memory\n6070   883 response      other      ospan_split high-memory - low-memory\n6071   884 response      other      ospan_split high-memory - low-memory\n6072   885 response      other      ospan_split high-memory - low-memory\n6073   886 response      other      ospan_split high-memory - low-memory\n6074   887 response      other      ospan_split high-memory - low-memory\n6075   888 response      other      ospan_split high-memory - low-memory\n6076   889 response      other      ospan_split high-memory - low-memory\n6077   890 response      other      ospan_split high-memory - low-memory\n6078   891 response      other      ospan_split high-memory - low-memory\n6079   892 response      other      ospan_split high-memory - low-memory\n6080   893 response      other      ospan_split high-memory - low-memory\n6081   894 response      other      ospan_split high-memory - low-memory\n6082   895 response      other      ospan_split high-memory - low-memory\n6083   896 response      other      ospan_split high-memory - low-memory\n6084   897 response      other      ospan_split high-memory - low-memory\n6085   898 response      other      ospan_split high-memory - low-memory\n6086   899 response      other      ospan_split high-memory - low-memory\n6087   900 response      other      ospan_split high-memory - low-memory\n6088   901 response      other      ospan_split high-memory - low-memory\n6089   902 response      other      ospan_split high-memory - low-memory\n6090   903 response      other      ospan_split high-memory - low-memory\n6091   904 response      other      ospan_split high-memory - low-memory\n6092   905 response      other      ospan_split high-memory - low-memory\n6093   906 response      other      ospan_split high-memory - low-memory\n6094   907 response      other      ospan_split high-memory - low-memory\n6095   908 response      other      ospan_split high-memory - low-memory\n6096   909 response      other      ospan_split high-memory - low-memory\n6097   910 response      other      ospan_split high-memory - low-memory\n6098   911 response      other      ospan_split high-memory - low-memory\n6099   912 response      other      ospan_split high-memory - low-memory\n6100   913 response      other      ospan_split high-memory - low-memory\n6101   914 response      other      ospan_split high-memory - low-memory\n6102   915 response      other      ospan_split high-memory - low-memory\n6103   916 response      other      ospan_split high-memory - low-memory\n6104   917 response      other      ospan_split high-memory - low-memory\n6105   918 response      other      ospan_split high-memory - low-memory\n6106   919 response      other      ospan_split high-memory - low-memory\n6107   920 response      other      ospan_split high-memory - low-memory\n6108   921 response      other      ospan_split high-memory - low-memory\n6109   922 response      other      ospan_split high-memory - low-memory\n6110   923 response      other      ospan_split high-memory - low-memory\n6111   924 response      other      ospan_split high-memory - low-memory\n6112   925 response      other      ospan_split high-memory - low-memory\n6113   926 response      other      ospan_split high-memory - low-memory\n6114   927 response      other      ospan_split high-memory - low-memory\n6115   928 response      other      ospan_split high-memory - low-memory\n6116   929 response      other      ospan_split high-memory - low-memory\n6117   930 response      other      ospan_split high-memory - low-memory\n6118   931 response      other      ospan_split high-memory - low-memory\n6119   932 response      other      ospan_split high-memory - low-memory\n6120   933 response      other      ospan_split high-memory - low-memory\n6121   934 response      other      ospan_split high-memory - low-memory\n6122   935 response      other      ospan_split high-memory - low-memory\n6123   936 response      other      ospan_split high-memory - low-memory\n6124   937 response      other      ospan_split high-memory - low-memory\n6125   938 response      other      ospan_split high-memory - low-memory\n6126   939 response      other      ospan_split high-memory - low-memory\n6127   940 response      other      ospan_split high-memory - low-memory\n6128   941 response      other      ospan_split high-memory - low-memory\n6129   942 response      other      ospan_split high-memory - low-memory\n6130   943 response      other      ospan_split high-memory - low-memory\n6131   944 response      other      ospan_split high-memory - low-memory\n6132   945 response      other      ospan_split high-memory - low-memory\n6133   946 response      other      ospan_split high-memory - low-memory\n6134   947 response      other      ospan_split high-memory - low-memory\n6135   948 response      other      ospan_split high-memory - low-memory\n6136   949 response      other      ospan_split high-memory - low-memory\n6137   950 response      other      ospan_split high-memory - low-memory\n6138   951 response      other      ospan_split high-memory - low-memory\n6139   952 response      other      ospan_split high-memory - low-memory\n6140   953 response      other      ospan_split high-memory - low-memory\n6141   954 response      other      ospan_split high-memory - low-memory\n6142   955 response      other      ospan_split high-memory - low-memory\n6143   956 response      other      ospan_split high-memory - low-memory\n6144   957 response      other      ospan_split high-memory - low-memory\n6145   958 response      other      ospan_split high-memory - low-memory\n6146   959 response      other      ospan_split high-memory - low-memory\n6147   960 response      other      ospan_split high-memory - low-memory\n6148   961 response      other      ospan_split high-memory - low-memory\n6149   962 response      other      ospan_split high-memory - low-memory\n6150   963 response      other      ospan_split high-memory - low-memory\n6151   964 response      other      ospan_split high-memory - low-memory\n6152   965 response      other      ospan_split high-memory - low-memory\n6153   966 response      other      ospan_split high-memory - low-memory\n6154   967 response      other      ospan_split high-memory - low-memory\n6155   968 response      other      ospan_split high-memory - low-memory\n6156   969 response      other      ospan_split high-memory - low-memory\n6157   970 response      other      ospan_split high-memory - low-memory\n6158   971 response      other      ospan_split high-memory - low-memory\n6159   972 response      other      ospan_split high-memory - low-memory\n6160   973 response      other      ospan_split high-memory - low-memory\n6161   974 response      other      ospan_split high-memory - low-memory\n6162   975 response      other      ospan_split high-memory - low-memory\n6163   976 response      other      ospan_split high-memory - low-memory\n6164   977 response      other      ospan_split high-memory - low-memory\n6165   978 response      other      ospan_split high-memory - low-memory\n6166   979 response      other      ospan_split high-memory - low-memory\n6167   980 response      other      ospan_split high-memory - low-memory\n6168   981 response      other      ospan_split high-memory - low-memory\n6169   982 response      other      ospan_split high-memory - low-memory\n6170   983 response      other      ospan_split high-memory - low-memory\n6171   984 response      other      ospan_split high-memory - low-memory\n6172   985 response      other      ospan_split high-memory - low-memory\n6173   986 response      other      ospan_split high-memory - low-memory\n6174   987 response      other      ospan_split high-memory - low-memory\n6175   988 response      other      ospan_split high-memory - low-memory\n6176   989 response      other      ospan_split high-memory - low-memory\n6177   990 response      other      ospan_split high-memory - low-memory\n6178   991 response      other      ospan_split high-memory - low-memory\n6179   992 response      other      ospan_split high-memory - low-memory\n6180   993 response      other      ospan_split high-memory - low-memory\n6181   994 response      other      ospan_split high-memory - low-memory\n6182   995 response      other      ospan_split high-memory - low-memory\n6183   996 response      other      ospan_split high-memory - low-memory\n6184   997 response      other      ospan_split high-memory - low-memory\n6185   998 response      other      ospan_split high-memory - low-memory\n6186   999 response      other      ospan_split high-memory - low-memory\n6187  1000 response      other      ospan_split high-memory - low-memory\n6188  1001 response      other      ospan_split high-memory - low-memory\n6189  1002 response      other      ospan_split high-memory - low-memory\n6190  1003 response      other      ospan_split high-memory - low-memory\n6191  1004 response      other      ospan_split high-memory - low-memory\n6192  1005 response      other      ospan_split high-memory - low-memory\n6193  1006 response      other      ospan_split high-memory - low-memory\n6194  1007 response      other      ospan_split high-memory - low-memory\n6195  1008 response      other      ospan_split high-memory - low-memory\n6196  1009 response      other      ospan_split high-memory - low-memory\n6197  1010 response      other      ospan_split high-memory - low-memory\n6198  1011 response      other      ospan_split high-memory - low-memory\n6199  1012 response      other      ospan_split high-memory - low-memory\n6200  1013 response      other      ospan_split high-memory - low-memory\n6201  1014 response      other      ospan_split high-memory - low-memory\n6202  1015 response      other      ospan_split high-memory - low-memory\n6203  1016 response      other      ospan_split high-memory - low-memory\n6204  1017 response      other      ospan_split high-memory - low-memory\n6205  1018 response      other      ospan_split high-memory - low-memory\n6206  1019 response      other      ospan_split high-memory - low-memory\n6207  1020 response      other      ospan_split high-memory - low-memory\n6208  1021 response      other      ospan_split high-memory - low-memory\n6209  1022 response      other      ospan_split high-memory - low-memory\n6210  1023 response      other      ospan_split high-memory - low-memory\n6211  1024 response      other      ospan_split high-memory - low-memory\n6212  1025 response      other      ospan_split high-memory - low-memory\n6213  1026 response      other      ospan_split high-memory - low-memory\n6214  1027 response      other      ospan_split high-memory - low-memory\n6215  1028 response      other      ospan_split high-memory - low-memory\n6216  1029 response      other      ospan_split high-memory - low-memory\n6217  1030 response      other      ospan_split high-memory - low-memory\n6218  1031 response      other      ospan_split high-memory - low-memory\n6219  1032 response      other      ospan_split high-memory - low-memory\n6220  1033 response      other      ospan_split high-memory - low-memory\n6221  1034 response      other      ospan_split high-memory - low-memory\n6222  1035 response      other      ospan_split high-memory - low-memory\n6223  1036 response      other      ospan_split high-memory - low-memory\n6224  1037 response      other      ospan_split high-memory - low-memory\n6225  1038 response      other      ospan_split high-memory - low-memory\n6226  1039 response      other      ospan_split high-memory - low-memory\n6227  1040 response      other      ospan_split high-memory - low-memory\n6228  1041 response      other      ospan_split high-memory - low-memory\n6229  1042 response      other      ospan_split high-memory - low-memory\n6230  1043 response      other      ospan_split high-memory - low-memory\n6231  1044 response      other      ospan_split high-memory - low-memory\n6232  1045 response      other      ospan_split high-memory - low-memory\n6233  1046 response      other      ospan_split high-memory - low-memory\n6234  1047 response      other      ospan_split high-memory - low-memory\n6235  1048 response      other      ospan_split high-memory - low-memory\n6236  1049 response      other      ospan_split high-memory - low-memory\n6237  1050 response      other      ospan_split high-memory - low-memory\n6238  1051 response      other      ospan_split high-memory - low-memory\n6239  1052 response      other      ospan_split high-memory - low-memory\n6240  1053 response      other      ospan_split high-memory - low-memory\n6241  1054 response      other      ospan_split high-memory - low-memory\n6242  1055 response      other      ospan_split high-memory - low-memory\n6243  1056 response      other      ospan_split high-memory - low-memory\n6244  1057 response      other      ospan_split high-memory - low-memory\n6245  1058 response      other      ospan_split high-memory - low-memory\n6246  1059 response      other      ospan_split high-memory - low-memory\n6247  1060 response      other      ospan_split high-memory - low-memory\n6248  1061 response      other      ospan_split high-memory - low-memory\n6249  1062 response      other      ospan_split high-memory - low-memory\n6250  1063 response      other      ospan_split high-memory - low-memory\n6251  1064 response      other      ospan_split high-memory - low-memory\n6252  1065 response      other      ospan_split high-memory - low-memory\n6253  1066 response      other      ospan_split high-memory - low-memory\n6254  1067 response      other      ospan_split high-memory - low-memory\n6255  1068 response      other      ospan_split high-memory - low-memory\n6256  1069 response      other      ospan_split high-memory - low-memory\n6257  1070 response      other      ospan_split high-memory - low-memory\n6258  1071 response      other      ospan_split high-memory - low-memory\n6259  1072 response      other      ospan_split high-memory - low-memory\n6260  1073 response      other      ospan_split high-memory - low-memory\n6261  1074 response      other      ospan_split high-memory - low-memory\n6262  1075 response      other      ospan_split high-memory - low-memory\n6263  1076 response      other      ospan_split high-memory - low-memory\n6264  1077 response      other      ospan_split high-memory - low-memory\n6265  1078 response      other      ospan_split high-memory - low-memory\n6266  1079 response      other      ospan_split high-memory - low-memory\n6267  1080 response      other      ospan_split high-memory - low-memory\n6268  1081 response      other      ospan_split high-memory - low-memory\n6269  1082 response      other      ospan_split high-memory - low-memory\n6270  1083 response      other      ospan_split high-memory - low-memory\n6271  1084 response      other      ospan_split high-memory - low-memory\n6272  1085 response      other      ospan_split high-memory - low-memory\n6273  1086 response      other      ospan_split high-memory - low-memory\n6274  1087 response      other      ospan_split high-memory - low-memory\n6275  1088 response      other      ospan_split high-memory - low-memory\n6276  1089 response      other      ospan_split high-memory - low-memory\n6277  1090 response      other      ospan_split high-memory - low-memory\n6278  1091 response      other      ospan_split high-memory - low-memory\n6279  1092 response      other      ospan_split high-memory - low-memory\n6280  1093 response      other      ospan_split high-memory - low-memory\n6281  1094 response      other      ospan_split high-memory - low-memory\n6282  1095 response      other      ospan_split high-memory - low-memory\n6283  1096 response      other      ospan_split high-memory - low-memory\n6284  1097 response      other      ospan_split high-memory - low-memory\n6285  1098 response      other      ospan_split high-memory - low-memory\n6286  1099 response      other      ospan_split high-memory - low-memory\n6287  1100 response      other      ospan_split high-memory - low-memory\n6288  1101 response      other      ospan_split high-memory - low-memory\n6289  1102 response      other      ospan_split high-memory - low-memory\n6290  1103 response      other      ospan_split high-memory - low-memory\n6291  1104 response      other      ospan_split high-memory - low-memory\n6292  1105 response      other      ospan_split high-memory - low-memory\n6293  1106 response      other      ospan_split high-memory - low-memory\n6294  1107 response      other      ospan_split high-memory - low-memory\n6295  1108 response      other      ospan_split high-memory - low-memory\n6296  1109 response      other      ospan_split high-memory - low-memory\n6297  1110 response      other      ospan_split high-memory - low-memory\n6298  1111 response      other      ospan_split high-memory - low-memory\n6299  1112 response      other      ospan_split high-memory - low-memory\n6300  1113 response      other      ospan_split high-memory - low-memory\n6301  1114 response      other      ospan_split high-memory - low-memory\n6302  1115 response      other      ospan_split high-memory - low-memory\n6303  1116 response      other      ospan_split high-memory - low-memory\n6304  1117 response      other      ospan_split high-memory - low-memory\n6305  1118 response      other      ospan_split high-memory - low-memory\n6306  1119 response      other      ospan_split high-memory - low-memory\n6307  1120 response      other      ospan_split high-memory - low-memory\n6308  1121 response      other      ospan_split high-memory - low-memory\n6309  1122 response      other      ospan_split high-memory - low-memory\n6310  1123 response      other      ospan_split high-memory - low-memory\n6311  1124 response      other      ospan_split high-memory - low-memory\n6312  1125 response      other      ospan_split high-memory - low-memory\n6313  1126 response      other      ospan_split high-memory - low-memory\n6314  1127 response      other      ospan_split high-memory - low-memory\n6315  1128 response      other      ospan_split high-memory - low-memory\n6316  1129 response      other      ospan_split high-memory - low-memory\n6317  1130 response      other      ospan_split high-memory - low-memory\n6318  1131 response      other      ospan_split high-memory - low-memory\n6319  1132 response      other      ospan_split high-memory - low-memory\n6320  1133 response      other      ospan_split high-memory - low-memory\n6321  1134 response      other      ospan_split high-memory - low-memory\n6322  1135 response      other      ospan_split high-memory - low-memory\n6323  1136 response      other      ospan_split high-memory - low-memory\n6324  1137 response      other      ospan_split high-memory - low-memory\n6325  1138 response      other      ospan_split high-memory - low-memory\n6326  1139 response      other      ospan_split high-memory - low-memory\n6327  1140 response      other      ospan_split high-memory - low-memory\n6328  1141 response      other      ospan_split high-memory - low-memory\n6329  1142 response      other      ospan_split high-memory - low-memory\n6330  1143 response      other      ospan_split high-memory - low-memory\n6331  1144 response      other      ospan_split high-memory - low-memory\n6332  1145 response      other      ospan_split high-memory - low-memory\n6333  1146 response      other      ospan_split high-memory - low-memory\n6334  1147 response      other      ospan_split high-memory - low-memory\n6335  1148 response      other      ospan_split high-memory - low-memory\n6336  1149 response      other      ospan_split high-memory - low-memory\n6337  1150 response      other      ospan_split high-memory - low-memory\n6338  1151 response      other      ospan_split high-memory - low-memory\n6339  1152 response      other      ospan_split high-memory - low-memory\n6340  1153 response      other      ospan_split high-memory - low-memory\n6341  1154 response      other      ospan_split high-memory - low-memory\n6342  1155 response      other      ospan_split high-memory - low-memory\n6343  1156 response      other      ospan_split high-memory - low-memory\n6344  1157 response      other      ospan_split high-memory - low-memory\n6345  1158 response      other      ospan_split high-memory - low-memory\n6346  1159 response      other      ospan_split high-memory - low-memory\n6347  1160 response      other      ospan_split high-memory - low-memory\n6348  1161 response      other      ospan_split high-memory - low-memory\n6349  1162 response      other      ospan_split high-memory - low-memory\n6350  1163 response      other      ospan_split high-memory - low-memory\n6351  1164 response      other      ospan_split high-memory - low-memory\n6352  1165 response      other      ospan_split high-memory - low-memory\n6353  1166 response      other      ospan_split high-memory - low-memory\n6354  1167 response      other      ospan_split high-memory - low-memory\n6355  1168 response      other      ospan_split high-memory - low-memory\n6356  1169 response      other      ospan_split high-memory - low-memory\n6357  1170 response      other      ospan_split high-memory - low-memory\n6358  1171 response      other      ospan_split high-memory - low-memory\n6359  1172 response      other      ospan_split high-memory - low-memory\n6360  1173 response      other      ospan_split high-memory - low-memory\n6361  1174 response      other      ospan_split high-memory - low-memory\n6362  1175 response      other      ospan_split high-memory - low-memory\n6363  1176 response      other      ospan_split high-memory - low-memory\n6364  1177 response      other      ospan_split high-memory - low-memory\n6365  1178 response      other      ospan_split high-memory - low-memory\n6366  1179 response      other      ospan_split high-memory - low-memory\n6367  1180 response      other      ospan_split high-memory - low-memory\n6368  1181 response      other      ospan_split high-memory - low-memory\n6369  1182 response      other      ospan_split high-memory - low-memory\n6370  1183 response      other      ospan_split high-memory - low-memory\n6371  1184 response      other      ospan_split high-memory - low-memory\n6372  1185 response      other      ospan_split high-memory - low-memory\n6373  1186 response      other      ospan_split high-memory - low-memory\n6374  1187 response      other      ospan_split high-memory - low-memory\n6375  1188 response      other      ospan_split high-memory - low-memory\n6376  1189 response      other      ospan_split high-memory - low-memory\n6377  1190 response      other      ospan_split high-memory - low-memory\n6378  1191 response      other      ospan_split high-memory - low-memory\n6379  1192 response      other      ospan_split high-memory - low-memory\n6380  1193 response      other      ospan_split high-memory - low-memory\n6381  1194 response      other      ospan_split high-memory - low-memory\n6382  1195 response      other      ospan_split high-memory - low-memory\n6383  1196 response      other      ospan_split high-memory - low-memory\n6384  1197 response      other      ospan_split high-memory - low-memory\n6385  1198 response      other      ospan_split high-memory - low-memory\n6386  1199 response      other      ospan_split high-memory - low-memory\n6387  1200 response      other      ospan_split high-memory - low-memory\n6388  1201 response      other      ospan_split high-memory - low-memory\n6389  1202 response      other      ospan_split high-memory - low-memory\n6390  1203 response      other      ospan_split high-memory - low-memory\n6391  1204 response      other      ospan_split high-memory - low-memory\n6392  1205 response      other      ospan_split high-memory - low-memory\n6393  1206 response      other      ospan_split high-memory - low-memory\n6394  1207 response      other      ospan_split high-memory - low-memory\n6395  1208 response      other      ospan_split high-memory - low-memory\n6396  1209 response      other      ospan_split high-memory - low-memory\n6397  1210 response      other      ospan_split high-memory - low-memory\n6398  1211 response      other      ospan_split high-memory - low-memory\n6399  1212 response      other      ospan_split high-memory - low-memory\n6400  1213 response      other      ospan_split high-memory - low-memory\n6401  1214 response      other      ospan_split high-memory - low-memory\n6402  1215 response      other      ospan_split high-memory - low-memory\n6403  1216 response      other      ospan_split high-memory - low-memory\n6404  1217 response      other      ospan_split high-memory - low-memory\n6405  1218 response      other      ospan_split high-memory - low-memory\n6406  1219 response      other      ospan_split high-memory - low-memory\n6407  1220 response      other      ospan_split high-memory - low-memory\n6408  1221 response      other      ospan_split high-memory - low-memory\n6409  1222 response      other      ospan_split high-memory - low-memory\n6410  1223 response      other      ospan_split high-memory - low-memory\n6411  1224 response      other      ospan_split high-memory - low-memory\n6412  1225 response      other      ospan_split high-memory - low-memory\n6413  1226 response      other      ospan_split high-memory - low-memory\n6414  1227 response      other      ospan_split high-memory - low-memory\n6415  1228 response      other      ospan_split high-memory - low-memory\n6416  1229 response      other      ospan_split high-memory - low-memory\n6417  1230 response      other      ospan_split high-memory - low-memory\n6418  1231 response      other      ospan_split high-memory - low-memory\n6419  1232 response      other      ospan_split high-memory - low-memory\n6420  1233 response      other      ospan_split high-memory - low-memory\n6421  1234 response      other      ospan_split high-memory - low-memory\n6422  1235 response      other      ospan_split high-memory - low-memory\n6423  1236 response      other      ospan_split high-memory - low-memory\n6424  1237 response      other      ospan_split high-memory - low-memory\n6425  1238 response      other      ospan_split high-memory - low-memory\n6426  1239 response      other      ospan_split high-memory - low-memory\n6427  1240 response      other      ospan_split high-memory - low-memory\n6428  1241 response      other      ospan_split high-memory - low-memory\n6429  1242 response      other      ospan_split high-memory - low-memory\n6430  1243 response      other      ospan_split high-memory - low-memory\n6431  1244 response      other      ospan_split high-memory - low-memory\n6432  1245 response      other      ospan_split high-memory - low-memory\n6433  1246 response      other      ospan_split high-memory - low-memory\n6434  1247 response      other      ospan_split high-memory - low-memory\n6435  1248 response      other      ospan_split high-memory - low-memory\n6436  1249 response      other      ospan_split high-memory - low-memory\n6437  1250 response      other      ospan_split high-memory - low-memory\n6438  1251 response      other      ospan_split high-memory - low-memory\n6439  1252 response      other      ospan_split high-memory - low-memory\n6440  1253 response      other      ospan_split high-memory - low-memory\n6441  1254 response      other      ospan_split high-memory - low-memory\n6442  1255 response      other      ospan_split high-memory - low-memory\n6443  1256 response      other      ospan_split high-memory - low-memory\n6444  1257 response      other      ospan_split high-memory - low-memory\n6445  1258 response      other      ospan_split high-memory - low-memory\n6446  1259 response      other      ospan_split high-memory - low-memory\n6447  1260 response      other      ospan_split high-memory - low-memory\n6448  1261 response      other      ospan_split high-memory - low-memory\n6449  1262 response      other      ospan_split high-memory - low-memory\n6450  1263 response      other      ospan_split high-memory - low-memory\n6451  1264 response      other      ospan_split high-memory - low-memory\n6452  1265 response      other      ospan_split high-memory - low-memory\n6453  1266 response      other      ospan_split high-memory - low-memory\n6454  1267 response      other      ospan_split high-memory - low-memory\n6455  1268 response      other      ospan_split high-memory - low-memory\n6456  1269 response      other      ospan_split high-memory - low-memory\n6457  1270 response      other      ospan_split high-memory - low-memory\n6458  1271 response      other      ospan_split high-memory - low-memory\n6459  1272 response      other      ospan_split high-memory - low-memory\n6460  1273 response      other      ospan_split high-memory - low-memory\n6461  1274 response      other      ospan_split high-memory - low-memory\n6462  1275 response      other      ospan_split high-memory - low-memory\n6463  1276 response      other      ospan_split high-memory - low-memory\n6464  1277 response      other      ospan_split high-memory - low-memory\n6465  1278 response      other      ospan_split high-memory - low-memory\n6466  1279 response      other      ospan_split high-memory - low-memory\n6467  1280 response      other      ospan_split high-memory - low-memory\n6468  1281 response      other      ospan_split high-memory - low-memory\n6469  1282 response      other      ospan_split high-memory - low-memory\n6470  1283 response      other      ospan_split high-memory - low-memory\n6471  1284 response      other      ospan_split high-memory - low-memory\n6472  1285 response      other      ospan_split high-memory - low-memory\n6473  1286 response      other      ospan_split high-memory - low-memory\n6474  1287 response      other      ospan_split high-memory - low-memory\n6475  1288 response      other      ospan_split high-memory - low-memory\n6476  1289 response      other      ospan_split high-memory - low-memory\n6477  1290 response      other      ospan_split high-memory - low-memory\n6478  1291 response      other      ospan_split high-memory - low-memory\n6479  1292 response      other      ospan_split high-memory - low-memory\n6480  1293 response      other      ospan_split high-memory - low-memory\n6481  1294 response      other      ospan_split high-memory - low-memory\n6482  1295 response      other      ospan_split high-memory - low-memory\n6483  1296 response      other      ospan_split high-memory - low-memory\n6484  1297 response      other      ospan_split high-memory - low-memory\n6485  1298 response      other      ospan_split high-memory - low-memory\n6486  1299 response      other      ospan_split high-memory - low-memory\n6487  1300 response      other      ospan_split high-memory - low-memory\n6488  1301 response      other      ospan_split high-memory - low-memory\n6489  1302 response      other      ospan_split high-memory - low-memory\n6490  1303 response      other      ospan_split high-memory - low-memory\n6491  1304 response      other      ospan_split high-memory - low-memory\n6492  1305 response      other      ospan_split high-memory - low-memory\n6493  1306 response      other      ospan_split high-memory - low-memory\n6494  1307 response      other      ospan_split high-memory - low-memory\n6495  1308 response      other      ospan_split high-memory - low-memory\n6496  1309 response      other      ospan_split high-memory - low-memory\n6497  1310 response      other      ospan_split high-memory - low-memory\n6498  1311 response      other      ospan_split high-memory - low-memory\n6499  1312 response      other      ospan_split high-memory - low-memory\n6500  1313 response      other      ospan_split high-memory - low-memory\n6501  1314 response      other      ospan_split high-memory - low-memory\n6502  1315 response      other      ospan_split high-memory - low-memory\n6503  1316 response      other      ospan_split high-memory - low-memory\n6504  1317 response      other      ospan_split high-memory - low-memory\n6505  1318 response      other      ospan_split high-memory - low-memory\n6506  1319 response      other      ospan_split high-memory - low-memory\n6507  1320 response      other      ospan_split high-memory - low-memory\n6508  1321 response      other      ospan_split high-memory - low-memory\n6509  1322 response      other      ospan_split high-memory - low-memory\n6510  1323 response      other      ospan_split high-memory - low-memory\n6511  1324 response      other      ospan_split high-memory - low-memory\n6512  1325 response      other      ospan_split high-memory - low-memory\n6513  1326 response      other      ospan_split high-memory - low-memory\n6514  1327 response      other      ospan_split high-memory - low-memory\n6515  1328 response      other      ospan_split high-memory - low-memory\n6516  1329 response      other      ospan_split high-memory - low-memory\n6517  1330 response      other      ospan_split high-memory - low-memory\n6518  1331 response      other      ospan_split high-memory - low-memory\n6519  1332 response      other      ospan_split high-memory - low-memory\n6520  1333 response      other      ospan_split high-memory - low-memory\n6521  1334 response      other      ospan_split high-memory - low-memory\n6522  1335 response      other      ospan_split high-memory - low-memory\n6523  1336 response      other      ospan_split high-memory - low-memory\n6524  1337 response      other      ospan_split high-memory - low-memory\n6525  1338 response      other      ospan_split high-memory - low-memory\n6526  1339 response      other      ospan_split high-memory - low-memory\n6527  1340 response      other      ospan_split high-memory - low-memory\n6528  1341 response      other      ospan_split high-memory - low-memory\n6529  1342 response      other      ospan_split high-memory - low-memory\n6530  1343 response      other      ospan_split high-memory - low-memory\n6531  1344 response      other      ospan_split high-memory - low-memory\n6532  1345 response      other      ospan_split high-memory - low-memory\n6533  1346 response      other      ospan_split high-memory - low-memory\n6534  1347 response      other      ospan_split high-memory - low-memory\n6535  1348 response      other      ospan_split high-memory - low-memory\n6536  1349 response      other      ospan_split high-memory - low-memory\n6537  1350 response      other      ospan_split high-memory - low-memory\n6538  1351 response      other      ospan_split high-memory - low-memory\n6539  1352 response      other      ospan_split high-memory - low-memory\n6540  1353 response      other      ospan_split high-memory - low-memory\n6541  1354 response      other      ospan_split high-memory - low-memory\n6542  1355 response      other      ospan_split high-memory - low-memory\n6543  1356 response      other      ospan_split high-memory - low-memory\n6544  1357 response      other      ospan_split high-memory - low-memory\n6545  1358 response      other      ospan_split high-memory - low-memory\n6546  1359 response      other      ospan_split high-memory - low-memory\n6547  1360 response      other      ospan_split high-memory - low-memory\n6548  1361 response      other      ospan_split high-memory - low-memory\n6549  1362 response      other      ospan_split high-memory - low-memory\n6550  1363 response      other      ospan_split high-memory - low-memory\n6551  1364 response      other      ospan_split high-memory - low-memory\n6552  1365 response      other      ospan_split high-memory - low-memory\n6553  1366 response      other      ospan_split high-memory - low-memory\n6554  1367 response      other      ospan_split high-memory - low-memory\n6555  1368 response      other      ospan_split high-memory - low-memory\n6556  1369 response      other      ospan_split high-memory - low-memory\n6557  1370 response      other      ospan_split high-memory - low-memory\n6558  1371 response      other      ospan_split high-memory - low-memory\n6559  1372 response      other      ospan_split high-memory - low-memory\n6560  1373 response      other      ospan_split high-memory - low-memory\n6561  1374 response      other      ospan_split high-memory - low-memory\n6562  1375 response      other      ospan_split high-memory - low-memory\n6563  1376 response      other      ospan_split high-memory - low-memory\n6564  1377 response      other      ospan_split high-memory - low-memory\n6565  1378 response      other      ospan_split high-memory - low-memory\n6566  1379 response      other      ospan_split high-memory - low-memory\n6567  1380 response      other      ospan_split high-memory - low-memory\n6568  1381 response      other      ospan_split high-memory - low-memory\n6569  1382 response      other      ospan_split high-memory - low-memory\n6570  1383 response      other      ospan_split high-memory - low-memory\n6571  1384 response      other      ospan_split high-memory - low-memory\n6572  1385 response      other      ospan_split high-memory - low-memory\n6573  1386 response      other      ospan_split high-memory - low-memory\n6574  1387 response      other      ospan_split high-memory - low-memory\n6575  1388 response      other      ospan_split high-memory - low-memory\n6576  1389 response      other      ospan_split high-memory - low-memory\n6577  1390 response      other      ospan_split high-memory - low-memory\n6578  1391 response      other      ospan_split high-memory - low-memory\n6579  1392 response      other      ospan_split high-memory - low-memory\n6580  1393 response      other      ospan_split high-memory - low-memory\n6581  1394 response      other      ospan_split high-memory - low-memory\n6582  1395 response      other      ospan_split high-memory - low-memory\n6583  1396 response      other      ospan_split high-memory - low-memory\n6584  1397 response      other      ospan_split high-memory - low-memory\n6585  1398 response      other      ospan_split high-memory - low-memory\n6586  1399 response      other      ospan_split high-memory - low-memory\n6587  1400 response      other      ospan_split high-memory - low-memory\n6588  1401 response      other      ospan_split high-memory - low-memory\n6589  1402 response      other      ospan_split high-memory - low-memory\n6590  1403 response      other      ospan_split high-memory - low-memory\n6591  1404 response      other      ospan_split high-memory - low-memory\n6592  1405 response      other      ospan_split high-memory - low-memory\n6593  1406 response      other      ospan_split high-memory - low-memory\n6594  1407 response      other      ospan_split high-memory - low-memory\n6595  1408 response      other      ospan_split high-memory - low-memory\n6596  1409 response      other      ospan_split high-memory - low-memory\n6597  1410 response      other      ospan_split high-memory - low-memory\n6598  1411 response      other      ospan_split high-memory - low-memory\n6599  1412 response      other      ospan_split high-memory - low-memory\n6600  1413 response      other      ospan_split high-memory - low-memory\n6601  1414 response      other      ospan_split high-memory - low-memory\n6602  1415 response      other      ospan_split high-memory - low-memory\n6603  1416 response      other      ospan_split high-memory - low-memory\n6604  1417 response      other      ospan_split high-memory - low-memory\n6605  1418 response      other      ospan_split high-memory - low-memory\n6606  1419 response      other      ospan_split high-memory - low-memory\n6607  1420 response      other      ospan_split high-memory - low-memory\n6608  1421 response      other      ospan_split high-memory - low-memory\n6609  1422 response      other      ospan_split high-memory - low-memory\n6610  1423 response      other      ospan_split high-memory - low-memory\n6611  1424 response      other      ospan_split high-memory - low-memory\n6612  1425 response      other      ospan_split high-memory - low-memory\n6613  1426 response      other      ospan_split high-memory - low-memory\n6614  1427 response      other      ospan_split high-memory - low-memory\n6615  1428 response      other      ospan_split high-memory - low-memory\n6616  1429 response      other      ospan_split high-memory - low-memory\n6617  1430 response      other      ospan_split high-memory - low-memory\n6618  1431 response      other      ospan_split high-memory - low-memory\n6619  1432 response      other      ospan_split high-memory - low-memory\n6620  1433 response      other      ospan_split high-memory - low-memory\n6621  1434 response      other      ospan_split high-memory - low-memory\n6622  1435 response      other      ospan_split high-memory - low-memory\n6623  1436 response      other      ospan_split high-memory - low-memory\n6624  1437 response      other      ospan_split high-memory - low-memory\n6625  1438 response      other      ospan_split high-memory - low-memory\n6626  1439 response      other      ospan_split high-memory - low-memory\n6627  1440 response      other      ospan_split high-memory - low-memory\n6628  1441 response      other      ospan_split high-memory - low-memory\n6629  1442 response      other      ospan_split high-memory - low-memory\n6630  1443 response      other      ospan_split high-memory - low-memory\n6631  1444 response      other      ospan_split high-memory - low-memory\n6632  1445 response      other      ospan_split high-memory - low-memory\n6633  1446 response      other      ospan_split high-memory - low-memory\n6634  1447 response      other      ospan_split high-memory - low-memory\n6635  1448 response      other      ospan_split high-memory - low-memory\n6636  1449 response      other      ospan_split high-memory - low-memory\n6637  1450 response      other      ospan_split high-memory - low-memory\n6638  1451 response      other      ospan_split high-memory - low-memory\n6639  1452 response      other      ospan_split high-memory - low-memory\n6640  1453 response      other      ospan_split high-memory - low-memory\n6641  1454 response      other      ospan_split high-memory - low-memory\n6642  1455 response      other      ospan_split high-memory - low-memory\n6643  1456 response      other      ospan_split high-memory - low-memory\n6644  1457 response      other      ospan_split high-memory - low-memory\n6645  1458 response      other      ospan_split high-memory - low-memory\n6646  1459 response      other      ospan_split high-memory - low-memory\n6647  1460 response      other      ospan_split high-memory - low-memory\n6648  1461 response      other      ospan_split high-memory - low-memory\n6649  1462 response      other      ospan_split high-memory - low-memory\n6650  1463 response      other      ospan_split high-memory - low-memory\n6651  1464 response      other      ospan_split high-memory - low-memory\n6652  1465 response      other      ospan_split high-memory - low-memory\n6653  1466 response      other      ospan_split high-memory - low-memory\n6654  1467 response      other      ospan_split high-memory - low-memory\n6655  1468 response      other      ospan_split high-memory - low-memory\n6656  1469 response      other      ospan_split high-memory - low-memory\n6657  1470 response      other      ospan_split high-memory - low-memory\n6658  1471 response      other      ospan_split high-memory - low-memory\n6659  1472 response      other      ospan_split high-memory - low-memory\n6660  1473 response      other      ospan_split high-memory - low-memory\n6661  1474 response      other      ospan_split high-memory - low-memory\n6662  1475 response      other      ospan_split high-memory - low-memory\n6663  1476 response      other      ospan_split high-memory - low-memory\n6664  1477 response      other      ospan_split high-memory - low-memory\n6665  1478 response      other      ospan_split high-memory - low-memory\n6666  1479 response      other      ospan_split high-memory - low-memory\n6667  1480 response      other      ospan_split high-memory - low-memory\n6668  1481 response      other      ospan_split high-memory - low-memory\n6669  1482 response      other      ospan_split high-memory - low-memory\n6670  1483 response      other      ospan_split high-memory - low-memory\n6671  1484 response      other      ospan_split high-memory - low-memory\n6672  1485 response      other      ospan_split high-memory - low-memory\n6673  1486 response      other      ospan_split high-memory - low-memory\n6674  1487 response      other      ospan_split high-memory - low-memory\n6675  1488 response      other      ospan_split high-memory - low-memory\n6676  1489 response      other      ospan_split high-memory - low-memory\n6677  1490 response      other      ospan_split high-memory - low-memory\n6678  1491 response      other      ospan_split high-memory - low-memory\n6679  1492 response      other      ospan_split high-memory - low-memory\n6680  1493 response      other      ospan_split high-memory - low-memory\n6681  1494 response      other      ospan_split high-memory - low-memory\n6682  1495 response      other      ospan_split high-memory - low-memory\n6683  1496 response      other      ospan_split high-memory - low-memory\n6684  1497 response      other      ospan_split high-memory - low-memory\n6685  1498 response      other      ospan_split high-memory - low-memory\n6686  1499 response      other      ospan_split high-memory - low-memory\n6687  1500 response      other      ospan_split high-memory - low-memory\n6688  1501 response      other      ospan_split high-memory - low-memory\n6689  1502 response      other      ospan_split high-memory - low-memory\n6690  1503 response      other      ospan_split high-memory - low-memory\n6691  1504 response      other      ospan_split high-memory - low-memory\n6692  1505 response      other      ospan_split high-memory - low-memory\n6693  1506 response      other      ospan_split high-memory - low-memory\n6694  1507 response      other      ospan_split high-memory - low-memory\n6695  1508 response      other      ospan_split high-memory - low-memory\n6696  1509 response      other      ospan_split high-memory - low-memory\n6697  1510 response      other      ospan_split high-memory - low-memory\n6698  1511 response      other      ospan_split high-memory - low-memory\n6699  1512 response      other      ospan_split high-memory - low-memory\n6700  1513 response      other      ospan_split high-memory - low-memory\n6701  1514 response      other      ospan_split high-memory - low-memory\n6702  1515 response      other      ospan_split high-memory - low-memory\n6703  1516 response      other      ospan_split high-memory - low-memory\n6704  1517 response      other      ospan_split high-memory - low-memory\n6705  1518 response      other      ospan_split high-memory - low-memory\n6706  1519 response      other      ospan_split high-memory - low-memory\n6707  1520 response      other      ospan_split high-memory - low-memory\n6708  1521 response      other      ospan_split high-memory - low-memory\n6709  1522 response      other      ospan_split high-memory - low-memory\n6710  1523 response      other      ospan_split high-memory - low-memory\n6711  1524 response      other      ospan_split high-memory - low-memory\n6712  1525 response      other      ospan_split high-memory - low-memory\n6713  1526 response      other      ospan_split high-memory - low-memory\n6714  1527 response      other      ospan_split high-memory - low-memory\n6715  1528 response      other      ospan_split high-memory - low-memory\n6716  1529 response      other      ospan_split high-memory - low-memory\n6717  1530 response      other      ospan_split high-memory - low-memory\n6718  1531 response      other      ospan_split high-memory - low-memory\n6719  1532 response      other      ospan_split high-memory - low-memory\n6720  1533 response      other      ospan_split high-memory - low-memory\n6721  1534 response      other      ospan_split high-memory - low-memory\n6722  1535 response      other      ospan_split high-memory - low-memory\n6723  1536 response      other      ospan_split high-memory - low-memory\n6724  1537 response      other      ospan_split high-memory - low-memory\n6725  1538 response      other      ospan_split high-memory - low-memory\n6726  1539 response      other      ospan_split high-memory - low-memory\n6727  1540 response      other      ospan_split high-memory - low-memory\n6728  1541 response      other      ospan_split high-memory - low-memory\n6729  1542 response      other      ospan_split high-memory - low-memory\n6730  1543 response      other      ospan_split high-memory - low-memory\n6731  1544 response      other      ospan_split high-memory - low-memory\n6732  1545 response      other      ospan_split high-memory - low-memory\n6733  1546 response      other      ospan_split high-memory - low-memory\n6734  1547 response      other      ospan_split high-memory - low-memory\n6735  1548 response      other      ospan_split high-memory - low-memory\n6736  1549 response      other      ospan_split high-memory - low-memory\n6737  1550 response      other      ospan_split high-memory - low-memory\n6738  1551 response      other      ospan_split high-memory - low-memory\n6739  1552 response      other      ospan_split high-memory - low-memory\n6740  1553 response      other      ospan_split high-memory - low-memory\n6741  1554 response      other      ospan_split high-memory - low-memory\n6742  1555 response      other      ospan_split high-memory - low-memory\n6743  1556 response      other      ospan_split high-memory - low-memory\n6744  1557 response      other      ospan_split high-memory - low-memory\n6745  1558 response      other      ospan_split high-memory - low-memory\n6746  1559 response      other      ospan_split high-memory - low-memory\n6747  1560 response      other      ospan_split high-memory - low-memory\n6748  1561 response      other      ospan_split high-memory - low-memory\n6749  1562 response      other      ospan_split high-memory - low-memory\n6750  1563 response      other      ospan_split high-memory - low-memory\n6751  1564 response      other      ospan_split high-memory - low-memory\n6752  1565 response      other      ospan_split high-memory - low-memory\n6753  1566 response      other      ospan_split high-memory - low-memory\n6754  1567 response      other      ospan_split high-memory - low-memory\n6755  1568 response      other      ospan_split high-memory - low-memory\n6756  1569 response      other      ospan_split high-memory - low-memory\n6757  1570 response      other      ospan_split high-memory - low-memory\n6758  1571 response      other      ospan_split high-memory - low-memory\n6759  1572 response      other      ospan_split high-memory - low-memory\n6760  1573 response      other      ospan_split high-memory - low-memory\n6761  1574 response      other      ospan_split high-memory - low-memory\n6762  1575 response      other      ospan_split high-memory - low-memory\n6763  1576 response      other      ospan_split high-memory - low-memory\n6764  1577 response      other      ospan_split high-memory - low-memory\n6765  1578 response      other      ospan_split high-memory - low-memory\n6766  1579 response      other      ospan_split high-memory - low-memory\n6767  1580 response      other      ospan_split high-memory - low-memory\n6768  1581 response      other      ospan_split high-memory - low-memory\n6769  1582 response      other      ospan_split high-memory - low-memory\n6770  1583 response      other      ospan_split high-memory - low-memory\n6771  1584 response      other      ospan_split high-memory - low-memory\n6772  1585 response      other      ospan_split high-memory - low-memory\n6773  1586 response      other      ospan_split high-memory - low-memory\n6774  1587 response      other      ospan_split high-memory - low-memory\n6775  1588 response      other      ospan_split high-memory - low-memory\n6776  1589 response      other      ospan_split high-memory - low-memory\n6777  1590 response      other      ospan_split high-memory - low-memory\n6778  1591 response      other      ospan_split high-memory - low-memory\n6779  1592 response      other      ospan_split high-memory - low-memory\n6780  1593 response      other      ospan_split high-memory - low-memory\n6781  1594 response      other      ospan_split high-memory - low-memory\n6782  1595 response      other      ospan_split high-memory - low-memory\n6783  1596 response      other      ospan_split high-memory - low-memory\n6784  1597 response      other      ospan_split high-memory - low-memory\n6785  1598 response      other      ospan_split high-memory - low-memory\n6786  1599 response      other      ospan_split high-memory - low-memory\n6787  1600 response      other      ospan_split high-memory - low-memory\n6788  1601 response      other      ospan_split high-memory - low-memory\n6789  1602 response      other      ospan_split high-memory - low-memory\n6790  1603 response      other      ospan_split high-memory - low-memory\n6791  1604 response      other      ospan_split high-memory - low-memory\n6792  1605 response      other      ospan_split high-memory - low-memory\n6793  1606 response      other      ospan_split high-memory - low-memory\n6794  1607 response      other      ospan_split high-memory - low-memory\n6795  1608 response      other      ospan_split high-memory - low-memory\n6796  1609 response      other      ospan_split high-memory - low-memory\n6797  1610 response      other      ospan_split high-memory - low-memory\n6798  1611 response      other      ospan_split high-memory - low-memory\n6799  1612 response      other      ospan_split high-memory - low-memory\n6800  1613 response      other      ospan_split high-memory - low-memory\n6801  1614 response      other      ospan_split high-memory - low-memory\n6802  1615 response      other      ospan_split high-memory - low-memory\n6803  1616 response      other      ospan_split high-memory - low-memory\n6804  1617 response      other      ospan_split high-memory - low-memory\n6805  1618 response      other      ospan_split high-memory - low-memory\n6806  1619 response      other      ospan_split high-memory - low-memory\n6807  1620 response      other      ospan_split high-memory - low-memory\n6808  1621 response      other      ospan_split high-memory - low-memory\n6809  1622 response      other      ospan_split high-memory - low-memory\n6810  1623 response      other      ospan_split high-memory - low-memory\n6811  1624 response      other      ospan_split high-memory - low-memory\n6812  1625 response      other      ospan_split high-memory - low-memory\n6813  1626 response      other      ospan_split high-memory - low-memory\n6814  1627 response      other      ospan_split high-memory - low-memory\n6815  1628 response      other      ospan_split high-memory - low-memory\n6816  1629 response      other      ospan_split high-memory - low-memory\n6817  1630 response      other      ospan_split high-memory - low-memory\n6818  1631 response      other      ospan_split high-memory - low-memory\n6819  1632 response      other      ospan_split high-memory - low-memory\n6820  1633 response      other      ospan_split high-memory - low-memory\n6821  1634 response      other      ospan_split high-memory - low-memory\n6822  1635 response      other      ospan_split high-memory - low-memory\n6823  1636 response      other      ospan_split high-memory - low-memory\n6824  1637 response      other      ospan_split high-memory - low-memory\n6825  1638 response      other      ospan_split high-memory - low-memory\n6826  1639 response      other      ospan_split high-memory - low-memory\n6827  1640 response      other      ospan_split high-memory - low-memory\n6828  1641 response      other      ospan_split high-memory - low-memory\n6829  1642 response      other      ospan_split high-memory - low-memory\n6830  1643 response      other      ospan_split high-memory - low-memory\n6831  1644 response      other      ospan_split high-memory - low-memory\n6832  1645 response      other      ospan_split high-memory - low-memory\n6833  1646 response      other      ospan_split high-memory - low-memory\n6834  1647 response      other      ospan_split high-memory - low-memory\n6835  1648 response      other      ospan_split high-memory - low-memory\n6836  1649 response      other      ospan_split high-memory - low-memory\n6837  1650 response      other      ospan_split high-memory - low-memory\n6838  1651 response      other      ospan_split high-memory - low-memory\n6839  1652 response      other      ospan_split high-memory - low-memory\n6840  1653 response      other      ospan_split high-memory - low-memory\n6841  1654 response      other      ospan_split high-memory - low-memory\n6842  1655 response      other      ospan_split high-memory - low-memory\n6843  1656 response      other      ospan_split high-memory - low-memory\n6844  1657 response      other      ospan_split high-memory - low-memory\n6845  1658 response      other      ospan_split high-memory - low-memory\n6846  1659 response      other      ospan_split high-memory - low-memory\n6847  1660 response      other      ospan_split high-memory - low-memory\n6848  1661 response      other      ospan_split high-memory - low-memory\n6849  1662 response      other      ospan_split high-memory - low-memory\n6850  1663 response      other      ospan_split high-memory - low-memory\n6851  1664 response      other      ospan_split high-memory - low-memory\n6852  1665 response      other      ospan_split high-memory - low-memory\n6853  1666 response      other      ospan_split high-memory - low-memory\n6854  1667 response      other      ospan_split high-memory - low-memory\n6855  1668 response      other      ospan_split high-memory - low-memory\n6856  1669 response      other      ospan_split high-memory - low-memory\n6857  1670 response      other      ospan_split high-memory - low-memory\n6858  1671 response      other      ospan_split high-memory - low-memory\n6859  1672 response      other      ospan_split high-memory - low-memory\n6860  1673 response      other      ospan_split high-memory - low-memory\n6861  1674 response      other      ospan_split high-memory - low-memory\n6862  1675 response      other      ospan_split high-memory - low-memory\n6863  1676 response      other      ospan_split high-memory - low-memory\n6864  1677 response      other      ospan_split high-memory - low-memory\n6865  1678 response      other      ospan_split high-memory - low-memory\n6866  1679 response      other      ospan_split high-memory - low-memory\n6867  1680 response      other      ospan_split high-memory - low-memory\n6868  1681 response      other      ospan_split high-memory - low-memory\n6869  1682 response      other      ospan_split high-memory - low-memory\n6870  1683 response      other      ospan_split high-memory - low-memory\n6871  1684 response      other      ospan_split high-memory - low-memory\n6872  1685 response      other      ospan_split high-memory - low-memory\n6873  1686 response      other      ospan_split high-memory - low-memory\n6874  1687 response      other      ospan_split high-memory - low-memory\n6875  1688 response      other      ospan_split high-memory - low-memory\n6876  1689 response      other      ospan_split high-memory - low-memory\n6877  1690 response      other      ospan_split high-memory - low-memory\n6878  1691 response      other      ospan_split high-memory - low-memory\n6879  1692 response      other      ospan_split high-memory - low-memory\n6880  1693 response      other      ospan_split high-memory - low-memory\n6881  1694 response      other      ospan_split high-memory - low-memory\n6882  1695 response      other      ospan_split high-memory - low-memory\n6883  1696 response      other      ospan_split high-memory - low-memory\n6884  1697 response      other      ospan_split high-memory - low-memory\n6885  1698 response      other      ospan_split high-memory - low-memory\n6886  1699 response      other      ospan_split high-memory - low-memory\n6887  1700 response      other      ospan_split high-memory - low-memory\n6888  1701 response      other      ospan_split high-memory - low-memory\n6889  1702 response      other      ospan_split high-memory - low-memory\n6890  1703 response      other      ospan_split high-memory - low-memory\n6891  1704 response      other      ospan_split high-memory - low-memory\n6892  1705 response      other      ospan_split high-memory - low-memory\n6893  1706 response      other      ospan_split high-memory - low-memory\n6894  1707 response      other      ospan_split high-memory - low-memory\n6895  1708 response      other      ospan_split high-memory - low-memory\n6896  1709 response      other      ospan_split high-memory - low-memory\n6897  1710 response      other      ospan_split high-memory - low-memory\n6898  1711 response      other      ospan_split high-memory - low-memory\n6899  1712 response      other      ospan_split high-memory - low-memory\n6900  1713 response      other      ospan_split high-memory - low-memory\n6901  1714 response      other      ospan_split high-memory - low-memory\n6902  1715 response      other      ospan_split high-memory - low-memory\n6903  1716 response      other      ospan_split high-memory - low-memory\n6904  1717 response      other      ospan_split high-memory - low-memory\n6905  1718 response      other      ospan_split high-memory - low-memory\n6906  1719 response      other      ospan_split high-memory - low-memory\n6907  1720 response      other      ospan_split high-memory - low-memory\n6908  1721 response      other      ospan_split high-memory - low-memory\n6909  1722 response      other      ospan_split high-memory - low-memory\n6910  1723 response      other      ospan_split high-memory - low-memory\n6911  1724 response      other      ospan_split high-memory - low-memory\n6912  1725 response      other      ospan_split high-memory - low-memory\n6913  1726 response      other      ospan_split high-memory - low-memory\n6914  1727 response      other      ospan_split high-memory - low-memory\n6915  1728 response      other      ospan_split high-memory - low-memory\n6916  1729 response      other      ospan_split high-memory - low-memory\n6917     1 response    angular pretty_condition        impasse - control\n6918     2 response    angular pretty_condition        impasse - control\n6919     3 response    angular pretty_condition        impasse - control\n6920     4 response    angular pretty_condition        impasse - control\n6921     5 response    angular pretty_condition        impasse - control\n6922     6 response    angular pretty_condition        impasse - control\n6923     7 response    angular pretty_condition        impasse - control\n6924     8 response    angular pretty_condition        impasse - control\n6925     9 response    angular pretty_condition        impasse - control\n6926    10 response    angular pretty_condition        impasse - control\n6927    11 response    angular pretty_condition        impasse - control\n6928    12 response    angular pretty_condition        impasse - control\n6929    13 response    angular pretty_condition        impasse - control\n6930    14 response    angular pretty_condition        impasse - control\n6931    15 response    angular pretty_condition        impasse - control\n6932    16 response    angular pretty_condition        impasse - control\n6933    17 response    angular pretty_condition        impasse - control\n6934    18 response    angular pretty_condition        impasse - control\n6935    19 response    angular pretty_condition        impasse - control\n6936    20 response    angular pretty_condition        impasse - control\n6937    21 response    angular pretty_condition        impasse - control\n6938    22 response    angular pretty_condition        impasse - control\n6939    23 response    angular pretty_condition        impasse - control\n6940    24 response    angular pretty_condition        impasse - control\n6941    25 response    angular pretty_condition        impasse - control\n6942    26 response    angular pretty_condition        impasse - control\n6943    27 response    angular pretty_condition        impasse - control\n6944    28 response    angular pretty_condition        impasse - control\n6945    29 response    angular pretty_condition        impasse - control\n6946    30 response    angular pretty_condition        impasse - control\n6947    31 response    angular pretty_condition        impasse - control\n6948    32 response    angular pretty_condition        impasse - control\n6949    33 response    angular pretty_condition        impasse - control\n6950    34 response    angular pretty_condition        impasse - control\n6951    35 response    angular pretty_condition        impasse - control\n6952    36 response    angular pretty_condition        impasse - control\n6953    37 response    angular pretty_condition        impasse - control\n6954    38 response    angular pretty_condition        impasse - control\n6955    39 response    angular pretty_condition        impasse - control\n6956    40 response    angular pretty_condition        impasse - control\n6957    41 response    angular pretty_condition        impasse - control\n6958    42 response    angular pretty_condition        impasse - control\n6959    43 response    angular pretty_condition        impasse - control\n6960    44 response    angular pretty_condition        impasse - control\n6961    45 response    angular pretty_condition        impasse - control\n6962    46 response    angular pretty_condition        impasse - control\n6963    47 response    angular pretty_condition        impasse - control\n6964    48 response    angular pretty_condition        impasse - control\n6965    49 response    angular pretty_condition        impasse - control\n6966    50 response    angular pretty_condition        impasse - control\n6967    51 response    angular pretty_condition        impasse - control\n6968    52 response    angular pretty_condition        impasse - control\n6969    53 response    angular pretty_condition        impasse - control\n6970    54 response    angular pretty_condition        impasse - control\n6971    55 response    angular pretty_condition        impasse - control\n6972    56 response    angular pretty_condition        impasse - control\n6973    57 response    angular pretty_condition        impasse - control\n6974    58 response    angular pretty_condition        impasse - control\n6975    59 response    angular pretty_condition        impasse - control\n6976    60 response    angular pretty_condition        impasse - control\n6977    61 response    angular pretty_condition        impasse - control\n6978    62 response    angular pretty_condition        impasse - control\n6979    63 response    angular pretty_condition        impasse - control\n6980    64 response    angular pretty_condition        impasse - control\n6981    65 response    angular pretty_condition        impasse - control\n6982    66 response    angular pretty_condition        impasse - control\n6983    67 response    angular pretty_condition        impasse - control\n6984    68 response    angular pretty_condition        impasse - control\n6985    69 response    angular pretty_condition        impasse - control\n6986    70 response    angular pretty_condition        impasse - control\n6987    71 response    angular pretty_condition        impasse - control\n6988    72 response    angular pretty_condition        impasse - control\n6989    73 response    angular pretty_condition        impasse - control\n6990    74 response    angular pretty_condition        impasse - control\n6991    75 response    angular pretty_condition        impasse - control\n6992    76 response    angular pretty_condition        impasse - control\n6993    77 response    angular pretty_condition        impasse - control\n6994    78 response    angular pretty_condition        impasse - control\n6995    79 response    angular pretty_condition        impasse - control\n6996    80 response    angular pretty_condition        impasse - control\n6997    81 response    angular pretty_condition        impasse - control\n6998    82 response    angular pretty_condition        impasse - control\n6999    83 response    angular pretty_condition        impasse - control\n7000    84 response    angular pretty_condition        impasse - control\n7001    85 response    angular pretty_condition        impasse - control\n7002    86 response    angular pretty_condition        impasse - control\n7003    87 response    angular pretty_condition        impasse - control\n7004    88 response    angular pretty_condition        impasse - control\n7005    89 response    angular pretty_condition        impasse - control\n7006    90 response    angular pretty_condition        impasse - control\n7007    91 response    angular pretty_condition        impasse - control\n7008    92 response    angular pretty_condition        impasse - control\n7009    93 response    angular pretty_condition        impasse - control\n7010    94 response    angular pretty_condition        impasse - control\n7011    95 response    angular pretty_condition        impasse - control\n7012    96 response    angular pretty_condition        impasse - control\n7013    97 response    angular pretty_condition        impasse - control\n7014    98 response    angular pretty_condition        impasse - control\n7015    99 response    angular pretty_condition        impasse - control\n7016   100 response    angular pretty_condition        impasse - control\n7017   101 response    angular pretty_condition        impasse - control\n7018   102 response    angular pretty_condition        impasse - control\n7019   103 response    angular pretty_condition        impasse - control\n7020   104 response    angular pretty_condition        impasse - control\n7021   105 response    angular pretty_condition        impasse - control\n7022   106 response    angular pretty_condition        impasse - control\n7023   107 response    angular pretty_condition        impasse - control\n7024   108 response    angular pretty_condition        impasse - control\n7025   109 response    angular pretty_condition        impasse - control\n7026   110 response    angular pretty_condition        impasse - control\n7027   111 response    angular pretty_condition        impasse - control\n7028   112 response    angular pretty_condition        impasse - control\n7029   113 response    angular pretty_condition        impasse - control\n7030   114 response    angular pretty_condition        impasse - control\n7031   115 response    angular pretty_condition        impasse - control\n7032   116 response    angular pretty_condition        impasse - control\n7033   117 response    angular pretty_condition        impasse - control\n7034   118 response    angular pretty_condition        impasse - control\n7035   119 response    angular pretty_condition        impasse - control\n7036   120 response    angular pretty_condition        impasse - control\n7037   121 response    angular pretty_condition        impasse - control\n7038   122 response    angular pretty_condition        impasse - control\n7039   123 response    angular pretty_condition        impasse - control\n7040   124 response    angular pretty_condition        impasse - control\n7041   125 response    angular pretty_condition        impasse - control\n7042   126 response    angular pretty_condition        impasse - control\n7043   127 response    angular pretty_condition        impasse - control\n7044   128 response    angular pretty_condition        impasse - control\n7045   129 response    angular pretty_condition        impasse - control\n7046   130 response    angular pretty_condition        impasse - control\n7047   131 response    angular pretty_condition        impasse - control\n7048   132 response    angular pretty_condition        impasse - control\n7049   133 response    angular pretty_condition        impasse - control\n7050   134 response    angular pretty_condition        impasse - control\n7051   135 response    angular pretty_condition        impasse - control\n7052   136 response    angular pretty_condition        impasse - control\n7053   137 response    angular pretty_condition        impasse - control\n7054   138 response    angular pretty_condition        impasse - control\n7055   139 response    angular pretty_condition        impasse - control\n7056   140 response    angular pretty_condition        impasse - control\n7057   141 response    angular pretty_condition        impasse - control\n7058   142 response    angular pretty_condition        impasse - control\n7059   143 response    angular pretty_condition        impasse - control\n7060   144 response    angular pretty_condition        impasse - control\n7061   145 response    angular pretty_condition        impasse - control\n7062   146 response    angular pretty_condition        impasse - control\n7063   147 response    angular pretty_condition        impasse - control\n7064   148 response    angular pretty_condition        impasse - control\n7065   149 response    angular pretty_condition        impasse - control\n7066   150 response    angular pretty_condition        impasse - control\n7067   151 response    angular pretty_condition        impasse - control\n7068   152 response    angular pretty_condition        impasse - control\n7069   153 response    angular pretty_condition        impasse - control\n7070   154 response    angular pretty_condition        impasse - control\n7071   155 response    angular pretty_condition        impasse - control\n7072   156 response    angular pretty_condition        impasse - control\n7073   157 response    angular pretty_condition        impasse - control\n7074   158 response    angular pretty_condition        impasse - control\n7075   159 response    angular pretty_condition        impasse - control\n7076   160 response    angular pretty_condition        impasse - control\n7077   161 response    angular pretty_condition        impasse - control\n7078   162 response    angular pretty_condition        impasse - control\n7079   163 response    angular pretty_condition        impasse - control\n7080   164 response    angular pretty_condition        impasse - control\n7081   165 response    angular pretty_condition        impasse - control\n7082   166 response    angular pretty_condition        impasse - control\n7083   167 response    angular pretty_condition        impasse - control\n7084   168 response    angular pretty_condition        impasse - control\n7085   169 response    angular pretty_condition        impasse - control\n7086   170 response    angular pretty_condition        impasse - control\n7087   171 response    angular pretty_condition        impasse - control\n7088   172 response    angular pretty_condition        impasse - control\n7089   173 response    angular pretty_condition        impasse - control\n7090   174 response    angular pretty_condition        impasse - control\n7091   175 response    angular pretty_condition        impasse - control\n7092   176 response    angular pretty_condition        impasse - control\n7093   177 response    angular pretty_condition        impasse - control\n7094   178 response    angular pretty_condition        impasse - control\n7095   179 response    angular pretty_condition        impasse - control\n7096   180 response    angular pretty_condition        impasse - control\n7097   181 response    angular pretty_condition        impasse - control\n7098   182 response    angular pretty_condition        impasse - control\n7099   183 response    angular pretty_condition        impasse - control\n7100   184 response    angular pretty_condition        impasse - control\n7101   185 response    angular pretty_condition        impasse - control\n7102   186 response    angular pretty_condition        impasse - control\n7103   187 response    angular pretty_condition        impasse - control\n7104   188 response    angular pretty_condition        impasse - control\n7105   189 response    angular pretty_condition        impasse - control\n7106   190 response    angular pretty_condition        impasse - control\n7107   191 response    angular pretty_condition        impasse - control\n7108   192 response    angular pretty_condition        impasse - control\n7109   193 response    angular pretty_condition        impasse - control\n7110   194 response    angular pretty_condition        impasse - control\n7111   195 response    angular pretty_condition        impasse - control\n7112   196 response    angular pretty_condition        impasse - control\n7113   197 response    angular pretty_condition        impasse - control\n7114   198 response    angular pretty_condition        impasse - control\n7115   199 response    angular pretty_condition        impasse - control\n7116   200 response    angular pretty_condition        impasse - control\n7117   201 response    angular pretty_condition        impasse - control\n7118   202 response    angular pretty_condition        impasse - control\n7119   203 response    angular pretty_condition        impasse - control\n7120   204 response    angular pretty_condition        impasse - control\n7121   205 response    angular pretty_condition        impasse - control\n7122   206 response    angular pretty_condition        impasse - control\n7123   207 response    angular pretty_condition        impasse - control\n7124   208 response    angular pretty_condition        impasse - control\n7125   209 response    angular pretty_condition        impasse - control\n7126   210 response    angular pretty_condition        impasse - control\n7127   211 response    angular pretty_condition        impasse - control\n7128   212 response    angular pretty_condition        impasse - control\n7129   213 response    angular pretty_condition        impasse - control\n7130   214 response    angular pretty_condition        impasse - control\n7131   215 response    angular pretty_condition        impasse - control\n7132   216 response    angular pretty_condition        impasse - control\n7133   217 response    angular pretty_condition        impasse - control\n7134   218 response    angular pretty_condition        impasse - control\n7135   219 response    angular pretty_condition        impasse - control\n7136   220 response    angular pretty_condition        impasse - control\n7137   221 response    angular pretty_condition        impasse - control\n7138   222 response    angular pretty_condition        impasse - control\n7139   223 response    angular pretty_condition        impasse - control\n7140   224 response    angular pretty_condition        impasse - control\n7141   225 response    angular pretty_condition        impasse - control\n7142   226 response    angular pretty_condition        impasse - control\n7143   227 response    angular pretty_condition        impasse - control\n7144   228 response    angular pretty_condition        impasse - control\n7145   229 response    angular pretty_condition        impasse - control\n7146   230 response    angular pretty_condition        impasse - control\n7147   231 response    angular pretty_condition        impasse - control\n7148   232 response    angular pretty_condition        impasse - control\n7149   233 response    angular pretty_condition        impasse - control\n7150   234 response    angular pretty_condition        impasse - control\n7151   235 response    angular pretty_condition        impasse - control\n7152   236 response    angular pretty_condition        impasse - control\n7153   237 response    angular pretty_condition        impasse - control\n7154   238 response    angular pretty_condition        impasse - control\n7155   239 response    angular pretty_condition        impasse - control\n7156   240 response    angular pretty_condition        impasse - control\n7157   241 response    angular pretty_condition        impasse - control\n7158   242 response    angular pretty_condition        impasse - control\n7159   243 response    angular pretty_condition        impasse - control\n7160   244 response    angular pretty_condition        impasse - control\n7161   245 response    angular pretty_condition        impasse - control\n7162   246 response    angular pretty_condition        impasse - control\n7163   247 response    angular pretty_condition        impasse - control\n7164   248 response    angular pretty_condition        impasse - control\n7165   249 response    angular pretty_condition        impasse - control\n7166   250 response    angular pretty_condition        impasse - control\n7167   251 response    angular pretty_condition        impasse - control\n7168   252 response    angular pretty_condition        impasse - control\n7169   253 response    angular pretty_condition        impasse - control\n7170   254 response    angular pretty_condition        impasse - control\n7171   255 response    angular pretty_condition        impasse - control\n7172   256 response    angular pretty_condition        impasse - control\n7173   257 response    angular pretty_condition        impasse - control\n7174   258 response    angular pretty_condition        impasse - control\n7175   259 response    angular pretty_condition        impasse - control\n7176   260 response    angular pretty_condition        impasse - control\n7177   261 response    angular pretty_condition        impasse - control\n7178   262 response    angular pretty_condition        impasse - control\n7179   263 response    angular pretty_condition        impasse - control\n7180   264 response    angular pretty_condition        impasse - control\n7181   265 response    angular pretty_condition        impasse - control\n7182   266 response    angular pretty_condition        impasse - control\n7183   267 response    angular pretty_condition        impasse - control\n7184   268 response    angular pretty_condition        impasse - control\n7185   269 response    angular pretty_condition        impasse - control\n7186   270 response    angular pretty_condition        impasse - control\n7187   271 response    angular pretty_condition        impasse - control\n7188   272 response    angular pretty_condition        impasse - control\n7189   273 response    angular pretty_condition        impasse - control\n7190   274 response    angular pretty_condition        impasse - control\n7191   275 response    angular pretty_condition        impasse - control\n7192   276 response    angular pretty_condition        impasse - control\n7193   277 response    angular pretty_condition        impasse - control\n7194   278 response    angular pretty_condition        impasse - control\n7195   279 response    angular pretty_condition        impasse - control\n7196   280 response    angular pretty_condition        impasse - control\n7197   281 response    angular pretty_condition        impasse - control\n7198   282 response    angular pretty_condition        impasse - control\n7199   283 response    angular pretty_condition        impasse - control\n7200   284 response    angular pretty_condition        impasse - control\n7201   285 response    angular pretty_condition        impasse - control\n7202   286 response    angular pretty_condition        impasse - control\n7203   287 response    angular pretty_condition        impasse - control\n7204   288 response    angular pretty_condition        impasse - control\n7205   289 response    angular pretty_condition        impasse - control\n7206   290 response    angular pretty_condition        impasse - control\n7207   291 response    angular pretty_condition        impasse - control\n7208   292 response    angular pretty_condition        impasse - control\n7209   293 response    angular pretty_condition        impasse - control\n7210   294 response    angular pretty_condition        impasse - control\n7211   295 response    angular pretty_condition        impasse - control\n7212   296 response    angular pretty_condition        impasse - control\n7213   297 response    angular pretty_condition        impasse - control\n7214   298 response    angular pretty_condition        impasse - control\n7215   299 response    angular pretty_condition        impasse - control\n7216   300 response    angular pretty_condition        impasse - control\n7217   301 response    angular pretty_condition        impasse - control\n7218   302 response    angular pretty_condition        impasse - control\n7219   303 response    angular pretty_condition        impasse - control\n7220   304 response    angular pretty_condition        impasse - control\n7221   305 response    angular pretty_condition        impasse - control\n7222   306 response    angular pretty_condition        impasse - control\n7223   307 response    angular pretty_condition        impasse - control\n7224   308 response    angular pretty_condition        impasse - control\n7225   309 response    angular pretty_condition        impasse - control\n7226   310 response    angular pretty_condition        impasse - control\n7227   311 response    angular pretty_condition        impasse - control\n7228   312 response    angular pretty_condition        impasse - control\n7229   313 response    angular pretty_condition        impasse - control\n7230   314 response    angular pretty_condition        impasse - control\n7231   315 response    angular pretty_condition        impasse - control\n7232   316 response    angular pretty_condition        impasse - control\n7233   317 response    angular pretty_condition        impasse - control\n7234   318 response    angular pretty_condition        impasse - control\n7235   319 response    angular pretty_condition        impasse - control\n7236   320 response    angular pretty_condition        impasse - control\n7237   321 response    angular pretty_condition        impasse - control\n7238   322 response    angular pretty_condition        impasse - control\n7239   323 response    angular pretty_condition        impasse - control\n7240   324 response    angular pretty_condition        impasse - control\n7241   325 response    angular pretty_condition        impasse - control\n7242   326 response    angular pretty_condition        impasse - control\n7243   327 response    angular pretty_condition        impasse - control\n7244   328 response    angular pretty_condition        impasse - control\n7245   329 response    angular pretty_condition        impasse - control\n7246   330 response    angular pretty_condition        impasse - control\n7247   331 response    angular pretty_condition        impasse - control\n7248   332 response    angular pretty_condition        impasse - control\n7249   333 response    angular pretty_condition        impasse - control\n7250   334 response    angular pretty_condition        impasse - control\n7251   335 response    angular pretty_condition        impasse - control\n7252   336 response    angular pretty_condition        impasse - control\n7253   337 response    angular pretty_condition        impasse - control\n7254   338 response    angular pretty_condition        impasse - control\n7255   339 response    angular pretty_condition        impasse - control\n7256   340 response    angular pretty_condition        impasse - control\n7257   341 response    angular pretty_condition        impasse - control\n7258   342 response    angular pretty_condition        impasse - control\n7259   343 response    angular pretty_condition        impasse - control\n7260   344 response    angular pretty_condition        impasse - control\n7261   345 response    angular pretty_condition        impasse - control\n7262   346 response    angular pretty_condition        impasse - control\n7263   347 response    angular pretty_condition        impasse - control\n7264   348 response    angular pretty_condition        impasse - control\n7265   349 response    angular pretty_condition        impasse - control\n7266   350 response    angular pretty_condition        impasse - control\n7267   351 response    angular pretty_condition        impasse - control\n7268   352 response    angular pretty_condition        impasse - control\n7269   353 response    angular pretty_condition        impasse - control\n7270   354 response    angular pretty_condition        impasse - control\n7271   355 response    angular pretty_condition        impasse - control\n7272   356 response    angular pretty_condition        impasse - control\n7273   357 response    angular pretty_condition        impasse - control\n7274   358 response    angular pretty_condition        impasse - control\n7275   359 response    angular pretty_condition        impasse - control\n7276   360 response    angular pretty_condition        impasse - control\n7277   361 response    angular pretty_condition        impasse - control\n7278   362 response    angular pretty_condition        impasse - control\n7279   363 response    angular pretty_condition        impasse - control\n7280   364 response    angular pretty_condition        impasse - control\n7281   365 response    angular pretty_condition        impasse - control\n7282   366 response    angular pretty_condition        impasse - control\n7283   367 response    angular pretty_condition        impasse - control\n7284   368 response    angular pretty_condition        impasse - control\n7285   369 response    angular pretty_condition        impasse - control\n7286   370 response    angular pretty_condition        impasse - control\n7287   371 response    angular pretty_condition        impasse - control\n7288   372 response    angular pretty_condition        impasse - control\n7289   373 response    angular pretty_condition        impasse - control\n7290   374 response    angular pretty_condition        impasse - control\n7291   375 response    angular pretty_condition        impasse - control\n7292   376 response    angular pretty_condition        impasse - control\n7293   377 response    angular pretty_condition        impasse - control\n7294   378 response    angular pretty_condition        impasse - control\n7295   379 response    angular pretty_condition        impasse - control\n7296   380 response    angular pretty_condition        impasse - control\n7297   381 response    angular pretty_condition        impasse - control\n7298   382 response    angular pretty_condition        impasse - control\n7299   383 response    angular pretty_condition        impasse - control\n7300   384 response    angular pretty_condition        impasse - control\n7301   385 response    angular pretty_condition        impasse - control\n7302   386 response    angular pretty_condition        impasse - control\n7303   387 response    angular pretty_condition        impasse - control\n7304   388 response    angular pretty_condition        impasse - control\n7305   389 response    angular pretty_condition        impasse - control\n7306   390 response    angular pretty_condition        impasse - control\n7307   391 response    angular pretty_condition        impasse - control\n7308   392 response    angular pretty_condition        impasse - control\n7309   393 response    angular pretty_condition        impasse - control\n7310   394 response    angular pretty_condition        impasse - control\n7311   395 response    angular pretty_condition        impasse - control\n7312   396 response    angular pretty_condition        impasse - control\n7313   397 response    angular pretty_condition        impasse - control\n7314   398 response    angular pretty_condition        impasse - control\n7315   399 response    angular pretty_condition        impasse - control\n7316   400 response    angular pretty_condition        impasse - control\n7317   401 response    angular pretty_condition        impasse - control\n7318   402 response    angular pretty_condition        impasse - control\n7319   403 response    angular pretty_condition        impasse - control\n7320   404 response    angular pretty_condition        impasse - control\n7321   405 response    angular pretty_condition        impasse - control\n7322   406 response    angular pretty_condition        impasse - control\n7323   407 response    angular pretty_condition        impasse - control\n7324   408 response    angular pretty_condition        impasse - control\n7325   409 response    angular pretty_condition        impasse - control\n7326   410 response    angular pretty_condition        impasse - control\n7327   411 response    angular pretty_condition        impasse - control\n7328   412 response    angular pretty_condition        impasse - control\n7329   413 response    angular pretty_condition        impasse - control\n7330   414 response    angular pretty_condition        impasse - control\n7331   415 response    angular pretty_condition        impasse - control\n7332   416 response    angular pretty_condition        impasse - control\n7333   417 response    angular pretty_condition        impasse - control\n7334   418 response    angular pretty_condition        impasse - control\n7335   419 response    angular pretty_condition        impasse - control\n7336   420 response    angular pretty_condition        impasse - control\n7337   421 response    angular pretty_condition        impasse - control\n7338   422 response    angular pretty_condition        impasse - control\n7339   423 response    angular pretty_condition        impasse - control\n7340   424 response    angular pretty_condition        impasse - control\n7341   425 response    angular pretty_condition        impasse - control\n7342   426 response    angular pretty_condition        impasse - control\n7343   427 response    angular pretty_condition        impasse - control\n7344   428 response    angular pretty_condition        impasse - control\n7345   429 response    angular pretty_condition        impasse - control\n7346   430 response    angular pretty_condition        impasse - control\n7347   431 response    angular pretty_condition        impasse - control\n7348   432 response    angular pretty_condition        impasse - control\n7349   433 response    angular pretty_condition        impasse - control\n7350   434 response    angular pretty_condition        impasse - control\n7351   435 response    angular pretty_condition        impasse - control\n7352   436 response    angular pretty_condition        impasse - control\n7353   437 response    angular pretty_condition        impasse - control\n7354   438 response    angular pretty_condition        impasse - control\n7355   439 response    angular pretty_condition        impasse - control\n7356   440 response    angular pretty_condition        impasse - control\n7357   441 response    angular pretty_condition        impasse - control\n7358   442 response    angular pretty_condition        impasse - control\n7359   443 response    angular pretty_condition        impasse - control\n7360   444 response    angular pretty_condition        impasse - control\n7361   445 response    angular pretty_condition        impasse - control\n7362   446 response    angular pretty_condition        impasse - control\n7363   447 response    angular pretty_condition        impasse - control\n7364   448 response    angular pretty_condition        impasse - control\n7365   449 response    angular pretty_condition        impasse - control\n7366   450 response    angular pretty_condition        impasse - control\n7367   451 response    angular pretty_condition        impasse - control\n7368   452 response    angular pretty_condition        impasse - control\n7369   453 response    angular pretty_condition        impasse - control\n7370   454 response    angular pretty_condition        impasse - control\n7371   455 response    angular pretty_condition        impasse - control\n7372   456 response    angular pretty_condition        impasse - control\n7373   457 response    angular pretty_condition        impasse - control\n7374   458 response    angular pretty_condition        impasse - control\n7375   459 response    angular pretty_condition        impasse - control\n7376   460 response    angular pretty_condition        impasse - control\n7377   461 response    angular pretty_condition        impasse - control\n7378   462 response    angular pretty_condition        impasse - control\n7379   463 response    angular pretty_condition        impasse - control\n7380   464 response    angular pretty_condition        impasse - control\n7381   465 response    angular pretty_condition        impasse - control\n7382   466 response    angular pretty_condition        impasse - control\n7383   467 response    angular pretty_condition        impasse - control\n7384   468 response    angular pretty_condition        impasse - control\n7385   469 response    angular pretty_condition        impasse - control\n7386   470 response    angular pretty_condition        impasse - control\n7387   471 response    angular pretty_condition        impasse - control\n7388   472 response    angular pretty_condition        impasse - control\n7389   473 response    angular pretty_condition        impasse - control\n7390   474 response    angular pretty_condition        impasse - control\n7391   475 response    angular pretty_condition        impasse - control\n7392   476 response    angular pretty_condition        impasse - control\n7393   477 response    angular pretty_condition        impasse - control\n7394   478 response    angular pretty_condition        impasse - control\n7395   479 response    angular pretty_condition        impasse - control\n7396   480 response    angular pretty_condition        impasse - control\n7397   481 response    angular pretty_condition        impasse - control\n7398   482 response    angular pretty_condition        impasse - control\n7399   483 response    angular pretty_condition        impasse - control\n7400   484 response    angular pretty_condition        impasse - control\n7401   485 response    angular pretty_condition        impasse - control\n7402   486 response    angular pretty_condition        impasse - control\n7403   487 response    angular pretty_condition        impasse - control\n7404   488 response    angular pretty_condition        impasse - control\n7405   489 response    angular pretty_condition        impasse - control\n7406   490 response    angular pretty_condition        impasse - control\n7407   491 response    angular pretty_condition        impasse - control\n7408   492 response    angular pretty_condition        impasse - control\n7409   493 response    angular pretty_condition        impasse - control\n7410   494 response    angular pretty_condition        impasse - control\n7411   495 response    angular pretty_condition        impasse - control\n7412   496 response    angular pretty_condition        impasse - control\n7413   497 response    angular pretty_condition        impasse - control\n7414   498 response    angular pretty_condition        impasse - control\n7415   499 response    angular pretty_condition        impasse - control\n7416   500 response    angular pretty_condition        impasse - control\n7417   501 response    angular pretty_condition        impasse - control\n7418   502 response    angular pretty_condition        impasse - control\n7419   503 response    angular pretty_condition        impasse - control\n7420   504 response    angular pretty_condition        impasse - control\n7421   505 response    angular pretty_condition        impasse - control\n7422   506 response    angular pretty_condition        impasse - control\n7423   507 response    angular pretty_condition        impasse - control\n7424   508 response    angular pretty_condition        impasse - control\n7425   509 response    angular pretty_condition        impasse - control\n7426   510 response    angular pretty_condition        impasse - control\n7427   511 response    angular pretty_condition        impasse - control\n7428   512 response    angular pretty_condition        impasse - control\n7429   513 response    angular pretty_condition        impasse - control\n7430   514 response    angular pretty_condition        impasse - control\n7431   515 response    angular pretty_condition        impasse - control\n7432   516 response    angular pretty_condition        impasse - control\n7433   517 response    angular pretty_condition        impasse - control\n7434   518 response    angular pretty_condition        impasse - control\n7435   519 response    angular pretty_condition        impasse - control\n7436   520 response    angular pretty_condition        impasse - control\n7437   521 response    angular pretty_condition        impasse - control\n7438   522 response    angular pretty_condition        impasse - control\n7439   523 response    angular pretty_condition        impasse - control\n7440   524 response    angular pretty_condition        impasse - control\n7441   525 response    angular pretty_condition        impasse - control\n7442   526 response    angular pretty_condition        impasse - control\n7443   527 response    angular pretty_condition        impasse - control\n7444   528 response    angular pretty_condition        impasse - control\n7445   529 response    angular pretty_condition        impasse - control\n7446   530 response    angular pretty_condition        impasse - control\n7447   531 response    angular pretty_condition        impasse - control\n7448   532 response    angular pretty_condition        impasse - control\n7449   533 response    angular pretty_condition        impasse - control\n7450   534 response    angular pretty_condition        impasse - control\n7451   535 response    angular pretty_condition        impasse - control\n7452   536 response    angular pretty_condition        impasse - control\n7453   537 response    angular pretty_condition        impasse - control\n7454   538 response    angular pretty_condition        impasse - control\n7455   539 response    angular pretty_condition        impasse - control\n7456   540 response    angular pretty_condition        impasse - control\n7457   541 response    angular pretty_condition        impasse - control\n7458   542 response    angular pretty_condition        impasse - control\n7459   543 response    angular pretty_condition        impasse - control\n7460   544 response    angular pretty_condition        impasse - control\n7461   545 response    angular pretty_condition        impasse - control\n7462   546 response    angular pretty_condition        impasse - control\n7463   547 response    angular pretty_condition        impasse - control\n7464   548 response    angular pretty_condition        impasse - control\n7465   549 response    angular pretty_condition        impasse - control\n7466   550 response    angular pretty_condition        impasse - control\n7467   551 response    angular pretty_condition        impasse - control\n7468   552 response    angular pretty_condition        impasse - control\n7469   553 response    angular pretty_condition        impasse - control\n7470   554 response    angular pretty_condition        impasse - control\n7471   555 response    angular pretty_condition        impasse - control\n7472   556 response    angular pretty_condition        impasse - control\n7473   557 response    angular pretty_condition        impasse - control\n7474   558 response    angular pretty_condition        impasse - control\n7475   559 response    angular pretty_condition        impasse - control\n7476   560 response    angular pretty_condition        impasse - control\n7477   561 response    angular pretty_condition        impasse - control\n7478   562 response    angular pretty_condition        impasse - control\n7479   563 response    angular pretty_condition        impasse - control\n7480   564 response    angular pretty_condition        impasse - control\n7481   565 response    angular pretty_condition        impasse - control\n7482   566 response    angular pretty_condition        impasse - control\n7483   567 response    angular pretty_condition        impasse - control\n7484   568 response    angular pretty_condition        impasse - control\n7485   569 response    angular pretty_condition        impasse - control\n7486   570 response    angular pretty_condition        impasse - control\n7487   571 response    angular pretty_condition        impasse - control\n7488   572 response    angular pretty_condition        impasse - control\n7489   573 response    angular pretty_condition        impasse - control\n7490   574 response    angular pretty_condition        impasse - control\n7491   575 response    angular pretty_condition        impasse - control\n7492   576 response    angular pretty_condition        impasse - control\n7493   577 response    angular pretty_condition        impasse - control\n7494   578 response    angular pretty_condition        impasse - control\n7495   579 response    angular pretty_condition        impasse - control\n7496   580 response    angular pretty_condition        impasse - control\n7497   581 response    angular pretty_condition        impasse - control\n7498   582 response    angular pretty_condition        impasse - control\n7499   583 response    angular pretty_condition        impasse - control\n7500   584 response    angular pretty_condition        impasse - control\n7501   585 response    angular pretty_condition        impasse - control\n7502   586 response    angular pretty_condition        impasse - control\n7503   587 response    angular pretty_condition        impasse - control\n7504   588 response    angular pretty_condition        impasse - control\n7505   589 response    angular pretty_condition        impasse - control\n7506   590 response    angular pretty_condition        impasse - control\n7507   591 response    angular pretty_condition        impasse - control\n7508   592 response    angular pretty_condition        impasse - control\n7509   593 response    angular pretty_condition        impasse - control\n7510   594 response    angular pretty_condition        impasse - control\n7511   595 response    angular pretty_condition        impasse - control\n7512   596 response    angular pretty_condition        impasse - control\n7513   597 response    angular pretty_condition        impasse - control\n7514   598 response    angular pretty_condition        impasse - control\n7515   599 response    angular pretty_condition        impasse - control\n7516   600 response    angular pretty_condition        impasse - control\n7517   601 response    angular pretty_condition        impasse - control\n7518   602 response    angular pretty_condition        impasse - control\n7519   603 response    angular pretty_condition        impasse - control\n7520   604 response    angular pretty_condition        impasse - control\n7521   605 response    angular pretty_condition        impasse - control\n7522   606 response    angular pretty_condition        impasse - control\n7523   607 response    angular pretty_condition        impasse - control\n7524   608 response    angular pretty_condition        impasse - control\n7525   609 response    angular pretty_condition        impasse - control\n7526   610 response    angular pretty_condition        impasse - control\n7527   611 response    angular pretty_condition        impasse - control\n7528   612 response    angular pretty_condition        impasse - control\n7529   613 response    angular pretty_condition        impasse - control\n7530   614 response    angular pretty_condition        impasse - control\n7531   615 response    angular pretty_condition        impasse - control\n7532   616 response    angular pretty_condition        impasse - control\n7533   617 response    angular pretty_condition        impasse - control\n7534   618 response    angular pretty_condition        impasse - control\n7535   619 response    angular pretty_condition        impasse - control\n7536   620 response    angular pretty_condition        impasse - control\n7537   621 response    angular pretty_condition        impasse - control\n7538   622 response    angular pretty_condition        impasse - control\n7539   623 response    angular pretty_condition        impasse - control\n7540   624 response    angular pretty_condition        impasse - control\n7541   625 response    angular pretty_condition        impasse - control\n7542   626 response    angular pretty_condition        impasse - control\n7543   627 response    angular pretty_condition        impasse - control\n7544   628 response    angular pretty_condition        impasse - control\n7545   629 response    angular pretty_condition        impasse - control\n7546   630 response    angular pretty_condition        impasse - control\n7547   631 response    angular pretty_condition        impasse - control\n7548   632 response    angular pretty_condition        impasse - control\n7549   633 response    angular pretty_condition        impasse - control\n7550   634 response    angular pretty_condition        impasse - control\n7551   635 response    angular pretty_condition        impasse - control\n7552   636 response    angular pretty_condition        impasse - control\n7553   637 response    angular pretty_condition        impasse - control\n7554   638 response    angular pretty_condition        impasse - control\n7555   639 response    angular pretty_condition        impasse - control\n7556   640 response    angular pretty_condition        impasse - control\n7557   641 response    angular pretty_condition        impasse - control\n7558   642 response    angular pretty_condition        impasse - control\n7559   643 response    angular pretty_condition        impasse - control\n7560   644 response    angular pretty_condition        impasse - control\n7561   645 response    angular pretty_condition        impasse - control\n7562   646 response    angular pretty_condition        impasse - control\n7563   647 response    angular pretty_condition        impasse - control\n7564   648 response    angular pretty_condition        impasse - control\n7565   649 response    angular pretty_condition        impasse - control\n7566   650 response    angular pretty_condition        impasse - control\n7567   651 response    angular pretty_condition        impasse - control\n7568   652 response    angular pretty_condition        impasse - control\n7569   653 response    angular pretty_condition        impasse - control\n7570   654 response    angular pretty_condition        impasse - control\n7571   655 response    angular pretty_condition        impasse - control\n7572   656 response    angular pretty_condition        impasse - control\n7573   657 response    angular pretty_condition        impasse - control\n7574   658 response    angular pretty_condition        impasse - control\n7575   659 response    angular pretty_condition        impasse - control\n7576   660 response    angular pretty_condition        impasse - control\n7577   661 response    angular pretty_condition        impasse - control\n7578   662 response    angular pretty_condition        impasse - control\n7579   663 response    angular pretty_condition        impasse - control\n7580   664 response    angular pretty_condition        impasse - control\n7581   665 response    angular pretty_condition        impasse - control\n7582   666 response    angular pretty_condition        impasse - control\n7583   667 response    angular pretty_condition        impasse - control\n7584   668 response    angular pretty_condition        impasse - control\n7585   669 response    angular pretty_condition        impasse - control\n7586   670 response    angular pretty_condition        impasse - control\n7587   671 response    angular pretty_condition        impasse - control\n7588   672 response    angular pretty_condition        impasse - control\n7589   673 response    angular pretty_condition        impasse - control\n7590   674 response    angular pretty_condition        impasse - control\n7591   675 response    angular pretty_condition        impasse - control\n7592   676 response    angular pretty_condition        impasse - control\n7593   677 response    angular pretty_condition        impasse - control\n7594   678 response    angular pretty_condition        impasse - control\n7595   679 response    angular pretty_condition        impasse - control\n7596   680 response    angular pretty_condition        impasse - control\n7597   681 response    angular pretty_condition        impasse - control\n7598   682 response    angular pretty_condition        impasse - control\n7599   683 response    angular pretty_condition        impasse - control\n7600   684 response    angular pretty_condition        impasse - control\n7601   685 response    angular pretty_condition        impasse - control\n7602   686 response    angular pretty_condition        impasse - control\n7603   687 response    angular pretty_condition        impasse - control\n7604   688 response    angular pretty_condition        impasse - control\n7605   689 response    angular pretty_condition        impasse - control\n7606   690 response    angular pretty_condition        impasse - control\n7607   691 response    angular pretty_condition        impasse - control\n7608   692 response    angular pretty_condition        impasse - control\n7609   693 response    angular pretty_condition        impasse - control\n7610   694 response    angular pretty_condition        impasse - control\n7611   695 response    angular pretty_condition        impasse - control\n7612   696 response    angular pretty_condition        impasse - control\n7613   697 response    angular pretty_condition        impasse - control\n7614   698 response    angular pretty_condition        impasse - control\n7615   699 response    angular pretty_condition        impasse - control\n7616   700 response    angular pretty_condition        impasse - control\n7617   701 response    angular pretty_condition        impasse - control\n7618   702 response    angular pretty_condition        impasse - control\n7619   703 response    angular pretty_condition        impasse - control\n7620   704 response    angular pretty_condition        impasse - control\n7621   705 response    angular pretty_condition        impasse - control\n7622   706 response    angular pretty_condition        impasse - control\n7623   707 response    angular pretty_condition        impasse - control\n7624   708 response    angular pretty_condition        impasse - control\n7625   709 response    angular pretty_condition        impasse - control\n7626   710 response    angular pretty_condition        impasse - control\n7627   711 response    angular pretty_condition        impasse - control\n7628   712 response    angular pretty_condition        impasse - control\n7629   713 response    angular pretty_condition        impasse - control\n7630   714 response    angular pretty_condition        impasse - control\n7631   715 response    angular pretty_condition        impasse - control\n7632   716 response    angular pretty_condition        impasse - control\n7633   717 response    angular pretty_condition        impasse - control\n7634   718 response    angular pretty_condition        impasse - control\n7635   719 response    angular pretty_condition        impasse - control\n7636   720 response    angular pretty_condition        impasse - control\n7637   721 response    angular pretty_condition        impasse - control\n7638   722 response    angular pretty_condition        impasse - control\n7639   723 response    angular pretty_condition        impasse - control\n7640   724 response    angular pretty_condition        impasse - control\n7641   725 response    angular pretty_condition        impasse - control\n7642   726 response    angular pretty_condition        impasse - control\n7643   727 response    angular pretty_condition        impasse - control\n7644   728 response    angular pretty_condition        impasse - control\n7645   729 response    angular pretty_condition        impasse - control\n7646   730 response    angular pretty_condition        impasse - control\n7647   731 response    angular pretty_condition        impasse - control\n7648   732 response    angular pretty_condition        impasse - control\n7649   733 response    angular pretty_condition        impasse - control\n7650   734 response    angular pretty_condition        impasse - control\n7651   735 response    angular pretty_condition        impasse - control\n7652   736 response    angular pretty_condition        impasse - control\n7653   737 response    angular pretty_condition        impasse - control\n7654   738 response    angular pretty_condition        impasse - control\n7655   739 response    angular pretty_condition        impasse - control\n7656   740 response    angular pretty_condition        impasse - control\n7657   741 response    angular pretty_condition        impasse - control\n7658   742 response    angular pretty_condition        impasse - control\n7659   743 response    angular pretty_condition        impasse - control\n7660   744 response    angular pretty_condition        impasse - control\n7661   745 response    angular pretty_condition        impasse - control\n7662   746 response    angular pretty_condition        impasse - control\n7663   747 response    angular pretty_condition        impasse - control\n7664   748 response    angular pretty_condition        impasse - control\n7665   749 response    angular pretty_condition        impasse - control\n7666   750 response    angular pretty_condition        impasse - control\n7667   751 response    angular pretty_condition        impasse - control\n7668   752 response    angular pretty_condition        impasse - control\n7669   753 response    angular pretty_condition        impasse - control\n7670   754 response    angular pretty_condition        impasse - control\n7671   755 response    angular pretty_condition        impasse - control\n7672   756 response    angular pretty_condition        impasse - control\n7673   757 response    angular pretty_condition        impasse - control\n7674   758 response    angular pretty_condition        impasse - control\n7675   759 response    angular pretty_condition        impasse - control\n7676   760 response    angular pretty_condition        impasse - control\n7677   761 response    angular pretty_condition        impasse - control\n7678   762 response    angular pretty_condition        impasse - control\n7679   763 response    angular pretty_condition        impasse - control\n7680   764 response    angular pretty_condition        impasse - control\n7681   765 response    angular pretty_condition        impasse - control\n7682   766 response    angular pretty_condition        impasse - control\n7683   767 response    angular pretty_condition        impasse - control\n7684   768 response    angular pretty_condition        impasse - control\n7685   769 response    angular pretty_condition        impasse - control\n7686   770 response    angular pretty_condition        impasse - control\n7687   771 response    angular pretty_condition        impasse - control\n7688   772 response    angular pretty_condition        impasse - control\n7689   773 response    angular pretty_condition        impasse - control\n7690   774 response    angular pretty_condition        impasse - control\n7691   775 response    angular pretty_condition        impasse - control\n7692   776 response    angular pretty_condition        impasse - control\n7693   777 response    angular pretty_condition        impasse - control\n7694   778 response    angular pretty_condition        impasse - control\n7695   779 response    angular pretty_condition        impasse - control\n7696   780 response    angular pretty_condition        impasse - control\n7697   781 response    angular pretty_condition        impasse - control\n7698   782 response    angular pretty_condition        impasse - control\n7699   783 response    angular pretty_condition        impasse - control\n7700   784 response    angular pretty_condition        impasse - control\n7701   785 response    angular pretty_condition        impasse - control\n7702   786 response    angular pretty_condition        impasse - control\n7703   787 response    angular pretty_condition        impasse - control\n7704   788 response    angular pretty_condition        impasse - control\n7705   789 response    angular pretty_condition        impasse - control\n7706   790 response    angular pretty_condition        impasse - control\n7707   791 response    angular pretty_condition        impasse - control\n7708   792 response    angular pretty_condition        impasse - control\n7709   793 response    angular pretty_condition        impasse - control\n7710   794 response    angular pretty_condition        impasse - control\n7711   795 response    angular pretty_condition        impasse - control\n7712   796 response    angular pretty_condition        impasse - control\n7713   797 response    angular pretty_condition        impasse - control\n7714   798 response    angular pretty_condition        impasse - control\n7715   799 response    angular pretty_condition        impasse - control\n7716   800 response    angular pretty_condition        impasse - control\n7717   801 response    angular pretty_condition        impasse - control\n7718   802 response    angular pretty_condition        impasse - control\n7719   803 response    angular pretty_condition        impasse - control\n7720   804 response    angular pretty_condition        impasse - control\n7721   805 response    angular pretty_condition        impasse - control\n7722   806 response    angular pretty_condition        impasse - control\n7723   807 response    angular pretty_condition        impasse - control\n7724   808 response    angular pretty_condition        impasse - control\n7725   809 response    angular pretty_condition        impasse - control\n7726   810 response    angular pretty_condition        impasse - control\n7727   811 response    angular pretty_condition        impasse - control\n7728   812 response    angular pretty_condition        impasse - control\n7729   813 response    angular pretty_condition        impasse - control\n7730   814 response    angular pretty_condition        impasse - control\n7731   815 response    angular pretty_condition        impasse - control\n7732   816 response    angular pretty_condition        impasse - control\n7733   817 response    angular pretty_condition        impasse - control\n7734   818 response    angular pretty_condition        impasse - control\n7735   819 response    angular pretty_condition        impasse - control\n7736   820 response    angular pretty_condition        impasse - control\n7737   821 response    angular pretty_condition        impasse - control\n7738   822 response    angular pretty_condition        impasse - control\n7739   823 response    angular pretty_condition        impasse - control\n7740   824 response    angular pretty_condition        impasse - control\n7741   825 response    angular pretty_condition        impasse - control\n7742   826 response    angular pretty_condition        impasse - control\n7743   827 response    angular pretty_condition        impasse - control\n7744   828 response    angular pretty_condition        impasse - control\n7745   829 response    angular pretty_condition        impasse - control\n7746   830 response    angular pretty_condition        impasse - control\n7747   831 response    angular pretty_condition        impasse - control\n7748   832 response    angular pretty_condition        impasse - control\n7749   833 response    angular pretty_condition        impasse - control\n7750   834 response    angular pretty_condition        impasse - control\n7751   835 response    angular pretty_condition        impasse - control\n7752   836 response    angular pretty_condition        impasse - control\n7753   837 response    angular pretty_condition        impasse - control\n7754   838 response    angular pretty_condition        impasse - control\n7755   839 response    angular pretty_condition        impasse - control\n7756   840 response    angular pretty_condition        impasse - control\n7757   841 response    angular pretty_condition        impasse - control\n7758   842 response    angular pretty_condition        impasse - control\n7759   843 response    angular pretty_condition        impasse - control\n7760   844 response    angular pretty_condition        impasse - control\n7761   845 response    angular pretty_condition        impasse - control\n7762   846 response    angular pretty_condition        impasse - control\n7763   847 response    angular pretty_condition        impasse - control\n7764   848 response    angular pretty_condition        impasse - control\n7765   849 response    angular pretty_condition        impasse - control\n7766   850 response    angular pretty_condition        impasse - control\n7767   851 response    angular pretty_condition        impasse - control\n7768   852 response    angular pretty_condition        impasse - control\n7769   853 response    angular pretty_condition        impasse - control\n7770   854 response    angular pretty_condition        impasse - control\n7771   855 response    angular pretty_condition        impasse - control\n7772   856 response    angular pretty_condition        impasse - control\n7773   857 response    angular pretty_condition        impasse - control\n7774   858 response    angular pretty_condition        impasse - control\n7775   859 response    angular pretty_condition        impasse - control\n7776   860 response    angular pretty_condition        impasse - control\n7777   861 response    angular pretty_condition        impasse - control\n7778   862 response    angular pretty_condition        impasse - control\n7779   863 response    angular pretty_condition        impasse - control\n7780   864 response    angular pretty_condition        impasse - control\n7781   865 response    angular pretty_condition        impasse - control\n7782   866 response    angular pretty_condition        impasse - control\n7783   867 response    angular pretty_condition        impasse - control\n7784   868 response    angular pretty_condition        impasse - control\n7785   869 response    angular pretty_condition        impasse - control\n7786   870 response    angular pretty_condition        impasse - control\n7787   871 response    angular pretty_condition        impasse - control\n7788   872 response    angular pretty_condition        impasse - control\n7789   873 response    angular pretty_condition        impasse - control\n7790   874 response    angular pretty_condition        impasse - control\n7791   875 response    angular pretty_condition        impasse - control\n7792   876 response    angular pretty_condition        impasse - control\n7793   877 response    angular pretty_condition        impasse - control\n7794   878 response    angular pretty_condition        impasse - control\n7795   879 response    angular pretty_condition        impasse - control\n7796   880 response    angular pretty_condition        impasse - control\n7797   881 response    angular pretty_condition        impasse - control\n7798   882 response    angular pretty_condition        impasse - control\n7799   883 response    angular pretty_condition        impasse - control\n7800   884 response    angular pretty_condition        impasse - control\n7801   885 response    angular pretty_condition        impasse - control\n7802   886 response    angular pretty_condition        impasse - control\n7803   887 response    angular pretty_condition        impasse - control\n7804   888 response    angular pretty_condition        impasse - control\n7805   889 response    angular pretty_condition        impasse - control\n7806   890 response    angular pretty_condition        impasse - control\n7807   891 response    angular pretty_condition        impasse - control\n7808   892 response    angular pretty_condition        impasse - control\n7809   893 response    angular pretty_condition        impasse - control\n7810   894 response    angular pretty_condition        impasse - control\n7811   895 response    angular pretty_condition        impasse - control\n7812   896 response    angular pretty_condition        impasse - control\n7813   897 response    angular pretty_condition        impasse - control\n7814   898 response    angular pretty_condition        impasse - control\n7815   899 response    angular pretty_condition        impasse - control\n7816   900 response    angular pretty_condition        impasse - control\n7817   901 response    angular pretty_condition        impasse - control\n7818   902 response    angular pretty_condition        impasse - control\n7819   903 response    angular pretty_condition        impasse - control\n7820   904 response    angular pretty_condition        impasse - control\n7821   905 response    angular pretty_condition        impasse - control\n7822   906 response    angular pretty_condition        impasse - control\n7823   907 response    angular pretty_condition        impasse - control\n7824   908 response    angular pretty_condition        impasse - control\n7825   909 response    angular pretty_condition        impasse - control\n7826   910 response    angular pretty_condition        impasse - control\n7827   911 response    angular pretty_condition        impasse - control\n7828   912 response    angular pretty_condition        impasse - control\n7829   913 response    angular pretty_condition        impasse - control\n7830   914 response    angular pretty_condition        impasse - control\n7831   915 response    angular pretty_condition        impasse - control\n7832   916 response    angular pretty_condition        impasse - control\n7833   917 response    angular pretty_condition        impasse - control\n7834   918 response    angular pretty_condition        impasse - control\n7835   919 response    angular pretty_condition        impasse - control\n7836   920 response    angular pretty_condition        impasse - control\n7837   921 response    angular pretty_condition        impasse - control\n7838   922 response    angular pretty_condition        impasse - control\n7839   923 response    angular pretty_condition        impasse - control\n7840   924 response    angular pretty_condition        impasse - control\n7841   925 response    angular pretty_condition        impasse - control\n7842   926 response    angular pretty_condition        impasse - control\n7843   927 response    angular pretty_condition        impasse - control\n7844   928 response    angular pretty_condition        impasse - control\n7845   929 response    angular pretty_condition        impasse - control\n7846   930 response    angular pretty_condition        impasse - control\n7847   931 response    angular pretty_condition        impasse - control\n7848   932 response    angular pretty_condition        impasse - control\n7849   933 response    angular pretty_condition        impasse - control\n7850   934 response    angular pretty_condition        impasse - control\n7851   935 response    angular pretty_condition        impasse - control\n7852   936 response    angular pretty_condition        impasse - control\n7853   937 response    angular pretty_condition        impasse - control\n7854   938 response    angular pretty_condition        impasse - control\n7855   939 response    angular pretty_condition        impasse - control\n7856   940 response    angular pretty_condition        impasse - control\n7857   941 response    angular pretty_condition        impasse - control\n7858   942 response    angular pretty_condition        impasse - control\n7859   943 response    angular pretty_condition        impasse - control\n7860   944 response    angular pretty_condition        impasse - control\n7861   945 response    angular pretty_condition        impasse - control\n7862   946 response    angular pretty_condition        impasse - control\n7863   947 response    angular pretty_condition        impasse - control\n7864   948 response    angular pretty_condition        impasse - control\n7865   949 response    angular pretty_condition        impasse - control\n7866   950 response    angular pretty_condition        impasse - control\n7867   951 response    angular pretty_condition        impasse - control\n7868   952 response    angular pretty_condition        impasse - control\n7869   953 response    angular pretty_condition        impasse - control\n7870   954 response    angular pretty_condition        impasse - control\n7871   955 response    angular pretty_condition        impasse - control\n7872   956 response    angular pretty_condition        impasse - control\n7873   957 response    angular pretty_condition        impasse - control\n7874   958 response    angular pretty_condition        impasse - control\n7875   959 response    angular pretty_condition        impasse - control\n7876   960 response    angular pretty_condition        impasse - control\n7877   961 response    angular pretty_condition        impasse - control\n7878   962 response    angular pretty_condition        impasse - control\n7879   963 response    angular pretty_condition        impasse - control\n7880   964 response    angular pretty_condition        impasse - control\n7881   965 response    angular pretty_condition        impasse - control\n7882   966 response    angular pretty_condition        impasse - control\n7883   967 response    angular pretty_condition        impasse - control\n7884   968 response    angular pretty_condition        impasse - control\n7885   969 response    angular pretty_condition        impasse - control\n7886   970 response    angular pretty_condition        impasse - control\n7887   971 response    angular pretty_condition        impasse - control\n7888   972 response    angular pretty_condition        impasse - control\n7889   973 response    angular pretty_condition        impasse - control\n7890   974 response    angular pretty_condition        impasse - control\n7891   975 response    angular pretty_condition        impasse - control\n7892   976 response    angular pretty_condition        impasse - control\n7893   977 response    angular pretty_condition        impasse - control\n7894   978 response    angular pretty_condition        impasse - control\n7895   979 response    angular pretty_condition        impasse - control\n7896   980 response    angular pretty_condition        impasse - control\n7897   981 response    angular pretty_condition        impasse - control\n7898   982 response    angular pretty_condition        impasse - control\n7899   983 response    angular pretty_condition        impasse - control\n7900   984 response    angular pretty_condition        impasse - control\n7901   985 response    angular pretty_condition        impasse - control\n7902   986 response    angular pretty_condition        impasse - control\n7903   987 response    angular pretty_condition        impasse - control\n7904   988 response    angular pretty_condition        impasse - control\n7905   989 response    angular pretty_condition        impasse - control\n7906   990 response    angular pretty_condition        impasse - control\n7907   991 response    angular pretty_condition        impasse - control\n7908   992 response    angular pretty_condition        impasse - control\n7909   993 response    angular pretty_condition        impasse - control\n7910   994 response    angular pretty_condition        impasse - control\n7911   995 response    angular pretty_condition        impasse - control\n7912   996 response    angular pretty_condition        impasse - control\n7913   997 response    angular pretty_condition        impasse - control\n7914   998 response    angular pretty_condition        impasse - control\n7915   999 response    angular pretty_condition        impasse - control\n7916  1000 response    angular pretty_condition        impasse - control\n7917  1001 response    angular pretty_condition        impasse - control\n7918  1002 response    angular pretty_condition        impasse - control\n7919  1003 response    angular pretty_condition        impasse - control\n7920  1004 response    angular pretty_condition        impasse - control\n7921  1005 response    angular pretty_condition        impasse - control\n7922  1006 response    angular pretty_condition        impasse - control\n7923  1007 response    angular pretty_condition        impasse - control\n7924  1008 response    angular pretty_condition        impasse - control\n7925  1009 response    angular pretty_condition        impasse - control\n7926  1010 response    angular pretty_condition        impasse - control\n7927  1011 response    angular pretty_condition        impasse - control\n7928  1012 response    angular pretty_condition        impasse - control\n7929  1013 response    angular pretty_condition        impasse - control\n7930  1014 response    angular pretty_condition        impasse - control\n7931  1015 response    angular pretty_condition        impasse - control\n7932  1016 response    angular pretty_condition        impasse - control\n7933  1017 response    angular pretty_condition        impasse - control\n7934  1018 response    angular pretty_condition        impasse - control\n7935  1019 response    angular pretty_condition        impasse - control\n7936  1020 response    angular pretty_condition        impasse - control\n7937  1021 response    angular pretty_condition        impasse - control\n7938  1022 response    angular pretty_condition        impasse - control\n7939  1023 response    angular pretty_condition        impasse - control\n7940  1024 response    angular pretty_condition        impasse - control\n7941  1025 response    angular pretty_condition        impasse - control\n7942  1026 response    angular pretty_condition        impasse - control\n7943  1027 response    angular pretty_condition        impasse - control\n7944  1028 response    angular pretty_condition        impasse - control\n7945  1029 response    angular pretty_condition        impasse - control\n7946  1030 response    angular pretty_condition        impasse - control\n7947  1031 response    angular pretty_condition        impasse - control\n7948  1032 response    angular pretty_condition        impasse - control\n7949  1033 response    angular pretty_condition        impasse - control\n7950  1034 response    angular pretty_condition        impasse - control\n7951  1035 response    angular pretty_condition        impasse - control\n7952  1036 response    angular pretty_condition        impasse - control\n7953  1037 response    angular pretty_condition        impasse - control\n7954  1038 response    angular pretty_condition        impasse - control\n7955  1039 response    angular pretty_condition        impasse - control\n7956  1040 response    angular pretty_condition        impasse - control\n7957  1041 response    angular pretty_condition        impasse - control\n7958  1042 response    angular pretty_condition        impasse - control\n7959  1043 response    angular pretty_condition        impasse - control\n7960  1044 response    angular pretty_condition        impasse - control\n7961  1045 response    angular pretty_condition        impasse - control\n7962  1046 response    angular pretty_condition        impasse - control\n7963  1047 response    angular pretty_condition        impasse - control\n7964  1048 response    angular pretty_condition        impasse - control\n7965  1049 response    angular pretty_condition        impasse - control\n7966  1050 response    angular pretty_condition        impasse - control\n7967  1051 response    angular pretty_condition        impasse - control\n7968  1052 response    angular pretty_condition        impasse - control\n7969  1053 response    angular pretty_condition        impasse - control\n7970  1054 response    angular pretty_condition        impasse - control\n7971  1055 response    angular pretty_condition        impasse - control\n7972  1056 response    angular pretty_condition        impasse - control\n7973  1057 response    angular pretty_condition        impasse - control\n7974  1058 response    angular pretty_condition        impasse - control\n7975  1059 response    angular pretty_condition        impasse - control\n7976  1060 response    angular pretty_condition        impasse - control\n7977  1061 response    angular pretty_condition        impasse - control\n7978  1062 response    angular pretty_condition        impasse - control\n7979  1063 response    angular pretty_condition        impasse - control\n7980  1064 response    angular pretty_condition        impasse - control\n7981  1065 response    angular pretty_condition        impasse - control\n7982  1066 response    angular pretty_condition        impasse - control\n7983  1067 response    angular pretty_condition        impasse - control\n7984  1068 response    angular pretty_condition        impasse - control\n7985  1069 response    angular pretty_condition        impasse - control\n7986  1070 response    angular pretty_condition        impasse - control\n7987  1071 response    angular pretty_condition        impasse - control\n7988  1072 response    angular pretty_condition        impasse - control\n7989  1073 response    angular pretty_condition        impasse - control\n7990  1074 response    angular pretty_condition        impasse - control\n7991  1075 response    angular pretty_condition        impasse - control\n7992  1076 response    angular pretty_condition        impasse - control\n7993  1077 response    angular pretty_condition        impasse - control\n7994  1078 response    angular pretty_condition        impasse - control\n7995  1079 response    angular pretty_condition        impasse - control\n7996  1080 response    angular pretty_condition        impasse - control\n7997  1081 response    angular pretty_condition        impasse - control\n7998  1082 response    angular pretty_condition        impasse - control\n7999  1083 response    angular pretty_condition        impasse - control\n8000  1084 response    angular pretty_condition        impasse - control\n8001  1085 response    angular pretty_condition        impasse - control\n8002  1086 response    angular pretty_condition        impasse - control\n8003  1087 response    angular pretty_condition        impasse - control\n8004  1088 response    angular pretty_condition        impasse - control\n8005  1089 response    angular pretty_condition        impasse - control\n8006  1090 response    angular pretty_condition        impasse - control\n8007  1091 response    angular pretty_condition        impasse - control\n8008  1092 response    angular pretty_condition        impasse - control\n8009  1093 response    angular pretty_condition        impasse - control\n8010  1094 response    angular pretty_condition        impasse - control\n8011  1095 response    angular pretty_condition        impasse - control\n8012  1096 response    angular pretty_condition        impasse - control\n8013  1097 response    angular pretty_condition        impasse - control\n8014  1098 response    angular pretty_condition        impasse - control\n8015  1099 response    angular pretty_condition        impasse - control\n8016  1100 response    angular pretty_condition        impasse - control\n8017  1101 response    angular pretty_condition        impasse - control\n8018  1102 response    angular pretty_condition        impasse - control\n8019  1103 response    angular pretty_condition        impasse - control\n8020  1104 response    angular pretty_condition        impasse - control\n8021  1105 response    angular pretty_condition        impasse - control\n8022  1106 response    angular pretty_condition        impasse - control\n8023  1107 response    angular pretty_condition        impasse - control\n8024  1108 response    angular pretty_condition        impasse - control\n8025  1109 response    angular pretty_condition        impasse - control\n8026  1110 response    angular pretty_condition        impasse - control\n8027  1111 response    angular pretty_condition        impasse - control\n8028  1112 response    angular pretty_condition        impasse - control\n8029  1113 response    angular pretty_condition        impasse - control\n8030  1114 response    angular pretty_condition        impasse - control\n8031  1115 response    angular pretty_condition        impasse - control\n8032  1116 response    angular pretty_condition        impasse - control\n8033  1117 response    angular pretty_condition        impasse - control\n8034  1118 response    angular pretty_condition        impasse - control\n8035  1119 response    angular pretty_condition        impasse - control\n8036  1120 response    angular pretty_condition        impasse - control\n8037  1121 response    angular pretty_condition        impasse - control\n8038  1122 response    angular pretty_condition        impasse - control\n8039  1123 response    angular pretty_condition        impasse - control\n8040  1124 response    angular pretty_condition        impasse - control\n8041  1125 response    angular pretty_condition        impasse - control\n8042  1126 response    angular pretty_condition        impasse - control\n8043  1127 response    angular pretty_condition        impasse - control\n8044  1128 response    angular pretty_condition        impasse - control\n8045  1129 response    angular pretty_condition        impasse - control\n8046  1130 response    angular pretty_condition        impasse - control\n8047  1131 response    angular pretty_condition        impasse - control\n8048  1132 response    angular pretty_condition        impasse - control\n8049  1133 response    angular pretty_condition        impasse - control\n8050  1134 response    angular pretty_condition        impasse - control\n8051  1135 response    angular pretty_condition        impasse - control\n8052  1136 response    angular pretty_condition        impasse - control\n8053  1137 response    angular pretty_condition        impasse - control\n8054  1138 response    angular pretty_condition        impasse - control\n8055  1139 response    angular pretty_condition        impasse - control\n8056  1140 response    angular pretty_condition        impasse - control\n8057  1141 response    angular pretty_condition        impasse - control\n8058  1142 response    angular pretty_condition        impasse - control\n8059  1143 response    angular pretty_condition        impasse - control\n8060  1144 response    angular pretty_condition        impasse - control\n8061  1145 response    angular pretty_condition        impasse - control\n8062  1146 response    angular pretty_condition        impasse - control\n8063  1147 response    angular pretty_condition        impasse - control\n8064  1148 response    angular pretty_condition        impasse - control\n8065  1149 response    angular pretty_condition        impasse - control\n8066  1150 response    angular pretty_condition        impasse - control\n8067  1151 response    angular pretty_condition        impasse - control\n8068  1152 response    angular pretty_condition        impasse - control\n8069  1153 response    angular pretty_condition        impasse - control\n8070  1154 response    angular pretty_condition        impasse - control\n8071  1155 response    angular pretty_condition        impasse - control\n8072  1156 response    angular pretty_condition        impasse - control\n8073  1157 response    angular pretty_condition        impasse - control\n8074  1158 response    angular pretty_condition        impasse - control\n8075  1159 response    angular pretty_condition        impasse - control\n8076  1160 response    angular pretty_condition        impasse - control\n8077  1161 response    angular pretty_condition        impasse - control\n8078  1162 response    angular pretty_condition        impasse - control\n8079  1163 response    angular pretty_condition        impasse - control\n8080  1164 response    angular pretty_condition        impasse - control\n8081  1165 response    angular pretty_condition        impasse - control\n8082  1166 response    angular pretty_condition        impasse - control\n8083  1167 response    angular pretty_condition        impasse - control\n8084  1168 response    angular pretty_condition        impasse - control\n8085  1169 response    angular pretty_condition        impasse - control\n8086  1170 response    angular pretty_condition        impasse - control\n8087  1171 response    angular pretty_condition        impasse - control\n8088  1172 response    angular pretty_condition        impasse - control\n8089  1173 response    angular pretty_condition        impasse - control\n8090  1174 response    angular pretty_condition        impasse - control\n8091  1175 response    angular pretty_condition        impasse - control\n8092  1176 response    angular pretty_condition        impasse - control\n8093  1177 response    angular pretty_condition        impasse - control\n8094  1178 response    angular pretty_condition        impasse - control\n8095  1179 response    angular pretty_condition        impasse - control\n8096  1180 response    angular pretty_condition        impasse - control\n8097  1181 response    angular pretty_condition        impasse - control\n8098  1182 response    angular pretty_condition        impasse - control\n8099  1183 response    angular pretty_condition        impasse - control\n8100  1184 response    angular pretty_condition        impasse - control\n8101  1185 response    angular pretty_condition        impasse - control\n8102  1186 response    angular pretty_condition        impasse - control\n8103  1187 response    angular pretty_condition        impasse - control\n8104  1188 response    angular pretty_condition        impasse - control\n8105  1189 response    angular pretty_condition        impasse - control\n8106  1190 response    angular pretty_condition        impasse - control\n8107  1191 response    angular pretty_condition        impasse - control\n8108  1192 response    angular pretty_condition        impasse - control\n8109  1193 response    angular pretty_condition        impasse - control\n8110  1194 response    angular pretty_condition        impasse - control\n8111  1195 response    angular pretty_condition        impasse - control\n8112  1196 response    angular pretty_condition        impasse - control\n8113  1197 response    angular pretty_condition        impasse - control\n8114  1198 response    angular pretty_condition        impasse - control\n8115  1199 response    angular pretty_condition        impasse - control\n8116  1200 response    angular pretty_condition        impasse - control\n8117  1201 response    angular pretty_condition        impasse - control\n8118  1202 response    angular pretty_condition        impasse - control\n8119  1203 response    angular pretty_condition        impasse - control\n8120  1204 response    angular pretty_condition        impasse - control\n8121  1205 response    angular pretty_condition        impasse - control\n8122  1206 response    angular pretty_condition        impasse - control\n8123  1207 response    angular pretty_condition        impasse - control\n8124  1208 response    angular pretty_condition        impasse - control\n8125  1209 response    angular pretty_condition        impasse - control\n8126  1210 response    angular pretty_condition        impasse - control\n8127  1211 response    angular pretty_condition        impasse - control\n8128  1212 response    angular pretty_condition        impasse - control\n8129  1213 response    angular pretty_condition        impasse - control\n8130  1214 response    angular pretty_condition        impasse - control\n8131  1215 response    angular pretty_condition        impasse - control\n8132  1216 response    angular pretty_condition        impasse - control\n8133  1217 response    angular pretty_condition        impasse - control\n8134  1218 response    angular pretty_condition        impasse - control\n8135  1219 response    angular pretty_condition        impasse - control\n8136  1220 response    angular pretty_condition        impasse - control\n8137  1221 response    angular pretty_condition        impasse - control\n8138  1222 response    angular pretty_condition        impasse - control\n8139  1223 response    angular pretty_condition        impasse - control\n8140  1224 response    angular pretty_condition        impasse - control\n8141  1225 response    angular pretty_condition        impasse - control\n8142  1226 response    angular pretty_condition        impasse - control\n8143  1227 response    angular pretty_condition        impasse - control\n8144  1228 response    angular pretty_condition        impasse - control\n8145  1229 response    angular pretty_condition        impasse - control\n8146  1230 response    angular pretty_condition        impasse - control\n8147  1231 response    angular pretty_condition        impasse - control\n8148  1232 response    angular pretty_condition        impasse - control\n8149  1233 response    angular pretty_condition        impasse - control\n8150  1234 response    angular pretty_condition        impasse - control\n8151  1235 response    angular pretty_condition        impasse - control\n8152  1236 response    angular pretty_condition        impasse - control\n8153  1237 response    angular pretty_condition        impasse - control\n8154  1238 response    angular pretty_condition        impasse - control\n8155  1239 response    angular pretty_condition        impasse - control\n8156  1240 response    angular pretty_condition        impasse - control\n8157  1241 response    angular pretty_condition        impasse - control\n8158  1242 response    angular pretty_condition        impasse - control\n8159  1243 response    angular pretty_condition        impasse - control\n8160  1244 response    angular pretty_condition        impasse - control\n8161  1245 response    angular pretty_condition        impasse - control\n8162  1246 response    angular pretty_condition        impasse - control\n8163  1247 response    angular pretty_condition        impasse - control\n8164  1248 response    angular pretty_condition        impasse - control\n8165  1249 response    angular pretty_condition        impasse - control\n8166  1250 response    angular pretty_condition        impasse - control\n8167  1251 response    angular pretty_condition        impasse - control\n8168  1252 response    angular pretty_condition        impasse - control\n8169  1253 response    angular pretty_condition        impasse - control\n8170  1254 response    angular pretty_condition        impasse - control\n8171  1255 response    angular pretty_condition        impasse - control\n8172  1256 response    angular pretty_condition        impasse - control\n8173  1257 response    angular pretty_condition        impasse - control\n8174  1258 response    angular pretty_condition        impasse - control\n8175  1259 response    angular pretty_condition        impasse - control\n8176  1260 response    angular pretty_condition        impasse - control\n8177  1261 response    angular pretty_condition        impasse - control\n8178  1262 response    angular pretty_condition        impasse - control\n8179  1263 response    angular pretty_condition        impasse - control\n8180  1264 response    angular pretty_condition        impasse - control\n8181  1265 response    angular pretty_condition        impasse - control\n8182  1266 response    angular pretty_condition        impasse - control\n8183  1267 response    angular pretty_condition        impasse - control\n8184  1268 response    angular pretty_condition        impasse - control\n8185  1269 response    angular pretty_condition        impasse - control\n8186  1270 response    angular pretty_condition        impasse - control\n8187  1271 response    angular pretty_condition        impasse - control\n8188  1272 response    angular pretty_condition        impasse - control\n8189  1273 response    angular pretty_condition        impasse - control\n8190  1274 response    angular pretty_condition        impasse - control\n8191  1275 response    angular pretty_condition        impasse - control\n8192  1276 response    angular pretty_condition        impasse - control\n8193  1277 response    angular pretty_condition        impasse - control\n8194  1278 response    angular pretty_condition        impasse - control\n8195  1279 response    angular pretty_condition        impasse - control\n8196  1280 response    angular pretty_condition        impasse - control\n8197  1281 response    angular pretty_condition        impasse - control\n8198  1282 response    angular pretty_condition        impasse - control\n8199  1283 response    angular pretty_condition        impasse - control\n8200  1284 response    angular pretty_condition        impasse - control\n8201  1285 response    angular pretty_condition        impasse - control\n8202  1286 response    angular pretty_condition        impasse - control\n8203  1287 response    angular pretty_condition        impasse - control\n8204  1288 response    angular pretty_condition        impasse - control\n8205  1289 response    angular pretty_condition        impasse - control\n8206  1290 response    angular pretty_condition        impasse - control\n8207  1291 response    angular pretty_condition        impasse - control\n8208  1292 response    angular pretty_condition        impasse - control\n8209  1293 response    angular pretty_condition        impasse - control\n8210  1294 response    angular pretty_condition        impasse - control\n8211  1295 response    angular pretty_condition        impasse - control\n8212  1296 response    angular pretty_condition        impasse - control\n8213  1297 response    angular pretty_condition        impasse - control\n8214  1298 response    angular pretty_condition        impasse - control\n8215  1299 response    angular pretty_condition        impasse - control\n8216  1300 response    angular pretty_condition        impasse - control\n8217  1301 response    angular pretty_condition        impasse - control\n8218  1302 response    angular pretty_condition        impasse - control\n8219  1303 response    angular pretty_condition        impasse - control\n8220  1304 response    angular pretty_condition        impasse - control\n8221  1305 response    angular pretty_condition        impasse - control\n8222  1306 response    angular pretty_condition        impasse - control\n8223  1307 response    angular pretty_condition        impasse - control\n8224  1308 response    angular pretty_condition        impasse - control\n8225  1309 response    angular pretty_condition        impasse - control\n8226  1310 response    angular pretty_condition        impasse - control\n8227  1311 response    angular pretty_condition        impasse - control\n8228  1312 response    angular pretty_condition        impasse - control\n8229  1313 response    angular pretty_condition        impasse - control\n8230  1314 response    angular pretty_condition        impasse - control\n8231  1315 response    angular pretty_condition        impasse - control\n8232  1316 response    angular pretty_condition        impasse - control\n8233  1317 response    angular pretty_condition        impasse - control\n8234  1318 response    angular pretty_condition        impasse - control\n8235  1319 response    angular pretty_condition        impasse - control\n8236  1320 response    angular pretty_condition        impasse - control\n8237  1321 response    angular pretty_condition        impasse - control\n8238  1322 response    angular pretty_condition        impasse - control\n8239  1323 response    angular pretty_condition        impasse - control\n8240  1324 response    angular pretty_condition        impasse - control\n8241  1325 response    angular pretty_condition        impasse - control\n8242  1326 response    angular pretty_condition        impasse - control\n8243  1327 response    angular pretty_condition        impasse - control\n8244  1328 response    angular pretty_condition        impasse - control\n8245  1329 response    angular pretty_condition        impasse - control\n8246  1330 response    angular pretty_condition        impasse - control\n8247  1331 response    angular pretty_condition        impasse - control\n8248  1332 response    angular pretty_condition        impasse - control\n8249  1333 response    angular pretty_condition        impasse - control\n8250  1334 response    angular pretty_condition        impasse - control\n8251  1335 response    angular pretty_condition        impasse - control\n8252  1336 response    angular pretty_condition        impasse - control\n8253  1337 response    angular pretty_condition        impasse - control\n8254  1338 response    angular pretty_condition        impasse - control\n8255  1339 response    angular pretty_condition        impasse - control\n8256  1340 response    angular pretty_condition        impasse - control\n8257  1341 response    angular pretty_condition        impasse - control\n8258  1342 response    angular pretty_condition        impasse - control\n8259  1343 response    angular pretty_condition        impasse - control\n8260  1344 response    angular pretty_condition        impasse - control\n8261  1345 response    angular pretty_condition        impasse - control\n8262  1346 response    angular pretty_condition        impasse - control\n8263  1347 response    angular pretty_condition        impasse - control\n8264  1348 response    angular pretty_condition        impasse - control\n8265  1349 response    angular pretty_condition        impasse - control\n8266  1350 response    angular pretty_condition        impasse - control\n8267  1351 response    angular pretty_condition        impasse - control\n8268  1352 response    angular pretty_condition        impasse - control\n8269  1353 response    angular pretty_condition        impasse - control\n8270  1354 response    angular pretty_condition        impasse - control\n8271  1355 response    angular pretty_condition        impasse - control\n8272  1356 response    angular pretty_condition        impasse - control\n8273  1357 response    angular pretty_condition        impasse - control\n8274  1358 response    angular pretty_condition        impasse - control\n8275  1359 response    angular pretty_condition        impasse - control\n8276  1360 response    angular pretty_condition        impasse - control\n8277  1361 response    angular pretty_condition        impasse - control\n8278  1362 response    angular pretty_condition        impasse - control\n8279  1363 response    angular pretty_condition        impasse - control\n8280  1364 response    angular pretty_condition        impasse - control\n8281  1365 response    angular pretty_condition        impasse - control\n8282  1366 response    angular pretty_condition        impasse - control\n8283  1367 response    angular pretty_condition        impasse - control\n8284  1368 response    angular pretty_condition        impasse - control\n8285  1369 response    angular pretty_condition        impasse - control\n8286  1370 response    angular pretty_condition        impasse - control\n8287  1371 response    angular pretty_condition        impasse - control\n8288  1372 response    angular pretty_condition        impasse - control\n8289  1373 response    angular pretty_condition        impasse - control\n8290  1374 response    angular pretty_condition        impasse - control\n8291  1375 response    angular pretty_condition        impasse - control\n8292  1376 response    angular pretty_condition        impasse - control\n8293  1377 response    angular pretty_condition        impasse - control\n8294  1378 response    angular pretty_condition        impasse - control\n8295  1379 response    angular pretty_condition        impasse - control\n8296  1380 response    angular pretty_condition        impasse - control\n8297  1381 response    angular pretty_condition        impasse - control\n8298  1382 response    angular pretty_condition        impasse - control\n8299  1383 response    angular pretty_condition        impasse - control\n8300  1384 response    angular pretty_condition        impasse - control\n8301  1385 response    angular pretty_condition        impasse - control\n8302  1386 response    angular pretty_condition        impasse - control\n8303  1387 response    angular pretty_condition        impasse - control\n8304  1388 response    angular pretty_condition        impasse - control\n8305  1389 response    angular pretty_condition        impasse - control\n8306  1390 response    angular pretty_condition        impasse - control\n8307  1391 response    angular pretty_condition        impasse - control\n8308  1392 response    angular pretty_condition        impasse - control\n8309  1393 response    angular pretty_condition        impasse - control\n8310  1394 response    angular pretty_condition        impasse - control\n8311  1395 response    angular pretty_condition        impasse - control\n8312  1396 response    angular pretty_condition        impasse - control\n8313  1397 response    angular pretty_condition        impasse - control\n8314  1398 response    angular pretty_condition        impasse - control\n8315  1399 response    angular pretty_condition        impasse - control\n8316  1400 response    angular pretty_condition        impasse - control\n8317  1401 response    angular pretty_condition        impasse - control\n8318  1402 response    angular pretty_condition        impasse - control\n8319  1403 response    angular pretty_condition        impasse - control\n8320  1404 response    angular pretty_condition        impasse - control\n8321  1405 response    angular pretty_condition        impasse - control\n8322  1406 response    angular pretty_condition        impasse - control\n8323  1407 response    angular pretty_condition        impasse - control\n8324  1408 response    angular pretty_condition        impasse - control\n8325  1409 response    angular pretty_condition        impasse - control\n8326  1410 response    angular pretty_condition        impasse - control\n8327  1411 response    angular pretty_condition        impasse - control\n8328  1412 response    angular pretty_condition        impasse - control\n8329  1413 response    angular pretty_condition        impasse - control\n8330  1414 response    angular pretty_condition        impasse - control\n8331  1415 response    angular pretty_condition        impasse - control\n8332  1416 response    angular pretty_condition        impasse - control\n8333  1417 response    angular pretty_condition        impasse - control\n8334  1418 response    angular pretty_condition        impasse - control\n8335  1419 response    angular pretty_condition        impasse - control\n8336  1420 response    angular pretty_condition        impasse - control\n8337  1421 response    angular pretty_condition        impasse - control\n8338  1422 response    angular pretty_condition        impasse - control\n8339  1423 response    angular pretty_condition        impasse - control\n8340  1424 response    angular pretty_condition        impasse - control\n8341  1425 response    angular pretty_condition        impasse - control\n8342  1426 response    angular pretty_condition        impasse - control\n8343  1427 response    angular pretty_condition        impasse - control\n8344  1428 response    angular pretty_condition        impasse - control\n8345  1429 response    angular pretty_condition        impasse - control\n8346  1430 response    angular pretty_condition        impasse - control\n8347  1431 response    angular pretty_condition        impasse - control\n8348  1432 response    angular pretty_condition        impasse - control\n8349  1433 response    angular pretty_condition        impasse - control\n8350  1434 response    angular pretty_condition        impasse - control\n8351  1435 response    angular pretty_condition        impasse - control\n8352  1436 response    angular pretty_condition        impasse - control\n8353  1437 response    angular pretty_condition        impasse - control\n8354  1438 response    angular pretty_condition        impasse - control\n8355  1439 response    angular pretty_condition        impasse - control\n8356  1440 response    angular pretty_condition        impasse - control\n8357  1441 response    angular pretty_condition        impasse - control\n8358  1442 response    angular pretty_condition        impasse - control\n8359  1443 response    angular pretty_condition        impasse - control\n8360  1444 response    angular pretty_condition        impasse - control\n8361  1445 response    angular pretty_condition        impasse - control\n8362  1446 response    angular pretty_condition        impasse - control\n8363  1447 response    angular pretty_condition        impasse - control\n8364  1448 response    angular pretty_condition        impasse - control\n8365  1449 response    angular pretty_condition        impasse - control\n8366  1450 response    angular pretty_condition        impasse - control\n8367  1451 response    angular pretty_condition        impasse - control\n8368  1452 response    angular pretty_condition        impasse - control\n8369  1453 response    angular pretty_condition        impasse - control\n8370  1454 response    angular pretty_condition        impasse - control\n8371  1455 response    angular pretty_condition        impasse - control\n8372  1456 response    angular pretty_condition        impasse - control\n8373  1457 response    angular pretty_condition        impasse - control\n8374  1458 response    angular pretty_condition        impasse - control\n8375  1459 response    angular pretty_condition        impasse - control\n8376  1460 response    angular pretty_condition        impasse - control\n8377  1461 response    angular pretty_condition        impasse - control\n8378  1462 response    angular pretty_condition        impasse - control\n8379  1463 response    angular pretty_condition        impasse - control\n8380  1464 response    angular pretty_condition        impasse - control\n8381  1465 response    angular pretty_condition        impasse - control\n8382  1466 response    angular pretty_condition        impasse - control\n8383  1467 response    angular pretty_condition        impasse - control\n8384  1468 response    angular pretty_condition        impasse - control\n8385  1469 response    angular pretty_condition        impasse - control\n8386  1470 response    angular pretty_condition        impasse - control\n8387  1471 response    angular pretty_condition        impasse - control\n8388  1472 response    angular pretty_condition        impasse - control\n8389  1473 response    angular pretty_condition        impasse - control\n8390  1474 response    angular pretty_condition        impasse - control\n8391  1475 response    angular pretty_condition        impasse - control\n8392  1476 response    angular pretty_condition        impasse - control\n8393  1477 response    angular pretty_condition        impasse - control\n8394  1478 response    angular pretty_condition        impasse - control\n8395  1479 response    angular pretty_condition        impasse - control\n8396  1480 response    angular pretty_condition        impasse - control\n8397  1481 response    angular pretty_condition        impasse - control\n8398  1482 response    angular pretty_condition        impasse - control\n8399  1483 response    angular pretty_condition        impasse - control\n8400  1484 response    angular pretty_condition        impasse - control\n8401  1485 response    angular pretty_condition        impasse - control\n8402  1486 response    angular pretty_condition        impasse - control\n8403  1487 response    angular pretty_condition        impasse - control\n8404  1488 response    angular pretty_condition        impasse - control\n8405  1489 response    angular pretty_condition        impasse - control\n8406  1490 response    angular pretty_condition        impasse - control\n8407  1491 response    angular pretty_condition        impasse - control\n8408  1492 response    angular pretty_condition        impasse - control\n8409  1493 response    angular pretty_condition        impasse - control\n8410  1494 response    angular pretty_condition        impasse - control\n8411  1495 response    angular pretty_condition        impasse - control\n8412  1496 response    angular pretty_condition        impasse - control\n8413  1497 response    angular pretty_condition        impasse - control\n8414  1498 response    angular pretty_condition        impasse - control\n8415  1499 response    angular pretty_condition        impasse - control\n8416  1500 response    angular pretty_condition        impasse - control\n8417  1501 response    angular pretty_condition        impasse - control\n8418  1502 response    angular pretty_condition        impasse - control\n8419  1503 response    angular pretty_condition        impasse - control\n8420  1504 response    angular pretty_condition        impasse - control\n8421  1505 response    angular pretty_condition        impasse - control\n8422  1506 response    angular pretty_condition        impasse - control\n8423  1507 response    angular pretty_condition        impasse - control\n8424  1508 response    angular pretty_condition        impasse - control\n8425  1509 response    angular pretty_condition        impasse - control\n8426  1510 response    angular pretty_condition        impasse - control\n8427  1511 response    angular pretty_condition        impasse - control\n8428  1512 response    angular pretty_condition        impasse - control\n8429  1513 response    angular pretty_condition        impasse - control\n8430  1514 response    angular pretty_condition        impasse - control\n8431  1515 response    angular pretty_condition        impasse - control\n8432  1516 response    angular pretty_condition        impasse - control\n8433  1517 response    angular pretty_condition        impasse - control\n8434  1518 response    angular pretty_condition        impasse - control\n8435  1519 response    angular pretty_condition        impasse - control\n8436  1520 response    angular pretty_condition        impasse - control\n8437  1521 response    angular pretty_condition        impasse - control\n8438  1522 response    angular pretty_condition        impasse - control\n8439  1523 response    angular pretty_condition        impasse - control\n8440  1524 response    angular pretty_condition        impasse - control\n8441  1525 response    angular pretty_condition        impasse - control\n8442  1526 response    angular pretty_condition        impasse - control\n8443  1527 response    angular pretty_condition        impasse - control\n8444  1528 response    angular pretty_condition        impasse - control\n8445  1529 response    angular pretty_condition        impasse - control\n8446  1530 response    angular pretty_condition        impasse - control\n8447  1531 response    angular pretty_condition        impasse - control\n8448  1532 response    angular pretty_condition        impasse - control\n8449  1533 response    angular pretty_condition        impasse - control\n8450  1534 response    angular pretty_condition        impasse - control\n8451  1535 response    angular pretty_condition        impasse - control\n8452  1536 response    angular pretty_condition        impasse - control\n8453  1537 response    angular pretty_condition        impasse - control\n8454  1538 response    angular pretty_condition        impasse - control\n8455  1539 response    angular pretty_condition        impasse - control\n8456  1540 response    angular pretty_condition        impasse - control\n8457  1541 response    angular pretty_condition        impasse - control\n8458  1542 response    angular pretty_condition        impasse - control\n8459  1543 response    angular pretty_condition        impasse - control\n8460  1544 response    angular pretty_condition        impasse - control\n8461  1545 response    angular pretty_condition        impasse - control\n8462  1546 response    angular pretty_condition        impasse - control\n8463  1547 response    angular pretty_condition        impasse - control\n8464  1548 response    angular pretty_condition        impasse - control\n8465  1549 response    angular pretty_condition        impasse - control\n8466  1550 response    angular pretty_condition        impasse - control\n8467  1551 response    angular pretty_condition        impasse - control\n8468  1552 response    angular pretty_condition        impasse - control\n8469  1553 response    angular pretty_condition        impasse - control\n8470  1554 response    angular pretty_condition        impasse - control\n8471  1555 response    angular pretty_condition        impasse - control\n8472  1556 response    angular pretty_condition        impasse - control\n8473  1557 response    angular pretty_condition        impasse - control\n8474  1558 response    angular pretty_condition        impasse - control\n8475  1559 response    angular pretty_condition        impasse - control\n8476  1560 response    angular pretty_condition        impasse - control\n8477  1561 response    angular pretty_condition        impasse - control\n8478  1562 response    angular pretty_condition        impasse - control\n8479  1563 response    angular pretty_condition        impasse - control\n8480  1564 response    angular pretty_condition        impasse - control\n8481  1565 response    angular pretty_condition        impasse - control\n8482  1566 response    angular pretty_condition        impasse - control\n8483  1567 response    angular pretty_condition        impasse - control\n8484  1568 response    angular pretty_condition        impasse - control\n8485  1569 response    angular pretty_condition        impasse - control\n8486  1570 response    angular pretty_condition        impasse - control\n8487  1571 response    angular pretty_condition        impasse - control\n8488  1572 response    angular pretty_condition        impasse - control\n8489  1573 response    angular pretty_condition        impasse - control\n8490  1574 response    angular pretty_condition        impasse - control\n8491  1575 response    angular pretty_condition        impasse - control\n8492  1576 response    angular pretty_condition        impasse - control\n8493  1577 response    angular pretty_condition        impasse - control\n8494  1578 response    angular pretty_condition        impasse - control\n8495  1579 response    angular pretty_condition        impasse - control\n8496  1580 response    angular pretty_condition        impasse - control\n8497  1581 response    angular pretty_condition        impasse - control\n8498  1582 response    angular pretty_condition        impasse - control\n8499  1583 response    angular pretty_condition        impasse - control\n8500  1584 response    angular pretty_condition        impasse - control\n8501  1585 response    angular pretty_condition        impasse - control\n8502  1586 response    angular pretty_condition        impasse - control\n8503  1587 response    angular pretty_condition        impasse - control\n8504  1588 response    angular pretty_condition        impasse - control\n8505  1589 response    angular pretty_condition        impasse - control\n8506  1590 response    angular pretty_condition        impasse - control\n8507  1591 response    angular pretty_condition        impasse - control\n8508  1592 response    angular pretty_condition        impasse - control\n8509  1593 response    angular pretty_condition        impasse - control\n8510  1594 response    angular pretty_condition        impasse - control\n8511  1595 response    angular pretty_condition        impasse - control\n8512  1596 response    angular pretty_condition        impasse - control\n8513  1597 response    angular pretty_condition        impasse - control\n8514  1598 response    angular pretty_condition        impasse - control\n8515  1599 response    angular pretty_condition        impasse - control\n8516  1600 response    angular pretty_condition        impasse - control\n8517  1601 response    angular pretty_condition        impasse - control\n8518  1602 response    angular pretty_condition        impasse - control\n8519  1603 response    angular pretty_condition        impasse - control\n8520  1604 response    angular pretty_condition        impasse - control\n8521  1605 response    angular pretty_condition        impasse - control\n8522  1606 response    angular pretty_condition        impasse - control\n8523  1607 response    angular pretty_condition        impasse - control\n8524  1608 response    angular pretty_condition        impasse - control\n8525  1609 response    angular pretty_condition        impasse - control\n8526  1610 response    angular pretty_condition        impasse - control\n8527  1611 response    angular pretty_condition        impasse - control\n8528  1612 response    angular pretty_condition        impasse - control\n8529  1613 response    angular pretty_condition        impasse - control\n8530  1614 response    angular pretty_condition        impasse - control\n8531  1615 response    angular pretty_condition        impasse - control\n8532  1616 response    angular pretty_condition        impasse - control\n8533  1617 response    angular pretty_condition        impasse - control\n8534  1618 response    angular pretty_condition        impasse - control\n8535  1619 response    angular pretty_condition        impasse - control\n8536  1620 response    angular pretty_condition        impasse - control\n8537  1621 response    angular pretty_condition        impasse - control\n8538  1622 response    angular pretty_condition        impasse - control\n8539  1623 response    angular pretty_condition        impasse - control\n8540  1624 response    angular pretty_condition        impasse - control\n8541  1625 response    angular pretty_condition        impasse - control\n8542  1626 response    angular pretty_condition        impasse - control\n8543  1627 response    angular pretty_condition        impasse - control\n8544  1628 response    angular pretty_condition        impasse - control\n8545  1629 response    angular pretty_condition        impasse - control\n8546  1630 response    angular pretty_condition        impasse - control\n8547  1631 response    angular pretty_condition        impasse - control\n8548  1632 response    angular pretty_condition        impasse - control\n8549  1633 response    angular pretty_condition        impasse - control\n8550  1634 response    angular pretty_condition        impasse - control\n8551  1635 response    angular pretty_condition        impasse - control\n8552  1636 response    angular pretty_condition        impasse - control\n8553  1637 response    angular pretty_condition        impasse - control\n8554  1638 response    angular pretty_condition        impasse - control\n8555  1639 response    angular pretty_condition        impasse - control\n8556  1640 response    angular pretty_condition        impasse - control\n8557  1641 response    angular pretty_condition        impasse - control\n8558  1642 response    angular pretty_condition        impasse - control\n8559  1643 response    angular pretty_condition        impasse - control\n8560  1644 response    angular pretty_condition        impasse - control\n8561  1645 response    angular pretty_condition        impasse - control\n8562  1646 response    angular pretty_condition        impasse - control\n8563  1647 response    angular pretty_condition        impasse - control\n8564  1648 response    angular pretty_condition        impasse - control\n8565  1649 response    angular pretty_condition        impasse - control\n8566  1650 response    angular pretty_condition        impasse - control\n8567  1651 response    angular pretty_condition        impasse - control\n8568  1652 response    angular pretty_condition        impasse - control\n8569  1653 response    angular pretty_condition        impasse - control\n8570  1654 response    angular pretty_condition        impasse - control\n8571  1655 response    angular pretty_condition        impasse - control\n8572  1656 response    angular pretty_condition        impasse - control\n8573  1657 response    angular pretty_condition        impasse - control\n8574  1658 response    angular pretty_condition        impasse - control\n8575  1659 response    angular pretty_condition        impasse - control\n8576  1660 response    angular pretty_condition        impasse - control\n8577  1661 response    angular pretty_condition        impasse - control\n8578  1662 response    angular pretty_condition        impasse - control\n8579  1663 response    angular pretty_condition        impasse - control\n8580  1664 response    angular pretty_condition        impasse - control\n8581  1665 response    angular pretty_condition        impasse - control\n8582  1666 response    angular pretty_condition        impasse - control\n8583  1667 response    angular pretty_condition        impasse - control\n8584  1668 response    angular pretty_condition        impasse - control\n8585  1669 response    angular pretty_condition        impasse - control\n8586  1670 response    angular pretty_condition        impasse - control\n8587  1671 response    angular pretty_condition        impasse - control\n8588  1672 response    angular pretty_condition        impasse - control\n8589  1673 response    angular pretty_condition        impasse - control\n8590  1674 response    angular pretty_condition        impasse - control\n8591  1675 response    angular pretty_condition        impasse - control\n8592  1676 response    angular pretty_condition        impasse - control\n8593  1677 response    angular pretty_condition        impasse - control\n8594  1678 response    angular pretty_condition        impasse - control\n8595  1679 response    angular pretty_condition        impasse - control\n8596  1680 response    angular pretty_condition        impasse - control\n8597  1681 response    angular pretty_condition        impasse - control\n8598  1682 response    angular pretty_condition        impasse - control\n8599  1683 response    angular pretty_condition        impasse - control\n8600  1684 response    angular pretty_condition        impasse - control\n8601  1685 response    angular pretty_condition        impasse - control\n8602  1686 response    angular pretty_condition        impasse - control\n8603  1687 response    angular pretty_condition        impasse - control\n8604  1688 response    angular pretty_condition        impasse - control\n8605  1689 response    angular pretty_condition        impasse - control\n8606  1690 response    angular pretty_condition        impasse - control\n8607  1691 response    angular pretty_condition        impasse - control\n8608  1692 response    angular pretty_condition        impasse - control\n8609  1693 response    angular pretty_condition        impasse - control\n8610  1694 response    angular pretty_condition        impasse - control\n8611  1695 response    angular pretty_condition        impasse - control\n8612  1696 response    angular pretty_condition        impasse - control\n8613  1697 response    angular pretty_condition        impasse - control\n8614  1698 response    angular pretty_condition        impasse - control\n8615  1699 response    angular pretty_condition        impasse - control\n8616  1700 response    angular pretty_condition        impasse - control\n8617  1701 response    angular pretty_condition        impasse - control\n8618  1702 response    angular pretty_condition        impasse - control\n8619  1703 response    angular pretty_condition        impasse - control\n8620  1704 response    angular pretty_condition        impasse - control\n8621  1705 response    angular pretty_condition        impasse - control\n8622  1706 response    angular pretty_condition        impasse - control\n8623  1707 response    angular pretty_condition        impasse - control\n8624  1708 response    angular pretty_condition        impasse - control\n8625  1709 response    angular pretty_condition        impasse - control\n8626  1710 response    angular pretty_condition        impasse - control\n8627  1711 response    angular pretty_condition        impasse - control\n8628  1712 response    angular pretty_condition        impasse - control\n8629  1713 response    angular pretty_condition        impasse - control\n8630  1714 response    angular pretty_condition        impasse - control\n8631  1715 response    angular pretty_condition        impasse - control\n8632  1716 response    angular pretty_condition        impasse - control\n8633  1717 response    angular pretty_condition        impasse - control\n8634  1718 response    angular pretty_condition        impasse - control\n8635  1719 response    angular pretty_condition        impasse - control\n8636  1720 response    angular pretty_condition        impasse - control\n8637  1721 response    angular pretty_condition        impasse - control\n8638  1722 response    angular pretty_condition        impasse - control\n8639  1723 response    angular pretty_condition        impasse - control\n8640  1724 response    angular pretty_condition        impasse - control\n8641  1725 response    angular pretty_condition        impasse - control\n8642  1726 response    angular pretty_condition        impasse - control\n8643  1727 response    angular pretty_condition        impasse - control\n8644  1728 response    angular pretty_condition        impasse - control\n8645  1729 response    angular pretty_condition        impasse - control\n8646     1 response    angular      ospan_split high-memory - low-memory\n8647     2 response    angular      ospan_split high-memory - low-memory\n8648     3 response    angular      ospan_split high-memory - low-memory\n8649     4 response    angular      ospan_split high-memory - low-memory\n8650     5 response    angular      ospan_split high-memory - low-memory\n8651     6 response    angular      ospan_split high-memory - low-memory\n8652     7 response    angular      ospan_split high-memory - low-memory\n8653     8 response    angular      ospan_split high-memory - low-memory\n8654     9 response    angular      ospan_split high-memory - low-memory\n8655    10 response    angular      ospan_split high-memory - low-memory\n8656    11 response    angular      ospan_split high-memory - low-memory\n8657    12 response    angular      ospan_split high-memory - low-memory\n8658    13 response    angular      ospan_split high-memory - low-memory\n8659    14 response    angular      ospan_split high-memory - low-memory\n8660    15 response    angular      ospan_split high-memory - low-memory\n8661    16 response    angular      ospan_split high-memory - low-memory\n8662    17 response    angular      ospan_split high-memory - low-memory\n8663    18 response    angular      ospan_split high-memory - low-memory\n8664    19 response    angular      ospan_split high-memory - low-memory\n8665    20 response    angular      ospan_split high-memory - low-memory\n8666    21 response    angular      ospan_split high-memory - low-memory\n8667    22 response    angular      ospan_split high-memory - low-memory\n8668    23 response    angular      ospan_split high-memory - low-memory\n8669    24 response    angular      ospan_split high-memory - low-memory\n8670    25 response    angular      ospan_split high-memory - low-memory\n8671    26 response    angular      ospan_split high-memory - low-memory\n8672    27 response    angular      ospan_split high-memory - low-memory\n8673    28 response    angular      ospan_split high-memory - low-memory\n8674    29 response    angular      ospan_split high-memory - low-memory\n8675    30 response    angular      ospan_split high-memory - low-memory\n8676    31 response    angular      ospan_split high-memory - low-memory\n8677    32 response    angular      ospan_split high-memory - low-memory\n8678    33 response    angular      ospan_split high-memory - low-memory\n8679    34 response    angular      ospan_split high-memory - low-memory\n8680    35 response    angular      ospan_split high-memory - low-memory\n8681    36 response    angular      ospan_split high-memory - low-memory\n8682    37 response    angular      ospan_split high-memory - low-memory\n8683    38 response    angular      ospan_split high-memory - low-memory\n8684    39 response    angular      ospan_split high-memory - low-memory\n8685    40 response    angular      ospan_split high-memory - low-memory\n8686    41 response    angular      ospan_split high-memory - low-memory\n8687    42 response    angular      ospan_split high-memory - low-memory\n8688    43 response    angular      ospan_split high-memory - low-memory\n8689    44 response    angular      ospan_split high-memory - low-memory\n8690    45 response    angular      ospan_split high-memory - low-memory\n8691    46 response    angular      ospan_split high-memory - low-memory\n8692    47 response    angular      ospan_split high-memory - low-memory\n8693    48 response    angular      ospan_split high-memory - low-memory\n8694    49 response    angular      ospan_split high-memory - low-memory\n8695    50 response    angular      ospan_split high-memory - low-memory\n8696    51 response    angular      ospan_split high-memory - low-memory\n8697    52 response    angular      ospan_split high-memory - low-memory\n8698    53 response    angular      ospan_split high-memory - low-memory\n8699    54 response    angular      ospan_split high-memory - low-memory\n8700    55 response    angular      ospan_split high-memory - low-memory\n8701    56 response    angular      ospan_split high-memory - low-memory\n8702    57 response    angular      ospan_split high-memory - low-memory\n8703    58 response    angular      ospan_split high-memory - low-memory\n8704    59 response    angular      ospan_split high-memory - low-memory\n8705    60 response    angular      ospan_split high-memory - low-memory\n8706    61 response    angular      ospan_split high-memory - low-memory\n8707    62 response    angular      ospan_split high-memory - low-memory\n8708    63 response    angular      ospan_split high-memory - low-memory\n8709    64 response    angular      ospan_split high-memory - low-memory\n8710    65 response    angular      ospan_split high-memory - low-memory\n8711    66 response    angular      ospan_split high-memory - low-memory\n8712    67 response    angular      ospan_split high-memory - low-memory\n8713    68 response    angular      ospan_split high-memory - low-memory\n8714    69 response    angular      ospan_split high-memory - low-memory\n8715    70 response    angular      ospan_split high-memory - low-memory\n8716    71 response    angular      ospan_split high-memory - low-memory\n8717    72 response    angular      ospan_split high-memory - low-memory\n8718    73 response    angular      ospan_split high-memory - low-memory\n8719    74 response    angular      ospan_split high-memory - low-memory\n8720    75 response    angular      ospan_split high-memory - low-memory\n8721    76 response    angular      ospan_split high-memory - low-memory\n8722    77 response    angular      ospan_split high-memory - low-memory\n8723    78 response    angular      ospan_split high-memory - low-memory\n8724    79 response    angular      ospan_split high-memory - low-memory\n8725    80 response    angular      ospan_split high-memory - low-memory\n8726    81 response    angular      ospan_split high-memory - low-memory\n8727    82 response    angular      ospan_split high-memory - low-memory\n8728    83 response    angular      ospan_split high-memory - low-memory\n8729    84 response    angular      ospan_split high-memory - low-memory\n8730    85 response    angular      ospan_split high-memory - low-memory\n8731    86 response    angular      ospan_split high-memory - low-memory\n8732    87 response    angular      ospan_split high-memory - low-memory\n8733    88 response    angular      ospan_split high-memory - low-memory\n8734    89 response    angular      ospan_split high-memory - low-memory\n8735    90 response    angular      ospan_split high-memory - low-memory\n8736    91 response    angular      ospan_split high-memory - low-memory\n8737    92 response    angular      ospan_split high-memory - low-memory\n8738    93 response    angular      ospan_split high-memory - low-memory\n8739    94 response    angular      ospan_split high-memory - low-memory\n8740    95 response    angular      ospan_split high-memory - low-memory\n8741    96 response    angular      ospan_split high-memory - low-memory\n8742    97 response    angular      ospan_split high-memory - low-memory\n8743    98 response    angular      ospan_split high-memory - low-memory\n8744    99 response    angular      ospan_split high-memory - low-memory\n8745   100 response    angular      ospan_split high-memory - low-memory\n8746   101 response    angular      ospan_split high-memory - low-memory\n8747   102 response    angular      ospan_split high-memory - low-memory\n8748   103 response    angular      ospan_split high-memory - low-memory\n8749   104 response    angular      ospan_split high-memory - low-memory\n8750   105 response    angular      ospan_split high-memory - low-memory\n8751   106 response    angular      ospan_split high-memory - low-memory\n8752   107 response    angular      ospan_split high-memory - low-memory\n8753   108 response    angular      ospan_split high-memory - low-memory\n8754   109 response    angular      ospan_split high-memory - low-memory\n8755   110 response    angular      ospan_split high-memory - low-memory\n8756   111 response    angular      ospan_split high-memory - low-memory\n8757   112 response    angular      ospan_split high-memory - low-memory\n8758   113 response    angular      ospan_split high-memory - low-memory\n8759   114 response    angular      ospan_split high-memory - low-memory\n8760   115 response    angular      ospan_split high-memory - low-memory\n8761   116 response    angular      ospan_split high-memory - low-memory\n8762   117 response    angular      ospan_split high-memory - low-memory\n8763   118 response    angular      ospan_split high-memory - low-memory\n8764   119 response    angular      ospan_split high-memory - low-memory\n8765   120 response    angular      ospan_split high-memory - low-memory\n8766   121 response    angular      ospan_split high-memory - low-memory\n8767   122 response    angular      ospan_split high-memory - low-memory\n8768   123 response    angular      ospan_split high-memory - low-memory\n8769   124 response    angular      ospan_split high-memory - low-memory\n8770   125 response    angular      ospan_split high-memory - low-memory\n8771   126 response    angular      ospan_split high-memory - low-memory\n8772   127 response    angular      ospan_split high-memory - low-memory\n8773   128 response    angular      ospan_split high-memory - low-memory\n8774   129 response    angular      ospan_split high-memory - low-memory\n8775   130 response    angular      ospan_split high-memory - low-memory\n8776   131 response    angular      ospan_split high-memory - low-memory\n8777   132 response    angular      ospan_split high-memory - low-memory\n8778   133 response    angular      ospan_split high-memory - low-memory\n8779   134 response    angular      ospan_split high-memory - low-memory\n8780   135 response    angular      ospan_split high-memory - low-memory\n8781   136 response    angular      ospan_split high-memory - low-memory\n8782   137 response    angular      ospan_split high-memory - low-memory\n8783   138 response    angular      ospan_split high-memory - low-memory\n8784   139 response    angular      ospan_split high-memory - low-memory\n8785   140 response    angular      ospan_split high-memory - low-memory\n8786   141 response    angular      ospan_split high-memory - low-memory\n8787   142 response    angular      ospan_split high-memory - low-memory\n8788   143 response    angular      ospan_split high-memory - low-memory\n8789   144 response    angular      ospan_split high-memory - low-memory\n8790   145 response    angular      ospan_split high-memory - low-memory\n8791   146 response    angular      ospan_split high-memory - low-memory\n8792   147 response    angular      ospan_split high-memory - low-memory\n8793   148 response    angular      ospan_split high-memory - low-memory\n8794   149 response    angular      ospan_split high-memory - low-memory\n8795   150 response    angular      ospan_split high-memory - low-memory\n8796   151 response    angular      ospan_split high-memory - low-memory\n8797   152 response    angular      ospan_split high-memory - low-memory\n8798   153 response    angular      ospan_split high-memory - low-memory\n8799   154 response    angular      ospan_split high-memory - low-memory\n8800   155 response    angular      ospan_split high-memory - low-memory\n8801   156 response    angular      ospan_split high-memory - low-memory\n8802   157 response    angular      ospan_split high-memory - low-memory\n8803   158 response    angular      ospan_split high-memory - low-memory\n8804   159 response    angular      ospan_split high-memory - low-memory\n8805   160 response    angular      ospan_split high-memory - low-memory\n8806   161 response    angular      ospan_split high-memory - low-memory\n8807   162 response    angular      ospan_split high-memory - low-memory\n8808   163 response    angular      ospan_split high-memory - low-memory\n8809   164 response    angular      ospan_split high-memory - low-memory\n8810   165 response    angular      ospan_split high-memory - low-memory\n8811   166 response    angular      ospan_split high-memory - low-memory\n8812   167 response    angular      ospan_split high-memory - low-memory\n8813   168 response    angular      ospan_split high-memory - low-memory\n8814   169 response    angular      ospan_split high-memory - low-memory\n8815   170 response    angular      ospan_split high-memory - low-memory\n8816   171 response    angular      ospan_split high-memory - low-memory\n8817   172 response    angular      ospan_split high-memory - low-memory\n8818   173 response    angular      ospan_split high-memory - low-memory\n8819   174 response    angular      ospan_split high-memory - low-memory\n8820   175 response    angular      ospan_split high-memory - low-memory\n8821   176 response    angular      ospan_split high-memory - low-memory\n8822   177 response    angular      ospan_split high-memory - low-memory\n8823   178 response    angular      ospan_split high-memory - low-memory\n8824   179 response    angular      ospan_split high-memory - low-memory\n8825   180 response    angular      ospan_split high-memory - low-memory\n8826   181 response    angular      ospan_split high-memory - low-memory\n8827   182 response    angular      ospan_split high-memory - low-memory\n8828   183 response    angular      ospan_split high-memory - low-memory\n8829   184 response    angular      ospan_split high-memory - low-memory\n8830   185 response    angular      ospan_split high-memory - low-memory\n8831   186 response    angular      ospan_split high-memory - low-memory\n8832   187 response    angular      ospan_split high-memory - low-memory\n8833   188 response    angular      ospan_split high-memory - low-memory\n8834   189 response    angular      ospan_split high-memory - low-memory\n8835   190 response    angular      ospan_split high-memory - low-memory\n8836   191 response    angular      ospan_split high-memory - low-memory\n8837   192 response    angular      ospan_split high-memory - low-memory\n8838   193 response    angular      ospan_split high-memory - low-memory\n8839   194 response    angular      ospan_split high-memory - low-memory\n8840   195 response    angular      ospan_split high-memory - low-memory\n8841   196 response    angular      ospan_split high-memory - low-memory\n8842   197 response    angular      ospan_split high-memory - low-memory\n8843   198 response    angular      ospan_split high-memory - low-memory\n8844   199 response    angular      ospan_split high-memory - low-memory\n8845   200 response    angular      ospan_split high-memory - low-memory\n8846   201 response    angular      ospan_split high-memory - low-memory\n8847   202 response    angular      ospan_split high-memory - low-memory\n8848   203 response    angular      ospan_split high-memory - low-memory\n8849   204 response    angular      ospan_split high-memory - low-memory\n8850   205 response    angular      ospan_split high-memory - low-memory\n8851   206 response    angular      ospan_split high-memory - low-memory\n8852   207 response    angular      ospan_split high-memory - low-memory\n8853   208 response    angular      ospan_split high-memory - low-memory\n8854   209 response    angular      ospan_split high-memory - low-memory\n8855   210 response    angular      ospan_split high-memory - low-memory\n8856   211 response    angular      ospan_split high-memory - low-memory\n8857   212 response    angular      ospan_split high-memory - low-memory\n8858   213 response    angular      ospan_split high-memory - low-memory\n8859   214 response    angular      ospan_split high-memory - low-memory\n8860   215 response    angular      ospan_split high-memory - low-memory\n8861   216 response    angular      ospan_split high-memory - low-memory\n8862   217 response    angular      ospan_split high-memory - low-memory\n8863   218 response    angular      ospan_split high-memory - low-memory\n8864   219 response    angular      ospan_split high-memory - low-memory\n8865   220 response    angular      ospan_split high-memory - low-memory\n8866   221 response    angular      ospan_split high-memory - low-memory\n8867   222 response    angular      ospan_split high-memory - low-memory\n8868   223 response    angular      ospan_split high-memory - low-memory\n8869   224 response    angular      ospan_split high-memory - low-memory\n8870   225 response    angular      ospan_split high-memory - low-memory\n8871   226 response    angular      ospan_split high-memory - low-memory\n8872   227 response    angular      ospan_split high-memory - low-memory\n8873   228 response    angular      ospan_split high-memory - low-memory\n8874   229 response    angular      ospan_split high-memory - low-memory\n8875   230 response    angular      ospan_split high-memory - low-memory\n8876   231 response    angular      ospan_split high-memory - low-memory\n8877   232 response    angular      ospan_split high-memory - low-memory\n8878   233 response    angular      ospan_split high-memory - low-memory\n8879   234 response    angular      ospan_split high-memory - low-memory\n8880   235 response    angular      ospan_split high-memory - low-memory\n8881   236 response    angular      ospan_split high-memory - low-memory\n8882   237 response    angular      ospan_split high-memory - low-memory\n8883   238 response    angular      ospan_split high-memory - low-memory\n8884   239 response    angular      ospan_split high-memory - low-memory\n8885   240 response    angular      ospan_split high-memory - low-memory\n8886   241 response    angular      ospan_split high-memory - low-memory\n8887   242 response    angular      ospan_split high-memory - low-memory\n8888   243 response    angular      ospan_split high-memory - low-memory\n8889   244 response    angular      ospan_split high-memory - low-memory\n8890   245 response    angular      ospan_split high-memory - low-memory\n8891   246 response    angular      ospan_split high-memory - low-memory\n8892   247 response    angular      ospan_split high-memory - low-memory\n8893   248 response    angular      ospan_split high-memory - low-memory\n8894   249 response    angular      ospan_split high-memory - low-memory\n8895   250 response    angular      ospan_split high-memory - low-memory\n8896   251 response    angular      ospan_split high-memory - low-memory\n8897   252 response    angular      ospan_split high-memory - low-memory\n8898   253 response    angular      ospan_split high-memory - low-memory\n8899   254 response    angular      ospan_split high-memory - low-memory\n8900   255 response    angular      ospan_split high-memory - low-memory\n8901   256 response    angular      ospan_split high-memory - low-memory\n8902   257 response    angular      ospan_split high-memory - low-memory\n8903   258 response    angular      ospan_split high-memory - low-memory\n8904   259 response    angular      ospan_split high-memory - low-memory\n8905   260 response    angular      ospan_split high-memory - low-memory\n8906   261 response    angular      ospan_split high-memory - low-memory\n8907   262 response    angular      ospan_split high-memory - low-memory\n8908   263 response    angular      ospan_split high-memory - low-memory\n8909   264 response    angular      ospan_split high-memory - low-memory\n8910   265 response    angular      ospan_split high-memory - low-memory\n8911   266 response    angular      ospan_split high-memory - low-memory\n8912   267 response    angular      ospan_split high-memory - low-memory\n8913   268 response    angular      ospan_split high-memory - low-memory\n8914   269 response    angular      ospan_split high-memory - low-memory\n8915   270 response    angular      ospan_split high-memory - low-memory\n8916   271 response    angular      ospan_split high-memory - low-memory\n8917   272 response    angular      ospan_split high-memory - low-memory\n8918   273 response    angular      ospan_split high-memory - low-memory\n8919   274 response    angular      ospan_split high-memory - low-memory\n8920   275 response    angular      ospan_split high-memory - low-memory\n8921   276 response    angular      ospan_split high-memory - low-memory\n8922   277 response    angular      ospan_split high-memory - low-memory\n8923   278 response    angular      ospan_split high-memory - low-memory\n8924   279 response    angular      ospan_split high-memory - low-memory\n8925   280 response    angular      ospan_split high-memory - low-memory\n8926   281 response    angular      ospan_split high-memory - low-memory\n8927   282 response    angular      ospan_split high-memory - low-memory\n8928   283 response    angular      ospan_split high-memory - low-memory\n8929   284 response    angular      ospan_split high-memory - low-memory\n8930   285 response    angular      ospan_split high-memory - low-memory\n8931   286 response    angular      ospan_split high-memory - low-memory\n8932   287 response    angular      ospan_split high-memory - low-memory\n8933   288 response    angular      ospan_split high-memory - low-memory\n8934   289 response    angular      ospan_split high-memory - low-memory\n8935   290 response    angular      ospan_split high-memory - low-memory\n8936   291 response    angular      ospan_split high-memory - low-memory\n8937   292 response    angular      ospan_split high-memory - low-memory\n8938   293 response    angular      ospan_split high-memory - low-memory\n8939   294 response    angular      ospan_split high-memory - low-memory\n8940   295 response    angular      ospan_split high-memory - low-memory\n8941   296 response    angular      ospan_split high-memory - low-memory\n8942   297 response    angular      ospan_split high-memory - low-memory\n8943   298 response    angular      ospan_split high-memory - low-memory\n8944   299 response    angular      ospan_split high-memory - low-memory\n8945   300 response    angular      ospan_split high-memory - low-memory\n8946   301 response    angular      ospan_split high-memory - low-memory\n8947   302 response    angular      ospan_split high-memory - low-memory\n8948   303 response    angular      ospan_split high-memory - low-memory\n8949   304 response    angular      ospan_split high-memory - low-memory\n8950   305 response    angular      ospan_split high-memory - low-memory\n8951   306 response    angular      ospan_split high-memory - low-memory\n8952   307 response    angular      ospan_split high-memory - low-memory\n8953   308 response    angular      ospan_split high-memory - low-memory\n8954   309 response    angular      ospan_split high-memory - low-memory\n8955   310 response    angular      ospan_split high-memory - low-memory\n8956   311 response    angular      ospan_split high-memory - low-memory\n8957   312 response    angular      ospan_split high-memory - low-memory\n8958   313 response    angular      ospan_split high-memory - low-memory\n8959   314 response    angular      ospan_split high-memory - low-memory\n8960   315 response    angular      ospan_split high-memory - low-memory\n8961   316 response    angular      ospan_split high-memory - low-memory\n8962   317 response    angular      ospan_split high-memory - low-memory\n8963   318 response    angular      ospan_split high-memory - low-memory\n8964   319 response    angular      ospan_split high-memory - low-memory\n8965   320 response    angular      ospan_split high-memory - low-memory\n8966   321 response    angular      ospan_split high-memory - low-memory\n8967   322 response    angular      ospan_split high-memory - low-memory\n8968   323 response    angular      ospan_split high-memory - low-memory\n8969   324 response    angular      ospan_split high-memory - low-memory\n8970   325 response    angular      ospan_split high-memory - low-memory\n8971   326 response    angular      ospan_split high-memory - low-memory\n8972   327 response    angular      ospan_split high-memory - low-memory\n8973   328 response    angular      ospan_split high-memory - low-memory\n8974   329 response    angular      ospan_split high-memory - low-memory\n8975   330 response    angular      ospan_split high-memory - low-memory\n8976   331 response    angular      ospan_split high-memory - low-memory\n8977   332 response    angular      ospan_split high-memory - low-memory\n8978   333 response    angular      ospan_split high-memory - low-memory\n8979   334 response    angular      ospan_split high-memory - low-memory\n8980   335 response    angular      ospan_split high-memory - low-memory\n8981   336 response    angular      ospan_split high-memory - low-memory\n8982   337 response    angular      ospan_split high-memory - low-memory\n8983   338 response    angular      ospan_split high-memory - low-memory\n8984   339 response    angular      ospan_split high-memory - low-memory\n8985   340 response    angular      ospan_split high-memory - low-memory\n8986   341 response    angular      ospan_split high-memory - low-memory\n8987   342 response    angular      ospan_split high-memory - low-memory\n8988   343 response    angular      ospan_split high-memory - low-memory\n8989   344 response    angular      ospan_split high-memory - low-memory\n8990   345 response    angular      ospan_split high-memory - low-memory\n8991   346 response    angular      ospan_split high-memory - low-memory\n8992   347 response    angular      ospan_split high-memory - low-memory\n8993   348 response    angular      ospan_split high-memory - low-memory\n8994   349 response    angular      ospan_split high-memory - low-memory\n8995   350 response    angular      ospan_split high-memory - low-memory\n8996   351 response    angular      ospan_split high-memory - low-memory\n8997   352 response    angular      ospan_split high-memory - low-memory\n8998   353 response    angular      ospan_split high-memory - low-memory\n8999   354 response    angular      ospan_split high-memory - low-memory\n9000   355 response    angular      ospan_split high-memory - low-memory\n9001   356 response    angular      ospan_split high-memory - low-memory\n9002   357 response    angular      ospan_split high-memory - low-memory\n9003   358 response    angular      ospan_split high-memory - low-memory\n9004   359 response    angular      ospan_split high-memory - low-memory\n9005   360 response    angular      ospan_split high-memory - low-memory\n9006   361 response    angular      ospan_split high-memory - low-memory\n9007   362 response    angular      ospan_split high-memory - low-memory\n9008   363 response    angular      ospan_split high-memory - low-memory\n9009   364 response    angular      ospan_split high-memory - low-memory\n9010   365 response    angular      ospan_split high-memory - low-memory\n9011   366 response    angular      ospan_split high-memory - low-memory\n9012   367 response    angular      ospan_split high-memory - low-memory\n9013   368 response    angular      ospan_split high-memory - low-memory\n9014   369 response    angular      ospan_split high-memory - low-memory\n9015   370 response    angular      ospan_split high-memory - low-memory\n9016   371 response    angular      ospan_split high-memory - low-memory\n9017   372 response    angular      ospan_split high-memory - low-memory\n9018   373 response    angular      ospan_split high-memory - low-memory\n9019   374 response    angular      ospan_split high-memory - low-memory\n9020   375 response    angular      ospan_split high-memory - low-memory\n9021   376 response    angular      ospan_split high-memory - low-memory\n9022   377 response    angular      ospan_split high-memory - low-memory\n9023   378 response    angular      ospan_split high-memory - low-memory\n9024   379 response    angular      ospan_split high-memory - low-memory\n9025   380 response    angular      ospan_split high-memory - low-memory\n9026   381 response    angular      ospan_split high-memory - low-memory\n9027   382 response    angular      ospan_split high-memory - low-memory\n9028   383 response    angular      ospan_split high-memory - low-memory\n9029   384 response    angular      ospan_split high-memory - low-memory\n9030   385 response    angular      ospan_split high-memory - low-memory\n9031   386 response    angular      ospan_split high-memory - low-memory\n9032   387 response    angular      ospan_split high-memory - low-memory\n9033   388 response    angular      ospan_split high-memory - low-memory\n9034   389 response    angular      ospan_split high-memory - low-memory\n9035   390 response    angular      ospan_split high-memory - low-memory\n9036   391 response    angular      ospan_split high-memory - low-memory\n9037   392 response    angular      ospan_split high-memory - low-memory\n9038   393 response    angular      ospan_split high-memory - low-memory\n9039   394 response    angular      ospan_split high-memory - low-memory\n9040   395 response    angular      ospan_split high-memory - low-memory\n9041   396 response    angular      ospan_split high-memory - low-memory\n9042   397 response    angular      ospan_split high-memory - low-memory\n9043   398 response    angular      ospan_split high-memory - low-memory\n9044   399 response    angular      ospan_split high-memory - low-memory\n9045   400 response    angular      ospan_split high-memory - low-memory\n9046   401 response    angular      ospan_split high-memory - low-memory\n9047   402 response    angular      ospan_split high-memory - low-memory\n9048   403 response    angular      ospan_split high-memory - low-memory\n9049   404 response    angular      ospan_split high-memory - low-memory\n9050   405 response    angular      ospan_split high-memory - low-memory\n9051   406 response    angular      ospan_split high-memory - low-memory\n9052   407 response    angular      ospan_split high-memory - low-memory\n9053   408 response    angular      ospan_split high-memory - low-memory\n9054   409 response    angular      ospan_split high-memory - low-memory\n9055   410 response    angular      ospan_split high-memory - low-memory\n9056   411 response    angular      ospan_split high-memory - low-memory\n9057   412 response    angular      ospan_split high-memory - low-memory\n9058   413 response    angular      ospan_split high-memory - low-memory\n9059   414 response    angular      ospan_split high-memory - low-memory\n9060   415 response    angular      ospan_split high-memory - low-memory\n9061   416 response    angular      ospan_split high-memory - low-memory\n9062   417 response    angular      ospan_split high-memory - low-memory\n9063   418 response    angular      ospan_split high-memory - low-memory\n9064   419 response    angular      ospan_split high-memory - low-memory\n9065   420 response    angular      ospan_split high-memory - low-memory\n9066   421 response    angular      ospan_split high-memory - low-memory\n9067   422 response    angular      ospan_split high-memory - low-memory\n9068   423 response    angular      ospan_split high-memory - low-memory\n9069   424 response    angular      ospan_split high-memory - low-memory\n9070   425 response    angular      ospan_split high-memory - low-memory\n9071   426 response    angular      ospan_split high-memory - low-memory\n9072   427 response    angular      ospan_split high-memory - low-memory\n9073   428 response    angular      ospan_split high-memory - low-memory\n9074   429 response    angular      ospan_split high-memory - low-memory\n9075   430 response    angular      ospan_split high-memory - low-memory\n9076   431 response    angular      ospan_split high-memory - low-memory\n9077   432 response    angular      ospan_split high-memory - low-memory\n9078   433 response    angular      ospan_split high-memory - low-memory\n9079   434 response    angular      ospan_split high-memory - low-memory\n9080   435 response    angular      ospan_split high-memory - low-memory\n9081   436 response    angular      ospan_split high-memory - low-memory\n9082   437 response    angular      ospan_split high-memory - low-memory\n9083   438 response    angular      ospan_split high-memory - low-memory\n9084   439 response    angular      ospan_split high-memory - low-memory\n9085   440 response    angular      ospan_split high-memory - low-memory\n9086   441 response    angular      ospan_split high-memory - low-memory\n9087   442 response    angular      ospan_split high-memory - low-memory\n9088   443 response    angular      ospan_split high-memory - low-memory\n9089   444 response    angular      ospan_split high-memory - low-memory\n9090   445 response    angular      ospan_split high-memory - low-memory\n9091   446 response    angular      ospan_split high-memory - low-memory\n9092   447 response    angular      ospan_split high-memory - low-memory\n9093   448 response    angular      ospan_split high-memory - low-memory\n9094   449 response    angular      ospan_split high-memory - low-memory\n9095   450 response    angular      ospan_split high-memory - low-memory\n9096   451 response    angular      ospan_split high-memory - low-memory\n9097   452 response    angular      ospan_split high-memory - low-memory\n9098   453 response    angular      ospan_split high-memory - low-memory\n9099   454 response    angular      ospan_split high-memory - low-memory\n9100   455 response    angular      ospan_split high-memory - low-memory\n9101   456 response    angular      ospan_split high-memory - low-memory\n9102   457 response    angular      ospan_split high-memory - low-memory\n9103   458 response    angular      ospan_split high-memory - low-memory\n9104   459 response    angular      ospan_split high-memory - low-memory\n9105   460 response    angular      ospan_split high-memory - low-memory\n9106   461 response    angular      ospan_split high-memory - low-memory\n9107   462 response    angular      ospan_split high-memory - low-memory\n9108   463 response    angular      ospan_split high-memory - low-memory\n9109   464 response    angular      ospan_split high-memory - low-memory\n9110   465 response    angular      ospan_split high-memory - low-memory\n9111   466 response    angular      ospan_split high-memory - low-memory\n9112   467 response    angular      ospan_split high-memory - low-memory\n9113   468 response    angular      ospan_split high-memory - low-memory\n9114   469 response    angular      ospan_split high-memory - low-memory\n9115   470 response    angular      ospan_split high-memory - low-memory\n9116   471 response    angular      ospan_split high-memory - low-memory\n9117   472 response    angular      ospan_split high-memory - low-memory\n9118   473 response    angular      ospan_split high-memory - low-memory\n9119   474 response    angular      ospan_split high-memory - low-memory\n9120   475 response    angular      ospan_split high-memory - low-memory\n9121   476 response    angular      ospan_split high-memory - low-memory\n9122   477 response    angular      ospan_split high-memory - low-memory\n9123   478 response    angular      ospan_split high-memory - low-memory\n9124   479 response    angular      ospan_split high-memory - low-memory\n9125   480 response    angular      ospan_split high-memory - low-memory\n9126   481 response    angular      ospan_split high-memory - low-memory\n9127   482 response    angular      ospan_split high-memory - low-memory\n9128   483 response    angular      ospan_split high-memory - low-memory\n9129   484 response    angular      ospan_split high-memory - low-memory\n9130   485 response    angular      ospan_split high-memory - low-memory\n9131   486 response    angular      ospan_split high-memory - low-memory\n9132   487 response    angular      ospan_split high-memory - low-memory\n9133   488 response    angular      ospan_split high-memory - low-memory\n9134   489 response    angular      ospan_split high-memory - low-memory\n9135   490 response    angular      ospan_split high-memory - low-memory\n9136   491 response    angular      ospan_split high-memory - low-memory\n9137   492 response    angular      ospan_split high-memory - low-memory\n9138   493 response    angular      ospan_split high-memory - low-memory\n9139   494 response    angular      ospan_split high-memory - low-memory\n9140   495 response    angular      ospan_split high-memory - low-memory\n9141   496 response    angular      ospan_split high-memory - low-memory\n9142   497 response    angular      ospan_split high-memory - low-memory\n9143   498 response    angular      ospan_split high-memory - low-memory\n9144   499 response    angular      ospan_split high-memory - low-memory\n9145   500 response    angular      ospan_split high-memory - low-memory\n9146   501 response    angular      ospan_split high-memory - low-memory\n9147   502 response    angular      ospan_split high-memory - low-memory\n9148   503 response    angular      ospan_split high-memory - low-memory\n9149   504 response    angular      ospan_split high-memory - low-memory\n9150   505 response    angular      ospan_split high-memory - low-memory\n9151   506 response    angular      ospan_split high-memory - low-memory\n9152   507 response    angular      ospan_split high-memory - low-memory\n9153   508 response    angular      ospan_split high-memory - low-memory\n9154   509 response    angular      ospan_split high-memory - low-memory\n9155   510 response    angular      ospan_split high-memory - low-memory\n9156   511 response    angular      ospan_split high-memory - low-memory\n9157   512 response    angular      ospan_split high-memory - low-memory\n9158   513 response    angular      ospan_split high-memory - low-memory\n9159   514 response    angular      ospan_split high-memory - low-memory\n9160   515 response    angular      ospan_split high-memory - low-memory\n9161   516 response    angular      ospan_split high-memory - low-memory\n9162   517 response    angular      ospan_split high-memory - low-memory\n9163   518 response    angular      ospan_split high-memory - low-memory\n9164   519 response    angular      ospan_split high-memory - low-memory\n9165   520 response    angular      ospan_split high-memory - low-memory\n9166   521 response    angular      ospan_split high-memory - low-memory\n9167   522 response    angular      ospan_split high-memory - low-memory\n9168   523 response    angular      ospan_split high-memory - low-memory\n9169   524 response    angular      ospan_split high-memory - low-memory\n9170   525 response    angular      ospan_split high-memory - low-memory\n9171   526 response    angular      ospan_split high-memory - low-memory\n9172   527 response    angular      ospan_split high-memory - low-memory\n9173   528 response    angular      ospan_split high-memory - low-memory\n9174   529 response    angular      ospan_split high-memory - low-memory\n9175   530 response    angular      ospan_split high-memory - low-memory\n9176   531 response    angular      ospan_split high-memory - low-memory\n9177   532 response    angular      ospan_split high-memory - low-memory\n9178   533 response    angular      ospan_split high-memory - low-memory\n9179   534 response    angular      ospan_split high-memory - low-memory\n9180   535 response    angular      ospan_split high-memory - low-memory\n9181   536 response    angular      ospan_split high-memory - low-memory\n9182   537 response    angular      ospan_split high-memory - low-memory\n9183   538 response    angular      ospan_split high-memory - low-memory\n9184   539 response    angular      ospan_split high-memory - low-memory\n9185   540 response    angular      ospan_split high-memory - low-memory\n9186   541 response    angular      ospan_split high-memory - low-memory\n9187   542 response    angular      ospan_split high-memory - low-memory\n9188   543 response    angular      ospan_split high-memory - low-memory\n9189   544 response    angular      ospan_split high-memory - low-memory\n9190   545 response    angular      ospan_split high-memory - low-memory\n9191   546 response    angular      ospan_split high-memory - low-memory\n9192   547 response    angular      ospan_split high-memory - low-memory\n9193   548 response    angular      ospan_split high-memory - low-memory\n9194   549 response    angular      ospan_split high-memory - low-memory\n9195   550 response    angular      ospan_split high-memory - low-memory\n9196   551 response    angular      ospan_split high-memory - low-memory\n9197   552 response    angular      ospan_split high-memory - low-memory\n9198   553 response    angular      ospan_split high-memory - low-memory\n9199   554 response    angular      ospan_split high-memory - low-memory\n9200   555 response    angular      ospan_split high-memory - low-memory\n9201   556 response    angular      ospan_split high-memory - low-memory\n9202   557 response    angular      ospan_split high-memory - low-memory\n9203   558 response    angular      ospan_split high-memory - low-memory\n9204   559 response    angular      ospan_split high-memory - low-memory\n9205   560 response    angular      ospan_split high-memory - low-memory\n9206   561 response    angular      ospan_split high-memory - low-memory\n9207   562 response    angular      ospan_split high-memory - low-memory\n9208   563 response    angular      ospan_split high-memory - low-memory\n9209   564 response    angular      ospan_split high-memory - low-memory\n9210   565 response    angular      ospan_split high-memory - low-memory\n9211   566 response    angular      ospan_split high-memory - low-memory\n9212   567 response    angular      ospan_split high-memory - low-memory\n9213   568 response    angular      ospan_split high-memory - low-memory\n9214   569 response    angular      ospan_split high-memory - low-memory\n9215   570 response    angular      ospan_split high-memory - low-memory\n9216   571 response    angular      ospan_split high-memory - low-memory\n9217   572 response    angular      ospan_split high-memory - low-memory\n9218   573 response    angular      ospan_split high-memory - low-memory\n9219   574 response    angular      ospan_split high-memory - low-memory\n9220   575 response    angular      ospan_split high-memory - low-memory\n9221   576 response    angular      ospan_split high-memory - low-memory\n9222   577 response    angular      ospan_split high-memory - low-memory\n9223   578 response    angular      ospan_split high-memory - low-memory\n9224   579 response    angular      ospan_split high-memory - low-memory\n9225   580 response    angular      ospan_split high-memory - low-memory\n9226   581 response    angular      ospan_split high-memory - low-memory\n9227   582 response    angular      ospan_split high-memory - low-memory\n9228   583 response    angular      ospan_split high-memory - low-memory\n9229   584 response    angular      ospan_split high-memory - low-memory\n9230   585 response    angular      ospan_split high-memory - low-memory\n9231   586 response    angular      ospan_split high-memory - low-memory\n9232   587 response    angular      ospan_split high-memory - low-memory\n9233   588 response    angular      ospan_split high-memory - low-memory\n9234   589 response    angular      ospan_split high-memory - low-memory\n9235   590 response    angular      ospan_split high-memory - low-memory\n9236   591 response    angular      ospan_split high-memory - low-memory\n9237   592 response    angular      ospan_split high-memory - low-memory\n9238   593 response    angular      ospan_split high-memory - low-memory\n9239   594 response    angular      ospan_split high-memory - low-memory\n9240   595 response    angular      ospan_split high-memory - low-memory\n9241   596 response    angular      ospan_split high-memory - low-memory\n9242   597 response    angular      ospan_split high-memory - low-memory\n9243   598 response    angular      ospan_split high-memory - low-memory\n9244   599 response    angular      ospan_split high-memory - low-memory\n9245   600 response    angular      ospan_split high-memory - low-memory\n9246   601 response    angular      ospan_split high-memory - low-memory\n9247   602 response    angular      ospan_split high-memory - low-memory\n9248   603 response    angular      ospan_split high-memory - low-memory\n9249   604 response    angular      ospan_split high-memory - low-memory\n9250   605 response    angular      ospan_split high-memory - low-memory\n9251   606 response    angular      ospan_split high-memory - low-memory\n9252   607 response    angular      ospan_split high-memory - low-memory\n9253   608 response    angular      ospan_split high-memory - low-memory\n9254   609 response    angular      ospan_split high-memory - low-memory\n9255   610 response    angular      ospan_split high-memory - low-memory\n9256   611 response    angular      ospan_split high-memory - low-memory\n9257   612 response    angular      ospan_split high-memory - low-memory\n9258   613 response    angular      ospan_split high-memory - low-memory\n9259   614 response    angular      ospan_split high-memory - low-memory\n9260   615 response    angular      ospan_split high-memory - low-memory\n9261   616 response    angular      ospan_split high-memory - low-memory\n9262   617 response    angular      ospan_split high-memory - low-memory\n9263   618 response    angular      ospan_split high-memory - low-memory\n9264   619 response    angular      ospan_split high-memory - low-memory\n9265   620 response    angular      ospan_split high-memory - low-memory\n9266   621 response    angular      ospan_split high-memory - low-memory\n9267   622 response    angular      ospan_split high-memory - low-memory\n9268   623 response    angular      ospan_split high-memory - low-memory\n9269   624 response    angular      ospan_split high-memory - low-memory\n9270   625 response    angular      ospan_split high-memory - low-memory\n9271   626 response    angular      ospan_split high-memory - low-memory\n9272   627 response    angular      ospan_split high-memory - low-memory\n9273   628 response    angular      ospan_split high-memory - low-memory\n9274   629 response    angular      ospan_split high-memory - low-memory\n9275   630 response    angular      ospan_split high-memory - low-memory\n9276   631 response    angular      ospan_split high-memory - low-memory\n9277   632 response    angular      ospan_split high-memory - low-memory\n9278   633 response    angular      ospan_split high-memory - low-memory\n9279   634 response    angular      ospan_split high-memory - low-memory\n9280   635 response    angular      ospan_split high-memory - low-memory\n9281   636 response    angular      ospan_split high-memory - low-memory\n9282   637 response    angular      ospan_split high-memory - low-memory\n9283   638 response    angular      ospan_split high-memory - low-memory\n9284   639 response    angular      ospan_split high-memory - low-memory\n9285   640 response    angular      ospan_split high-memory - low-memory\n9286   641 response    angular      ospan_split high-memory - low-memory\n9287   642 response    angular      ospan_split high-memory - low-memory\n9288   643 response    angular      ospan_split high-memory - low-memory\n9289   644 response    angular      ospan_split high-memory - low-memory\n9290   645 response    angular      ospan_split high-memory - low-memory\n9291   646 response    angular      ospan_split high-memory - low-memory\n9292   647 response    angular      ospan_split high-memory - low-memory\n9293   648 response    angular      ospan_split high-memory - low-memory\n9294   649 response    angular      ospan_split high-memory - low-memory\n9295   650 response    angular      ospan_split high-memory - low-memory\n9296   651 response    angular      ospan_split high-memory - low-memory\n9297   652 response    angular      ospan_split high-memory - low-memory\n9298   653 response    angular      ospan_split high-memory - low-memory\n9299   654 response    angular      ospan_split high-memory - low-memory\n9300   655 response    angular      ospan_split high-memory - low-memory\n9301   656 response    angular      ospan_split high-memory - low-memory\n9302   657 response    angular      ospan_split high-memory - low-memory\n9303   658 response    angular      ospan_split high-memory - low-memory\n9304   659 response    angular      ospan_split high-memory - low-memory\n9305   660 response    angular      ospan_split high-memory - low-memory\n9306   661 response    angular      ospan_split high-memory - low-memory\n9307   662 response    angular      ospan_split high-memory - low-memory\n9308   663 response    angular      ospan_split high-memory - low-memory\n9309   664 response    angular      ospan_split high-memory - low-memory\n9310   665 response    angular      ospan_split high-memory - low-memory\n9311   666 response    angular      ospan_split high-memory - low-memory\n9312   667 response    angular      ospan_split high-memory - low-memory\n9313   668 response    angular      ospan_split high-memory - low-memory\n9314   669 response    angular      ospan_split high-memory - low-memory\n9315   670 response    angular      ospan_split high-memory - low-memory\n9316   671 response    angular      ospan_split high-memory - low-memory\n9317   672 response    angular      ospan_split high-memory - low-memory\n9318   673 response    angular      ospan_split high-memory - low-memory\n9319   674 response    angular      ospan_split high-memory - low-memory\n9320   675 response    angular      ospan_split high-memory - low-memory\n9321   676 response    angular      ospan_split high-memory - low-memory\n9322   677 response    angular      ospan_split high-memory - low-memory\n9323   678 response    angular      ospan_split high-memory - low-memory\n9324   679 response    angular      ospan_split high-memory - low-memory\n9325   680 response    angular      ospan_split high-memory - low-memory\n9326   681 response    angular      ospan_split high-memory - low-memory\n9327   682 response    angular      ospan_split high-memory - low-memory\n9328   683 response    angular      ospan_split high-memory - low-memory\n9329   684 response    angular      ospan_split high-memory - low-memory\n9330   685 response    angular      ospan_split high-memory - low-memory\n9331   686 response    angular      ospan_split high-memory - low-memory\n9332   687 response    angular      ospan_split high-memory - low-memory\n9333   688 response    angular      ospan_split high-memory - low-memory\n9334   689 response    angular      ospan_split high-memory - low-memory\n9335   690 response    angular      ospan_split high-memory - low-memory\n9336   691 response    angular      ospan_split high-memory - low-memory\n9337   692 response    angular      ospan_split high-memory - low-memory\n9338   693 response    angular      ospan_split high-memory - low-memory\n9339   694 response    angular      ospan_split high-memory - low-memory\n9340   695 response    angular      ospan_split high-memory - low-memory\n9341   696 response    angular      ospan_split high-memory - low-memory\n9342   697 response    angular      ospan_split high-memory - low-memory\n9343   698 response    angular      ospan_split high-memory - low-memory\n9344   699 response    angular      ospan_split high-memory - low-memory\n9345   700 response    angular      ospan_split high-memory - low-memory\n9346   701 response    angular      ospan_split high-memory - low-memory\n9347   702 response    angular      ospan_split high-memory - low-memory\n9348   703 response    angular      ospan_split high-memory - low-memory\n9349   704 response    angular      ospan_split high-memory - low-memory\n9350   705 response    angular      ospan_split high-memory - low-memory\n9351   706 response    angular      ospan_split high-memory - low-memory\n9352   707 response    angular      ospan_split high-memory - low-memory\n9353   708 response    angular      ospan_split high-memory - low-memory\n9354   709 response    angular      ospan_split high-memory - low-memory\n9355   710 response    angular      ospan_split high-memory - low-memory\n9356   711 response    angular      ospan_split high-memory - low-memory\n9357   712 response    angular      ospan_split high-memory - low-memory\n9358   713 response    angular      ospan_split high-memory - low-memory\n9359   714 response    angular      ospan_split high-memory - low-memory\n9360   715 response    angular      ospan_split high-memory - low-memory\n9361   716 response    angular      ospan_split high-memory - low-memory\n9362   717 response    angular      ospan_split high-memory - low-memory\n9363   718 response    angular      ospan_split high-memory - low-memory\n9364   719 response    angular      ospan_split high-memory - low-memory\n9365   720 response    angular      ospan_split high-memory - low-memory\n9366   721 response    angular      ospan_split high-memory - low-memory\n9367   722 response    angular      ospan_split high-memory - low-memory\n9368   723 response    angular      ospan_split high-memory - low-memory\n9369   724 response    angular      ospan_split high-memory - low-memory\n9370   725 response    angular      ospan_split high-memory - low-memory\n9371   726 response    angular      ospan_split high-memory - low-memory\n9372   727 response    angular      ospan_split high-memory - low-memory\n9373   728 response    angular      ospan_split high-memory - low-memory\n9374   729 response    angular      ospan_split high-memory - low-memory\n9375   730 response    angular      ospan_split high-memory - low-memory\n9376   731 response    angular      ospan_split high-memory - low-memory\n9377   732 response    angular      ospan_split high-memory - low-memory\n9378   733 response    angular      ospan_split high-memory - low-memory\n9379   734 response    angular      ospan_split high-memory - low-memory\n9380   735 response    angular      ospan_split high-memory - low-memory\n9381   736 response    angular      ospan_split high-memory - low-memory\n9382   737 response    angular      ospan_split high-memory - low-memory\n9383   738 response    angular      ospan_split high-memory - low-memory\n9384   739 response    angular      ospan_split high-memory - low-memory\n9385   740 response    angular      ospan_split high-memory - low-memory\n9386   741 response    angular      ospan_split high-memory - low-memory\n9387   742 response    angular      ospan_split high-memory - low-memory\n9388   743 response    angular      ospan_split high-memory - low-memory\n9389   744 response    angular      ospan_split high-memory - low-memory\n9390   745 response    angular      ospan_split high-memory - low-memory\n9391   746 response    angular      ospan_split high-memory - low-memory\n9392   747 response    angular      ospan_split high-memory - low-memory\n9393   748 response    angular      ospan_split high-memory - low-memory\n9394   749 response    angular      ospan_split high-memory - low-memory\n9395   750 response    angular      ospan_split high-memory - low-memory\n9396   751 response    angular      ospan_split high-memory - low-memory\n9397   752 response    angular      ospan_split high-memory - low-memory\n9398   753 response    angular      ospan_split high-memory - low-memory\n9399   754 response    angular      ospan_split high-memory - low-memory\n9400   755 response    angular      ospan_split high-memory - low-memory\n9401   756 response    angular      ospan_split high-memory - low-memory\n9402   757 response    angular      ospan_split high-memory - low-memory\n9403   758 response    angular      ospan_split high-memory - low-memory\n9404   759 response    angular      ospan_split high-memory - low-memory\n9405   760 response    angular      ospan_split high-memory - low-memory\n9406   761 response    angular      ospan_split high-memory - low-memory\n9407   762 response    angular      ospan_split high-memory - low-memory\n9408   763 response    angular      ospan_split high-memory - low-memory\n9409   764 response    angular      ospan_split high-memory - low-memory\n9410   765 response    angular      ospan_split high-memory - low-memory\n9411   766 response    angular      ospan_split high-memory - low-memory\n9412   767 response    angular      ospan_split high-memory - low-memory\n9413   768 response    angular      ospan_split high-memory - low-memory\n9414   769 response    angular      ospan_split high-memory - low-memory\n9415   770 response    angular      ospan_split high-memory - low-memory\n9416   771 response    angular      ospan_split high-memory - low-memory\n9417   772 response    angular      ospan_split high-memory - low-memory\n9418   773 response    angular      ospan_split high-memory - low-memory\n9419   774 response    angular      ospan_split high-memory - low-memory\n9420   775 response    angular      ospan_split high-memory - low-memory\n9421   776 response    angular      ospan_split high-memory - low-memory\n9422   777 response    angular      ospan_split high-memory - low-memory\n9423   778 response    angular      ospan_split high-memory - low-memory\n9424   779 response    angular      ospan_split high-memory - low-memory\n9425   780 response    angular      ospan_split high-memory - low-memory\n9426   781 response    angular      ospan_split high-memory - low-memory\n9427   782 response    angular      ospan_split high-memory - low-memory\n9428   783 response    angular      ospan_split high-memory - low-memory\n9429   784 response    angular      ospan_split high-memory - low-memory\n9430   785 response    angular      ospan_split high-memory - low-memory\n9431   786 response    angular      ospan_split high-memory - low-memory\n9432   787 response    angular      ospan_split high-memory - low-memory\n9433   788 response    angular      ospan_split high-memory - low-memory\n9434   789 response    angular      ospan_split high-memory - low-memory\n9435   790 response    angular      ospan_split high-memory - low-memory\n9436   791 response    angular      ospan_split high-memory - low-memory\n9437   792 response    angular      ospan_split high-memory - low-memory\n9438   793 response    angular      ospan_split high-memory - low-memory\n9439   794 response    angular      ospan_split high-memory - low-memory\n9440   795 response    angular      ospan_split high-memory - low-memory\n9441   796 response    angular      ospan_split high-memory - low-memory\n9442   797 response    angular      ospan_split high-memory - low-memory\n9443   798 response    angular      ospan_split high-memory - low-memory\n9444   799 response    angular      ospan_split high-memory - low-memory\n9445   800 response    angular      ospan_split high-memory - low-memory\n9446   801 response    angular      ospan_split high-memory - low-memory\n9447   802 response    angular      ospan_split high-memory - low-memory\n9448   803 response    angular      ospan_split high-memory - low-memory\n9449   804 response    angular      ospan_split high-memory - low-memory\n9450   805 response    angular      ospan_split high-memory - low-memory\n9451   806 response    angular      ospan_split high-memory - low-memory\n9452   807 response    angular      ospan_split high-memory - low-memory\n9453   808 response    angular      ospan_split high-memory - low-memory\n9454   809 response    angular      ospan_split high-memory - low-memory\n9455   810 response    angular      ospan_split high-memory - low-memory\n9456   811 response    angular      ospan_split high-memory - low-memory\n9457   812 response    angular      ospan_split high-memory - low-memory\n9458   813 response    angular      ospan_split high-memory - low-memory\n9459   814 response    angular      ospan_split high-memory - low-memory\n9460   815 response    angular      ospan_split high-memory - low-memory\n9461   816 response    angular      ospan_split high-memory - low-memory\n9462   817 response    angular      ospan_split high-memory - low-memory\n9463   818 response    angular      ospan_split high-memory - low-memory\n9464   819 response    angular      ospan_split high-memory - low-memory\n9465   820 response    angular      ospan_split high-memory - low-memory\n9466   821 response    angular      ospan_split high-memory - low-memory\n9467   822 response    angular      ospan_split high-memory - low-memory\n9468   823 response    angular      ospan_split high-memory - low-memory\n9469   824 response    angular      ospan_split high-memory - low-memory\n9470   825 response    angular      ospan_split high-memory - low-memory\n9471   826 response    angular      ospan_split high-memory - low-memory\n9472   827 response    angular      ospan_split high-memory - low-memory\n9473   828 response    angular      ospan_split high-memory - low-memory\n9474   829 response    angular      ospan_split high-memory - low-memory\n9475   830 response    angular      ospan_split high-memory - low-memory\n9476   831 response    angular      ospan_split high-memory - low-memory\n9477   832 response    angular      ospan_split high-memory - low-memory\n9478   833 response    angular      ospan_split high-memory - low-memory\n9479   834 response    angular      ospan_split high-memory - low-memory\n9480   835 response    angular      ospan_split high-memory - low-memory\n9481   836 response    angular      ospan_split high-memory - low-memory\n9482   837 response    angular      ospan_split high-memory - low-memory\n9483   838 response    angular      ospan_split high-memory - low-memory\n9484   839 response    angular      ospan_split high-memory - low-memory\n9485   840 response    angular      ospan_split high-memory - low-memory\n9486   841 response    angular      ospan_split high-memory - low-memory\n9487   842 response    angular      ospan_split high-memory - low-memory\n9488   843 response    angular      ospan_split high-memory - low-memory\n9489   844 response    angular      ospan_split high-memory - low-memory\n9490   845 response    angular      ospan_split high-memory - low-memory\n9491   846 response    angular      ospan_split high-memory - low-memory\n9492   847 response    angular      ospan_split high-memory - low-memory\n9493   848 response    angular      ospan_split high-memory - low-memory\n9494   849 response    angular      ospan_split high-memory - low-memory\n9495   850 response    angular      ospan_split high-memory - low-memory\n9496   851 response    angular      ospan_split high-memory - low-memory\n9497   852 response    angular      ospan_split high-memory - low-memory\n9498   853 response    angular      ospan_split high-memory - low-memory\n9499   854 response    angular      ospan_split high-memory - low-memory\n9500   855 response    angular      ospan_split high-memory - low-memory\n9501   856 response    angular      ospan_split high-memory - low-memory\n9502   857 response    angular      ospan_split high-memory - low-memory\n9503   858 response    angular      ospan_split high-memory - low-memory\n9504   859 response    angular      ospan_split high-memory - low-memory\n9505   860 response    angular      ospan_split high-memory - low-memory\n9506   861 response    angular      ospan_split high-memory - low-memory\n9507   862 response    angular      ospan_split high-memory - low-memory\n9508   863 response    angular      ospan_split high-memory - low-memory\n9509   864 response    angular      ospan_split high-memory - low-memory\n9510   865 response    angular      ospan_split high-memory - low-memory\n9511   866 response    angular      ospan_split high-memory - low-memory\n9512   867 response    angular      ospan_split high-memory - low-memory\n9513   868 response    angular      ospan_split high-memory - low-memory\n9514   869 response    angular      ospan_split high-memory - low-memory\n9515   870 response    angular      ospan_split high-memory - low-memory\n9516   871 response    angular      ospan_split high-memory - low-memory\n9517   872 response    angular      ospan_split high-memory - low-memory\n9518   873 response    angular      ospan_split high-memory - low-memory\n9519   874 response    angular      ospan_split high-memory - low-memory\n9520   875 response    angular      ospan_split high-memory - low-memory\n9521   876 response    angular      ospan_split high-memory - low-memory\n9522   877 response    angular      ospan_split high-memory - low-memory\n9523   878 response    angular      ospan_split high-memory - low-memory\n9524   879 response    angular      ospan_split high-memory - low-memory\n9525   880 response    angular      ospan_split high-memory - low-memory\n9526   881 response    angular      ospan_split high-memory - low-memory\n9527   882 response    angular      ospan_split high-memory - low-memory\n9528   883 response    angular      ospan_split high-memory - low-memory\n9529   884 response    angular      ospan_split high-memory - low-memory\n9530   885 response    angular      ospan_split high-memory - low-memory\n9531   886 response    angular      ospan_split high-memory - low-memory\n9532   887 response    angular      ospan_split high-memory - low-memory\n9533   888 response    angular      ospan_split high-memory - low-memory\n9534   889 response    angular      ospan_split high-memory - low-memory\n9535   890 response    angular      ospan_split high-memory - low-memory\n9536   891 response    angular      ospan_split high-memory - low-memory\n9537   892 response    angular      ospan_split high-memory - low-memory\n9538   893 response    angular      ospan_split high-memory - low-memory\n9539   894 response    angular      ospan_split high-memory - low-memory\n9540   895 response    angular      ospan_split high-memory - low-memory\n9541   896 response    angular      ospan_split high-memory - low-memory\n9542   897 response    angular      ospan_split high-memory - low-memory\n9543   898 response    angular      ospan_split high-memory - low-memory\n9544   899 response    angular      ospan_split high-memory - low-memory\n9545   900 response    angular      ospan_split high-memory - low-memory\n9546   901 response    angular      ospan_split high-memory - low-memory\n9547   902 response    angular      ospan_split high-memory - low-memory\n9548   903 response    angular      ospan_split high-memory - low-memory\n9549   904 response    angular      ospan_split high-memory - low-memory\n9550   905 response    angular      ospan_split high-memory - low-memory\n9551   906 response    angular      ospan_split high-memory - low-memory\n9552   907 response    angular      ospan_split high-memory - low-memory\n9553   908 response    angular      ospan_split high-memory - low-memory\n9554   909 response    angular      ospan_split high-memory - low-memory\n9555   910 response    angular      ospan_split high-memory - low-memory\n9556   911 response    angular      ospan_split high-memory - low-memory\n9557   912 response    angular      ospan_split high-memory - low-memory\n9558   913 response    angular      ospan_split high-memory - low-memory\n9559   914 response    angular      ospan_split high-memory - low-memory\n9560   915 response    angular      ospan_split high-memory - low-memory\n9561   916 response    angular      ospan_split high-memory - low-memory\n9562   917 response    angular      ospan_split high-memory - low-memory\n9563   918 response    angular      ospan_split high-memory - low-memory\n9564   919 response    angular      ospan_split high-memory - low-memory\n9565   920 response    angular      ospan_split high-memory - low-memory\n9566   921 response    angular      ospan_split high-memory - low-memory\n9567   922 response    angular      ospan_split high-memory - low-memory\n9568   923 response    angular      ospan_split high-memory - low-memory\n9569   924 response    angular      ospan_split high-memory - low-memory\n9570   925 response    angular      ospan_split high-memory - low-memory\n9571   926 response    angular      ospan_split high-memory - low-memory\n9572   927 response    angular      ospan_split high-memory - low-memory\n9573   928 response    angular      ospan_split high-memory - low-memory\n9574   929 response    angular      ospan_split high-memory - low-memory\n9575   930 response    angular      ospan_split high-memory - low-memory\n9576   931 response    angular      ospan_split high-memory - low-memory\n9577   932 response    angular      ospan_split high-memory - low-memory\n9578   933 response    angular      ospan_split high-memory - low-memory\n9579   934 response    angular      ospan_split high-memory - low-memory\n9580   935 response    angular      ospan_split high-memory - low-memory\n9581   936 response    angular      ospan_split high-memory - low-memory\n9582   937 response    angular      ospan_split high-memory - low-memory\n9583   938 response    angular      ospan_split high-memory - low-memory\n9584   939 response    angular      ospan_split high-memory - low-memory\n9585   940 response    angular      ospan_split high-memory - low-memory\n9586   941 response    angular      ospan_split high-memory - low-memory\n9587   942 response    angular      ospan_split high-memory - low-memory\n9588   943 response    angular      ospan_split high-memory - low-memory\n9589   944 response    angular      ospan_split high-memory - low-memory\n9590   945 response    angular      ospan_split high-memory - low-memory\n9591   946 response    angular      ospan_split high-memory - low-memory\n9592   947 response    angular      ospan_split high-memory - low-memory\n9593   948 response    angular      ospan_split high-memory - low-memory\n9594   949 response    angular      ospan_split high-memory - low-memory\n9595   950 response    angular      ospan_split high-memory - low-memory\n9596   951 response    angular      ospan_split high-memory - low-memory\n9597   952 response    angular      ospan_split high-memory - low-memory\n9598   953 response    angular      ospan_split high-memory - low-memory\n9599   954 response    angular      ospan_split high-memory - low-memory\n9600   955 response    angular      ospan_split high-memory - low-memory\n9601   956 response    angular      ospan_split high-memory - low-memory\n9602   957 response    angular      ospan_split high-memory - low-memory\n9603   958 response    angular      ospan_split high-memory - low-memory\n9604   959 response    angular      ospan_split high-memory - low-memory\n9605   960 response    angular      ospan_split high-memory - low-memory\n9606   961 response    angular      ospan_split high-memory - low-memory\n9607   962 response    angular      ospan_split high-memory - low-memory\n9608   963 response    angular      ospan_split high-memory - low-memory\n9609   964 response    angular      ospan_split high-memory - low-memory\n9610   965 response    angular      ospan_split high-memory - low-memory\n9611   966 response    angular      ospan_split high-memory - low-memory\n9612   967 response    angular      ospan_split high-memory - low-memory\n9613   968 response    angular      ospan_split high-memory - low-memory\n9614   969 response    angular      ospan_split high-memory - low-memory\n9615   970 response    angular      ospan_split high-memory - low-memory\n9616   971 response    angular      ospan_split high-memory - low-memory\n9617   972 response    angular      ospan_split high-memory - low-memory\n9618   973 response    angular      ospan_split high-memory - low-memory\n9619   974 response    angular      ospan_split high-memory - low-memory\n9620   975 response    angular      ospan_split high-memory - low-memory\n9621   976 response    angular      ospan_split high-memory - low-memory\n9622   977 response    angular      ospan_split high-memory - low-memory\n9623   978 response    angular      ospan_split high-memory - low-memory\n9624   979 response    angular      ospan_split high-memory - low-memory\n9625   980 response    angular      ospan_split high-memory - low-memory\n9626   981 response    angular      ospan_split high-memory - low-memory\n9627   982 response    angular      ospan_split high-memory - low-memory\n9628   983 response    angular      ospan_split high-memory - low-memory\n9629   984 response    angular      ospan_split high-memory - low-memory\n9630   985 response    angular      ospan_split high-memory - low-memory\n9631   986 response    angular      ospan_split high-memory - low-memory\n9632   987 response    angular      ospan_split high-memory - low-memory\n9633   988 response    angular      ospan_split high-memory - low-memory\n9634   989 response    angular      ospan_split high-memory - low-memory\n9635   990 response    angular      ospan_split high-memory - low-memory\n9636   991 response    angular      ospan_split high-memory - low-memory\n9637   992 response    angular      ospan_split high-memory - low-memory\n9638   993 response    angular      ospan_split high-memory - low-memory\n9639   994 response    angular      ospan_split high-memory - low-memory\n9640   995 response    angular      ospan_split high-memory - low-memory\n9641   996 response    angular      ospan_split high-memory - low-memory\n9642   997 response    angular      ospan_split high-memory - low-memory\n9643   998 response    angular      ospan_split high-memory - low-memory\n9644   999 response    angular      ospan_split high-memory - low-memory\n9645  1000 response    angular      ospan_split high-memory - low-memory\n9646  1001 response    angular      ospan_split high-memory - low-memory\n9647  1002 response    angular      ospan_split high-memory - low-memory\n9648  1003 response    angular      ospan_split high-memory - low-memory\n9649  1004 response    angular      ospan_split high-memory - low-memory\n9650  1005 response    angular      ospan_split high-memory - low-memory\n9651  1006 response    angular      ospan_split high-memory - low-memory\n9652  1007 response    angular      ospan_split high-memory - low-memory\n9653  1008 response    angular      ospan_split high-memory - low-memory\n9654  1009 response    angular      ospan_split high-memory - low-memory\n9655  1010 response    angular      ospan_split high-memory - low-memory\n9656  1011 response    angular      ospan_split high-memory - low-memory\n9657  1012 response    angular      ospan_split high-memory - low-memory\n9658  1013 response    angular      ospan_split high-memory - low-memory\n9659  1014 response    angular      ospan_split high-memory - low-memory\n9660  1015 response    angular      ospan_split high-memory - low-memory\n9661  1016 response    angular      ospan_split high-memory - low-memory\n9662  1017 response    angular      ospan_split high-memory - low-memory\n9663  1018 response    angular      ospan_split high-memory - low-memory\n9664  1019 response    angular      ospan_split high-memory - low-memory\n9665  1020 response    angular      ospan_split high-memory - low-memory\n9666  1021 response    angular      ospan_split high-memory - low-memory\n9667  1022 response    angular      ospan_split high-memory - low-memory\n9668  1023 response    angular      ospan_split high-memory - low-memory\n9669  1024 response    angular      ospan_split high-memory - low-memory\n9670  1025 response    angular      ospan_split high-memory - low-memory\n9671  1026 response    angular      ospan_split high-memory - low-memory\n9672  1027 response    angular      ospan_split high-memory - low-memory\n9673  1028 response    angular      ospan_split high-memory - low-memory\n9674  1029 response    angular      ospan_split high-memory - low-memory\n9675  1030 response    angular      ospan_split high-memory - low-memory\n9676  1031 response    angular      ospan_split high-memory - low-memory\n9677  1032 response    angular      ospan_split high-memory - low-memory\n9678  1033 response    angular      ospan_split high-memory - low-memory\n9679  1034 response    angular      ospan_split high-memory - low-memory\n9680  1035 response    angular      ospan_split high-memory - low-memory\n9681  1036 response    angular      ospan_split high-memory - low-memory\n9682  1037 response    angular      ospan_split high-memory - low-memory\n9683  1038 response    angular      ospan_split high-memory - low-memory\n9684  1039 response    angular      ospan_split high-memory - low-memory\n9685  1040 response    angular      ospan_split high-memory - low-memory\n9686  1041 response    angular      ospan_split high-memory - low-memory\n9687  1042 response    angular      ospan_split high-memory - low-memory\n9688  1043 response    angular      ospan_split high-memory - low-memory\n9689  1044 response    angular      ospan_split high-memory - low-memory\n9690  1045 response    angular      ospan_split high-memory - low-memory\n9691  1046 response    angular      ospan_split high-memory - low-memory\n9692  1047 response    angular      ospan_split high-memory - low-memory\n9693  1048 response    angular      ospan_split high-memory - low-memory\n9694  1049 response    angular      ospan_split high-memory - low-memory\n9695  1050 response    angular      ospan_split high-memory - low-memory\n9696  1051 response    angular      ospan_split high-memory - low-memory\n9697  1052 response    angular      ospan_split high-memory - low-memory\n9698  1053 response    angular      ospan_split high-memory - low-memory\n9699  1054 response    angular      ospan_split high-memory - low-memory\n9700  1055 response    angular      ospan_split high-memory - low-memory\n9701  1056 response    angular      ospan_split high-memory - low-memory\n9702  1057 response    angular      ospan_split high-memory - low-memory\n9703  1058 response    angular      ospan_split high-memory - low-memory\n9704  1059 response    angular      ospan_split high-memory - low-memory\n9705  1060 response    angular      ospan_split high-memory - low-memory\n9706  1061 response    angular      ospan_split high-memory - low-memory\n9707  1062 response    angular      ospan_split high-memory - low-memory\n9708  1063 response    angular      ospan_split high-memory - low-memory\n9709  1064 response    angular      ospan_split high-memory - low-memory\n9710  1065 response    angular      ospan_split high-memory - low-memory\n9711  1066 response    angular      ospan_split high-memory - low-memory\n9712  1067 response    angular      ospan_split high-memory - low-memory\n9713  1068 response    angular      ospan_split high-memory - low-memory\n9714  1069 response    angular      ospan_split high-memory - low-memory\n9715  1070 response    angular      ospan_split high-memory - low-memory\n9716  1071 response    angular      ospan_split high-memory - low-memory\n9717  1072 response    angular      ospan_split high-memory - low-memory\n9718  1073 response    angular      ospan_split high-memory - low-memory\n9719  1074 response    angular      ospan_split high-memory - low-memory\n9720  1075 response    angular      ospan_split high-memory - low-memory\n9721  1076 response    angular      ospan_split high-memory - low-memory\n9722  1077 response    angular      ospan_split high-memory - low-memory\n9723  1078 response    angular      ospan_split high-memory - low-memory\n9724  1079 response    angular      ospan_split high-memory - low-memory\n9725  1080 response    angular      ospan_split high-memory - low-memory\n9726  1081 response    angular      ospan_split high-memory - low-memory\n9727  1082 response    angular      ospan_split high-memory - low-memory\n9728  1083 response    angular      ospan_split high-memory - low-memory\n9729  1084 response    angular      ospan_split high-memory - low-memory\n9730  1085 response    angular      ospan_split high-memory - low-memory\n9731  1086 response    angular      ospan_split high-memory - low-memory\n9732  1087 response    angular      ospan_split high-memory - low-memory\n9733  1088 response    angular      ospan_split high-memory - low-memory\n9734  1089 response    angular      ospan_split high-memory - low-memory\n9735  1090 response    angular      ospan_split high-memory - low-memory\n9736  1091 response    angular      ospan_split high-memory - low-memory\n9737  1092 response    angular      ospan_split high-memory - low-memory\n9738  1093 response    angular      ospan_split high-memory - low-memory\n9739  1094 response    angular      ospan_split high-memory - low-memory\n9740  1095 response    angular      ospan_split high-memory - low-memory\n9741  1096 response    angular      ospan_split high-memory - low-memory\n9742  1097 response    angular      ospan_split high-memory - low-memory\n9743  1098 response    angular      ospan_split high-memory - low-memory\n9744  1099 response    angular      ospan_split high-memory - low-memory\n9745  1100 response    angular      ospan_split high-memory - low-memory\n9746  1101 response    angular      ospan_split high-memory - low-memory\n9747  1102 response    angular      ospan_split high-memory - low-memory\n9748  1103 response    angular      ospan_split high-memory - low-memory\n9749  1104 response    angular      ospan_split high-memory - low-memory\n9750  1105 response    angular      ospan_split high-memory - low-memory\n9751  1106 response    angular      ospan_split high-memory - low-memory\n9752  1107 response    angular      ospan_split high-memory - low-memory\n9753  1108 response    angular      ospan_split high-memory - low-memory\n9754  1109 response    angular      ospan_split high-memory - low-memory\n9755  1110 response    angular      ospan_split high-memory - low-memory\n9756  1111 response    angular      ospan_split high-memory - low-memory\n9757  1112 response    angular      ospan_split high-memory - low-memory\n9758  1113 response    angular      ospan_split high-memory - low-memory\n9759  1114 response    angular      ospan_split high-memory - low-memory\n9760  1115 response    angular      ospan_split high-memory - low-memory\n9761  1116 response    angular      ospan_split high-memory - low-memory\n9762  1117 response    angular      ospan_split high-memory - low-memory\n9763  1118 response    angular      ospan_split high-memory - low-memory\n9764  1119 response    angular      ospan_split high-memory - low-memory\n9765  1120 response    angular      ospan_split high-memory - low-memory\n9766  1121 response    angular      ospan_split high-memory - low-memory\n9767  1122 response    angular      ospan_split high-memory - low-memory\n9768  1123 response    angular      ospan_split high-memory - low-memory\n9769  1124 response    angular      ospan_split high-memory - low-memory\n9770  1125 response    angular      ospan_split high-memory - low-memory\n9771  1126 response    angular      ospan_split high-memory - low-memory\n9772  1127 response    angular      ospan_split high-memory - low-memory\n9773  1128 response    angular      ospan_split high-memory - low-memory\n9774  1129 response    angular      ospan_split high-memory - low-memory\n9775  1130 response    angular      ospan_split high-memory - low-memory\n9776  1131 response    angular      ospan_split high-memory - low-memory\n9777  1132 response    angular      ospan_split high-memory - low-memory\n9778  1133 response    angular      ospan_split high-memory - low-memory\n9779  1134 response    angular      ospan_split high-memory - low-memory\n9780  1135 response    angular      ospan_split high-memory - low-memory\n9781  1136 response    angular      ospan_split high-memory - low-memory\n9782  1137 response    angular      ospan_split high-memory - low-memory\n9783  1138 response    angular      ospan_split high-memory - low-memory\n9784  1139 response    angular      ospan_split high-memory - low-memory\n9785  1140 response    angular      ospan_split high-memory - low-memory\n9786  1141 response    angular      ospan_split high-memory - low-memory\n9787  1142 response    angular      ospan_split high-memory - low-memory\n9788  1143 response    angular      ospan_split high-memory - low-memory\n9789  1144 response    angular      ospan_split high-memory - low-memory\n9790  1145 response    angular      ospan_split high-memory - low-memory\n9791  1146 response    angular      ospan_split high-memory - low-memory\n9792  1147 response    angular      ospan_split high-memory - low-memory\n9793  1148 response    angular      ospan_split high-memory - low-memory\n9794  1149 response    angular      ospan_split high-memory - low-memory\n9795  1150 response    angular      ospan_split high-memory - low-memory\n9796  1151 response    angular      ospan_split high-memory - low-memory\n9797  1152 response    angular      ospan_split high-memory - low-memory\n9798  1153 response    angular      ospan_split high-memory - low-memory\n9799  1154 response    angular      ospan_split high-memory - low-memory\n9800  1155 response    angular      ospan_split high-memory - low-memory\n9801  1156 response    angular      ospan_split high-memory - low-memory\n9802  1157 response    angular      ospan_split high-memory - low-memory\n9803  1158 response    angular      ospan_split high-memory - low-memory\n9804  1159 response    angular      ospan_split high-memory - low-memory\n9805  1160 response    angular      ospan_split high-memory - low-memory\n9806  1161 response    angular      ospan_split high-memory - low-memory\n9807  1162 response    angular      ospan_split high-memory - low-memory\n9808  1163 response    angular      ospan_split high-memory - low-memory\n9809  1164 response    angular      ospan_split high-memory - low-memory\n9810  1165 response    angular      ospan_split high-memory - low-memory\n9811  1166 response    angular      ospan_split high-memory - low-memory\n9812  1167 response    angular      ospan_split high-memory - low-memory\n9813  1168 response    angular      ospan_split high-memory - low-memory\n9814  1169 response    angular      ospan_split high-memory - low-memory\n9815  1170 response    angular      ospan_split high-memory - low-memory\n9816  1171 response    angular      ospan_split high-memory - low-memory\n9817  1172 response    angular      ospan_split high-memory - low-memory\n9818  1173 response    angular      ospan_split high-memory - low-memory\n9819  1174 response    angular      ospan_split high-memory - low-memory\n9820  1175 response    angular      ospan_split high-memory - low-memory\n9821  1176 response    angular      ospan_split high-memory - low-memory\n9822  1177 response    angular      ospan_split high-memory - low-memory\n9823  1178 response    angular      ospan_split high-memory - low-memory\n9824  1179 response    angular      ospan_split high-memory - low-memory\n9825  1180 response    angular      ospan_split high-memory - low-memory\n9826  1181 response    angular      ospan_split high-memory - low-memory\n9827  1182 response    angular      ospan_split high-memory - low-memory\n9828  1183 response    angular      ospan_split high-memory - low-memory\n9829  1184 response    angular      ospan_split high-memory - low-memory\n9830  1185 response    angular      ospan_split high-memory - low-memory\n9831  1186 response    angular      ospan_split high-memory - low-memory\n9832  1187 response    angular      ospan_split high-memory - low-memory\n9833  1188 response    angular      ospan_split high-memory - low-memory\n9834  1189 response    angular      ospan_split high-memory - low-memory\n9835  1190 response    angular      ospan_split high-memory - low-memory\n9836  1191 response    angular      ospan_split high-memory - low-memory\n9837  1192 response    angular      ospan_split high-memory - low-memory\n9838  1193 response    angular      ospan_split high-memory - low-memory\n9839  1194 response    angular      ospan_split high-memory - low-memory\n9840  1195 response    angular      ospan_split high-memory - low-memory\n9841  1196 response    angular      ospan_split high-memory - low-memory\n9842  1197 response    angular      ospan_split high-memory - low-memory\n9843  1198 response    angular      ospan_split high-memory - low-memory\n9844  1199 response    angular      ospan_split high-memory - low-memory\n9845  1200 response    angular      ospan_split high-memory - low-memory\n9846  1201 response    angular      ospan_split high-memory - low-memory\n9847  1202 response    angular      ospan_split high-memory - low-memory\n9848  1203 response    angular      ospan_split high-memory - low-memory\n9849  1204 response    angular      ospan_split high-memory - low-memory\n9850  1205 response    angular      ospan_split high-memory - low-memory\n9851  1206 response    angular      ospan_split high-memory - low-memory\n9852  1207 response    angular      ospan_split high-memory - low-memory\n9853  1208 response    angular      ospan_split high-memory - low-memory\n9854  1209 response    angular      ospan_split high-memory - low-memory\n9855  1210 response    angular      ospan_split high-memory - low-memory\n9856  1211 response    angular      ospan_split high-memory - low-memory\n9857  1212 response    angular      ospan_split high-memory - low-memory\n9858  1213 response    angular      ospan_split high-memory - low-memory\n9859  1214 response    angular      ospan_split high-memory - low-memory\n9860  1215 response    angular      ospan_split high-memory - low-memory\n9861  1216 response    angular      ospan_split high-memory - low-memory\n9862  1217 response    angular      ospan_split high-memory - low-memory\n9863  1218 response    angular      ospan_split high-memory - low-memory\n9864  1219 response    angular      ospan_split high-memory - low-memory\n9865  1220 response    angular      ospan_split high-memory - low-memory\n9866  1221 response    angular      ospan_split high-memory - low-memory\n9867  1222 response    angular      ospan_split high-memory - low-memory\n9868  1223 response    angular      ospan_split high-memory - low-memory\n9869  1224 response    angular      ospan_split high-memory - low-memory\n9870  1225 response    angular      ospan_split high-memory - low-memory\n9871  1226 response    angular      ospan_split high-memory - low-memory\n9872  1227 response    angular      ospan_split high-memory - low-memory\n9873  1228 response    angular      ospan_split high-memory - low-memory\n9874  1229 response    angular      ospan_split high-memory - low-memory\n9875  1230 response    angular      ospan_split high-memory - low-memory\n9876  1231 response    angular      ospan_split high-memory - low-memory\n9877  1232 response    angular      ospan_split high-memory - low-memory\n9878  1233 response    angular      ospan_split high-memory - low-memory\n9879  1234 response    angular      ospan_split high-memory - low-memory\n9880  1235 response    angular      ospan_split high-memory - low-memory\n9881  1236 response    angular      ospan_split high-memory - low-memory\n9882  1237 response    angular      ospan_split high-memory - low-memory\n9883  1238 response    angular      ospan_split high-memory - low-memory\n9884  1239 response    angular      ospan_split high-memory - low-memory\n9885  1240 response    angular      ospan_split high-memory - low-memory\n9886  1241 response    angular      ospan_split high-memory - low-memory\n9887  1242 response    angular      ospan_split high-memory - low-memory\n9888  1243 response    angular      ospan_split high-memory - low-memory\n9889  1244 response    angular      ospan_split high-memory - low-memory\n9890  1245 response    angular      ospan_split high-memory - low-memory\n9891  1246 response    angular      ospan_split high-memory - low-memory\n9892  1247 response    angular      ospan_split high-memory - low-memory\n9893  1248 response    angular      ospan_split high-memory - low-memory\n9894  1249 response    angular      ospan_split high-memory - low-memory\n9895  1250 response    angular      ospan_split high-memory - low-memory\n9896  1251 response    angular      ospan_split high-memory - low-memory\n9897  1252 response    angular      ospan_split high-memory - low-memory\n9898  1253 response    angular      ospan_split high-memory - low-memory\n9899  1254 response    angular      ospan_split high-memory - low-memory\n9900  1255 response    angular      ospan_split high-memory - low-memory\n9901  1256 response    angular      ospan_split high-memory - low-memory\n9902  1257 response    angular      ospan_split high-memory - low-memory\n9903  1258 response    angular      ospan_split high-memory - low-memory\n9904  1259 response    angular      ospan_split high-memory - low-memory\n9905  1260 response    angular      ospan_split high-memory - low-memory\n9906  1261 response    angular      ospan_split high-memory - low-memory\n9907  1262 response    angular      ospan_split high-memory - low-memory\n9908  1263 response    angular      ospan_split high-memory - low-memory\n9909  1264 response    angular      ospan_split high-memory - low-memory\n9910  1265 response    angular      ospan_split high-memory - low-memory\n9911  1266 response    angular      ospan_split high-memory - low-memory\n9912  1267 response    angular      ospan_split high-memory - low-memory\n9913  1268 response    angular      ospan_split high-memory - low-memory\n9914  1269 response    angular      ospan_split high-memory - low-memory\n9915  1270 response    angular      ospan_split high-memory - low-memory\n9916  1271 response    angular      ospan_split high-memory - low-memory\n9917  1272 response    angular      ospan_split high-memory - low-memory\n9918  1273 response    angular      ospan_split high-memory - low-memory\n9919  1274 response    angular      ospan_split high-memory - low-memory\n9920  1275 response    angular      ospan_split high-memory - low-memory\n9921  1276 response    angular      ospan_split high-memory - low-memory\n9922  1277 response    angular      ospan_split high-memory - low-memory\n9923  1278 response    angular      ospan_split high-memory - low-memory\n9924  1279 response    angular      ospan_split high-memory - low-memory\n9925  1280 response    angular      ospan_split high-memory - low-memory\n9926  1281 response    angular      ospan_split high-memory - low-memory\n9927  1282 response    angular      ospan_split high-memory - low-memory\n9928  1283 response    angular      ospan_split high-memory - low-memory\n9929  1284 response    angular      ospan_split high-memory - low-memory\n9930  1285 response    angular      ospan_split high-memory - low-memory\n9931  1286 response    angular      ospan_split high-memory - low-memory\n9932  1287 response    angular      ospan_split high-memory - low-memory\n9933  1288 response    angular      ospan_split high-memory - low-memory\n9934  1289 response    angular      ospan_split high-memory - low-memory\n9935  1290 response    angular      ospan_split high-memory - low-memory\n9936  1291 response    angular      ospan_split high-memory - low-memory\n9937  1292 response    angular      ospan_split high-memory - low-memory\n9938  1293 response    angular      ospan_split high-memory - low-memory\n9939  1294 response    angular      ospan_split high-memory - low-memory\n9940  1295 response    angular      ospan_split high-memory - low-memory\n9941  1296 response    angular      ospan_split high-memory - low-memory\n9942  1297 response    angular      ospan_split high-memory - low-memory\n9943  1298 response    angular      ospan_split high-memory - low-memory\n9944  1299 response    angular      ospan_split high-memory - low-memory\n9945  1300 response    angular      ospan_split high-memory - low-memory\n9946  1301 response    angular      ospan_split high-memory - low-memory\n9947  1302 response    angular      ospan_split high-memory - low-memory\n9948  1303 response    angular      ospan_split high-memory - low-memory\n9949  1304 response    angular      ospan_split high-memory - low-memory\n9950  1305 response    angular      ospan_split high-memory - low-memory\n9951  1306 response    angular      ospan_split high-memory - low-memory\n9952  1307 response    angular      ospan_split high-memory - low-memory\n9953  1308 response    angular      ospan_split high-memory - low-memory\n9954  1309 response    angular      ospan_split high-memory - low-memory\n9955  1310 response    angular      ospan_split high-memory - low-memory\n9956  1311 response    angular      ospan_split high-memory - low-memory\n9957  1312 response    angular      ospan_split high-memory - low-memory\n9958  1313 response    angular      ospan_split high-memory - low-memory\n9959  1314 response    angular      ospan_split high-memory - low-memory\n9960  1315 response    angular      ospan_split high-memory - low-memory\n9961  1316 response    angular      ospan_split high-memory - low-memory\n9962  1317 response    angular      ospan_split high-memory - low-memory\n9963  1318 response    angular      ospan_split high-memory - low-memory\n9964  1319 response    angular      ospan_split high-memory - low-memory\n9965  1320 response    angular      ospan_split high-memory - low-memory\n9966  1321 response    angular      ospan_split high-memory - low-memory\n9967  1322 response    angular      ospan_split high-memory - low-memory\n9968  1323 response    angular      ospan_split high-memory - low-memory\n9969  1324 response    angular      ospan_split high-memory - low-memory\n9970  1325 response    angular      ospan_split high-memory - low-memory\n9971  1326 response    angular      ospan_split high-memory - low-memory\n9972  1327 response    angular      ospan_split high-memory - low-memory\n9973  1328 response    angular      ospan_split high-memory - low-memory\n9974  1329 response    angular      ospan_split high-memory - low-memory\n9975  1330 response    angular      ospan_split high-memory - low-memory\n9976  1331 response    angular      ospan_split high-memory - low-memory\n9977  1332 response    angular      ospan_split high-memory - low-memory\n9978  1333 response    angular      ospan_split high-memory - low-memory\n9979  1334 response    angular      ospan_split high-memory - low-memory\n9980  1335 response    angular      ospan_split high-memory - low-memory\n9981  1336 response    angular      ospan_split high-memory - low-memory\n9982  1337 response    angular      ospan_split high-memory - low-memory\n9983  1338 response    angular      ospan_split high-memory - low-memory\n9984  1339 response    angular      ospan_split high-memory - low-memory\n9985  1340 response    angular      ospan_split high-memory - low-memory\n9986  1341 response    angular      ospan_split high-memory - low-memory\n9987  1342 response    angular      ospan_split high-memory - low-memory\n9988  1343 response    angular      ospan_split high-memory - low-memory\n9989  1344 response    angular      ospan_split high-memory - low-memory\n9990  1345 response    angular      ospan_split high-memory - low-memory\n9991  1346 response    angular      ospan_split high-memory - low-memory\n9992  1347 response    angular      ospan_split high-memory - low-memory\n9993  1348 response    angular      ospan_split high-memory - low-memory\n9994  1349 response    angular      ospan_split high-memory - low-memory\n9995  1350 response    angular      ospan_split high-memory - low-memory\n9996  1351 response    angular      ospan_split high-memory - low-memory\n9997  1352 response    angular      ospan_split high-memory - low-memory\n9998  1353 response    angular      ospan_split high-memory - low-memory\n9999  1354 response    angular      ospan_split high-memory - low-memory\n          dydx  conf.low conf.high predicted_lo predicted_hi\n1    -3.89e-01 -8.41e-01 -6.05e-04     4.04e-01     5.44e-03\n2    -1.40e-01 -7.93e-01 -1.19e-04     1.42e-01     1.08e-03\n3    -1.03e-01 -6.63e-01 -1.03e-04     1.04e-01     8.70e-04\n4    -1.20e-01 -7.48e-01 -9.42e-05     1.22e-01     9.07e-04\n5    -5.79e-03 -2.86e-01 -4.18e-06     5.88e-03     3.82e-05\n6    -2.14e-01 -9.09e-01 -1.86e-04     2.18e-01     1.65e-03\n7    -4.69e-01 -8.32e-01 -1.21e-03     4.96e-01     1.04e-02\n8    -1.12e-01 -7.81e-01 -8.72e-05     1.14e-01     8.48e-04\n9    -1.45e-01 -8.93e-01 -1.25e-04     1.47e-01     1.08e-03\n10   -2.22e-01 -8.95e-01 -2.04e-04     2.27e-01     1.86e-03\n11   -1.90e-01 -8.24e-01 -1.79e-04     1.93e-01     1.55e-03\n12   -7.67e-02 -8.03e-01 -5.35e-05     7.74e-02     4.91e-04\n13   -8.58e-02 -7.97e-01 -6.05e-05     8.78e-02     5.93e-04\n14   -3.88e-01 -8.40e-01 -7.31e-04     4.00e-01     5.41e-03\n15   -1.35e-01 -7.93e-01 -1.32e-04     1.37e-01     1.12e-03\n16   -9.75e-02 -6.67e-01 -9.80e-05     1.00e-01     8.66e-04\n17   -1.14e-01 -7.45e-01 -1.23e-04     1.16e-01     8.92e-04\n18   -5.63e-03 -2.87e-01 -4.40e-06     5.70e-03     3.70e-05\n19   -2.08e-01 -9.02e-01 -2.03e-04     2.11e-01     1.69e-03\n20   -4.60e-01 -8.24e-01 -1.16e-03     4.84e-01     9.98e-03\n21   -1.08e-01 -7.80e-01 -9.31e-05     1.09e-01     8.41e-04\n22   -1.39e-01 -8.87e-01 -1.36e-04     1.41e-01     1.08e-03\n23   -2.20e-01 -8.90e-01 -2.20e-04     2.23e-01     1.82e-03\n24   -1.83e-01 -8.22e-01 -1.79e-04     1.85e-01     1.53e-03\n25   -7.31e-02 -8.03e-01 -5.75e-05     7.39e-02     5.10e-04\n26   -8.29e-02 -7.98e-01 -6.81e-05     8.41e-02     6.00e-04\n27   -3.81e-01 -6.49e-01 -1.84e-01     8.20e-01     4.15e-01\n28   -4.15e-01 -7.36e-01 -2.10e-01     7.86e-01     3.36e-01\n29   -3.75e-01 -5.91e-01 -2.05e-01     5.66e-01     1.64e-01\n30   -4.01e-01 -6.38e-01 -2.35e-01     6.34e-01     1.98e-01\n31   -3.56e-01 -6.01e-01 -1.66e-01     4.62e-01     8.27e-02\n32   -1.72e-01 -8.67e-01 -3.32e-02     9.74e-01     7.93e-01\n33   -3.91e-01 -5.76e-01 -2.12e-01     7.68e-01     3.52e-01\n34   -4.23e-01 -7.36e-01 -2.26e-01     7.75e-01     3.18e-01\n35   -2.30e-01 -8.76e-01 -4.88e-02     9.62e-01     7.24e-01\n36   -2.41e-01 -8.49e-01 -5.89e-02     9.53e-01     7.01e-01\n37   -4.12e-01 -7.06e-01 -2.19e-01     7.72e-01     3.25e-01\n38   -4.16e-01 -8.15e-01 -1.59e-01     8.61e-01     4.19e-01\n39   -4.23e-01 -7.85e-01 -1.92e-01     8.26e-01     3.68e-01\n40   -3.24e-01 -4.66e-01 -1.68e-01     8.81e-01     5.46e-01\n41   -3.47e-01 -4.85e-01 -1.92e-01     8.60e-01     5.01e-01\n42   -4.01e-01 -5.22e-01 -2.54e-01     6.85e-01     2.63e-01\n43   -3.99e-01 -5.23e-01 -2.63e-01     7.34e-01     3.10e-01\n44   -3.89e-01 -5.26e-01 -2.10e-01     5.95e-01     1.90e-01\n45   -7.31e-02 -2.02e-01 -2.09e-02     9.84e-01     9.10e-01\n46   -3.62e-01 -4.94e-01 -2.08e-01     8.41e-01     4.64e-01\n47   -3.57e-01 -4.89e-01 -2.03e-01     8.50e-01     4.80e-01\n48   -1.03e-01 -2.58e-01 -3.23e-02     9.77e-01     8.73e-01\n49   -1.25e-01 -2.80e-01 -4.32e-02     9.72e-01     8.45e-01\n50   -3.61e-01 -4.98e-01 -2.03e-01     8.44e-01     4.68e-01\n51   -2.82e-01 -4.45e-01 -1.30e-01     9.11e-01     6.22e-01\n52   -3.19e-01 -4.70e-01 -1.58e-01     8.86e-01     5.56e-01\n53   -3.95e-01 -5.23e-01 -2.09e-01     6.39e-01     2.24e-01\n54   -3.78e-01 -5.40e-01 -1.38e-01     5.45e-01     1.53e-01\n55   -2.49e-01 -4.56e-01 -7.27e-02     3.21e-01     6.89e-02\n56   -2.92e-01 -4.93e-01 -9.05e-02     3.85e-01     9.00e-02\n57   -1.13e-01 -3.66e-01 -8.30e-03     1.31e-01     1.70e-02\n58   -3.91e-01 -6.32e-01 -1.17e-01     8.67e-01     4.34e-01\n59   -3.78e-01 -5.14e-01 -1.86e-01     5.77e-01     1.83e-01\n60   -3.71e-01 -5.48e-01 -1.18e-01     5.19e-01     1.38e-01\n61   -4.33e-01 -6.60e-01 -1.06e-01     8.16e-01     3.35e-01\n62   -4.05e-01 -6.01e-01 -1.46e-01     8.30e-01     3.91e-01\n63   -3.76e-01 -5.35e-01 -1.48e-01     5.47e-01     1.59e-01\n64   -4.15e-01 -6.19e-01 -8.48e-02     5.90e-01     1.56e-01\n65   -3.99e-01 -5.88e-01 -9.59e-02     5.62e-01     1.51e-01\n66   -3.71e-01 -5.15e-01 -1.94e-01     6.20e-01     2.29e-01\n67   -3.59e-01 -5.09e-01 -1.73e-01     5.72e-01     1.97e-01\n68   -2.34e-01 -4.33e-01 -7.41e-02     3.20e-01     8.03e-02\n69   -2.83e-01 -4.73e-01 -1.01e-01     3.90e-01     9.98e-02\n70   -1.97e-01 -4.06e-01 -6.16e-02     2.56e-01     5.52e-02\n71   -2.16e-01 -4.21e-01 -7.71e-02     9.36e-01     7.14e-01\n72   -3.54e-01 -5.10e-01 -1.67e-01     5.42e-01     1.75e-01\n73   -3.58e-01 -5.08e-01 -1.72e-01     5.58e-01     1.85e-01\n74   -2.72e-01 -4.71e-01 -1.09e-01     9.12e-01     6.33e-01\n75   -3.01e-01 -4.75e-01 -1.31e-01     8.87e-01     5.75e-01\n76   -3.61e-01 -5.17e-01 -1.68e-01     5.56e-01     1.79e-01\n77   -3.89e-01 -5.33e-01 -2.24e-01     7.09e-01     2.94e-01\n78   -3.83e-01 -5.23e-01 -2.10e-01     6.45e-01     2.39e-01\n79   -3.54e-01 -4.83e-01 -2.03e-01     8.52e-01     4.86e-01\n80   -3.70e-01 -4.98e-01 -2.20e-01     8.28e-01     4.41e-01\n81   -3.95e-01 -5.19e-01 -2.36e-01     6.35e-01     2.23e-01\n82   -4.00e-01 -5.25e-01 -2.56e-01     6.81e-01     2.58e-01\n83   -3.68e-01 -5.15e-01 -1.83e-01     5.36e-01     1.57e-01\n84   -8.97e-02 -2.29e-01 -2.75e-02     9.81e-01     8.89e-01\n85   -3.83e-01 -5.05e-01 -2.44e-01     8.03e-01     4.02e-01\n86   -3.77e-01 -5.00e-01 -2.35e-01     8.15e-01     4.20e-01\n87   -1.28e-01 -3.01e-01 -4.06e-02     9.71e-01     8.41e-01\n88   -1.50e-01 -3.14e-01 -5.42e-02     9.64e-01     8.12e-01\n89   -3.83e-01 -5.10e-01 -2.36e-01     8.06e-01     4.03e-01\n90   -3.17e-01 -4.64e-01 -1.60e-01     8.87e-01     5.60e-01\n91   -3.50e-01 -4.86e-01 -1.98e-01     8.58e-01     4.93e-01\n92   -7.27e-02 -6.25e-01 -2.54e-05     8.83e-02     9.07e-03\n93   -1.58e-02 -4.30e-01 -4.79e-06     1.86e-02     1.78e-03\n94   -1.28e-02 -3.32e-01 -4.27e-06     1.49e-02     1.44e-03\n95   -1.31e-02 -3.70e-01 -5.08e-06     1.57e-02     1.51e-03\n96   -5.48e-04 -3.28e-02 -1.78e-07     6.54e-04     6.32e-05\n97   -2.46e-02 -5.63e-01 -7.89e-06     3.01e-02     2.87e-03\n98   -1.21e-01 -6.24e-01 -6.38e-05     1.47e-01     1.57e-02\n99   -1.21e-02 -3.82e-01 -3.33e-06     1.42e-02     1.36e-03\n100  -1.58e-02 -4.65e-01 -4.85e-06     1.88e-02     1.79e-03\n101  -2.71e-02 -5.64e-01 -8.70e-06     3.17e-02     3.05e-03\n102  -2.22e-02 -4.93e-01 -7.91e-06     2.67e-02     2.54e-03\n103  -7.38e-03 -3.08e-01 -2.05e-06     8.85e-03     8.52e-04\n104  -8.88e-03 -3.37e-01 -2.83e-06     1.06e-02     1.01e-03\n105  -3.68e-01 -4.94e-01 -2.22e-01     8.34e-01     4.47e-01\n106  -3.89e-01 -5.11e-01 -2.44e-01     7.98e-01     3.90e-01\n107  -3.87e-01 -5.20e-01 -2.16e-01     5.97e-01     1.94e-01\n108  -3.99e-01 -5.28e-01 -2.34e-01     6.41e-01     2.25e-01\n109  -3.23e-01 -5.20e-01 -8.61e-02     4.28e-01     9.78e-02\n110  -1.39e-01 -3.41e-01 -4.36e-02     9.70e-01     8.26e-01\n111  -3.92e-01 -5.11e-01 -2.56e-01     7.83e-01     3.68e-01\n112  -3.95e-01 -5.19e-01 -2.52e-01     7.83e-01     3.65e-01\n113  -1.93e-01 -4.18e-01 -6.39e-02     9.56e-01     7.55e-01\n114  -1.98e-01 -3.90e-01 -7.43e-02     9.51e-01     7.48e-01\n115  -3.94e-01 -5.19e-01 -2.50e-01     7.78e-01     3.60e-01\n116  -3.66e-01 -5.24e-01 -1.90e-01     8.52e-01     4.69e-01\n117  -3.82e-01 -5.21e-01 -2.22e-01     8.22e-01     4.19e-01\n118  -3.91e-01 -6.25e-01 -2.05e-01     7.78e-01     3.63e-01\n119  -4.10e-01 -6.87e-01 -2.29e-01     7.22e-01     2.77e-01\n120  -3.27e-01 -5.27e-01 -1.37e-01     4.65e-01     1.21e-01\n121  -3.94e-01 -6.18e-01 -2.29e-01     6.11e-01     1.87e-01\n122  -3.18e-01 -5.52e-01 -1.37e-01     4.01e-01     6.95e-02\n123  -2.02e-01 -8.59e-01 -4.28e-02     9.64e-01     7.53e-01\n124  -3.93e-01 -5.64e-01 -2.31e-01     7.36e-01     3.18e-01\n125  -4.17e-01 -7.01e-01 -2.36e-01     7.25e-01     2.71e-01\n126  -2.45e-01 -8.72e-01 -5.54e-02     9.57e-01     7.00e-01\n127  -2.61e-01 -8.44e-01 -7.12e-02     9.43e-01     6.70e-01\n128  -4.14e-01 -6.92e-01 -2.22e-01     7.60e-01     3.12e-01\n129  -4.18e-01 -8.02e-01 -1.76e-01     8.49e-01     3.97e-01\n130  -4.25e-01 -7.73e-01 -2.06e-01     8.05e-01     3.41e-01\n131  -3.93e-01 -8.38e-01 -6.33e-04     4.07e-01     5.66e-03\n132  -1.36e-01 -7.94e-01 -1.09e-04     1.39e-01     1.10e-03\n133  -9.69e-02 -6.56e-01 -8.84e-05     9.95e-02     8.73e-04\n134  -1.14e-01 -7.41e-01 -9.70e-05     1.17e-01     9.07e-04\n135  -5.92e-03 -2.79e-01 -3.55e-06     5.99e-03     3.77e-05\n136  -2.08e-01 -9.05e-01 -1.67e-04     2.12e-01     1.76e-03\n137  -4.70e-01 -8.29e-01 -1.00e-03     4.99e-01     1.01e-02\n138  -1.09e-01 -7.79e-01 -9.22e-05     1.11e-01     8.54e-04\n139  -1.43e-01 -8.94e-01 -9.81e-05     1.46e-01     1.13e-03\n140  -2.19e-01 -8.97e-01 -2.04e-04     2.22e-01     1.88e-03\n141  -1.88e-01 -8.20e-01 -1.73e-04     1.91e-01     1.55e-03\n142  -7.43e-02 -7.99e-01 -5.32e-05     7.54e-02     5.10e-04\n143  -8.44e-02 -7.99e-01 -5.98e-05     8.55e-02     5.90e-04\n144  -2.32e-01 -5.58e-01 -4.08e-02     2.37e-01     2.13e-03\n145  -6.56e-02 -2.53e-01 -8.95e-03     6.63e-02     4.18e-04\n146  -4.70e-02 -1.87e-01 -6.76e-03     4.77e-02     3.30e-04\n147  -5.56e-02 -2.21e-01 -7.07e-03     5.64e-02     3.51e-04\n148  -2.60e-03 -1.48e-02 -2.77e-04     2.62e-03     1.43e-05\n149  -1.05e-01 -3.91e-01 -1.38e-02     1.06e-01     6.61e-04\n150  -3.18e-01 -6.33e-01 -6.84e-02     3.29e-01     3.98e-03\n151  -5.18e-02 -2.22e-01 -6.67e-03     5.24e-02     3.16e-04\n152  -7.00e-02 -2.93e-01 -8.29e-03     7.12e-02     4.12e-04\n153  -1.12e-01 -4.06e-01 -1.49e-02     1.14e-01     7.08e-04\n154  -9.26e-02 -3.30e-01 -1.24e-02     9.41e-02     5.93e-04\n155  -3.42e-02 -1.63e-01 -3.84e-03     3.47e-02     1.98e-04\n156  -3.92e-02 -1.76e-01 -4.69e-03     3.97e-02     2.28e-04\n157  -3.06e-01 -4.57e-01 -1.54e-01     8.93e-01     5.80e-01\n158  -3.45e-01 -4.86e-01 -1.83e-01     8.64e-01     5.06e-01\n159  -4.02e-01 -5.23e-01 -2.51e-01     7.03e-01     2.80e-01\n160  -3.98e-01 -5.22e-01 -2.58e-01     7.54e-01     3.32e-01\n161  -3.87e-01 -5.72e-01 -1.18e-01     5.45e-01     1.44e-01\n162  -9.79e-02 -2.78e-01 -2.77e-02     9.81e-01     8.78e-01\n163  -3.46e-01 -4.84e-01 -1.89e-01     8.60e-01     5.01e-01\n164  -3.56e-01 -4.96e-01 -1.97e-01     8.54e-01     4.81e-01\n165  -1.36e-01 -3.55e-01 -3.95e-02     9.72e-01     8.29e-01\n166  -1.40e-01 -3.15e-01 -4.62e-02     9.69e-01     8.26e-01\n167  -3.52e-01 -4.91e-01 -1.89e-01     8.55e-01     4.91e-01\n168  -3.07e-01 -4.95e-01 -1.31e-01     9.04e-01     5.85e-01\n169  -3.29e-01 -4.93e-01 -1.61e-01     8.84e-01     5.42e-01\n170  -5.67e-01 -8.12e-01 -1.27e-01     6.58e-01     5.81e-02\n171  -4.16e-01 -7.94e-01 -3.67e-02     4.36e-01     1.32e-02\n172  -2.31e-01 -6.45e-01 -2.08e-02     2.45e-01     9.51e-03\n173  -4.40e-01 -7.95e-01 -3.48e-02     4.54e-01     1.10e-02\n174  -6.18e-02 -4.50e-01 -1.59e-03     6.24e-02     4.81e-04\n175  -7.02e-01 -9.19e-01 -6.68e-02     7.43e-01     2.15e-02\n176  -5.49e-01 -7.88e-01 -1.78e-01     6.88e-01     9.25e-02\n177  -4.20e-01 -8.06e-01 -3.16e-02     4.36e-01     1.02e-02\n178  -6.59e-01 -9.24e-01 -4.05e-02     6.80e-01     1.38e-02\n179  -6.99e-01 -9.09e-01 -7.40e-02     7.41e-01     2.25e-02\n180  -6.02e-01 -8.71e-01 -5.88e-02     6.32e-01     1.95e-02\n181  -4.70e-01 -8.79e-01 -2.15e-02     4.78e-01     6.53e-03\n182  -4.64e-01 -8.56e-01 -2.29e-02     4.76e-01     7.53e-03\n183  -3.94e-01 -6.43e-01 -3.88e-02     5.29e-01     1.15e-01\n184  -2.14e-01 -6.37e-01 -6.55e-03     2.54e-01     3.19e-02\n185  -1.54e-01 -5.16e-01 -6.71e-03     1.81e-01     2.28e-02\n186  -1.71e-01 -5.49e-01 -5.57e-03     2.00e-01     2.47e-02\n187  -1.20e-02 -1.67e-01 -2.01e-04     1.37e-02     1.21e-03\n188  -3.20e-01 -7.59e-01 -9.02e-03     3.90e-01     5.25e-02\n189  -3.93e-01 -6.02e-01 -6.74e-02     5.56e-01     1.42e-01\n190  -1.81e-01 -6.15e-01 -4.66e-03     2.13e-01     2.46e-02\n191  -2.40e-01 -7.41e-01 -5.34e-03     2.85e-01     3.41e-02\n192  -3.30e-01 -7.44e-01 -8.88e-03     4.02e-01     5.62e-02\n193  -2.55e-01 -6.34e-01 -9.63e-03     3.03e-01     4.26e-02\n194  -1.33e-01 -6.42e-01 -2.98e-03     1.54e-01     1.62e-02\n195  -1.50e-01 -6.27e-01 -3.44e-03     1.74e-01     1.84e-02\n196  -1.62e-01 -3.37e-01 -5.57e-02     9.53e-01     7.87e-01\n197  -1.97e-01 -3.79e-01 -7.05e-02     9.39e-01     7.37e-01\n198  -3.24e-01 -4.87e-01 -1.55e-01     8.37e-01     4.92e-01\n199  -2.85e-01 -4.58e-01 -1.19e-01     8.96e-01     6.01e-01\n200  -3.88e-01 -6.01e-01 -2.08e-01     8.07e-01     3.90e-01\n201  -2.99e-02 -1.13e-01 -7.08e-03     9.94e-01     9.63e-01\n202  -1.96e-01 -3.78e-01 -6.83e-02     9.39e-01     7.37e-01\n203  -2.04e-01 -3.85e-01 -7.51e-02     9.39e-01     7.30e-01\n204  -3.92e-02 -1.55e-01 -9.77e-03     9.93e-01     9.52e-01\n205  -4.80e-02 -1.50e-01 -1.26e-02     9.90e-01     9.41e-01\n206  -1.92e-01 -3.83e-01 -6.14e-02     9.46e-01     7.49e-01\n207  -1.31e-01 -3.24e-01 -4.08e-02     9.70e-01     8.36e-01\n208  -1.59e-01 -3.46e-01 -5.37e-02     9.60e-01     7.96e-01\n209  -3.53e-01 -4.89e-01 -2.03e-01     8.54e-01     4.87e-01\n210  -3.71e-01 -5.01e-01 -2.26e-01     8.30e-01     4.41e-01\n211  -3.95e-01 -5.17e-01 -2.38e-01     6.37e-01     2.21e-01\n212  -4.01e-01 -5.28e-01 -2.56e-01     6.80e-01     2.58e-01\n213  -3.70e-01 -5.16e-01 -1.80e-01     5.37e-01     1.55e-01\n214  -9.04e-02 -2.40e-01 -2.76e-02     9.80e-01     8.89e-01\n215  -3.84e-01 -5.12e-01 -2.41e-01     8.04e-01     4.00e-01\n216  -3.79e-01 -5.07e-01 -2.34e-01     8.16e-01     4.19e-01\n217  -1.27e-01 -2.99e-01 -4.08e-02     9.71e-01     8.42e-01\n218  -1.51e-01 -3.22e-01 -5.55e-02     9.64e-01     8.11e-01\n219  -3.82e-01 -5.15e-01 -2.38e-01     8.06e-01     4.05e-01\n220  -3.16e-01 -4.76e-01 -1.61e-01     8.89e-01     5.62e-01\n221  -3.50e-01 -4.94e-01 -1.93e-01     8.57e-01     4.94e-01\n222  -3.87e-01 -5.37e-01 -2.02e-01     8.16e-01     4.11e-01\n223  -4.04e-01 -5.52e-01 -2.37e-01     7.64e-01     3.34e-01\n224  -3.58e-01 -5.10e-01 -1.69e-01     5.14e-01     1.43e-01\n225  -4.01e-01 -5.29e-01 -2.59e-01     6.70e-01     2.43e-01\n226  -3.39e-01 -5.03e-01 -1.55e-01     4.61e-01     1.13e-01\n227  -1.36e-01 -4.49e-01 -3.33e-02     9.71e-01     8.32e-01\n228  -3.97e-01 -5.27e-01 -2.34e-01     7.82e-01     3.65e-01\n229  -4.05e-01 -5.53e-01 -2.45e-01     7.70e-01     3.39e-01\n230  -1.52e-01 -5.05e-01 -4.14e-02     9.66e-01     8.12e-01\n231  -1.93e-01 -4.83e-01 -5.87e-02     9.54e-01     7.58e-01\n232  -3.88e-01 -5.33e-01 -2.07e-01     8.07e-01     3.97e-01\n233  -3.44e-01 -5.72e-01 -1.45e-01     8.79e-01     5.26e-01\n234  -3.77e-01 -5.61e-01 -1.85e-01     8.41e-01     4.49e-01\n235  -3.48e-01 -4.84e-01 -1.94e-01     8.56e-01     4.94e-01\n236  -3.71e-01 -5.02e-01 -2.19e-01     8.21e-01     4.31e-01\n237  -3.88e-01 -5.22e-01 -2.05e-01     6.12e-01     2.05e-01\n238  -4.01e-01 -5.22e-01 -2.63e-01     7.13e-01     2.89e-01\n239  -3.69e-01 -5.18e-01 -1.92e-01     5.44e-01     1.62e-01\n240  -9.06e-02 -2.37e-01 -2.61e-02     9.80e-01     8.88e-01\n241  -3.76e-01 -5.01e-01 -2.28e-01     8.18e-01     4.26e-01\n242  -3.76e-01 -5.00e-01 -2.23e-01     8.19e-01     4.25e-01\n243  -1.14e-01 -2.84e-01 -3.63e-02     9.74e-01     8.59e-01\n244  -1.43e-01 -3.09e-01 -5.10e-02     9.66e-01     8.22e-01\n245  -3.69e-01 -5.02e-01 -2.12e-01     8.32e-01     4.45e-01\n246  -2.96e-01 -4.62e-01 -1.38e-01     9.02e-01     5.97e-01\n247  -3.37e-01 -4.80e-01 -1.77e-01     8.71e-01     5.25e-01\n248  -3.74e-01 -6.28e-01 -1.75e-01     8.21e-01     4.25e-01\n249  -4.06e-01 -7.10e-01 -2.09e-01     7.67e-01     3.20e-01\n250  -3.49e-01 -5.59e-01 -1.52e-01     5.16e-01     1.46e-01\n251  -4.12e-01 -6.66e-01 -2.48e-01     6.85e-01     2.37e-01\n252  -3.60e-01 -6.03e-01 -1.68e-01     4.65e-01     8.44e-02\n253  -1.77e-01 -8.65e-01 -3.15e-02     9.72e-01     7.86e-01\n254  -3.83e-01 -5.68e-01 -1.97e-01     7.91e-01     3.88e-01\n255  -4.16e-01 -7.32e-01 -2.15e-01     7.73e-01     3.20e-01\n256  -2.14e-01 -8.72e-01 -4.08e-02     9.68e-01     7.45e-01\n257  -2.28e-01 -8.47e-01 -5.30e-02     9.56e-01     7.19e-01\n258  -4.05e-01 -7.30e-01 -1.88e-01     8.19e-01     3.83e-01\n259  -3.98e-01 -8.28e-01 -1.36e-01     8.86e-01     4.62e-01\n260  -4.14e-01 -7.93e-01 -1.77e-01     8.48e-01     4.03e-01\n261  -5.62e-01 -7.94e-01 -3.36e-01     7.21e-01     1.18e-01\n262  -5.57e-01 -7.73e-01 -3.19e-01     6.23e-01     3.51e-02\n263  -3.75e-01 -6.27e-01 -1.70e-01     4.15e-01     2.48e-02\n264  -4.17e-01 -6.75e-01 -2.02e-01     4.63e-01     2.62e-02\n265  -1.37e-01 -3.69e-01 -3.60e-02     1.40e-01     1.35e-03\n266  -7.71e-01 -9.11e-01 -3.79e-01     8.78e-01     5.76e-02\n267  -4.86e-01 -7.43e-01 -2.88e-01     6.62e-01     1.37e-01\n268  -5.36e-01 -7.56e-01 -3.01e-01     5.91e-01     2.72e-02\n269  -7.36e-01 -8.92e-01 -4.23e-01     8.23e-01     3.78e-02\n270  -7.44e-01 -8.94e-01 -3.85e-01     8.52e-01     6.12e-02\n271  -5.42e-01 -7.66e-01 -3.04e-01     6.21e-01     4.51e-02\n272  -5.81e-01 -7.96e-01 -3.09e-01     6.24e-01     1.80e-02\n273  -5.62e-01 -7.73e-01 -3.01e-01     6.09e-01     2.07e-02\n274  -3.54e-01 -6.50e-01 -1.47e-01     8.60e-01     4.86e-01\n275  -4.00e-01 -7.61e-01 -1.79e-01     8.30e-01     3.99e-01\n276  -3.95e-01 -6.38e-01 -2.20e-01     6.31e-01     2.03e-01\n277  -4.14e-01 -6.93e-01 -2.38e-01     7.08e-01     2.53e-01\n278  -3.97e-01 -6.61e-01 -2.01e-01     5.35e-01     1.04e-01\n279  -1.44e-01 -8.70e-01 -2.42e-02     9.80e-01     8.30e-01\n280  -3.75e-01 -5.82e-01 -1.75e-01     8.20e-01     4.25e-01\n281  -4.10e-01 -7.72e-01 -1.90e-01     8.21e-01     3.78e-01\n282  -1.94e-01 -8.80e-01 -3.47e-02     9.72e-01     7.69e-01\n283  -2.02e-01 -8.53e-01 -4.35e-02     9.65e-01     7.55e-01\n284  -3.99e-01 -7.48e-01 -1.69e-01     8.26e-01     3.98e-01\n285  -3.87e-01 -8.36e-01 -1.19e-01     8.94e-01     4.83e-01\n286  -3.99e-01 -8.14e-01 -1.52e-01     8.67e-01     4.37e-01\n287  -3.96e-01 -5.29e-01 -2.19e-01     6.67e-01     2.48e-01\n288  -3.78e-01 -5.36e-01 -1.54e-01     5.71e-01     1.77e-01\n289  -2.26e-01 -4.48e-01 -5.74e-02     2.90e-01     6.11e-02\n290  -3.63e-01 -5.02e-01 -1.81e-01     5.29e-01     1.56e-01\n291  -2.27e-01 -4.34e-01 -7.02e-02     2.94e-01     6.23e-02\n292  -2.17e-01 -4.27e-01 -7.25e-02     9.40e-01     7.17e-01\n293  -3.94e-01 -5.19e-01 -2.29e-01     6.43e-01     2.27e-01\n294  -3.86e-01 -5.26e-01 -1.81e-01     5.99e-01     1.97e-01\n295  -2.11e-01 -4.05e-01 -7.57e-02     9.42e-01     7.27e-01\n296  -2.75e-01 -4.60e-01 -1.16e-01     9.13e-01     6.31e-01\n297  -3.99e-01 -5.22e-01 -2.51e-01     7.10e-01     2.85e-01\n298  -3.82e-01 -5.08e-01 -2.28e-01     8.04e-01     4.02e-01\n299  -3.97e-01 -5.18e-01 -2.52e-01     7.38e-01     3.15e-01\n300  -4.03e-01 -5.25e-01 -2.67e-01     7.13e-01     2.84e-01\n301  -4.05e-01 -5.28e-01 -2.68e-01     6.76e-01     2.48e-01\n302  -3.15e-01 -4.69e-01 -1.54e-01     4.31e-01     1.07e-01\n303  -3.35e-01 -4.85e-01 -1.73e-01     4.70e-01     1.26e-01\n304  -2.51e-01 -4.30e-01 -1.04e-01     3.24e-01     6.79e-02\n305  -1.89e-01 -4.75e-01 -5.85e-02     9.54e-01     7.62e-01\n306  -3.91e-01 -5.15e-01 -2.51e-01     6.34e-01     2.20e-01\n307  -4.00e-01 -5.27e-01 -2.62e-01     6.55e-01     2.30e-01\n308  -2.51e-01 -5.30e-01 -8.28e-02     9.32e-01     6.75e-01\n309  -2.79e-01 -5.14e-01 -1.00e-01     9.17e-01     6.33e-01\n310  -3.93e-01 -5.19e-01 -2.46e-01     6.35e-01     2.18e-01\n311  -4.04e-01 -5.54e-01 -2.42e-01     7.66e-01     3.39e-01\n312  -4.08e-01 -5.42e-01 -2.67e-01     7.16e-01     2.84e-01\n313  -3.60e-01 -5.15e-01 -1.73e-01     8.54e-01     4.83e-01\n314  -3.86e-01 -5.42e-01 -2.04e-01     8.25e-01     4.25e-01\n315  -3.95e-01 -5.25e-01 -2.38e-01     6.27e-01     2.08e-01\n316  -4.01e-01 -5.32e-01 -2.57e-01     6.94e-01     2.67e-01\n317  -3.66e-01 -5.22e-01 -1.80e-01     5.24e-01     1.42e-01\n318  -1.02e-01 -4.16e-01 -2.58e-02     9.79e-01     8.75e-01\n319  -3.85e-01 -5.19e-01 -2.07e-01     8.12e-01     4.10e-01\n320  -3.90e-01 -5.45e-01 -2.11e-01     8.16e-01     4.09e-01\n321  -1.37e-01 -4.95e-01 -3.50e-02     9.70e-01     8.32e-01\n322  -1.59e-01 -4.42e-01 -4.72e-02     9.63e-01     8.02e-01\n323  -3.82e-01 -5.33e-01 -1.95e-01     8.18e-01     4.15e-01\n324  -3.29e-01 -5.70e-01 -1.29e-01     8.89e-01     5.54e-01\n325  -3.60e-01 -5.61e-01 -1.67e-01     8.60e-01     4.88e-01\n326  -3.93e-01 -5.44e-01 -1.58e-01     6.00e-01     1.89e-01\n327  -3.40e-01 -5.77e-01 -5.50e-02     4.44e-01     9.52e-02\n328  -2.09e-01 -4.56e-01 -4.24e-02     2.63e-01     5.01e-02\n329  -2.61e-01 -5.10e-01 -4.84e-02     3.32e-01     6.38e-02\n330  -5.26e-02 -2.68e-01 -1.92e-03     6.00e-02     6.10e-03\n331  -4.70e-01 -7.25e-01 -6.15e-02     7.42e-01     2.18e-01\n332  -3.74e-01 -5.19e-01 -1.66e-01     5.64e-01     1.72e-01\n333  -3.25e-01 -5.82e-01 -4.73e-02     4.13e-01     8.17e-02\n334  -4.65e-01 -7.28e-01 -4.16e-02     6.54e-01     1.53e-01\n335  -4.62e-01 -6.96e-01 -6.96e-02     7.17e-01     2.13e-01\n336  -3.57e-01 -5.75e-01 -7.87e-02     4.81e-01     1.13e-01\n337  -3.44e-01 -6.54e-01 -2.52e-02     4.24e-01     7.22e-02\n338  -3.40e-01 -6.22e-01 -3.12e-02     4.22e-01     7.56e-02\n339  -3.89e-01 -5.10e-01 -2.52e-01     7.86e-01     3.78e-01\n340  -3.97e-01 -5.16e-01 -2.60e-01     7.45e-01     3.26e-01\n341  -3.52e-01 -5.02e-01 -1.64e-01     5.03e-01     1.42e-01\n342  -3.85e-01 -5.20e-01 -2.11e-01     5.95e-01     1.93e-01\n343  -3.13e-01 -4.88e-01 -1.30e-01     4.27e-01     1.07e-01\n344  -1.33e-01 -3.08e-01 -4.35e-02     9.68e-01     8.33e-01\n345  -4.00e-01 -5.18e-01 -2.65e-01     7.31e-01     3.08e-01\n346  -4.00e-01 -5.16e-01 -2.60e-01     7.36e-01     3.16e-01\n347  -1.70e-01 -3.62e-01 -5.78e-02     9.58e-01     7.84e-01\n348  -2.04e-01 -3.90e-01 -7.67e-02     9.45e-01     7.40e-01\n349  -3.97e-01 -5.22e-01 -2.56e-01     7.43e-01     3.21e-01\n350  -3.61e-01 -4.98e-01 -2.03e-01     8.43e-01     4.69e-01\n351  -3.84e-01 -5.09e-01 -2.39e-01     8.03e-01     3.99e-01\n352  -3.86e-01 -6.17e-01 -1.94e-01     7.65e-01     3.51e-01\n353  -3.96e-01 -6.69e-01 -2.01e-01     6.79e-01     2.44e-01\n354  -2.78e-01 -4.98e-01 -9.44e-02     3.93e-01     9.80e-02\n355  -4.08e-01 -6.64e-01 -2.45e-01     6.54e-01     2.12e-01\n356  -3.07e-01 -5.42e-01 -1.26e-01     3.86e-01     6.45e-02\n357  -2.19e-01 -8.58e-01 -4.39e-02     9.60e-01     7.29e-01\n358  -3.89e-01 -5.66e-01 -2.17e-01     7.47e-01     3.34e-01\n359  -4.11e-01 -6.97e-01 -2.18e-01     7.05e-01     2.55e-01\n360  -2.36e-01 -8.76e-01 -4.70e-02     9.62e-01     7.16e-01\n361  -2.65e-01 -8.42e-01 -6.99e-02     9.42e-01     6.64e-01\n362  -4.08e-01 -7.45e-01 -1.93e-01     8.05e-01     3.60e-01\n363  -4.11e-01 -8.20e-01 -1.53e-01     8.67e-01     4.23e-01\n364  -4.23e-01 -7.84e-01 -1.95e-01     8.20e-01     3.62e-01\n365  -4.37e-01 -6.70e-01 -4.44e-02     6.22e-01     1.54e-01\n366  -2.71e-01 -6.74e-01 -8.71e-03     3.24e-01     4.25e-02\n367  -1.99e-01 -5.64e-01 -7.78e-03     2.34e-01     3.10e-02\n368  -2.25e-01 -6.14e-01 -8.09e-03     2.63e-01     3.45e-02\n369  -1.64e-02 -1.88e-01 -2.62e-04     1.87e-02     1.67e-03\n370  -3.75e-01 -7.73e-01 -1.22e-02     4.63e-01     7.03e-02\n371  -4.28e-01 -6.29e-01 -8.86e-02     6.58e-01     1.96e-01\n372  -2.33e-01 -6.61e-01 -5.92e-03     2.74e-01     3.34e-02\n373  -2.99e-01 -7.63e-01 -6.83e-03     3.56e-01     4.56e-02\n374  -3.82e-01 -7.57e-01 -1.28e-02     4.78e-01     7.35e-02\n375  -3.21e-01 -6.80e-01 -1.33e-02     3.93e-01     5.83e-02\n376  -1.74e-01 -6.73e-01 -3.89e-03     2.00e-01     2.21e-02\n377  -1.91e-01 -6.66e-01 -4.12e-03     2.24e-01     2.54e-02\n378  -1.08e-01 -4.00e-01 -6.41e-03     1.29e-01     1.26e-02\n379  -2.54e-02 -1.52e-01 -1.04e-03     3.06e-02     2.57e-03\n380  -1.94e-02 -1.20e-01 -9.58e-04     2.28e-02     1.94e-03\n381  -2.14e-02 -1.37e-01 -8.43e-04     2.57e-02     2.16e-03\n382  -9.27e-04 -7.65e-03 -2.97e-05     1.13e-03     9.09e-05\n383  -3.95e-02 -2.37e-01 -1.35e-03     4.86e-02     4.10e-03\n384  -1.72e-01 -4.80e-01 -1.28e-02     2.10e-01     2.18e-02\n385  -1.97e-02 -1.34e-01 -7.42e-04     2.40e-02     1.97e-03\n386  -2.55e-02 -1.65e-01 -9.17e-04     3.14e-02     2.56e-03\n387  -4.25e-02 -2.43e-01 -1.46e-03     5.20e-02     4.42e-03\n388  -3.66e-02 -2.13e-01 -1.37e-03     4.39e-02     3.80e-03\n389  -1.24e-02 -8.53e-02 -4.05e-04     1.49e-02     1.22e-03\n390  -1.42e-02 -1.02e-01 -4.72e-04     1.73e-02     1.42e-03\n391  -2.19e-01 -3.92e-01 -8.79e-02     9.40e-01     7.17e-01\n392  -2.94e-01 -4.72e-01 -1.28e-01     9.11e-01     6.04e-01\n393  -3.90e-01 -5.26e-01 -2.21e-01     8.02e-01     3.87e-01\n394  -3.62e-01 -5.09e-01 -1.81e-01     8.53e-01     4.74e-01\n395  -4.20e-01 -6.57e-01 -5.96e-02     5.81e-01     1.36e-01\n396  -1.05e-01 -3.18e-01 -2.41e-02     9.83e-01     8.69e-01\n397  -2.51e-01 -4.24e-01 -1.03e-01     9.26e-01     6.70e-01\n398  -3.09e-01 -4.90e-01 -1.32e-01     9.05e-01     5.83e-01\n399  -1.43e-01 -4.01e-01 -3.26e-02     9.76e-01     8.21e-01\n400  -1.22e-01 -3.24e-01 -3.43e-02     9.78e-01     8.49e-01\n401  -2.75e-01 -4.51e-01 -1.09e-01     9.19e-01     6.37e-01\n402  -2.83e-01 -5.33e-01 -9.21e-02     9.29e-01     6.26e-01\n403  -2.92e-01 -5.19e-01 -1.08e-01     9.20e-01     6.12e-01\n404  -4.99e-01 -7.25e-01 -1.75e-01     7.19e-01     1.72e-01\n405  -4.86e-01 -7.62e-01 -1.14e-01     5.53e-01     5.31e-02\n406  -2.52e-01 -6.09e-01 -3.44e-02     2.92e-01     3.19e-02\n407  -5.65e-01 -7.92e-01 -1.86e-01     6.31e-01     4.98e-02\n408  -1.71e-01 -5.57e-01 -1.49e-02     1.74e-01     2.46e-03\n409  -7.42e-01 -8.94e-01 -3.61e-01     8.91e-01     9.95e-02\n410  -4.67e-01 -6.78e-01 -2.04e-01     7.42e-01     2.28e-01\n411  -5.35e-01 -7.90e-01 -1.30e-01     5.92e-01     4.59e-02\n412  -7.81e-01 -9.16e-01 -3.07e-01     8.91e-01     6.70e-02\n413  -7.30e-01 -8.84e-01 -3.63e-01     8.84e-01     1.05e-01\n414  -6.81e-01 -8.53e-01 -3.23e-01     8.04e-01     8.52e-02\n415  -7.08e-01 -8.90e-01 -1.83e-01     7.54e-01     3.25e-02\n416  -6.60e-01 -8.60e-01 -1.76e-01     7.13e-01     3.70e-02\n417  -3.22e-01 -5.03e-01 -1.30e-01     8.90e-01     5.59e-01\n418  -3.60e-01 -5.36e-01 -1.62e-01     8.61e-01     4.88e-01\n419  -4.04e-01 -5.34e-01 -2.49e-01     6.86e-01     2.54e-01\n420  -3.99e-01 -5.36e-01 -2.36e-01     7.65e-01     3.38e-01\n421  -3.90e-01 -5.47e-01 -2.06e-01     5.95e-01     1.80e-01\n422  -8.16e-02 -3.99e-01 -1.90e-02     9.84e-01     9.01e-01\n423  -3.53e-01 -5.08e-01 -1.62e-01     8.58e-01     4.91e-01\n424  -3.64e-01 -5.44e-01 -1.70e-01     8.57e-01     4.81e-01\n425  -1.06e-01 -4.89e-01 -2.37e-02     9.78e-01     8.71e-01\n426  -1.27e-01 -4.15e-01 -3.29e-02     9.73e-01     8.43e-01\n427  -3.49e-01 -5.28e-01 -1.45e-01     8.65e-01     5.04e-01\n428  -2.79e-01 -5.73e-01 -9.43e-02     9.18e-01     6.31e-01\n429  -3.18e-01 -5.57e-01 -1.28e-01     8.96e-01     5.67e-01\n430  -5.15e-01 -8.04e-01 -2.70e-01     8.00e-01     2.43e-01\n431  -5.91e-01 -8.15e-01 -3.30e-01     7.39e-01     1.00e-01\n432  -4.35e-01 -6.79e-01 -2.22e-01     5.23e-01     6.36e-02\n433  -4.83e-01 -7.27e-01 -2.56e-01     5.87e-01     7.12e-02\n434  -2.69e-01 -5.60e-01 -7.38e-02     2.82e-01     4.93e-03\n435  -7.35e-01 -9.27e-01 -1.49e-01     9.44e-01     1.80e-01\n436  -4.65e-01 -7.45e-01 -2.70e-01     7.49e-01     2.42e-01\n437  -5.88e-01 -8.02e-01 -3.35e-01     7.19e-01     8.23e-02\n438  -7.48e-01 -9.17e-01 -2.01e-01     9.18e-01     1.24e-01\n439  -7.12e-01 -9.10e-01 -1.86e-01     9.23e-01     1.87e-01\n440  -5.65e-01 -8.05e-01 -3.16e-01     7.34e-01     1.21e-01\n441  -6.62e-01 -8.52e-01 -3.47e-01     7.79e-01     6.02e-02\n442  -6.33e-01 -8.32e-01 -3.43e-01     7.54e-01     6.76e-02\n443  -3.38e-01 -4.98e-01 -1.38e-01     5.07e-01     1.55e-01\n444  -3.19e-01 -4.98e-01 -1.24e-01     4.59e-01     1.29e-01\n445  -1.75e-01 -3.89e-01 -4.93e-02     2.29e-01     5.09e-02\n446  -2.15e-01 -4.30e-01 -5.87e-02     2.83e-01     6.27e-02\n447  -1.44e-01 -3.68e-01 -3.62e-02     1.74e-01     2.70e-02\n448  -3.38e-01 -5.66e-01 -1.40e-01     9.00e-01     5.46e-01\n449  -3.00e-01 -4.83e-01 -1.10e-01     4.26e-01     1.16e-01\n450  -3.13e-01 -4.96e-01 -1.16e-01     4.39e-01     1.18e-01\n451  -3.89e-01 -5.95e-01 -1.92e-01     8.61e-01     4.45e-01\n452  -3.80e-01 -5.49e-01 -2.03e-01     8.28e-01     4.24e-01\n453  -3.09e-01 -4.95e-01 -1.11e-01     4.35e-01     1.15e-01\n454  -3.93e-01 -5.64e-01 -1.84e-01     5.96e-01     1.78e-01\n455  -3.62e-01 -5.34e-01 -1.52e-01     5.25e-01     1.49e-01\n456  -3.78e-01 -5.02e-01 -2.27e-01     8.18e-01     4.23e-01\n457  -3.89e-01 -5.08e-01 -2.42e-01     7.92e-01     3.85e-01\n458  -3.81e-01 -5.17e-01 -2.07e-01     5.78e-01     1.83e-01\n459  -3.92e-01 -5.26e-01 -2.25e-01     6.23e-01     2.10e-01\n460  -3.41e-01 -5.04e-01 -1.52e-01     4.75e-01     1.26e-01\n461  -1.12e-01 -2.79e-01 -3.36e-02     9.75e-01     8.61e-01\n462  -3.97e-01 -5.20e-01 -2.58e-01     7.61e-01     3.38e-01\n463  -3.94e-01 -5.14e-01 -2.53e-01     7.75e-01     3.59e-01\n464  -1.54e-01 -3.41e-01 -5.35e-02     9.63e-01     8.07e-01\n465  -1.81e-01 -3.69e-01 -6.60e-02     9.54e-01     7.70e-01\n466  -3.95e-01 -5.19e-01 -2.55e-01     7.62e-01     3.41e-01\n467  -3.49e-01 -4.92e-01 -1.88e-01     8.60e-01     4.99e-01\n468  -3.75e-01 -5.03e-01 -2.23e-01     8.23e-01     4.30e-01\n469  -2.83e-01 -4.45e-01 -1.34e-01     8.90e-01     5.95e-01\n470  -3.34e-01 -4.95e-01 -1.70e-01     8.55e-01     5.03e-01\n471  -3.72e-01 -5.26e-01 -1.64e-01     6.59e-01     2.64e-01\n472  -3.85e-01 -5.24e-01 -2.30e-01     7.90e-01     3.83e-01\n473  -4.46e-01 -6.51e-01 -2.22e-01     6.21e-01     1.47e-01\n474  -1.05e-01 -3.13e-01 -2.96e-02     9.85e-01     8.77e-01\n475  -3.13e-01 -4.67e-01 -1.53e-01     8.66e-01     5.40e-01\n476  -3.46e-01 -5.04e-01 -1.80e-01     8.59e-01     4.98e-01\n477  -1.39e-01 -3.83e-01 -3.82e-02     9.82e-01     8.40e-01\n478  -1.35e-01 -3.38e-01 -4.46e-02     9.75e-01     8.37e-01\n479  -3.22e-01 -4.89e-01 -1.54e-01     8.86e-01     5.52e-01\n480  -3.00e-01 -5.42e-01 -1.25e-01     9.32e-01     6.22e-01\n481  -3.22e-01 -5.23e-01 -1.47e-01     9.08e-01     5.74e-01\n482  -3.02e-01 -4.58e-01 -1.50e-01     8.79e-01     5.65e-01\n483  -3.26e-01 -4.75e-01 -1.73e-01     8.57e-01     5.16e-01\n484  -3.78e-01 -5.12e-01 -2.20e-01     6.76e-01     2.79e-01\n485  -3.86e-01 -5.22e-01 -2.35e-01     7.35e-01     3.26e-01\n486  -3.86e-01 -5.53e-01 -2.13e-01     6.01e-01     1.95e-01\n487  -7.20e-02 -2.08e-01 -2.02e-02     9.85e-01     9.12e-01\n488  -3.41e-01 -4.89e-01 -1.88e-01     8.38e-01     4.84e-01\n489  -3.37e-01 -4.85e-01 -1.85e-01     8.48e-01     4.98e-01\n490  -1.01e-01 -2.67e-01 -3.07e-02     9.78e-01     8.76e-01\n491  -1.17e-01 -2.79e-01 -3.94e-02     9.72e-01     8.53e-01\n492  -3.43e-01 -4.96e-01 -1.86e-01     8.44e-01     4.85e-01\n493  -2.71e-01 -4.54e-01 -1.20e-01     9.14e-01     6.33e-01\n494  -3.06e-01 -4.67e-01 -1.50e-01     8.87e-01     5.70e-01\n495  -3.93e-01 -6.47e-01 -3.91e-02     5.32e-01     1.18e-01\n496  -2.10e-01 -6.28e-01 -6.92e-03     2.50e-01     3.20e-02\n497  -1.39e-01 -4.90e-01 -6.61e-03     1.64e-01     2.16e-02\n498  -1.89e-01 -5.77e-01 -5.54e-03     2.23e-01     2.68e-02\n499  -1.26e-02 -1.55e-01 -2.05e-04     1.44e-02     1.29e-03\n500  -3.27e-01 -7.68e-01 -7.82e-03     4.01e-01     5.61e-02\n501  -4.07e-01 -6.10e-01 -7.06e-02     5.81e-01     1.55e-01\n502  -1.88e-01 -6.20e-01 -4.58e-03     2.18e-01     2.56e-02\n503  -2.52e-01 -7.57e-01 -5.38e-03     2.97e-01     3.56e-02\n504  -3.36e-01 -7.54e-01 -9.37e-03     4.10e-01     5.90e-02\n505  -2.79e-01 -6.69e-01 -8.93e-03     3.34e-01     4.62e-02\n506  -1.41e-01 -6.49e-01 -2.75e-03     1.63e-01     1.68e-02\n507  -1.56e-01 -6.48e-01 -3.05e-03     1.80e-01     1.99e-02\n508  -2.69e-01 -7.08e-01 -8.30e-02     9.24e-01     6.43e-01\n509  -3.42e-01 -8.09e-01 -1.10e-01     8.99e-01     5.33e-01\n510  -4.01e-01 -7.22e-01 -1.98e-01     7.53e-01     3.05e-01\n511  -4.00e-01 -7.78e-01 -1.66e-01     8.40e-01     4.05e-01\n512  -4.53e-01 -7.60e-01 -2.37e-01     6.80e-01     1.56e-01\n513  -9.99e-02 -8.69e-01 -1.24e-02     9.88e-01     8.85e-01\n514  -2.93e-01 -6.07e-01 -9.98e-02     9.05e-01     6.01e-01\n515  -3.53e-01 -8.21e-01 -1.13e-01     8.98e-01     5.22e-01\n516  -1.35e-01 -8.92e-01 -1.64e-02     9.86e-01     8.47e-01\n517  -1.33e-01 -8.64e-01 -2.19e-02     9.81e-01     8.42e-01\n518  -3.25e-01 -8.12e-01 -9.38e-02     9.14e-01     5.73e-01\n519  -3.01e-01 -8.72e-01 -6.38e-02     9.47e-01     6.30e-01\n520  -3.23e-01 -8.53e-01 -8.48e-02     9.30e-01     5.87e-01\n521  -3.32e-01 -4.80e-01 -1.80e-01     8.50e-01     5.04e-01\n522  -3.49e-01 -4.92e-01 -1.97e-01     8.24e-01     4.58e-01\n523  -3.72e-01 -5.11e-01 -2.02e-01     6.24e-01     2.34e-01\n524  -3.86e-01 -5.25e-01 -2.24e-01     6.81e-01     2.72e-01\n525  -3.69e-01 -5.39e-01 -1.74e-01     5.43e-01     1.61e-01\n526  -8.60e-02 -2.43e-01 -2.44e-02     9.81e-01     8.93e-01\n527  -3.63e-01 -5.06e-01 -2.11e-01     8.01e-01     4.19e-01\n528  -3.61e-01 -5.02e-01 -2.10e-01     8.15e-01     4.36e-01\n529  -1.24e-01 -3.13e-01 -3.92e-02     9.72e-01     8.46e-01\n530  -1.42e-01 -3.25e-01 -4.89e-02     9.64e-01     8.18e-01\n531  -3.66e-01 -5.12e-01 -2.10e-01     8.06e-01     4.20e-01\n532  -3.07e-01 -4.87e-01 -1.45e-01     8.90e-01     5.71e-01\n533  -3.36e-01 -4.96e-01 -1.77e-01     8.59e-01     5.09e-01\n534  -3.17e-01 -6.79e-01 -1.14e-01     8.96e-01     5.64e-01\n535  -3.77e-01 -7.88e-01 -1.42e-01     8.66e-01     4.61e-01\n536  -4.04e-01 -6.82e-01 -2.14e-01     6.93e-01     2.49e-01\n537  -4.16e-01 -7.40e-01 -2.16e-01     7.79e-01     3.18e-01\n538  -4.29e-01 -7.11e-01 -2.20e-01     6.06e-01     1.28e-01\n539  -1.22e-01 -8.75e-01 -1.74e-02     9.85e-01     8.56e-01\n540  -3.42e-01 -5.82e-01 -1.34e-01     8.67e-01     5.09e-01\n541  -3.89e-01 -7.97e-01 -1.48e-01     8.64e-01     4.43e-01\n542  -1.60e-01 -8.86e-01 -2.38e-02     9.80e-01     8.13e-01\n543  -1.65e-01 -8.59e-01 -3.11e-02     9.74e-01     8.03e-01\n544  -3.69e-01 -7.77e-01 -1.38e-01     8.75e-01     4.76e-01\n545  -3.46e-01 -8.57e-01 -8.89e-02     9.24e-01     5.57e-01\n546  -3.67e-01 -8.39e-01 -1.14e-01     9.02e-01     5.08e-01\n547  -4.14e-01 -5.73e-01 -1.50e-01     6.66e-01     2.25e-01\n548  -3.54e-01 -6.15e-01 -4.55e-02     4.61e-01     9.62e-02\n549  -2.16e-01 -4.91e-01 -3.47e-02     2.69e-01     5.05e-02\n550  -3.37e-01 -5.96e-01 -3.98e-02     4.27e-01     8.41e-02\n551  -5.24e-02 -3.22e-01 -1.43e-03     5.88e-02     5.73e-03\n552  -4.74e-01 -7.36e-01 -4.70e-02     7.34e-01     2.07e-01\n553  -4.05e-01 -5.40e-01 -1.95e-01     6.76e-01     2.45e-01\n554  -3.55e-01 -6.29e-01 -3.52e-02     4.48e-01     8.71e-02\n555  -4.69e-01 -7.57e-01 -3.19e-02     6.52e-01     1.44e-01\n556  -4.69e-01 -7.21e-01 -5.19e-02     7.32e-01     2.12e-01\n557  -4.27e-01 -6.51e-01 -6.11e-02     5.91e-01     1.45e-01\n558  -3.68e-01 -7.12e-01 -1.85e-02     4.54e-01     7.17e-02\n559  -3.70e-01 -6.85e-01 -2.21e-02     4.60e-01     7.82e-02\n560  -4.26e-01 -5.97e-01 -1.31e-01     6.82e-01     2.28e-01\n561  -3.64e-01 -6.50e-01 -3.20e-02     4.59e-01     8.72e-02\n562  -2.45e-01 -5.40e-01 -2.95e-02     3.01e-01     5.21e-02\n563  -3.16e-01 -6.14e-01 -2.93e-02     3.93e-01     6.98e-02\n564  -4.08e-02 -3.08e-01 -9.88e-04     4.59e-02     4.25e-03\n565  -4.75e-01 -7.62e-01 -3.75e-02     6.79e-01     1.64e-01\n566  -4.12e-01 -5.61e-01 -1.88e-01     6.88e-01     2.46e-01\n567  -3.46e-01 -6.56e-01 -2.57e-02     4.23e-01     7.28e-02\n568  -4.43e-01 -7.65e-01 -2.55e-02     5.78e-01     1.10e-01\n569  -4.73e-01 -7.39e-01 -4.05e-02     6.85e-01     1.68e-01\n570  -4.09e-01 -6.64e-01 -4.19e-02     5.41e-01     1.19e-01\n571  -3.16e-01 -7.18e-01 -1.30e-02     3.81e-01     5.42e-02\n572  -3.31e-01 -7.01e-01 -1.69e-02     3.99e-01     6.06e-02\n573  -5.12e-01 -7.13e-01 -2.44e-01     7.13e-01     1.60e-01\n574  -5.24e-01 -7.65e-01 -1.54e-01     5.89e-01     5.12e-02\n575  -3.08e-01 -6.31e-01 -6.00e-02     3.49e-01     3.29e-02\n576  -4.68e-01 -7.33e-01 -1.47e-01     5.19e-01     4.15e-02\n577  -1.66e-01 -5.32e-01 -1.37e-02     1.69e-01     2.24e-03\n578  -7.58e-01 -9.00e-01 -3.69e-01     8.95e-01     9.19e-02\n579  -4.61e-01 -6.49e-01 -2.30e-01     6.87e-01     1.90e-01\n580  -5.36e-01 -7.76e-01 -1.57e-01     5.91e-01     4.24e-02\n581  -7.70e-01 -9.04e-01 -2.93e-01     8.66e-01     6.08e-02\n582  -7.33e-01 -8.80e-01 -3.66e-01     8.73e-01     9.55e-02\n583  -5.91e-01 -7.96e-01 -2.45e-01     6.87e-01     7.21e-02\n584  -6.50e-01 -8.61e-01 -1.67e-01     6.90e-01     2.89e-02\n585  -6.13e-01 -8.30e-01 -1.71e-01     6.57e-01     3.26e-02\n586  -2.48e-01 -4.52e-01 -8.23e-02     3.13e-01     5.88e-02\n587  -1.59e-01 -3.56e-01 -4.52e-02     1.91e-01     2.82e-02\n588  -5.82e-02 -1.84e-01 -1.29e-02     6.97e-02     9.97e-03\n589  -1.92e-01 -3.85e-01 -6.69e-02     2.31e-01     3.51e-02\n590  -3.10e-02 -1.05e-01 -7.33e-03     3.56e-02     3.64e-03\n591  -4.26e-01 -6.58e-01 -1.90e-01     5.98e-01     1.33e-01\n592  -2.60e-01 -4.48e-01 -9.66e-02     3.33e-01     6.64e-02\n593  -1.77e-01 -3.84e-01 -5.28e-02     2.11e-01     3.06e-02\n594  -4.12e-01 -6.59e-01 -1.54e-01     5.65e-01     1.12e-01\n595  -4.15e-01 -6.38e-01 -1.97e-01     5.76e-01     1.26e-01\n596  -3.18e-01 -5.15e-01 -1.35e-01     4.04e-01     7.41e-02\n597  -2.76e-01 -5.10e-01 -9.13e-02     3.39e-01     4.91e-02\n598  -2.51e-01 -4.73e-01 -8.82e-02     3.05e-01     4.45e-02\n599  -3.97e-01 -6.05e-01 -2.33e-01     7.34e-01     3.07e-01\n600  -4.06e-01 -6.65e-01 -2.34e-01     6.76e-01     2.33e-01\n601  -3.01e-01 -4.99e-01 -1.24e-01     4.16e-01     1.01e-01\n602  -3.69e-01 -5.78e-01 -1.99e-01     5.37e-01     1.46e-01\n603  -2.81e-01 -5.08e-01 -1.16e-01     3.47e-01     5.68e-02\n604  -2.30e-01 -8.62e-01 -5.52e-02     9.56e-01     7.16e-01\n605  -3.92e-01 -5.50e-01 -2.39e-01     6.79e-01     2.61e-01\n606  -4.11e-01 -6.65e-01 -2.43e-01     6.72e-01     2.25e-01\n607  -2.82e-01 -8.65e-01 -7.14e-02     9.45e-01     6.49e-01\n608  -2.99e-01 -8.27e-01 -9.05e-02     9.29e-01     6.12e-01\n609  -4.11e-01 -6.71e-01 -2.41e-01     7.01e-01     2.54e-01\n610  -4.31e-01 -7.88e-01 -2.11e-01     8.08e-01     3.37e-01\n611  -4.31e-01 -7.41e-01 -2.37e-01     7.59e-01     2.87e-01\n612  -4.05e-01 -5.53e-01 -2.39e-01     7.58e-01     3.28e-01\n613  -4.04e-01 -5.56e-01 -2.32e-01     6.75e-01     2.42e-01\n614  -2.90e-01 -4.75e-01 -1.06e-01     3.88e-01     8.92e-02\n615  -3.98e-01 -5.26e-01 -2.53e-01     6.40e-01     2.18e-01\n616  -2.90e-01 -4.69e-01 -1.19e-01     3.78e-01     8.32e-02\n617  -1.82e-01 -5.03e-01 -4.96e-02     9.59e-01     7.73e-01\n618  -4.06e-01 -5.40e-01 -2.59e-01     7.38e-01     3.09e-01\n619  -4.08e-01 -5.57e-01 -2.49e-01     6.96e-01     2.61e-01\n620  -1.76e-01 -5.13e-01 -4.99e-02     9.60e-01     7.81e-01\n621  -2.34e-01 -5.13e-01 -7.87e-02     9.40e-01     7.03e-01\n622  -3.93e-01 -5.35e-01 -2.15e-01     7.93e-01     3.77e-01\n623  -3.65e-01 -5.67e-01 -1.67e-01     8.61e-01     4.85e-01\n624  -3.96e-01 -5.65e-01 -2.13e-01     8.12e-01     3.94e-01\n625  -3.67e-01 -5.04e-01 -2.10e-01     7.49e-01     3.57e-01\n626  -3.78e-01 -5.23e-01 -1.88e-01     6.84e-01     2.81e-01\n627  -2.86e-01 -4.83e-01 -8.37e-02     4.09e-01     1.17e-01\n628  -3.74e-01 -5.24e-01 -1.87e-01     5.87e-01     1.96e-01\n629  -3.00e-01 -5.34e-01 -1.05e-01     3.81e-01     7.13e-02\n630  -1.95e-01 -4.26e-01 -6.21e-02     9.60e-01     7.58e-01\n631  -3.76e-01 -5.08e-01 -2.22e-01     7.09e-01     3.10e-01\n632  -3.88e-01 -5.28e-01 -2.09e-01     6.95e-01     2.81e-01\n633  -2.36e-01 -5.00e-01 -8.32e-02     9.56e-01     7.12e-01\n634  -2.44e-01 -4.51e-01 -9.82e-02     9.36e-01     6.86e-01\n635  -3.93e-01 -5.27e-01 -2.39e-01     7.46e-01     3.29e-01\n636  -3.99e-01 -5.76e-01 -2.23e-01     8.40e-01     4.17e-01\n637  -4.02e-01 -5.49e-01 -2.42e-01     7.89e-01     3.65e-01\n638  -4.07e-01 -5.30e-01 -2.64e-01     7.24e-01     2.94e-01\n639  -4.06e-01 -5.36e-01 -2.62e-01     6.68e-01     2.37e-01\n640  -3.02e-01 -4.70e-01 -1.30e-01     4.05e-01     9.64e-02\n641  -3.58e-01 -4.98e-01 -1.96e-01     5.21e-01     1.48e-01\n642  -2.62e-01 -4.39e-01 -1.03e-01     3.39e-01     7.11e-02\n643  -1.93e-01 -4.90e-01 -5.82e-02     9.54e-01     7.58e-01\n644  -4.01e-01 -5.20e-01 -2.60e-01     6.67e-01     2.45e-01\n645  -4.05e-01 -5.34e-01 -2.63e-01     6.64e-01     2.35e-01\n646  -2.28e-01 -5.38e-01 -7.30e-02     9.41e-01     7.07e-01\n647  -2.68e-01 -5.06e-01 -1.02e-01     9.25e-01     6.49e-01\n648  -4.00e-01 -5.30e-01 -2.57e-01     6.87e-01     2.59e-01\n649  -3.98e-01 -5.56e-01 -2.25e-01     7.99e-01     3.80e-01\n650  -4.08e-01 -5.45e-01 -2.59e-01     7.47e-01     3.15e-01\n651  -3.99e-01 -5.72e-01 -1.68e-01     7.09e-01     2.79e-01\n652  -4.25e-01 -6.43e-01 -1.25e-01     5.87e-01     1.42e-01\n653  -2.29e-01 -5.16e-01 -3.68e-02     2.97e-01     6.29e-02\n654  -4.72e-01 -6.66e-01 -2.40e-01     6.33e-01     1.41e-01\n655  -2.61e-01 -5.79e-01 -5.45e-02     2.76e-01     1.24e-02\n656  -5.51e-01 -7.83e-01 -2.75e-01     9.35e-01     3.56e-01\n657  -3.87e-01 -5.41e-01 -1.97e-01     7.16e-01     2.99e-01\n658  -4.68e-01 -6.76e-01 -1.72e-01     6.30e-01     1.39e-01\n659  -6.40e-01 -8.32e-01 -3.39e-01     9.43e-01     2.77e-01\n660  -5.36e-01 -7.65e-01 -2.76e-01     9.19e-01     3.57e-01\n661  -5.23e-01 -7.13e-01 -3.32e-01     8.05e-01     2.43e-01\n662  -6.56e-01 -8.19e-01 -4.03e-01     8.32e-01     1.45e-01\n663  -5.95e-01 -7.77e-01 -3.39e-01     7.76e-01     1.49e-01\n664  -4.29e-01 -6.47e-01 -2.38e-01     6.09e-01     1.49e-01\n665  -2.91e-01 -5.27e-01 -1.06e-01     3.61e-01     5.28e-02\n666  -1.97e-01 -4.06e-01 -6.50e-02     2.35e-01     3.15e-02\n667  -2.48e-01 -4.68e-01 -8.84e-02     3.02e-01     4.28e-02\n668  -2.31e-02 -9.03e-02 -4.20e-03     2.73e-02     2.45e-03\n669  -4.06e-01 -6.83e-01 -1.07e-01     5.58e-01     1.01e-01\n670  -4.24e-01 -6.31e-01 -2.48e-01     6.22e-01     1.67e-01\n671  -2.63e-01 -4.98e-01 -8.62e-02     3.24e-01     4.37e-02\n672  -3.44e-01 -6.33e-01 -8.07e-02     4.50e-01     6.76e-02\n673  -4.10e-01 -6.72e-01 -1.23e-01     5.62e-01     1.04e-01\n674  -3.44e-01 -5.74e-01 -1.34e-01     4.41e-01     7.28e-02\n675  -2.18e-01 -4.84e-01 -5.46e-02     2.70e-01     3.20e-02\n676  -2.35e-01 -4.86e-01 -6.33e-02     2.89e-01     3.57e-02\n677  -3.19e-01 -5.01e-01 -1.27e-01     8.90e-01     5.62e-01\n678  -3.58e-01 -5.43e-01 -1.59e-01     8.62e-01     4.91e-01\n679  -4.01e-01 -5.37e-01 -2.44e-01     6.85e-01     2.57e-01\n680  -3.98e-01 -5.37e-01 -2.33e-01     7.63e-01     3.38e-01\n681  -3.91e-01 -5.42e-01 -2.07e-01     5.95e-01     1.81e-01\n682  -8.13e-02 -3.80e-01 -1.77e-02     9.84e-01     9.01e-01\n683  -3.54e-01 -5.12e-01 -1.59e-01     8.59e-01     4.92e-01\n684  -3.65e-01 -5.42e-01 -1.66e-01     8.56e-01     4.79e-01\n685  -1.05e-01 -4.60e-01 -2.45e-02     9.78e-01     8.71e-01\n686  -1.27e-01 -4.09e-01 -3.34e-02     9.72e-01     8.44e-01\n687  -3.49e-01 -5.28e-01 -1.44e-01     8.66e-01     5.07e-01\n688  -2.80e-01 -5.57e-01 -9.47e-02     9.19e-01     6.33e-01\n689  -3.19e-01 -5.46e-01 -1.23e-01     8.95e-01     5.68e-01\n690  -3.95e-01 -5.80e-01 -2.41e-01     6.79e-01     2.55e-01\n691  -3.94e-01 -6.22e-01 -2.31e-01     6.21e-01     1.96e-01\n692  -2.66e-01 -4.62e-01 -1.11e-01     3.61e-01     8.28e-02\n693  -3.34e-01 -5.25e-01 -1.61e-01     4.66e-01     1.16e-01\n694  -2.39e-01 -4.50e-01 -9.11e-02     2.94e-01     4.59e-02\n695  -2.62e-01 -8.51e-01 -6.74e-02     9.44e-01     6.69e-01\n696  -3.79e-01 -5.33e-01 -2.25e-01     6.15e-01     2.11e-01\n697  -3.96e-01 -6.31e-01 -2.30e-01     6.15e-01     1.88e-01\n698  -3.15e-01 -8.52e-01 -9.05e-02     9.28e-01     5.95e-01\n699  -3.31e-01 -8.10e-01 -1.15e-01     9.08e-01     5.59e-01\n700  -3.97e-01 -6.18e-01 -2.31e-01     6.32e-01     2.04e-01\n701  -4.33e-01 -7.55e-01 -2.37e-01     7.59e-01     2.82e-01\n702  -4.25e-01 -7.04e-01 -2.56e-01     7.03e-01     2.40e-01\n703  -2.70e-01 -6.85e-01 -8.17e-02     9.25e-01     6.41e-01\n704  -3.42e-01 -8.04e-01 -1.11e-01     8.98e-01     5.30e-01\n705  -4.03e-01 -7.20e-01 -1.96e-01     7.51e-01     3.01e-01\n706  -3.98e-01 -7.68e-01 -1.66e-01     8.42e-01     4.04e-01\n707  -4.56e-01 -7.59e-01 -2.34e-01     6.81e-01     1.59e-01\n708  -9.81e-02 -8.67e-01 -1.28e-02     9.89e-01     8.86e-01\n709  -2.93e-01 -5.88e-01 -9.82e-02     9.07e-01     6.03e-01\n710  -3.54e-01 -8.18e-01 -1.16e-01     8.99e-01     5.17e-01\n711  -1.28e-01 -8.81e-01 -1.73e-02     9.86e-01     8.52e-01\n712  -1.30e-01 -8.54e-01 -2.17e-02     9.81e-01     8.45e-01\n713  -3.23e-01 -7.97e-01 -9.13e-02     9.15e-01     5.71e-01\n714  -2.93e-01 -8.67e-01 -6.17e-02     9.47e-01     6.37e-01\n715  -3.20e-01 -8.53e-01 -8.37e-02     9.30e-01     5.88e-01\n716  -5.56e-01 -7.71e-01 -3.12e-01     6.12e-01     3.11e-02\n717  -3.86e-01 -6.42e-01 -1.64e-01     3.99e-01     6.76e-03\n718  -2.39e-01 -4.79e-01 -8.78e-02     2.48e-01     5.15e-03\n719  -3.14e-01 -5.60e-01 -1.27e-01     3.25e-01     5.52e-03\n720  -3.64e-02 -1.33e-01 -8.95e-03     3.70e-02     2.40e-04\n721  -6.07e-01 -8.27e-01 -2.97e-01     6.35e-01     1.08e-02\n722  -5.25e-01 -7.46e-01 -2.90e-01     6.00e-01     5.02e-02\n723  -3.53e-01 -6.12e-01 -1.43e-01     3.65e-01     5.16e-03\n724  -5.13e-01 -7.84e-01 -2.08e-01     5.29e-01     6.93e-03\n725  -6.01e-01 -8.17e-01 -2.99e-01     6.29e-01     1.15e-02\n726  -4.52e-01 -6.90e-01 -2.12e-01     4.72e-01     9.45e-03\n727  -3.22e-01 -6.16e-01 -1.14e-01     3.30e-01     3.24e-03\n728  -3.38e-01 -6.23e-01 -1.19e-01     3.47e-01     3.77e-03\n729  -3.50e-01 -6.51e-01 -1.41e-01     8.59e-01     4.92e-01\n730  -3.99e-01 -7.43e-01 -1.73e-01     8.08e-01     3.69e-01\n731  -3.66e-01 -6.03e-01 -1.63e-01     5.71e-01     1.75e-01\n732  -4.18e-01 -7.22e-01 -2.28e-01     7.56e-01     3.02e-01\n733  -3.94e-01 -6.61e-01 -1.91e-01     5.30e-01     1.04e-01\n734  -1.51e-01 -8.57e-01 -2.50e-02     9.78e-01     8.18e-01\n735  -3.61e-01 -5.80e-01 -1.57e-01     8.39e-01     4.59e-01\n736  -4.08e-01 -7.67e-01 -1.82e-01     8.15e-01     3.70e-01\n737  -1.73e-01 -8.79e-01 -2.82e-02     9.76e-01     7.97e-01\n738  -1.93e-01 -8.40e-01 -4.16e-02     9.66e-01     7.64e-01\n739  -3.79e-01 -7.77e-01 -1.38e-01     8.67e-01     4.63e-01\n740  -3.60e-01 -8.48e-01 -1.04e-01     9.14e-01     5.33e-01\n741  -3.85e-01 -8.24e-01 -1.37e-01     8.83e-01     4.72e-01\n742  -3.59e-01 -4.93e-01 -2.00e-01     7.74e-01     3.94e-01\n743  -3.66e-01 -5.12e-01 -1.84e-01     7.13e-01     3.21e-01\n744  -2.99e-01 -4.87e-01 -9.10e-02     4.43e-01     1.35e-01\n745  -3.75e-01 -5.17e-01 -2.00e-01     6.22e-01     2.26e-01\n746  -3.00e-01 -4.95e-01 -1.07e-01     4.22e-01     1.12e-01\n747  -1.27e-01 -3.16e-01 -4.00e-02     9.66e-01     8.35e-01\n748  -3.72e-01 -5.04e-01 -2.22e-01     7.35e-01     3.41e-01\n749  -3.70e-01 -5.07e-01 -2.03e-01     7.23e-01     3.29e-01\n750  -1.50e-01 -3.55e-01 -5.02e-02     9.62e-01     8.08e-01\n751  -1.85e-01 -3.71e-01 -7.10e-02     9.46e-01     7.57e-01\n752  -3.76e-01 -5.17e-01 -2.18e-01     7.71e-01     3.74e-01\n753  -3.33e-01 -4.93e-01 -1.72e-01     8.61e-01     5.11e-01\n754  -3.58e-01 -5.01e-01 -2.04e-01     8.13e-01     4.34e-01\n755  -3.02e-01 -4.56e-01 -1.47e-01     8.79e-01     5.65e-01\n756  -3.26e-01 -4.73e-01 -1.67e-01     8.55e-01     5.17e-01\n757  -3.78e-01 -5.11e-01 -2.16e-01     6.77e-01     2.78e-01\n758  -3.86e-01 -5.23e-01 -2.37e-01     7.37e-01     3.28e-01\n759  -3.86e-01 -5.48e-01 -2.08e-01     6.02e-01     1.96e-01\n760  -7.03e-02 -2.04e-01 -2.01e-02     9.85e-01     9.13e-01\n761  -3.41e-01 -4.88e-01 -1.82e-01     8.41e-01     4.81e-01\n762  -3.38e-01 -4.86e-01 -1.80e-01     8.49e-01     5.00e-01\n763  -9.97e-02 -2.64e-01 -3.07e-02     9.78e-01     8.76e-01\n764  -1.17e-01 -2.74e-01 -3.84e-02     9.72e-01     8.52e-01\n765  -3.44e-01 -4.93e-01 -1.82e-01     8.46e-01     4.88e-01\n766  -2.69e-01 -4.53e-01 -1.15e-01     9.13e-01     6.36e-01\n767  -3.03e-01 -4.67e-01 -1.47e-01     8.88e-01     5.74e-01\n768  -3.25e-01 -4.72e-01 -1.62e-01     8.81e-01     5.47e-01\n769  -3.47e-01 -4.84e-01 -1.88e-01     8.58e-01     5.00e-01\n770  -4.01e-01 -5.24e-01 -2.52e-01     6.87e-01     2.66e-01\n771  -3.99e-01 -5.21e-01 -2.60e-01     7.33e-01     3.11e-01\n772  -3.86e-01 -5.25e-01 -2.06e-01     5.92e-01     1.90e-01\n773  -7.36e-02 -2.09e-01 -2.11e-02     9.84e-01     9.09e-01\n774  -3.61e-01 -4.94e-01 -2.05e-01     8.42e-01     4.64e-01\n775  -3.56e-01 -4.88e-01 -1.93e-01     8.48e-01     4.78e-01\n776  -1.03e-01 -2.59e-01 -3.08e-02     9.77e-01     8.72e-01\n777  -1.24e-01 -2.84e-01 -4.03e-02     9.72e-01     8.47e-01\n778  -3.60e-01 -4.97e-01 -2.00e-01     8.44e-01     4.67e-01\n779  -2.81e-01 -4.54e-01 -1.21e-01     9.10e-01     6.22e-01\n780  -3.18e-01 -4.74e-01 -1.54e-01     8.87e-01     5.60e-01\n781  -1.94e-02 -2.63e-01 -1.96e-05     2.37e-02     1.88e-03\n782  -3.80e-03 -7.38e-02 -3.15e-06     4.66e-03     3.65e-04\n783  -3.12e-03 -6.05e-02 -3.06e-06     3.79e-03     2.89e-04\n784  -3.18e-03 -6.52e-02 -2.61e-06     3.88e-03     3.03e-04\n785  -1.31e-04 -3.09e-03 -1.01e-07     1.62e-04     1.26e-05\n786  -5.87e-03 -1.23e-01 -4.65e-06     7.47e-03     5.62e-04\n787  -3.67e-02 -3.58e-01 -4.06e-05     4.42e-02     3.54e-03\n788  -2.99e-03 -5.92e-02 -2.79e-06     3.67e-03     2.87e-04\n789  -3.78e-03 -7.79e-02 -3.18e-06     4.71e-03     3.69e-04\n790  -6.48e-03 -1.24e-01 -6.02e-06     7.95e-03     6.16e-04\n791  -5.51e-03 -1.04e-01 -4.56e-06     6.75e-03     5.31e-04\n792  -1.84e-03 -3.88e-02 -1.54e-06     2.22e-03     1.71e-04\n793  -2.10e-03 -4.40e-02 -1.92e-06     2.57e-03     2.02e-04\n794  -2.05e-02 -2.78e-01 -1.45e-05     2.52e-02     1.93e-03\n795  -4.00e-03 -7.63e-02 -2.31e-06     5.01e-03     3.82e-04\n796  -3.15e-03 -6.06e-02 -2.66e-06     3.92e-03     3.00e-04\n797  -3.34e-03 -6.48e-02 -2.16e-06     4.11e-03     3.14e-04\n798  -1.41e-04 -3.24e-03 -7.16e-08     1.75e-04     1.28e-05\n799  -6.40e-03 -1.23e-01 -3.44e-06     7.91e-03     6.01e-04\n800  -3.71e-02 -3.56e-01 -3.74e-05     4.44e-02     3.53e-03\n801  -3.09e-03 -6.35e-02 -1.98e-06     3.82e-03     2.84e-04\n802  -4.09e-03 -8.05e-02 -2.45e-06     5.04e-03     3.80e-04\n803  -7.01e-03 -1.22e-01 -4.18e-06     8.58e-03     6.25e-04\n804  -5.77e-03 -1.09e-01 -3.72e-06     7.07e-03     5.41e-04\n805  -1.92e-03 -4.03e-02 -1.13e-06     2.38e-03     1.80e-04\n806  -2.28e-03 -4.67e-02 -1.35e-06     2.83e-03     2.11e-04\n807  -3.98e-01 -5.15e-01 -2.56e-01     7.09e-01     2.84e-01\n808  -3.94e-01 -5.25e-01 -2.16e-01     6.36e-01     2.23e-01\n809  -2.81e-01 -4.80e-01 -9.93e-02     3.72e-01     8.89e-02\n810  -3.55e-01 -5.07e-01 -1.67e-01     5.10e-01     1.46e-01\n811  -2.25e-01 -4.45e-01 -5.72e-02     2.85e-01     5.61e-02\n812  -2.24e-01 -4.36e-01 -8.06e-02     9.42e-01     7.11e-01\n813  -3.96e-01 -5.14e-01 -2.40e-01     6.60e-01     2.40e-01\n814  -3.94e-01 -5.22e-01 -2.28e-01     6.36e-01     2.22e-01\n815  -2.63e-01 -4.78e-01 -1.01e-01     9.27e-01     6.51e-01\n816  -2.85e-01 -4.62e-01 -1.23e-01     9.11e-01     6.19e-01\n817  -3.99e-01 -5.23e-01 -2.44e-01     6.78e-01     2.55e-01\n818  -4.00e-01 -5.40e-01 -2.33e-01     7.73e-01     3.45e-01\n819  -4.04e-01 -5.30e-01 -2.47e-01     7.23e-01     2.93e-01\n820  -3.01e-01 -4.60e-01 -1.49e-01     8.79e-01     5.67e-01\n821  -3.23e-01 -4.74e-01 -1.72e-01     8.57e-01     5.19e-01\n822  -3.78e-01 -5.12e-01 -2.14e-01     6.79e-01     2.80e-01\n823  -3.85e-01 -5.24e-01 -2.32e-01     7.38e-01     3.29e-01\n824  -3.86e-01 -5.59e-01 -2.02e-01     6.03e-01     1.98e-01\n825  -6.93e-02 -2.02e-01 -2.02e-02     9.85e-01     9.14e-01\n826  -3.41e-01 -4.94e-01 -1.87e-01     8.41e-01     4.86e-01\n827  -3.35e-01 -4.88e-01 -1.83e-01     8.50e-01     5.00e-01\n828  -9.97e-02 -2.66e-01 -2.98e-02     9.79e-01     8.77e-01\n829  -1.16e-01 -2.77e-01 -3.83e-02     9.72e-01     8.53e-01\n830  -3.41e-01 -4.97e-01 -1.84e-01     8.46e-01     4.89e-01\n831  -2.69e-01 -4.50e-01 -1.18e-01     9.14e-01     6.37e-01\n832  -3.03e-01 -4.67e-01 -1.48e-01     8.89e-01     5.76e-01\n833  -4.09e-01 -5.66e-01 -2.40e-01     7.92e-01     3.62e-01\n834  -4.33e-01 -6.29e-01 -2.77e-01     7.32e-01     2.68e-01\n835  -3.71e-01 -5.32e-01 -1.98e-01     5.18e-01     1.33e-01\n836  -3.94e-01 -5.60e-01 -2.27e-01     5.75e-01     1.61e-01\n837  -2.30e-01 -4.59e-01 -5.98e-02     2.78e-01     4.20e-02\n838  -2.76e-01 -7.29e-01 -6.74e-02     9.43e-01     6.57e-01\n839  -4.08e-01 -5.36e-01 -2.62e-01     7.38e-01     3.06e-01\n840  -4.34e-01 -6.24e-01 -2.73e-01     7.10e-01     2.46e-01\n841  -3.41e-01 -7.33e-01 -8.89e-02     9.16e-01     5.59e-01\n842  -3.22e-01 -7.06e-01 -9.93e-02     9.20e-01     5.88e-01\n843  -4.25e-01 -6.07e-01 -2.69e-01     7.24e-01     2.69e-01\n844  -4.44e-01 -6.82e-01 -2.23e-01     7.74e-01     2.94e-01\n845  -4.43e-01 -6.63e-01 -2.54e-01     7.47e-01     2.75e-01\n846  -2.71e-01 -6.85e-01 -7.92e-02     9.23e-01     6.42e-01\n847  -3.39e-01 -8.11e-01 -1.06e-01     8.99e-01     5.34e-01\n848  -4.02e-01 -7.16e-01 -1.94e-01     7.50e-01     3.03e-01\n849  -3.99e-01 -7.75e-01 -1.58e-01     8.40e-01     4.06e-01\n850  -4.54e-01 -7.51e-01 -2.35e-01     6.82e-01     1.66e-01\n851  -9.52e-02 -8.70e-01 -1.28e-02     9.89e-01     8.89e-01\n852  -2.93e-01 -5.94e-01 -9.68e-02     9.06e-01     6.01e-01\n853  -3.51e-01 -8.18e-01 -1.09e-01     8.98e-01     5.22e-01\n854  -1.25e-01 -8.90e-01 -1.64e-02     9.86e-01     8.55e-01\n855  -1.29e-01 -8.55e-01 -2.10e-02     9.82e-01     8.47e-01\n856  -3.22e-01 -8.06e-01 -8.75e-02     9.15e-01     5.74e-01\n857  -2.88e-01 -8.75e-01 -6.12e-02     9.47e-01     6.46e-01\n858  -3.18e-01 -8.56e-01 -8.01e-02     9.30e-01     5.92e-01\n859  -3.93e-01 -5.15e-01 -2.44e-01     7.69e-01     3.54e-01\n860  -4.05e-01 -5.38e-01 -2.23e-01     6.92e-01     2.64e-01\n861  -3.21e-01 -5.01e-01 -1.13e-01     4.37e-01     1.11e-01\n862  -3.90e-01 -5.23e-01 -2.09e-01     5.98e-01     1.94e-01\n863  -2.38e-01 -4.86e-01 -3.74e-02     2.93e-01     5.25e-02\n864  -2.33e-01 -4.74e-01 -7.71e-02     9.45e-01     7.00e-01\n865  -3.98e-01 -5.13e-01 -2.64e-01     7.36e-01     3.17e-01\n866  -4.06e-01 -5.38e-01 -2.27e-01     6.91e-01     2.61e-01\n867  -2.77e-01 -5.33e-01 -9.41e-02     9.31e-01     6.34e-01\n868  -2.73e-01 -4.80e-01 -1.12e-01     9.24e-01     6.37e-01\n869  -4.02e-01 -5.26e-01 -2.52e-01     7.49e-01     3.22e-01\n870  -4.06e-01 -5.81e-01 -1.90e-01     8.02e-01     3.66e-01\n871  -4.12e-01 -5.56e-01 -2.09e-01     7.65e-01     3.29e-01\n872  -3.49e-01 -5.11e-01 -1.84e-01     8.52e-01     4.85e-01\n873  -3.89e-01 -5.43e-01 -2.09e-01     7.79e-01     3.60e-01\n874  -3.60e-01 -5.45e-01 -1.18e-01     5.21e-01     1.50e-01\n875  -3.94e-01 -5.14e-01 -2.43e-01     7.78e-01     3.63e-01\n876  -3.46e-01 -5.50e-01 -9.05e-02     4.68e-01     1.14e-01\n877  -1.33e-01 -3.47e-01 -3.91e-02     9.71e-01     8.32e-01\n878  -3.56e-01 -4.96e-01 -1.95e-01     8.45e-01     4.75e-01\n879  -3.83e-01 -5.33e-01 -2.14e-01     7.99e-01     3.93e-01\n880  -1.40e-01 -3.68e-01 -3.89e-02     9.72e-01     8.25e-01\n881  -1.62e-01 -3.60e-01 -5.50e-02     9.62e-01     7.95e-01\n882  -3.23e-01 -4.75e-01 -1.50e-01     8.84e-01     5.50e-01\n883  -2.95e-01 -4.99e-01 -1.21e-01     9.10e-01     6.01e-01\n884  -3.33e-01 -5.01e-01 -1.62e-01     8.81e-01     5.35e-01\n885  -3.92e-01 -5.67e-01 -2.03e-01     8.37e-01     4.27e-01\n886  -4.31e-01 -6.47e-01 -2.46e-01     7.76e-01     3.17e-01\n887  -3.95e-01 -5.60e-01 -2.28e-01     5.79e-01     1.63e-01\n888  -4.14e-01 -5.83e-01 -2.66e-01     6.48e-01     2.04e-01\n889  -2.58e-01 -4.99e-01 -6.88e-02     3.19e-01     4.92e-02\n890  -2.47e-01 -7.42e-01 -5.23e-02     9.52e-01     6.93e-01\n891  -4.00e-01 -5.41e-01 -2.26e-01     7.96e-01     3.76e-01\n892  -4.35e-01 -6.51e-01 -2.61e-01     7.59e-01     2.95e-01\n893  -3.12e-01 -7.43e-01 -7.41e-02     9.30e-01     6.02e-01\n894  -2.86e-01 -7.20e-01 -8.23e-02     9.36e-01     6.39e-01\n895  -4.22e-01 -6.28e-01 -2.41e-01     7.79e-01     3.29e-01\n896  -4.35e-01 -7.01e-01 -1.95e-01     8.13e-01     3.43e-01\n897  -4.36e-01 -6.77e-01 -2.20e-01     7.90e-01     3.24e-01\n898  -2.47e-02 -3.25e-01 -5.61e-05     2.49e-02     1.31e-04\n899  -4.83e-03 -8.91e-02 -1.03e-05     4.90e-03     2.51e-05\n900  -3.92e-03 -7.58e-02 -8.00e-06     3.96e-03     2.01e-05\n901  -4.16e-03 -7.68e-02 -9.02e-06     4.20e-03     2.08e-05\n902  -1.66e-04 -3.71e-03 -3.46e-07     1.68e-04     8.72e-07\n903  -7.60e-03 -1.45e-01 -1.60e-05     7.71e-03     3.98e-05\n904  -4.46e-02 -4.44e-01 -9.98e-05     4.53e-02     2.46e-04\n905  -3.68e-03 -7.69e-02 -8.11e-06     3.73e-03     1.97e-05\n906  -4.81e-03 -9.20e-02 -1.02e-05     4.88e-03     2.52e-05\n907  -8.28e-03 -1.50e-01 -1.77e-05     8.35e-03     4.24e-05\n908  -6.82e-03 -1.29e-01 -1.59e-05     6.97e-03     3.58e-05\n909  -2.31e-03 -4.69e-02 -4.72e-06     2.34e-03     1.20e-05\n910  -2.69e-03 -5.53e-02 -5.44e-06     2.74e-03     1.37e-05\n911  -2.70e-01 -6.85e-01 -8.17e-02     9.23e-01     6.42e-01\n912  -3.45e-01 -8.09e-01 -1.08e-01     8.97e-01     5.29e-01\n913  -4.04e-01 -7.17e-01 -1.97e-01     7.50e-01     3.02e-01\n914  -3.99e-01 -7.81e-01 -1.62e-01     8.41e-01     4.05e-01\n915  -4.57e-01 -7.60e-01 -2.29e-01     6.79e-01     1.59e-01\n916  -9.84e-02 -8.72e-01 -1.29e-02     9.88e-01     8.87e-01\n917  -2.95e-01 -5.95e-01 -9.72e-02     9.05e-01     6.01e-01\n918  -3.56e-01 -8.23e-01 -1.11e-01     8.97e-01     5.16e-01\n919  -1.31e-01 -8.92e-01 -1.69e-02     9.86e-01     8.49e-01\n920  -1.33e-01 -8.61e-01 -2.15e-02     9.81e-01     8.43e-01\n921  -3.24e-01 -8.10e-01 -9.15e-02     9.14e-01     5.71e-01\n922  -2.99e-01 -8.79e-01 -6.26e-02     9.47e-01     6.30e-01\n923  -3.24e-01 -8.57e-01 -7.92e-02     9.30e-01     5.86e-01\n924  -3.51e-01 -4.90e-01 -1.95e-01     8.52e-01     4.85e-01\n925  -3.80e-01 -5.22e-01 -2.25e-01     8.04e-01     3.98e-01\n926  -3.78e-01 -5.29e-01 -1.64e-01     5.73e-01     1.76e-01\n927  -3.99e-01 -5.18e-01 -2.62e-01     7.34e-01     3.13e-01\n928  -3.68e-01 -5.18e-01 -1.70e-01     5.37e-01     1.58e-01\n929  -9.69e-02 -2.59e-01 -2.97e-02     9.79e-01     8.80e-01\n930  -3.71e-01 -4.97e-01 -2.22e-01     8.26e-01     4.37e-01\n931  -3.78e-01 -5.10e-01 -2.27e-01     8.11e-01     4.12e-01\n932  -1.07e-01 -2.73e-01 -3.31e-02     9.76e-01     8.68e-01\n933  -1.42e-01 -3.09e-01 -5.07e-02     9.66e-01     8.22e-01\n934  -3.54e-01 -4.93e-01 -1.88e-01     8.52e-01     4.81e-01\n935  -2.83e-01 -4.48e-01 -1.28e-01     9.09e-01     6.20e-01\n936  -3.28e-01 -4.72e-01 -1.67e-01     8.78e-01     5.40e-01\n937  -3.21e-01 -5.04e-01 -1.29e-01     8.90e-01     5.60e-01\n938  -3.60e-01 -5.41e-01 -1.61e-01     8.62e-01     4.90e-01\n939  -4.00e-01 -5.40e-01 -2.44e-01     6.85e-01     2.54e-01\n940  -3.97e-01 -5.35e-01 -2.34e-01     7.64e-01     3.39e-01\n941  -3.91e-01 -5.50e-01 -2.08e-01     5.95e-01     1.77e-01\n942  -8.19e-02 -3.84e-01 -1.82e-02     9.84e-01     9.01e-01\n943  -3.53e-01 -5.10e-01 -1.58e-01     8.59e-01     4.96e-01\n944  -3.62e-01 -5.43e-01 -1.66e-01     8.57e-01     4.81e-01\n945  -1.08e-01 -4.61e-01 -2.40e-02     9.78e-01     8.68e-01\n946  -1.28e-01 -4.08e-01 -3.25e-02     9.73e-01     8.43e-01\n947  -3.50e-01 -5.27e-01 -1.42e-01     8.65e-01     5.04e-01\n948  -2.83e-01 -5.67e-01 -9.27e-02     9.18e-01     6.33e-01\n949  -3.21e-01 -5.54e-01 -1.21e-01     8.96e-01     5.67e-01\n950  -4.01e-01 -8.41e-01 -6.43e-04     4.16e-01     6.14e-03\n951  -1.40e-01 -7.96e-01 -1.16e-04     1.43e-01     1.18e-03\n952  -1.02e-01 -6.72e-01 -9.30e-05     1.05e-01     9.36e-04\n953  -1.21e-01 -7.42e-01 -9.37e-05     1.23e-01     9.84e-04\n954  -5.99e-03 -2.79e-01 -3.71e-06     6.08e-03     4.19e-05\n955  -2.15e-01 -9.05e-01 -1.86e-04     2.17e-01     1.88e-03\n956  -4.64e-01 -8.29e-01 -1.25e-03     4.93e-01     1.08e-02\n957  -1.13e-01 -7.78e-01 -8.91e-05     1.15e-01     9.43e-04\n958  -1.48e-01 -8.94e-01 -1.29e-04     1.50e-01     1.16e-03\n959  -2.29e-01 -8.94e-01 -1.89e-04     2.33e-01     2.05e-03\n960  -1.89e-01 -8.25e-01 -1.60e-04     1.93e-01     1.72e-03\n961  -7.63e-02 -8.01e-01 -5.29e-05     7.72e-02     5.64e-04\n962  -8.62e-02 -7.92e-01 -6.40e-05     8.74e-02     6.44e-04\n963  -2.67e-01 -4.27e-01 -1.23e-01     9.03e-01     6.26e-01\n964  -2.96e-01 -4.53e-01 -1.41e-01     8.83e-01     5.75e-01\n965  -3.74e-01 -5.07e-01 -2.17e-01     7.26e-01     3.30e-01\n966  -3.75e-01 -5.13e-01 -2.22e-01     7.85e-01     3.89e-01\n967  -3.98e-01 -5.71e-01 -2.34e-01     6.60e-01     2.38e-01\n968  -5.68e-02 -1.75e-01 -1.53e-02     9.88e-01     9.30e-01\n969  -3.11e-01 -4.63e-01 -1.52e-01     8.71e-01     5.51e-01\n970  -3.07e-01 -4.65e-01 -1.53e-01     8.78e-01     5.60e-01\n971  -8.03e-02 -2.35e-01 -2.37e-02     9.84e-01     9.02e-01\n972  -9.44e-02 -2.44e-01 -3.01e-02     9.78e-01     8.81e-01\n973  -3.13e-01 -4.70e-01 -1.51e-01     8.79e-01     5.55e-01\n974  -2.34e-01 -4.23e-01 -9.60e-02     9.33e-01     6.94e-01\n975  -2.69e-01 -4.44e-01 -1.21e-01     9.13e-01     6.37e-01\n976  -1.28e-01 -4.72e-01 -8.64e-03     1.30e-01     8.86e-04\n977  -2.99e-02 -1.86e-01 -1.63e-03     3.04e-02     1.74e-04\n978  -2.27e-02 -1.33e-01 -1.25e-03     2.30e-02     1.38e-04\n979  -2.58e-02 -1.57e-01 -1.40e-03     2.62e-02     1.43e-04\n980  -1.10e-03 -8.63e-03 -5.32e-05     1.11e-03     5.99e-06\n981  -4.83e-02 -2.73e-01 -2.62e-03     4.89e-02     2.77e-04\n982  -2.03e-01 -5.67e-01 -1.56e-02     2.08e-01     1.65e-03\n983  -2.33e-02 -1.48e-01 -1.26e-03     2.36e-02     1.33e-04\n984  -3.12e-02 -1.88e-01 -1.73e-03     3.16e-02     1.79e-04\n985  -5.11e-02 -2.86e-01 -2.77e-03     5.21e-02     2.98e-04\n986  -4.39e-02 -2.44e-01 -2.37e-03     4.46e-02     2.49e-04\n987  -1.47e-02 -1.06e-01 -7.73e-04     1.49e-02     7.93e-05\n988  -1.70e-02 -1.14e-01 -9.05e-04     1.72e-02     9.46e-05\n989  -2.88e-01 -4.46e-01 -1.30e-01     9.05e-01     6.11e-01\n990  -3.27e-01 -4.82e-01 -1.65e-01     8.76e-01     5.37e-01\n991  -3.98e-01 -5.33e-01 -2.25e-01     7.04e-01     2.81e-01\n992  -3.80e-01 -5.05e-01 -2.30e-01     8.09e-01     4.08e-01\n993  -4.01e-01 -5.32e-01 -2.31e-01     6.55e-01     2.33e-01\n994  -6.15e-02 -1.80e-01 -1.82e-02     9.87e-01     9.24e-01\n995  -3.20e-01 -4.63e-01 -1.61e-01     8.82e-01     5.53e-01\n996  -3.26e-01 -4.71e-01 -1.67e-01     8.79e-01     5.41e-01\n997  -7.46e-02 -2.05e-01 -2.20e-02     9.84e-01     9.08e-01\n998  -9.66e-02 -2.38e-01 -3.13e-02     9.79e-01     8.80e-01\n999  -3.04e-01 -4.61e-01 -1.40e-01     8.96e-01     5.83e-01\n1000 -2.23e-01 -4.01e-01 -8.98e-02     9.39e-01     7.12e-01\n1001 -2.66e-01 -4.35e-01 -1.19e-01     9.18e-01     6.47e-01\n1002 -4.01e-01 -6.91e-01 -1.20e-01     4.12e-01     4.74e-03\n1003 -1.38e-01 -3.94e-01 -2.65e-02     1.40e-01     9.42e-04\n1004 -1.03e-01 -3.13e-01 -2.12e-02     1.05e-01     7.41e-04\n1005 -1.13e-01 -3.40e-01 -2.20e-02     1.15e-01     7.89e-04\n1006 -5.74e-03 -2.70e-02 -8.78e-04     5.82e-03     3.34e-05\n1007 -2.11e-01 -5.37e-01 -4.16e-02     2.13e-01     1.48e-03\n1008 -4.75e-01 -7.30e-01 -1.82e-01     4.97e-01     8.76e-03\n1009 -1.10e-01 -3.41e-01 -2.10e-02     1.11e-01     7.14e-04\n1010 -1.41e-01 -4.30e-01 -2.70e-02     1.43e-01     9.35e-04\n1011 -2.21e-01 -5.49e-01 -4.39e-02     2.25e-01     1.60e-03\n1012 -1.80e-01 -4.69e-01 -3.70e-02     1.84e-01     1.34e-03\n1013 -7.36e-02 -2.67e-01 -1.27e-02     7.46e-02     4.47e-04\n1014 -8.26e-02 -2.87e-01 -1.53e-02     8.40e-02     5.05e-04\n1015 -2.88e-01 -4.46e-01 -1.33e-01     9.05e-01     6.10e-01\n1016 -3.27e-01 -4.79e-01 -1.64e-01     8.77e-01     5.39e-01\n1017 -3.99e-01 -5.32e-01 -2.35e-01     7.01e-01     2.77e-01\n1018 -3.80e-01 -5.03e-01 -2.27e-01     8.07e-01     4.08e-01\n1019 -4.01e-01 -5.29e-01 -2.30e-01     6.54e-01     2.33e-01\n1020 -6.09e-02 -1.84e-01 -1.77e-02     9.87e-01     9.25e-01\n1021 -3.22e-01 -4.65e-01 -1.60e-01     8.83e-01     5.52e-01\n1022 -3.27e-01 -4.73e-01 -1.67e-01     8.79e-01     5.38e-01\n1023 -7.40e-02 -2.10e-01 -2.19e-02     9.84e-01     9.09e-01\n1024 -9.61e-02 -2.40e-01 -3.03e-02     9.79e-01     8.81e-01\n1025 -3.06e-01 -4.62e-01 -1.40e-01     8.95e-01     5.81e-01\n1026 -2.22e-01 -4.04e-01 -8.82e-02     9.39e-01     7.14e-01\n1027 -2.66e-01 -4.33e-01 -1.16e-01     9.18e-01     6.45e-01\n1028 -4.02e-01 -8.44e-01 -3.73e-04     4.16e-01     5.68e-03\n1029 -1.41e-01 -7.86e-01 -6.85e-05     1.43e-01     1.09e-03\n1030 -1.04e-01 -6.52e-01 -5.60e-05     1.05e-01     8.92e-04\n1031 -1.20e-01 -7.38e-01 -5.28e-05     1.22e-01     9.18e-04\n1032 -6.27e-03 -2.80e-01 -2.48e-06     6.31e-03     3.96e-05\n1033 -2.19e-01 -9.02e-01 -1.09e-04     2.22e-01     1.76e-03\n1034 -4.73e-01 -8.30e-01 -7.30e-04     5.04e-01     1.03e-02\n1035 -1.14e-01 -7.73e-01 -5.29e-05     1.17e-01     8.48e-04\n1036 -1.52e-01 -8.86e-01 -6.98e-05     1.55e-01     1.15e-03\n1037 -2.36e-01 -8.94e-01 -1.06e-04     2.39e-01     1.94e-03\n1038 -1.92e-01 -8.25e-01 -1.03e-04     1.95e-01     1.61e-03\n1039 -7.75e-02 -7.95e-01 -3.35e-05     7.81e-02     5.28e-04\n1040 -8.84e-02 -7.90e-01 -4.08e-05     8.93e-02     6.16e-04\n1041 -2.53e-01 -4.25e-01 -1.07e-01     9.17e-01     6.58e-01\n1042 -3.07e-01 -4.75e-01 -1.42e-01     8.97e-01     5.79e-01\n1043 -3.80e-01 -5.23e-01 -2.20e-01     7.51e-01     3.44e-01\n1044 -3.79e-01 -5.22e-01 -2.22e-01     8.15e-01     4.12e-01\n1045 -4.79e-01 -6.88e-01 -2.72e-01     6.83e-01     1.72e-01\n1046 -8.86e-02 -2.85e-01 -2.37e-02     9.89e-01     8.99e-01\n1047 -2.92e-01 -4.56e-01 -1.31e-01     8.90e-01     5.86e-01\n1048 -3.21e-01 -5.00e-01 -1.52e-01     8.93e-01     5.58e-01\n1049 -1.24e-01 -3.74e-01 -3.48e-02     9.85e-01     8.58e-01\n1050 -1.17e-01 -3.09e-01 -3.57e-02     9.81e-01     8.61e-01\n1051 -3.09e-01 -4.78e-01 -1.44e-01     8.98e-01     5.77e-01\n1052 -2.81e-01 -5.36e-01 -1.07e-01     9.42e-01     6.51e-01\n1053 -3.00e-01 -5.19e-01 -1.32e-01     9.24e-01     6.13e-01\n1054 -3.95e-01 -5.63e-01 -1.29e-01     5.89e-01     1.78e-01\n1055 -3.10e-01 -5.84e-01 -4.14e-02     3.93e-01     7.59e-02\n1056 -1.77e-01 -4.47e-01 -2.69e-02     2.19e-01     3.85e-02\n1057 -2.77e-01 -5.54e-01 -3.38e-02     3.44e-01     6.36e-02\n1058 -4.07e-02 -2.57e-01 -1.17e-03     4.63e-02     4.47e-03\n1059 -4.69e-01 -7.38e-01 -4.17e-02     6.78e-01     1.70e-01\n1060 -3.89e-01 -5.31e-01 -1.70e-01     5.91e-01     1.85e-01\n1061 -3.03e-01 -5.90e-01 -3.04e-02     3.76e-01     6.75e-02\n1062 -4.49e-01 -7.50e-01 -2.87e-02     5.93e-01     1.18e-01\n1063 -4.62e-01 -7.11e-01 -4.55e-02     6.73e-01     1.72e-01\n1064 -3.83e-01 -6.20e-01 -5.73e-02     5.03e-01     1.12e-01\n1065 -3.16e-01 -6.82e-01 -1.70e-02     3.79e-01     5.57e-02\n1066 -3.21e-01 -6.51e-01 -1.99e-02     3.88e-01     6.14e-02\n1067 -4.15e-01 -6.11e-01 -2.36e-01     5.90e-01     1.47e-01\n1068 -3.17e-01 -5.42e-01 -1.30e-01     3.99e-01     6.40e-02\n1069 -2.18e-01 -4.09e-01 -8.01e-02     2.61e-01     3.71e-02\n1070 -2.35e-01 -4.36e-01 -9.28e-02     2.84e-01     4.18e-02\n1071 -3.04e-02 -1.11e-01 -5.84e-03     3.55e-02     3.30e-03\n1072 -4.43e-01 -7.00e-01 -1.30e-01     6.21e-01     1.32e-01\n1073 -3.90e-01 -5.63e-01 -2.11e-01     5.52e-01     1.41e-01\n1074 -2.86e-01 -5.07e-01 -1.06e-01     3.54e-01     5.26e-02\n1075 -3.83e-01 -6.47e-01 -1.11e-01     5.11e-01     8.58e-02\n1076 -4.38e-01 -6.86e-01 -1.59e-01     6.16e-01     1.31e-01\n1077 -3.32e-01 -5.47e-01 -1.44e-01     4.24e-01     7.35e-02\n1078 -2.52e-01 -5.02e-01 -7.47e-02     3.10e-01     4.00e-02\n1079 -2.64e-01 -4.99e-01 -8.40e-02     3.22e-01     4.49e-02\n1080 -2.43e-01 -4.29e-01 -9.13e-02     3.26e-01     7.63e-02\n1081 -1.99e-01 -4.04e-01 -6.72e-02     2.59e-01     5.38e-02\n1082 -7.96e-02 -2.20e-01 -2.25e-02     1.00e-01     1.92e-02\n1083 -1.44e-01 -3.23e-01 -4.54e-02     1.82e-01     3.37e-02\n1084 -7.54e-02 -2.09e-01 -2.13e-02     8.96e-02     1.29e-02\n1085 -4.09e-01 -7.50e-01 -1.95e-01     7.95e-01     3.43e-01\n1086 -2.11e-01 -3.96e-01 -7.71e-02     2.79e-01     6.28e-02\n1087 -2.07e-01 -4.05e-01 -7.22e-02     2.66e-01     5.37e-02\n1088 -4.24e-01 -7.49e-01 -2.24e-01     7.71e-01     2.98e-01\n1089 -4.10e-01 -6.77e-01 -2.33e-01     7.05e-01     2.52e-01\n1090 -2.39e-01 -4.38e-01 -8.42e-02     3.11e-01     6.64e-02\n1091 -3.33e-01 -5.55e-01 -1.46e-01     4.49e-01     1.00e-01\n1092 -2.83e-01 -4.89e-01 -1.14e-01     3.72e-01     7.83e-02\n1093 -3.88e-01 -5.43e-01 -1.53e-01     6.06e-01     1.95e-01\n1094 -3.22e-01 -5.53e-01 -7.93e-02     4.34e-01     1.06e-01\n1095 -1.68e-01 -4.25e-01 -3.07e-02     2.10e-01     4.02e-02\n1096 -3.43e-01 -5.41e-01 -9.21e-02     4.63e-01     1.13e-01\n1097 -8.66e-02 -3.52e-01 -5.20e-03     9.98e-02     1.23e-02\n1098 -4.25e-01 -6.54e-01 -1.09e-01     8.18e-01     3.45e-01\n1099 -3.88e-01 -5.27e-01 -1.81e-01     6.18e-01     2.08e-01\n1100 -3.40e-01 -5.65e-01 -7.93e-02     4.58e-01     1.11e-01\n1101 -4.52e-01 -6.95e-01 -7.81e-02     7.93e-01     2.84e-01\n1102 -4.23e-01 -6.38e-01 -1.25e-01     8.03e-01     3.37e-01\n1103 -4.19e-01 -5.85e-01 -1.35e-01     6.49e-01     2.08e-01\n1104 -4.32e-01 -6.70e-01 -5.22e-02     5.94e-01     1.43e-01\n1105 -4.07e-01 -6.30e-01 -6.86e-02     5.60e-01     1.38e-01\n1106 -3.53e-01 -4.86e-01 -2.00e-01     8.51e-01     4.84e-01\n1107 -3.71e-01 -4.98e-01 -2.24e-01     8.27e-01     4.42e-01\n1108 -3.95e-01 -5.19e-01 -2.38e-01     6.33e-01     2.21e-01\n1109 -4.00e-01 -5.22e-01 -2.52e-01     6.80e-01     2.57e-01\n1110 -3.66e-01 -5.16e-01 -1.85e-01     5.33e-01     1.55e-01\n1111 -8.94e-02 -2.38e-01 -2.75e-02     9.80e-01     8.89e-01\n1112 -3.84e-01 -5.05e-01 -2.38e-01     8.03e-01     4.01e-01\n1113 -3.79e-01 -5.02e-01 -2.31e-01     8.14e-01     4.16e-01\n1114 -1.28e-01 -2.95e-01 -4.03e-02     9.71e-01     8.41e-01\n1115 -1.50e-01 -3.22e-01 -5.47e-02     9.63e-01     8.11e-01\n1116 -3.83e-01 -5.09e-01 -2.34e-01     8.06e-01     4.03e-01\n1117 -3.18e-01 -4.70e-01 -1.59e-01     8.88e-01     5.61e-01\n1118 -3.48e-01 -4.89e-01 -1.96e-01     8.58e-01     4.98e-01\n1119 -3.17e-01 -6.66e-01 -1.07e-01     8.88e-01     5.56e-01\n1120 -3.82e-01 -7.65e-01 -1.39e-01     8.36e-01     4.20e-01\n1121 -3.72e-01 -6.48e-01 -1.59e-01     6.16e-01     2.04e-01\n1122 -4.05e-01 -7.63e-01 -1.76e-01     8.20e-01     3.80e-01\n1123 -4.23e-01 -7.03e-01 -2.08e-01     5.94e-01     1.23e-01\n1124 -1.32e-01 -8.71e-01 -1.82e-02     9.82e-01     8.44e-01\n1125 -3.21e-01 -5.96e-01 -1.20e-01     8.80e-01     5.45e-01\n1126 -3.86e-01 -7.93e-01 -1.45e-01     8.52e-01     4.32e-01\n1127 -1.43e-01 -8.92e-01 -1.99e-02     9.83e-01     8.34e-01\n1128 -1.61e-01 -8.54e-01 -2.67e-02     9.75e-01     8.05e-01\n1129 -3.29e-01 -8.10e-01 -9.77e-02     9.10e-01     5.57e-01\n1130 -3.15e-01 -8.73e-01 -7.47e-02     9.39e-01     6.08e-01\n1131 -3.46e-01 -8.50e-01 -1.00e-01     9.14e-01     5.50e-01\n1132 -3.94e-01 -8.42e-01 -6.70e-04     4.08e-01     5.59e-03\n1133 -1.37e-01 -7.97e-01 -1.18e-04     1.40e-01     1.14e-03\n1134 -9.90e-02 -6.52e-01 -9.23e-05     1.01e-01     8.96e-04\n1135 -1.14e-01 -7.40e-01 -1.01e-04     1.16e-01     9.11e-04\n1136 -5.92e-03 -2.93e-01 -4.22e-06     5.98e-03     3.87e-05\n1137 -2.11e-01 -9.12e-01 -1.78e-04     2.14e-01     1.86e-03\n1138 -4.64e-01 -8.30e-01 -1.23e-03     4.92e-01     1.05e-02\n1139 -1.11e-01 -7.87e-01 -9.17e-05     1.13e-01     8.71e-04\n1140 -1.45e-01 -8.96e-01 -1.09e-04     1.47e-01     1.11e-03\n1141 -2.28e-01 -8.99e-01 -2.05e-04     2.31e-01     1.93e-03\n1142 -1.86e-01 -8.26e-01 -1.66e-04     1.91e-01     1.62e-03\n1143 -7.41e-02 -8.18e-01 -5.80e-05     7.52e-02     5.20e-04\n1144 -8.56e-02 -8.02e-01 -6.59e-05     8.70e-02     6.32e-04\n1145 -3.61e-01 -5.39e-01 -1.71e-01     8.52e-01     4.78e-01\n1146 -3.93e-01 -5.69e-01 -2.13e-01     8.00e-01     3.84e-01\n1147 -3.74e-01 -5.30e-01 -1.79e-01     5.61e-01     1.68e-01\n1148 -4.03e-01 -5.37e-01 -2.52e-01     7.43e-01     3.12e-01\n1149 -3.66e-01 -5.25e-01 -1.77e-01     5.20e-01     1.38e-01\n1150 -1.12e-01 -4.53e-01 -2.66e-02     9.77e-01     8.63e-01\n1151 -3.76e-01 -5.27e-01 -1.95e-01     8.30e-01     4.40e-01\n1152 -3.93e-01 -5.66e-01 -2.11e-01     8.09e-01     3.96e-01\n1153 -1.21e-01 -5.00e-01 -2.91e-02     9.75e-01     8.51e-01\n1154 -1.56e-01 -4.47e-01 -4.42e-02     9.65e-01     8.06e-01\n1155 -3.57e-01 -5.29e-01 -1.53e-01     8.57e-01     4.89e-01\n1156 -2.99e-01 -5.80e-01 -1.09e-01     9.09e-01     6.03e-01\n1157 -3.46e-01 -5.68e-01 -1.50e-01     8.79e-01     5.21e-01\n1158 -3.24e-01 -4.69e-01 -1.66e-01     8.81e-01     5.47e-01\n1159 -3.46e-01 -4.87e-01 -1.90e-01     8.58e-01     5.00e-01\n1160 -4.00e-01 -5.21e-01 -2.53e-01     6.86e-01     2.64e-01\n1161 -3.99e-01 -5.22e-01 -2.60e-01     7.33e-01     3.09e-01\n1162 -3.86e-01 -5.26e-01 -2.08e-01     5.94e-01     1.89e-01\n1163 -7.40e-02 -2.00e-01 -2.16e-02     9.84e-01     9.09e-01\n1164 -3.64e-01 -4.91e-01 -2.08e-01     8.39e-01     4.61e-01\n1165 -3.58e-01 -4.90e-01 -2.02e-01     8.50e-01     4.79e-01\n1166 -1.03e-01 -2.58e-01 -3.21e-02     9.77e-01     8.72e-01\n1167 -1.24e-01 -2.86e-01 -4.21e-02     9.71e-01     8.45e-01\n1168 -3.62e-01 -4.93e-01 -2.00e-01     8.43e-01     4.66e-01\n1169 -2.82e-01 -4.51e-01 -1.30e-01     9.09e-01     6.21e-01\n1170 -3.21e-01 -4.68e-01 -1.58e-01     8.86e-01     5.56e-01\n1171 -3.71e-01 -5.90e-01 -1.62e-01     8.67e-01     4.81e-01\n1172 -4.28e-01 -6.56e-01 -2.23e-01     7.89e-01     3.26e-01\n1173 -3.91e-01 -5.70e-01 -1.80e-01     5.70e-01     1.57e-01\n1174 -4.32e-01 -6.49e-01 -2.55e-01     7.58e-01     2.92e-01\n1175 -2.81e-01 -5.31e-01 -7.39e-02     3.49e-01     5.56e-02\n1176 -2.40e-01 -7.35e-01 -4.34e-02     9.56e-01     7.07e-01\n1177 -3.71e-01 -5.48e-01 -1.72e-01     8.60e-01     4.76e-01\n1178 -4.34e-01 -6.69e-01 -2.33e-01     7.92e-01     3.28e-01\n1179 -2.83e-01 -7.58e-01 -4.73e-02     9.45e-01     6.46e-01\n1180 -2.60e-01 -7.24e-01 -6.13e-02     9.48e-01     6.81e-01\n1181 -3.90e-01 -6.80e-01 -1.57e-01     8.66e-01     4.58e-01\n1182 -4.13e-01 -7.35e-01 -1.37e-01     8.62e-01     4.18e-01\n1183 -4.25e-01 -7.19e-01 -1.69e-01     8.42e-01     3.87e-01\n1184 -3.85e-01 -8.47e-01 -3.82e-04     3.96e-01     5.44e-03\n1185 -1.29e-01 -8.00e-01 -8.05e-05     1.31e-01     1.05e-03\n1186 -9.45e-02 -6.70e-01 -7.18e-05     9.52e-02     8.39e-04\n1187 -1.11e-01 -7.48e-01 -8.25e-05     1.13e-01     8.92e-04\n1188 -5.50e-03 -3.09e-01 -3.10e-06     5.61e-03     3.62e-05\n1189 -2.09e-01 -9.08e-01 -1.41e-04     2.13e-01     1.71e-03\n1190 -4.58e-01 -8.27e-01 -8.97e-04     4.84e-01     9.67e-03\n1191 -1.08e-01 -7.91e-01 -5.76e-05     1.09e-01     8.05e-04\n1192 -1.37e-01 -8.97e-01 -9.14e-05     1.40e-01     1.01e-03\n1193 -2.14e-01 -9.01e-01 -1.58e-04     2.17e-01     1.79e-03\n1194 -1.80e-01 -8.31e-01 -1.40e-04     1.83e-01     1.55e-03\n1195 -7.16e-02 -8.16e-01 -4.01e-05     7.23e-02     4.96e-04\n1196 -8.13e-02 -8.10e-01 -4.42e-05     8.24e-02     5.77e-04\n1197 -3.87e-01 -5.25e-01 -2.13e-01     8.13e-01     4.10e-01\n1198 -4.02e-01 -5.45e-01 -2.42e-01     7.79e-01     3.53e-01\n1199 -3.74e-01 -5.11e-01 -2.14e-01     5.56e-01     1.66e-01\n1200 -3.90e-01 -5.23e-01 -2.39e-01     6.19e-01     2.06e-01\n1201 -3.31e-01 -4.94e-01 -1.53e-01     4.48e-01     1.10e-01\n1202 -1.30e-01 -4.33e-01 -3.34e-02     9.72e-01     8.39e-01\n1203 -4.00e-01 -5.26e-01 -2.51e-01     7.58e-01     3.35e-01\n1204 -4.05e-01 -5.48e-01 -2.50e-01     7.65e-01     3.41e-01\n1205 -1.73e-01 -4.99e-01 -4.88e-02     9.60e-01     7.83e-01\n1206 -1.99e-01 -4.73e-01 -6.50e-02     9.51e-01     7.47e-01\n1207 -3.98e-01 -5.37e-01 -2.45e-01     7.61e-01     3.38e-01\n1208 -3.67e-01 -5.71e-01 -1.74e-01     8.53e-01     4.72e-01\n1209 -3.89e-01 -5.62e-01 -2.12e-01     8.17e-01     4.11e-01\n1210 -2.76e-01 -4.53e-01 -1.21e-01     8.91e-01     6.01e-01\n1211 -3.56e-01 -5.43e-01 -1.65e-01     8.37e-01     4.52e-01\n1212 -3.64e-01 -5.50e-01 -1.09e-01     6.09e-01     2.23e-01\n1213 -3.88e-01 -5.49e-01 -2.21e-01     8.39e-01     4.28e-01\n1214 -4.87e-01 -7.12e-01 -2.07e-01     6.10e-01     1.00e-01\n1215 -1.56e-01 -4.15e-01 -4.63e-02     9.83e-01     8.23e-01\n1216 -2.84e-01 -4.51e-01 -1.30e-01     8.85e-01     5.91e-01\n1217 -3.68e-01 -5.52e-01 -1.84e-01     8.57e-01     4.65e-01\n1218 -1.99e-01 -5.12e-01 -5.45e-02     9.85e-01     7.81e-01\n1219 -1.71e-01 -4.05e-01 -5.67e-02     9.77e-01     8.01e-01\n1220 -3.04e-01 -4.97e-01 -1.35e-01     9.21e-01     6.07e-01\n1221 -3.61e-01 -6.39e-01 -1.45e-01     9.47e-01     5.74e-01\n1222 -3.61e-01 -6.04e-01 -1.68e-01     9.22e-01     5.45e-01\n1223 -3.13e-01 -4.76e-01 -1.53e-01     8.88e-01     5.66e-01\n1224 -3.64e-01 -5.19e-01 -1.97e-01     8.37e-01     4.49e-01\n1225 -3.91e-01 -5.46e-01 -1.74e-01     6.24e-01     2.11e-01\n1226 -3.84e-01 -5.08e-01 -2.34e-01     8.03e-01     3.99e-01\n1227 -3.80e-01 -5.67e-01 -1.06e-01     5.38e-01     1.42e-01\n1228 -1.06e-01 -2.98e-01 -3.09e-02     9.78e-01     8.66e-01\n1229 -3.27e-01 -4.74e-01 -1.66e-01     8.76e-01     5.39e-01\n1230 -3.59e-01 -5.08e-01 -1.93e-01     8.46e-01     4.69e-01\n1231 -1.21e-01 -3.41e-01 -3.46e-02     9.76e-01     8.49e-01\n1232 -1.33e-01 -3.18e-01 -4.47e-02     9.70e-01     8.33e-01\n1233 -3.07e-01 -4.66e-01 -1.42e-01     8.96e-01     5.81e-01\n1234 -2.72e-01 -4.86e-01 -1.09e-01     9.23e-01     6.38e-01\n1235 -3.06e-01 -4.86e-01 -1.39e-01     9.00e-01     5.82e-01\n1236 -3.95e-01 -5.15e-01 -2.62e-01     7.62e-01     3.44e-01\n1237 -4.03e-01 -5.26e-01 -2.52e-01     7.09e-01     2.83e-01\n1238 -3.34e-01 -4.94e-01 -1.39e-01     4.67e-01     1.23e-01\n1239 -3.72e-01 -5.17e-01 -1.86e-01     5.52e-01     1.66e-01\n1240 -2.62e-01 -4.75e-01 -6.74e-02     3.36e-01     6.95e-02\n1241 -1.89e-01 -4.05e-01 -6.40e-02     9.55e-01     7.59e-01\n1242 -4.00e-01 -5.19e-01 -2.58e-01     7.04e-01     2.82e-01\n1243 -4.03e-01 -5.23e-01 -2.52e-01     6.99e-01     2.70e-01\n1244 -2.40e-01 -4.60e-01 -8.65e-02     9.38e-01     6.86e-01\n1245 -2.53e-01 -4.41e-01 -1.03e-01     9.29e-01     6.70e-01\n1246 -4.01e-01 -5.29e-01 -2.52e-01     7.11e-01     2.82e-01\n1247 -3.94e-01 -5.36e-01 -2.19e-01     7.99e-01     3.82e-01\n1248 -4.03e-01 -5.32e-01 -2.46e-01     7.60e-01     3.32e-01\n1249 -4.04e-01 -8.43e-01 -7.47e-04     4.19e-01     5.94e-03\n1250 -1.47e-01 -7.88e-01 -1.29e-04     1.49e-01     1.19e-03\n1251 -1.07e-01 -6.62e-01 -1.20e-04     1.09e-01     9.44e-04\n1252 -1.21e-01 -7.37e-01 -1.14e-04     1.23e-01     9.92e-04\n1253 -6.49e-03 -2.72e-01 -4.95e-06     6.54e-03     4.05e-05\n1254 -2.26e-01 -9.07e-01 -2.07e-04     2.30e-01     1.81e-03\n1255 -4.71e-01 -8.26e-01 -1.29e-03     4.98e-01     1.12e-02\n1256 -1.20e-01 -7.81e-01 -9.92e-05     1.22e-01     9.13e-04\n1257 -1.57e-01 -8.96e-01 -1.42e-04     1.60e-01     1.19e-03\n1258 -2.36e-01 -8.98e-01 -2.04e-04     2.43e-01     2.02e-03\n1259 -1.97e-01 -8.30e-01 -2.03e-04     2.01e-01     1.72e-03\n1260 -8.00e-02 -8.00e-01 -7.03e-05     8.14e-02     5.58e-04\n1261 -9.27e-02 -7.97e-01 -7.05e-05     9.39e-02     6.53e-04\n1262 -5.55e-01 -7.60e-01 -3.28e-01     8.51e-01     2.59e-01\n1263 -6.61e-01 -8.29e-01 -3.20e-01     7.75e-01     8.36e-02\n1264 -5.09e-01 -7.52e-01 -1.84e-01     5.84e-01     5.98e-02\n1265 -5.91e-01 -7.97e-01 -2.47e-01     6.76e-01     6.69e-02\n1266 -2.76e-01 -6.80e-01 -2.62e-02     2.80e-01     3.51e-03\n1267 -7.63e-01 -9.07e-01 -4.41e-01     9.43e-01     1.40e-01\n1268 -4.85e-01 -6.90e-01 -2.85e-01     8.28e-01     3.05e-01\n1269 -6.67e-01 -8.41e-01 -3.01e-01     7.59e-01     6.75e-02\n1270 -7.87e-01 -9.14e-01 -3.93e-01     9.22e-01     9.18e-02\n1271 -7.48e-01 -8.91e-01 -4.37e-01     9.31e-01     1.46e-01\n1272 -6.56e-01 -8.31e-01 -3.62e-01     8.03e-01     1.13e-01\n1273 -7.38e-01 -8.92e-01 -2.53e-01     8.06e-01     4.52e-02\n1274 -7.12e-01 -8.74e-01 -2.65e-01     7.87e-01     5.19e-02\n1275 -4.12e-01 -5.73e-01 -2.43e-01     7.96e-01     3.59e-01\n1276 -4.32e-01 -6.30e-01 -2.73e-01     7.13e-01     2.47e-01\n1277 -3.49e-01 -5.27e-01 -1.58e-01     4.72e-01     1.12e-01\n1278 -4.11e-01 -5.86e-01 -2.57e-01     6.23e-01     1.84e-01\n1279 -2.31e-01 -4.60e-01 -6.17e-02     2.79e-01     4.10e-02\n1280 -2.83e-01 -7.35e-01 -7.03e-02     9.40e-01     6.46e-01\n1281 -4.10e-01 -5.43e-01 -2.58e-01     7.61e-01     3.29e-01\n1282 -4.37e-01 -6.35e-01 -2.80e-01     7.10e-01     2.40e-01\n1283 -3.32e-01 -7.47e-01 -7.97e-02     9.23e-01     5.68e-01\n1284 -3.20e-01 -7.16e-01 -9.72e-02     9.23e-01     5.91e-01\n1285 -4.25e-01 -6.30e-01 -2.53e-01     7.66e-01     3.11e-01\n1286 -4.43e-01 -6.98e-01 -2.06e-01     7.93e-01     3.18e-01\n1287 -4.45e-01 -6.73e-01 -2.42e-01     7.69e-01     2.92e-01\n1288 -5.21e-01 -7.59e-01 -2.87e-01     6.64e-01     1.04e-01\n1289 -4.75e-01 -7.08e-01 -2.20e-01     5.28e-01     3.07e-02\n1290 -2.60e-01 -5.14e-01 -7.94e-02     2.89e-01     1.91e-02\n1291 -4.34e-01 -6.74e-01 -2.14e-01     4.76e-01     2.55e-02\n1292 -1.22e-01 -3.46e-01 -3.27e-02     1.25e-01     1.29e-03\n1293 -7.56e-01 -9.03e-01 -3.93e-01     8.56e-01     5.63e-02\n1294 -4.78e-01 -7.25e-01 -2.76e-01     6.46e-01     1.30e-01\n1295 -4.84e-01 -7.14e-01 -2.44e-01     5.31e-01     2.51e-02\n1296 -7.39e-01 -8.95e-01 -4.15e-01     8.21e-01     3.57e-02\n1297 -7.34e-01 -8.88e-01 -3.97e-01     8.36e-01     5.87e-02\n1298 -5.71e-01 -7.86e-01 -3.28e-01     6.49e-01     4.60e-02\n1299 -5.86e-01 -7.99e-01 -3.02e-01     6.29e-01     1.72e-02\n1300 -5.58e-01 -7.69e-01 -2.93e-01     6.01e-01     1.93e-02\n1301 -2.69e-01 -6.82e-01 -7.85e-02     9.22e-01     6.43e-01\n1302 -3.44e-01 -8.04e-01 -1.06e-01     8.97e-01     5.25e-01\n1303 -4.02e-01 -7.08e-01 -1.93e-01     7.50e-01     3.03e-01\n1304 -3.99e-01 -7.78e-01 -1.58e-01     8.41e-01     4.02e-01\n1305 -4.56e-01 -7.58e-01 -2.33e-01     6.75e-01     1.56e-01\n1306 -9.95e-02 -8.67e-01 -1.22e-02     9.88e-01     8.85e-01\n1307 -2.94e-01 -5.83e-01 -9.47e-02     9.04e-01     5.99e-01\n1308 -3.55e-01 -8.21e-01 -1.12e-01     8.97e-01     5.13e-01\n1309 -1.31e-01 -8.89e-01 -1.67e-02     9.85e-01     8.47e-01\n1310 -1.35e-01 -8.60e-01 -2.17e-02     9.81e-01     8.40e-01\n1311 -3.24e-01 -8.02e-01 -8.97e-02     9.15e-01     5.68e-01\n1312 -2.99e-01 -8.75e-01 -6.26e-02     9.46e-01     6.31e-01\n1313 -3.25e-01 -8.58e-01 -8.19e-02     9.30e-01     5.83e-01\n1314 -2.74e-01 -4.81e-01 -9.42e-02     9.18e-01     6.37e-01\n1315 -3.19e-01 -5.43e-01 -1.22e-01     8.93e-01     5.65e-01\n1316 -3.99e-01 -5.45e-01 -2.24e-01     7.43e-01     3.13e-01\n1317 -3.78e-01 -5.35e-01 -1.74e-01     8.29e-01     4.31e-01\n1318 -4.03e-01 -5.75e-01 -2.12e-01     6.70e-01     2.28e-01\n1319 -6.29e-02 -3.90e-01 -1.28e-02     9.88e-01     9.24e-01\n1320 -3.08e-01 -4.91e-01 -1.10e-01     8.98e-01     5.82e-01\n1321 -3.25e-01 -5.46e-01 -1.22e-01     8.91e-01     5.57e-01\n1322 -7.95e-02 -4.75e-01 -1.60e-02     9.84e-01     9.04e-01\n1323 -9.67e-02 -3.88e-01 -2.21e-02     9.80e-01     8.82e-01\n1324 -2.97e-01 -5.09e-01 -9.41e-02     9.06e-01     6.03e-01\n1325 -2.28e-01 -5.72e-01 -6.28e-02     9.42e-01     7.10e-01\n1326 -2.68e-01 -5.63e-01 -8.42e-02     9.25e-01     6.52e-01\n1327 -2.71e-01 -6.77e-01 -8.33e-02     9.23e-01     6.41e-01\n1328 -3.44e-01 -8.06e-01 -1.09e-01     8.98e-01     5.29e-01\n1329 -4.00e-01 -7.15e-01 -1.97e-01     7.52e-01     3.04e-01\n1330 -3.98e-01 -7.78e-01 -1.61e-01     8.41e-01     4.05e-01\n1331 -4.55e-01 -7.55e-01 -2.33e-01     6.83e-01     1.61e-01\n1332 -9.96e-02 -8.66e-01 -1.22e-02     9.89e-01     8.84e-01\n1333 -2.92e-01 -5.80e-01 -9.78e-02     9.05e-01     6.01e-01\n1334 -3.53e-01 -8.19e-01 -1.11e-01     8.98e-01     5.18e-01\n1335 -1.28e-01 -8.83e-01 -1.58e-02     9.86e-01     8.51e-01\n1336 -1.32e-01 -8.62e-01 -2.12e-02     9.81e-01     8.45e-01\n1337 -3.23e-01 -8.03e-01 -8.75e-02     9.15e-01     5.76e-01\n1338 -2.95e-01 -8.69e-01 -6.20e-02     9.47e-01     6.34e-01\n1339 -3.22e-01 -8.49e-01 -8.22e-02     9.30e-01     5.90e-01\n1340 -5.68e-01 -7.78e-01 -2.69e-01     7.28e-01     1.19e-01\n1341 -5.64e-01 -8.06e-01 -1.33e-01     6.11e-01     3.29e-02\n1342 -3.74e-01 -6.79e-01 -8.20e-02     4.03e-01     2.37e-02\n1343 -4.40e-01 -7.35e-01 -1.02e-01     4.72e-01     2.57e-02\n1344 -1.29e-01 -5.13e-01 -7.07e-03     1.31e-01     1.24e-03\n1345 -7.74e-01 -9.17e-01 -2.41e-01     8.70e-01     5.46e-02\n1346 -4.97e-01 -7.11e-01 -2.42e-01     6.88e-01     1.50e-01\n1347 -5.46e-01 -8.06e-01 -1.18e-01     5.80e-01     2.57e-02\n1348 -7.56e-01 -9.14e-01 -1.73e-01     8.12e-01     3.53e-02\n1349 -7.46e-01 -8.97e-01 -2.44e-01     8.45e-01     5.75e-02\n1350 -5.70e-01 -8.03e-01 -1.77e-01     6.31e-01     4.45e-02\n1351 -5.92e-01 -8.59e-01 -8.79e-02     6.18e-01     1.66e-02\n1352 -5.77e-01 -8.37e-01 -9.61e-02     6.02e-01     1.92e-02\n1353 -3.20e-01 -6.62e-01 -1.13e-01     8.95e-01     5.62e-01\n1354 -3.81e-01 -7.79e-01 -1.41e-01     8.65e-01     4.55e-01\n1355 -4.04e-01 -6.68e-01 -2.18e-01     6.90e-01     2.45e-01\n1356 -4.16e-01 -7.32e-01 -2.12e-01     7.78e-01     3.19e-01\n1357 -4.31e-01 -7.12e-01 -2.27e-01     6.07e-01     1.23e-01\n1358 -1.25e-01 -8.62e-01 -1.76e-02     9.84e-01     8.54e-01\n1359 -3.42e-01 -5.78e-01 -1.36e-01     8.67e-01     5.08e-01\n1360 -3.90e-01 -7.87e-01 -1.49e-01     8.64e-01     4.41e-01\n1361 -1.66e-01 -8.82e-01 -2.41e-02     9.80e-01     8.06e-01\n1362 -1.68e-01 -8.52e-01 -3.19e-02     9.74e-01     7.99e-01\n1363 -3.72e-01 -7.72e-01 -1.33e-01     8.76e-01     4.78e-01\n1364 -3.48e-01 -8.58e-01 -9.19e-02     9.24e-01     5.48e-01\n1365 -3.71e-01 -8.33e-01 -1.18e-01     9.01e-01     5.05e-01\n1366 -3.60e-01 -5.15e-01 -1.73e-01     8.55e-01     4.84e-01\n1367 -3.85e-01 -5.45e-01 -1.97e-01     8.24e-01     4.22e-01\n1368 -3.94e-01 -5.26e-01 -2.35e-01     6.20e-01     2.06e-01\n1369 -4.01e-01 -5.31e-01 -2.55e-01     6.94e-01     2.64e-01\n1370 -3.66e-01 -5.19e-01 -1.80e-01     5.23e-01     1.41e-01\n1371 -1.03e-01 -4.07e-01 -2.46e-02     9.79e-01     8.74e-01\n1372 -3.84e-01 -5.22e-01 -2.08e-01     8.12e-01     4.10e-01\n1373 -3.89e-01 -5.47e-01 -2.09e-01     8.15e-01     4.07e-01\n1374 -1.36e-01 -4.68e-01 -3.32e-02     9.71e-01     8.33e-01\n1375 -1.60e-01 -4.39e-01 -4.65e-02     9.63e-01     8.00e-01\n1376 -3.83e-01 -5.35e-01 -1.93e-01     8.17e-01     4.14e-01\n1377 -3.27e-01 -5.73e-01 -1.27e-01     8.90e-01     5.51e-01\n1378 -3.61e-01 -5.57e-01 -1.65e-01     8.61e-01     4.87e-01\n1379 -2.68e-01 -4.28e-01 -1.17e-01     9.03e-01     6.28e-01\n1380 -2.97e-01 -4.49e-01 -1.39e-01     8.83e-01     5.76e-01\n1381 -3.74e-01 -5.11e-01 -2.17e-01     7.25e-01     3.27e-01\n1382 -3.76e-01 -5.13e-01 -2.18e-01     7.84e-01     3.89e-01\n1383 -4.00e-01 -5.68e-01 -2.29e-01     6.60e-01     2.37e-01\n1384 -5.76e-02 -1.70e-01 -1.58e-02     9.88e-01     9.29e-01\n1385 -3.12e-01 -4.65e-01 -1.51e-01     8.72e-01     5.48e-01\n1386 -3.08e-01 -4.62e-01 -1.49e-01     8.77e-01     5.57e-01\n1387 -8.05e-02 -2.28e-01 -2.36e-02     9.83e-01     9.01e-01\n1388 -9.53e-02 -2.33e-01 -2.89e-02     9.78e-01     8.81e-01\n1389 -3.13e-01 -4.70e-01 -1.46e-01     8.78e-01     5.54e-01\n1390 -2.35e-01 -4.18e-01 -9.28e-02     9.33e-01     6.92e-01\n1391 -2.70e-01 -4.41e-01 -1.16e-01     9.12e-01     6.35e-01\n1392 -2.71e-01 -4.82e-01 -8.88e-02     9.19e-01     6.41e-01\n1393 -3.16e-01 -5.35e-01 -1.18e-01     8.93e-01     5.66e-01\n1394 -3.98e-01 -5.50e-01 -2.23e-01     7.43e-01     3.12e-01\n1395 -3.76e-01 -5.31e-01 -1.69e-01     8.29e-01     4.32e-01\n1396 -4.03e-01 -5.79e-01 -2.24e-01     6.71e-01     2.31e-01\n1397 -6.25e-02 -3.55e-01 -1.28e-02     9.88e-01     9.24e-01\n1398 -3.04e-01 -4.90e-01 -1.10e-01     8.99e-01     5.87e-01\n1399 -3.21e-01 -5.40e-01 -1.20e-01     8.92e-01     5.62e-01\n1400 -7.82e-02 -4.36e-01 -1.55e-02     9.84e-01     9.04e-01\n1401 -9.67e-02 -3.73e-01 -2.18e-02     9.81e-01     8.83e-01\n1402 -2.92e-01 -5.08e-01 -9.29e-02     9.06e-01     6.07e-01\n1403 -2.24e-01 -5.59e-01 -6.14e-02     9.43e-01     7.13e-01\n1404 -2.64e-01 -5.44e-01 -8.16e-02     9.25e-01     6.55e-01\n1405 -3.11e-01 -4.65e-01 -1.56e-01     8.67e-01     5.41e-01\n1406 -3.53e-01 -5.10e-01 -1.92e-01     8.30e-01     4.56e-01\n1407 -3.69e-01 -5.21e-01 -1.58e-01     6.15e-01     2.29e-01\n1408 -3.96e-01 -5.34e-01 -2.41e-01     7.45e-01     3.23e-01\n1409 -4.21e-01 -6.28e-01 -1.98e-01     5.68e-01     1.27e-01\n1410 -1.19e-01 -3.41e-01 -3.42e-02     9.82e-01     8.59e-01\n1411 -3.40e-01 -4.82e-01 -1.83e-01     8.38e-01     4.80e-01\n1412 -3.66e-01 -5.20e-01 -2.04e-01     8.31e-01     4.45e-01\n1413 -1.59e-01 -4.26e-01 -4.69e-02     9.77e-01     8.15e-01\n1414 -1.58e-01 -3.61e-01 -5.28e-02     9.69e-01     8.06e-01\n1415 -3.52e-01 -5.03e-01 -1.83e-01     8.55e-01     4.87e-01\n1416 -3.29e-01 -5.58e-01 -1.47e-01     9.14e-01     5.71e-01\n1417 -3.49e-01 -5.41e-01 -1.73e-01     8.87e-01     5.23e-01\n1418 -3.17e-01 -6.75e-01 -1.12e-01     8.96e-01     5.64e-01\n1419 -3.75e-01 -7.91e-01 -1.41e-01     8.69e-01     4.67e-01\n1420 -4.02e-01 -6.79e-01 -2.16e-01     6.98e-01     2.50e-01\n1421 -4.15e-01 -7.32e-01 -2.05e-01     7.80e-01     3.21e-01\n1422 -4.31e-01 -7.13e-01 -2.25e-01     6.07e-01     1.29e-01\n1423 -1.22e-01 -8.73e-01 -1.76e-02     9.85e-01     8.58e-01\n1424 -3.41e-01 -5.82e-01 -1.32e-01     8.68e-01     5.10e-01\n1425 -3.88e-01 -8.00e-01 -1.43e-01     8.65e-01     4.47e-01\n1426 -1.58e-01 -8.88e-01 -2.37e-02     9.80e-01     8.13e-01\n1427 -1.65e-01 -8.55e-01 -3.05e-02     9.74e-01     8.02e-01\n1428 -3.69e-01 -7.79e-01 -1.30e-01     8.74e-01     4.82e-01\n1429 -3.44e-01 -8.59e-01 -8.58e-02     9.24e-01     5.58e-01\n1430 -3.67e-01 -8.35e-01 -1.14e-01     9.02e-01     5.09e-01\n1431 -3.65e-01 -4.99e-01 -2.11e-01     8.35e-01     4.53e-01\n1432 -3.93e-01 -5.30e-01 -2.27e-01     7.74e-01     3.56e-01\n1433 -3.65e-01 -5.24e-01 -1.43e-01     5.33e-01     1.55e-01\n1434 -4.02e-01 -5.22e-01 -2.57e-01     7.02e-01     2.77e-01\n1435 -3.29e-01 -5.24e-01 -8.05e-02     4.36e-01     1.01e-01\n1436 -1.42e-01 -3.51e-01 -4.43e-02     9.69e-01     8.21e-01\n1437 -3.80e-01 -5.02e-01 -2.32e-01     8.08e-01     4.10e-01\n1438 -3.92e-01 -5.21e-01 -2.35e-01     7.80e-01     3.65e-01\n1439 -1.69e-01 -4.04e-01 -5.08e-02     9.63e-01     7.86e-01\n1440 -1.85e-01 -3.75e-01 -6.82e-02     9.55e-01     7.64e-01\n1441 -3.72e-01 -5.03e-01 -2.14e-01     8.30e-01     4.36e-01\n1442 -3.39e-01 -5.14e-01 -1.57e-01     8.78e-01     5.22e-01\n1443 -3.64e-01 -5.13e-01 -1.94e-01     8.48e-01     4.66e-01\n1444 -2.71e-01 -6.89e-01 -7.74e-02     9.24e-01     6.39e-01\n1445 -3.42e-01 -8.16e-01 -1.04e-01     8.99e-01     5.32e-01\n1446 -4.01e-01 -7.24e-01 -1.92e-01     7.51e-01     3.05e-01\n1447 -3.99e-01 -7.80e-01 -1.57e-01     8.43e-01     4.06e-01\n1448 -4.56e-01 -7.55e-01 -2.36e-01     6.82e-01     1.57e-01\n1449 -9.94e-02 -8.73e-01 -1.22e-02     9.88e-01     8.85e-01\n1450 -2.95e-01 -5.98e-01 -9.05e-02     9.05e-01     5.99e-01\n1451 -3.53e-01 -8.16e-01 -1.09e-01     8.99e-01     5.19e-01\n1452 -1.29e-01 -8.91e-01 -1.62e-02     9.86e-01     8.53e-01\n1453 -1.33e-01 -8.61e-01 -2.05e-02     9.82e-01     8.43e-01\n1454 -3.24e-01 -8.09e-01 -8.66e-02     9.15e-01     5.70e-01\n1455 -2.98e-01 -8.70e-01 -6.14e-02     9.48e-01     6.31e-01\n1456 -3.20e-01 -8.55e-01 -8.09e-02     9.31e-01     5.90e-01\n1457 -3.86e-01 -8.41e-01 -5.70e-04     4.00e-01     5.44e-03\n1458 -1.33e-01 -7.84e-01 -1.14e-04     1.35e-01     1.09e-03\n1459 -9.68e-02 -6.54e-01 -9.26e-05     9.84e-02     8.25e-04\n1460 -1.13e-01 -7.34e-01 -7.55e-05     1.14e-01     8.72e-04\n1461 -5.74e-03 -2.75e-01 -3.46e-06     5.80e-03     3.53e-05\n1462 -2.06e-01 -9.02e-01 -1.62e-04     2.09e-01     1.63e-03\n1463 -4.56e-01 -8.27e-01 -1.01e-03     4.85e-01     9.96e-03\n1464 -1.08e-01 -7.68e-01 -8.74e-05     1.09e-01     7.91e-04\n1465 -1.43e-01 -8.86e-01 -1.02e-04     1.44e-01     1.02e-03\n1466 -2.17e-01 -8.92e-01 -1.94e-04     2.21e-01     1.81e-03\n1467 -1.84e-01 -8.22e-01 -1.66e-04     1.86e-01     1.48e-03\n1468 -7.20e-02 -7.93e-01 -4.99e-05     7.33e-02     4.89e-04\n1469 -8.17e-02 -7.91e-01 -5.70e-05     8.34e-02     5.73e-04\n1470 -3.19e-01 -6.87e-01 -1.13e-01     8.94e-01     5.60e-01\n1471 -3.79e-01 -7.93e-01 -1.45e-01     8.65e-01     4.59e-01\n1472 -4.04e-01 -6.85e-01 -2.20e-01     6.93e-01     2.48e-01\n1473 -4.20e-01 -7.33e-01 -2.13e-01     7.76e-01     3.14e-01\n1474 -4.32e-01 -7.16e-01 -2.27e-01     6.01e-01     1.25e-01\n1475 -1.22e-01 -8.81e-01 -1.90e-02     9.84e-01     8.56e-01\n1476 -3.44e-01 -6.01e-01 -1.39e-01     8.65e-01     5.06e-01\n1477 -3.92e-01 -8.01e-01 -1.55e-01     8.63e-01     4.41e-01\n1478 -1.68e-01 -8.91e-01 -2.52e-02     9.79e-01     8.06e-01\n1479 -1.69e-01 -8.67e-01 -3.24e-02     9.74e-01     7.98e-01\n1480 -3.75e-01 -7.79e-01 -1.38e-01     8.73e-01     4.73e-01\n1481 -3.51e-01 -8.57e-01 -9.04e-02     9.23e-01     5.52e-01\n1482 -3.74e-01 -8.41e-01 -1.20e-01     9.00e-01     5.02e-01\n1483 -3.93e-01 -6.47e-01 -3.80e-02     5.26e-01     1.17e-01\n1484 -2.09e-01 -6.27e-01 -6.73e-03     2.44e-01     3.13e-02\n1485 -1.38e-01 -4.95e-01 -6.72e-03     1.61e-01     2.15e-02\n1486 -1.85e-01 -5.89e-01 -5.98e-03     2.16e-01     2.66e-02\n1487 -1.22e-02 -1.72e-01 -2.03e-04     1.38e-02     1.26e-03\n1488 -3.18e-01 -7.68e-01 -9.17e-03     3.89e-01     5.41e-02\n1489 -4.02e-01 -6.19e-01 -6.97e-02     5.80e-01     1.54e-01\n1490 -1.81e-01 -6.25e-01 -5.51e-03     2.13e-01     2.51e-02\n1491 -2.46e-01 -7.54e-01 -5.93e-03     2.89e-01     3.53e-02\n1492 -3.30e-01 -7.56e-01 -1.06e-02     4.02e-01     5.74e-02\n1493 -2.72e-01 -6.71e-01 -9.70e-03     3.26e-01     4.55e-02\n1494 -1.35e-01 -6.59e-01 -2.66e-03     1.58e-01     1.66e-02\n1495 -1.55e-01 -6.55e-01 -3.18e-03     1.78e-01     1.91e-02\n1496 -2.73e-01 -4.86e-01 -9.56e-02     9.18e-01     6.41e-01\n1497 -3.19e-01 -5.42e-01 -1.25e-01     8.93e-01     5.64e-01\n1498 -3.99e-01 -5.48e-01 -2.27e-01     7.41e-01     3.12e-01\n1499 -3.77e-01 -5.34e-01 -1.83e-01     8.29e-01     4.32e-01\n1500 -4.06e-01 -5.77e-01 -2.19e-01     6.66e-01     2.25e-01\n1501 -6.44e-02 -3.49e-01 -1.32e-02     9.88e-01     9.22e-01\n1502 -3.04e-01 -4.92e-01 -1.16e-01     8.99e-01     5.90e-01\n1503 -3.22e-01 -5.40e-01 -1.26e-01     8.92e-01     5.60e-01\n1504 -7.99e-02 -4.34e-01 -1.63e-02     9.85e-01     9.03e-01\n1505 -9.65e-02 -3.63e-01 -2.32e-02     9.80e-01     8.83e-01\n1506 -2.93e-01 -5.09e-01 -9.90e-02     9.07e-01     6.07e-01\n1507 -2.26e-01 -5.47e-01 -6.53e-02     9.43e-01     7.11e-01\n1508 -2.67e-01 -5.43e-01 -8.64e-02     9.25e-01     6.52e-01\n1509 -5.94e-01 -8.28e-01 -3.31e-01     7.77e-01     1.42e-01\n1510 -5.82e-01 -7.94e-01 -3.26e-01     6.57e-01     3.96e-02\n1511 -3.88e-01 -6.50e-01 -1.53e-01     4.32e-01     2.73e-02\n1512 -5.22e-01 -7.52e-01 -2.78e-01     5.81e-01     3.20e-02\n1513 -1.61e-01 -4.35e-01 -3.98e-02     1.64e-01     1.56e-03\n1514 -7.81e-01 -9.17e-01 -3.59e-01     8.94e-01     6.76e-02\n1515 -5.30e-01 -7.98e-01 -3.12e-01     7.57e-01     1.81e-01\n1516 -5.81e-01 -7.87e-01 -3.31e-01     6.48e-01     3.19e-02\n1517 -7.63e-01 -9.09e-01 -4.16e-01     8.54e-01     4.34e-02\n1518 -7.66e-01 -9.07e-01 -3.60e-01     8.80e-01     7.07e-02\n1519 -6.33e-01 -8.34e-01 -3.77e-01     7.31e-01     5.46e-02\n1520 -6.41e-01 -8.40e-01 -3.41e-01     6.96e-01     2.09e-02\n1521 -6.25e-01 -8.27e-01 -3.46e-01     6.84e-01     2.43e-02\n1522 -3.94e-01 -5.70e-01 -2.05e-01     8.35e-01     4.23e-01\n1523 -4.32e-01 -6.47e-01 -2.47e-01     7.76e-01     3.13e-01\n1524 -3.95e-01 -5.55e-01 -2.31e-01     5.76e-01     1.61e-01\n1525 -4.16e-01 -5.82e-01 -2.59e-01     6.44e-01     2.01e-01\n1526 -2.59e-01 -4.95e-01 -6.90e-02     3.17e-01     4.93e-02\n1527 -2.50e-01 -7.35e-01 -5.15e-02     9.52e-01     6.93e-01\n1528 -4.00e-01 -5.42e-01 -2.31e-01     7.93e-01     3.70e-01\n1529 -4.37e-01 -6.48e-01 -2.58e-01     7.58e-01     2.91e-01\n1530 -3.17e-01 -7.53e-01 -7.21e-02     9.30e-01     5.97e-01\n1531 -2.89e-01 -7.17e-01 -7.91e-02     9.36e-01     6.35e-01\n1532 -4.24e-01 -6.22e-01 -2.43e-01     7.78e-01     3.22e-01\n1533 -4.36e-01 -7.05e-01 -1.89e-01     8.12e-01     3.42e-01\n1534 -4.39e-01 -6.81e-01 -2.23e-01     7.90e-01     3.20e-01\n1535 -4.15e-01 -5.55e-01 -2.73e-01     7.41e-01     3.02e-01\n1536 -4.26e-01 -5.98e-01 -2.86e-01     6.83e-01     2.27e-01\n1537 -3.39e-01 -5.05e-01 -1.73e-01     4.56e-01     1.08e-01\n1538 -3.61e-01 -5.19e-01 -1.93e-01     5.01e-01     1.27e-01\n1539 -1.98e-01 -4.17e-01 -5.75e-02     2.38e-01     3.52e-02\n1540 -3.04e-01 -7.29e-01 -8.29e-02     9.32e-01     6.13e-01\n1541 -4.06e-01 -5.31e-01 -2.66e-01     6.75e-01     2.48e-01\n1542 -4.23e-01 -5.98e-01 -2.81e-01     6.56e-01     2.08e-01\n1543 -3.72e-01 -7.35e-01 -1.16e-01     8.98e-01     5.06e-01\n1544 -3.54e-01 -7.05e-01 -1.26e-01     9.02e-01     5.33e-01\n1545 -4.15e-01 -5.77e-01 -2.69e-01     6.59e-01     2.18e-01\n1546 -4.42e-01 -6.64e-01 -2.53e-01     7.28e-01     2.52e-01\n1547 -4.37e-01 -6.32e-01 -2.77e-01     6.96e-01     2.29e-01\n1548 -3.54e-01 -6.53e-01 -1.54e-01     8.60e-01     4.86e-01\n1549 -3.99e-01 -7.56e-01 -1.86e-01     8.28e-01     3.95e-01\n1550 -3.93e-01 -6.31e-01 -2.17e-01     6.30e-01     2.03e-01\n1551 -4.14e-01 -6.83e-01 -2.37e-01     7.08e-01     2.53e-01\n1552 -3.97e-01 -6.56e-01 -1.99e-01     5.31e-01     1.02e-01\n1553 -1.48e-01 -8.73e-01 -2.57e-02     9.79e-01     8.25e-01\n1554 -3.74e-01 -5.80e-01 -1.78e-01     8.20e-01     4.25e-01\n1555 -4.10e-01 -7.63e-01 -1.92e-01     8.20e-01     3.74e-01\n1556 -1.96e-01 -8.80e-01 -3.56e-02     9.71e-01     7.68e-01\n1557 -2.01e-01 -8.51e-01 -4.41e-02     9.65e-01     7.53e-01\n1558 -3.99e-01 -7.41e-01 -1.81e-01     8.26e-01     3.94e-01\n1559 -3.85e-01 -8.34e-01 -1.26e-01     8.95e-01     4.81e-01\n1560 -4.00e-01 -8.10e-01 -1.57e-01     8.66e-01     4.32e-01\n1561 -3.60e-01 -4.95e-01 -2.10e-01     7.99e-01     4.20e-01\n1562 -3.83e-01 -5.20e-01 -2.24e-01     7.54e-01     3.49e-01\n1563 -3.38e-01 -5.05e-01 -1.37e-01     5.11e-01     1.62e-01\n1564 -3.87e-01 -5.33e-01 -2.11e-01     6.25e-01     2.19e-01\n1565 -3.47e-01 -5.71e-01 -1.44e-01     4.47e-01     8.76e-02\n1566 -1.65e-01 -4.02e-01 -5.08e-02     9.70e-01     8.00e-01\n1567 -3.77e-01 -5.09e-01 -2.31e-01     7.52e-01     3.53e-01\n1568 -3.92e-01 -5.30e-01 -2.37e-01     7.52e-01     3.36e-01\n1569 -2.15e-01 -4.90e-01 -7.37e-02     9.63e-01     7.41e-01\n1570 -2.17e-01 -4.28e-01 -8.12e-02     9.50e-01     7.29e-01\n1571 -3.90e-01 -5.28e-01 -2.36e-01     7.70e-01     3.58e-01\n1572 -3.89e-01 -5.74e-01 -2.05e-01     8.61e-01     4.55e-01\n1573 -3.96e-01 -5.57e-01 -2.33e-01     8.20e-01     4.02e-01\n1574 -4.06e-01 -5.61e-01 -2.45e-01     6.07e-01     1.78e-01\n1575 -3.61e-01 -5.50e-01 -1.76e-01     4.81e-01     1.02e-01\n1576 -2.05e-01 -4.01e-01 -6.87e-02     2.50e-01     4.27e-02\n1577 -3.11e-01 -5.04e-01 -1.45e-01     3.99e-01     8.02e-02\n1578 -9.18e-02 -2.61e-01 -2.22e-02     1.07e-01     1.24e-02\n1579 -4.53e-01 -7.43e-01 -1.62e-01     8.35e-01     3.52e-01\n1580 -3.88e-01 -5.30e-01 -2.26e-01     5.72e-01     1.66e-01\n1581 -3.64e-01 -5.54e-01 -1.81e-01     4.81e-01     1.01e-01\n1582 -4.66e-01 -7.35e-01 -1.71e-01     7.90e-01     2.76e-01\n1583 -4.56e-01 -7.24e-01 -2.08e-01     8.08e-01     3.18e-01\n1584 -4.02e-01 -5.90e-01 -2.30e-01     5.71e-01     1.47e-01\n1585 -4.13e-01 -6.34e-01 -1.92e-01     5.73e-01     1.30e-01\n1586 -4.00e-01 -6.06e-01 -2.04e-01     5.45e-01     1.21e-01\n1587 -3.21e-01 -5.03e-01 -1.33e-01     8.89e-01     5.62e-01\n1588 -3.58e-01 -5.38e-01 -1.59e-01     8.62e-01     4.92e-01\n1589 -4.01e-01 -5.41e-01 -2.45e-01     6.86e-01     2.54e-01\n1590 -3.98e-01 -5.33e-01 -2.31e-01     7.62e-01     3.34e-01\n1591 -3.91e-01 -5.44e-01 -2.03e-01     5.93e-01     1.78e-01\n1592 -8.19e-02 -3.95e-01 -1.83e-02     9.84e-01     9.01e-01\n1593 -3.54e-01 -5.08e-01 -1.59e-01     8.58e-01     4.90e-01\n1594 -3.64e-01 -5.40e-01 -1.64e-01     8.57e-01     4.80e-01\n1595 -1.07e-01 -4.72e-01 -2.41e-02     9.78e-01     8.69e-01\n1596 -1.28e-01 -4.14e-01 -3.19e-02     9.73e-01     8.43e-01\n1597 -3.49e-01 -5.27e-01 -1.45e-01     8.65e-01     5.03e-01\n1598 -2.82e-01 -5.67e-01 -9.22e-02     9.19e-01     6.29e-01\n1599 -3.22e-01 -5.50e-01 -1.19e-01     8.95e-01     5.65e-01\n1600 -6.50e-01 -8.72e-01 -3.03e-01     8.58e-01     1.81e-01\n1601 -6.70e-01 -8.52e-01 -3.99e-01     7.63e-01     4.82e-02\n1602 -5.26e-01 -7.64e-01 -2.64e-01     5.89e-01     3.54e-02\n1603 -5.91e-01 -8.08e-01 -3.52e-01     6.66e-01     3.87e-02\n1604 -1.98e-01 -5.32e-01 -4.55e-02     2.03e-01     1.79e-03\n1605 -7.94e-01 -9.31e-01 -3.24e-01     9.18e-01     7.74e-02\n1606 -5.65e-01 -8.46e-01 -2.82e-01     8.38e-01     2.33e-01\n1607 -6.61e-01 -8.42e-01 -3.97e-01     7.40e-01     3.77e-02\n1608 -7.77e-01 -9.20e-01 -3.96e-01     8.80e-01     5.03e-02\n1609 -7.80e-01 -9.23e-01 -3.37e-01     9.09e-01     8.07e-02\n1610 -6.81e-01 -8.67e-01 -3.95e-01     7.92e-01     6.50e-02\n1611 -6.83e-01 -8.68e-01 -3.68e-01     7.47e-01     2.40e-02\n1612 -6.75e-01 -8.60e-01 -3.76e-01     7.44e-01     2.76e-02\n1613 -3.63e-01 -4.91e-01 -2.11e-01     8.39e-01     4.58e-01\n1614 -3.88e-01 -5.12e-01 -2.29e-01     7.94e-01     3.85e-01\n1615 -3.79e-01 -5.19e-01 -1.87e-01     5.77e-01     1.84e-01\n1616 -4.02e-01 -5.24e-01 -2.46e-01     6.78e-01     2.53e-01\n1617 -3.32e-01 -5.30e-01 -8.71e-02     4.41e-01     1.04e-01\n1618 -1.37e-01 -3.45e-01 -4.22e-02     9.70e-01     8.27e-01\n1619 -3.85e-01 -5.04e-01 -2.36e-01     8.00e-01     3.97e-01\n1620 -3.91e-01 -5.18e-01 -2.37e-01     7.86e-01     3.73e-01\n1621 -1.75e-01 -4.07e-01 -5.43e-02     9.60e-01     7.78e-01\n1622 -1.86e-01 -3.78e-01 -6.77e-02     9.54e-01     7.64e-01\n1623 -3.84e-01 -5.11e-01 -2.25e-01     8.07e-01     4.03e-01\n1624 -3.51e-01 -5.16e-01 -1.71e-01     8.68e-01     5.02e-01\n1625 -3.72e-01 -5.13e-01 -2.01e-01     8.37e-01     4.49e-01\n1626 -3.90e-01 -5.11e-01 -2.53e-01     7.75e-01     3.62e-01\n1627 -3.98e-01 -5.14e-01 -2.62e-01     7.47e-01     3.27e-01\n1628 -3.59e-01 -5.06e-01 -1.74e-01     5.20e-01     1.50e-01\n1629 -3.73e-01 -5.19e-01 -1.93e-01     5.54e-01     1.71e-01\n1630 -3.03e-01 -4.85e-01 -1.26e-01     4.07e-01     9.96e-02\n1631 -1.36e-01 -3.19e-01 -4.16e-02     9.68e-01     8.30e-01\n1632 -4.00e-01 -5.21e-01 -2.59e-01     7.07e-01     2.83e-01\n1633 -3.99e-01 -5.19e-01 -2.62e-01     7.28e-01     3.04e-01\n1634 -1.88e-01 -3.79e-01 -6.48e-02     9.52e-01     7.63e-01\n1635 -2.14e-01 -4.03e-01 -8.42e-02     9.41e-01     7.22e-01\n1636 -4.00e-01 -5.25e-01 -2.58e-01     7.09e-01     2.83e-01\n1637 -3.74e-01 -5.05e-01 -2.18e-01     8.23e-01     4.29e-01\n1638 -3.92e-01 -5.16e-01 -2.47e-01     7.80e-01     3.69e-01\n1639 -5.50e-01 -7.63e-01 -2.25e-01     7.13e-01     1.17e-01\n1640 -5.19e-01 -7.89e-01 -1.10e-01     5.62e-01     3.18e-02\n1641 -3.00e-01 -6.50e-01 -4.41e-02     3.29e-01     2.16e-02\n1642 -4.92e-01 -7.72e-01 -1.15e-01     5.29e-01     2.62e-02\n1643 -1.27e-01 -5.12e-01 -7.34e-03     1.28e-01     1.26e-03\n1644 -7.64e-01 -9.13e-01 -2.37e-01     8.59e-01     5.45e-02\n1645 -5.02e-01 -7.23e-01 -2.43e-01     7.10e-01     1.59e-01\n1646 -5.28e-01 -8.01e-01 -1.07e-01     5.63e-01     2.52e-02\n1647 -7.65e-01 -9.20e-01 -1.70e-01     8.25e-01     3.51e-02\n1648 -7.45e-01 -8.98e-01 -2.43e-01     8.47e-01     5.81e-02\n1649 -6.29e-01 -8.37e-01 -1.94e-01     6.95e-01     4.57e-02\n1650 -6.24e-01 -8.78e-01 -8.59e-02     6.47e-01     1.67e-02\n1651 -5.97e-01 -8.54e-01 -9.68e-02     6.24e-01     1.87e-02\n1652 -3.24e-01 -4.70e-01 -1.67e-01     8.81e-01     5.47e-01\n1653 -3.48e-01 -4.83e-01 -1.89e-01     8.60e-01     5.00e-01\n1654 -4.00e-01 -5.22e-01 -2.51e-01     6.87e-01     2.65e-01\n1655 -3.99e-01 -5.24e-01 -2.62e-01     7.33e-01     3.10e-01\n1656 -3.87e-01 -5.26e-01 -2.09e-01     5.93e-01     1.90e-01\n1657 -7.34e-02 -2.08e-01 -2.15e-02     9.84e-01     9.10e-01\n1658 -3.62e-01 -4.96e-01 -2.09e-01     8.42e-01     4.64e-01\n1659 -3.55e-01 -4.91e-01 -2.03e-01     8.50e-01     4.81e-01\n1660 -1.04e-01 -2.66e-01 -3.17e-02     9.77e-01     8.72e-01\n1661 -1.24e-01 -2.86e-01 -4.15e-02     9.71e-01     8.46e-01\n1662 -3.60e-01 -4.99e-01 -2.04e-01     8.43e-01     4.67e-01\n1663 -2.82e-01 -4.47e-01 -1.28e-01     9.11e-01     6.21e-01\n1664 -3.19e-01 -4.73e-01 -1.59e-01     8.87e-01     5.57e-01\n1665 -3.85e-01 -5.26e-01 -2.13e-01     8.11e-01     4.09e-01\n1666 -4.01e-01 -5.41e-01 -2.39e-01     7.79e-01     3.56e-01\n1667 -3.74e-01 -5.09e-01 -2.18e-01     5.57e-01     1.65e-01\n1668 -3.91e-01 -5.17e-01 -2.40e-01     6.18e-01     2.07e-01\n1669 -3.29e-01 -4.95e-01 -1.48e-01     4.48e-01     1.10e-01\n1670 -1.28e-01 -4.29e-01 -3.39e-02     9.72e-01     8.42e-01\n1671 -3.98e-01 -5.27e-01 -2.47e-01     7.57e-01     3.37e-01\n1672 -4.04e-01 -5.43e-01 -2.50e-01     7.67e-01     3.39e-01\n1673 -1.72e-01 -4.92e-01 -4.64e-02     9.60e-01     7.85e-01\n1674 -2.00e-01 -4.57e-01 -6.20e-02     9.51e-01     7.47e-01\n1675 -3.98e-01 -5.35e-01 -2.36e-01     7.60e-01     3.40e-01\n1676 -3.66e-01 -5.60e-01 -1.67e-01     8.53e-01     4.74e-01\n1677 -3.88e-01 -5.52e-01 -2.04e-01     8.19e-01     4.14e-01\n1678 -2.34e-01 -5.70e-01 -3.99e-02     2.39e-01     2.13e-03\n1679 -6.54e-02 -2.67e-01 -8.67e-03     6.64e-02     4.15e-04\n1680 -4.76e-02 -1.98e-01 -5.98e-03     4.85e-02     3.36e-04\n1681 -5.60e-02 -2.32e-01 -7.40e-03     5.70e-02     3.48e-04\n1682 -2.60e-03 -1.60e-02 -2.85e-04     2.63e-03     1.45e-05\n1683 -1.06e-01 -3.99e-01 -1.47e-02     1.07e-01     6.59e-04\n1684 -3.21e-01 -6.33e-01 -7.48e-02     3.30e-01     3.91e-03\n1685 -5.21e-02 -2.28e-01 -6.51e-03     5.30e-02     3.20e-04\n1686 -6.92e-02 -3.00e-01 -9.15e-03     7.01e-02     4.14e-04\n1687 -1.12e-01 -4.15e-01 -1.50e-02     1.13e-01     7.22e-04\n1688 -9.41e-02 -3.43e-01 -1.24e-02     9.54e-02     5.99e-04\n1689 -3.36e-02 -1.74e-01 -3.90e-03     3.41e-02     1.96e-04\n1690 -3.83e-02 -1.97e-01 -4.67e-03     3.86e-02     2.33e-04\n1691 -3.87e-01 -5.24e-01 -2.09e-01     8.12e-01     4.08e-01\n1692 -4.01e-01 -5.40e-01 -2.32e-01     7.80e-01     3.56e-01\n1693 -3.76e-01 -5.09e-01 -2.13e-01     5.60e-01     1.67e-01\n1694 -3.90e-01 -5.20e-01 -2.37e-01     6.21e-01     2.07e-01\n1695 -3.31e-01 -4.91e-01 -1.53e-01     4.50e-01     1.10e-01\n1696 -1.29e-01 -4.31e-01 -3.32e-02     9.73e-01     8.41e-01\n1697 -3.98e-01 -5.25e-01 -2.41e-01     7.57e-01     3.36e-01\n1698 -4.03e-01 -5.42e-01 -2.45e-01     7.67e-01     3.39e-01\n1699 -1.72e-01 -5.02e-01 -4.82e-02     9.60e-01     7.85e-01\n1700 -1.98e-01 -4.62e-01 -6.19e-02     9.51e-01     7.50e-01\n1701 -3.99e-01 -5.38e-01 -2.36e-01     7.62e-01     3.38e-01\n1702 -3.65e-01 -5.67e-01 -1.66e-01     8.55e-01     4.74e-01\n1703 -3.88e-01 -5.54e-01 -2.01e-01     8.18e-01     4.12e-01\n1704 -3.18e-01 -6.70e-01 -1.12e-01     8.95e-01     5.63e-01\n1705 -3.78e-01 -7.83e-01 -1.44e-01     8.68e-01     4.60e-01\n1706 -4.03e-01 -6.80e-01 -2.21e-01     6.95e-01     2.49e-01\n1707 -4.14e-01 -7.32e-01 -2.09e-01     7.81e-01     3.22e-01\n1708 -4.30e-01 -7.08e-01 -2.23e-01     6.11e-01     1.30e-01\n1709 -1.21e-01 -8.69e-01 -1.81e-02     9.85e-01     8.60e-01\n1710 -3.42e-01 -5.90e-01 -1.34e-01     8.68e-01     5.12e-01\n1711 -3.86e-01 -7.94e-01 -1.49e-01     8.63e-01     4.44e-01\n1712 -1.59e-01 -8.79e-01 -2.53e-02     9.80e-01     8.12e-01\n1713 -1.62e-01 -8.56e-01 -3.03e-02     9.74e-01     8.05e-01\n1714 -3.69e-01 -7.75e-01 -1.28e-01     8.75e-01     4.78e-01\n1715 -3.44e-01 -8.54e-01 -8.94e-02     9.25e-01     5.58e-01\n1716 -3.64e-01 -8.33e-01 -1.14e-01     9.04e-01     5.16e-01\n1717 -2.72e-01 -4.81e-01 -9.13e-02     9.18e-01     6.41e-01\n1718 -3.20e-01 -5.30e-01 -1.21e-01     8.93e-01     5.64e-01\n1719 -3.98e-01 -5.44e-01 -2.27e-01     7.45e-01     3.11e-01\n1720 -3.77e-01 -5.36e-01 -1.67e-01     8.27e-01     4.30e-01\n1721 -4.02e-01 -5.68e-01 -2.17e-01     6.66e-01     2.29e-01\n1722 -6.33e-02 -3.59e-01 -1.27e-02     9.88e-01     9.24e-01\n1723 -3.07e-01 -4.87e-01 -1.07e-01     8.98e-01     5.83e-01\n1724 -3.25e-01 -5.34e-01 -1.21e-01     8.92e-01     5.57e-01\n1725 -7.89e-02 -4.51e-01 -1.59e-02     9.84e-01     9.04e-01\n1726 -9.74e-02 -3.80e-01 -2.19e-02     9.80e-01     8.82e-01\n1727 -2.98e-01 -5.07e-01 -9.32e-02     9.06e-01     6.01e-01\n1728 -2.28e-01 -5.64e-01 -6.12e-02     9.42e-01     7.08e-01\n1729 -2.69e-01 -5.47e-01 -8.51e-02     9.24e-01     6.50e-01\n1730 -5.44e-02 -4.44e-01 -6.07e-06     6.54e-02     5.44e-03\n1731 -1.31e-02 -3.13e-01 -1.18e-06     1.52e-02     1.08e-03\n1732 -9.49e-03 -1.82e-01 -1.19e-06     1.12e-02     8.70e-04\n1733 -1.06e-02 -2.36e-01 -1.23e-06     1.26e-02     9.07e-04\n1734 -4.61e-04 -3.47e-02 -4.32e-08     5.45e-04     3.82e-05\n1735 -2.11e-02 -5.69e-01 -1.90e-06     2.46e-02     1.65e-03\n1736 -7.12e-02 -4.22e-01 -7.92e-06     9.65e-02     1.04e-02\n1737 -9.76e-03 -2.90e-01 -1.02e-06     1.15e-02     8.48e-04\n1738 -1.35e-02 -5.02e-01 -1.39e-06     1.57e-02     1.08e-03\n1739 -2.24e-02 -5.54e-01 -1.91e-06     2.63e-02     1.86e-03\n1740 -1.84e-02 -3.53e-01 -1.78e-06     2.19e-02     1.55e-03\n1741 -6.34e-03 -2.90e-01 -5.93e-07     7.55e-03     4.91e-04\n1742 -7.32e-03 -2.90e-01 -6.13e-07     8.58e-03     5.93e-04\n1743 -4.89e-02 -4.61e-01 -9.03e-06     6.09e-02     5.41e-03\n1744 -1.19e-02 -3.25e-01 -1.94e-06     1.42e-02     1.12e-03\n1745 -8.68e-03 -1.91e-01 -1.37e-06     1.06e-02     8.66e-04\n1746 -9.90e-03 -2.51e-01 -1.60e-06     1.17e-02     8.92e-04\n1747 -4.28e-04 -3.69e-02 -6.22e-08     5.12e-04     3.70e-05\n1748 -1.92e-02 -5.79e-01 -2.98e-06     2.25e-02     1.69e-03\n1749 -6.59e-02 -4.36e-01 -1.35e-05     9.19e-02     9.98e-03\n1750 -9.57e-03 -2.96e-01 -1.35e-06     1.13e-02     8.41e-04\n1751 -1.26e-02 -4.92e-01 -2.20e-06     1.49e-02     1.08e-03\n1752 -2.13e-02 -5.58e-01 -3.00e-06     2.47e-02     1.82e-03\n1753 -1.72e-02 -3.67e-01 -2.31e-06     2.05e-02     1.53e-03\n1754 -6.13e-03 -3.00e-01 -8.63e-07     7.22e-03     5.10e-04\n1755 -6.94e-03 -2.98e-01 -9.70e-07     8.05e-03     6.00e-04\n1756  2.06e-02 -6.96e-02  1.41e-01     7.97e-01     8.20e-01\n1757  2.10e-02 -7.81e-02  1.54e-01     7.62e-01     7.86e-01\n1758  2.79e-02 -1.15e-01  1.76e-01     5.38e-01     5.66e-01\n1759  3.84e-02 -9.25e-02  1.86e-01     5.91e-01     6.34e-01\n1760  3.28e-02 -1.16e-01  1.87e-01     4.25e-01     4.62e-01\n1761  3.02e-03 -1.82e-02  4.99e-02     9.70e-01     9.74e-01\n1762  2.78e-02 -7.68e-02  1.62e-01     7.37e-01     7.68e-01\n1763  2.45e-02 -7.87e-02  1.62e-01     7.47e-01     7.75e-01\n1764  5.39e-03 -2.42e-02  7.39e-02     9.56e-01     9.62e-01\n1765  6.37e-03 -2.62e-02  6.97e-02     9.46e-01     9.53e-01\n1766  3.03e-02 -7.50e-02  1.70e-01     7.39e-01     7.72e-01\n1767  1.92e-02 -5.90e-02  1.46e-01     8.40e-01     8.61e-01\n1768  2.28e-02 -6.72e-02  1.54e-01     8.00e-01     8.26e-01\n1769  3.91e-02 -1.52e-01  1.83e-01     5.46e-01     5.84e-01\n1770  2.15e-02 -2.95e-01  1.75e-01     5.01e-01     5.15e-01\n1771  2.31e-02 -1.50e-01  1.63e-01     2.63e-01     2.85e-01\n1772  2.91e-02 -1.78e-01  1.83e-01     3.10e-01     3.38e-01\n1773 -1.34e-02 -2.18e-01  1.30e-01     1.90e-01     1.63e-01\n1774 -7.38e-03 -5.71e-01  6.24e-02     9.10e-01     8.93e-01\n1775  4.78e-02 -1.01e-01  1.97e-01     4.64e-01     5.17e-01\n1776  1.95e-02 -3.12e-01  1.75e-01     4.80e-01     4.88e-01\n1777 -9.58e-03 -5.99e-01  8.21e-02     8.73e-01     8.49e-01\n1778 -1.96e-04 -5.18e-01  9.73e-02     8.45e-01     8.35e-01\n1779  3.20e-02 -2.40e-01  1.92e-01     4.68e-01     4.99e-01\n1780 -8.66e-05 -4.77e-01  1.60e-01     6.22e-01     6.04e-01\n1781  9.82e-03 -3.96e-01  1.71e-01     5.56e-01     5.57e-01\n1782 -8.75e-02 -3.24e-01  6.92e-02     2.24e-01     1.15e-01\n1783 -9.89e-02 -2.80e-01  2.04e-02     1.53e-01     3.63e-02\n1784 -3.73e-02 -1.41e-01  2.08e-02     6.89e-02     2.39e-02\n1785 -5.13e-02 -1.82e-01  2.35e-02     9.00e-02     2.72e-02\n1786 -1.40e-02 -5.36e-02 -1.39e-03     1.70e-02     1.48e-03\n1787 -3.19e-01 -6.16e-01 -2.08e-02     4.34e-01     6.37e-02\n1788 -3.69e-02 -2.41e-01  8.58e-02     1.83e-01     1.28e-01\n1789 -9.35e-02 -2.63e-01  1.54e-02     1.38e-01     2.88e-02\n1790 -2.55e-01 -5.44e-01 -2.34e-02     3.35e-01     4.12e-02\n1791 -2.76e-01 -5.58e-01 -7.72e-03     3.91e-01     6.66e-02\n1792 -9.34e-02 -2.87e-01  3.66e-02     1.59e-01     4.79e-02\n1793 -1.20e-01 -3.23e-01 -4.65e-03     1.56e-01     1.99e-02\n1794 -1.10e-01 -2.95e-01  1.35e-03     1.51e-01     2.28e-02\n1795  3.66e-02 -6.45e-02  1.48e-01     1.87e-01     2.29e-01\n1796  3.14e-02 -5.83e-02  1.32e-01     1.60e-01     1.97e-01\n1797  1.42e-02 -2.92e-02  7.05e-02     6.39e-02     8.03e-02\n1798  1.75e-02 -3.86e-02  8.81e-02     7.99e-02     9.98e-02\n1799  7.91e-03 -3.03e-02  5.28e-02     4.55e-02     5.52e-02\n1800  3.72e-02 -9.70e-02  1.84e-01     6.76e-01     7.14e-01\n1801  2.98e-02 -5.47e-02  1.27e-01     1.42e-01     1.75e-01\n1802  2.92e-02 -5.74e-02  1.30e-01     1.51e-01     1.85e-01\n1803  4.07e-02 -1.12e-01  1.93e-01     5.89e-01     6.33e-01\n1804  4.92e-02 -9.48e-02  1.95e-01     5.23e-01     5.75e-01\n1805  2.92e-02 -6.02e-02  1.28e-01     1.46e-01     1.79e-01\n1806  3.81e-02 -8.78e-02  1.64e-01     2.49e-01     2.94e-01\n1807  3.47e-02 -7.45e-02  1.47e-01     1.99e-01     2.39e-01\n1808  4.13e-02 -1.39e-01  1.88e-01     4.86e-01     5.29e-01\n1809  2.33e-02 -2.82e-01  1.78e-01     4.41e-01     4.57e-01\n1810  2.30e-02 -1.30e-01  1.63e-01     2.23e-01     2.41e-01\n1811  2.79e-02 -1.55e-01  1.78e-01     2.58e-01     2.84e-01\n1812 -9.64e-03 -1.81e-01  1.20e-01     1.57e-01     1.36e-01\n1813 -6.97e-03 -5.86e-01  7.19e-02     8.89e-01     8.70e-01\n1814  4.81e-02 -1.02e-01  1.97e-01     4.02e-01     4.50e-01\n1815  2.14e-02 -2.90e-01  1.77e-01     4.20e-01     4.32e-01\n1816 -9.53e-03 -6.02e-01  9.52e-02     8.41e-01     8.16e-01\n1817  1.87e-03 -4.97e-01  1.06e-01     8.12e-01     8.01e-01\n1818  3.43e-02 -2.20e-01  1.93e-01     4.03e-01     4.33e-01\n1819  2.93e-03 -4.39e-01  1.71e-01     5.60e-01     5.48e-01\n1820  1.22e-02 -3.77e-01  1.79e-01     4.93e-01     4.90e-01\n1821 -7.54e-03 -1.43e-01 -1.32e-06     9.07e-03     5.29e-04\n1822 -1.47e-03 -3.77e-02 -2.95e-07     1.78e-03     1.00e-04\n1823 -1.21e-03 -2.92e-02 -1.96e-07     1.44e-03     8.21e-05\n1824 -1.27e-03 -3.09e-02 -2.35e-07     1.51e-03     8.31e-05\n1825 -5.32e-05 -1.49e-03 -8.41e-09     6.32e-05     3.36e-06\n1826 -2.39e-03 -6.22e-02 -4.47e-07     2.87e-03     1.59e-04\n1827 -1.32e-02 -1.95e-01 -2.73e-06     1.57e-02     9.36e-04\n1828 -1.15e-03 -3.07e-02 -2.05e-07     1.36e-03     7.79e-05\n1829 -1.52e-03 -3.96e-02 -2.39e-07     1.79e-03     1.01e-04\n1830 -2.56e-03 -6.42e-02 -5.43e-07     3.05e-03     1.75e-04\n1831 -2.11e-03 -5.43e-02 -4.43e-07     2.54e-03     1.47e-04\n1832 -7.07e-04 -1.91e-02 -1.23e-07     8.52e-04     4.64e-05\n1833 -8.49e-04 -2.35e-02 -1.67e-07     1.01e-03     5.41e-05\n1834 -2.29e-02 -3.60e-01  1.50e-01     4.47e-01     4.07e-01\n1835 -1.10e-01 -4.31e-01  1.14e-01     3.90e-01     2.56e-01\n1836 -3.45e-02 -2.36e-01  1.03e-01     1.94e-01     1.46e-01\n1837 -4.16e-02 -2.76e-01  1.15e-01     2.25e-01     1.66e-01\n1838 -6.24e-02 -1.87e-01  2.88e-02     9.78e-02     2.12e-02\n1839 -3.09e-01 -7.42e-01  3.15e-02     8.26e-01     4.89e-01\n1840  1.30e-02 -2.28e-01  1.67e-01     3.68e-01     3.73e-01\n1841 -1.17e-01 -4.16e-01  1.10e-01     3.65e-01     2.22e-01\n1842 -3.38e-01 -7.14e-01  4.05e-02     7.55e-01     3.76e-01\n1843 -2.48e-01 -6.86e-01  6.34e-02     7.48e-01     4.77e-01\n1844 -6.73e-02 -3.86e-01  1.37e-01     3.60e-01     2.69e-01\n1845 -2.27e-01 -5.27e-01  9.17e-02     4.69e-01     2.06e-01\n1846 -1.78e-01 -4.89e-01  1.02e-01     4.19e-01     2.12e-01\n1847  1.76e-02 -8.43e-02  1.54e-01     7.58e-01     7.78e-01\n1848  1.68e-02 -1.11e-01  1.63e-01     7.03e-01     7.22e-01\n1849  1.58e-02 -1.41e-01  1.70e-01     4.48e-01     4.65e-01\n1850  3.67e-02 -9.76e-02  1.83e-01     5.68e-01     6.11e-01\n1851  2.64e-02 -1.22e-01  1.77e-01     3.74e-01     4.01e-01\n1852  2.98e-03 -2.88e-02  6.72e-02     9.61e-01     9.64e-01\n1853  2.55e-02 -8.27e-02  1.64e-01     7.06e-01     7.36e-01\n1854  2.09e-02 -9.93e-02  1.68e-01     6.99e-01     7.25e-01\n1855  5.46e-03 -2.81e-02  8.83e-02     9.50e-01     9.57e-01\n1856  6.54e-03 -3.25e-02  8.07e-02     9.36e-01     9.43e-01\n1857  3.01e-02 -7.86e-02  1.74e-01     7.25e-01     7.60e-01\n1858  2.00e-02 -6.60e-02  1.63e-01     8.25e-01     8.49e-01\n1859  2.18e-02 -7.24e-02  1.62e-01     7.78e-01     8.05e-01\n1860 -5.31e-02 -4.56e-01 -5.36e-06     6.40e-02     5.66e-03\n1861 -1.28e-02 -3.09e-01 -1.22e-06     1.49e-02     1.10e-03\n1862 -9.15e-03 -1.88e-01 -9.20e-07     1.07e-02     8.73e-04\n1863 -1.02e-02 -2.44e-01 -1.02e-06     1.19e-02     9.07e-04\n1864 -4.52e-04 -3.70e-02 -4.42e-08     5.34e-04     3.77e-05\n1865 -2.09e-02 -5.89e-01 -2.14e-06     2.44e-02     1.76e-03\n1866 -7.08e-02 -4.28e-01 -4.05e-06     9.53e-02     1.01e-02\n1867 -9.92e-03 -2.91e-01 -1.08e-06     1.13e-02     8.54e-04\n1868 -1.30e-02 -5.13e-01 -1.39e-06     1.53e-02     1.13e-03\n1869 -2.18e-02 -5.53e-01 -2.06e-06     2.55e-02     1.88e-03\n1870 -1.74e-02 -3.67e-01 -1.94e-06     2.04e-02     1.55e-03\n1871 -6.26e-03 -2.95e-01 -5.99e-07     7.26e-03     5.10e-04\n1872 -7.08e-03 -2.97e-01 -6.90e-07     8.26e-03     5.90e-04\n1873 -3.57e-03 -3.15e-01  2.64e-01     2.38e-01     2.37e-01\n1874 -2.31e-03 -2.69e-01  1.13e-01     6.78e-02     6.63e-02\n1875 -1.13e-03 -1.75e-01  7.96e-02     4.80e-02     4.77e-02\n1876 -1.31e-03 -2.42e-01  9.98e-02     5.76e-02     5.64e-02\n1877 -1.04e-04 -3.14e-02  6.39e-03     2.72e-03     2.62e-03\n1878 -3.96e-03 -4.08e-01  1.77e-01     1.10e-01     1.06e-01\n1879  5.48e-03 -2.75e-01  2.95e-01     3.17e-01     3.29e-01\n1880 -1.79e-03 -2.57e-01  9.90e-02     5.43e-02     5.24e-02\n1881 -2.62e-03 -3.74e-01  1.34e-01     7.29e-02     7.12e-02\n1882 -4.33e-03 -4.04e-01  1.85e-01     1.17e-01     1.14e-01\n1883 -2.48e-03 -3.23e-01  1.58e-01     9.65e-02     9.41e-02\n1884 -1.29e-03 -2.50e-01  7.40e-02     3.57e-02     3.47e-02\n1885 -1.45e-03 -2.59e-01  8.09e-02     4.07e-02     3.97e-02\n1886 -3.40e-02 -4.37e-01  1.36e-01     5.80e-01     5.16e-01\n1887 -1.42e-01 -5.24e-01  1.08e-01     5.06e-01     3.39e-01\n1888 -5.47e-02 -3.39e-01  1.16e-01     2.80e-01     2.01e-01\n1889 -7.07e-02 -3.80e-01  1.25e-01     3.32e-01     2.37e-01\n1890 -9.41e-02 -2.68e-01  2.98e-02     1.44e-01     2.96e-02\n1891 -2.92e-01 -7.67e-01  1.91e-02     8.78e-01     5.71e-01\n1892  5.28e-03 -2.96e-01  1.60e-01     5.01e-01     4.93e-01\n1893 -1.57e-01 -5.17e-01  1.05e-01     4.81e-01     3.01e-01\n1894 -3.41e-01 -7.50e-01  2.40e-02     8.29e-01     4.65e-01\n1895 -2.38e-01 -7.24e-01  3.92e-02     8.26e-01     5.72e-01\n1896 -9.63e-02 -4.92e-01  1.29e-01     4.91e-01     3.63e-01\n1897 -2.75e-01 -6.21e-01  6.86e-02     5.85e-01     2.69e-01\n1898 -2.31e-01 -5.81e-01  8.31e-02     5.42e-01     2.78e-01\n1899 -1.30e-01 -4.50e-01  3.31e-03     2.12e-01     5.81e-02\n1900 -7.16e-02 -3.75e-01 -6.66e-04     9.06e-02     1.32e-02\n1901 -2.99e-02 -2.00e-01  1.10e-03     4.29e-02     9.51e-03\n1902 -7.23e-02 -3.39e-01 -8.77e-04     8.88e-02     1.10e-02\n1903 -5.90e-03 -7.96e-02 -4.18e-05     6.55e-03     4.81e-04\n1904 -1.97e-01 -6.94e-01 -1.84e-03     2.28e-01     2.15e-02\n1905 -1.17e-01 -4.13e-01  2.61e-02     2.35e-01     9.25e-02\n1906 -7.10e-02 -3.75e-01 -8.59e-04     8.63e-02     1.02e-02\n1907 -1.48e-01 -6.83e-01 -1.16e-03     1.65e-01     1.38e-02\n1908 -1.98e-01 -6.66e-01 -1.89e-03     2.30e-01     2.25e-02\n1909 -1.32e-01 -5.04e-01 -1.41e-03     1.62e-01     1.95e-02\n1910 -7.46e-02 -4.90e-01 -4.88e-04     8.34e-02     6.53e-03\n1911 -7.59e-02 -4.48e-01 -5.97e-04     8.64e-02     7.53e-03\n1912 -9.11e-02 -3.22e-01 -5.54e-03     1.15e-01     1.08e-02\n1913 -2.67e-02 -1.34e-01 -1.53e-03     3.19e-02     2.13e-03\n1914 -1.87e-02 -9.34e-02 -1.16e-03     2.28e-02     1.67e-03\n1915 -2.05e-02 -1.03e-01 -1.17e-03     2.47e-02     1.79e-03\n1916 -1.02e-03 -7.52e-03 -5.27e-05     1.21e-03     7.47e-05\n1917 -4.49e-02 -2.34e-01 -2.61e-03     5.25e-02     3.42e-03\n1918 -1.04e-01 -3.27e-01  2.18e-04     1.42e-01     1.90e-02\n1919 -2.08e-02 -1.15e-01 -1.21e-03     2.46e-02     1.65e-03\n1920 -2.87e-02 -1.70e-01 -1.71e-03     3.41e-02     2.14e-03\n1921 -4.71e-02 -2.39e-01 -2.69e-03     5.62e-02     3.66e-03\n1922 -3.52e-02 -1.68e-01 -2.18e-03     4.26e-02     3.00e-03\n1923 -1.36e-02 -8.35e-02 -7.58e-04     1.62e-02     1.02e-03\n1924 -1.57e-02 -9.18e-02 -8.31e-04     1.84e-02     1.17e-03\n1925  3.73e-02 -6.18e-02  1.78e-01     7.46e-01     7.87e-01\n1926  3.55e-02 -8.52e-02  1.91e-01     6.95e-01     7.37e-01\n1927  4.74e-02 -9.83e-02  2.03e-01     4.38e-01     4.92e-01\n1928  5.15e-02 -9.04e-02  2.00e-01     5.44e-01     6.01e-01\n1929  1.91e-02 -2.04e-01  1.76e-01     3.75e-01     3.90e-01\n1930  2.47e-03 -5.15e-02  5.00e-02     9.62e-01     9.63e-01\n1931  4.54e-02 -6.79e-02  1.87e-01     6.89e-01     7.37e-01\n1932  3.67e-02 -8.40e-02  1.85e-01     6.91e-01     7.30e-01\n1933  3.26e-03 -7.62e-02  5.54e-02     9.50e-01     9.52e-01\n1934  7.12e-03 -4.66e-02  7.09e-02     9.32e-01     9.41e-01\n1935  3.98e-02 -7.86e-02  1.86e-01     7.05e-01     7.49e-01\n1936  1.80e-02 -1.14e-01  1.42e-01     8.18e-01     8.36e-01\n1937  2.59e-02 -9.65e-02  1.59e-01     7.68e-01     7.96e-01\n1938  4.10e-02 -1.48e-01  1.88e-01     4.87e-01     5.26e-01\n1939  2.35e-02 -2.96e-01  1.81e-01     4.41e-01     4.55e-01\n1940  2.19e-02 -1.35e-01  1.59e-01     2.21e-01     2.41e-01\n1941  2.91e-02 -1.62e-01  1.75e-01     2.58e-01     2.83e-01\n1942 -7.80e-03 -1.89e-01  1.22e-01     1.55e-01     1.36e-01\n1943 -6.07e-03 -5.79e-01  7.68e-02     8.89e-01     8.73e-01\n1944  4.81e-02 -1.07e-01  1.96e-01     4.00e-01     4.50e-01\n1945  2.19e-02 -2.95e-01  1.80e-01     4.19e-01     4.31e-01\n1946 -7.45e-03 -5.95e-01  9.90e-02     8.42e-01     8.20e-01\n1947  2.44e-03 -5.06e-01  1.14e-01     8.11e-01     8.00e-01\n1948  3.41e-02 -2.29e-01  1.91e-01     4.05e-01     4.33e-01\n1949  3.66e-03 -4.40e-01  1.69e-01     5.62e-01     5.51e-01\n1950  1.40e-02 -3.77e-01  1.80e-01     4.94e-01     4.96e-01\n1951  6.24e-03 -1.23e-01  1.06e-01     8.16e-01     8.25e-01\n1952  1.85e-03 -1.68e-01  1.23e-01     7.64e-01     7.65e-01\n1953 -1.49e-03 -1.83e-01  1.65e-01     5.14e-01     5.15e-01\n1954  2.40e-02 -1.09e-01  1.49e-01     6.70e-01     7.00e-01\n1955  7.04e-03 -1.74e-01  1.59e-01     4.61e-01     4.71e-01\n1956  3.31e-04 -5.57e-02  2.67e-02     9.71e-01     9.71e-01\n1957  1.31e-02 -1.01e-01  1.20e-01     7.82e-01     7.98e-01\n1958  5.51e-03 -1.46e-01  1.20e-01     7.70e-01     7.76e-01\n1959  2.12e-03 -5.51e-02  3.33e-02     9.66e-01     9.69e-01\n1960  1.87e-03 -5.71e-02  3.83e-02     9.54e-01     9.56e-01\n1961  1.93e-02 -8.27e-02  1.24e-01     8.07e-01     8.30e-01\n1962  9.29e-03 -9.36e-02  8.81e-02     8.79e-01     8.90e-01\n1963  9.58e-03 -1.04e-01  1.01e-01     8.41e-01     8.52e-01\n1964  3.73e-02 -1.48e-01  1.83e-01     4.94e-01     5.30e-01\n1965  1.93e-02 -2.68e-01  1.76e-01     4.31e-01     4.40e-01\n1966  1.83e-02 -1.22e-01  1.53e-01     2.05e-01     2.22e-01\n1967  2.88e-02 -1.71e-01  1.80e-01     2.89e-01     3.14e-01\n1968 -1.23e-02 -1.93e-01  1.22e-01     1.62e-01     1.41e-01\n1969 -8.35e-03 -5.62e-01  7.13e-02     8.88e-01     8.69e-01\n1970  4.52e-02 -1.02e-01  1.91e-01     4.26e-01     4.73e-01\n1971  1.80e-02 -2.89e-01  1.77e-01     4.25e-01     4.34e-01\n1972 -1.10e-02 -5.89e-01  8.89e-02     8.59e-01     8.35e-01\n1973 -3.81e-04 -4.95e-01  1.01e-01     8.22e-01     8.11e-01\n1974  3.35e-02 -2.41e-01  1.93e-01     4.45e-01     4.74e-01\n1975 -1.60e-04 -4.58e-01  1.61e-01     5.97e-01     5.79e-01\n1976  8.65e-03 -3.95e-01  1.70e-01     5.25e-01     5.19e-01\n1977  1.30e-02 -8.13e-02  1.38e-01     8.06e-01     8.21e-01\n1978  1.11e-02 -1.17e-01  1.58e-01     7.53e-01     7.67e-01\n1979  1.12e-02 -1.53e-01  1.73e-01     5.05e-01     5.16e-01\n1980  3.15e-02 -8.80e-02  1.75e-01     6.52e-01     6.85e-01\n1981  2.42e-02 -1.31e-01  1.87e-01     4.42e-01     4.65e-01\n1982  1.87e-03 -2.63e-02  5.12e-02     9.70e-01     9.72e-01\n1983  2.01e-02 -7.56e-02  1.50e-01     7.66e-01     7.91e-01\n1984  1.58e-02 -9.49e-02  1.58e-01     7.57e-01     7.73e-01\n1985  3.75e-03 -2.41e-02  6.69e-02     9.64e-01     9.68e-01\n1986  4.29e-03 -2.86e-02  6.67e-02     9.51e-01     9.56e-01\n1987  2.31e-02 -6.59e-02  1.57e-01     7.93e-01     8.19e-01\n1988  1.46e-02 -5.33e-02  1.37e-01     8.68e-01     8.86e-01\n1989  1.62e-02 -6.55e-02  1.45e-01     8.28e-01     8.48e-01\n1990  3.35e-02 -8.58e-02  2.05e-01     6.82e-01     7.21e-01\n1991  3.44e-02 -1.35e-01  2.92e-01     5.85e-01     6.23e-01\n1992  3.42e-02 -1.17e-01  2.15e-01     3.74e-01     4.15e-01\n1993  4.36e-02 -1.14e-01  2.33e-01     4.11e-01     4.63e-01\n1994  7.31e-03 -1.96e-01  1.65e-01     1.38e-01     1.40e-01\n1995  6.10e-03 -1.46e-01  3.77e-01     8.74e-01     8.78e-01\n1996  3.87e-02 -8.92e-02  1.89e-01     6.20e-01     6.62e-01\n1997  3.53e-02 -1.45e-01  2.98e-01     5.52e-01     5.91e-01\n1998  8.51e-03 -1.85e-01  3.99e-01     8.20e-01     8.23e-01\n1999  1.36e-02 -1.27e-01  3.48e-01     8.40e-01     8.52e-01\n2000  4.27e-02 -1.14e-01  2.66e-01     5.71e-01     6.21e-01\n2001  2.63e-02 -2.13e-01  3.65e-01     6.02e-01     6.24e-01\n2002  3.23e-02 -1.83e-01  3.47e-01     5.79e-01     6.09e-01\n2003  1.59e-02 -5.93e-02  1.25e-01     8.42e-01     8.60e-01\n2004  1.67e-02 -7.56e-02  1.38e-01     8.12e-01     8.30e-01\n2005  2.47e-02 -1.17e-01  1.71e-01     6.06e-01     6.31e-01\n2006  3.35e-02 -8.92e-02  1.79e-01     6.72e-01     7.08e-01\n2007  3.32e-02 -1.17e-01  1.99e-01     5.01e-01     5.35e-01\n2008  2.21e-03 -1.59e-02  4.27e-02     9.77e-01     9.80e-01\n2009  2.21e-02 -6.56e-02  1.45e-01     7.96e-01     8.20e-01\n2010  1.99e-02 -7.11e-02  1.46e-01     8.01e-01     8.21e-01\n2011  3.83e-03 -2.12e-02  5.84e-02     9.68e-01     9.72e-01\n2012  4.65e-03 -2.15e-02  5.93e-02     9.60e-01     9.65e-01\n2013  2.38e-02 -6.58e-02  1.54e-01     8.00e-01     8.26e-01\n2014  1.48e-02 -5.12e-02  1.34e-01     8.77e-01     8.94e-01\n2015  1.78e-02 -5.77e-02  1.42e-01     8.48e-01     8.67e-01\n2016  2.44e-02 -1.08e-01  1.72e-01     2.48e-01     2.73e-01\n2017  1.14e-02 -1.23e-01  1.54e-01     1.77e-01     1.87e-01\n2018  6.46e-03 -4.63e-02  8.45e-02     6.11e-02     6.77e-02\n2019  1.64e-02 -1.05e-01  1.37e-01     1.56e-01     1.71e-01\n2020 -3.34e-03 -8.33e-02  6.74e-02     6.23e-02     5.49e-02\n2021 -1.05e-02 -4.87e-01  1.50e-01     7.17e-01     6.89e-01\n2022  2.82e-02 -8.08e-02  1.66e-01     2.27e-01     2.57e-01\n2023  1.03e-02 -1.43e-01  1.53e-01     1.97e-01     2.05e-01\n2024 -1.13e-02 -5.35e-01  1.34e-01     7.27e-01     6.91e-01\n2025  2.10e-03 -4.12e-01  1.57e-01     6.31e-01     6.16e-01\n2026  2.78e-02 -1.78e-01  1.79e-01     2.85e-01     3.10e-01\n2027  2.81e-03 -3.51e-01  1.69e-01     4.02e-01     3.89e-01\n2028  8.67e-03 -2.65e-01  1.64e-01     3.15e-01     3.14e-01\n2029  2.54e-02 -1.01e-01  1.45e-01     7.13e-01     7.39e-01\n2030  2.36e-02 -1.14e-01  1.47e-01     6.76e-01     7.01e-01\n2031  2.48e-02 -1.15e-01  1.66e-01     4.31e-01     4.55e-01\n2032  3.76e-02 -1.05e-01  1.84e-01     4.70e-01     5.14e-01\n2033  2.45e-02 -1.20e-01  1.69e-01     3.24e-01     3.52e-01\n2034  3.65e-03 -5.28e-02  4.29e-02     9.54e-01     9.59e-01\n2035  3.25e-02 -1.02e-01  1.67e-01     6.34e-01     6.70e-01\n2036  2.62e-02 -1.14e-01  1.57e-01     6.55e-01     6.84e-01\n2037  6.77e-03 -6.72e-02  6.28e-02     9.32e-01     9.40e-01\n2038  7.81e-03 -5.91e-02  6.74e-02     9.17e-01     9.27e-01\n2039  3.50e-02 -1.06e-01  1.73e-01     6.35e-01     6.73e-01\n2040  2.30e-02 -1.11e-01  1.38e-01     7.66e-01     7.92e-01\n2041  2.60e-02 -1.13e-01  1.48e-01     7.16e-01     7.45e-01\n2042  1.15e-02 -7.84e-02  9.72e-02     8.54e-01     8.68e-01\n2043  9.63e-03 -1.08e-01  1.01e-01     8.25e-01     8.37e-01\n2044  1.41e-02 -1.48e-01  1.50e-01     6.27e-01     6.43e-01\n2045  2.80e-02 -1.00e-01  1.53e-01     6.94e-01     7.26e-01\n2046  2.01e-02 -1.75e-01  1.71e-01     5.24e-01     5.48e-01\n2047  1.19e-03 -3.61e-02  2.22e-02     9.79e-01     9.80e-01\n2048  1.79e-02 -7.82e-02  1.19e-01     8.12e-01     8.34e-01\n2049  1.22e-02 -1.03e-01  1.08e-01     8.16e-01     8.31e-01\n2050  2.57e-03 -4.52e-02  3.29e-02     9.70e-01     9.73e-01\n2051  2.90e-03 -3.85e-02  3.32e-02     9.63e-01     9.67e-01\n2052  2.03e-02 -7.85e-02  1.23e-01     8.18e-01     8.42e-01\n2053  1.09e-02 -8.40e-02  8.57e-02     8.89e-01     9.02e-01\n2054  1.26e-02 -8.90e-02  9.67e-02     8.60e-01     8.74e-01\n2055 -1.16e-01 -3.39e-01  2.67e-02     1.89e-01     4.90e-02\n2056 -7.29e-02 -2.30e-01 -3.45e-03     9.52e-02     1.14e-02\n2057 -3.53e-02 -1.29e-01  3.68e-03     5.01e-02     8.57e-03\n2058 -4.76e-02 -1.63e-01  1.71e-03     6.38e-02     9.12e-03\n2059 -5.20e-03 -2.36e-02 -4.52e-04     6.10e-03     4.22e-04\n2060 -1.78e-01 -4.61e-01 -1.85e-02     2.18e-01     1.83e-02\n2061 -8.07e-02 -2.91e-01  4.88e-02     1.72e-01     7.01e-02\n2062 -6.39e-02 -2.02e-01 -3.83e-03     8.17e-02     8.81e-03\n2063 -1.26e-01 -3.82e-01 -1.23e-02     1.53e-01     1.20e-02\n2064 -1.71e-01 -4.44e-01 -1.89e-02     2.13e-01     2.00e-02\n2065 -8.36e-02 -2.57e-01  1.61e-03     1.13e-01     1.61e-02\n2066 -5.94e-02 -2.11e-01 -5.36e-03     7.22e-02     5.57e-03\n2067 -6.13e-02 -2.06e-01 -5.76e-03     7.56e-02     6.40e-03\n2068  3.71e-02 -1.23e-01  1.86e-01     3.78e-01     4.17e-01\n2069  1.98e-02 -2.06e-01  1.71e-01     3.26e-01     3.39e-01\n2070  1.50e-02 -8.16e-02  1.28e-01     1.42e-01     1.58e-01\n2071  2.38e-02 -1.14e-01  1.56e-01     1.93e-01     2.16e-01\n2072 -4.15e-03 -1.29e-01  9.58e-02     1.07e-01     9.43e-02\n2073 -6.28e-03 -5.50e-01  9.52e-02     8.33e-01     8.14e-01\n2074  4.18e-02 -8.75e-02  1.86e-01     3.08e-01     3.55e-01\n2075  1.92e-02 -2.09e-01  1.70e-01     3.16e-01     3.28e-01\n2076 -6.08e-03 -5.50e-01  1.15e-01     7.84e-01     7.61e-01\n2077  5.03e-03 -4.69e-01  1.29e-01     7.40e-01     7.28e-01\n2078  3.33e-02 -1.73e-01  1.87e-01     3.21e-01     3.51e-01\n2079  7.35e-03 -3.60e-01  1.74e-01     4.69e-01     4.60e-01\n2080  1.47e-02 -3.11e-01  1.77e-01     3.99e-01     4.03e-01\n2081  1.13e-02 -1.20e-01  1.56e-01     7.55e-01     7.65e-01\n2082  5.74e-03 -1.56e-01  1.84e-01     6.77e-01     6.79e-01\n2083  2.21e-04 -1.85e-01  1.71e-01     3.99e-01     3.93e-01\n2084  3.07e-02 -9.52e-02  1.78e-01     6.19e-01     6.54e-01\n2085  1.50e-02 -1.47e-01  1.78e-01     3.72e-01     3.86e-01\n2086  1.55e-03 -3.94e-02  6.68e-02     9.58e-01     9.60e-01\n2087  1.83e-02 -9.54e-02  1.58e-01     7.27e-01     7.47e-01\n2088  1.25e-02 -1.34e-01  1.74e-01     6.93e-01     7.05e-01\n2089  3.98e-03 -2.82e-02  7.14e-02     9.57e-01     9.62e-01\n2090  4.38e-03 -4.26e-02  7.84e-02     9.37e-01     9.42e-01\n2091  2.47e-02 -6.81e-02  1.60e-01     7.75e-01     8.05e-01\n2092  1.50e-02 -5.77e-02  1.41e-01     8.51e-01     8.67e-01\n2093  1.62e-02 -7.81e-02  1.53e-01     8.01e-01     8.20e-01\n2094 -1.21e-01 -3.68e-01 -8.31e-03     1.54e-01     1.43e-02\n2095 -3.57e-02 -1.62e-01 -2.09e-03     4.25e-02     2.87e-03\n2096 -2.57e-02 -1.12e-01 -1.47e-03     3.10e-02     2.27e-03\n2097 -2.88e-02 -1.26e-01 -1.49e-03     3.45e-02     2.38e-03\n2098 -1.42e-03 -9.00e-03 -7.44e-05     1.67e-03     9.98e-05\n2099 -5.96e-02 -2.68e-01 -3.83e-03     7.03e-02     4.62e-03\n2100 -1.46e-01 -4.00e-01 -4.16e-03     1.96e-01     2.59e-02\n2101 -2.84e-02 -1.36e-01 -1.53e-03     3.34e-02     2.25e-03\n2102 -3.90e-02 -1.90e-01 -2.06e-03     4.56e-02     2.86e-03\n2103 -6.22e-02 -2.78e-01 -3.70e-03     7.35e-02     4.93e-03\n2104 -4.88e-02 -1.99e-01 -2.87e-03     5.83e-02     4.16e-03\n2105 -1.87e-02 -1.02e-01 -1.05e-03     2.21e-02     1.36e-03\n2106 -2.15e-02 -1.11e-01 -1.16e-03     2.54e-02     1.59e-03\n2107 -4.29e-03 -2.24e-01  3.38e-01     1.29e-01     1.18e-01\n2108 -7.69e-04 -8.08e-02  2.11e-01     3.06e-02     2.78e-02\n2109 -8.06e-04 -6.11e-02  1.41e-01     2.28e-02     2.08e-02\n2110 -5.96e-04 -7.17e-02  2.08e-01     2.57e-02     2.39e-02\n2111 -2.67e-05 -4.16e-03  1.70e-02     1.13e-03     1.04e-03\n2112 -1.06e-03 -1.36e-01  3.28e-01     4.86e-02     4.49e-02\n2113 -6.22e-03 -2.65e-01  3.32e-01     2.10e-01     1.89e-01\n2114 -5.77e-04 -7.06e-02  1.98e-01     2.40e-02     2.16e-02\n2115 -6.88e-04 -9.09e-02  2.74e-01     3.14e-02     2.86e-02\n2116 -1.20e-03 -1.40e-01  3.36e-01     5.20e-02     4.78e-02\n2117 -1.01e-03 -1.19e-01  2.99e-01     4.39e-02     4.08e-02\n2118 -3.24e-04 -4.65e-02  1.67e-01     1.49e-02     1.41e-02\n2119 -4.06e-04 -5.59e-02  1.74e-01     1.73e-02     1.57e-02\n2120 -1.50e-01 -6.16e-01  8.14e-02     7.17e-01     5.42e-01\n2121 -3.14e-01 -6.39e-01  4.84e-02     6.04e-01     2.57e-01\n2122 -1.73e-01 -4.81e-01  8.09e-02     3.87e-01     1.80e-01\n2123 -2.33e-01 -5.59e-01  7.23e-02     4.74e-01     2.09e-01\n2124 -1.06e-01 -3.10e-01 -1.03e-02     1.36e-01     1.36e-02\n2125 -4.56e-01 -8.02e-01 -6.82e-03     8.69e-01     3.82e-01\n2126 -6.86e-02 -5.22e-01  1.13e-01     6.70e-01     5.72e-01\n2127 -3.28e-01 -6.33e-01  4.24e-02     5.83e-01     2.12e-01\n2128 -4.85e-01 -7.84e-01 -1.13e-02     8.21e-01     2.82e-01\n2129 -4.27e-01 -7.80e-01  3.25e-03     8.49e-01     3.97e-01\n2130 -2.88e-01 -6.57e-01  6.61e-02     6.37e-01     3.14e-01\n2131 -4.07e-01 -6.92e-01 -1.64e-03     6.26e-01     1.54e-01\n2132 -3.79e-01 -6.70e-01  1.56e-02     6.12e-01     1.70e-01\n2133 -9.39e-02 -3.53e-01  6.90e-02     2.83e-01     1.72e-01\n2134 -9.36e-02 -3.57e-01  9.84e-03     1.57e-01     5.31e-02\n2135 -2.54e-02 -1.71e-01  1.93e-02     6.23e-02     3.19e-02\n2136 -1.22e-01 -3.97e-01 -1.08e-03     1.83e-01     4.98e-02\n2137 -2.09e-02 -1.32e-01 -3.49e-04     2.41e-02     2.46e-03\n2138 -3.74e-01 -7.05e-01 -1.54e-02     5.02e-01     9.95e-02\n2139 -6.06e-02 -3.03e-01  9.79e-02     3.04e-01     2.28e-01\n2140 -1.14e-01 -3.92e-01  1.70e-03     1.69e-01     4.59e-02\n2141 -3.81e-01 -7.37e-01 -1.04e-02     4.67e-01     6.70e-02\n2142 -3.52e-01 -6.71e-01 -1.40e-02     4.85e-01     1.05e-01\n2143 -2.27e-01 -5.60e-01 -7.63e-03     3.33e-01     8.52e-02\n2144 -2.18e-01 -5.99e-01 -4.55e-03     2.60e-01     3.25e-02\n2145 -1.84e-01 -5.29e-01 -5.45e-03     2.32e-01     3.70e-02\n2146  7.96e-03 -7.22e-02  7.87e-02     8.90e-01     8.98e-01\n2147  7.03e-03 -1.07e-01  8.91e-02     8.61e-01     8.69e-01\n2148  1.06e-02 -1.58e-01  1.42e-01     6.86e-01     6.95e-01\n2149  2.21e-02 -9.73e-02  1.36e-01     7.65e-01     7.89e-01\n2150  1.58e-02 -1.88e-01  1.72e-01     5.95e-01     6.15e-01\n2151  7.62e-04 -3.63e-02  1.86e-02     9.84e-01     9.85e-01\n2152  1.31e-02 -7.06e-02  9.71e-02     8.58e-01     8.73e-01\n2153  8.97e-03 -1.00e-01  9.24e-02     8.57e-01     8.66e-01\n2154  1.58e-03 -4.85e-02  2.68e-02     9.78e-01     9.81e-01\n2155  1.94e-03 -3.55e-02  2.71e-02     9.73e-01     9.75e-01\n2156  1.44e-02 -7.12e-02  1.02e-01     8.65e-01     8.82e-01\n2157  7.33e-03 -9.02e-02  7.16e-02     9.18e-01     9.27e-01\n2158  8.39e-03 -8.46e-02  8.13e-02     8.96e-01     9.06e-01\n2159  2.56e-02 -6.96e-02  1.70e-01     7.71e-01     8.00e-01\n2160  2.78e-02 -9.81e-02  2.44e-01     7.09e-01     7.39e-01\n2161  3.35e-02 -1.15e-01  2.03e-01     4.87e-01     5.23e-01\n2162  4.36e-02 -1.04e-01  2.19e-01     5.39e-01     5.87e-01\n2163  1.95e-02 -1.95e-01  2.23e-01     2.61e-01     2.82e-01\n2164  4.32e-03 -7.37e-02  2.60e-01     9.38e-01     9.44e-01\n2165  3.09e-02 -7.83e-02  1.76e-01     7.14e-01     7.49e-01\n2166  3.10e-02 -1.03e-01  2.61e-01     6.81e-01     7.19e-01\n2167  7.20e-03 -1.04e-01  3.13e-01     9.11e-01     9.18e-01\n2168  8.81e-03 -6.68e-02  2.34e-01     9.12e-01     9.23e-01\n2169  3.66e-02 -8.60e-02  2.18e-01     6.94e-01     7.34e-01\n2170  2.39e-02 -1.34e-01  3.40e-01     7.55e-01     7.79e-01\n2171  2.82e-02 -1.23e-01  3.06e-01     7.24e-01     7.54e-01\n2172  2.50e-02 -5.02e-02  1.16e-01     1.26e-01     1.55e-01\n2173  1.69e-02 -5.19e-02  9.77e-02     1.08e-01     1.29e-01\n2174  8.14e-03 -2.12e-02  5.00e-02     4.15e-02     5.09e-02\n2175  1.00e-02 -2.92e-02  6.00e-02     5.09e-02     6.27e-02\n2176 -5.04e-04 -3.52e-02  2.53e-02     2.85e-02     2.70e-02\n2177 -4.04e-03 -2.23e-01  1.62e-01     5.55e-01     5.46e-01\n2178  1.99e-02 -4.09e-02  9.73e-02     9.27e-02     1.16e-01\n2179  1.50e-02 -5.25e-02  9.18e-02     9.96e-02     1.18e-01\n2180 -4.75e-03 -2.27e-01  1.61e-01     4.59e-01     4.45e-01\n2181  2.11e-02 -1.48e-01  1.67e-01     4.00e-01     4.24e-01\n2182  1.77e-02 -4.84e-02  9.56e-02     9.41e-02     1.15e-01\n2183  1.05e-02 -1.13e-01  1.15e-01     1.66e-01     1.78e-01\n2184  1.41e-02 -8.08e-02  1.05e-01     1.31e-01     1.49e-01\n2185  4.24e-02 -1.31e-01  1.90e-01     4.23e-01     4.65e-01\n2186  2.50e-02 -2.55e-01  1.77e-01     3.85e-01     4.00e-01\n2187  2.07e-02 -1.13e-01  1.46e-01     1.83e-01     2.02e-01\n2188  2.59e-02 -1.35e-01  1.66e-01     2.10e-01     2.34e-01\n2189 -5.90e-03 -1.57e-01  1.08e-01     1.26e-01     1.13e-01\n2190 -6.47e-03 -5.74e-01  8.46e-02     8.61e-01     8.42e-01\n2191  4.68e-02 -9.25e-02  1.96e-01     3.38e-01     3.88e-01\n2192  2.33e-02 -2.51e-01  1.77e-01     3.59e-01     3.74e-01\n2193 -8.02e-03 -5.59e-01  1.11e-01     8.07e-01     7.82e-01\n2194  4.70e-03 -4.78e-01  1.22e-01     7.70e-01     7.63e-01\n2195  3.40e-02 -1.90e-01  1.90e-01     3.41e-01     3.71e-01\n2196  6.83e-03 -3.94e-01  1.76e-01     4.99e-01     4.89e-01\n2197  1.55e-02 -3.37e-01  1.80e-01     4.30e-01     4.35e-01\n2198  4.64e-02 -8.66e-02  2.00e-01     5.40e-01     5.95e-01\n2199  2.81e-02 -1.31e-01  1.88e-01     4.70e-01     5.03e-01\n2200  2.97e-02 -9.62e-02  1.57e-01     2.28e-01     2.64e-01\n2201  3.60e-02 -1.08e-01  1.77e-01     3.43e-01     3.83e-01\n2202 -3.18e-02 -2.11e-01  8.99e-02     1.88e-01     1.47e-01\n2203 -1.88e-02 -1.88e-01  8.15e-02     9.04e-01     8.77e-01\n2204  5.29e-02 -8.47e-02  2.03e-01     4.82e-01     5.40e-01\n2205  2.29e-02 -1.38e-01  1.80e-01     4.70e-01     4.98e-01\n2206 -3.04e-02 -2.44e-01  8.06e-02     8.82e-01     8.40e-01\n2207 -6.89e-03 -1.58e-01  1.11e-01     8.47e-01     8.37e-01\n2208  3.64e-02 -1.20e-01  1.92e-01     5.10e-01     5.52e-01\n2209 -2.16e-02 -2.54e-01  1.53e-01     6.52e-01     6.22e-01\n2210 -6.06e-04 -2.00e-01  1.69e-01     5.80e-01     5.74e-01\n2211  5.60e-02 -8.43e-02  2.04e-01     5.07e-01     5.65e-01\n2212  5.20e-02 -9.29e-02  1.97e-01     4.62e-01     5.16e-01\n2213  3.99e-02 -7.50e-02  1.60e-01     2.35e-01     2.79e-01\n2214  4.58e-02 -8.20e-02  1.75e-01     2.75e-01     3.26e-01\n2215  2.01e-02 -1.06e-01  1.27e-01     1.74e-01     1.95e-01\n2216  1.07e-02 -6.84e-02  1.05e-01     9.01e-01     9.12e-01\n2217  5.73e-02 -8.56e-02  2.01e-01     4.25e-01     4.84e-01\n2218  5.16e-02 -9.27e-02  1.96e-01     4.41e-01     4.98e-01\n2219  1.44e-02 -9.27e-02  1.34e-01     8.62e-01     8.76e-01\n2220  2.30e-02 -6.63e-02  1.44e-01     8.28e-01     8.53e-01\n2221  5.50e-02 -9.20e-02  2.00e-01     4.27e-01     4.85e-01\n2222  4.17e-02 -1.10e-01  1.98e-01     5.90e-01     6.33e-01\n2223  4.84e-02 -1.01e-01  2.01e-01     5.21e-01     5.70e-01\n2224 -9.18e-02 -3.18e-01 -5.49e-03     1.18e-01     1.12e-02\n2225 -2.73e-02 -1.34e-01 -1.25e-03     3.20e-02     2.21e-03\n2226 -1.76e-02 -8.73e-02 -7.88e-04     2.16e-02     1.75e-03\n2227 -2.23e-02 -1.10e-01 -9.99e-04     2.68e-02     1.87e-03\n2228 -1.10e-03 -7.73e-03 -4.56e-05     1.29e-03     7.85e-05\n2229 -4.75e-02 -2.41e-01 -2.09e-03     5.61e-02     3.62e-03\n2230 -1.15e-01 -3.46e-01 -5.67e-04     1.55e-01     1.99e-02\n2231 -2.17e-02 -1.12e-01 -9.99e-04     2.56e-02     1.71e-03\n2232 -3.04e-02 -1.72e-01 -1.31e-03     3.56e-02     2.21e-03\n2233 -4.94e-02 -2.48e-01 -2.36e-03     5.90e-02     3.86e-03\n2234 -3.89e-02 -1.85e-01 -1.55e-03     4.62e-02     3.20e-03\n2235 -1.43e-02 -8.81e-02 -6.51e-04     1.68e-02     1.06e-03\n2236 -1.66e-02 -9.66e-02 -7.30e-04     1.99e-02     1.23e-03\n2237  6.89e-03 -4.38e-02  7.98e-02     9.14e-01     9.24e-01\n2238  7.02e-03 -6.87e-02  1.09e-01     8.90e-01     8.99e-01\n2239  1.17e-02 -1.26e-01  1.57e-01     7.39e-01     7.53e-01\n2240  1.90e-02 -6.15e-02  1.42e-01     8.17e-01     8.40e-01\n2241  1.86e-02 -1.40e-01  2.08e-01     6.55e-01     6.80e-01\n2242  7.77e-04 -1.50e-02  3.05e-02     9.87e-01     9.88e-01\n2243  1.04e-02 -4.64e-02  9.85e-02     8.92e-01     9.05e-01\n2244  8.35e-03 -5.69e-02  1.12e-01     8.87e-01     8.98e-01\n2245  1.45e-03 -1.79e-02  4.35e-02     9.84e-01     9.86e-01\n2246  1.84e-03 -1.57e-02  3.63e-02     9.79e-01     9.81e-01\n2247  1.16e-02 -4.08e-02  1.10e-01     8.99e-01     9.14e-01\n2248  6.27e-03 -3.83e-02  1.01e-01     9.38e-01     9.47e-01\n2249  7.52e-03 -4.15e-02  1.02e-01     9.21e-01     9.30e-01\n2250  5.66e-02 -8.71e-02  2.02e-01     4.41e-01     5.04e-01\n2251  5.17e-02 -8.95e-02  1.95e-01     4.03e-01     4.58e-01\n2252  3.60e-02 -6.71e-02  1.48e-01     1.94e-01     2.34e-01\n2253  4.01e-02 -7.74e-02  1.67e-01     2.26e-01     2.72e-01\n2254  1.77e-02 -9.02e-02  1.17e-01     1.42e-01     1.61e-01\n2255  1.39e-02 -7.61e-02  1.18e-01     8.78e-01     8.93e-01\n2256  5.45e-02 -8.45e-02  1.96e-01     3.59e-01     4.19e-01\n2257  5.04e-02 -9.09e-02  1.92e-01     3.81e-01     4.36e-01\n2258  1.89e-02 -1.03e-01  1.48e-01     8.27e-01     8.46e-01\n2259  2.82e-02 -7.45e-02  1.61e-01     7.88e-01     8.18e-01\n2260  5.24e-02 -9.13e-02  1.97e-01     3.62e-01     4.20e-01\n2261  4.44e-02 -1.17e-01  1.99e-01     5.26e-01     5.71e-01\n2262  4.87e-02 -1.03e-01  2.00e-01     4.55e-01     5.09e-01\n2263  1.12e-02 -5.17e-02  1.04e-01     8.82e-01     8.96e-01\n2264  1.13e-02 -7.17e-02  1.21e-01     8.53e-01     8.66e-01\n2265  1.84e-02 -1.20e-01  1.64e-01     6.74e-01     6.93e-01\n2266  2.68e-02 -7.37e-02  1.62e-01     7.47e-01     7.79e-01\n2267  2.79e-02 -1.31e-01  2.01e-01     5.74e-01     6.06e-01\n2268  1.44e-03 -1.53e-02  3.65e-02     9.83e-01     9.85e-01\n2269  1.56e-02 -5.51e-02  1.22e-01     8.47e-01     8.67e-01\n2270  1.36e-02 -6.33e-02  1.26e-01     8.47e-01     8.64e-01\n2271  2.59e-03 -1.85e-02  5.25e-02     9.76e-01     9.80e-01\n2272  3.10e-03 -1.76e-02  4.79e-02     9.70e-01     9.74e-01\n2273  1.79e-02 -5.06e-02  1.30e-01     8.54e-01     8.75e-01\n2274  1.04e-02 -3.99e-02  1.12e-01     9.11e-01     9.24e-01\n2275  1.29e-02 -4.57e-02  1.20e-01     8.87e-01     9.02e-01\n2276 -1.53e-01 -3.99e-01  1.62e-02     2.25e-01     4.72e-02\n2277 -7.67e-02 -2.36e-01 -6.05e-03     9.62e-02     1.02e-02\n2278 -3.67e-02 -1.37e-01  3.25e-03     5.05e-02     7.77e-03\n2279 -6.75e-02 -2.10e-01 -4.66e-03     8.41e-02     8.78e-03\n2280 -4.82e-03 -2.31e-02 -4.34e-04     5.73e-03     3.76e-04\n2281 -1.70e-01 -4.57e-01 -1.87e-02     2.07e-01     1.69e-02\n2282 -1.41e-01 -4.00e-01  3.79e-02     2.45e-01     7.47e-02\n2283 -7.05e-02 -2.16e-01 -6.80e-03     8.71e-02     8.20e-03\n2284 -1.21e-01 -3.77e-01 -1.25e-02     1.44e-01     1.10e-02\n2285 -1.74e-01 -4.50e-01 -2.02e-02     2.12e-01     1.81e-02\n2286 -1.15e-01 -3.23e-01 -9.64e-03     1.45e-01     1.52e-02\n2287 -6.04e-02 -2.13e-01 -6.32e-03     7.17e-02     5.20e-03\n2288 -6.57e-02 -2.23e-01 -6.77e-03     7.82e-02     5.87e-03\n2289 -1.64e-01 -4.14e-01 -1.03e-03     2.28e-01     3.53e-02\n2290 -7.07e-02 -2.30e-01 -6.97e-03     8.72e-02     7.38e-03\n2291 -4.10e-02 -1.48e-01 -2.69e-03     5.21e-02     5.76e-03\n2292 -5.63e-02 -1.86e-01 -5.10e-03     6.98e-02     6.28e-03\n2293 -3.62e-03 -1.88e-02 -3.41e-04     4.25e-03     2.64e-04\n2294 -1.38e-01 -4.06e-01 -1.32e-02     1.64e-01     1.20e-02\n2295 -1.57e-01 -4.23e-01  2.69e-02     2.46e-01     6.02e-02\n2296 -5.97e-02 -2.04e-01 -6.00e-03     7.28e-02     5.76e-03\n2297 -9.35e-02 -3.17e-01 -9.25e-03     1.10e-01     7.62e-03\n2298 -1.39e-01 -4.10e-01 -1.53e-02     1.68e-01     1.29e-02\n2299 -9.57e-02 -2.92e-01 -8.87e-03     1.19e-01     1.07e-02\n2300 -4.58e-02 -1.81e-01 -4.60e-03     5.42e-02     3.62e-03\n2301 -5.05e-02 -1.93e-01 -4.67e-03     6.06e-02     4.22e-03\n2302 -8.50e-02 -3.15e-01  5.26e-02     2.61e-01     1.60e-01\n2303 -1.04e-01 -3.52e-01  1.49e-03     1.65e-01     5.12e-02\n2304 -3.37e-02 -1.83e-01  1.15e-02     7.16e-02     3.29e-02\n2305 -7.04e-02 -2.78e-01  4.74e-03     1.22e-01     4.15e-02\n2306 -1.96e-02 -1.16e-01 -3.65e-04     2.25e-02     2.24e-03\n2307 -3.72e-01 -6.95e-01 -1.54e-02     4.91e-01     9.19e-02\n2308 -3.69e-02 -2.41e-01  8.73e-02     2.36e-01     1.90e-01\n2309 -1.08e-01 -3.57e-01 -1.81e-03     1.61e-01     4.24e-02\n2310 -3.33e-01 -6.97e-01 -1.01e-02     4.12e-01     6.08e-02\n2311 -3.23e-01 -6.41e-01 -1.57e-02     4.48e-01     9.55e-02\n2312 -1.30e-01 -4.07e-01  3.09e-03     2.15e-01     7.21e-02\n2313 -1.66e-01 -5.05e-01 -4.69e-03     2.02e-01     2.89e-02\n2314 -1.47e-01 -4.53e-01 -5.75e-03     1.88e-01     3.26e-02\n2315 -2.08e-02 -1.92e-01  1.54e-01     3.13e-01     2.87e-01\n2316 -2.15e-02 -1.65e-01  1.33e-01     1.91e-01     1.62e-01\n2317 -7.49e-03 -7.90e-02  7.44e-02     6.97e-02     5.87e-02\n2318 -6.09e-03 -1.70e-01  1.38e-01     2.31e-01     2.18e-01\n2319 -3.72e-03 -5.34e-02  6.82e-02     3.56e-02     3.05e-02\n2320 -3.34e-02 -3.80e-01  2.22e-01     5.98e-01     5.55e-01\n2321 -1.12e-02 -1.76e-01  1.45e-01     3.33e-01     3.13e-01\n2322 -2.07e-02 -1.78e-01  1.37e-01     2.11e-01     1.81e-01\n2323 -1.55e-02 -3.91e-01  2.92e-01     5.65e-01     5.47e-01\n2324 -2.84e-02 -3.62e-01  1.99e-01     5.76e-01     5.38e-01\n2325  2.61e-03 -2.45e-01  1.88e-01     4.04e-01     3.98e-01\n2326 -1.14e-02 -2.83e-01  2.60e-01     3.39e-01     3.23e-01\n2327 -1.77e-02 -2.46e-01  2.02e-01     3.05e-01     2.80e-01\n2328  2.23e-02 -9.05e-02  1.62e-01     7.07e-01     7.34e-01\n2329  2.11e-02 -1.10e-01  1.72e-01     6.52e-01     6.76e-01\n2330  1.87e-02 -1.28e-01  1.64e-01     3.93e-01     4.16e-01\n2331  3.88e-02 -1.00e-01  1.80e-01     4.98e-01     5.37e-01\n2332  2.59e-02 -1.10e-01  1.66e-01     3.19e-01     3.47e-01\n2333  4.38e-03 -3.05e-02  7.01e-02     9.51e-01     9.56e-01\n2334  3.06e-02 -9.11e-02  1.74e-01     6.47e-01     6.79e-01\n2335  2.61e-02 -9.93e-02  1.76e-01     6.45e-01     6.72e-01\n2336  7.35e-03 -3.38e-02  9.41e-02     9.37e-01     9.45e-01\n2337  8.73e-03 -3.95e-02  9.57e-02     9.19e-01     9.29e-01\n2338  3.49e-02 -8.82e-02  1.84e-01     6.62e-01     7.01e-01\n2339  2.46e-02 -7.37e-02  1.72e-01     7.82e-01     8.08e-01\n2340  2.72e-02 -8.22e-02  1.75e-01     7.28e-01     7.59e-01\n2341 -1.19e-04 -1.79e-01  1.25e-01     7.58e-01     7.57e-01\n2342 -7.07e-03 -2.19e-01  1.50e-01     6.75e-01     6.65e-01\n2343 -1.26e-02 -2.01e-01  1.73e-01     3.88e-01     3.77e-01\n2344  2.03e-02 -1.25e-01  1.50e-01     6.40e-01     6.62e-01\n2345 -2.83e-03 -1.79e-01  1.59e-01     3.78e-01     3.75e-01\n2346 -8.78e-04 -9.10e-02  3.78e-02     9.59e-01     9.57e-01\n2347  8.50e-03 -1.41e-01  1.27e-01     7.38e-01     7.48e-01\n2348 -2.13e-03 -1.97e-01  1.37e-01     6.96e-01     6.97e-01\n2349  1.76e-03 -7.16e-02  3.80e-02     9.60e-01     9.62e-01\n2350  8.21e-04 -9.10e-02  4.58e-02     9.40e-01     9.41e-01\n2351  1.93e-02 -9.27e-02  1.27e-01     7.93e-01     8.17e-01\n2352  7.86e-03 -1.13e-01  9.12e-02     8.61e-01     8.69e-01\n2353  6.41e-03 -1.41e-01  1.04e-01     8.12e-01     8.19e-01\n2354  4.53e-02 -8.25e-02  1.77e-01     3.08e-01     3.57e-01\n2355  2.98e-02 -1.03e-01  1.54e-01     2.48e-01     2.81e-01\n2356  1.72e-02 -5.51e-02  9.67e-02     9.81e-02     1.17e-01\n2357  2.64e-02 -7.20e-02  1.30e-01     1.65e-01     1.96e-01\n2358 -5.84e-03 -1.01e-01  5.22e-02     8.15e-02     7.13e-02\n2359 -1.30e-02 -2.06e-01  1.40e-01     7.81e-01     7.58e-01\n2360  4.45e-02 -7.52e-02  1.67e-01     2.61e-01     3.10e-01\n2361  2.80e-02 -1.04e-01  1.51e-01     2.51e-01     2.81e-01\n2362 -2.42e-02 -2.62e-01  1.37e-01     7.49e-01     7.12e-01\n2363  8.16e-03 -1.72e-01  1.66e-01     6.80e-01     6.86e-01\n2364  3.74e-02 -1.00e-01  1.69e-01     2.89e-01     3.29e-01\n2365  1.57e-03 -2.01e-01  1.57e-01     4.21e-01     4.17e-01\n2366  1.83e-02 -1.52e-01  1.55e-01     3.48e-01     3.65e-01\n2367  1.43e-02 -1.28e-01  1.34e-01     7.24e-01     7.40e-01\n2368  9.20e-03 -1.64e-01  1.38e-01     6.68e-01     6.77e-01\n2369  6.39e-03 -1.52e-01  1.55e-01     4.05e-01     4.11e-01\n2370  3.25e-02 -1.13e-01  1.74e-01     5.21e-01     5.58e-01\n2371  1.36e-02 -1.37e-01  1.59e-01     3.39e-01     3.53e-01\n2372  1.61e-03 -6.77e-02  4.03e-02     9.54e-01     9.56e-01\n2373  2.26e-02 -1.12e-01  1.51e-01     6.67e-01     6.94e-01\n2374  1.33e-02 -1.47e-01  1.43e-01     6.64e-01     6.79e-01\n2375  4.57e-03 -6.58e-02  5.61e-02     9.41e-01     9.47e-01\n2376  4.65e-03 -6.76e-02  6.13e-02     9.25e-01     9.30e-01\n2377  2.98e-02 -1.03e-01  1.63e-01     6.87e-01     7.21e-01\n2378  1.69e-02 -1.05e-01  1.25e-01     7.99e-01     8.19e-01\n2379  1.82e-02 -1.16e-01  1.36e-01     7.47e-01     7.68e-01\n2380 -1.21e-03 -1.69e-01  1.45e-01     2.80e-01     2.79e-01\n2381 -3.91e-02 -2.35e-01  7.44e-02     1.86e-01     1.42e-01\n2382 -2.97e-03 -9.47e-02  5.55e-02     6.65e-02     6.29e-02\n2383 -4.79e-02 -2.31e-01  6.06e-02     1.97e-01     1.41e-01\n2384 -3.57e-02 -1.54e-01  1.69e-05     5.13e-02     1.24e-02\n2385 -2.75e-01 -5.72e-01  3.57e-02     6.73e-01     3.56e-01\n2386  1.88e-02 -1.23e-01  1.55e-01     2.78e-01     2.99e-01\n2387 -6.15e-02 -2.71e-01  6.32e-02     2.09e-01     1.39e-01\n2388 -3.57e-01 -6.35e-01 -2.83e-02     6.80e-01     2.77e-01\n2389 -2.32e-01 -5.16e-01  4.30e-02     6.20e-01     3.57e-01\n2390 -9.64e-02 -3.50e-01  6.92e-02     3.58e-01     2.43e-01\n2391 -2.29e-01 -5.16e-01  1.41e-04     3.93e-01     1.45e-01\n2392 -1.61e-01 -4.27e-01  2.24e-02     3.24e-01     1.49e-01\n2393 -1.15e-02 -3.46e-01  1.82e-01     6.09e-01     5.87e-01\n2394 -1.67e-02 -3.08e-01  2.85e-01     3.61e-01     3.40e-01\n2395 -1.50e-02 -2.20e-01  1.92e-01     2.35e-01     2.10e-01\n2396 -3.52e-03 -2.67e-01  2.68e-01     3.02e-01     2.95e-01\n2397 -1.27e-03 -4.88e-02  1.47e-01     2.73e-02     2.59e-02\n2398 -1.47e-02 -4.28e-01  3.62e-01     5.58e-01     5.40e-01\n2399  6.19e-04 -2.78e-01  1.57e-01     6.22e-01     6.12e-01\n2400 -1.21e-02 -2.91e-01  3.02e-01     3.24e-01     3.08e-01\n2401 -1.26e-02 -3.93e-01  4.02e-01     4.50e-01     4.30e-01\n2402 -1.29e-02 -4.23e-01  3.41e-01     5.62e-01     5.52e-01\n2403 -1.06e-03 -3.42e-01  3.00e-01     4.41e-01     4.32e-01\n2404 -8.48e-03 -2.92e-01  4.01e-01     2.70e-01     2.61e-01\n2405 -7.62e-03 -2.88e-01  3.65e-01     2.89e-01     2.78e-01\n2406  7.62e-03 -7.26e-02  7.93e-02     8.90e-01     8.99e-01\n2407  6.16e-03 -1.12e-01  9.00e-02     8.62e-01     8.70e-01\n2408  1.05e-02 -1.58e-01  1.41e-01     6.85e-01     6.98e-01\n2409  2.18e-02 -9.57e-02  1.34e-01     7.63e-01     7.89e-01\n2410  1.55e-02 -1.95e-01  1.67e-01     5.95e-01     6.13e-01\n2411  7.13e-04 -3.80e-02  1.81e-02     9.84e-01     9.85e-01\n2412  1.26e-02 -6.87e-02  9.78e-02     8.59e-01     8.74e-01\n2413  8.43e-03 -1.00e-01  9.43e-02     8.56e-01     8.67e-01\n2414  1.59e-03 -4.56e-02  2.65e-02     9.78e-01     9.80e-01\n2415  1.72e-03 -3.62e-02  2.74e-02     9.72e-01     9.75e-01\n2416  1.46e-02 -6.93e-02  1.03e-01     8.66e-01     8.82e-01\n2417  7.05e-03 -8.13e-02  7.31e-02     9.19e-01     9.28e-01\n2418  8.36e-03 -8.27e-02  8.33e-02     8.95e-01     9.05e-01\n2419  2.74e-02 -9.80e-02  1.71e-01     6.50e-01     6.79e-01\n2420  2.52e-02 -1.13e-01  1.73e-01     5.94e-01     6.21e-01\n2421  2.01e-02 -1.23e-01  1.56e-01     3.39e-01     3.61e-01\n2422  3.93e-02 -1.02e-01  1.79e-01     4.19e-01     4.66e-01\n2423  2.48e-02 -9.99e-02  1.55e-01     2.65e-01     2.94e-01\n2424  5.59e-03 -3.40e-02  8.20e-02     9.38e-01     9.44e-01\n2425  3.45e-02 -9.57e-02  1.77e-01     5.79e-01     6.15e-01\n2426  2.95e-02 -1.03e-01  1.75e-01     5.81e-01     6.15e-01\n2427  9.85e-03 -3.81e-02  1.12e-01     9.17e-01     9.28e-01\n2428  1.15e-02 -4.65e-02  1.10e-01     8.94e-01     9.08e-01\n2429  3.92e-02 -9.33e-02  1.85e-01     5.92e-01     6.32e-01\n2430  3.00e-02 -7.86e-02  1.79e-01     7.26e-01     7.59e-01\n2431  3.22e-02 -8.80e-02  1.81e-01     6.65e-01     7.03e-01\n2432  7.15e-03 -4.41e-02  8.52e-02     9.16e-01     9.25e-01\n2433  7.05e-03 -7.09e-02  1.07e-01     8.90e-01     8.98e-01\n2434  1.21e-02 -1.23e-01  1.58e-01     7.37e-01     7.51e-01\n2435  1.95e-02 -6.41e-02  1.45e-01     8.20e-01     8.42e-01\n2436  2.12e-02 -1.48e-01  2.12e-01     6.59e-01     6.81e-01\n2437  8.56e-04 -1.52e-02  3.35e-02     9.88e-01     9.89e-01\n2438  1.07e-02 -4.36e-02  1.02e-01     8.95e-01     9.07e-01\n2439  8.73e-03 -5.98e-02  1.14e-01     8.88e-01     8.99e-01\n2440  1.61e-03 -1.83e-02  4.49e-02     9.84e-01     9.86e-01\n2441  1.91e-03 -1.60e-02  3.94e-02     9.79e-01     9.81e-01\n2442  1.22e-02 -4.11e-02  1.12e-01     9.02e-01     9.15e-01\n2443  6.52e-03 -3.63e-02  9.88e-02     9.39e-01     9.47e-01\n2444  8.08e-03 -4.15e-02  1.05e-01     9.22e-01     9.30e-01\n2445  2.93e-02 -1.37e-01  2.97e-01     5.74e-01     6.12e-01\n2446  1.08e-02 -2.37e-01  3.03e-01     3.87e-01     3.99e-01\n2447  1.37e-02 -1.60e-01  2.03e-01     2.31e-01     2.48e-01\n2448  2.45e-02 -1.91e-01  2.62e-01     2.94e-01     3.25e-01\n2449 -1.16e-03 -1.50e-01  6.20e-02     3.84e-02     3.70e-02\n2450 -6.98e-03 -3.19e-01  4.41e-01     6.40e-01     6.35e-01\n2451  3.73e-02 -1.04e-01  2.32e-01     5.55e-01     6.00e-01\n2452  1.00e-02 -2.51e-01  2.94e-01     3.50e-01     3.65e-01\n2453 -8.20e-03 -3.64e-01  4.04e-01     5.35e-01     5.29e-01\n2454 -1.52e-04 -2.97e-01  4.30e-01     6.33e-01     6.29e-01\n2455  2.68e-02 -2.12e-01  3.33e-01     4.42e-01     4.72e-01\n2456 -1.14e-03 -3.46e-01  3.04e-01     3.35e-01     3.30e-01\n2457  2.60e-03 -3.09e-01  3.03e-01     3.43e-01     3.47e-01\n2458  9.38e-03 -8.04e-02  1.25e-01     8.48e-01     8.59e-01\n2459  7.73e-03 -1.15e-01  1.58e-01     7.98e-01     8.08e-01\n2460  6.28e-03 -1.63e-01  1.82e-01     5.68e-01     5.71e-01\n2461  2.62e-02 -8.06e-02  1.65e-01     7.29e-01     7.56e-01\n2462  2.04e-02 -1.43e-01  1.93e-01     5.11e-01     5.30e-01\n2463  1.27e-03 -2.32e-02  4.66e-02     9.76e-01     9.78e-01\n2464  1.48e-02 -7.13e-02  1.33e-01     8.23e-01     8.39e-01\n2465  1.12e-02 -9.67e-02  1.50e-01     8.05e-01     8.15e-01\n2466  2.57e-03 -1.95e-02  5.50e-02     9.73e-01     9.76e-01\n2467  3.10e-03 -2.51e-02  5.46e-02     9.63e-01     9.66e-01\n2468  1.86e-02 -5.42e-02  1.35e-01     8.47e-01     8.67e-01\n2469  1.04e-02 -4.53e-02  1.18e-01     9.03e-01     9.14e-01\n2470  1.20e-02 -5.54e-02  1.26e-01     8.70e-01     8.83e-01\n2471  5.00e-02 -8.39e-02  1.87e-01     3.37e-01     3.94e-01\n2472  4.20e-02 -9.04e-02  1.76e-01     2.75e-01     3.21e-01\n2473  2.16e-02 -5.74e-02  1.08e-01     1.11e-01     1.35e-01\n2474  3.54e-02 -6.61e-02  1.43e-01     1.87e-01     2.26e-01\n2475  1.41e-02 -6.20e-02  8.69e-02     9.66e-02     1.12e-01\n2476  2.10e-02 -8.03e-02  1.72e-01     8.13e-01     8.35e-01\n2477  4.85e-02 -7.62e-02  1.76e-01     2.87e-01     3.41e-01\n2478  4.28e-02 -8.41e-02  1.73e-01     2.79e-01     3.29e-01\n2479  2.45e-02 -1.02e-01  1.64e-01     7.82e-01     8.08e-01\n2480  3.58e-02 -7.98e-02  1.84e-01     7.16e-01     7.57e-01\n2481  4.97e-02 -8.58e-02  1.85e-01     3.16e-01     3.74e-01\n2482  4.57e-02 -1.06e-01  1.94e-01     4.63e-01     5.11e-01\n2483  4.81e-02 -9.47e-02  1.87e-01     3.82e-01     4.34e-01\n2484  5.57e-02 -8.45e-02  2.03e-01     5.06e-01     5.65e-01\n2485  5.20e-02 -9.18e-02  1.99e-01     4.60e-01     5.17e-01\n2486  4.02e-02 -7.81e-02  1.60e-01     2.33e-01     2.78e-01\n2487  4.63e-02 -8.48e-02  1.78e-01     2.76e-01     3.28e-01\n2488  2.14e-02 -1.05e-01  1.25e-01     1.74e-01     1.96e-01\n2489  1.10e-02 -6.21e-02  1.01e-01     9.02e-01     9.13e-01\n2490  5.72e-02 -8.74e-02  2.05e-01     4.20e-01     4.81e-01\n2491  5.20e-02 -9.33e-02  1.98e-01     4.43e-01     5.00e-01\n2492  1.50e-02 -9.01e-02  1.28e-01     8.61e-01     8.76e-01\n2493  2.33e-02 -6.62e-02  1.43e-01     8.27e-01     8.52e-01\n2494  5.49e-02 -9.08e-02  2.04e-01     4.28e-01     4.88e-01\n2495  4.18e-02 -1.11e-01  1.96e-01     5.90e-01     6.36e-01\n2496  4.83e-02 -1.01e-01  1.99e-01     5.23e-01     5.74e-01\n2497  3.82e-02 -1.62e-01  1.82e-01     5.47e-01     5.84e-01\n2498  2.01e-02 -3.32e-01  1.74e-01     5.00e-01     5.12e-01\n2499  2.41e-02 -1.59e-01  1.67e-01     2.66e-01     2.86e-01\n2500  3.02e-02 -1.91e-01  1.87e-01     3.11e-01     3.36e-01\n2501 -1.44e-02 -2.17e-01  1.34e-01     1.90e-01     1.65e-01\n2502 -7.31e-03 -6.00e-01  6.12e-02     9.09e-01     8.93e-01\n2503  4.77e-02 -1.12e-01  1.93e-01     4.64e-01     5.13e-01\n2504  1.92e-02 -3.39e-01  1.75e-01     4.78e-01     4.87e-01\n2505 -9.19e-03 -6.19e-01  8.31e-02     8.72e-01     8.50e-01\n2506  2.88e-04 -5.18e-01  9.63e-02     8.47e-01     8.36e-01\n2507  3.28e-02 -2.64e-01  1.92e-01     4.67e-01     4.97e-01\n2508 -1.00e-03 -4.81e-01  1.61e-01     6.22e-01     6.03e-01\n2509  9.52e-03 -4.20e-01  1.72e-01     5.60e-01     5.53e-01\n2510 -6.25e-05 -1.37e-01  2.51e-01     2.37e-02     2.03e-02\n2511 -1.29e-05 -3.50e-02  9.63e-02     4.66e-03     3.93e-03\n2512 -1.13e-05 -2.86e-02  7.89e-02     3.79e-03     3.17e-03\n2513 -1.13e-05 -2.98e-02  8.61e-02     3.88e-03     3.23e-03\n2514 -4.12e-07 -1.36e-03  4.80e-03     1.62e-04     1.38e-04\n2515 -2.05e-05 -5.43e-02  1.49e-01     7.47e-03     6.29e-03\n2516 -1.03e-04 -1.74e-01  2.97e-01     4.42e-02     3.74e-02\n2517 -9.20e-06 -2.87e-02  8.08e-02     3.67e-03     3.05e-03\n2518 -1.18e-05 -3.71e-02  1.05e-01     4.71e-03     3.92e-03\n2519 -2.21e-05 -5.86e-02  1.56e-01     7.95e-03     6.76e-03\n2520 -1.70e-05 -4.64e-02  1.32e-01     6.75e-03     5.64e-03\n2521 -6.02e-06 -1.77e-02  5.03e-02     2.22e-03     1.89e-03\n2522 -6.68e-06 -2.04e-02  6.22e-02     2.57e-03     2.11e-03\n2523 -5.33e-05 -1.23e-01  2.62e-01     2.52e-02     2.11e-02\n2524 -1.02e-05 -3.26e-02  1.03e-01     5.01e-03     4.14e-03\n2525 -8.17e-06 -2.65e-02  8.28e-02     3.92e-03     3.31e-03\n2526 -8.77e-06 -2.75e-02  8.64e-02     4.11e-03     3.39e-03\n2527 -3.44e-07 -1.26e-03  5.01e-03     1.75e-04     1.44e-04\n2528 -1.50e-05 -5.18e-02  1.58e-01     7.91e-03     6.44e-03\n2529 -9.65e-05 -1.66e-01  2.82e-01     4.44e-02     3.67e-02\n2530 -7.70e-06 -2.71e-02  8.66e-02     3.82e-03     3.12e-03\n2531 -1.04e-05 -3.32e-02  1.12e-01     5.04e-03     4.16e-03\n2532 -1.69e-05 -5.50e-02  1.65e-01     8.58e-03     6.92e-03\n2533 -1.53e-05 -4.88e-02  1.34e-01     7.07e-03     5.90e-03\n2534 -4.87e-06 -1.62e-02  5.58e-02     2.38e-03     1.92e-03\n2535 -5.65e-06 -2.03e-02  6.73e-02     2.83e-03     2.27e-03\n2536 -9.09e-03 -2.45e-01  1.39e-01     2.84e-01     2.65e-01\n2537 -5.10e-02 -2.78e-01  1.04e-01     2.23e-01     1.53e-01\n2538 -9.99e-03 -1.20e-01  6.88e-02     8.89e-02     7.24e-02\n2539 -2.18e-02 -1.89e-01  8.74e-02     1.46e-01     1.12e-01\n2540 -3.34e-02 -1.20e-01  1.89e-02     5.61e-02     1.49e-02\n2541 -2.77e-01 -6.79e-01  6.09e-02     7.11e-01     4.03e-01\n2542  1.26e-02 -1.55e-01  1.47e-01     2.40e-01     2.47e-01\n2543 -6.10e-02 -2.85e-01  9.29e-02     2.22e-01     1.41e-01\n2544 -3.05e-01 -6.57e-01  5.96e-02     6.51e-01     3.11e-01\n2545 -2.04e-01 -6.08e-01  8.35e-02     6.19e-01     3.81e-01\n2546 -4.03e-02 -2.97e-01  1.21e-01     2.55e-01     1.94e-01\n2547 -1.60e-01 -4.43e-01  8.76e-02     3.45e-01     1.53e-01\n2548 -1.15e-01 -3.84e-01  9.09e-02     2.93e-01     1.54e-01\n2549  5.67e-02 -8.64e-02  2.08e-01     5.08e-01     5.67e-01\n2550  5.21e-02 -9.26e-02  2.00e-01     4.64e-01     5.19e-01\n2551  4.12e-02 -7.40e-02  1.65e-01     2.36e-01     2.80e-01\n2552  4.66e-02 -8.41e-02  1.80e-01     2.78e-01     3.29e-01\n2553  2.04e-02 -1.02e-01  1.30e-01     1.75e-01     1.98e-01\n2554  1.07e-02 -6.19e-02  1.05e-01     9.02e-01     9.14e-01\n2555  5.76e-02 -8.68e-02  2.04e-01     4.22e-01     4.86e-01\n2556  5.21e-02 -9.41e-02  2.01e-01     4.43e-01     5.00e-01\n2557  1.46e-02 -8.47e-02  1.28e-01     8.63e-01     8.77e-01\n2558  2.28e-02 -6.44e-02  1.44e-01     8.29e-01     8.53e-01\n2559  5.45e-02 -9.17e-02  2.06e-01     4.29e-01     4.89e-01\n2560  4.22e-02 -1.12e-01  1.94e-01     5.91e-01     6.37e-01\n2561  4.78e-02 -1.03e-01  2.02e-01     5.25e-01     5.76e-01\n2562  1.33e-02 -1.13e-01  1.16e-01     7.92e-01     8.08e-01\n2563  7.10e-03 -2.28e-01  1.32e-01     7.32e-01     7.36e-01\n2564  1.01e-02 -1.78e-01  1.58e-01     5.18e-01     5.27e-01\n2565  2.29e-02 -1.74e-01  1.69e-01     5.75e-01     5.99e-01\n2566  3.85e-03 -2.25e-01  2.20e-01     2.78e-01     2.86e-01\n2567  4.59e-04 -2.49e-01  7.95e-02     9.43e-01     9.44e-01\n2568  2.22e-02 -9.94e-02  1.36e-01     7.38e-01     7.64e-01\n2569  9.06e-03 -2.42e-01  1.44e-01     7.10e-01     7.20e-01\n2570  1.61e-03 -3.13e-01  1.12e-01     9.16e-01     9.20e-01\n2571  2.40e-03 -2.37e-01  7.97e-02     9.20e-01     9.23e-01\n2572  1.85e-02 -1.80e-01  1.43e-01     7.24e-01     7.42e-01\n2573  7.90e-03 -3.32e-01  1.71e-01     7.74e-01     7.83e-01\n2574  9.28e-03 -2.99e-01  1.53e-01     7.47e-01     7.57e-01\n2575  7.40e-03 -4.38e-02  8.31e-02     9.15e-01     9.23e-01\n2576  7.27e-03 -6.73e-02  1.04e-01     8.90e-01     8.99e-01\n2577  1.21e-02 -1.23e-01  1.58e-01     7.39e-01     7.50e-01\n2578  2.01e-02 -6.25e-02  1.45e-01     8.17e-01     8.40e-01\n2579  2.16e-02 -1.38e-01  2.17e-01     6.54e-01     6.82e-01\n2580  9.17e-04 -1.48e-02  3.26e-02     9.87e-01     9.89e-01\n2581  1.10e-02 -4.12e-02  9.93e-02     8.93e-01     9.06e-01\n2582  9.08e-03 -5.53e-02  1.11e-01     8.87e-01     8.98e-01\n2583  1.64e-03 -1.75e-02  4.59e-02     9.84e-01     9.86e-01\n2584  2.00e-03 -1.58e-02  3.69e-02     9.79e-01     9.82e-01\n2585  1.22e-02 -3.97e-02  1.08e-01     9.01e-01     9.15e-01\n2586  6.75e-03 -3.60e-02  9.56e-02     9.38e-01     9.47e-01\n2587  8.34e-03 -4.02e-02  9.93e-02     9.20e-01     9.30e-01\n2588 -6.83e-02 -3.64e-01  1.18e-01     3.54e-01     2.68e-01\n2589 -1.20e-01 -3.56e-01  6.94e-02     2.64e-01     1.19e-01\n2590 -3.54e-02 -1.79e-01  5.68e-02     1.11e-01     6.47e-02\n2591 -7.89e-02 -2.81e-01  6.54e-02     1.94e-01     9.64e-02\n2592 -3.93e-02 -1.28e-01  2.43e-04     5.25e-02     7.03e-03\n2593 -4.05e-01 -7.15e-01  1.48e-02     7.00e-01     2.41e-01\n2594 -1.98e-02 -2.73e-01  1.34e-01     3.17e-01     2.79e-01\n2595 -1.33e-01 -3.62e-01  5.99e-02     2.61e-01     1.06e-01\n2596 -3.98e-01 -6.95e-01  1.08e-03     6.34e-01     1.73e-01\n2597 -3.48e-01 -6.66e-01  3.20e-02     6.37e-01     2.47e-01\n2598 -1.33e-01 -4.09e-01  8.95e-02     3.22e-01     1.63e-01\n2599 -2.37e-01 -5.02e-01  2.63e-02     3.66e-01     8.56e-02\n2600 -1.99e-01 -4.49e-01  4.21e-02     3.29e-01     9.31e-02\n2601 -3.73e-02 -3.62e-01  1.53e-01     4.85e-01     4.33e-01\n2602 -9.29e-02 -4.04e-01  1.29e-01     3.60e-01     2.42e-01\n2603 -2.23e-02 -1.91e-01  1.11e-01     1.50e-01     1.15e-01\n2604 -9.60e-02 -4.05e-01  1.13e-01     3.63e-01     2.43e-01\n2605 -7.29e-02 -2.18e-01  2.77e-02     1.14e-01     2.47e-02\n2606 -2.81e-01 -7.39e-01  3.32e-02     8.32e-01     5.29e-01\n2607 -6.92e-03 -2.97e-01  1.55e-01     4.75e-01     4.56e-01\n2608 -1.23e-01 -4.41e-01  1.17e-01     3.93e-01     2.39e-01\n2609 -3.59e-01 -7.50e-01  2.48e-02     8.25e-01     4.38e-01\n2610 -2.48e-01 -7.05e-01  4.78e-02     7.95e-01     5.25e-01\n2611 -1.37e-01 -5.45e-01  1.13e-01     5.50e-01     3.83e-01\n2612 -3.02e-01 -6.26e-01  6.04e-02     6.01e-01     2.58e-01\n2613 -2.38e-01 -5.64e-01  7.80e-02     5.35e-01     2.59e-01\n2614  8.49e-03 -1.12e-01  9.74e-02     8.37e-01     8.46e-01\n2615  2.52e-03 -2.43e-01  1.22e-01     7.76e-01     7.80e-01\n2616  5.95e-03 -2.02e-01  1.48e-01     5.79e-01     5.85e-01\n2617  1.87e-02 -2.00e-01  1.54e-01     6.48e-01     6.64e-01\n2618  8.21e-05 -2.45e-01  2.49e-01     3.19e-01     3.18e-01\n2619 -2.15e-04 -2.58e-01  7.23e-02     9.52e-01     9.52e-01\n2620  1.61e-02 -9.37e-02  1.17e-01     7.96e-01     8.15e-01\n2621  5.37e-03 -2.67e-01  1.32e-01     7.59e-01     7.65e-01\n2622  4.66e-04 -3.10e-01  1.04e-01     9.30e-01     9.32e-01\n2623  1.15e-03 -2.46e-01  7.24e-02     9.36e-01     9.37e-01\n2624  1.39e-02 -1.97e-01  1.29e-01     7.79e-01     7.93e-01\n2625  4.92e-03 -3.47e-01  1.64e-01     8.13e-01     8.19e-01\n2626  5.76e-03 -3.19e-01  1.50e-01     7.90e-01     7.97e-01\n2627 -9.57e-05 -2.81e-01  1.30e-01     2.39e-02     2.49e-02\n2628 -1.80e-05 -1.19e-01  3.55e-02     4.76e-03     4.90e-03\n2629 -1.34e-05 -8.54e-02  2.98e-02     3.73e-03     3.96e-03\n2630 -1.46e-05 -9.74e-02  3.09e-02     4.01e-03     4.20e-03\n2631 -6.07e-07 -5.02e-03  1.37e-03     1.63e-04     1.68e-04\n2632 -2.97e-05 -1.67e-01  5.95e-02     7.47e-03     7.71e-03\n2633 -1.31e-04 -3.01e-01  1.76e-01     4.31e-02     4.53e-02\n2634 -1.37e-05 -9.90e-02  2.92e-02     3.61e-03     3.73e-03\n2635 -1.75e-05 -1.27e-01  3.72e-02     4.83e-03     4.88e-03\n2636 -3.09e-05 -1.71e-01  6.13e-02     8.00e-03     8.35e-03\n2637 -2.53e-05 -1.42e-01  5.10e-02     6.74e-03     6.97e-03\n2638 -7.78e-06 -6.02e-02  1.81e-02     2.33e-03     2.34e-03\n2639 -1.02e-05 -6.95e-02  2.11e-02     2.65e-03     2.74e-03\n2640  7.04e-03 -4.38e-02  8.22e-02     9.14e-01     9.23e-01\n2641  7.46e-03 -6.80e-02  1.06e-01     8.87e-01     8.97e-01\n2642  1.29e-02 -1.24e-01  1.57e-01     7.34e-01     7.50e-01\n2643  1.96e-02 -6.31e-02  1.42e-01     8.17e-01     8.41e-01\n2644  2.26e-02 -1.35e-01  2.20e-01     6.56e-01     6.79e-01\n2645  9.26e-04 -1.48e-02  3.02e-02     9.87e-01     9.88e-01\n2646  1.07e-02 -4.33e-02  9.69e-02     8.93e-01     9.05e-01\n2647  9.18e-03 -5.83e-02  1.07e-01     8.85e-01     8.97e-01\n2648  1.61e-03 -1.77e-02  4.64e-02     9.83e-01     9.86e-01\n2649  1.97e-03 -1.57e-02  3.45e-02     9.79e-01     9.81e-01\n2650  1.20e-02 -4.12e-02  1.05e-01     8.99e-01     9.14e-01\n2651  7.03e-03 -3.82e-02  9.08e-02     9.38e-01     9.47e-01\n2652  8.48e-03 -4.13e-02  9.80e-02     9.20e-01     9.30e-01\n2653  3.05e-02 -1.67e-01  1.84e-01     4.85e-01     5.17e-01\n2654  1.23e-02 -2.56e-01  1.82e-01     3.98e-01     4.06e-01\n2655  1.37e-02 -1.18e-01  1.56e-01     1.76e-01     1.90e-01\n2656  2.51e-02 -1.97e-01  1.73e-01     3.13e-01     3.32e-01\n2657 -1.56e-02 -1.95e-01  1.19e-01     1.58e-01     1.34e-01\n2658 -1.22e-02 -5.70e-01  7.87e-02     8.80e-01     8.59e-01\n2659  4.03e-02 -1.20e-01  1.84e-01     4.37e-01     4.78e-01\n2660  1.10e-02 -2.92e-01  1.74e-01     4.12e-01     4.16e-01\n2661 -1.41e-02 -6.09e-01  8.04e-02     8.68e-01     8.41e-01\n2662 -4.08e-03 -5.12e-01  1.01e-01     8.22e-01     8.06e-01\n2663  2.87e-02 -2.82e-01  1.85e-01     4.81e-01     5.03e-01\n2664 -5.67e-03 -4.85e-01  1.53e-01     6.20e-01     5.96e-01\n2665  1.12e-03 -4.13e-01  1.65e-01     5.40e-01     5.26e-01\n2666  7.21e-03 -7.23e-02  7.70e-02     8.90e-01     8.99e-01\n2667  5.73e-03 -1.08e-01  8.74e-02     8.62e-01     8.68e-01\n2668  9.35e-03 -1.55e-01  1.38e-01     6.85e-01     6.97e-01\n2669  2.13e-02 -9.48e-02  1.31e-01     7.64e-01     7.89e-01\n2670  1.48e-02 -1.92e-01  1.68e-01     5.95e-01     6.12e-01\n2671  5.95e-04 -3.81e-02  1.95e-02     9.84e-01     9.85e-01\n2672  1.23e-02 -7.09e-02  9.73e-02     8.59e-01     8.74e-01\n2673  7.71e-03 -1.00e-01  9.27e-02     8.57e-01     8.67e-01\n2674  1.54e-03 -4.77e-02  2.77e-02     9.78e-01     9.81e-01\n2675  1.75e-03 -3.67e-02  2.74e-02     9.73e-01     9.75e-01\n2676  1.43e-02 -6.94e-02  1.03e-01     8.65e-01     8.83e-01\n2677  6.97e-03 -8.50e-02  7.22e-02     9.18e-01     9.28e-01\n2678  8.11e-03 -8.32e-02  8.14e-02     8.96e-01     9.06e-01\n2679 -5.25e-02 -4.56e-01 -4.30e-06     6.67e-02     6.14e-03\n2680 -1.33e-02 -3.26e-01 -8.90e-07     1.58e-02     1.18e-03\n2681 -9.51e-03 -1.90e-01 -6.46e-07     1.18e-02     9.36e-04\n2682 -1.07e-02 -2.46e-01 -7.97e-07     1.28e-02     9.84e-04\n2683 -4.90e-04 -3.62e-02 -3.09e-08     5.62e-04     4.19e-05\n2684 -2.08e-02 -5.87e-01 -1.32e-06     2.59e-02     1.88e-03\n2685 -7.12e-02 -4.29e-01 -2.54e-06     9.68e-02     1.08e-02\n2686 -1.00e-02 -2.90e-01 -8.46e-07     1.22e-02     9.43e-04\n2687 -1.36e-02 -5.07e-01 -1.07e-06     1.60e-02     1.16e-03\n2688 -2.27e-02 -5.60e-01 -1.56e-06     2.65e-02     2.05e-03\n2689 -1.88e-02 -3.65e-01 -1.60e-06     2.24e-02     1.72e-03\n2690 -6.43e-03 -3.04e-01 -4.26e-07     7.64e-03     5.64e-04\n2691 -7.78e-03 -2.93e-01 -5.98e-07     9.06e-03     6.44e-04\n2692  5.40e-02 -8.09e-02  2.02e-01     5.68e-01     6.26e-01\n2693  5.00e-02 -9.24e-02  2.01e-01     5.22e-01     5.75e-01\n2694  4.39e-02 -8.55e-02  1.74e-01     2.78e-01     3.30e-01\n2695  5.08e-02 -9.29e-02  1.93e-01     3.34e-01     3.89e-01\n2696  2.32e-02 -1.27e-01  1.45e-01     2.16e-01     2.38e-01\n2697  8.18e-03 -6.20e-02  8.66e-02     9.23e-01     9.30e-01\n2698  5.73e-02 -8.44e-02  2.07e-01     4.88e-01     5.51e-01\n2699  5.08e-02 -9.40e-02  2.01e-01     5.04e-01     5.60e-01\n2700  1.14e-02 -8.78e-02  1.09e-01     8.90e-01     9.02e-01\n2701  1.93e-02 -5.95e-02  1.25e-01     8.62e-01     8.81e-01\n2702  5.44e-02 -9.17e-02  2.08e-01     4.95e-01     5.55e-01\n2703  3.84e-02 -1.16e-01  1.88e-01     6.56e-01     6.94e-01\n2704  4.48e-02 -1.02e-01  1.96e-01     5.89e-01     6.37e-01\n2705 -2.85e-03 -3.31e-01  2.09e-01     1.29e-01     1.30e-01\n2706 -7.51e-04 -2.21e-01  7.54e-02     2.92e-02     3.04e-02\n2707 -4.86e-04 -1.48e-01  5.58e-02     2.26e-02     2.30e-02\n2708 -6.73e-04 -2.11e-01  6.51e-02     2.57e-02     2.62e-02\n2709 -2.82e-05 -1.70e-02  3.65e-03     1.11e-03     1.11e-03\n2710 -1.31e-03 -3.38e-01  1.21e-01     4.83e-02     4.89e-02\n2711 -2.12e-03 -3.28e-01  2.63e-01     2.04e-01     2.08e-01\n2712 -6.06e-04 -2.03e-01  6.67e-02     2.36e-02     2.36e-02\n2713 -8.28e-04 -2.87e-01  8.40e-02     3.12e-02     3.16e-02\n2714 -1.33e-03 -3.47e-01  1.25e-01     5.17e-02     5.21e-02\n2715 -1.08e-03 -2.93e-01  1.03e-01     4.36e-02     4.46e-02\n2716 -4.03e-04 -1.69e-01  4.34e-02     1.51e-02     1.49e-02\n2717 -4.32e-04 -1.85e-01  5.03e-02     1.74e-02     1.72e-02\n2718  2.87e-02 -1.80e-01  1.67e-01     6.11e-01     6.36e-01\n2719  1.06e-02 -3.32e-01  1.69e-01     5.37e-01     5.37e-01\n2720  1.80e-02 -1.64e-01  1.71e-01     2.81e-01     2.95e-01\n2721  2.71e-02 -2.50e-01  1.84e-01     4.08e-01     4.27e-01\n2722 -2.58e-02 -2.66e-01  1.34e-01     2.33e-01     1.92e-01\n2723 -1.02e-02 -5.74e-01  5.38e-02     9.24e-01     9.04e-01\n2724  4.07e-02 -1.20e-01  1.79e-01     5.53e-01     5.94e-01\n2725  8.12e-03 -3.52e-01  1.63e-01     5.41e-01     5.36e-01\n2726 -1.32e-02 -6.26e-01  6.00e-02     9.08e-01     8.84e-01\n2727 -5.30e-03 -5.20e-01  7.62e-02     8.80e-01     8.65e-01\n2728  2.62e-02 -3.12e-01  1.78e-01     5.83e-01     6.00e-01\n2729 -1.04e-02 -5.32e-01  1.34e-01     7.12e-01     6.82e-01\n2730 -1.34e-03 -4.74e-01  1.51e-01     6.47e-01     6.26e-01\n2731  1.73e-03 -3.25e-01  3.48e-01     4.06e-01     4.12e-01\n2732 -5.14e-03 -3.57e-01  1.91e-01     1.41e-01     1.40e-01\n2733 -2.67e-03 -2.68e-01  1.49e-01     1.09e-01     1.05e-01\n2734 -2.93e-03 -2.94e-01  1.72e-01     1.17e-01     1.15e-01\n2735 -3.17e-04 -6.16e-02  1.30e-02     6.31e-03     5.82e-03\n2736 -9.58e-03 -4.51e-01  2.75e-01     2.20e-01     2.13e-01\n2737  1.58e-02 -2.64e-01  3.58e-01     4.76e-01     4.97e-01\n2738 -4.42e-03 -3.45e-01  1.71e-01     1.16e-01     1.11e-01\n2739 -6.67e-03 -4.44e-01  2.18e-01     1.51e-01     1.43e-01\n2740 -9.40e-03 -4.44e-01  2.80e-01     2.27e-01     2.25e-01\n2741 -5.02e-03 -3.61e-01  2.33e-01     1.89e-01     1.84e-01\n2742 -3.76e-03 -3.46e-01  1.29e-01     7.81e-02     7.46e-02\n2743 -4.03e-03 -3.44e-01  1.44e-01     8.83e-02     8.40e-02\n2744  2.93e-02 -1.88e-01  1.69e-01     6.10e-01     6.37e-01\n2745  1.22e-02 -3.52e-01  1.70e-01     5.39e-01     5.41e-01\n2746  1.82e-02 -1.76e-01  1.73e-01     2.77e-01     2.94e-01\n2747  2.70e-02 -2.54e-01  1.87e-01     4.08e-01     4.28e-01\n2748 -2.68e-02 -2.65e-01  1.39e-01     2.33e-01     1.95e-01\n2749 -1.02e-02 -6.09e-01  5.31e-02     9.25e-01     9.06e-01\n2750  4.07e-02 -1.26e-01  1.81e-01     5.52e-01     5.93e-01\n2751  8.40e-03 -3.72e-01  1.67e-01     5.38e-01     5.41e-01\n2752 -1.26e-02 -6.41e-01  6.05e-02     9.09e-01     8.85e-01\n2753 -4.81e-03 -5.36e-01  7.67e-02     8.81e-01     8.67e-01\n2754  2.52e-02 -3.32e-01  1.79e-01     5.81e-01     5.98e-01\n2755 -9.80e-03 -5.46e-01  1.36e-01     7.14e-01     6.86e-01\n2756 -1.02e-03 -4.69e-01  1.54e-01     6.45e-01     6.31e-01\n2757 -5.49e-02 -4.44e-01 -2.75e-06     6.74e-02     5.68e-03\n2758 -1.27e-02 -3.01e-01 -5.98e-07     1.51e-02     1.09e-03\n2759 -9.68e-03 -1.76e-01 -5.01e-07     1.15e-02     8.92e-04\n2760 -1.07e-02 -2.42e-01 -6.02e-07     1.28e-02     9.18e-04\n2761 -5.00e-04 -3.63e-02 -2.23e-08     5.85e-04     3.96e-05\n2762 -2.16e-02 -5.90e-01 -1.15e-06     2.49e-02     1.76e-03\n2763 -7.11e-02 -4.27e-01 -3.78e-06     9.69e-02     1.03e-02\n2764 -1.03e-02 -2.82e-01 -4.64e-07     1.20e-02     8.48e-04\n2765 -1.38e-02 -4.94e-01 -6.81e-07     1.61e-02     1.15e-03\n2766 -2.30e-02 -5.49e-01 -1.23e-06     2.68e-02     1.94e-03\n2767 -1.88e-02 -3.66e-01 -9.37e-07     2.18e-02     1.61e-03\n2768 -6.63e-03 -3.00e-01 -2.79e-07     7.70e-03     5.28e-04\n2769 -7.52e-03 -2.99e-01 -3.54e-07     8.77e-03     6.16e-04\n2770  4.37e-02 -8.89e-02  1.92e-01     6.08e-01     6.58e-01\n2771  2.41e-02 -1.33e-01  1.76e-01     5.59e-01     5.79e-01\n2772  3.32e-02 -1.00e-01  1.67e-01     3.06e-01     3.44e-01\n2773  3.55e-02 -1.15e-01  1.79e-01     3.73e-01     4.12e-01\n2774 -4.57e-02 -2.58e-01  8.80e-02     2.28e-01     1.72e-01\n2775 -1.94e-02 -1.82e-01  5.98e-02     9.27e-01     8.99e-01\n2776  5.24e-02 -8.68e-02  2.02e-01     5.31e-01     5.86e-01\n2777  1.98e-02 -1.48e-01  1.76e-01     5.38e-01     5.58e-01\n2778 -3.05e-02 -2.43e-01  7.52e-02     8.98e-01     8.58e-01\n2779 -8.75e-03 -1.57e-01  9.69e-02     8.76e-01     8.61e-01\n2780  3.38e-02 -1.18e-01  1.91e-01     5.42e-01     5.77e-01\n2781 -2.35e-02 -2.60e-01  1.50e-01     6.82e-01     6.51e-01\n2782 -2.64e-03 -2.14e-01  1.68e-01     6.21e-01     6.13e-01\n2783 -1.20e-01 -3.33e-01  2.03e-02     1.78e-01     3.70e-02\n2784 -5.97e-02 -1.95e-01 -3.60e-03     7.59e-02     8.24e-03\n2785 -2.81e-02 -1.06e-01  3.59e-03     3.85e-02     6.27e-03\n2786 -4.99e-02 -1.64e-01 -1.76e-03     6.36e-02     6.81e-03\n2787 -3.85e-03 -1.84e-02 -3.37e-04     4.47e-03     2.95e-04\n2788 -1.40e-01 -4.02e-01 -1.43e-02     1.70e-01     1.36e-02\n2789 -1.06e-01 -3.19e-01  3.79e-02     1.85e-01     5.99e-02\n2790 -5.39e-02 -1.85e-01 -4.47e-03     6.75e-02     6.40e-03\n2791 -9.80e-02 -3.34e-01 -1.03e-02     1.18e-01     8.57e-03\n2792 -1.41e-01 -3.99e-01 -1.33e-02     1.72e-01     1.44e-02\n2793 -8.73e-02 -2.58e-01 -5.64e-03     1.12e-01     1.21e-02\n2794 -4.72e-02 -1.81e-01 -4.65e-03     5.57e-02     4.04e-03\n2795 -5.12e-02 -1.85e-01 -4.70e-03     6.14e-02     4.65e-03\n2796  6.84e-03 -2.99e-01  1.69e-01     5.90e-01     5.91e-01\n2797 -1.39e-03 -3.06e-01  2.57e-01     3.99e-01     3.93e-01\n2798 -2.04e-04 -2.13e-01  1.90e-01     2.61e-01     2.55e-01\n2799  5.15e-03 -2.28e-01  2.16e-01     2.84e-01     2.83e-01\n2800 -1.37e-03 -5.84e-02  1.56e-01     3.55e-02     3.40e-02\n2801 -9.92e-03 -4.40e-01  3.24e-01     6.21e-01     6.19e-01\n2802  1.78e-02 -2.07e-01  1.64e-01     5.52e-01     5.66e-01\n2803 -1.02e-03 -2.89e-01  2.73e-01     3.54e-01     3.48e-01\n2804 -9.79e-03 -4.04e-01  3.59e-01     5.11e-01     5.01e-01\n2805 -6.89e-03 -4.25e-01  2.96e-01     6.16e-01     6.08e-01\n2806  6.47e-03 -2.99e-01  2.34e-01     4.24e-01     4.21e-01\n2807 -5.73e-03 -2.96e-01  3.48e-01     3.10e-01     3.09e-01\n2808 -3.51e-03 -2.96e-01  3.15e-01     3.22e-01     3.16e-01\n2809  2.15e-02 -1.03e-01  1.49e-01     3.01e-01     3.26e-01\n2810  1.38e-02 -1.09e-01  1.36e-01     2.44e-01     2.59e-01\n2811  4.39e-03 -6.64e-02  7.56e-02     9.60e-02     1.00e-01\n2812  2.09e-02 -6.94e-02  1.15e-01     1.57e-01     1.82e-01\n2813  8.06e-03 -4.79e-02  6.96e-02     7.93e-02     8.96e-02\n2814  1.43e-02 -9.61e-02  1.66e-01     7.80e-01     7.95e-01\n2815  2.53e-02 -8.86e-02  1.39e-01     2.50e-01     2.79e-01\n2816  1.86e-02 -9.97e-02  1.37e-01     2.45e-01     2.66e-01\n2817  2.41e-02 -8.33e-02  1.77e-01     7.41e-01     7.71e-01\n2818  2.55e-02 -9.95e-02  1.80e-01     6.77e-01     7.05e-01\n2819  3.25e-02 -9.18e-02  1.55e-01     2.77e-01     3.11e-01\n2820  3.60e-02 -9.97e-02  1.77e-01     4.09e-01     4.49e-01\n2821  3.16e-02 -9.72e-02  1.62e-01     3.37e-01     3.72e-01\n2822 -9.14e-02 -3.13e-01  5.50e-02     1.95e-01     8.34e-02\n2823 -6.92e-02 -2.18e-01  1.52e-02     1.06e-01     2.34e-02\n2824 -2.04e-02 -9.55e-02  1.78e-02     4.02e-02     1.41e-02\n2825 -7.74e-02 -2.28e-01  9.18e-03     1.13e-01     2.11e-02\n2826 -1.02e-02 -4.11e-02 -1.05e-03     1.23e-02     9.84e-04\n2827 -2.63e-01 -5.48e-01 -3.04e-02     3.45e-01     4.31e-02\n2828 -6.91e-02 -2.94e-01  6.99e-02     2.08e-01     1.16e-01\n2829 -7.75e-02 -2.36e-01  6.06e-03     1.11e-01     1.93e-02\n2830 -2.25e-01 -5.29e-01 -2.72e-02     2.84e-01     2.77e-02\n2831 -2.52e-01 -5.29e-01 -2.14e-02     3.37e-01     4.59e-02\n2832 -1.47e-01 -3.74e-01  7.62e-03     2.08e-01     3.67e-02\n2833 -1.16e-01 -3.31e-01 -1.33e-02     1.43e-01     1.33e-02\n2834 -1.07e-01 -2.96e-01 -9.93e-03     1.38e-01     1.52e-02\n2835  4.18e-02 -1.42e-01  1.89e-01     4.84e-01     5.24e-01\n2836  2.37e-02 -2.72e-01  1.78e-01     4.42e-01     4.56e-01\n2837  2.30e-02 -1.28e-01  1.59e-01     2.21e-01     2.41e-01\n2838  2.82e-02 -1.50e-01  1.77e-01     2.57e-01     2.82e-01\n2839 -9.66e-03 -1.88e-01  1.22e-01     1.55e-01     1.36e-01\n2840 -7.31e-03 -5.55e-01  7.18e-02     8.89e-01     8.70e-01\n2841  4.86e-02 -1.02e-01  1.95e-01     4.01e-01     4.50e-01\n2842  2.14e-02 -2.79e-01  1.78e-01     4.16e-01     4.28e-01\n2843 -8.73e-03 -5.93e-01  9.54e-02     8.41e-01     8.19e-01\n2844  2.02e-03 -4.88e-01  1.12e-01     8.11e-01     8.01e-01\n2845  3.36e-02 -2.17e-01  1.92e-01     4.03e-01     4.31e-01\n2846  3.02e-03 -4.29e-01  1.71e-01     5.61e-01     5.49e-01\n2847  1.24e-02 -3.71e-01  1.78e-01     4.98e-01     4.93e-01\n2848  5.32e-03 -7.67e-02  1.14e-01     8.84e-01     8.88e-01\n2849  3.12e-03 -1.22e-01  1.56e-01     8.35e-01     8.36e-01\n2850  1.09e-03 -1.83e-01  1.91e-01     6.20e-01     6.16e-01\n2851  1.88e-02 -7.06e-02  1.41e-01     7.99e-01     8.20e-01\n2852  1.41e-02 -1.62e-01  2.13e-01     5.84e-01     5.94e-01\n2853  6.27e-04 -2.47e-02  4.46e-02     9.82e-01     9.82e-01\n2854  9.16e-03 -6.33e-02  1.11e-01     8.69e-01     8.80e-01\n2855  6.19e-03 -9.86e-02  1.49e-01     8.46e-01     8.52e-01\n2856  1.55e-03 -1.92e-02  5.19e-02     9.81e-01     9.83e-01\n2857  1.73e-03 -2.44e-02  4.90e-02     9.73e-01     9.75e-01\n2858  1.23e-02 -4.44e-02  1.10e-01     8.96e-01     9.10e-01\n2859  6.71e-03 -4.19e-02  1.02e-01     9.31e-01     9.39e-01\n2860  7.69e-03 -5.26e-02  1.11e-01     9.05e-01     9.14e-01\n2861 -5.15e-02 -4.61e-01 -5.33e-06     6.26e-02     5.59e-03\n2862 -1.27e-02 -3.13e-01 -1.19e-06     1.48e-02     1.14e-03\n2863 -9.16e-03 -1.91e-01 -9.09e-07     1.10e-02     8.96e-04\n2864 -1.00e-02 -2.45e-01 -1.15e-06     1.17e-02     9.11e-04\n2865 -4.52e-04 -3.88e-02 -4.39e-08     5.36e-04     3.87e-05\n2866 -2.03e-02 -5.93e-01 -1.99e-06     2.43e-02     1.86e-03\n2867 -6.97e-02 -4.38e-01 -6.19e-06     9.52e-02     1.05e-02\n2868 -9.98e-03 -2.88e-01 -1.02e-06     1.17e-02     8.71e-04\n2869 -1.29e-02 -5.11e-01 -1.28e-06     1.55e-02     1.11e-03\n2870 -2.20e-02 -5.67e-01 -1.98e-06     2.57e-02     1.93e-03\n2871 -1.75e-02 -3.79e-01 -2.01e-06     2.09e-02     1.62e-03\n2872 -6.17e-03 -3.19e-01 -5.40e-07     7.29e-03     5.20e-04\n2873 -7.45e-03 -3.09e-01 -7.30e-07     8.83e-03     6.32e-04\n2874  3.16e-03 -1.29e-01  8.94e-02     8.52e-01     8.57e-01\n2875 -6.54e-04 -1.78e-01  1.11e-01     8.00e-01     7.99e-01\n2876 -5.51e-03 -2.02e-01  1.62e-01     5.61e-01     5.58e-01\n2877  1.85e-02 -1.11e-01  1.33e-01     7.43e-01     7.63e-01\n2878  3.36e-03 -1.95e-01  1.62e-01     5.20e-01     5.25e-01\n2879 -3.01e-05 -5.69e-02  2.33e-02     9.77e-01     9.77e-01\n2880  8.79e-03 -1.04e-01  1.01e-01     8.30e-01     8.40e-01\n2881  2.57e-03 -1.62e-01  1.08e-01     8.09e-01     8.12e-01\n2882  1.36e-03 -5.53e-02  2.94e-02     9.75e-01     9.77e-01\n2883  1.09e-03 -5.49e-02  2.94e-02     9.65e-01     9.66e-01\n2884  1.43e-02 -7.45e-02  1.04e-01     8.57e-01     8.74e-01\n2885  6.01e-03 -9.70e-02  7.61e-02     9.09e-01     9.16e-01\n2886  5.97e-03 -1.05e-01  8.19e-02     8.79e-01     8.85e-01\n2887  3.85e-02 -1.51e-01  1.81e-01     5.47e-01     5.86e-01\n2888  2.08e-02 -3.15e-01  1.73e-01     5.00e-01     5.12e-01\n2889  2.34e-02 -1.55e-01  1.68e-01     2.64e-01     2.84e-01\n2890  3.04e-02 -1.85e-01  1.84e-01     3.09e-01     3.34e-01\n2891 -1.33e-02 -2.17e-01  1.33e-01     1.89e-01     1.64e-01\n2892 -6.86e-03 -5.80e-01  6.32e-02     9.09e-01     8.92e-01\n2893  4.79e-02 -1.07e-01  1.96e-01     4.61e-01     5.16e-01\n2894  2.05e-02 -3.27e-01  1.75e-01     4.79e-01     4.88e-01\n2895 -9.17e-03 -6.10e-01  8.46e-02     8.72e-01     8.50e-01\n2896  6.82e-04 -5.20e-01  9.78e-02     8.45e-01     8.36e-01\n2897  3.28e-02 -2.55e-01  1.89e-01     4.66e-01     4.94e-01\n2898  3.90e-04 -4.84e-01  1.64e-01     6.21e-01     6.05e-01\n2899  1.12e-02 -4.19e-01  1.73e-01     5.56e-01     5.52e-01\n2900 -2.40e-03 -1.64e-01  8.30e-02     8.67e-01     8.63e-01\n2901 -1.26e-02 -2.73e-01  1.18e-01     7.89e-01     7.72e-01\n2902 -1.86e-02 -2.42e-01  1.58e-01     5.70e-01     5.46e-01\n2903  4.16e-03 -2.48e-01  1.30e-01     7.58e-01     7.62e-01\n2904 -1.47e-02 -2.69e-01  2.64e-01     3.49e-01     3.39e-01\n2905 -2.45e-03 -2.45e-01  6.76e-02     9.56e-01     9.53e-01\n2906  2.66e-03 -1.19e-01  8.84e-02     8.60e-01     8.62e-01\n2907 -9.49e-03 -2.87e-01  1.20e-01     7.92e-01     7.82e-01\n2908 -7.66e-04 -3.12e-01  9.81e-02     9.45e-01     9.45e-01\n2909 -2.01e-03 -2.28e-01  6.33e-02     9.48e-01     9.46e-01\n2910  5.10e-03 -2.20e-01  1.02e-01     8.66e-01     8.71e-01\n2911 -6.08e-04 -3.84e-01  1.59e-01     8.62e-01     8.63e-01\n2912 -2.03e-03 -3.48e-01  1.35e-01     8.42e-01     8.40e-01\n2913 -5.03e-02 -4.58e-01 -4.74e-06     6.23e-02     5.44e-03\n2914 -1.21e-02 -3.11e-01 -9.00e-07     1.45e-02     1.05e-03\n2915 -8.75e-03 -1.87e-01 -6.05e-07     1.06e-02     8.39e-04\n2916 -1.03e-02 -2.47e-01 -9.50e-07     1.21e-02     8.92e-04\n2917 -4.36e-04 -3.69e-02 -2.69e-08     5.16e-04     3.62e-05\n2918 -1.93e-02 -5.81e-01 -1.56e-06     2.34e-02     1.71e-03\n2919 -6.75e-02 -4.41e-01 -3.18e-06     9.35e-02     9.67e-03\n2920 -9.35e-03 -2.90e-01 -8.47e-07     1.13e-02     8.05e-04\n2921 -1.27e-02 -5.01e-01 -9.82e-07     1.50e-02     1.01e-03\n2922 -2.12e-02 -5.54e-01 -1.77e-06     2.48e-02     1.79e-03\n2923 -1.69e-02 -3.75e-01 -1.25e-06     2.04e-02     1.55e-03\n2924 -5.97e-03 -3.18e-01 -4.87e-07     6.98e-03     4.96e-04\n2925 -7.15e-03 -3.13e-01 -5.36e-07     8.37e-03     5.77e-04\n2926  1.58e-02 -8.97e-02  1.13e-01     8.13e-01     8.31e-01\n2927  1.37e-02 -1.14e-01  1.19e-01     7.79e-01     7.94e-01\n2928  1.87e-02 -1.38e-01  1.59e-01     5.56e-01     5.76e-01\n2929  3.27e-02 -1.04e-01  1.68e-01     6.19e-01     6.55e-01\n2930  2.21e-02 -1.57e-01  1.76e-01     4.48e-01     4.74e-01\n2931  1.71e-03 -4.29e-02  2.85e-02     9.72e-01     9.74e-01\n2932  2.31e-02 -8.98e-02  1.37e-01     7.58e-01     7.84e-01\n2933  1.67e-02 -1.06e-01  1.26e-01     7.65e-01     7.83e-01\n2934  3.42e-03 -5.39e-02  4.31e-02     9.60e-01     9.64e-01\n2935  4.19e-03 -4.57e-02  4.56e-02     9.51e-01     9.56e-01\n2936  2.56e-02 -8.93e-02  1.43e-01     7.61e-01     7.91e-01\n2937  1.41e-02 -9.81e-02  1.07e-01     8.53e-01     8.70e-01\n2938  1.64e-02 -9.94e-02  1.19e-01     8.17e-01     8.36e-01\n2939  3.35e-02 -1.20e-01  2.08e-01     5.64e-01     6.01e-01\n2940  1.95e-05 -1.91e-01  1.89e-01     4.53e-01     4.52e-01\n2941  1.58e-02 -1.29e-01  1.54e-01     2.06e-01     2.23e-01\n2942  6.02e-03 -1.75e-01  1.59e-01     4.26e-01     4.28e-01\n2943 -7.53e-02 -2.78e-01  4.59e-02     1.87e-01     1.00e-01\n2944 -6.33e-02 -2.79e-01  7.87e-02     8.99e-01     8.23e-01\n2945  4.52e-02 -9.42e-02  2.05e-01     5.40e-01     5.91e-01\n2946 -1.32e-02 -2.12e-01  1.74e-01     4.85e-01     4.65e-01\n2947 -1.01e-01 -3.78e-01  4.17e-02     8.98e-01     7.81e-01\n2948 -4.83e-02 -2.49e-01  8.91e-02     8.61e-01     8.01e-01\n2949 -4.12e-03 -1.90e-01  1.59e-01     6.19e-01     6.07e-01\n2950 -1.12e-01 -3.95e-01  9.26e-02     7.08e-01     5.74e-01\n2951 -7.00e-02 -3.34e-01  1.25e-01     6.31e-01     5.45e-01\n2952 -4.17e-02 -4.31e-01  1.48e-01     5.66e-01     5.01e-01\n2953 -1.20e-01 -4.78e-01  1.27e-01     4.49e-01     3.00e-01\n2954 -3.68e-02 -2.62e-01  1.24e-01     2.11e-01     1.57e-01\n2955 -1.01e-01 -4.41e-01  1.22e-01     3.99e-01     2.70e-01\n2956 -9.14e-02 -2.71e-01  2.95e-02     1.42e-01     2.94e-02\n2957 -2.76e-01 -7.65e-01  2.52e-02     8.66e-01     5.70e-01\n2958 -6.76e-03 -3.32e-01  1.51e-01     5.39e-01     5.17e-01\n2959 -1.52e-01 -5.00e-01  1.11e-01     4.69e-01     2.91e-01\n2960 -3.53e-01 -7.67e-01  1.99e-02     8.49e-01     4.72e-01\n2961 -2.44e-01 -7.34e-01  3.79e-02     8.33e-01     5.69e-01\n2962 -1.28e-01 -5.55e-01  1.15e-01     5.81e-01     4.15e-01\n2963 -3.13e-01 -6.50e-01  5.86e-02     6.38e-01     2.83e-01\n2964 -2.55e-01 -6.04e-01  7.76e-02     5.82e-01     2.94e-01\n2965 -1.31e-02 -2.84e-01  1.46e-01     3.44e-01     3.15e-01\n2966 -7.00e-02 -3.34e-01  1.09e-01     2.83e-01     1.90e-01\n2967 -1.71e-02 -1.62e-01  8.00e-02     1.23e-01     9.72e-02\n2968 -2.57e-02 -2.17e-01  1.00e-01     1.66e-01     1.24e-01\n2969 -4.24e-02 -1.41e-01  1.94e-02     6.95e-02     1.68e-02\n2970 -2.93e-01 -7.07e-01  4.22e-02     7.59e-01     4.41e-01\n2971  1.38e-02 -1.82e-01  1.57e-01     2.82e-01     2.86e-01\n2972 -7.92e-02 -3.41e-01  1.01e-01     2.70e-01     1.71e-01\n2973 -3.18e-01 -6.83e-01  5.03e-02     6.86e-01     3.31e-01\n2974 -2.26e-01 -6.34e-01  7.79e-02     6.70e-01     4.16e-01\n2975 -4.66e-02 -3.26e-01  1.28e-01     2.82e-01     2.12e-01\n2976 -1.78e-01 -4.76e-01  8.62e-02     3.82e-01     1.70e-01\n2977 -1.34e-01 -4.15e-01  9.55e-02     3.32e-01     1.73e-01\n2978 -5.37e-02 -4.61e-01 -7.83e-06     6.77e-02     5.94e-03\n2979 -1.35e-02 -3.13e-01 -1.66e-06     1.60e-02     1.19e-03\n2980 -9.98e-03 -1.87e-01 -1.35e-06     1.22e-02     9.44e-04\n2981 -1.13e-02 -2.49e-01 -1.71e-06     1.31e-02     9.92e-04\n2982 -4.95e-04 -3.60e-02 -5.81e-08     5.78e-04     4.05e-05\n2983 -2.19e-02 -5.93e-01 -2.61e-06     2.66e-02     1.81e-03\n2984 -7.32e-02 -4.31e-01 -7.83e-06     1.00e-01     1.12e-02\n2985 -1.06e-02 -2.91e-01 -1.37e-06     1.25e-02     9.13e-04\n2986 -1.40e-02 -5.10e-01 -1.83e-06     1.66e-02     1.19e-03\n2987 -2.48e-02 -5.64e-01 -3.17e-06     2.87e-02     2.02e-03\n2988 -1.93e-02 -3.79e-01 -2.72e-06     2.27e-02     1.72e-03\n2989 -6.73e-03 -3.02e-01 -9.13e-07     7.95e-03     5.58e-04\n2990 -7.80e-03 -2.98e-01 -9.42e-07     9.17e-03     6.53e-04\n2991 -1.58e-01 -4.33e-01  5.60e-02     4.37e-01     2.59e-01\n2992 -2.07e-01 -4.93e-01 -6.47e-03     3.05e-01     8.36e-02\n2993 -9.16e-02 -3.15e-01  9.86e-03     1.60e-01     5.98e-02\n2994 -1.29e-01 -3.89e-01  2.44e-03     2.07e-01     6.69e-02\n2995 -3.56e-02 -1.95e-01 -6.44e-04     3.99e-02     3.51e-03\n2996 -4.63e-01 -7.50e-01 -2.62e-02     6.51e-01     1.40e-01\n2997 -7.38e-02 -3.21e-01  9.42e-02     3.94e-01     3.05e-01\n2998 -2.02e-01 -4.99e-01 -6.82e-03     2.84e-01     6.75e-02\n2999 -4.30e-01 -7.48e-01 -1.78e-02     5.50e-01     9.18e-02\n3000 -4.17e-01 -7.06e-01 -2.74e-02     6.07e-01     1.46e-01\n3001 -2.04e-01 -5.04e-01 -5.71e-04     3.38e-01     1.13e-01\n3002 -2.57e-01 -6.09e-01 -7.84e-03     3.13e-01     4.52e-02\n3003 -2.36e-01 -5.66e-01 -8.44e-03     3.04e-01     5.19e-02\n3004  3.09e-03 -1.48e-01  1.07e-01     7.96e-01     7.96e-01\n3005 -7.36e-03 -2.38e-01  1.34e-01     7.13e-01     7.01e-01\n3006 -8.92e-03 -2.10e-01  1.53e-01     4.72e-01     4.59e-01\n3007  1.40e-02 -1.99e-01  1.52e-01     6.23e-01     6.35e-01\n3008 -7.35e-03 -2.20e-01  2.23e-01     2.79e-01     2.71e-01\n3009 -2.39e-03 -2.64e-01  7.42e-02     9.40e-01     9.38e-01\n3010  1.16e-02 -1.17e-01  1.21e-01     7.61e-01     7.76e-01\n3011 -4.26e-03 -2.60e-01  1.36e-01     7.10e-01     7.03e-01\n3012 -8.33e-05 -3.20e-01  1.11e-01     9.23e-01     9.22e-01\n3013 -9.66e-04 -2.36e-01  7.24e-02     9.23e-01     9.21e-01\n3014  1.25e-02 -1.97e-01  1.34e-01     7.66e-01     7.78e-01\n3015  2.93e-03 -3.44e-01  1.68e-01     7.93e-01     7.98e-01\n3016  1.66e-03 -3.17e-01  1.48e-01     7.69e-01     7.67e-01\n3017  2.15e-02 -1.21e-01  1.95e-01     6.39e-01     6.64e-01\n3018  1.82e-02 -1.60e-01  2.62e-01     5.06e-01     5.28e-01\n3019  9.82e-03 -1.46e-01  1.67e-01     2.74e-01     2.89e-01\n3020  3.88e-02 -1.15e-01  2.50e-01     4.31e-01     4.76e-01\n3021  3.10e-03 -1.66e-01  1.51e-01     1.23e-01     1.25e-01\n3022  3.63e-03 -1.48e-01  3.76e-01     8.53e-01     8.56e-01\n3023  2.92e-02 -1.01e-01  1.78e-01     6.14e-01     6.46e-01\n3024  2.24e-02 -1.54e-01  2.74e-01     5.03e-01     5.31e-01\n3025  5.23e-03 -1.94e-01  4.12e-01     8.17e-01     8.21e-01\n3026  9.13e-03 -1.39e-01  3.56e-01     8.27e-01     8.36e-01\n3027  3.91e-02 -1.11e-01  2.91e-01     6.06e-01     6.49e-01\n3028  1.91e-02 -2.20e-01  3.73e-01     6.10e-01     6.29e-01\n3029  2.37e-02 -1.91e-01  3.43e-01     5.79e-01     6.01e-01\n3030  7.23e-03 -4.68e-02  8.20e-02     9.15e-01     9.22e-01\n3031  7.12e-03 -6.99e-02  1.07e-01     8.89e-01     8.97e-01\n3032  1.26e-02 -1.30e-01  1.58e-01     7.38e-01     7.50e-01\n3033  1.95e-02 -6.71e-02  1.44e-01     8.18e-01     8.41e-01\n3034  2.17e-02 -1.49e-01  2.22e-01     6.56e-01     6.75e-01\n3035  8.42e-04 -1.43e-02  3.29e-02     9.87e-01     9.88e-01\n3036  1.06e-02 -4.56e-02  1.01e-01     8.93e-01     9.04e-01\n3037  9.10e-03 -6.23e-02  1.11e-01     8.87e-01     8.97e-01\n3038  1.56e-03 -1.61e-02  4.55e-02     9.84e-01     9.85e-01\n3039  1.88e-03 -1.60e-02  3.93e-02     9.79e-01     9.81e-01\n3040  1.19e-02 -4.29e-02  1.08e-01     9.01e-01     9.15e-01\n3041  6.63e-03 -3.97e-02  9.74e-02     9.38e-01     9.46e-01\n3042  8.01e-03 -4.21e-02  1.03e-01     9.21e-01     9.30e-01\n3043  4.32e-03 -6.55e-02  6.40e-02     9.18e-01     9.24e-01\n3044  2.67e-03 -1.15e-01  7.62e-02     8.93e-01     8.98e-01\n3045  3.87e-03 -1.69e-01  1.31e-01     7.43e-01     7.49e-01\n3046  1.50e-02 -8.61e-02  1.16e-01     8.29e-01     8.46e-01\n3047  9.73e-03 -2.12e-01  1.65e-01     6.70e-01     6.81e-01\n3048  3.14e-04 -3.88e-02  1.59e-02     9.88e-01     9.88e-01\n3049  8.29e-03 -6.10e-02  7.84e-02     8.98e-01     9.08e-01\n3050  4.46e-03 -1.04e-01  7.92e-02     8.91e-01     8.98e-01\n3051  9.93e-04 -5.09e-02  2.24e-02     9.84e-01     9.86e-01\n3052  1.04e-03 -3.73e-02  2.01e-02     9.80e-01     9.82e-01\n3053  9.57e-03 -5.86e-02  8.16e-02     9.06e-01     9.19e-01\n3054  4.61e-03 -8.99e-02  5.83e-02     9.42e-01     9.48e-01\n3055  5.22e-03 -7.99e-02  6.47e-02     9.25e-01     9.32e-01\n3056  6.89e-03 -4.45e-02  8.48e-02     9.15e-01     9.23e-01\n3057  7.10e-03 -7.06e-02  1.08e-01     8.90e-01     8.98e-01\n3058  1.18e-02 -1.31e-01  1.58e-01     7.38e-01     7.52e-01\n3059  1.95e-02 -6.44e-02  1.45e-01     8.18e-01     8.41e-01\n3060  2.08e-02 -1.41e-01  2.19e-01     6.56e-01     6.83e-01\n3061  8.48e-04 -1.42e-02  3.14e-02     9.87e-01     9.89e-01\n3062  1.07e-02 -4.37e-02  1.02e-01     8.93e-01     9.05e-01\n3063  9.14e-03 -6.18e-02  1.13e-01     8.87e-01     8.98e-01\n3064  1.55e-03 -1.61e-02  4.18e-02     9.84e-01     9.86e-01\n3065  1.94e-03 -1.61e-02  3.60e-02     9.79e-01     9.81e-01\n3066  1.19e-02 -3.93e-02  1.08e-01     9.01e-01     9.15e-01\n3067  6.81e-03 -3.52e-02  1.01e-01     9.39e-01     9.47e-01\n3068  8.17e-03 -3.97e-02  1.03e-01     9.21e-01     9.30e-01\n3069 -1.24e-01 -3.90e-01  2.21e-02     2.62e-01     1.19e-01\n3070 -1.19e-01 -3.99e-01 -3.46e-03     1.61e-01     3.29e-02\n3071 -5.15e-02 -2.22e-01  7.53e-04     8.09e-02     2.37e-02\n3072 -6.66e-02 -2.73e-01 -5.43e-04     1.01e-01     2.57e-02\n3073 -1.35e-02 -1.12e-01 -1.64e-04     1.52e-02     1.24e-03\n3074 -3.38e-01 -7.30e-01 -7.20e-03     4.07e-01     5.46e-02\n3075 -6.25e-02 -2.95e-01  5.75e-02     2.28e-01     1.50e-01\n3076 -1.10e-01 -3.87e-01 -2.91e-03     1.43e-01     2.57e-02\n3077 -2.62e-01 -6.95e-01 -4.69e-03     3.08e-01     3.53e-02\n3078 -2.98e-01 -6.67e-01 -7.58e-03     3.73e-01     5.75e-02\n3079 -1.18e-01 -3.94e-01 -2.24e-03     1.71e-01     4.45e-02\n3080 -1.24e-01 -4.83e-01 -2.24e-03     1.46e-01     1.66e-02\n3081 -1.19e-01 -4.39e-01 -2.52e-03     1.44e-01     1.92e-02\n3082  1.08e-02 -5.38e-02  1.05e-01     8.82e-01     8.95e-01\n3083  1.16e-02 -6.99e-02  1.22e-01     8.52e-01     8.65e-01\n3084  1.82e-02 -1.21e-01  1.63e-01     6.72e-01     6.90e-01\n3085  2.75e-02 -7.53e-02  1.61e-01     7.50e-01     7.78e-01\n3086  2.82e-02 -1.37e-01  2.09e-01     5.75e-01     6.07e-01\n3087  1.49e-03 -1.58e-02  3.50e-02     9.83e-01     9.84e-01\n3088  1.62e-02 -5.51e-02  1.23e-01     8.49e-01     8.67e-01\n3089  1.37e-02 -6.98e-02  1.28e-01     8.45e-01     8.64e-01\n3090  2.58e-03 -1.84e-02  4.99e-02     9.76e-01     9.80e-01\n3091  3.08e-03 -1.87e-02  4.59e-02     9.70e-01     9.74e-01\n3092  1.82e-02 -5.34e-02  1.32e-01     8.55e-01     8.76e-01\n3093  1.08e-02 -4.57e-02  1.13e-01     9.11e-01     9.24e-01\n3094  1.29e-02 -4.87e-02  1.17e-01     8.86e-01     9.01e-01\n3095  1.17e-02 -7.56e-02  9.70e-02     8.55e-01     8.69e-01\n3096  9.65e-03 -1.04e-01  1.04e-01     8.24e-01     8.35e-01\n3097  1.46e-02 -1.42e-01  1.52e-01     6.20e-01     6.39e-01\n3098  2.72e-02 -1.04e-01  1.55e-01     6.94e-01     7.26e-01\n3099  1.96e-02 -1.75e-01  1.69e-01     5.23e-01     5.44e-01\n3100  1.09e-03 -3.75e-02  2.21e-02     9.79e-01     9.81e-01\n3101  1.80e-02 -8.08e-02  1.18e-01     8.12e-01     8.33e-01\n3102  1.21e-02 -1.00e-01  1.13e-01     8.15e-01     8.29e-01\n3103  2.43e-03 -4.73e-02  3.29e-02     9.71e-01     9.74e-01\n3104  2.77e-03 -3.91e-02  3.56e-02     9.63e-01     9.67e-01\n3105  1.95e-02 -8.12e-02  1.23e-01     8.17e-01     8.40e-01\n3106  1.02e-02 -9.28e-02  8.85e-02     8.90e-01     9.02e-01\n3107  1.16e-02 -9.05e-02  1.00e-01     8.61e-01     8.75e-01\n3108  5.29e-02 -7.93e-02  2.03e-01     5.70e-01     6.28e-01\n3109  5.01e-02 -8.93e-02  2.01e-01     5.22e-01     5.76e-01\n3110  4.45e-02 -8.46e-02  1.75e-01     2.80e-01     3.27e-01\n3111  5.08e-02 -9.15e-02  1.89e-01     3.34e-01     3.89e-01\n3112  2.20e-02 -1.26e-01  1.44e-01     2.16e-01     2.37e-01\n3113  7.96e-03 -6.26e-02  8.81e-02     9.22e-01     9.29e-01\n3114  5.76e-02 -8.50e-02  2.05e-01     4.86e-01     5.48e-01\n3115  4.99e-02 -9.28e-02  2.01e-01     5.05e-01     5.57e-01\n3116  1.09e-02 -8.63e-02  1.09e-01     8.91e-01     9.01e-01\n3117  1.85e-02 -5.77e-02  1.26e-01     8.62e-01     8.81e-01\n3118  5.44e-02 -9.26e-02  2.05e-01     4.95e-01     5.54e-01\n3119  3.68e-02 -1.09e-01  1.88e-01     6.54e-01     6.92e-01\n3120  4.32e-02 -9.90e-02  1.95e-01     5.87e-01     6.35e-01\n3121  4.48e-03 -6.15e-02  6.14e-02     9.19e-01     9.25e-01\n3122  2.96e-03 -1.04e-01  7.67e-02     8.93e-01     8.99e-01\n3123  4.62e-03 -1.63e-01  1.33e-01     7.43e-01     7.49e-01\n3124  1.52e-02 -8.22e-02  1.14e-01     8.29e-01     8.48e-01\n3125  1.03e-02 -2.10e-01  1.63e-01     6.71e-01     6.82e-01\n3126  3.61e-04 -3.22e-02  1.52e-02     9.88e-01     9.89e-01\n3127  7.84e-03 -5.73e-02  7.55e-02     8.99e-01     9.09e-01\n3128  5.20e-03 -9.58e-02  7.65e-02     8.92e-01     9.00e-01\n3129  9.53e-04 -3.85e-02  2.22e-02     9.84e-01     9.86e-01\n3130  1.05e-03 -3.20e-02  2.12e-02     9.81e-01     9.82e-01\n3131  9.80e-03 -5.42e-02  8.00e-02     9.06e-01     9.20e-01\n3132  4.46e-03 -6.92e-02  5.89e-02     9.43e-01     9.49e-01\n3133  5.14e-03 -7.15e-02  6.67e-02     9.25e-01     9.32e-01\n3134  4.94e-02 -8.97e-02  1.98e-01     4.88e-01     5.41e-01\n3135  3.12e-02 -1.27e-01  1.85e-01     4.21e-01     4.56e-01\n3136  2.81e-02 -8.61e-02  1.42e-01     1.97e-01     2.29e-01\n3137  3.57e-02 -1.04e-01  1.67e-01     2.86e-01     3.23e-01\n3138 -2.26e-02 -1.81e-01  8.20e-02     1.56e-01     1.27e-01\n3139 -1.68e-02 -2.01e-01  9.47e-02     8.85e-01     8.59e-01\n3140  5.52e-02 -8.37e-02  1.96e-01     4.22e-01     4.80e-01\n3141  2.86e-02 -1.39e-01  1.78e-01     4.19e-01     4.45e-01\n3142 -2.73e-02 -2.67e-01  9.50e-02     8.54e-01     8.15e-01\n3143 -3.38e-03 -1.71e-01  1.25e-01     8.17e-01     8.06e-01\n3144  3.83e-02 -1.16e-01  1.90e-01     4.46e-01     4.87e-01\n3145 -1.17e-02 -2.50e-01  1.61e-01     5.91e-01     5.71e-01\n3146  7.71e-03 -1.93e-01  1.73e-01     5.21e-01     5.23e-01\n3147  1.10e-02 -5.22e-02  1.06e-01     8.83e-01     8.96e-01\n3148  1.16e-02 -7.09e-02  1.23e-01     8.55e-01     8.69e-01\n3149  1.84e-02 -1.17e-01  1.67e-01     6.76e-01     6.98e-01\n3150  2.67e-02 -7.53e-02  1.63e-01     7.49e-01     7.80e-01\n3151  2.72e-02 -1.31e-01  2.03e-01     5.76e-01     6.07e-01\n3152  1.46e-03 -1.57e-02  3.59e-02     9.83e-01     9.85e-01\n3153  1.57e-02 -5.54e-02  1.24e-01     8.49e-01     8.68e-01\n3154  1.37e-02 -6.49e-02  1.31e-01     8.48e-01     8.65e-01\n3155  2.46e-03 -1.80e-02  4.93e-02     9.76e-01     9.80e-01\n3156  2.94e-03 -1.85e-02  4.69e-02     9.71e-01     9.74e-01\n3157  1.73e-02 -5.41e-02  1.33e-01     8.54e-01     8.74e-01\n3158  1.02e-02 -4.54e-02  1.12e-01     9.12e-01     9.24e-01\n3159  1.20e-02 -4.92e-02  1.20e-01     8.88e-01     9.02e-01\n3160 -2.91e-02 -3.52e-01  1.44e-01     4.53e-01     4.07e-01\n3161 -9.23e-02 -3.99e-01  1.19e-01     3.56e-01     2.36e-01\n3162 -2.32e-02 -2.02e-01  1.01e-01     1.55e-01     1.18e-01\n3163 -6.04e-02 -3.23e-01  1.10e-01     2.77e-01     1.98e-01\n3164 -6.33e-02 -1.98e-01  2.41e-02     1.01e-01     2.26e-02\n3165 -2.86e-01 -7.34e-01  3.26e-02     8.21e-01     5.09e-01\n3166  4.57e-03 -2.53e-01  1.59e-01     4.10e-01     4.02e-01\n3167 -1.12e-01 -4.16e-01  1.08e-01     3.65e-01     2.27e-01\n3168 -3.52e-01 -7.27e-01  3.16e-02     7.86e-01     4.08e-01\n3169 -2.46e-01 -6.86e-01  5.85e-02     7.64e-01     4.99e-01\n3170 -9.29e-02 -4.52e-01  1.29e-01     4.36e-01     3.19e-01\n3171 -2.55e-01 -5.72e-01  7.61e-02     5.22e-01     2.31e-01\n3172 -2.02e-01 -5.20e-01  8.84e-02     4.66e-01     2.32e-01\n3173  6.67e-03 -4.64e-02  8.52e-02     9.16e-01     9.24e-01\n3174  6.92e-03 -6.94e-02  1.09e-01     8.90e-01     8.99e-01\n3175  1.14e-02 -1.26e-01  1.59e-01     7.39e-01     7.51e-01\n3176  1.93e-02 -6.19e-02  1.43e-01     8.21e-01     8.43e-01\n3177  1.97e-02 -1.40e-01  2.11e-01     6.59e-01     6.82e-01\n3178  8.35e-04 -1.46e-02  2.94e-02     9.87e-01     9.88e-01\n3179  1.03e-02 -4.49e-02  9.87e-02     8.93e-01     9.05e-01\n3180  8.58e-03 -6.07e-02  1.08e-01     8.88e-01     8.99e-01\n3181  1.50e-03 -1.77e-02  4.03e-02     9.84e-01     9.86e-01\n3182  1.81e-03 -1.66e-02  3.68e-02     9.79e-01     9.82e-01\n3183  1.21e-02 -3.91e-02  1.09e-01     9.01e-01     9.15e-01\n3184  6.57e-03 -3.91e-02  9.32e-02     9.40e-01     9.48e-01\n3185  7.99e-03 -4.02e-02  9.56e-02     9.21e-01     9.31e-01\n3186 -4.90e-02 -4.55e-01 -8.50e-06     5.95e-02     5.44e-03\n3187 -1.13e-02 -3.17e-01 -1.83e-06     1.35e-02     1.09e-03\n3188 -8.47e-03 -1.94e-01 -1.55e-06     1.01e-02     8.25e-04\n3189 -9.37e-03 -2.47e-01 -1.38e-06     1.11e-02     8.72e-04\n3190 -4.19e-04 -3.71e-02 -5.68e-08     4.95e-04     3.53e-05\n3191 -1.87e-02 -5.95e-01 -2.80e-06     2.22e-02     1.63e-03\n3192 -6.49e-02 -4.47e-01 -7.84e-06     8.71e-02     9.96e-03\n3193 -8.62e-03 -2.95e-01 -1.52e-06     1.04e-02     7.91e-04\n3194 -1.21e-02 -5.11e-01 -1.87e-06     1.42e-02     1.02e-03\n3195 -1.99e-02 -5.60e-01 -2.97e-06     2.39e-02     1.81e-03\n3196 -1.62e-02 -3.68e-01 -2.57e-06     1.92e-02     1.48e-03\n3197 -5.72e-03 -3.07e-01 -8.86e-07     6.72e-03     4.89e-04\n3198 -6.45e-03 -2.99e-01 -9.64e-07     7.70e-03     5.73e-04\n3199  1.12e-02 -5.32e-02  1.06e-01     8.81e-01     8.94e-01\n3200  1.13e-02 -7.32e-02  1.27e-01     8.52e-01     8.65e-01\n3201  1.87e-02 -1.23e-01  1.66e-01     6.73e-01     6.93e-01\n3202  2.71e-02 -7.70e-02  1.65e-01     7.45e-01     7.76e-01\n3203  2.79e-02 -1.32e-01  2.08e-01     5.74e-01     6.01e-01\n3204  1.48e-03 -1.59e-02  3.80e-02     9.83e-01     9.84e-01\n3205  1.61e-02 -5.68e-02  1.25e-01     8.46e-01     8.65e-01\n3206  1.43e-02 -6.47e-02  1.34e-01     8.45e-01     8.63e-01\n3207  2.61e-03 -1.92e-02  5.49e-02     9.76e-01     9.79e-01\n3208  3.20e-03 -1.75e-02  4.78e-02     9.70e-01     9.74e-01\n3209  1.83e-02 -5.30e-02  1.32e-01     8.52e-01     8.73e-01\n3210  1.03e-02 -4.51e-02  1.14e-01     9.11e-01     9.23e-01\n3211  1.25e-02 -4.88e-02  1.23e-01     8.86e-01     9.00e-01\n3212 -9.16e-02 -3.09e-01 -5.35e-03     1.17e-01     1.08e-02\n3213 -2.64e-02 -1.33e-01 -1.49e-03     3.13e-02     2.16e-03\n3214 -1.73e-02 -8.42e-02 -9.42e-04     2.15e-02     1.67e-03\n3215 -2.24e-02 -1.09e-01 -1.22e-03     2.66e-02     1.83e-03\n3216 -1.08e-03 -7.31e-03 -5.00e-05     1.26e-03     7.55e-05\n3217 -4.61e-02 -2.32e-01 -2.68e-03     5.41e-02     3.40e-03\n3218 -1.13e-01 -3.48e-01 -2.11e-03     1.54e-01     1.95e-02\n3219 -2.14e-02 -1.13e-01 -1.12e-03     2.51e-02     1.65e-03\n3220 -2.97e-02 -1.63e-01 -1.50e-03     3.53e-02     2.15e-03\n3221 -4.87e-02 -2.43e-01 -2.97e-03     5.74e-02     3.75e-03\n3222 -3.79e-02 -1.79e-01 -2.08e-03     4.55e-02     3.06e-03\n3223 -1.41e-02 -8.78e-02 -7.56e-04     1.66e-02     1.02e-03\n3224 -1.62e-02 -9.35e-02 -9.03e-04     1.91e-02     1.20e-03\n3225  4.83e-03 -6.59e-02  6.32e-02     9.18e-01     9.24e-01\n3226  3.39e-03 -1.07e-01  7.36e-02     8.93e-01     8.97e-01\n3227  5.36e-03 -1.62e-01  1.29e-01     7.41e-01     7.50e-01\n3228  1.54e-02 -8.13e-02  1.16e-01     8.29e-01     8.47e-01\n3229  1.09e-02 -2.13e-01  1.61e-01     6.66e-01     6.80e-01\n3230  3.37e-04 -3.31e-02  1.51e-02     9.88e-01     9.88e-01\n3231  8.31e-03 -5.82e-02  7.89e-02     8.99e-01     9.09e-01\n3232  4.86e-03 -9.63e-02  7.70e-02     8.92e-01     8.99e-01\n3233  1.00e-03 -4.23e-02  2.16e-02     9.85e-01     9.86e-01\n3234  1.03e-03 -3.25e-02  2.18e-02     9.80e-01     9.82e-01\n3235  9.73e-03 -5.46e-02  8.07e-02     9.07e-01     9.19e-01\n3236  4.53e-03 -7.41e-02  5.83e-02     9.43e-01     9.48e-01\n3237  5.15e-03 -7.16e-02  6.65e-02     9.25e-01     9.32e-01\n3238  1.93e-02 -9.34e-02  1.95e-01     7.56e-01     7.77e-01\n3239  1.84e-02 -1.59e-01  2.99e-01     6.34e-01     6.57e-01\n3240  1.83e-02 -1.50e-01  2.24e-01     4.09e-01     4.32e-01\n3241  3.64e-02 -1.27e-01  2.80e-01     5.39e-01     5.81e-01\n3242  2.75e-03 -2.34e-01  1.90e-01     1.64e-01     1.64e-01\n3243  1.67e-03 -1.43e-01  3.74e-01     8.94e-01     8.94e-01\n3244  2.51e-02 -8.17e-02  1.73e-01     7.31e-01     7.57e-01\n3245  2.08e-02 -1.59e-01  3.21e-01     6.22e-01     6.48e-01\n3246  2.54e-03 -1.88e-01  4.07e-01     8.54e-01     8.54e-01\n3247  5.49e-03 -1.30e-01  3.47e-01     8.74e-01     8.80e-01\n3248  3.09e-02 -1.19e-01  2.97e-01     6.96e-01     7.31e-01\n3249  1.41e-02 -2.31e-01  3.95e-01     6.83e-01     6.96e-01\n3250  1.83e-02 -2.07e-01  3.74e-01     6.65e-01     6.84e-01\n3251  8.96e-03 -1.15e-01  1.01e-01     8.35e-01     8.42e-01\n3252  3.52e-03 -2.35e-01  1.21e-01     7.76e-01     7.75e-01\n3253  5.20e-03 -2.06e-01  1.50e-01     5.76e-01     5.79e-01\n3254  1.87e-02 -1.96e-01  1.58e-01     6.44e-01     6.62e-01\n3255  4.71e-06 -2.42e-01  2.43e-01     3.17e-01     3.18e-01\n3256 -2.80e-04 -2.57e-01  7.56e-02     9.52e-01     9.52e-01\n3257  1.63e-02 -9.32e-02  1.21e-01     7.93e-01     8.11e-01\n3258  5.48e-03 -2.65e-01  1.34e-01     7.58e-01     7.62e-01\n3259  8.65e-04 -3.22e-01  1.07e-01     9.30e-01     9.32e-01\n3260  1.05e-03 -2.37e-01  7.38e-02     9.36e-01     9.36e-01\n3261  1.39e-02 -1.92e-01  1.35e-01     7.78e-01     7.91e-01\n3262  4.88e-03 -3.45e-01  1.72e-01     8.12e-01     8.17e-01\n3263  5.71e-03 -3.13e-01  1.51e-01     7.90e-01     7.96e-01\n3264  1.65e-02 -1.14e-01  1.30e-01     7.41e-01     7.60e-01\n3265  9.89e-03 -2.17e-01  1.41e-01     6.83e-01     6.90e-01\n3266  1.29e-02 -1.59e-01  1.58e-01     4.56e-01     4.67e-01\n3267  2.52e-02 -1.59e-01  1.71e-01     5.01e-01     5.27e-01\n3268  4.87e-03 -1.90e-01  2.06e-01     2.38e-01     2.43e-01\n3269  9.37e-04 -2.73e-01  7.99e-02     9.32e-01     9.32e-01\n3270  2.65e-02 -1.01e-01  1.51e-01     6.75e-01     7.04e-01\n3271  1.21e-02 -2.32e-01  1.48e-01     6.56e-01     6.67e-01\n3272  2.59e-03 -3.15e-01  1.11e-01     8.98e-01     9.03e-01\n3273  3.55e-03 -2.35e-01  8.19e-02     9.02e-01     9.04e-01\n3274  2.24e-02 -1.66e-01  1.57e-01     6.59e-01     6.81e-01\n3275  9.80e-03 -3.20e-01  1.68e-01     7.28e-01     7.40e-01\n3276  1.20e-02 -2.85e-01  1.55e-01     6.96e-01     7.07e-01\n3277  1.59e-02 -5.88e-02  1.29e-01     8.42e-01     8.60e-01\n3278  1.62e-02 -7.48e-02  1.41e-01     8.10e-01     8.28e-01\n3279  2.40e-02 -1.15e-01  1.74e-01     6.04e-01     6.30e-01\n3280  3.37e-02 -8.67e-02  1.76e-01     6.72e-01     7.08e-01\n3281  3.12e-02 -1.25e-01  1.96e-01     4.97e-01     5.31e-01\n3282  2.18e-03 -1.62e-02  4.37e-02     9.77e-01     9.79e-01\n3283  2.23e-02 -6.84e-02  1.46e-01     7.96e-01     8.20e-01\n3284  1.92e-02 -7.10e-02  1.51e-01     7.99e-01     8.20e-01\n3285  3.86e-03 -2.13e-02  6.02e-02     9.67e-01     9.71e-01\n3286  4.53e-03 -2.12e-02  6.44e-02     9.60e-01     9.65e-01\n3287  2.44e-02 -6.60e-02  1.54e-01     8.01e-01     8.26e-01\n3288  1.48e-02 -4.95e-02  1.32e-01     8.78e-01     8.95e-01\n3289  1.76e-02 -5.75e-02  1.41e-01     8.48e-01     8.66e-01\n3290  4.86e-02 -8.65e-02  1.91e-01     3.64e-01     4.20e-01\n3291  3.25e-02 -1.07e-01  1.73e-01     3.14e-01     3.49e-01\n3292  2.24e-02 -6.18e-02  1.18e-01     1.37e-01     1.62e-01\n3293  2.98e-02 -7.75e-02  1.41e-01     1.87e-01     2.19e-01\n3294 -1.01e-02 -1.21e-01  6.26e-02     1.02e-01     8.76e-02\n3295 -1.56e-02 -2.14e-01  1.17e-01     8.25e-01     8.00e-01\n3296  4.91e-02 -7.63e-02  1.84e-01     3.01e-01     3.53e-01\n3297  2.95e-02 -1.08e-01  1.64e-01     3.04e-01     3.36e-01\n3298 -2.40e-02 -2.60e-01  1.25e-01     7.79e-01     7.41e-01\n3299  3.97e-03 -1.68e-01  1.50e-01     7.28e-01     7.29e-01\n3300  3.94e-02 -9.96e-02  1.77e-01     3.13e-01     3.58e-01\n3301  8.18e-04 -2.04e-01  1.65e-01     4.60e-01     4.55e-01\n3302  1.58e-02 -1.60e-01  1.67e-01     3.90e-01     4.02e-01\n3303 -2.94e-03 -1.98e-01  1.38e-01     6.07e-01     6.00e-01\n3304 -1.92e-02 -2.55e-01  1.57e-01     4.81e-01     4.52e-01\n3305 -1.26e-02 -1.58e-01  1.31e-01     2.50e-01     2.33e-01\n3306  9.06e-03 -2.02e-01  1.67e-01     3.99e-01     4.06e-01\n3307 -5.92e-03 -1.27e-01  1.58e-01     1.07e-01     1.03e-01\n3308 -1.06e-02 -3.96e-01  1.53e-01     8.35e-01     8.24e-01\n3309  1.06e-02 -1.49e-01  1.47e-01     5.72e-01     5.82e-01\n3310 -1.26e-02 -2.64e-01  1.60e-01     4.81e-01     4.59e-01\n3311 -4.05e-03 -4.15e-01  2.00e-01     7.90e-01     7.87e-01\n3312 -6.62e-03 -3.62e-01  1.41e-01     8.08e-01     7.97e-01\n3313  1.34e-02 -2.41e-01  1.72e-01     5.71e-01     5.85e-01\n3314 -1.41e-03 -3.60e-01  2.32e-01     5.73e-01     5.74e-01\n3315 -4.25e-03 -3.26e-01  2.01e-01     5.45e-01     5.35e-01\n3316  7.43e-03 -7.41e-02  7.86e-02     8.89e-01     8.99e-01\n3317  5.90e-03 -1.13e-01  9.01e-02     8.62e-01     8.68e-01\n3318  9.73e-03 -1.52e-01  1.39e-01     6.86e-01     6.98e-01\n3319  2.16e-02 -9.27e-02  1.37e-01     7.62e-01     7.86e-01\n3320  1.73e-02 -1.93e-01  1.71e-01     5.93e-01     6.14e-01\n3321  7.34e-04 -3.86e-02  1.97e-02     9.84e-01     9.85e-01\n3322  1.24e-02 -6.98e-02  9.77e-02     8.58e-01     8.72e-01\n3323  8.31e-03 -1.06e-01  9.47e-02     8.57e-01     8.66e-01\n3324  1.71e-03 -4.72e-02  2.87e-02     9.78e-01     9.80e-01\n3325  1.98e-03 -3.81e-02  2.82e-02     9.73e-01     9.75e-01\n3326  1.44e-02 -7.06e-02  1.00e-01     8.65e-01     8.82e-01\n3327  7.42e-03 -8.79e-02  7.44e-02     9.19e-01     9.27e-01\n3328  8.70e-03 -8.74e-02  8.45e-02     8.95e-01     9.05e-01\n3329  1.63e-02 -6.61e-02  1.86e-01     8.37e-01     8.58e-01\n3330  1.63e-02 -1.47e-01  3.37e-01     7.44e-01     7.63e-01\n3331  2.36e-02 -1.46e-01  2.81e-01     5.59e-01     5.89e-01\n3332  3.29e-02 -1.31e-01  3.13e-01     6.26e-01     6.66e-01\n3333  1.66e-03 -2.91e-01  2.26e-01     2.08e-01     2.03e-01\n3334  6.63e-04 -1.38e-01  3.61e-01     9.21e-01     9.18e-01\n3335  2.12e-02 -6.17e-02  1.58e-01     8.13e-01     8.38e-01\n3336  1.72e-02 -1.64e-01  3.61e-01     7.19e-01     7.40e-01\n3337  1.37e-03 -1.83e-01  4.08e-01     8.83e-01     8.80e-01\n3338  3.53e-03 -1.23e-01  3.52e-01     9.07e-01     9.09e-01\n3339  2.40e-02 -1.12e-01  3.21e-01     7.62e-01     7.92e-01\n3340  8.77e-03 -2.37e-01  4.25e-01     7.45e-01     7.47e-01\n3341  1.39e-02 -2.12e-01  4.04e-01     7.32e-01     7.44e-01\n3342 -2.70e-02 -3.50e-01  1.47e-01     4.58e-01     4.16e-01\n3343 -1.01e-01 -4.17e-01  1.16e-01     3.85e-01     2.58e-01\n3344 -3.04e-02 -2.23e-01  9.92e-02     1.84e-01     1.38e-01\n3345 -5.14e-02 -3.00e-01  1.20e-01     2.53e-01     1.85e-01\n3346 -6.47e-02 -1.96e-01  2.92e-02     1.04e-01     2.24e-02\n3347 -3.02e-01 -7.40e-01  3.17e-02     8.27e-01     5.09e-01\n3348  8.34e-03 -2.49e-01  1.62e-01     3.97e-01     3.94e-01\n3349 -1.18e-01 -4.24e-01  1.11e-01     3.73e-01     2.33e-01\n3350 -3.42e-01 -7.27e-01  3.99e-02     7.78e-01     4.03e-01\n3351 -2.41e-01 -6.92e-01  5.99e-02     7.64e-01     4.99e-01\n3352 -7.76e-02 -4.19e-01  1.39e-01     4.03e-01     3.00e-01\n3353 -2.41e-01 -5.57e-01  8.30e-02     5.02e-01     2.23e-01\n3354 -1.88e-01 -5.08e-01  9.67e-02     4.49e-01     2.28e-01\n3355  4.15e-02 -1.12e-01  1.90e-01     3.62e-01     4.06e-01\n3356  2.45e-02 -2.00e-01  1.75e-01     3.27e-01     3.45e-01\n3357  1.87e-02 -8.43e-02  1.33e-01     1.50e-01     1.69e-01\n3358  2.29e-02 -9.82e-02  1.51e-01     1.71e-01     1.92e-01\n3359 -3.18e-03 -1.23e-01  9.19e-02     9.96e-02     9.05e-02\n3360 -5.28e-03 -5.51e-01  1.05e-01     8.30e-01     8.11e-01\n3361  4.34e-02 -8.24e-02  1.93e-01     2.83e-01     3.31e-01\n3362  2.32e-02 -1.99e-01  1.72e-01     3.04e-01     3.22e-01\n3363 -5.96e-03 -5.45e-01  1.30e-01     7.63e-01     7.36e-01\n3364  7.17e-03 -4.47e-01  1.43e-01     7.22e-01     7.17e-01\n3365  3.25e-02 -1.52e-01  1.83e-01     2.83e-01     3.13e-01\n3366  9.26e-03 -3.44e-01  1.79e-01     4.29e-01     4.25e-01\n3367  1.60e-02 -2.82e-01  1.80e-01     3.69e-01     3.74e-01\n3368 -1.21e-01 -3.90e-01  3.18e-02     2.59e-01     1.17e-01\n3369 -1.04e-01 -3.71e-01 -1.47e-03     1.46e-01     3.18e-02\n3370 -3.89e-02 -1.94e-01  6.00e-03     6.65e-02     2.16e-02\n3371 -8.53e-02 -3.25e-01 -1.75e-03     1.21e-01     2.62e-02\n3372 -1.37e-02 -1.03e-01 -1.88e-04     1.55e-02     1.26e-03\n3373 -3.29e-01 -7.06e-01 -8.51e-03     4.01e-01     5.45e-02\n3374 -7.97e-02 -3.25e-01  5.96e-02     2.58e-01     1.59e-01\n3375 -1.07e-01 -3.69e-01 -2.59e-03     1.39e-01     2.52e-02\n3376 -2.78e-01 -7.01e-01 -5.24e-03     3.26e-01     3.51e-02\n3377 -3.07e-01 -6.69e-01 -9.01e-03     3.85e-01     5.81e-02\n3378 -1.55e-01 -4.64e-01 -3.76e-03     2.16e-01     4.57e-02\n3379 -1.42e-01 -5.19e-01 -2.23e-03     1.65e-01     1.67e-02\n3380 -1.32e-01 -4.65e-01 -2.85e-03     1.58e-01     1.87e-02\n3381  3.87e-02 -1.53e-01  1.83e-01     5.47e-01     5.87e-01\n3382  2.07e-02 -3.16e-01  1.77e-01     5.00e-01     5.11e-01\n3383  2.41e-02 -1.58e-01  1.65e-01     2.65e-01     2.86e-01\n3384  3.09e-02 -1.87e-01  1.84e-01     3.10e-01     3.37e-01\n3385 -1.31e-02 -2.23e-01  1.34e-01     1.90e-01     1.65e-01\n3386 -7.02e-03 -5.92e-01  6.31e-02     9.10e-01     8.94e-01\n3387  4.83e-02 -1.10e-01  1.94e-01     4.64e-01     5.13e-01\n3388  2.00e-02 -3.24e-01  1.76e-01     4.81e-01     4.92e-01\n3389 -8.94e-03 -6.18e-01  8.31e-02     8.72e-01     8.51e-01\n3390  4.59e-04 -5.31e-01  9.83e-02     8.46e-01     8.36e-01\n3391  3.31e-02 -2.62e-01  1.89e-01     4.67e-01     4.93e-01\n3392 -2.17e-04 -4.84e-01  1.63e-01     6.21e-01     6.03e-01\n3393  1.08e-02 -4.14e-01  1.72e-01     5.57e-01     5.52e-01\n3394  1.59e-02 -8.76e-02  1.14e-01     8.11e-01     8.31e-01\n3395  1.44e-02 -1.14e-01  1.21e-01     7.79e-01     7.94e-01\n3396  2.00e-02 -1.36e-01  1.61e-01     5.57e-01     5.79e-01\n3397  3.14e-02 -1.09e-01  1.73e-01     6.18e-01     6.55e-01\n3398  2.40e-02 -1.55e-01  1.76e-01     4.48e-01     4.73e-01\n3399  1.88e-03 -4.32e-02  2.86e-02     9.72e-01     9.75e-01\n3400  2.27e-02 -9.05e-02  1.40e-01     7.57e-01     7.82e-01\n3401  1.69e-02 -1.06e-01  1.29e-01     7.67e-01     7.85e-01\n3402  3.58e-03 -5.51e-02  4.24e-02     9.60e-01     9.65e-01\n3403  4.17e-03 -4.85e-02  4.47e-02     9.51e-01     9.56e-01\n3404  2.45e-02 -9.52e-02  1.42e-01     7.60e-01     7.90e-01\n3405  1.40e-02 -1.00e-01  1.07e-01     8.53e-01     8.72e-01\n3406  1.63e-02 -9.74e-02  1.19e-01     8.19e-01     8.37e-01\n3407 -2.72e-03 -3.12e-01  2.68e-01     2.39e-01     2.39e-01\n3408 -2.37e-03 -2.75e-01  1.24e-01     6.76e-02     6.64e-02\n3409 -1.19e-03 -1.85e-01  8.64e-02     4.83e-02     4.85e-02\n3410 -1.52e-03 -2.59e-01  1.12e-01     5.72e-02     5.70e-02\n3411 -1.10e-04 -3.42e-02  6.95e-03     2.72e-03     2.63e-03\n3412 -3.91e-03 -4.22e-01  1.89e-01     1.09e-01     1.07e-01\n3413  5.05e-03 -2.72e-01  2.96e-01     3.15e-01     3.30e-01\n3414 -1.83e-03 -2.70e-01  1.07e-01     5.45e-02     5.30e-02\n3415 -2.86e-03 -3.85e-01  1.37e-01     7.20e-02     7.01e-02\n3416 -4.44e-03 -4.09e-01  2.00e-01     1.18e-01     1.13e-01\n3417 -2.79e-03 -3.36e-01  1.59e-01     9.63e-02     9.54e-02\n3418 -1.41e-03 -2.62e-01  7.62e-02     3.63e-02     3.41e-02\n3419 -1.42e-03 -2.66e-01  8.47e-02     4.04e-02     3.86e-02\n3420  1.56e-02 -8.96e-02  1.13e-01     8.12e-01     8.31e-01\n3421  1.37e-02 -1.10e-01  1.19e-01     7.80e-01     7.96e-01\n3422  1.84e-02 -1.34e-01  1.57e-01     5.60e-01     5.80e-01\n3423  3.25e-02 -1.10e-01  1.68e-01     6.21e-01     6.58e-01\n3424  2.31e-02 -1.52e-01  1.77e-01     4.50e-01     4.75e-01\n3425  1.73e-03 -3.85e-02  2.92e-02     9.73e-01     9.75e-01\n3426  2.28e-02 -9.11e-02  1.38e-01     7.57e-01     7.85e-01\n3427  1.67e-02 -1.08e-01  1.27e-01     7.67e-01     7.87e-01\n3428  3.58e-03 -5.04e-02  4.27e-02     9.60e-01     9.65e-01\n3429  4.24e-03 -4.24e-02  4.49e-02     9.51e-01     9.56e-01\n3430  2.46e-02 -9.00e-02  1.43e-01     7.62e-01     7.92e-01\n3431  1.44e-02 -9.12e-02  1.06e-01     8.55e-01     8.71e-01\n3432  1.69e-02 -9.35e-02  1.17e-01     8.18e-01     8.38e-01\n3433  1.08e-02 -5.17e-02  1.01e-01     8.83e-01     8.95e-01\n3434  1.15e-02 -6.95e-02  1.19e-01     8.55e-01     8.68e-01\n3435  1.80e-02 -1.21e-01  1.63e-01     6.77e-01     6.95e-01\n3436  2.65e-02 -7.57e-02  1.58e-01     7.50e-01     7.81e-01\n3437  2.72e-02 -1.33e-01  2.05e-01     5.81e-01     6.11e-01\n3438  1.36e-03 -1.66e-02  3.71e-02     9.83e-01     9.85e-01\n3439  1.55e-02 -5.52e-02  1.20e-01     8.50e-01     8.68e-01\n3440  1.40e-02 -6.48e-02  1.26e-01     8.47e-01     8.63e-01\n3441  2.49e-03 -1.91e-02  5.06e-02     9.77e-01     9.80e-01\n3442  3.03e-03 -1.81e-02  4.69e-02     9.71e-01     9.74e-01\n3443  1.77e-02 -5.18e-02  1.27e-01     8.56e-01     8.75e-01\n3444  1.02e-02 -4.67e-02  1.07e-01     9.13e-01     9.25e-01\n3445  1.25e-02 -4.98e-02  1.11e-01     8.88e-01     9.04e-01\n3446  4.77e-03 -6.57e-02  6.33e-02     9.18e-01     9.24e-01\n3447  3.30e-03 -1.11e-01  7.81e-02     8.93e-01     8.98e-01\n3448  5.08e-03 -1.69e-01  1.33e-01     7.45e-01     7.49e-01\n3449  1.55e-02 -8.37e-02  1.15e-01     8.27e-01     8.46e-01\n3450  9.64e-03 -2.11e-01  1.63e-01     6.66e-01     6.78e-01\n3451  3.11e-04 -3.20e-02  1.51e-02     9.88e-01     9.88e-01\n3452  8.10e-03 -5.68e-02  7.87e-02     8.98e-01     9.08e-01\n3453  4.63e-03 -9.60e-02  7.88e-02     8.92e-01     8.98e-01\n3454  9.60e-04 -4.15e-02  2.19e-02     9.84e-01     9.86e-01\n3455  1.06e-03 -3.26e-02  2.17e-02     9.80e-01     9.82e-01\n3456  9.73e-03 -5.53e-02  8.35e-02     9.06e-01     9.17e-01\n3457  4.71e-03 -7.87e-02  5.81e-02     9.42e-01     9.48e-01\n3458  5.23e-03 -7.25e-02  6.46e-02     9.24e-01     9.31e-01\n3459 -2.39e-02 -2.22e-01  9.84e-03     3.67e-02     3.51e-03\n3460 -1.38e-02 -1.97e-01 -8.25e-06     1.57e-02     7.74e-04\n3461 -2.69e-02 -3.36e-01 -1.71e-05     3.12e-02     1.64e-03\n3462 -3.31e-02 -3.74e-01 -2.12e-05     3.68e-02     1.74e-03\n3463 -3.04e-03 -1.83e-01 -1.44e-06     3.31e-03     1.13e-04\n3464 -1.71e-03 -3.05e-02 -8.95e-07     2.05e-03     1.10e-04\n3465 -3.58e-02 -2.90e-01  5.76e-02     6.76e-02     9.76e-03\n3466 -1.33e-02 -2.07e-01 -8.08e-06     1.50e-02     6.91e-04\n3467 -2.25e-03 -4.50e-02 -1.28e-06     2.56e-03     1.17e-04\n3468 -3.89e-03 -5.76e-02 -2.17e-06     4.67e-03     2.48e-04\n3469 -2.44e-02 -2.74e-01 -1.47e-05     2.97e-02     1.49e-03\n3470 -5.72e-03 -1.31e-01 -3.36e-06     6.28e-03     2.54e-04\n3471 -8.35e-03 -1.65e-01 -4.94e-06     9.14e-03     3.87e-04\n3472 -2.37e-02 -2.30e-01  1.02e-02     3.63e-02     3.55e-03\n3473 -1.36e-02 -2.03e-01 -9.52e-06     1.58e-02     7.73e-04\n3474 -2.73e-02 -3.48e-01 -1.83e-05     3.20e-02     1.59e-03\n3475 -3.27e-02 -3.86e-01 -2.18e-05     3.74e-02     1.74e-03\n3476 -3.05e-03 -1.90e-01 -1.50e-06     3.34e-03     1.16e-04\n3477 -1.74e-03 -3.34e-02 -8.27e-07     2.10e-03     1.14e-04\n3478 -3.58e-02 -3.01e-01  6.09e-02     6.69e-02     9.67e-03\n3479 -1.35e-02 -2.20e-01 -8.34e-06     1.55e-02     7.12e-04\n3480 -2.17e-03 -4.62e-02 -1.27e-06     2.49e-03     1.17e-04\n3481 -3.79e-03 -5.98e-02 -1.85e-06     4.76e-03     2.60e-04\n3482 -2.44e-02 -2.92e-01 -1.43e-05     2.94e-02     1.55e-03\n3483 -5.65e-03 -1.39e-01 -3.36e-06     6.31e-03     2.51e-04\n3484 -8.21e-03 -1.72e-01 -5.53e-06     9.33e-03     3.98e-04\n3485  2.88e-01  9.71e-04  4.92e-01     1.54e-01     4.50e-01\n3486  2.48e-01 -1.17e-01  4.76e-01     1.63e-01     4.07e-01\n3487  2.44e-01 -2.08e-01  4.56e-01     3.14e-01     5.63e-01\n3488  3.15e-01 -2.47e-01  4.91e-01     3.51e-01     6.74e-01\n3489  1.06e-01 -4.46e-01  4.22e-01     4.15e-01     5.14e-01\n3490  5.71e-02 -1.17e-02  2.39e-01     1.88e-02     7.65e-02\n3491  3.38e-01  6.97e-02  5.09e-01     2.15e-01     5.67e-01\n3492  2.64e-01 -1.53e-01  4.83e-01     1.86e-01     4.43e-01\n3493  8.43e-02 -2.64e-02  3.08e-01     3.11e-02     1.15e-01\n3494  1.08e-01 -2.50e-02  3.33e-01     3.86e-02     1.48e-01\n3495  3.22e-01 -1.39e-01  5.08e-01     2.22e-01     5.47e-01\n3496  2.21e-01 -1.25e-01  4.69e-01     1.24e-01     3.40e-01\n3497  2.50e-01 -1.50e-01  4.84e-01     1.55e-01     3.96e-01\n3498  2.88e-01  1.34e-01  4.44e-01     1.05e-01     4.02e-01\n3499  2.83e-01  1.29e-01  4.41e-01     1.12e-01     4.06e-01\n3500  3.20e-01  1.13e-01  4.79e-01     2.39e-01     5.81e-01\n3501  3.87e-01  2.48e-01  5.16e-01     2.59e-01     6.70e-01\n3502  3.22e-01  7.54e-02  4.86e-01     3.38e-01     6.82e-01\n3503  5.63e-02  1.48e-02  1.66e-01     1.23e-02     6.89e-02\n3504  3.41e-01  1.83e-01  4.82e-01     1.49e-01     5.04e-01\n3505  3.10e-01  1.52e-01  4.61e-01     1.29e-01     4.51e-01\n3506  8.95e-02  2.55e-02  2.32e-01     2.01e-02     1.10e-01\n3507  1.08e-01  3.49e-02  2.57e-01     2.50e-02     1.34e-01\n3508  3.54e-01  1.97e-01  4.94e-01     1.54e-01     5.23e-01\n3509  2.61e-01  1.11e-01  4.28e-01     8.33e-02     3.51e-01\n3510  2.94e-01  1.37e-01  4.48e-01     1.06e-01     4.09e-01\n3511  3.02e-01  1.13e-01  4.52e-01     2.75e-01     5.97e-01\n3512  1.90e-01 -2.38e-02  3.81e-01     2.53e-01     4.59e-01\n3513  1.43e-01 -8.80e-02  3.57e-01     4.10e-01     5.68e-01\n3514  2.13e-01 -4.00e-02  4.20e-01     4.93e-01     7.16e-01\n3515 -4.26e-02 -3.68e-01  2.13e-01     2.84e-01     2.26e-01\n3516  7.60e-02  8.41e-03  2.26e-01     3.71e-02     1.16e-01\n3517  3.30e-01  1.41e-01  4.81e-01     3.70e-01     7.22e-01\n3518  1.87e-01 -5.57e-02  3.83e-01     2.83e-01     4.81e-01\n3519  8.97e-02 -6.43e-03  2.55e-01     5.70e-02     1.52e-01\n3520  1.38e-01  2.36e-02  3.15e-01     7.54e-02     2.21e-01\n3521  2.77e-01  3.47e-02  4.54e-01     3.59e-01     6.51e-01\n3522  1.31e-01 -9.69e-02  3.50e-01     1.88e-01     3.30e-01\n3523  1.62e-01 -9.12e-02  3.69e-01     2.33e-01     4.06e-01\n3524  3.40e-01  1.53e-01  4.94e-01     3.21e-01     6.84e-01\n3525  3.06e-01  1.01e-01  4.75e-01     3.28e-01     6.58e-01\n3526  2.14e-01 -1.55e-02  4.16e-01     4.94e-01     7.30e-01\n3527  2.75e-01  9.47e-02  4.67e-01     5.92e-01     8.76e-01\n3528  1.60e-01 -1.22e-01  3.85e-01     6.42e-01     8.14e-01\n3529  1.67e-01  5.13e-02  3.66e-01     5.02e-02     2.23e-01\n3530  3.40e-01  1.54e-01  4.97e-01     4.21e-01     7.78e-01\n3531  3.19e-01  1.26e-01  4.82e-01     3.71e-01     7.11e-01\n3532  2.36e-01  8.86e-02  4.28e-01     8.29e-02     3.24e-01\n3533  2.61e-01  1.05e-01  4.45e-01     9.93e-02     3.72e-01\n3534  3.54e-01  1.61e-01  5.11e-01     4.40e-01     8.10e-01\n3535  3.58e-01  1.77e-01  5.10e-01     2.79e-01     6.62e-01\n3536  3.53e-01  1.72e-01  5.05e-01     3.32e-01     7.08e-01\n3537  3.21e-01  1.70e-01  4.65e-01     1.34e-01     4.65e-01\n3538  3.14e-01  1.51e-01  4.63e-01     1.44e-01     4.69e-01\n3539  3.27e-01  1.15e-01  4.80e-01     2.90e-01     6.38e-01\n3540  3.91e-01  2.45e-01  5.19e-01     3.12e-01     7.24e-01\n3541  3.16e-01  7.23e-02  4.81e-01     3.99e-01     7.32e-01\n3542  7.13e-02  1.99e-02  1.99e-01     1.58e-02     8.84e-02\n3543  3.66e-01  2.20e-01  4.95e-01     1.87e-01     5.70e-01\n3544  3.36e-01  1.85e-01  4.78e-01     1.63e-01     5.14e-01\n3545  1.12e-01  3.43e-02  2.72e-01     2.65e-02     1.40e-01\n3546  1.34e-01  4.58e-02  2.93e-01     3.26e-02     1.68e-01\n3547  3.78e-01  2.29e-01  5.07e-01     1.92e-01     5.89e-01\n3548  2.97e-01  1.42e-01  4.50e-01     1.06e-01     4.13e-01\n3549  3.27e-01  1.73e-01  4.70e-01     1.33e-01     4.73e-01\n3550 -6.50e-04 -8.47e-02  6.37e-02     1.13e-02     7.42e-03\n3551 -3.98e-04 -5.61e-02  1.13e-02     2.77e-03     1.65e-03\n3552 -8.82e-04 -1.09e-01  1.92e-02     5.76e-03     3.50e-03\n3553 -9.17e-04 -1.19e-01  2.29e-02     6.11e-03     3.65e-03\n3554 -7.46e-05 -1.94e-02  1.46e-03     4.26e-04     2.54e-04\n3555 -5.18e-05 -8.02e-03  1.99e-03     3.99e-04     2.36e-04\n3556 -5.49e-04 -1.21e-01  1.44e-01     2.68e-02     2.02e-02\n3557 -3.76e-04 -5.68e-02  9.68e-03     2.47e-03     1.47e-03\n3558 -6.27e-05 -1.09e-02  1.87e-03     4.17e-04     2.56e-04\n3559 -1.15e-04 -1.72e-02  4.65e-03     8.97e-04     5.36e-04\n3560 -7.11e-04 -8.98e-02  2.28e-02     5.49e-03     3.29e-03\n3561 -1.45e-04 -2.83e-02  3.59e-03     9.45e-04     5.35e-04\n3562 -2.17e-04 -4.09e-02  5.68e-03     1.41e-03     8.19e-04\n3563  3.29e-01  1.73e-01  4.70e-01     1.48e-01     4.90e-01\n3564  3.03e-01  1.42e-01  4.50e-01     1.56e-01     4.72e-01\n3565  3.06e-01  9.28e-02  4.69e-01     3.08e-01     6.38e-01\n3566  3.67e-01  2.05e-01  5.04e-01     3.34e-01     7.23e-01\n3567  1.71e-01 -1.30e-01  4.13e-01     3.63e-01     5.49e-01\n3568  7.40e-02  2.05e-02  2.05e-01     1.82e-02     9.34e-02\n3569  3.70e-01  2.26e-01  4.97e-01     2.05e-01     5.98e-01\n3570  3.18e-01  1.57e-01  4.64e-01     1.76e-01     5.11e-01\n3571  1.10e-01  3.39e-02  2.68e-01     2.93e-02     1.41e-01\n3572  1.38e-01  4.76e-02  3.07e-01     3.62e-02     1.77e-01\n3573  3.69e-01  2.20e-01  4.98e-01     2.09e-01     5.97e-01\n3574  2.66e-01  1.11e-01  4.29e-01     1.13e-01     3.89e-01\n3575  3.00e-01  1.36e-01  4.54e-01     1.44e-01     4.56e-01\n3576  2.57e-01  4.06e-04  4.67e-01     1.54e-01     4.17e-01\n3577  1.97e-01 -1.11e-01  4.43e-01     1.56e-01     3.51e-01\n3578  1.64e-01 -1.87e-01  4.18e-01     2.69e-01     4.36e-01\n3579  2.97e-01 -2.43e-01  4.77e-01     3.56e-01     6.59e-01\n3580  6.05e-02 -4.26e-01  3.92e-01     3.86e-01     4.28e-01\n3581  5.57e-02 -1.28e-02  2.34e-01     1.99e-02     7.52e-02\n3582  3.14e-01  5.03e-02  4.94e-01     2.18e-01     5.43e-01\n3583  2.23e-01 -1.44e-01  4.54e-01     1.85e-01     4.06e-01\n3584  8.61e-02 -2.76e-02  3.06e-01     3.28e-02     1.18e-01\n3585  1.08e-01 -2.11e-02  3.34e-01     4.03e-02     1.48e-01\n3586  3.19e-01 -1.34e-01  4.98e-01     2.31e-01     5.54e-01\n3587  2.14e-01 -1.24e-01  4.63e-01     1.29e-01     3.37e-01\n3588  2.36e-01 -1.44e-01  4.70e-01     1.60e-01     3.91e-01\n3589 -2.40e-02 -2.04e-01  8.81e-03     3.66e-02     3.65e-03\n3590 -1.35e-02 -1.78e-01 -6.86e-06     1.57e-02     7.98e-04\n3591 -2.75e-02 -3.27e-01 -1.34e-05     3.18e-02     1.66e-03\n3592 -3.28e-02 -3.63e-01 -1.63e-05     3.69e-02     1.79e-03\n3593 -2.99e-03 -1.87e-01 -1.14e-06     3.26e-03     1.23e-04\n3594 -1.75e-03 -2.77e-02 -7.29e-07     2.09e-03     1.12e-04\n3595 -3.70e-02 -2.83e-01  6.51e-02     6.81e-02     1.01e-02\n3596 -1.35e-02 -2.01e-01 -7.01e-06     1.54e-02     7.21e-04\n3597 -2.29e-03 -4.25e-02 -9.83e-07     2.65e-03     1.24e-04\n3598 -3.75e-03 -5.44e-02 -1.54e-06     4.52e-03     2.58e-04\n3599 -2.44e-02 -2.63e-01 -1.21e-05     2.92e-02     1.57e-03\n3600 -5.87e-03 -1.25e-01 -2.31e-06     6.52e-03     2.65e-04\n3601 -8.38e-03 -1.58e-01 -3.87e-06     9.47e-03     3.97e-04\n3602 -4.09e-02 -1.89e-01 -3.61e-03     4.71e-02     2.47e-03\n3603 -1.35e-02 -8.66e-02 -1.11e-03     1.48e-02     5.28e-04\n3604 -2.63e-02 -1.55e-01 -2.04e-03     2.92e-02     1.13e-03\n3605 -3.15e-02 -1.83e-01 -2.28e-03     3.50e-02     1.18e-03\n3606 -2.36e-03 -1.90e-02 -1.66e-04     2.58e-03     7.93e-05\n3607 -2.02e-03 -1.53e-02 -1.33e-04     2.23e-03     7.91e-05\n3608 -8.17e-02 -3.19e-01 -4.95e-03     9.89e-02     6.91e-03\n3609 -1.25e-02 -8.59e-02 -8.96e-04     1.37e-02     4.76e-04\n3610 -2.27e-03 -1.84e-02 -1.46e-04     2.50e-03     8.35e-05\n3611 -4.40e-03 -3.03e-02 -3.05e-04     4.85e-03     1.76e-04\n3612 -2.65e-02 -1.51e-01 -2.20e-03     2.95e-02     1.06e-03\n3613 -4.92e-03 -3.71e-02 -3.42e-04     5.44e-03     1.80e-04\n3614 -7.49e-03 -5.39e-02 -5.09e-04     8.18e-03     2.63e-04\n3615  2.61e-01  1.17e-01  4.26e-01     8.97e-02     3.58e-01\n3616  2.46e-01  1.01e-01  4.16e-01     9.61e-02     3.50e-01\n3617  2.95e-01  9.34e-02  4.58e-01     2.08e-01     5.19e-01\n3618  3.61e-01  2.08e-01  4.96e-01     2.25e-01     6.06e-01\n3619  1.83e-01 -9.20e-02  4.20e-01     2.58e-01     4.50e-01\n3620  4.50e-02  1.12e-02  1.42e-01     1.04e-02     5.57e-02\n3621  3.21e-01  1.60e-01  4.69e-01     1.29e-01     4.61e-01\n3622  2.66e-01  1.17e-01  4.29e-01     1.11e-01     3.86e-01\n3623  7.07e-02  1.89e-02  1.92e-01     1.72e-02     8.86e-02\n3624  8.83e-02  2.63e-02  2.27e-01     2.11e-02     1.11e-01\n3625  3.20e-01  1.58e-01  4.72e-01     1.33e-01     4.65e-01\n3626  2.02e-01  7.16e-02  3.78e-01     6.93e-02     2.77e-01\n3627  2.39e-01  9.29e-02  4.10e-01     8.88e-02     3.36e-01\n3628 -1.92e-02 -1.72e-01  8.47e-02     6.23e-02     3.25e-02\n3629 -3.02e-02 -1.89e-01  1.91e-03     4.44e-02     8.19e-03\n3630 -4.52e-02 -2.86e-01  7.21e-03     7.02e-02     1.58e-02\n3631 -9.48e-02 -3.92e-01 -2.48e-03     1.28e-01     1.88e-02\n3632 -2.73e-02 -2.79e-01 -4.88e-04     2.90e-02     1.32e-03\n3633 -4.29e-03 -3.54e-02  9.66e-04     6.36e-03     1.26e-03\n3634 -1.26e-02 -2.10e-01  1.86e-01     9.95e-02     7.83e-02\n3635 -3.81e-02 -2.24e-01 -8.84e-04     5.11e-02     7.53e-03\n3636 -7.29e-03 -5.77e-02 -1.53e-04     9.59e-03     1.33e-03\n3637 -8.78e-03 -6.42e-02  3.46e-03     1.36e-02     2.79e-03\n3638 -5.90e-02 -2.93e-01  6.63e-03     8.65e-02     1.68e-02\n3639 -2.63e-02 -1.69e-01 -8.12e-04     3.14e-02     2.82e-03\n3640 -3.39e-02 -1.99e-01 -1.06e-03     4.16e-02     4.28e-03\n3641  5.37e-02 -1.32e-01  2.65e-01     1.26e-01     1.88e-01\n3642 -7.16e-03 -1.82e-01  1.01e-01     6.82e-02     5.75e-02\n3643 -1.74e-02 -2.78e-01  1.59e-01     1.38e-01     1.12e-01\n3644 -1.99e-02 -2.97e-01  1.71e-01     1.52e-01     1.23e-01\n3645 -6.15e-03 -1.82e-01  1.78e-02     1.74e-02     9.71e-03\n3646 -2.76e-05 -3.12e-02  2.66e-02     9.19e-03     8.97e-03\n3647  1.32e-01 -1.10e-01  3.62e-01     2.07e-01     3.57e-01\n3648 -1.00e-02 -1.98e-01  9.58e-02     6.80e-02     5.23e-02\n3649 -1.22e-03 -4.73e-02  2.52e-02     1.17e-02     9.65e-03\n3650  2.37e-04 -5.98e-02  4.63e-02     1.95e-02     1.95e-02\n3651 -2.87e-03 -2.21e-01  1.74e-01     1.15e-01     1.08e-01\n3652 -6.72e-03 -1.33e-01  3.77e-02     2.96e-02     2.05e-02\n3653 -8.90e-03 -1.68e-01  6.22e-02     4.28e-02     3.06e-02\n3654  1.24e-01  3.68e-02  2.95e-01     3.42e-02     1.62e-01\n3655  1.26e-01  3.66e-02  3.02e-01     3.76e-02     1.68e-01\n3656  2.04e-01  5.26e-02  4.02e-01     8.92e-02     3.00e-01\n3657  2.62e-01  9.84e-02  4.43e-01     9.62e-02     3.67e-01\n3658  2.41e-01  1.96e-02  4.45e-01     1.40e-01     3.93e-01\n3659  1.66e-02  3.36e-03  6.68e-02     3.79e-03     2.07e-02\n3660  1.72e-01  5.26e-02  3.60e-01     5.03e-02     2.28e-01\n3661  1.47e-01  4.48e-02  3.25e-01     4.32e-02     1.94e-01\n3662  2.72e-02  6.26e-03  9.44e-02     6.21e-03     3.40e-02\n3663  3.37e-02  8.25e-03  1.13e-01     7.75e-03     4.22e-02\n3664  1.81e-01  5.57e-02  3.72e-01     5.27e-02     2.38e-01\n3665  1.04e-01  2.81e-02  2.64e-01     2.69e-02     1.33e-01\n3666  1.27e-01  3.62e-02  3.00e-01     3.46e-02     1.65e-01\n3667  3.19e-01  1.63e-01  4.72e-01     1.32e-01     4.66e-01\n3668  3.12e-01  1.49e-01  4.70e-01     1.41e-01     4.68e-01\n3669  3.25e-01  1.12e-01  4.83e-01     2.87e-01     6.36e-01\n3670  3.91e-01  2.41e-01  5.20e-01     3.11e-01     7.24e-01\n3671  3.14e-01  6.57e-02  4.82e-01     3.96e-01     7.34e-01\n3672  7.10e-02  1.97e-02  2.06e-01     1.58e-02     8.81e-02\n3673  3.66e-01  2.17e-01  5.01e-01     1.85e-01     5.73e-01\n3674  3.36e-01  1.74e-01  4.82e-01     1.62e-01     5.16e-01\n3675  1.12e-01  3.42e-02  2.73e-01     2.62e-02     1.40e-01\n3676  1.33e-01  4.48e-02  3.01e-01     3.21e-02     1.67e-01\n3677  3.77e-01  2.31e-01  5.12e-01     1.91e-01     5.87e-01\n3678  2.95e-01  1.43e-01  4.61e-01     1.05e-01     4.09e-01\n3679  3.26e-01  1.70e-01  4.78e-01     1.33e-01     4.73e-01\n3680  2.54e-01  5.61e-02  4.53e-01     1.22e-01     3.80e-01\n3681  2.12e-01  1.27e-02  4.32e-01     1.24e-01     3.40e-01\n3682  1.75e-01 -5.80e-02  4.16e-01     2.24e-01     4.05e-01\n3683  3.48e-01  1.21e-01  4.96e-01     2.96e-01     6.66e-01\n3684  1.96e-01 -1.39e-01  4.21e-01     3.27e-01     5.37e-01\n3685  6.05e-02  1.05e-02  2.13e-01     1.51e-02     7.66e-02\n3686  3.17e-01  1.02e-01  4.85e-01     1.74e-01     5.02e-01\n3687  2.50e-01  2.71e-02  4.53e-01     1.47e-01     4.03e-01\n3688  9.93e-02  1.83e-02  2.92e-01     2.50e-02     1.25e-01\n3689  1.15e-01  2.48e-02  3.16e-01     3.05e-02     1.47e-01\n3690  3.59e-01  1.43e-01  5.08e-01     1.84e-01     5.58e-01\n3691  2.63e-01  4.66e-02  4.62e-01     1.00e-01     3.67e-01\n3692  2.82e-01  5.95e-02  4.73e-01     1.25e-01     4.15e-01\n3693  2.76e-01  1.22e-01  4.37e-01     1.10e-01     3.96e-01\n3694  2.57e-01  9.35e-02  4.25e-01     1.16e-01     3.83e-01\n3695  2.53e-01  3.31e-02  4.36e-01     2.30e-01     4.97e-01\n3696  3.79e-01  2.32e-01  5.08e-01     2.71e-01     6.72e-01\n3697  2.82e-01  3.62e-02  4.55e-01     3.37e-01     6.37e-01\n3698  5.96e-02  1.53e-02  1.78e-01     1.33e-02     7.39e-02\n3699  3.34e-01  1.74e-01  4.75e-01     1.57e-01     5.07e-01\n3700  2.89e-01  1.24e-01  4.46e-01     1.35e-01     4.35e-01\n3701  9.42e-02  2.82e-02  2.48e-01     2.17e-02     1.18e-01\n3702  1.12e-01  3.54e-02  2.69e-01     2.70e-02     1.41e-01\n3703  3.59e-01  2.04e-01  4.96e-01     1.64e-01     5.41e-01\n3704  2.66e-01  1.16e-01  4.37e-01     8.83e-02     3.62e-01\n3705  2.95e-01  1.42e-01  4.53e-01     1.12e-01     4.16e-01\n3706  2.16e-01  4.79e-03  4.45e-01     1.13e-01     3.35e-01\n3707  1.64e-01 -7.97e-02  4.25e-01     1.14e-01     2.80e-01\n3708  1.46e-01 -1.38e-01  4.17e-01     2.06e-01     3.58e-01\n3709  2.92e-01 -1.88e-01  4.85e-01     2.79e-01     5.75e-01\n3710  5.62e-02 -3.72e-01  4.07e-01     3.07e-01     3.51e-01\n3711  4.04e-02 -8.63e-03  1.85e-01     1.37e-02     5.36e-02\n3712  2.84e-01  5.13e-02  4.81e-01     1.64e-01     4.54e-01\n3713  1.87e-01 -1.09e-01  4.43e-01     1.35e-01     3.19e-01\n3714  6.29e-02 -1.91e-02  2.56e-01     2.28e-02     8.49e-02\n3715  7.93e-02 -1.68e-02  2.74e-01     2.82e-02     1.08e-01\n3716  2.92e-01 -9.51e-02  4.97e-01     1.71e-01     4.63e-01\n3717  1.72e-01 -9.99e-02  4.39e-01     9.30e-02     2.61e-01\n3718  1.96e-01 -1.13e-01  4.52e-01     1.16e-01     3.07e-01\n3719  1.30e-03 -2.96e-01  3.73e-01     2.22e-01     2.16e-01\n3720 -1.14e-01 -3.52e-01  2.28e-01     2.13e-01     6.88e-02\n3721 -1.98e-01 -5.26e-01  2.15e-01     3.80e-01     1.34e-01\n3722 -2.30e-01 -5.49e-01  2.36e-01     4.23e-01     1.42e-01\n3723 -1.81e-01 -4.86e-01 -3.09e-02     2.13e-01     1.15e-02\n3724 -1.21e-02 -6.87e-02  8.60e-02     2.78e-02     1.06e-02\n3725  9.34e-02 -3.21e-01  4.10e-01     3.04e-01     3.88e-01\n3726 -1.37e-01 -3.83e-01  2.14e-01     2.34e-01     6.25e-02\n3727 -2.38e-02 -1.09e-01  8.50e-02     4.29e-02     1.15e-02\n3728 -2.36e-02 -1.25e-01  1.49e-01     5.61e-02     2.35e-02\n3729 -1.36e-01 -4.23e-01  3.00e-01     2.92e-01     1.25e-01\n3730 -9.70e-02 -2.96e-01  1.21e-01     1.46e-01     2.38e-02\n3731 -1.22e-01 -3.42e-01  1.70e-01     1.85e-01     3.66e-02\n3732  2.51e-01  1.75e-02  4.66e-01     1.15e-01     3.71e-01\n3733  2.11e-01 -8.12e-02  4.55e-01     1.21e-01     3.29e-01\n3734  2.33e-01 -1.71e-01  4.57e-01     2.45e-01     4.82e-01\n3735  3.13e-01 -1.81e-01  4.95e-01     2.75e-01     5.94e-01\n3736  1.09e-01 -3.94e-01  4.31e-01     3.41e-01     4.39e-01\n3737  4.19e-02 -6.33e-03  1.82e-01     1.34e-02     5.55e-02\n3738  3.12e-01  6.21e-02  4.93e-01     1.64e-01     4.83e-01\n3739  2.33e-01 -1.06e-01  4.67e-01     1.40e-01     3.70e-01\n3740  6.30e-02 -1.82e-02  2.54e-01     2.24e-02     8.50e-02\n3741  8.20e-02 -1.39e-02  2.85e-01     2.73e-02     1.09e-01\n3742  2.97e-01 -8.31e-02  4.96e-01     1.67e-01     4.67e-01\n3743  1.82e-01 -9.04e-02  4.44e-01     9.10e-02     2.69e-01\n3744  2.11e-01 -1.08e-01  4.60e-01     1.15e-01     3.18e-01\n3745  2.12e-01  3.87e-02  3.90e-01     1.66e-01     3.90e-01\n3746  1.45e-01 -1.34e-02  3.40e-01     1.54e-01     3.08e-01\n3747  7.05e-02 -1.12e-01  2.81e-01     2.14e-01     2.88e-01\n3748  3.09e-01  1.16e-01  4.69e-01     3.96e-01     7.21e-01\n3749  1.21e-01 -9.87e-02  3.39e-01     3.58e-01     4.87e-01\n3750  8.84e-02  2.27e-02  2.38e-01     2.45e-02     1.15e-01\n3751  2.77e-01  8.28e-02  4.39e-01     2.38e-01     5.32e-01\n3752  1.97e-01  9.24e-03  3.81e-01     1.91e-01     3.98e-01\n3753  1.51e-01  4.55e-02  3.39e-01     4.12e-02     1.95e-01\n3754  1.55e-01  4.95e-02  3.35e-01     4.90e-02     2.09e-01\n3755  3.78e-01  2.20e-01  5.07e-01     2.73e-01     6.73e-01\n3756  3.09e-01  1.46e-01  4.64e-01     1.55e-01     4.80e-01\n3757  2.92e-01  1.13e-01  4.45e-01     1.85e-01     4.91e-01\n3758  3.69e-01  1.87e-01  5.04e-01     2.65e-01     6.52e-01\n3759  3.45e-01  9.22e-02  4.90e-01     2.79e-01     6.40e-01\n3760  2.62e-01 -1.49e-03  4.35e-01     4.77e-01     7.64e-01\n3761  3.18e-01  1.32e-01  4.69e-01     5.16e-01     8.49e-01\n3762  2.01e-01 -2.06e-01  3.92e-01     5.83e-01     8.16e-01\n3763  1.39e-01  3.06e-02  3.73e-01     3.70e-02     1.78e-01\n3764  3.72e-01  2.17e-01  5.04e-01     3.52e-01     7.48e-01\n3765  3.52e-01  1.11e-01  4.94e-01     3.10e-01     6.84e-01\n3766  2.04e-01  4.54e-02  4.36e-01     5.97e-02     2.67e-01\n3767  2.34e-01  6.73e-02  4.51e-01     7.35e-02     3.11e-01\n3768  3.80e-01  2.07e-01  5.07e-01     3.60e-01     7.63e-01\n3769  3.65e-01  8.78e-02  5.11e-01     2.18e-01     5.98e-01\n3770  3.71e-01  1.14e-01  5.07e-01     2.67e-01     6.54e-01\n3771  2.96e-01  9.93e-02  4.81e-01     1.22e-01     4.25e-01\n3772  2.77e-01  5.98e-02  4.70e-01     1.29e-01     4.13e-01\n3773  2.86e-01  1.35e-02  4.69e-01     2.62e-01     5.63e-01\n3774  3.73e-01  1.65e-01  5.08e-01     2.92e-01     6.87e-01\n3775  2.70e-01 -1.30e-01  4.55e-01     3.56e-01     6.45e-01\n3776  6.20e-02  1.18e-02  2.24e-01     1.44e-02     7.72e-02\n3777  3.49e-01  1.45e-01  5.02e-01     1.71e-01     5.35e-01\n3778  3.04e-01  7.28e-02  4.84e-01     1.48e-01     4.62e-01\n3779  9.73e-02  1.76e-02  2.92e-01     2.37e-02     1.22e-01\n3780  1.18e-01  2.60e-02  3.26e-01     2.95e-02     1.50e-01\n3781  3.62e-01  1.45e-01  5.13e-01     1.77e-01     5.53e-01\n3782  2.69e-01  5.13e-02  4.73e-01     9.77e-02     3.71e-01\n3783  2.96e-01  6.87e-02  4.89e-01     1.22e-01     4.26e-01\n3784  2.18e-01  1.17e-02  3.95e-01     2.40e-01     4.78e-01\n3785  7.06e-02 -1.49e-01  2.70e-01     1.92e-01     2.70e-01\n3786  5.77e-02 -1.91e-01  2.93e-01     3.16e-01     3.81e-01\n3787  9.20e-02 -2.17e-01  3.51e-01     3.96e-01     4.92e-01\n3788 -3.84e-02 -3.85e-01  9.39e-02     1.19e-01     7.51e-02\n3789  2.41e-02 -2.70e-02  1.17e-01     2.76e-02     5.48e-02\n3790  2.81e-01  6.86e-02  4.45e-01     3.37e-01     6.42e-01\n3791  5.56e-02 -1.90e-01  2.70e-01     2.07e-01     2.69e-01\n3792  2.06e-02 -5.68e-02  1.23e-01     4.09e-02     6.44e-02\n3793  5.06e-02 -5.06e-02  1.91e-01     5.69e-02     1.13e-01\n3794  1.43e-01 -1.37e-01  3.67e-01     2.91e-01     4.46e-01\n3795  1.56e-02 -1.87e-01  1.85e-01     1.23e-01     1.39e-01\n3796  2.86e-02 -2.05e-01  2.24e-01     1.62e-01     1.91e-01\n3797  3.26e-01  1.66e-01  4.72e-01     1.76e-01     5.19e-01\n3798  3.00e-01  1.19e-01  4.54e-01     1.82e-01     4.97e-01\n3799  2.48e-01  1.38e-02  4.37e-01     3.29e-01     5.98e-01\n3800  3.68e-01  1.97e-01  5.08e-01     3.87e-01     7.75e-01\n3801  2.50e-01  1.32e-02  4.41e-01     4.56e-01     7.27e-01\n3802  9.46e-02  2.64e-02  2.54e-01     2.29e-02     1.19e-01\n3803  3.66e-01  2.12e-01  4.97e-01     2.42e-01     6.32e-01\n3804  3.28e-01  1.57e-01  4.73e-01     2.12e-01     5.58e-01\n3805  1.49e-01  4.74e-02  3.33e-01     3.68e-02     1.88e-01\n3806  1.70e-01  5.80e-02  3.56e-01     4.54e-02     2.17e-01\n3807  3.90e-01  2.46e-01  5.17e-01     2.51e-01     6.67e-01\n3808  3.33e-01  1.73e-01  4.81e-01     1.45e-01     4.91e-01\n3809  3.48e-01  1.97e-01  4.85e-01     1.78e-01     5.45e-01\n3810  1.79e-01 -1.11e-02  4.18e-01     1.11e-01     2.96e-01\n3811  1.17e-01 -7.49e-02  3.86e-01     1.07e-01     2.24e-01\n3812  8.23e-02 -1.16e-01  3.61e-01     1.67e-01     2.53e-01\n3813  2.68e-01 -1.83e-01  4.66e-01     2.82e-01     5.53e-01\n3814  2.07e-02 -3.37e-01  3.64e-01     2.72e-01     2.79e-01\n3815  3.92e-02 -8.62e-03  1.84e-01     1.44e-02     5.38e-02\n3816  2.54e-01  1.78e-02  4.61e-01     1.63e-01     4.23e-01\n3817  1.47e-01 -9.91e-02  4.09e-01     1.30e-01     2.78e-01\n3818  6.44e-02 -2.09e-02  2.54e-01     2.42e-02     8.77e-02\n3819  7.73e-02 -1.67e-02  2.80e-01     2.96e-02     1.07e-01\n3820  2.90e-01 -9.87e-02  4.92e-01     1.79e-01     4.72e-01\n3821  1.70e-01 -9.51e-02  4.33e-01     9.79e-02     2.63e-01\n3822  1.81e-01 -1.11e-01  4.32e-01     1.20e-01     2.97e-01\n3823  4.95e-02 -8.15e-02  2.48e-01     8.45e-02     1.43e-01\n3824 -2.02e-03 -1.27e-01  9.06e-02     4.78e-02     4.37e-02\n3825 -7.92e-03 -2.19e-01  1.31e-01     9.85e-02     8.66e-02\n3826 -8.05e-03 -2.42e-01  1.58e-01     1.13e-01     9.44e-02\n3827 -4.57e-03 -1.31e-01  1.40e-02     1.33e-02     7.43e-03\n3828  3.86e-04 -1.89e-02  2.05e-02     6.06e-03     6.63e-03\n3829  1.27e-01 -6.31e-02  3.46e-01     1.40e-01     2.77e-01\n3830 -4.79e-03 -1.49e-01  8.40e-02     4.78e-02     4.02e-02\n3831 -2.94e-04 -2.97e-02  1.86e-02     8.08e-03     7.28e-03\n3832  1.15e-03 -3.62e-02  4.14e-02     1.31e-02     1.45e-02\n3833  2.91e-03 -1.68e-01  1.59e-01     8.05e-02     8.25e-02\n3834 -4.01e-03 -9.62e-02  3.28e-02     2.14e-02     1.56e-02\n3835 -4.98e-03 -1.18e-01  5.04e-02     3.10e-02     2.34e-02\n3836 -2.40e-03 -5.81e-02  9.35e-02     1.63e-02     9.89e-03\n3837 -8.67e-04 -2.17e-02  2.83e-02     4.27e-03     2.23e-03\n3838 -1.77e-03 -4.38e-02  4.42e-02     8.59e-03     4.57e-03\n3839 -1.98e-03 -4.75e-02  6.60e-02     9.88e-03     5.04e-03\n3840 -1.50e-04 -4.28e-03  5.59e-03     6.87e-04     3.48e-04\n3841 -1.14e-04 -3.57e-03  5.51e-03     6.27e-04     3.39e-04\n3842 -4.23e-03 -1.02e-01  1.78e-01     3.82e-02     2.64e-02\n3843 -8.07e-04 -2.08e-02  2.59e-02     3.87e-03     2.05e-03\n3844 -1.30e-04 -3.88e-03  5.51e-03     6.93e-04     3.65e-04\n3845 -2.62e-04 -7.72e-03  1.15e-02     1.41e-03     7.94e-04\n3846 -1.63e-03 -3.99e-02  5.85e-02     8.54e-03     4.63e-03\n3847 -3.13e-04 -8.40e-03  1.11e-02     1.48e-03     7.49e-04\n3848 -4.70e-04 -1.25e-02  1.76e-02     2.20e-03     1.17e-03\n3849  1.53e-01  4.53e-02  3.28e-01     4.22e-02     1.99e-01\n3850  1.36e-01  3.69e-02  3.07e-01     4.44e-02     1.85e-01\n3851  2.04e-01  4.78e-02  3.88e-01     1.04e-01     3.17e-01\n3852  2.66e-01  9.89e-02  4.34e-01     1.13e-01     3.89e-01\n3853  5.93e-02 -8.59e-02  2.84e-01     1.15e-01     1.83e-01\n3854  1.95e-02  3.82e-03  7.36e-02     4.50e-03     2.43e-02\n3855  2.10e-01  6.64e-02  3.94e-01     6.11e-02     2.75e-01\n3856  1.49e-01  4.22e-02  3.23e-01     5.08e-02     2.06e-01\n3857  3.02e-02  6.42e-03  1.03e-01     7.49e-03     3.81e-02\n3858  3.96e-02  8.74e-03  1.29e-01     9.28e-03     4.94e-02\n3859  1.99e-01  6.43e-02  3.82e-01     6.19e-02     2.67e-01\n3860  9.59e-02  2.27e-02  2.48e-01     3.09e-02     1.29e-01\n3861  1.21e-01  3.09e-02  2.91e-01     4.01e-02     1.65e-01\n3862  1.99e-02 -6.65e-02  1.52e-01     5.22e-02     7.51e-02\n3863 -1.28e-02 -1.16e-01  3.83e-02     4.34e-02     2.56e-02\n3864 -1.40e-02 -1.64e-01  5.13e-02     6.20e-02     4.19e-02\n3865 -5.91e-02 -2.86e-01  6.74e-02     1.38e-01     6.50e-02\n3866 -5.43e-02 -2.97e-01 -2.63e-03     6.15e-02     5.14e-03\n3867 -1.47e-03 -2.37e-02  1.10e-02     6.61e-03     4.35e-03\n3868  6.13e-02 -5.59e-02  2.54e-01     8.25e-02     1.49e-01\n3869 -2.24e-02 -1.51e-01  3.01e-02     5.40e-02     2.53e-02\n3870 -4.50e-03 -4.04e-02  9.36e-03     1.08e-02     4.92e-03\n3871 -2.69e-03 -4.12e-02  2.45e-02     1.38e-02     9.63e-03\n3872 -2.58e-02 -2.01e-01  9.80e-02     9.19e-02     5.75e-02\n3873 -2.52e-02 -1.43e-01  5.57e-03     4.03e-02     1.09e-02\n3874 -2.92e-02 -1.64e-01  1.07e-02     5.02e-02     1.61e-02\n3875  2.46e-01  6.79e-02  4.55e-01     8.68e-02     3.39e-01\n3876  2.30e-01  4.54e-02  4.52e-01     9.23e-02     3.29e-01\n3877  2.65e-01  1.40e-02  4.67e-01     1.96e-01     4.75e-01\n3878  3.62e-01  1.36e-01  5.10e-01     2.21e-01     6.07e-01\n3879  2.70e-01 -1.10e-01  4.68e-01     2.75e-01     5.63e-01\n3880  4.39e-02  7.60e-03  1.71e-01     9.89e-03     5.40e-02\n3881  3.09e-01  1.07e-01  4.91e-01     1.25e-01     4.45e-01\n3882  2.60e-01  5.64e-02  4.65e-01     1.07e-01     3.74e-01\n3883  7.02e-02  1.26e-02  2.35e-01     1.64e-02     8.82e-02\n3884  8.56e-02  1.70e-02  2.69e-01     2.04e-02     1.07e-01\n3885  3.23e-01  1.09e-01  5.00e-01     1.29e-01     4.59e-01\n3886  2.17e-01  3.85e-02  4.42e-01     6.84e-02     2.89e-01\n3887  2.49e-01  4.86e-02  4.61e-01     8.65e-02     3.42e-01\n3888  1.29e-01 -1.84e-01  4.15e-01     1.62e-01     2.88e-01\n3889 -2.58e-02 -2.60e-01  3.50e-01     1.64e-01     1.31e-01\n3890 -6.30e-02 -4.26e-01  3.37e-01     3.16e-01     2.31e-01\n3891 -7.51e-02 -4.46e-01  3.81e-01     3.52e-01     2.64e-01\n3892 -2.01e-01 -4.93e-01  8.92e-02     2.77e-01     2.77e-02\n3893  1.36e-03 -4.42e-02  1.37e-01     1.96e-02     2.04e-02\n3894  2.18e-01 -1.82e-01  4.58e-01     2.28e-01     4.42e-01\n3895 -4.80e-02 -2.92e-01  3.50e-01     1.87e-01     1.24e-01\n3896 -5.15e-03 -7.10e-02  1.65e-01     3.17e-02     2.33e-02\n3897  4.94e-03 -7.52e-02  2.16e-01     3.98e-02     4.45e-02\n3898  1.84e-03 -3.19e-01  4.07e-01     2.26e-01     2.24e-01\n3899 -4.90e-02 -2.22e-01  2.98e-01     1.19e-01     5.32e-02\n3900 -5.57e-02 -2.66e-01  3.28e-01     1.52e-01     7.78e-02\n3901  3.07e-01  9.80e-02  4.74e-01     4.31e-01     7.57e-01\n3902  2.49e-01  2.00e-02  4.42e-01     4.30e-01     7.02e-01\n3903  1.57e-01 -6.26e-02  3.73e-01     5.88e-01     7.65e-01\n3904  1.87e-01  2.44e-02  4.00e-01     6.99e-01     8.93e-01\n3905 -3.16e-02 -4.15e-01  2.57e-01     7.18e-01     6.73e-01\n3906  1.86e-01  5.32e-02  3.86e-01     8.10e-02     2.77e-01\n3907  2.87e-01  9.26e-02  4.73e-01     5.40e-01     8.39e-01\n3908  2.44e-01  1.73e-02  4.41e-01     4.82e-01     7.41e-01\n3909  2.34e-01  5.36e-02  4.26e-01     1.28e-01     3.75e-01\n3910  2.72e-01  1.01e-01  4.50e-01     1.53e-01     4.41e-01\n3911  2.76e-01  7.29e-02  4.70e-01     5.60e-01     8.47e-01\n3912  2.70e-01 -3.31e-02  4.60e-01     3.87e-01     6.69e-01\n3913  2.65e-01 -6.10e-03  4.57e-01     4.44e-01     7.23e-01\n3914  3.48e-01  1.87e-01  4.85e-01     1.66e-01     5.30e-01\n3915  3.37e-01  1.68e-01  4.79e-01     1.77e-01     5.28e-01\n3916  3.22e-01  1.06e-01  4.85e-01     3.44e-01     6.92e-01\n3917  3.82e-01  2.17e-01  5.20e-01     3.69e-01     7.72e-01\n3918  2.93e-01  4.93e-02  4.72e-01     4.60e-01     7.76e-01\n3919  9.14e-02  2.40e-02  2.47e-01     2.06e-02     1.13e-01\n3920  3.80e-01  2.36e-01  5.11e-01     2.29e-01     6.35e-01\n3921  3.56e-01  1.95e-01  4.95e-01     2.03e-01     5.80e-01\n3922  1.37e-01  4.49e-02  3.19e-01     3.37e-02     1.73e-01\n3923  1.63e-01  5.61e-02  3.50e-01     4.14e-02     2.08e-01\n3924  3.90e-01  2.50e-01  5.17e-01     2.35e-01     6.51e-01\n3925  3.29e-01  1.62e-01  4.79e-01     1.32e-01     4.75e-01\n3926  3.54e-01  1.93e-01  4.89e-01     1.66e-01     5.37e-01\n3927  1.98e-01  7.12e-02  3.75e-01     7.23e-02     2.76e-01\n3928  1.74e-01  5.35e-02  3.55e-01     7.63e-02     2.55e-01\n3929  2.03e-01  2.90e-02  3.97e-01     1.54e-01     3.69e-01\n3930  3.16e-01  1.49e-01  4.69e-01     1.89e-01     5.24e-01\n3931  9.45e-02 -1.82e-01  3.55e-01     2.39e-01     3.40e-01\n3932  3.28e-02  7.35e-03  1.15e-01     8.31e-03     4.20e-02\n3933  2.63e-01  1.05e-01  4.36e-01     1.06e-01     3.79e-01\n3934  2.01e-01  6.72e-02  3.80e-01     8.87e-02     2.97e-01\n3935  5.24e-02  1.25e-02  1.62e-01     1.39e-02     6.74e-02\n3936  6.48e-02  1.72e-02  1.90e-01     1.73e-02     8.37e-02\n3937  2.70e-01  1.14e-01  4.45e-01     1.10e-01     3.93e-01\n3938  1.56e-01  4.53e-02  3.37e-01     5.81e-02     2.19e-01\n3939  1.85e-01  5.99e-02  3.69e-01     7.37e-02     2.64e-01\n3940  2.71e-01  1.23e-01  4.40e-01     1.04e-01     3.87e-01\n3941  2.67e-01  1.15e-01  4.35e-01     1.13e-01     3.90e-01\n3942  3.12e-01  1.06e-01  4.77e-01     2.37e-01     5.69e-01\n3943  3.71e-01  2.15e-01  5.13e-01     2.58e-01     6.52e-01\n3944  2.99e-01 -3.58e-02  4.77e-01     3.46e-01     6.53e-01\n3945  5.14e-02  1.28e-02  1.59e-01     1.22e-02     6.46e-02\n3946  3.24e-01  1.68e-01  4.79e-01     1.50e-01     4.87e-01\n3947  2.91e-01  1.32e-01  4.56e-01     1.30e-01     4.33e-01\n3948  8.08e-02  2.31e-02  2.18e-01     2.03e-02     1.03e-01\n3949  9.85e-02  3.06e-02  2.49e-01     2.48e-02     1.26e-01\n3950  3.33e-01  1.74e-01  4.89e-01     1.55e-01     5.03e-01\n3951  2.39e-01  9.72e-02  4.19e-01     8.31e-02     3.29e-01\n3952  2.72e-01  1.20e-01  4.42e-01     1.06e-01     3.88e-01\n3953  3.24e-02 -8.86e-02  2.14e-01     7.76e-02     1.17e-01\n3954 -3.37e-03 -1.17e-01  7.25e-02     4.15e-02     3.54e-02\n3955 -7.24e-03 -1.81e-01  1.10e-01     7.66e-02     6.54e-02\n3956 -1.24e-02 -2.34e-01  1.39e-01     9.95e-02     8.13e-02\n3957 -3.66e-03 -1.19e-01  1.24e-02     1.14e-02     6.21e-03\n3958  3.76e-05 -2.00e-02  1.78e-02     5.78e-03     5.64e-03\n3959  9.41e-02 -8.46e-02  3.19e-01     1.33e-01     2.39e-01\n3960 -5.70e-03 -1.37e-01  7.09e-02     4.26e-02     3.32e-02\n3961 -6.44e-04 -3.06e-02  1.72e-02     7.58e-03     6.14e-03\n3962  2.44e-04 -3.49e-02  3.66e-02     1.24e-02     1.24e-02\n3963 -1.21e-03 -1.66e-01  1.48e-01     7.59e-02     7.11e-02\n3964 -4.16e-03 -9.93e-02  3.15e-02     1.94e-02     1.30e-02\n3965 -5.30e-03 -1.15e-01  4.47e-02     2.81e-02     1.96e-02\n3966  1.47e-01  7.72e-03  3.84e-01     5.38e-02     2.02e-01\n3967  1.23e-01 -4.20e-02  3.71e-01     5.69e-02     1.79e-01\n3968  1.69e-01 -8.96e-02  4.24e-01     1.24e-01     2.93e-01\n3969  2.51e-01 -9.87e-02  4.71e-01     1.42e-01     3.90e-01\n3970  7.81e-02 -2.67e-01  4.26e-01     1.82e-01     2.51e-01\n3971  1.89e-02 -2.88e-03  9.79e-02     5.89e-03     2.48e-02\n3972  2.06e-01  3.02e-02  4.40e-01     7.77e-02     2.89e-01\n3973  1.37e-01 -5.67e-02  3.92e-01     6.58e-02     2.03e-01\n3974  2.89e-02 -6.95e-03  1.51e-01     9.72e-03     3.85e-02\n3975  3.79e-02 -6.60e-03  1.76e-01     1.22e-02     4.99e-02\n3976  1.91e-01 -4.28e-02  4.41e-01     7.97e-02     2.70e-01\n3977  9.59e-02 -4.33e-02  3.45e-01     4.13e-02     1.35e-01\n3978  1.21e-01 -5.28e-02  3.70e-01     5.36e-02     1.71e-01\n3979  3.04e-01  1.52e-01  4.65e-01     1.33e-01     4.50e-01\n3980  2.96e-01  1.35e-01  4.55e-01     1.42e-01     4.50e-01\n3981  3.19e-01  1.09e-01  4.82e-01     2.87e-01     6.27e-01\n3982  3.73e-01  2.10e-01  5.14e-01     3.11e-01     7.07e-01\n3983  2.88e-01 -4.74e-02  4.74e-01     4.04e-01     7.07e-01\n3984  6.53e-02  1.66e-02  1.97e-01     1.61e-02     8.25e-02\n3985  3.49e-01  1.94e-01  4.96e-01     1.86e-01     5.54e-01\n3986  3.19e-01  1.64e-01  4.74e-01     1.62e-01     4.96e-01\n3987  1.01e-01  3.07e-02  2.66e-01     2.65e-02     1.30e-01\n3988  1.22e-01  3.95e-02  2.98e-01     3.25e-02     1.57e-01\n3989  3.56e-01  1.99e-01  5.03e-01     1.92e-01     5.70e-01\n3990  2.75e-01  1.19e-01  4.50e-01     1.06e-01     3.91e-01\n3991  3.05e-01  1.47e-01  4.66e-01     1.34e-01     4.52e-01\n3992  1.98e-01  1.21e-02  4.39e-01     7.93e-02     2.81e-01\n3993  1.66e-01 -5.88e-02  4.26e-01     8.49e-02     2.48e-01\n3994  2.06e-01 -1.35e-01  4.54e-01     1.80e-01     3.89e-01\n3995  2.95e-01 -1.41e-01  4.94e-01     2.03e-01     4.98e-01\n3996  1.01e-01 -3.34e-01  4.42e-01     2.57e-01     3.50e-01\n3997  2.83e-02 -4.98e-03  1.44e-01     9.18e-03     3.76e-02\n3998  2.63e-01  4.73e-02  4.77e-01     1.14e-01     3.85e-01\n3999  1.85e-01 -7.73e-02  4.44e-01     9.90e-02     2.81e-01\n4000  4.38e-02 -1.21e-02  2.01e-01     1.50e-02     5.89e-02\n4001  5.67e-02 -9.67e-03  2.27e-01     1.88e-02     7.56e-02\n4002  2.50e-01 -6.09e-02  4.78e-01     1.19e-01     3.66e-01\n4003  1.37e-01 -6.45e-02  4.03e-01     6.27e-02     1.97e-01\n4004  1.66e-01 -7.88e-02  4.28e-01     7.92e-02     2.41e-01\n4005  1.17e-01 -8.79e-03  3.07e-01     1.05e-01     2.32e-01\n4006  2.59e-02 -7.94e-02  1.64e-01     7.82e-02     1.09e-01\n4007  2.06e-02 -1.24e-01  1.86e-01     1.27e-01     1.52e-01\n4008  5.36e-02 -1.70e-01  2.81e-01     1.99e-01     2.59e-01\n4009 -1.45e-02 -2.16e-01  4.13e-02     4.59e-02     2.83e-02\n4010  8.56e-03 -9.97e-03  5.51e-02     1.09e-02     2.08e-02\n4011  2.00e-01  2.72e-02  3.90e-01     1.64e-01     3.81e-01\n4012  2.18e-02 -1.02e-01  1.68e-01     8.71e-02     1.13e-01\n4013  7.35e-03 -2.46e-02  6.20e-02     1.63e-02     2.49e-02\n4014  1.89e-02 -1.90e-02  1.01e-01     2.31e-02     4.42e-02\n4015  8.03e-02 -1.05e-01  2.89e-01     1.38e-01     2.31e-01\n4016  4.47e-03 -9.74e-02  1.05e-01     5.13e-02     5.57e-02\n4017  9.83e-03 -1.08e-01  1.34e-01     6.73e-02     7.83e-02\n4018  1.22e-01 -1.91e-02  3.13e-01     1.14e-01     2.48e-01\n4019  1.98e-02 -1.06e-01  1.62e-01     8.10e-02     1.04e-01\n4020  1.82e-02 -1.69e-01  2.05e-01     1.50e-01     1.70e-01\n4021  3.15e-02 -2.08e-01  2.59e-01     1.92e-01     2.24e-01\n4022 -1.28e-02 -2.18e-01  3.30e-02     3.64e-02     2.17e-02\n4023  5.68e-03 -1.55e-02  4.84e-02     1.05e-02     1.75e-02\n4024  2.11e-01  2.61e-02  3.94e-01     1.75e-01     4.03e-01\n4025  1.19e-02 -1.36e-01  1.55e-01     8.72e-02     1.01e-01\n4026  4.04e-03 -3.23e-02  4.84e-02     1.52e-02     2.01e-02\n4027  1.33e-02 -2.86e-02  9.07e-02     2.21e-02     3.82e-02\n4028  5.61e-02 -1.29e-01  2.57e-01     1.35e-01     2.00e-01\n4029 -2.44e-04 -1.17e-01  8.04e-02     4.54e-02     4.42e-02\n4030  2.59e-03 -1.35e-01  1.12e-01     6.18e-02     6.56e-02\n4031  4.36e-02 -1.66e-01  2.42e-01     1.45e-01     1.92e-01\n4032 -4.96e-02 -2.82e-01  5.89e-02     1.30e-01     6.78e-02\n4033 -7.52e-02 -3.64e-01  7.63e-02     2.10e-01     1.18e-01\n4034 -1.43e-01 -4.64e-01  8.31e-02     3.15e-01     1.51e-01\n4035 -1.52e-01 -5.29e-01 -8.90e-03     1.69e-01     1.26e-02\n4036 -5.34e-03 -6.09e-02  2.02e-02     1.84e-02     1.10e-02\n4037  1.25e-01 -1.34e-01  3.39e-01     2.11e-01     3.47e-01\n4038 -7.44e-02 -3.24e-01  4.23e-02     1.50e-01     6.43e-02\n4039 -1.36e-02 -1.01e-01  1.56e-02     2.90e-02     1.20e-02\n4040 -1.01e-02 -1.07e-01  4.12e-02     3.68e-02     2.41e-02\n4041 -6.73e-02 -3.65e-01  1.32e-01     2.13e-01     1.32e-01\n4042 -6.77e-02 -2.99e-01  3.18e-03     1.02e-01     2.63e-02\n4043 -8.01e-02 -3.36e-01  1.19e-02     1.29e-01     3.90e-02\n4044  3.60e-02 -1.18e-01  2.87e-01     1.79e-01     2.20e-01\n4045 -2.69e-03 -1.31e-01  1.97e-01     1.20e-01     1.13e-01\n4046 -6.56e-03 -1.32e-01  1.76e-01     1.18e-01     1.08e-01\n4047  9.95e-03 -3.08e-01  2.99e-01     3.98e-01     4.00e-01\n4048 -2.66e-02 -1.72e-01  1.57e-01     1.01e-01     6.18e-02\n4049  1.17e-02 -4.44e-02  1.70e-01     3.46e-02     4.68e-02\n4050  8.33e-02 -1.31e-01  3.37e-01     2.88e-01     3.78e-01\n4051 -6.49e-03 -1.64e-01  2.30e-01     1.56e-01     1.44e-01\n4052  1.35e-02 -7.56e-02  2.48e-01     5.38e-02     6.73e-02\n4053  2.53e-02 -7.89e-02  2.47e-01     6.90e-02     9.47e-02\n4054  8.77e-02 -2.79e-01  3.90e-01     3.56e-01     4.44e-01\n4055 -3.46e-03 -1.89e-01  3.14e-01     1.48e-01     1.38e-01\n4056 -3.86e-03 -2.00e-01  2.83e-01     1.73e-01     1.62e-01\n4057  2.81e-01 -2.18e-02  4.78e-01     1.96e-01     4.85e-01\n4058  2.19e-01 -1.31e-01  4.50e-01     2.03e-01     4.21e-01\n4059  1.69e-01 -2.00e-01  4.06e-01     3.30e-01     5.01e-01\n4060  2.83e-01 -2.67e-01  4.60e-01     4.31e-01     7.28e-01\n4061  6.04e-02 -4.73e-01  3.75e-01     4.56e-01     5.07e-01\n4062  7.41e-02 -1.76e-02  2.84e-01     2.72e-02     1.02e-01\n4063  3.26e-01  4.32e-02  4.89e-01     2.75e-01     6.15e-01\n4064  2.44e-01 -1.73e-01  4.62e-01     2.34e-01     4.77e-01\n4065  1.12e-01 -3.87e-02  3.64e-01     4.45e-02     1.55e-01\n4066  1.37e-01 -3.14e-02  3.84e-01     5.41e-02     1.92e-01\n4067  3.31e-01 -1.61e-01  4.99e-01     2.90e-01     6.34e-01\n4068  2.51e-01 -1.55e-01  4.85e-01     1.67e-01     4.10e-01\n4069  2.66e-01 -1.77e-01  4.81e-01     2.04e-01     4.66e-01\n4070  2.00e-01  1.39e-02  4.21e-01     1.19e-01     3.25e-01\n4071  1.44e-01 -1.67e-02  3.83e-01     1.15e-01     2.63e-01\n4072  8.60e-02 -8.01e-02  3.49e-01     1.78e-01     2.69e-01\n4073  3.19e-01  6.69e-02  4.78e-01     2.98e-01     6.38e-01\n4074  1.22e-01 -1.35e-01  3.74e-01     2.89e-01     4.17e-01\n4075  5.82e-02  9.60e-03  2.10e-01     1.56e-02     7.48e-02\n4076  2.74e-01  4.22e-02  4.60e-01     1.73e-01     4.54e-01\n4077  1.91e-01 -8.96e-03  4.17e-01     1.39e-01     3.36e-01\n4078  9.96e-02  1.86e-02  2.96e-01     2.60e-02     1.27e-01\n4079  1.09e-01  2.24e-02  3.09e-01     3.18e-02     1.43e-01\n4080  3.54e-01  1.44e-01  5.05e-01     1.91e-01     5.60e-01\n4081  2.51e-01  4.23e-02  4.59e-01     1.04e-01     3.62e-01\n4082  2.52e-01  3.59e-02  4.51e-01     1.27e-01     3.85e-01\n4083  2.67e-01  1.05e-01  4.36e-01     1.59e-01     4.38e-01\n4084  2.14e-01  4.58e-02  3.99e-01     1.59e-01     3.86e-01\n4085  1.69e-01 -4.35e-02  3.76e-01     2.57e-01     4.38e-01\n4086  3.19e-01  1.23e-01  4.78e-01     3.71e-01     7.06e-01\n4087  5.31e-02 -2.59e-01  3.28e-01     3.94e-01     4.42e-01\n4088  7.24e-02  1.86e-02  2.10e-01     2.16e-02     9.66e-02\n4089  3.22e-01  1.53e-01  4.72e-01     2.26e-01     5.67e-01\n4090  2.42e-01  7.12e-02  4.15e-01     1.88e-01     4.45e-01\n4091  1.10e-01  3.21e-02  2.75e-01     3.57e-02     1.48e-01\n4092  1.33e-01  4.19e-02  3.07e-01     4.37e-02     1.80e-01\n4093  3.45e-01  1.80e-01  4.95e-01     2.45e-01     6.10e-01\n4094  2.42e-01  7.02e-02  4.26e-01     1.39e-01     3.91e-01\n4095  2.61e-01  8.61e-02  4.30e-01     1.69e-01     4.45e-01\n4096  3.13e-01  8.28e-02  4.84e-01     2.11e-01     5.37e-01\n4097  2.65e-01  1.00e-02  4.61e-01     2.14e-01     4.88e-01\n4098  1.84e-01 -8.42e-02  4.06e-01     3.52e-01     5.46e-01\n4099  3.24e-01  1.21e-01  4.76e-01     4.50e-01     7.92e-01\n4100  1.76e-01 -1.84e-01  3.80e-01     4.79e-01     6.76e-01\n4101  1.07e-01  2.23e-02  3.21e-01     2.90e-02     1.37e-01\n4102  3.46e-01  1.44e-01  4.91e-01     2.90e-01     6.58e-01\n4103  2.97e-01  3.66e-02  4.74e-01     2.49e-01     5.57e-01\n4104  1.68e-01  3.62e-02  3.93e-01     4.80e-02     2.19e-01\n4105  1.87e-01  5.12e-02  4.14e-01     5.87e-02     2.49e-01\n4106  3.81e-01  2.01e-01  5.11e-01     3.04e-01     7.11e-01\n4107  3.39e-01  7.59e-02  4.99e-01     1.78e-01     5.31e-01\n4108  3.40e-01  7.85e-02  4.97e-01     2.18e-01     5.70e-01\n4109  1.07e-01  3.84e-03  2.81e-01     8.57e-02     2.01e-01\n4110  3.11e-02 -6.25e-02  1.64e-01     7.71e-02     1.13e-01\n4111  2.40e-02 -1.07e-01  1.72e-01     1.08e-01     1.34e-01\n4112  7.03e-02 -1.59e-01  2.88e-01     2.33e-01     3.09e-01\n4113 -1.11e-01 -3.71e-01  2.75e-03     1.63e-01     4.31e-02\n4114  1.18e-02 -7.22e-03  6.53e-02     1.21e-02     2.52e-02\n4115  1.83e-01  2.94e-02  3.66e-01     1.31e-01     3.26e-01\n4116  2.77e-02 -9.30e-02  1.74e-01     9.65e-02     1.29e-01\n4117  1.13e-02 -2.44e-02  7.75e-02     2.05e-02     3.31e-02\n4118  2.60e-02 -1.23e-02  1.15e-01     2.44e-02     5.28e-02\n4119  1.07e-01 -7.50e-02  3.21e-01     1.54e-01     2.71e-01\n4120  4.57e-04 -1.17e-01  1.26e-01     7.89e-02     7.94e-02\n4121  9.36e-03 -1.23e-01  1.55e-01     9.48e-02     1.06e-01\n4122  7.76e-02 -1.26e-01  3.60e-01     1.44e-01     2.25e-01\n4123 -3.70e-03 -1.35e-01  2.51e-01     9.36e-02     8.63e-02\n4124 -1.57e-02 -2.18e-01  2.55e-01     1.67e-01     1.40e-01\n4125 -1.37e-02 -2.59e-01  3.54e-01     2.15e-01     1.93e-01\n4126 -9.01e-03 -8.34e-02  1.21e-01     3.17e-02     1.71e-02\n4127  1.57e-03 -2.34e-02  9.12e-02     1.34e-02     1.47e-02\n4128  1.62e-01 -1.32e-01  4.11e-01     2.21e-01     3.86e-01\n4129 -9.19e-03 -1.48e-01  2.64e-01     9.72e-02     8.30e-02\n4130 -4.00e-04 -3.35e-02  1.11e-01     1.78e-02     1.65e-02\n4131  4.05e-03 -4.46e-02  1.64e-01     2.77e-02     3.23e-02\n4132  1.18e-02 -1.96e-01  3.67e-01     1.59e-01     1.70e-01\n4133 -7.62e-03 -9.36e-02  2.08e-01     4.87e-02     3.48e-02\n4134 -9.17e-03 -1.20e-01  2.42e-01     6.71e-02     5.27e-02\n4135  2.47e-01  7.08e-02  4.58e-01     8.73e-02     3.37e-01\n4136  2.33e-01  4.59e-02  4.48e-01     9.32e-02     3.29e-01\n4137  2.68e-01  1.23e-02  4.66e-01     1.97e-01     4.76e-01\n4138  3.62e-01  1.37e-01  5.10e-01     2.20e-01     6.03e-01\n4139  2.72e-01 -1.05e-01  4.68e-01     2.78e-01     5.63e-01\n4140  4.46e-02  7.49e-03  1.72e-01     1.01e-02     5.53e-02\n4141  3.08e-01  1.12e-01  4.91e-01     1.25e-01     4.43e-01\n4142  2.59e-01  5.89e-02  4.66e-01     1.08e-01     3.71e-01\n4143  7.10e-02  1.28e-02  2.33e-01     1.67e-02     8.82e-02\n4144  8.65e-02  1.78e-02  2.68e-01     2.06e-02     1.07e-01\n4145  3.23e-01  1.10e-01  5.05e-01     1.29e-01     4.59e-01\n4146  2.15e-01  4.05e-02  4.39e-01     6.88e-02     2.87e-01\n4147  2.47e-01  5.27e-02  4.64e-01     8.76e-02     3.38e-01\n4148  2.98e-01 -2.92e-02  4.80e-01     2.52e-01     5.65e-01\n4149  2.32e-01 -1.73e-01  4.54e-01     2.53e-01     4.89e-01\n4150  1.64e-01 -2.41e-01  4.00e-01     3.96e-01     5.69e-01\n4151  2.60e-01 -3.17e-01  4.44e-01     5.05e-01     7.79e-01\n4152  4.85e-02 -5.21e-01  3.51e-01     5.26e-01     5.69e-01\n4153  9.56e-02 -2.57e-02  3.21e-01     3.62e-02     1.32e-01\n4154  3.23e-01  5.27e-02  4.83e-01     3.40e-01     6.82e-01\n4155  2.50e-01 -2.18e-01  4.64e-01     2.90e-01     5.49e-01\n4156  1.42e-01 -5.55e-02  3.97e-01     5.97e-02     2.00e-01\n4157  1.72e-01 -4.60e-02  4.18e-01     7.31e-02     2.44e-01\n4158  3.28e-01 -2.02e-01  4.93e-01     3.59e-01     6.96e-01\n4159  2.76e-01 -1.98e-01  4.87e-01     2.16e-01     4.86e-01\n4160  2.81e-01 -2.24e-01  4.81e-01     2.59e-01     5.40e-01\n4161  1.45e-01  1.07e-02  3.81e-01     5.18e-02     2.02e-01\n4162  1.22e-01 -3.29e-02  3.72e-01     5.48e-02     1.79e-01\n4163  1.68e-01 -8.28e-02  4.32e-01     1.22e-01     2.93e-01\n4164  2.52e-01 -9.11e-02  4.76e-01     1.40e-01     3.93e-01\n4165  8.26e-02 -2.59e-01  4.35e-01     1.80e-01     2.57e-01\n4166  1.88e-02 -2.42e-03  1.04e-01     5.69e-03     2.46e-02\n4167  2.05e-01  3.36e-02  4.39e-01     7.58e-02     2.87e-01\n4168  1.36e-01 -4.40e-02  3.91e-01     6.40e-02     2.03e-01\n4169  2.91e-02 -6.40e-03  1.49e-01     9.46e-03     3.87e-02\n4170  3.86e-02 -4.84e-03  1.73e-01     1.19e-02     5.12e-02\n4171  1.92e-01 -3.50e-02  4.45e-01     7.86e-02     2.72e-01\n4172  9.59e-02 -4.02e-02  3.44e-01     4.07e-02     1.36e-01\n4173  1.19e-01 -4.83e-02  3.74e-01     5.17e-02     1.71e-01\n4174 -1.04e-01 -3.43e-01  1.60e-01     1.84e-01     5.37e-02\n4175 -1.04e-01 -3.06e-01 -1.70e-04     1.32e-01     1.27e-02\n4176 -1.73e-01 -4.48e-01  5.80e-05     2.27e-01     2.61e-02\n4177 -2.33e-01 -5.14e-01 -2.00e-02     2.92e-01     2.80e-02\n4178 -4.87e-02 -2.07e-01 -7.68e-03     5.36e-02     1.92e-03\n4179 -1.50e-02 -6.46e-02  4.74e-03     1.91e-02     1.88e-03\n4180 -1.13e-01 -4.10e-01  2.54e-01     2.73e-01     1.29e-01\n4181 -1.14e-01 -3.25e-01 -1.10e-02     1.40e-01     1.15e-02\n4182 -2.17e-02 -8.75e-02 -4.38e-04     2.65e-02     2.02e-03\n4183 -3.05e-02 -1.16e-01  1.16e-02     3.97e-02     4.27e-03\n4184 -1.66e-01 -4.15e-01  3.77e-02     2.17e-01     2.48e-02\n4185 -6.38e-02 -2.11e-01 -9.61e-03     7.44e-02     4.32e-03\n4186 -8.67e-02 -2.60e-01 -1.25e-02     1.02e-01     6.39e-03\n4187  1.74e-01  2.57e-03  4.09e-01     7.92e-02     2.58e-01\n4188  1.28e-01 -5.17e-02  3.86e-01     8.13e-02     2.13e-01\n4189  1.25e-01 -9.96e-02  4.03e-01     1.53e-01     2.80e-01\n4190  2.77e-01 -1.32e-01  4.86e-01     2.06e-01     4.85e-01\n4191  5.74e-02 -3.02e-01  4.08e-01     2.34e-01     2.78e-01\n4192  2.86e-02 -4.16e-03  1.44e-01     9.39e-03     3.79e-02\n4193  2.42e-01  3.59e-02  4.60e-01     1.16e-01     3.65e-01\n4194  1.54e-01 -6.83e-02  4.16e-01     9.60e-02     2.50e-01\n4195  4.57e-02 -1.04e-02  2.05e-01     1.57e-02     6.14e-02\n4196  5.71e-02 -7.58e-03  2.32e-01     1.91e-02     7.58e-02\n4197  2.52e-01 -5.93e-02  4.78e-01     1.23e-01     3.75e-01\n4198  1.35e-01 -5.85e-02  4.01e-01     6.52e-02     1.98e-01\n4199  1.60e-01 -7.15e-02  4.17e-01     8.15e-02     2.39e-01\n4200  2.67e-01  1.06e-01  4.35e-01     1.44e-01     4.26e-01\n4201  2.28e-01  5.89e-02  4.11e-01     1.46e-01     3.85e-01\n4202  1.86e-01 -2.93e-02  3.95e-01     2.42e-01     4.42e-01\n4203  3.50e-01  1.69e-01  5.01e-01     3.41e-01     7.14e-01\n4204  2.06e-01 -7.32e-02  4.20e-01     3.80e-01     6.02e-01\n4205  7.21e-02  1.86e-02  2.10e-01     1.87e-02     9.23e-02\n4206  3.21e-01  1.51e-01  4.77e-01     2.06e-01     5.48e-01\n4207  2.66e-01  9.03e-02  4.39e-01     1.71e-01     4.55e-01\n4208  1.15e-01  3.47e-02  2.89e-01     3.14e-02     1.49e-01\n4209  1.33e-01  4.28e-02  3.07e-01     3.81e-02     1.74e-01\n4210  3.63e-01  1.99e-01  5.09e-01     2.22e-01     6.05e-01\n4211  2.82e-01  1.23e-01  4.49e-01     1.23e-01     4.19e-01\n4212  2.97e-01  1.37e-01  4.58e-01     1.53e-01     4.65e-01\n4213  2.70e-01  1.19e-01  4.37e-01     1.04e-01     3.84e-01\n4214  2.66e-01  1.11e-01  4.35e-01     1.12e-01     3.87e-01\n4215  3.11e-01  1.09e-01  4.74e-01     2.36e-01     5.64e-01\n4216  3.71e-01  2.16e-01  5.12e-01     2.54e-01     6.50e-01\n4217  2.98e-01 -1.80e-02  4.79e-01     3.44e-01     6.54e-01\n4218  5.12e-02  1.32e-02  1.57e-01     1.21e-02     6.44e-02\n4219  3.25e-01  1.62e-01  4.78e-01     1.47e-01     4.88e-01\n4220  2.91e-01  1.32e-01  4.54e-01     1.27e-01     4.31e-01\n4221  8.05e-02  2.31e-02  2.14e-01     2.03e-02     1.03e-01\n4222  9.78e-02  2.93e-02  2.45e-01     2.51e-02     1.24e-01\n4223  3.35e-01  1.72e-01  4.84e-01     1.53e-01     5.02e-01\n4224  2.38e-01  9.40e-02  4.14e-01     8.31e-02     3.28e-01\n4225  2.72e-01  1.20e-01  4.40e-01     1.04e-01     3.86e-01\n4226  2.88e-01  1.34e-01  4.49e-01     1.05e-01     4.04e-01\n4227  2.83e-01  1.27e-01  4.52e-01     1.13e-01     4.07e-01\n4228  3.21e-01  1.16e-01  4.81e-01     2.39e-01     5.80e-01\n4229  3.87e-01  2.44e-01  5.15e-01     2.58e-01     6.69e-01\n4230  3.23e-01  7.97e-02  4.83e-01     3.38e-01     6.82e-01\n4231  5.58e-02  1.50e-02  1.74e-01     1.21e-02     6.88e-02\n4232  3.41e-01  1.85e-01  4.86e-01     1.48e-01     5.04e-01\n4233  3.09e-01  1.49e-01  4.67e-01     1.30e-01     4.52e-01\n4234  8.95e-02  2.64e-02  2.36e-01     2.01e-02     1.11e-01\n4235  1.07e-01  3.27e-02  2.68e-01     2.50e-02     1.33e-01\n4236  3.53e-01  1.96e-01  4.93e-01     1.53e-01     5.24e-01\n4237  2.61e-01  1.09e-01  4.37e-01     8.39e-02     3.50e-01\n4238  2.93e-01  1.36e-01  4.56e-01     1.05e-01     4.07e-01\n4239 -3.70e-04 -3.57e-02  3.53e-02     3.19e-03     1.66e-03\n4240 -9.06e-05 -1.04e-02  8.69e-03     7.13e-04     3.53e-04\n4241 -1.99e-04 -2.26e-02  1.80e-02     1.54e-03     7.81e-04\n4242 -2.04e-04 -2.35e-02  1.85e-02     1.55e-03     7.96e-04\n4243 -1.39e-05 -1.82e-03  1.41e-03     1.09e-04     5.38e-05\n4244 -1.27e-05 -1.65e-03  1.48e-03     1.04e-04     5.22e-05\n4245 -8.49e-04 -7.33e-02  8.95e-02     8.57e-03     4.66e-03\n4246 -7.82e-05 -9.76e-03  7.38e-03     6.37e-04     3.19e-04\n4247 -1.42e-05 -1.80e-03  1.40e-03     1.14e-04     5.71e-05\n4248 -2.85e-05 -3.66e-03  3.11e-03     2.33e-04     1.15e-04\n4249 -1.80e-04 -2.09e-02  1.79e-02     1.43e-03     7.14e-04\n4250 -3.08e-05 -3.91e-03  3.10e-03     2.35e-04     1.17e-04\n4251 -4.51e-05 -5.64e-03  4.43e-03     3.53e-04     1.80e-04\n4252 -3.72e-04 -3.34e-02  4.10e-02     3.49e-03     1.74e-03\n4253 -9.68e-05 -1.01e-02  9.00e-03     7.58e-04     3.77e-04\n4254 -2.06e-04 -2.06e-02  1.80e-02     1.62e-03     7.95e-04\n4255 -2.17e-04 -2.31e-02  1.96e-02     1.68e-03     8.35e-04\n4256 -1.49e-05 -1.81e-03  1.55e-03     1.14e-04     5.68e-05\n4257 -1.36e-05 -1.60e-03  1.61e-03     1.11e-04     5.48e-05\n4258 -8.74e-04 -6.81e-02  9.11e-02     9.12e-03     4.81e-03\n4259 -8.89e-05 -9.87e-03  8.01e-03     6.84e-04     3.39e-04\n4260 -1.46e-05 -1.73e-03  1.46e-03     1.20e-04     5.88e-05\n4261 -3.08e-05 -3.62e-03  3.50e-03     2.48e-04     1.24e-04\n4262 -1.89e-04 -1.95e-02  1.92e-02     1.50e-03     7.38e-04\n4263 -3.32e-05 -3.61e-03  3.06e-03     2.50e-04     1.22e-04\n4264 -5.03e-05 -5.32e-03  4.51e-03     3.83e-04     1.87e-04\n4265  2.95e-01  1.17e-01  4.50e-01     2.07e-01     5.18e-01\n4266  2.34e-01  4.79e-02  4.10e-01     2.03e-01     4.50e-01\n4267  1.58e-01 -7.08e-02  3.70e-01     3.23e-01     4.93e-01\n4268  3.18e-01  1.25e-01  4.77e-01     4.40e-01     7.70e-01\n4269  1.02e-01 -1.72e-01  3.46e-01     4.05e-01     5.14e-01\n4270  1.01e-01  2.80e-02  2.69e-01     2.85e-02     1.31e-01\n4271  3.37e-01  1.62e-01  4.82e-01     2.85e-01     6.44e-01\n4272  2.65e-01  7.51e-02  4.34e-01     2.36e-01     5.20e-01\n4273  1.51e-01  4.58e-02  3.44e-01     4.67e-02     2.02e-01\n4274  1.77e-01  6.23e-02  3.64e-01     5.73e-02     2.38e-01\n4275  3.69e-01  2.09e-01  5.01e-01     3.01e-01     6.94e-01\n4276  2.94e-01  1.05e-01  4.56e-01     1.72e-01     4.78e-01\n4277  3.02e-01  1.17e-01  4.57e-01     2.08e-01     5.27e-01\n4278  2.70e-01  1.19e-01  4.44e-01     1.05e-01     3.85e-01\n4279  2.65e-01  1.14e-01  4.40e-01     1.12e-01     3.87e-01\n4280  3.14e-01  1.06e-01  4.75e-01     2.36e-01     5.68e-01\n4281  3.71e-01  2.12e-01  5.13e-01     2.54e-01     6.50e-01\n4282  2.98e-01 -9.38e-03  4.78e-01     3.40e-01     6.54e-01\n4283  5.10e-02  1.27e-02  1.62e-01     1.21e-02     6.42e-02\n4284  3.24e-01  1.63e-01  4.84e-01     1.48e-01     4.86e-01\n4285  2.90e-01  1.33e-01  4.60e-01     1.27e-01     4.30e-01\n4286  8.05e-02  2.28e-02  2.20e-01     2.00e-02     1.03e-01\n4287  9.80e-02  2.99e-02  2.52e-01     2.49e-02     1.25e-01\n4288  3.33e-01  1.73e-01  4.90e-01     1.53e-01     5.01e-01\n4289  2.38e-01  9.74e-02  4.19e-01     8.23e-02     3.27e-01\n4290  2.71e-01  1.23e-01  4.41e-01     1.04e-01     3.85e-01\n4291  3.08e-01  7.29e-02  4.85e-01     1.72e-01     4.89e-01\n4292  2.33e-01 -5.71e-02  4.53e-01     1.74e-01     4.11e-01\n4293  2.16e-01 -1.16e-01  4.28e-01     3.32e-01     5.59e-01\n4294  2.91e-01 -1.12e-01  4.67e-01     3.66e-01     6.71e-01\n4295  8.51e-03 -2.84e-01  3.73e-01     2.94e-01     2.96e-01\n4296  6.12e-02 -1.93e-03  2.36e-01     2.11e-02     8.32e-02\n4297  3.54e-01  1.46e-01  5.01e-01     2.40e-01     6.13e-01\n4298  2.40e-01 -7.72e-02  4.58e-01     1.98e-01     4.39e-01\n4299  8.39e-02 -1.20e-02  2.99e-01     3.41e-02     1.19e-01\n4300  1.16e-01 -3.37e-03  3.38e-01     4.23e-02     1.59e-01\n4301  3.19e-01 -3.05e-02  4.89e-01     2.38e-01     5.67e-01\n4302  1.80e-01 -7.77e-02  4.42e-01     1.27e-01     3.09e-01\n4303  2.17e-01 -8.27e-02  4.56e-01     1.61e-01     3.83e-01\n4304  1.48e-01  9.53e-03  3.82e-01     5.28e-02     2.05e-01\n4305  1.23e-01 -3.41e-02  3.75e-01     5.61e-02     1.79e-01\n4306  1.73e-01 -8.17e-02  4.31e-01     1.25e-01     2.99e-01\n4307  2.51e-01 -1.02e-01  4.77e-01     1.42e-01     3.92e-01\n4308  8.83e-02 -2.66e-01  4.38e-01     1.83e-01     2.62e-01\n4309  1.89e-02 -2.66e-03  1.04e-01     5.84e-03     2.48e-02\n4310  2.08e-01  3.23e-02  4.37e-01     7.67e-02     2.88e-01\n4311  1.39e-01 -5.06e-02  4.00e-01     6.61e-02     2.03e-01\n4312  2.89e-02 -6.68e-03  1.46e-01     9.70e-03     3.88e-02\n4313  3.86e-02 -4.50e-03  1.70e-01     1.20e-02     5.08e-02\n4314  1.94e-01 -3.71e-02  4.45e-01     7.91e-02     2.75e-01\n4315  9.62e-02 -4.45e-02  3.40e-01     4.14e-02     1.36e-01\n4316  1.20e-01 -5.10e-02  3.72e-01     5.31e-02     1.72e-01\n4317  2.57e-01  9.25e-02  4.21e-01     1.43e-01     4.12e-01\n4318  1.89e-01  3.21e-02  3.71e-01     1.41e-01     3.41e-01\n4319  1.43e-01 -5.05e-02  3.52e-01     2.37e-01     3.92e-01\n4320  3.11e-01  1.15e-01  4.63e-01     3.27e-01     6.60e-01\n4321  4.22e-02 -2.12e-01  2.73e-01     2.62e-01     3.03e-01\n4322  6.26e-02  1.51e-02  1.85e-01     1.82e-02     8.23e-02\n4323  3.18e-01  1.47e-01  4.64e-01     2.04e-01     5.41e-01\n4324  2.16e-01  4.46e-02  3.93e-01     1.64e-01     3.93e-01\n4325  9.22e-02  2.36e-02  2.41e-01     2.99e-02     1.25e-01\n4326  1.17e-01  3.56e-02  2.79e-01     3.69e-02     1.57e-01\n4327  3.36e-01  1.69e-01  4.77e-01     2.13e-01     5.69e-01\n4328  2.03e-01  4.34e-02  3.83e-01     1.12e-01     3.24e-01\n4329  2.29e-01  5.79e-02  4.04e-01     1.41e-01     3.79e-01\n4330  1.47e-01  3.88e-02  3.21e-01     6.00e-02     2.13e-01\n4331  1.09e-01  1.97e-02  2.78e-01     5.91e-02     1.73e-01\n4332  8.13e-02 -2.46e-02  2.74e-01     1.04e-01     1.94e-01\n4333  2.90e-01  1.19e-01  4.45e-01     1.61e-01     4.66e-01\n4334  8.24e-02 -7.54e-02  2.97e-01     1.54e-01     2.43e-01\n4335  2.96e-02  6.49e-03  1.05e-01     7.24e-03     3.73e-02\n4336  2.13e-01  7.00e-02  3.88e-01     8.97e-02     3.12e-01\n4337  1.41e-01  3.44e-02  3.17e-01     7.16e-02     2.18e-01\n4338  4.83e-02  1.20e-02  1.50e-01     1.18e-02     6.16e-02\n4339  5.79e-02  1.54e-02  1.67e-01     1.48e-02     7.37e-02\n4340  2.65e-01  1.05e-01  4.32e-01     9.63e-02     3.69e-01\n4341  1.46e-01  4.33e-02  3.22e-01     4.89e-02     1.98e-01\n4342  1.65e-01  4.97e-02  3.38e-01     6.20e-02     2.32e-01\n4343  2.71e-01  6.11e-02  4.64e-01     1.27e-01     4.03e-01\n4344  2.05e-01 -4.12e-02  4.34e-01     1.31e-01     3.37e-01\n4345  2.07e-01 -9.69e-02  4.35e-01     2.61e-01     4.82e-01\n4346  2.95e-01 -9.42e-02  4.77e-01     2.92e-01     5.97e-01\n4347  1.23e-02 -2.39e-01  3.75e-01     2.32e-01     2.33e-01\n4348  4.46e-02 -1.21e-03  1.88e-01     1.49e-02     6.03e-02\n4349  3.34e-01  1.19e-01  4.90e-01     1.81e-01     5.29e-01\n4350  2.14e-01 -6.54e-02  4.43e-01     1.49e-01     3.66e-01\n4351  6.36e-02 -8.87e-03  2.53e-01     2.43e-02     8.75e-02\n4352  8.89e-02 -1.88e-03  2.95e-01     3.06e-02     1.20e-01\n4353  2.96e-01 -3.61e-02  4.81e-01     1.81e-01     4.84e-01\n4354  1.51e-01 -5.94e-02  4.13e-01     9.31e-02     2.45e-01\n4355  1.87e-01 -7.05e-02  4.34e-01     1.18e-01     3.07e-01\n4356 -2.59e-03 -5.58e-02 -3.53e-06     2.84e-03     9.22e-05\n4357 -5.80e-04 -1.66e-02 -7.59e-07     6.29e-04     1.90e-05\n4358 -1.24e-03 -3.51e-02 -1.78e-06     1.37e-03     4.10e-05\n4359 -1.26e-03 -3.61e-02 -1.74e-06     1.40e-03     4.27e-05\n4360 -8.74e-05 -2.79e-03 -1.05e-07     9.59e-05     2.75e-06\n4361 -8.37e-05 -2.59e-03 -1.31e-07     9.16e-05     2.86e-06\n4362 -6.84e-03 -1.21e-01 -8.91e-06     7.64e-03     2.45e-04\n4363 -5.15e-04 -1.57e-02 -7.18e-07     5.58e-04     1.70e-05\n4364 -8.98e-05 -2.80e-03 -1.21e-07     9.74e-05     2.95e-06\n4365 -1.88e-04 -5.64e-03 -2.58e-07     2.08e-04     6.23e-06\n4366 -1.14e-03 -3.20e-02 -1.61e-06     1.26e-03     3.76e-05\n4367 -1.95e-04 -6.11e-03 -2.37e-07     2.11e-04     6.31e-06\n4368 -2.89e-04 -8.98e-03 -3.88e-07     3.17e-04     9.22e-06\n4369  1.48e-01  8.19e-03  3.98e-01     5.24e-02     2.05e-01\n4370  1.21e-01 -3.71e-02  3.83e-01     5.63e-02     1.78e-01\n4371  1.67e-01 -9.09e-02  4.35e-01     1.25e-01     2.95e-01\n4372  2.48e-01 -1.02e-01  4.74e-01     1.42e-01     3.91e-01\n4373  8.19e-02 -2.69e-01  4.34e-01     1.83e-01     2.53e-01\n4374  1.85e-02 -2.46e-03  1.03e-01     5.81e-03     2.45e-02\n4375  2.07e-01  3.08e-02  4.44e-01     7.66e-02     2.89e-01\n4376  1.37e-01 -5.36e-02  4.07e-01     6.58e-02     2.03e-01\n4377  2.90e-02 -7.33e-03  1.54e-01     9.75e-03     3.87e-02\n4378  3.79e-02 -4.72e-03  1.83e-01     1.20e-02     5.02e-02\n4379  1.93e-01 -3.93e-02  4.42e-01     8.02e-02     2.75e-01\n4380  9.56e-02 -4.31e-02  3.44e-01     4.12e-02     1.36e-01\n4381  1.18e-01 -5.08e-02  3.85e-01     5.31e-02     1.72e-01\n4382  2.28e-01  8.30e-02  3.95e-01     9.23e-02     3.26e-01\n4383  1.97e-01  5.29e-02  3.77e-01     9.46e-02     2.98e-01\n4384  1.71e-01 -6.44e-03  3.80e-01     1.80e-01     3.61e-01\n4385  3.59e-01  2.02e-01  4.94e-01     2.36e-01     6.18e-01\n4386  2.30e-01  5.58e-03  4.27e-01     2.79e-01     5.28e-01\n4387  4.99e-02  1.20e-02  1.54e-01     1.11e-02     6.14e-02\n4388  2.94e-01  1.31e-01  4.45e-01     1.35e-01     4.39e-01\n4389  2.36e-01  8.07e-02  4.07e-01     1.12e-01     3.56e-01\n4390  8.19e-02  2.29e-02  2.21e-01     1.83e-02     1.01e-01\n4391  9.45e-02  2.85e-02  2.39e-01     2.29e-02     1.19e-01\n4392  3.40e-01  1.68e-01  4.84e-01     1.41e-01     4.98e-01\n4393  2.40e-01  8.97e-02  4.10e-01     7.69e-02     3.19e-01\n4394  2.59e-01  1.08e-01  4.21e-01     9.56e-02     3.62e-01\n4395  2.45e-01  6.45e-02  4.59e-01     8.71e-02     3.38e-01\n4396  2.28e-01  4.36e-02  4.53e-01     9.32e-02     3.25e-01\n4397  2.66e-01  8.46e-03  4.66e-01     1.96e-01     4.72e-01\n4398  3.58e-01  1.32e-01  5.06e-01     2.20e-01     6.01e-01\n4399  2.61e-01 -1.16e-01  4.62e-01     2.76e-01     5.53e-01\n4400  4.40e-02  7.45e-03  1.77e-01     9.87e-03     5.47e-02\n4401  3.07e-01  1.05e-01  4.88e-01     1.25e-01     4.42e-01\n4402  2.57e-01  5.33e-02  4.69e-01     1.06e-01     3.69e-01\n4403  6.98e-02  1.25e-02  2.36e-01     1.66e-02     8.72e-02\n4404  8.51e-02  1.63e-02  2.69e-01     2.05e-02     1.06e-01\n4405  3.19e-01  1.07e-01  5.01e-01     1.29e-01     4.61e-01\n4406  2.12e-01  4.05e-02  4.46e-01     6.86e-02     2.85e-01\n4407  2.43e-01  5.27e-02  4.67e-01     8.69e-02     3.34e-01\n4408 -2.57e-02 -2.18e-01  1.24e-02     3.91e-02     4.09e-03\n4409 -1.48e-02 -1.97e-01 -6.71e-06     1.71e-02     9.05e-04\n4410 -2.99e-02 -3.25e-01 -1.36e-05     3.45e-02     1.92e-03\n4411 -3.52e-02 -3.77e-01 -1.50e-05     3.97e-02     1.99e-03\n4412 -3.23e-03 -1.83e-01 -1.17e-06     3.56e-03     1.36e-04\n4413 -1.91e-03 -3.25e-02 -5.43e-07     2.28e-03     1.26e-04\n4414 -3.84e-02 -2.93e-01  6.29e-02     7.19e-02     1.11e-02\n4415 -1.44e-02 -2.11e-01 -6.27e-06     1.62e-02     7.86e-04\n4416 -2.45e-03 -4.37e-02 -1.10e-06     2.78e-03     1.35e-04\n4417 -4.10e-03 -6.02e-02 -1.50e-06     5.04e-03     2.93e-04\n4418 -2.64e-02 -2.74e-01 -8.98e-06     3.11e-02     1.76e-03\n4419 -6.12e-03 -1.29e-01 -2.42e-06     6.76e-03     2.91e-04\n4420 -9.11e-03 -1.64e-01 -3.75e-06     1.02e-02     4.41e-04\n4421  2.34e-01  9.60e-02  4.05e-01     8.10e-02     3.23e-01\n4422  2.34e-01  9.06e-02  4.03e-01     8.81e-02     3.29e-01\n4423  2.97e-01  1.03e-01  4.63e-01     1.92e-01     5.05e-01\n4424  3.59e-01  2.01e-01  5.03e-01     2.07e-01     5.87e-01\n4425  3.00e-01  7.75e-03  4.72e-01     2.85e-01     5.98e-01\n4426  3.99e-02  9.69e-03  1.30e-01     9.18e-03     4.98e-02\n4427  2.93e-01  1.33e-01  4.52e-01     1.17e-01     4.20e-01\n4428  2.59e-01  1.07e-01  4.28e-01     1.00e-01     3.69e-01\n4429  6.33e-02  1.76e-02  1.83e-01     1.52e-02     7.99e-02\n4430  7.68e-02  2.27e-02  2.10e-01     1.91e-02     9.70e-02\n4431  3.02e-01  1.42e-01  4.62e-01     1.20e-01     4.34e-01\n4432  2.04e-01  7.83e-02  3.79e-01     6.40e-02     2.71e-01\n4433  2.37e-01  9.61e-02  4.07e-01     8.06e-02     3.24e-01\n4434 -1.24e-02 -1.02e-01 -4.78e-04     1.40e-02     5.78e-04\n4435 -3.43e-03 -3.58e-02 -1.01e-04     3.75e-03     1.23e-04\n4436 -6.71e-03 -7.16e-02 -2.20e-04     7.37e-03     2.58e-04\n4437 -7.72e-03 -7.91e-02 -2.47e-04     8.47e-03     2.69e-04\n4438 -5.42e-04 -6.87e-03 -1.65e-05     5.91e-04     1.86e-05\n4439 -5.02e-04 -6.02e-03 -1.56e-05     5.52e-04     1.76e-05\n4440 -2.83e-02 -1.88e-01 -1.05e-03     3.26e-02     1.58e-03\n4441 -3.05e-03 -3.40e-02 -9.88e-05     3.34e-03     1.11e-04\n4442 -5.41e-04 -6.96e-03 -1.54e-05     5.96e-04     1.96e-05\n4443 -1.13e-03 -1.26e-02 -3.45e-05     1.24e-03     4.11e-05\n4444 -6.80e-03 -6.76e-02 -2.24e-04     7.38e-03     2.51e-04\n4445 -1.16e-03 -1.42e-02 -3.61e-05     1.27e-03     4.06e-05\n4446 -1.75e-03 -1.99e-02 -5.57e-05     1.91e-03     6.16e-05\n4447  2.05e-01  7.62e-02  3.79e-01     6.67e-02     2.78e-01\n4448  1.93e-01  6.44e-02  3.73e-01     7.10e-02     2.69e-01\n4449  2.19e-01  4.01e-02  4.13e-01     1.50e-01     3.79e-01\n4450  3.53e-01  1.92e-01  4.89e-01     1.75e-01     5.47e-01\n4451  2.73e-01  5.59e-02  4.50e-01     2.30e-01     5.19e-01\n4452  3.55e-02  8.36e-03  1.20e-01     7.54e-03     4.35e-02\n4453  2.68e-01  1.12e-01  4.31e-01     9.68e-02     3.74e-01\n4454  2.25e-01  8.48e-02  3.99e-01     8.18e-02     3.14e-01\n4455  5.83e-02  1.55e-02  1.70e-01     1.26e-02     7.16e-02\n4456  7.02e-02  1.98e-02  1.96e-01     1.56e-02     8.68e-02\n4457  2.94e-01  1.25e-01  4.53e-01     1.00e-01     4.03e-01\n4458  1.92e-01  6.80e-02  3.69e-01     5.37e-02     2.48e-01\n4459  2.21e-01  8.30e-02  3.99e-01     6.78e-02     2.92e-01\n4460 -5.83e-02 -2.21e-01 -4.33e-03     7.01e-02     4.73e-03\n4461 -2.41e-02 -1.18e-01 -2.60e-03     2.69e-02     1.02e-03\n4462 -4.91e-02 -2.21e-01 -5.32e-03     5.48e-02     2.17e-03\n4463 -5.39e-02 -2.35e-01 -5.78e-03     5.96e-02     2.29e-03\n4464 -4.59e-03 -2.97e-02 -4.62e-04     4.97e-03     1.55e-04\n4465 -3.35e-03 -2.00e-02 -2.96e-04     3.79e-03     1.52e-04\n4466 -9.93e-02 -3.39e-01  2.06e-02     1.30e-01     1.30e-02\n4467 -2.25e-02 -1.10e-01 -2.47e-03     2.46e-02     9.14e-04\n4468 -3.87e-03 -2.42e-02 -3.72e-04     4.30e-03     1.59e-04\n4469 -7.21e-03 -3.94e-02 -7.26e-04     8.19e-03     3.46e-04\n4470 -4.31e-02 -1.89e-01 -4.48e-03     4.89e-02     2.01e-03\n4471 -9.15e-03 -5.22e-02 -9.11e-04     9.98e-03     3.37e-04\n4472 -1.34e-02 -7.91e-02 -1.43e-03     1.47e-02     5.07e-04\n4473  2.05e-01  7.54e-02  3.81e-01     6.72e-02     2.78e-01\n4474  1.93e-01  6.49e-02  3.71e-01     7.12e-02     2.69e-01\n4475  2.19e-01  3.68e-02  4.17e-01     1.51e-01     3.79e-01\n4476  3.51e-01  1.90e-01  4.88e-01     1.77e-01     5.47e-01\n4477  2.72e-01  5.70e-02  4.51e-01     2.30e-01     5.19e-01\n4478  3.52e-02  8.32e-03  1.17e-01     7.61e-03     4.30e-02\n4479  2.69e-01  1.13e-01  4.32e-01     9.70e-02     3.77e-01\n4480  2.25e-01  8.47e-02  4.00e-01     8.25e-02     3.13e-01\n4481  5.81e-02  1.51e-02  1.69e-01     1.26e-02     7.16e-02\n4482  6.95e-02  1.88e-02  1.94e-01     1.55e-02     8.60e-02\n4483  2.94e-01  1.28e-01  4.53e-01     1.01e-01     4.05e-01\n4484  1.91e-01  6.95e-02  3.67e-01     5.28e-02     2.49e-01\n4485  2.22e-01  8.32e-02  3.93e-01     6.79e-02     2.94e-01\n4486 -2.46e-02 -2.17e-01  9.86e-03     3.83e-02     3.80e-03\n4487 -1.43e-02 -2.02e-01 -5.34e-06     1.66e-02     8.25e-04\n4488 -2.92e-02 -3.41e-01 -1.20e-05     3.37e-02     1.75e-03\n4489 -3.57e-02 -3.78e-01 -1.06e-05     4.06e-02     1.89e-03\n4490 -3.31e-03 -1.83e-01 -7.79e-07     3.56e-03     1.26e-04\n4491 -1.83e-03 -3.11e-02 -5.74e-07     2.19e-03     1.18e-04\n4492 -3.71e-02 -2.83e-01  6.38e-02     7.05e-02     9.94e-03\n4493 -1.43e-02 -2.08e-01 -4.68e-06     1.59e-02     7.21e-04\n4494 -2.39e-03 -4.38e-02 -6.80e-07     2.66e-03     1.25e-04\n4495 -4.14e-03 -5.84e-02 -1.06e-06     4.89e-03     2.71e-04\n4496 -2.62e-02 -2.69e-01 -8.24e-06     3.10e-02     1.58e-03\n4497 -6.18e-03 -1.32e-01 -1.97e-06     6.74e-03     2.73e-04\n4498 -8.90e-03 -1.67e-01 -2.65e-06     9.98e-03     4.05e-04\n4499  2.05e-01  7.37e-02  3.83e-01     6.74e-02     2.79e-01\n4500  1.90e-01  6.67e-02  3.69e-01     7.30e-02     2.71e-01\n4501  2.59e-01  7.63e-02  4.38e-01     1.63e-01     4.36e-01\n4502  3.21e-01  1.54e-01  4.74e-01     1.76e-01     5.19e-01\n4503  1.16e-01 -1.74e-01  3.84e-01     2.41e-01     3.62e-01\n4504  3.09e-02  7.03e-03  1.03e-01     7.53e-03     3.91e-02\n4505  2.66e-01  1.07e-01  4.37e-01     9.77e-02     3.74e-01\n4506  2.12e-01  7.36e-02  3.90e-01     8.39e-02     3.05e-01\n4507  4.81e-02  1.19e-02  1.48e-01     1.26e-02     6.20e-02\n4508  6.15e-02  1.65e-02  1.79e-01     1.56e-02     7.85e-02\n4509  2.63e-01  1.08e-01  4.31e-01     9.98e-02     3.75e-01\n4510  1.52e-01  4.44e-02  3.30e-01     5.32e-02     2.11e-01\n4511  1.83e-01  6.07e-02  3.57e-01     6.78e-02     2.59e-01\n4512  1.31e-01 -2.85e-02  3.18e-01     1.51e-01     2.94e-01\n4513  2.59e-02 -1.17e-01  1.85e-01     1.08e-01     1.38e-01\n4514  1.77e-02 -1.62e-01  2.05e-01     1.68e-01     1.92e-01\n4515  4.68e-02 -2.27e-01  2.94e-01     2.64e-01     3.16e-01\n4516 -1.94e-02 -2.67e-01  5.16e-02     5.86e-02     3.56e-02\n4517  9.89e-03 -2.21e-02  6.98e-02     1.62e-02     2.80e-02\n4518  2.12e-01  1.02e-02  4.06e-01     2.28e-01     4.62e-01\n4519  2.00e-02 -1.52e-01  1.81e-01     1.21e-01     1.44e-01\n4520  7.52e-03 -4.30e-02  7.51e-02     2.34e-02     3.25e-02\n4521  2.18e-02 -3.84e-02  1.21e-01     3.35e-02     5.93e-02\n4522  8.24e-02 -1.50e-01  3.07e-01     1.91e-01     2.84e-01\n4523  1.67e-03 -1.55e-01  1.20e-01     6.93e-02     7.02e-02\n4524  6.21e-03 -1.64e-01  1.47e-01     9.35e-02     1.01e-01\n4525  1.75e-01 -1.80e-01  4.30e-01     2.64e-01     4.40e-01\n4526  1.27e-02 -2.14e-01  3.67e-01     1.96e-01     2.09e-01\n4527 -2.18e-03 -3.32e-01  3.42e-01     3.51e-01     3.38e-01\n4528  7.32e-03 -3.47e-01  3.72e-01     3.79e-01     3.83e-01\n4529 -2.30e-02 -1.63e-01  2.22e-01     7.75e-02     4.38e-02\n4530  8.37e-03 -4.10e-02  1.77e-01     2.82e-02     3.63e-02\n4531  2.45e-01 -1.59e-01  4.46e-01     3.70e-01     6.22e-01\n4532 -6.01e-05 -2.30e-01  3.63e-01     2.02e-01     1.95e-01\n4533  3.42e-03 -6.04e-02  1.98e-01     3.77e-02     4.13e-02\n4534  1.80e-02 -7.70e-02  2.69e-01     5.74e-02     7.72e-02\n4535  5.48e-02 -2.75e-01  4.06e-01     2.87e-01     3.39e-01\n4536 -1.23e-02 -1.53e-01  3.11e-01     1.05e-01     8.85e-02\n4537 -1.24e-02 -1.88e-01  3.40e-01     1.43e-01     1.27e-01\n4538  1.82e-01 -1.49e-01  3.93e-01     4.63e-01     6.58e-01\n4539  1.17e-01 -2.71e-01  3.62e-01     4.09e-01     5.31e-01\n4540  6.22e-02 -2.47e-01  3.24e-01     4.38e-01     5.05e-01\n4541  1.07e-01 -4.26e-01  2.92e-01     7.56e-01     8.74e-01\n4542 -2.06e-02 -5.73e-01  2.50e-01     6.30e-01     5.90e-01\n4543  1.76e-01 -1.07e-01  4.30e-01     1.17e-01     2.92e-01\n4544  1.82e-01 -1.07e-01  3.73e-01     5.90e-01     7.90e-01\n4545  1.28e-01 -3.24e-01  3.61e-01     4.87e-01     6.19e-01\n4546  2.50e-01 -1.86e-01  4.70e-01     1.89e-01     4.34e-01\n4547  2.44e-01 -1.63e-01  4.59e-01     2.12e-01     4.60e-01\n4548  1.90e-01 -3.75e-01  3.89e-01     6.69e-01     8.75e-01\n4549  2.15e-01 -4.20e-01  4.27e-01     4.86e-01     7.14e-01\n4550  1.81e-01 -4.15e-01  3.95e-01     5.26e-01     7.15e-01\n4551  1.17e-01 -8.13e-03  2.98e-01     1.15e-01     2.43e-01\n4552  4.57e-02 -5.17e-02  1.91e-01     9.22e-02     1.45e-01\n4553  2.32e-02 -1.05e-01  1.77e-01     1.21e-01     1.46e-01\n4554  1.41e-01 -8.21e-02  3.44e-01     2.68e-01     4.24e-01\n4555 -1.92e-02 -2.23e-01  9.48e-02     9.74e-02     7.34e-02\n4556  2.49e-02 -1.66e-04  1.06e-01     1.58e-02     4.25e-02\n4557  1.93e-01  1.61e-02  3.75e-01     1.80e-01     3.86e-01\n4558  5.62e-02 -6.49e-02  2.17e-01     1.12e-01     1.75e-01\n4559  3.09e-02 -9.80e-03  1.33e-01     2.47e-02     5.91e-02\n4560  5.02e-02 -1.10e-04  1.72e-01     3.21e-02     8.63e-02\n4561  1.92e-01 -1.51e-02  3.84e-01     1.90e-01     3.98e-01\n4562  4.58e-02 -7.19e-02  2.10e-01     8.36e-02     1.37e-01\n4563  5.92e-02 -7.42e-02  2.32e-01     1.04e-01     1.68e-01\n4564  3.21e-01  1.65e-01  4.64e-01     1.34e-01     4.68e-01\n4565  3.14e-01  1.50e-01  4.61e-01     1.42e-01     4.68e-01\n4566  3.27e-01  1.20e-01  4.83e-01     2.90e-01     6.38e-01\n4567  3.90e-01  2.41e-01  5.17e-01     3.12e-01     7.25e-01\n4568  3.13e-01  6.95e-02  4.83e-01     3.98e-01     7.34e-01\n4569  7.18e-02  1.94e-02  2.11e-01     1.63e-02     8.89e-02\n4570  3.66e-01  2.17e-01  4.95e-01     1.87e-01     5.71e-01\n4571  3.38e-01  1.79e-01  4.77e-01     1.64e-01     5.19e-01\n4572  1.13e-01  3.44e-02  2.74e-01     2.66e-02     1.41e-01\n4573  1.33e-01  4.45e-02  3.01e-01     3.27e-02     1.67e-01\n4574  3.78e-01  2.30e-01  5.04e-01     1.91e-01     5.88e-01\n4575  2.97e-01  1.41e-01  4.56e-01     1.07e-01     4.10e-01\n4576  3.27e-01  1.71e-01  4.72e-01     1.34e-01     4.70e-01\n4577  1.24e-01  3.72e-03  3.64e-01     5.10e-02     1.78e-01\n4578  9.18e-02 -3.56e-02  3.34e-01     5.26e-02     1.45e-01\n4579  9.43e-02 -7.25e-02  3.69e-01     1.02e-01     1.99e-01\n4580  2.31e-01 -1.00e-01  4.62e-01     1.40e-01     3.73e-01\n4581  4.35e-02 -2.53e-01  3.94e-01     1.61e-01     1.94e-01\n4582  1.79e-02 -3.03e-03  9.91e-02     5.88e-03     2.41e-02\n4583  1.84e-01  2.03e-02  4.17e-01     7.52e-02     2.63e-01\n4584  1.09e-01 -5.02e-02  3.63e-01     6.29e-02     1.75e-01\n4585  2.87e-02 -7.82e-03  1.48e-01     9.71e-03     3.87e-02\n4586  3.65e-02 -5.08e-03  1.72e-01     1.20e-02     4.90e-02\n4587  1.89e-01 -4.11e-02  4.43e-01     8.08e-02     2.70e-01\n4588  9.28e-02 -4.52e-02  3.38e-01     4.16e-02     1.32e-01\n4589  1.10e-01 -5.13e-02  3.62e-01     5.30e-02     1.62e-01\n4590 -2.43e-02 -2.13e-01  1.02e-02     3.81e-02     3.84e-03\n4591 -1.45e-02 -1.84e-01 -7.79e-06     1.64e-02     8.38e-04\n4592 -2.81e-02 -3.29e-01 -1.55e-05     3.24e-02     1.73e-03\n4593 -3.37e-02 -3.67e-01 -1.63e-05     3.84e-02     1.84e-03\n4594 -3.17e-03 -1.77e-01 -1.41e-06     3.41e-03     1.28e-04\n4595 -1.85e-03 -2.94e-02 -7.82e-07     2.22e-03     1.26e-04\n4596 -3.76e-02 -2.84e-01  6.72e-02     6.86e-02     1.07e-02\n4597 -1.42e-02 -2.03e-01 -7.48e-06     1.60e-02     7.44e-04\n4598 -2.31e-03 -4.25e-02 -1.12e-06     2.65e-03     1.28e-04\n4599 -3.96e-03 -5.51e-02 -1.53e-06     4.85e-03     2.84e-04\n4600 -2.53e-02 -2.65e-01 -1.22e-05     3.04e-02     1.63e-03\n4601 -5.89e-03 -1.22e-01 -2.96e-06     6.59e-03     2.79e-04\n4602 -8.34e-03 -1.59e-01 -4.07e-06     9.38e-03     4.13e-04\n4603  2.05e-01  3.91e-02  4.25e-01     8.62e-02     2.96e-01\n4604  1.69e-01  7.99e-03  4.07e-01     8.82e-02     2.61e-01\n4605  1.46e-01 -4.21e-02  4.05e-01     1.64e-01     3.21e-01\n4606  3.38e-01  9.88e-02  4.92e-01     2.20e-01     5.78e-01\n4607  1.82e-01 -1.17e-01  4.20e-01     2.49e-01     4.43e-01\n4608  4.28e-02  7.03e-03  1.65e-01     1.03e-02     5.40e-02\n4609  2.76e-01  7.35e-02  4.68e-01     1.24e-01     4.08e-01\n4610  2.08e-01  1.92e-02  4.32e-01     1.04e-01     3.15e-01\n4611  7.03e-02  1.17e-02  2.34e-01     1.72e-02     8.83e-02\n4612  8.33e-02  1.60e-02  2.64e-01     2.10e-02     1.06e-01\n4613  3.19e-01  1.07e-01  4.95e-01     1.34e-01     4.63e-01\n4614  2.10e-01  3.26e-02  4.36e-01     7.03e-02     2.83e-01\n4615  2.30e-01  4.01e-02  4.42e-01     8.92e-02     3.22e-01\n4616  2.89e-01  1.33e-01  4.47e-01     1.05e-01     4.04e-01\n4617  2.86e-01  1.25e-01  4.45e-01     1.14e-01     4.07e-01\n4618  3.20e-01  1.12e-01  4.78e-01     2.39e-01     5.80e-01\n4619  3.87e-01  2.44e-01  5.13e-01     2.60e-01     6.72e-01\n4620  3.23e-01  7.82e-02  4.88e-01     3.39e-01     6.86e-01\n4621  5.72e-02  1.41e-02  1.68e-01     1.24e-02     7.04e-02\n4622  3.43e-01  1.84e-01  4.78e-01     1.51e-01     5.11e-01\n4623  3.11e-01  1.52e-01  4.61e-01     1.31e-01     4.52e-01\n4624  8.98e-02  2.63e-02  2.35e-01     2.05e-02     1.11e-01\n4625  1.08e-01  3.39e-02  2.64e-01     2.54e-02     1.35e-01\n4626  3.56e-01  1.93e-01  4.88e-01     1.55e-01     5.25e-01\n4627  2.60e-01  1.12e-01  4.28e-01     8.41e-02     3.50e-01\n4628  2.95e-01  1.36e-01  4.49e-01     1.06e-01     4.09e-01\n4629  1.38e-01  1.51e-02  3.65e-01     5.94e-02     2.02e-01\n4630  8.71e-02 -1.95e-02  3.19e-01     5.87e-02     1.50e-01\n4631  7.81e-02 -5.44e-02  3.46e-01     1.12e-01     1.97e-01\n4632  2.18e-01 -5.21e-02  4.49e-01     1.55e-01     3.78e-01\n4633  3.35e-03 -1.51e-01  3.05e-01     1.13e-01     1.13e-01\n4634  2.02e-02 -2.87e-04  1.03e-01     6.76e-03     2.72e-02\n4635  2.11e-01  3.82e-02  4.25e-01     8.86e-02     3.04e-01\n4636  1.02e-01 -2.87e-02  3.42e-01     6.94e-02     1.76e-01\n4637  2.95e-02 -2.94e-03  1.47e-01     1.11e-02     4.14e-02\n4638  4.09e-02  1.58e-05  1.72e-01     1.39e-02     5.57e-02\n4639  2.00e-01 -1.19e-02  4.37e-01     9.11e-02     2.94e-01\n4640  7.85e-02 -2.82e-02  3.21e-01     4.47e-02     1.25e-01\n4641  9.73e-02 -3.17e-02  3.49e-01     5.71e-02     1.57e-01\n4642 -2.24e-02 -2.14e-01  1.37e-02     3.56e-02     3.55e-03\n4643 -1.33e-02 -1.84e-01 -5.47e-06     1.55e-02     7.68e-04\n4644 -2.61e-02 -3.23e-01 -1.17e-05     3.11e-02     1.63e-03\n4645 -3.26e-02 -3.56e-01 -1.16e-05     3.67e-02     1.69e-03\n4646 -2.93e-03 -1.76e-01 -1.18e-06     3.19e-03     1.13e-04\n4647 -1.67e-03 -2.95e-02 -5.74e-07     2.03e-03     1.07e-04\n4648 -3.44e-02 -2.81e-01  7.29e-02     6.56e-02     9.72e-03\n4649 -1.33e-02 -1.98e-01 -4.88e-06     1.52e-02     6.95e-04\n4650 -2.21e-03 -4.28e-02 -8.63e-07     2.55e-03     1.16e-04\n4651 -3.71e-03 -5.60e-02 -1.20e-06     4.49e-03     2.53e-04\n4652 -2.38e-02 -2.55e-01 -8.80e-06     2.84e-02     1.50e-03\n4653 -5.54e-03 -1.23e-01 -2.45e-06     6.13e-03     2.48e-04\n4654 -8.02e-03 -1.60e-01 -3.05e-06     8.84e-03     3.82e-04\n4655  3.32e-01  1.34e-01  5.00e-01     1.64e-01     5.09e-01\n4656  3.13e-01  7.28e-02  4.92e-01     1.73e-01     4.97e-01\n4657  2.88e-01  3.28e-03  4.65e-01     3.32e-01     6.43e-01\n4658  3.64e-01  1.68e-01  5.02e-01     3.67e-01     7.55e-01\n4659  2.52e-01 -1.54e-01  4.43e-01     4.36e-01     7.16e-01\n4660  8.45e-02  1.64e-02  2.69e-01     2.03e-02     1.05e-01\n4661  3.68e-01  1.87e-01  5.10e-01     2.27e-01     6.19e-01\n4662  3.33e-01  9.05e-02  4.96e-01     1.96e-01     5.43e-01\n4663  1.30e-01  2.60e-02  3.53e-01     3.33e-02     1.65e-01\n4664  1.53e-01  3.89e-02  3.79e-01     4.12e-02     1.96e-01\n4665  3.81e-01  1.85e-01  5.20e-01     2.32e-01     6.35e-01\n4666  3.12e-01  6.84e-02  4.97e-01     1.31e-01     4.50e-01\n4667  3.34e-01  8.71e-02  5.05e-01     1.64e-01     5.08e-01\n4668  1.21e-01  3.18e-02  2.87e-01     4.40e-02     1.69e-01\n4669  9.18e-02  1.72e-02  2.43e-01     4.45e-02     1.40e-01\n4670  9.46e-02 -5.68e-03  2.76e-01     8.55e-02     1.88e-01\n4671  2.26e-01  6.51e-02  4.03e-01     1.22e-01     3.60e-01\n4672  1.02e-04 -1.85e-01  1.98e-01     1.40e-01     1.39e-01\n4673  1.80e-02  3.40e-03  7.11e-02     5.03e-03     2.34e-02\n4674  1.78e-01  5.48e-02  3.57e-01     6.48e-02     2.48e-01\n4675  1.08e-01  2.14e-02  2.73e-01     5.28e-02     1.67e-01\n4676  2.77e-02  5.73e-03  9.80e-02     8.40e-03     3.71e-02\n4677  3.65e-02  7.80e-03  1.20e-01     1.04e-02     4.77e-02\n4678  1.87e-01  5.56e-02  3.70e-01     6.93e-02     2.62e-01\n4679  8.28e-02  1.41e-02  2.31e-01     3.60e-02     1.22e-01\n4680  1.03e-01  1.96e-02  2.65e-01     4.55e-02     1.53e-01\n4681  1.63e-01  5.15e-02  3.31e-01     5.79e-02     2.25e-01\n4682  1.35e-01  3.28e-02  3.02e-01     5.96e-02     1.98e-01\n4683  1.27e-01 -2.29e-03  3.28e-01     1.17e-01     2.53e-01\n4684  3.05e-01  1.33e-01  4.53e-01     1.54e-01     4.76e-01\n4685  1.10e-01 -6.44e-02  3.27e-01     1.63e-01     2.83e-01\n4686  2.88e-02  6.64e-03  1.01e-01     6.63e-03     3.57e-02\n4687  2.29e-01  8.45e-02  4.00e-01     8.51e-02     3.21e-01\n4688  1.65e-01  4.71e-02  3.36e-01     7.03e-02     2.41e-01\n4689  4.67e-02  1.14e-02  1.45e-01     1.10e-02     5.84e-02\n4690  5.70e-02  1.48e-02  1.72e-01     1.36e-02     7.12e-02\n4691  2.59e-01  1.03e-01  4.28e-01     8.89e-02     3.55e-01\n4692  1.45e-01  4.26e-02  3.19e-01     4.55e-02     1.94e-01\n4693  1.70e-01  5.14e-02  3.42e-01     5.83e-02     2.34e-01\n4694  3.29e-01  1.62e-01  4.75e-01     1.92e-01     5.39e-01\n4695  2.84e-01  1.02e-01  4.47e-01     1.98e-01     4.97e-01\n4696  2.31e-01  1.76e-03  4.22e-01     3.48e-01     6.00e-01\n4697  3.41e-01  1.58e-01  4.92e-01     4.12e-01     7.70e-01\n4698  1.35e-01 -1.50e-01  3.77e-01     4.14e-01     5.55e-01\n4699  9.62e-02  2.73e-02  2.53e-01     2.51e-02     1.23e-01\n4700  3.64e-01  2.07e-01  4.98e-01     2.66e-01     6.55e-01\n4701  3.06e-01  1.29e-01  4.58e-01     2.26e-01     5.47e-01\n4702  1.41e-01  4.44e-02  3.16e-01     4.08e-02     1.84e-01\n4703  1.70e-01  6.10e-02  3.54e-01     5.05e-02     2.25e-01\n4704  3.76e-01  2.23e-01  5.09e-01     2.73e-01     6.73e-01\n4705  2.93e-01  1.15e-01  4.53e-01     1.56e-01     4.62e-01\n4706  3.14e-01  1.37e-01  4.69e-01     1.92e-01     5.20e-01\n4707 -2.56e-02 -2.11e-01  9.00e-03     3.95e-02     3.97e-03\n4708 -1.51e-02 -1.84e-01 -9.12e-06     1.74e-02     8.80e-04\n4709 -3.04e-02 -3.20e-01 -2.05e-05     3.56e-02     1.88e-03\n4710 -3.56e-02 -3.59e-01 -2.20e-05     4.10e-02     1.90e-03\n4711 -3.40e-03 -1.80e-01 -1.52e-06     3.70e-03     1.31e-04\n4712 -1.92e-03 -2.95e-02 -1.12e-06     2.30e-03     1.26e-04\n4713 -3.82e-02 -2.88e-01  6.28e-02     7.03e-02     1.09e-02\n4714 -1.54e-02 -2.00e-01 -8.43e-06     1.73e-02     7.50e-04\n4715 -2.46e-03 -4.14e-02 -1.38e-06     2.85e-03     1.35e-04\n4716 -4.31e-03 -5.70e-02 -2.17e-06     5.28e-03     2.91e-04\n4717 -2.68e-02 -2.59e-01 -1.61e-05     3.25e-02     1.75e-03\n4718 -6.38e-03 -1.24e-01 -3.35e-06     7.10e-03     2.88e-04\n4719 -9.43e-03 -1.56e-01 -4.87e-06     1.04e-02     4.33e-04\n4720  6.35e-02 -8.47e-02  2.51e-01     9.40e-02     1.63e-01\n4721 -2.64e-02 -1.98e-01  7.97e-02     9.23e-02     5.86e-02\n4722 -6.01e-02 -3.23e-01  1.08e-01     1.86e-01     1.13e-01\n4723 -7.47e-02 -3.48e-01  1.26e-01     2.16e-01     1.26e-01\n4724 -1.29e-01 -4.61e-01 -7.96e-03     1.43e-01     1.07e-02\n4725 -8.82e-04 -2.92e-02  2.06e-02     1.05e-02     8.73e-03\n4726  1.44e-01 -4.78e-02  3.49e-01     1.36e-01     2.89e-01\n4727 -4.00e-02 -2.28e-01  6.39e-02     1.04e-01     5.49e-02\n4728 -5.16e-03 -5.13e-02  1.89e-02     1.66e-02     9.96e-03\n4729 -1.30e-03 -5.56e-02  4.24e-02     2.15e-02     1.92e-02\n4730 -1.98e-02 -2.28e-01  1.47e-01     1.33e-01     1.08e-01\n4731 -3.59e-02 -1.81e-01  1.41e-02     6.36e-02     2.17e-02\n4732 -4.19e-02 -2.13e-01  2.93e-02     8.20e-02     3.25e-02\n4733  2.28e-01  3.19e-02  4.38e-01     1.28e-01     3.60e-01\n4734  1.47e-01 -4.48e-02  3.91e-01     1.26e-01     2.77e-01\n4735  1.17e-01 -1.01e-01  3.75e-01     2.21e-01     3.45e-01\n4736  2.69e-01 -9.81e-02  4.59e-01     2.97e-01     5.75e-01\n4737 -1.27e-03 -2.31e-01  3.17e-01     2.12e-01     2.04e-01\n4738  4.32e-02 -1.85e-03  1.89e-01     1.55e-02     5.94e-02\n4739  3.00e-01  7.82e-02  4.76e-01     1.84e-01     4.95e-01\n4740  1.65e-01 -6.30e-02  4.07e-01     1.45e-01     3.16e-01\n4741  6.25e-02 -8.75e-03  2.47e-01     2.51e-02     8.79e-02\n4742  8.52e-02 -2.38e-03  2.88e-01     3.17e-02     1.18e-01\n4743  2.91e-01 -3.10e-02  4.82e-01     1.88e-01     4.87e-01\n4744  1.41e-01 -5.90e-02  4.09e-01     9.68e-02     2.40e-01\n4745  1.68e-01 -6.68e-02  4.23e-01     1.23e-01     2.93e-01\n4746 -5.05e-03 -2.36e-01  2.97e-01     1.60e-01     1.47e-01\n4747 -7.33e-02 -2.62e-01  1.47e-01     1.41e-01     4.86e-02\n4748 -9.49e-02 -3.63e-01  1.56e-01     2.06e-01     8.07e-02\n4749 -1.95e-01 -4.85e-01  2.06e-01     3.45e-01     1.10e-01\n4750 -1.27e-01 -3.85e-01 -1.85e-02     1.49e-01     8.60e-03\n4751 -9.55e-03 -5.92e-02  6.22e-02     2.12e-02     8.07e-03\n4752  5.70e-02 -2.71e-01  3.67e-01     2.34e-01     2.90e-01\n4753 -9.56e-02 -3.01e-01  1.43e-01     1.65e-01     4.44e-02\n4754 -1.88e-02 -8.90e-02  7.00e-02     3.35e-02     8.58e-03\n4755 -1.91e-02 -9.98e-02  1.10e-01     4.32e-02     1.78e-02\n4756 -1.14e-01 -3.84e-01  2.80e-01     2.42e-01     9.78e-02\n4757 -7.97e-02 -2.53e-01  9.16e-02     1.15e-01     1.84e-02\n4758 -9.59e-02 -2.93e-01  1.23e-01     1.44e-01     2.75e-02\n4759  1.49e-01  9.49e-03  3.92e-01     5.31e-02     2.06e-01\n4760  1.24e-01 -3.84e-02  3.76e-01     5.75e-02     1.80e-01\n4761  1.67e-01 -9.38e-02  4.26e-01     1.26e-01     2.92e-01\n4762  2.50e-01 -1.03e-01  4.74e-01     1.42e-01     3.95e-01\n4763  8.44e-02 -2.67e-01  4.30e-01     1.83e-01     2.54e-01\n4764  1.86e-02 -2.79e-03  1.06e-01     5.92e-03     2.44e-02\n4765  2.09e-01  2.87e-02  4.44e-01     7.81e-02     2.92e-01\n4766  1.38e-01 -5.38e-02  3.98e-01     6.60e-02     2.05e-01\n4767  2.95e-02 -7.82e-03  1.52e-01     9.74e-03     3.91e-02\n4768  3.81e-02 -4.83e-03  1.78e-01     1.22e-02     5.05e-02\n4769  1.92e-01 -3.92e-02  4.46e-01     7.96e-02     2.71e-01\n4770  9.52e-02 -4.33e-02  3.44e-01     4.15e-02     1.35e-01\n4771  1.20e-01 -5.27e-02  3.79e-01     5.33e-02     1.70e-01\n4772  1.88e-01  4.02e-02  4.05e-01     5.91e-02     2.52e-01\n4773  1.74e-01  2.58e-02  4.02e-01     6.29e-02     2.41e-01\n4774  2.26e-01  7.55e-03  4.54e-01     1.38e-01     3.67e-01\n4775  3.29e-01  9.18e-02  4.94e-01     1.56e-01     4.97e-01\n4776  2.45e-01 -7.98e-02  4.64e-01     1.97e-01     4.56e-01\n4777  2.94e-02  4.44e-03  1.27e-01     6.52e-03     3.62e-02\n4778  2.50e-01  6.66e-02  4.57e-01     8.49e-02     3.41e-01\n4779  2.02e-01  3.35e-02  4.25e-01     7.26e-02     2.79e-01\n4780  4.72e-02  7.18e-03  1.81e-01     1.07e-02     5.92e-02\n4781  5.85e-02  9.89e-03  2.02e-01     1.34e-02     7.24e-02\n4782  2.65e-01  6.68e-02  4.64e-01     8.80e-02     3.59e-01\n4783  1.59e-01  2.43e-02  3.84e-01     4.56e-02     2.08e-01\n4784  1.88e-01  2.97e-02  4.13e-01     5.87e-02     2.50e-01\n4785  1.46e-01  1.06e-02  3.87e-01     5.28e-02     2.01e-01\n4786  1.22e-01 -3.79e-02  3.77e-01     5.63e-02     1.77e-01\n4787  1.68e-01 -8.53e-02  4.32e-01     1.22e-01     2.91e-01\n4788  2.50e-01 -9.60e-02  4.77e-01     1.41e-01     3.89e-01\n4789  8.95e-02 -2.54e-01  4.33e-01     1.81e-01     2.58e-01\n4790  1.86e-02 -2.80e-03  1.04e-01     5.83e-03     2.46e-02\n4791  2.06e-01  3.16e-02  4.40e-01     7.68e-02     2.87e-01\n4792  1.35e-01 -5.12e-02  3.97e-01     6.50e-02     1.98e-01\n4793  2.87e-02 -7.54e-03  1.47e-01     9.72e-03     3.85e-02\n4794  3.81e-02 -5.30e-03  1.74e-01     1.20e-02     5.05e-02\n4795  1.91e-01 -4.19e-02  4.45e-01     7.92e-02     2.70e-01\n4796  9.85e-02 -4.18e-02  3.48e-01     4.05e-02     1.38e-01\n4797  1.20e-01 -5.03e-02  3.82e-01     5.25e-02     1.71e-01\n4798 -3.48e-03 -2.88e-01  2.23e-01     1.75e-01     1.68e-01\n4799 -9.09e-02 -3.83e-01  2.75e-02     1.56e-01     4.99e-02\n4800 -1.64e-01 -5.23e-01  3.04e-02     2.88e-01     9.92e-02\n4801 -1.98e-01 -5.47e-01  3.19e-02     3.34e-01     1.08e-01\n4802 -1.45e-01 -5.72e-01 -5.57e-03     1.55e-01     8.37e-03\n4803 -9.66e-03 -8.45e-02  1.21e-02     2.00e-02     7.70e-03\n4804  7.09e-02 -2.56e-01  3.28e-01     2.48e-01     3.26e-01\n4805 -1.10e-01 -4.15e-01  1.21e-02     1.71e-01     4.60e-02\n4806 -1.90e-02 -1.34e-01  5.67e-03     3.07e-02     8.38e-03\n4807 -1.92e-02 -1.49e-01  2.61e-02     4.07e-02     1.68e-02\n4808 -1.12e-01 -4.44e-01  8.60e-02     2.27e-01     9.42e-02\n4809 -7.82e-02 -3.43e-01 -4.33e-03     1.04e-01     1.77e-02\n4810 -9.87e-02 -3.90e-01 -3.57e-03     1.36e-01     2.67e-02\n4811  1.98e-01  1.27e-02  4.34e-01     7.97e-02     2.81e-01\n4812  1.63e-01 -5.60e-02  4.19e-01     8.54e-02     2.49e-01\n4813  2.07e-01 -1.26e-01  4.46e-01     1.80e-01     3.85e-01\n4814  2.89e-01 -1.43e-01  4.92e-01     2.05e-01     4.97e-01\n4815  9.32e-02 -3.38e-01  4.31e-01     2.56e-01     3.31e-01\n4816  2.85e-02 -4.68e-03  1.43e-01     9.11e-03     3.75e-02\n4817  2.63e-01  4.71e-02  4.79e-01     1.15e-01     3.87e-01\n4818  1.81e-01 -7.59e-02  4.40e-01     9.86e-02     2.79e-01\n4819  4.35e-02 -1.25e-02  1.95e-01     1.52e-02     5.79e-02\n4820  5.73e-02 -8.40e-03  2.32e-01     1.90e-02     7.58e-02\n4821  2.48e-01 -6.16e-02  4.78e-01     1.18e-01     3.65e-01\n4822  1.35e-01 -6.64e-02  3.98e-01     6.25e-02     1.93e-01\n4823  1.62e-01 -7.62e-02  4.28e-01     8.01e-02     2.41e-01\n4824  2.95e-01  1.02e-01  4.80e-01     1.22e-01     4.27e-01\n4825  2.78e-01  6.28e-02  4.71e-01     1.29e-01     4.15e-01\n4826  2.86e-01  1.67e-02  4.70e-01     2.62e-01     5.66e-01\n4827  3.71e-01  1.60e-01  5.07e-01     2.92e-01     6.89e-01\n4828  2.66e-01 -1.35e-01  4.61e-01     3.58e-01     6.48e-01\n4829  6.20e-02  1.14e-02  2.18e-01     1.43e-02     7.67e-02\n4830  3.49e-01  1.52e-01  5.02e-01     1.72e-01     5.35e-01\n4831  3.05e-01  7.65e-02  4.84e-01     1.48e-01     4.62e-01\n4832  9.90e-02  1.84e-02  2.89e-01     2.40e-02     1.24e-01\n4833  1.18e-01  2.74e-02  3.23e-01     2.96e-02     1.49e-01\n4834  3.61e-01  1.51e-01  5.12e-01     1.78e-01     5.55e-01\n4835  2.69e-01  5.44e-02  4.71e-01     9.76e-02     3.73e-01\n4836  2.99e-01  7.38e-02  4.82e-01     1.22e-01     4.28e-01\n4837  2.34e-01  9.36e-02  4.06e-01     8.11e-02     3.23e-01\n4838  2.33e-01  9.22e-02  4.04e-01     8.82e-02     3.29e-01\n4839  2.98e-01  9.80e-02  4.64e-01     1.90e-01     5.03e-01\n4840  3.60e-01  1.95e-01  5.02e-01     2.08e-01     5.86e-01\n4841  2.97e-01  8.74e-03  4.78e-01     2.84e-01     5.96e-01\n4842  3.95e-02  9.74e-03  1.28e-01     9.23e-03     4.94e-02\n4843  2.93e-01  1.35e-01  4.54e-01     1.17e-01     4.20e-01\n4844  2.58e-01  1.05e-01  4.26e-01     1.01e-01     3.68e-01\n4845  6.29e-02  1.75e-02  1.76e-01     1.51e-02     7.86e-02\n4846  7.74e-02  2.16e-02  2.04e-01     1.91e-02     9.82e-02\n4847  3.03e-01  1.37e-01  4.61e-01     1.20e-01     4.33e-01\n4848  2.03e-01  7.37e-02  3.79e-01     6.45e-02     2.73e-01\n4849  2.36e-01  9.46e-02  4.08e-01     8.19e-02     3.24e-01\n4850  1.85e-01  4.07e-02  4.16e-01     5.73e-02     2.46e-01\n4851  1.73e-01  2.92e-02  4.09e-01     6.18e-02     2.39e-01\n4852  2.22e-01  9.16e-03  4.46e-01     1.37e-01     3.67e-01\n4853  3.26e-01  9.53e-02  4.95e-01     1.55e-01     4.96e-01\n4854  2.43e-01 -6.64e-02  4.57e-01     1.98e-01     4.51e-01\n4855  2.88e-02  4.27e-03  1.31e-01     6.32e-03     3.56e-02\n4856  2.47e-01  6.60e-02  4.61e-01     8.36e-02     3.37e-01\n4857  2.00e-01  3.30e-02  4.34e-01     7.17e-02     2.76e-01\n4858  4.68e-02  7.16e-03  1.84e-01     1.08e-02     5.80e-02\n4859  5.72e-02  9.55e-03  2.12e-01     1.31e-02     7.12e-02\n4860  2.62e-01  6.88e-02  4.77e-01     8.77e-02     3.56e-01\n4861  1.57e-01  2.43e-02  3.96e-01     4.57e-02     2.06e-01\n4862  1.87e-01  3.25e-02  4.23e-01     5.82e-02     2.47e-01\n4863  2.31e-01  9.31e-02  3.99e-01     9.25e-02     3.33e-01\n4864  2.03e-01  6.76e-02  3.73e-01     9.82e-02     3.10e-01\n4865  2.18e-01  2.31e-02  4.07e-01     1.92e-01     4.24e-01\n4866  3.33e-01  1.65e-01  4.83e-01     2.35e-01     5.90e-01\n4867  9.93e-02 -2.03e-01  3.65e-01     2.90e-01     3.93e-01\n4868  4.22e-02  9.98e-03  1.34e-01     1.09e-02     5.43e-02\n4869  2.94e-01  1.34e-01  4.53e-01     1.34e-01     4.40e-01\n4870  2.27e-01  8.46e-02  3.99e-01     1.13e-01     3.48e-01\n4871  6.60e-02  1.72e-02  1.87e-01     1.82e-02     8.62e-02\n4872  8.20e-02  2.34e-02  2.15e-01     2.25e-02     1.07e-01\n4873  3.02e-01  1.44e-01  4.64e-01     1.40e-01     4.58e-01\n4874  1.86e-01  5.53e-02  3.65e-01     7.55e-02     2.68e-01\n4875  2.15e-01  7.35e-02  3.93e-01     9.47e-02     3.19e-01\n4876  2.00e-01  1.60e-02  4.27e-01     7.98e-02     2.82e-01\n4877  1.68e-01 -5.61e-02  4.13e-01     8.60e-02     2.52e-01\n4878  2.03e-01 -1.20e-01  4.49e-01     1.81e-01     3.86e-01\n4879  2.92e-01 -1.47e-01  4.90e-01     2.03e-01     5.00e-01\n4880  9.91e-02 -3.33e-01  4.40e-01     2.58e-01     3.39e-01\n4881  2.88e-02 -4.18e-03  1.43e-01     9.09e-03     3.77e-02\n4882  2.66e-01  4.64e-02  4.72e-01     1.16e-01     3.89e-01\n4883  1.85e-01 -7.18e-02  4.38e-01     9.90e-02     2.82e-01\n4884  4.39e-02 -1.12e-02  1.96e-01     1.51e-02     5.92e-02\n4885  5.78e-02 -8.57e-03  2.26e-01     1.86e-02     7.67e-02\n4886  2.50e-01 -6.06e-02  4.72e-01     1.19e-01     3.69e-01\n4887  1.35e-01 -6.48e-02  3.95e-01     6.26e-02     1.95e-01\n4888  1.66e-01 -7.50e-02  4.24e-01     8.04e-02     2.43e-01\n4889  2.28e-01  8.45e-02  3.99e-01     1.00e-01     3.37e-01\n4890  1.85e-01  4.39e-02  3.62e-01     1.02e-01     2.95e-01\n4891  1.57e-01 -1.83e-02  3.61e-01     1.85e-01     3.51e-01\n4892  3.41e-01  1.74e-01  4.83e-01     2.51e-01     6.10e-01\n4893  1.21e-01 -1.11e-01  3.50e-01     2.47e-01     3.74e-01\n4894  5.04e-02  1.26e-02  1.52e-01     1.22e-02     6.33e-02\n4895  2.98e-01  1.34e-01  4.49e-01     1.45e-01     4.56e-01\n4896  2.20e-01  6.80e-02  3.91e-01     1.18e-01     3.48e-01\n4897  7.98e-02  2.09e-02  2.18e-01     1.99e-02     1.01e-01\n4898  9.57e-02  2.86e-02  2.45e-01     2.48e-02     1.23e-01\n4899  3.32e-01  1.70e-01  4.77e-01     1.53e-01     5.03e-01\n4900  2.11e-01  7.18e-02  3.93e-01     8.01e-02     2.99e-01\n4901  2.37e-01  8.80e-02  4.06e-01     1.01e-01     3.45e-01\n4902  1.46e-01  7.51e-03  3.82e-01     5.19e-02     2.02e-01\n4903  1.20e-01 -3.79e-02  3.74e-01     5.53e-02     1.75e-01\n4904  1.64e-01 -9.13e-02  4.26e-01     1.22e-01     2.90e-01\n4905  2.48e-01 -1.01e-01  4.76e-01     1.40e-01     3.88e-01\n4906  8.56e-02 -2.65e-01  4.30e-01     1.81e-01     2.49e-01\n4907  1.84e-02 -3.01e-03  1.03e-01     5.67e-03     2.41e-02\n4908  2.06e-01  2.83e-02  4.41e-01     7.70e-02     2.89e-01\n4909  1.36e-01 -5.55e-02  3.93e-01     6.44e-02     2.01e-01\n4910  2.88e-02 -7.45e-03  1.43e-01     9.67e-03     3.81e-02\n4911  3.79e-02 -5.62e-03  1.77e-01     1.20e-02     5.03e-02\n4912  1.90e-01 -4.38e-02  4.42e-01     7.93e-02     2.69e-01\n4913  9.45e-02 -4.55e-02  3.42e-01     4.09e-02     1.33e-01\n4914  1.18e-01 -5.12e-02  3.67e-01     5.26e-02     1.69e-01\n4915 -2.52e-02 -2.25e-01  5.51e-03     3.75e-02     3.71e-03\n4916 -1.41e-02 -2.06e-01 -7.25e-06     1.61e-02     8.02e-04\n4917 -2.79e-02 -3.41e-01 -1.61e-05     3.20e-02     1.67e-03\n4918 -3.38e-02 -3.78e-01 -1.59e-05     3.80e-02     1.74e-03\n4919 -3.06e-03 -1.68e-01 -1.22e-06     3.34e-03     1.23e-04\n4920 -1.82e-03 -3.32e-02 -7.60e-07     2.12e-03     1.17e-04\n4921 -3.78e-02 -3.12e-01  5.70e-02     6.85e-02     9.95e-03\n4922 -1.35e-02 -2.16e-01 -6.89e-06     1.53e-02     6.94e-04\n4923 -2.27e-03 -4.72e-02 -1.01e-06     2.61e-03     1.24e-04\n4924 -3.91e-03 -6.23e-02 -1.81e-06     4.71e-03     2.61e-04\n4925 -2.52e-02 -2.83e-01 -1.18e-05     2.96e-02     1.58e-03\n4926 -5.76e-03 -1.34e-01 -2.86e-06     6.38e-03     2.61e-04\n4927 -8.41e-03 -1.71e-01 -4.08e-06     9.35e-03     3.82e-04\n4928  1.99e-01  6.52e-03  4.36e-01     8.11e-02     2.85e-01\n4929  1.69e-01 -6.33e-02  4.30e-01     8.61e-02     2.54e-01\n4930  2.07e-01 -1.33e-01  4.58e-01     1.83e-01     3.88e-01\n4931  2.94e-01 -1.50e-01  4.96e-01     2.07e-01     5.03e-01\n4932  9.77e-02 -3.30e-01  4.42e-01     2.61e-01     3.45e-01\n4933  2.86e-02 -5.57e-03  1.46e-01     9.24e-03     3.77e-02\n4934  2.67e-01  4.35e-02  4.77e-01     1.17e-01     3.91e-01\n4935  1.85e-01 -8.10e-02  4.45e-01     9.96e-02     2.83e-01\n4936  4.37e-02 -1.27e-02  2.03e-01     1.54e-02     5.87e-02\n4937  5.83e-02 -1.07e-02  2.33e-01     1.91e-02     7.67e-02\n4938  2.50e-01 -6.84e-02  4.80e-01     1.22e-01     3.69e-01\n4939  1.39e-01 -6.90e-02  4.04e-01     6.35e-02     1.97e-01\n4940  1.66e-01 -7.77e-02  4.30e-01     8.12e-02     2.44e-01\n4941  3.36e-02 -8.60e-02  2.15e-01     7.95e-02     1.19e-01\n4942 -3.14e-03 -1.20e-01  7.36e-02     4.14e-02     3.60e-02\n4943 -7.05e-03 -1.85e-01  1.06e-01     7.75e-02     6.58e-02\n4944 -1.19e-02 -2.42e-01  1.31e-01     1.01e-01     8.15e-02\n4945 -3.80e-03 -1.20e-01  1.19e-02     1.10e-02     6.19e-03\n4946  2.90e-05 -1.91e-02  1.78e-02     5.75e-03     5.58e-03\n4947  9.34e-02 -8.02e-02  3.15e-01     1.34e-01     2.38e-01\n4948 -5.14e-03 -1.38e-01  6.81e-02     4.26e-02     3.36e-02\n4949 -6.35e-04 -2.99e-02  1.67e-02     7.40e-03     6.17e-03\n4950  3.75e-04 -3.70e-02  3.51e-02     1.25e-02     1.25e-02\n4951 -1.10e-03 -1.66e-01  1.40e-01     7.59e-02     7.24e-02\n4952 -3.96e-03 -9.21e-02  2.93e-02     1.94e-02     1.31e-02\n4953 -5.04e-03 -1.16e-01  4.31e-02     2.77e-02     1.96e-02\n4954  1.86e-01  4.41e-02  4.13e-01     5.76e-02     2.49e-01\n4955  1.73e-01  2.98e-02  4.09e-01     6.22e-02     2.39e-01\n4956  2.22e-01  1.15e-02  4.51e-01     1.36e-01     3.67e-01\n4957  3.27e-01  1.04e-01  4.97e-01     1.54e-01     4.98e-01\n4958  2.41e-01 -7.74e-02  4.58e-01     1.99e-01     4.50e-01\n4959  2.89e-02  4.96e-03  1.32e-01     6.40e-03     3.54e-02\n4960  2.49e-01  7.23e-02  4.60e-01     8.42e-02     3.39e-01\n4961  2.01e-01  3.75e-02  4.31e-01     7.25e-02     2.78e-01\n4962  4.72e-02  7.75e-03  1.71e-01     1.08e-02     5.88e-02\n4963  5.82e-02  1.04e-02  2.13e-01     1.33e-02     7.23e-02\n4964  2.62e-01  7.60e-02  4.75e-01     8.67e-02     3.54e-01\n4965  1.58e-01  2.78e-02  3.91e-01     4.55e-02     2.07e-01\n4966  1.88e-01  3.68e-02  4.18e-01     5.88e-02     2.51e-01\n4967  8.46e-03 -1.86e-01  2.99e-01     1.22e-01     1.26e-01\n4968 -5.55e-02 -2.29e-01  1.68e-01     1.14e-01     3.91e-02\n4969 -9.53e-02 -3.61e-01  1.82e-01     1.99e-01     7.29e-02\n4970 -1.42e-01 -4.22e-01  2.39e-01     2.68e-01     8.59e-02\n4971 -1.04e-01 -3.60e-01 -1.35e-02     1.22e-01     6.80e-03\n4972 -5.52e-03 -4.02e-02  4.85e-02     1.42e-02     6.01e-03\n4973  7.13e-02 -2.12e-01  3.80e-01     1.74e-01     2.46e-01\n4974 -7.11e-02 -2.64e-01  1.60e-01     1.29e-01     3.62e-02\n4975 -1.15e-02 -6.40e-02  5.85e-02     2.26e-02     6.50e-03\n4976 -1.13e-02 -7.38e-02  9.35e-02     2.91e-02     1.35e-02\n4977 -7.45e-02 -3.02e-01  2.77e-01     1.74e-01     7.69e-02\n4978 -5.31e-02 -1.94e-01  9.42e-02     8.20e-02     1.43e-02\n4979 -6.71e-02 -2.36e-01  1.25e-01     1.05e-01     2.11e-02\n4980  2.72e-01  6.23e-02  4.68e-01     1.29e-01     4.09e-01\n4981  2.02e-01 -4.20e-02  4.37e-01     1.32e-01     3.36e-01\n4982  2.10e-01 -1.02e-01  4.32e-01     2.64e-01     4.83e-01\n4983  2.93e-01 -1.01e-01  4.76e-01     2.94e-01     5.95e-01\n4984  1.00e-02 -2.44e-01  3.76e-01     2.32e-01     2.32e-01\n4985  4.47e-02 -1.32e-03  1.86e-01     1.51e-02     6.01e-02\n4986  3.34e-01  1.25e-01  4.95e-01     1.83e-01     5.32e-01\n4987  2.13e-01 -6.38e-02  4.48e-01     1.50e-01     3.63e-01\n4988  6.32e-02 -8.67e-03  2.45e-01     2.44e-02     8.80e-02\n4989  8.84e-02 -2.00e-03  2.86e-01     3.11e-02     1.21e-01\n4990  2.93e-01 -2.91e-02  4.84e-01     1.83e-01     4.83e-01\n4991  1.48e-01 -6.19e-02  4.15e-01     9.49e-02     2.42e-01\n4992  1.83e-01 -6.75e-02  4.39e-01     1.21e-01     3.02e-01\n4993  3.31e-01  8.57e-02  4.89e-01     2.25e-01     5.66e-01\n4994  2.56e-01 -7.76e-02  4.57e-01     2.25e-01     4.83e-01\n4995  2.12e-01 -1.40e-01  4.18e-01     4.06e-01     6.33e-01\n4996  2.74e-01 -1.38e-01  4.53e-01     4.45e-01     7.31e-01\n4997  2.28e-03 -3.31e-01  3.51e-01     3.52e-01     3.44e-01\n4998  7.77e-02 -4.79e-03  2.81e-01     2.91e-02     1.07e-01\n4999  3.60e-01  1.63e-01  4.99e-01     3.05e-01     6.83e-01\n5000  2.59e-01 -1.08e-01  4.62e-01     2.51e-01     5.12e-01\n5001  1.05e-01 -1.81e-02  3.40e-01     4.56e-02     1.51e-01\n5002  1.46e-01 -5.70e-03  3.83e-01     5.85e-02     2.04e-01\n5003  3.27e-01 -4.64e-02  4.90e-01     3.04e-01     6.38e-01\n5004  2.09e-01 -1.03e-01  4.56e-01     1.66e-01     3.74e-01\n5005  2.40e-01 -1.17e-01  4.67e-01     2.09e-01     4.48e-01\n5006  2.49e-01  1.19e-02  4.65e-01     1.14e-01     3.69e-01\n5007  2.10e-01 -8.29e-02  4.53e-01     1.21e-01     3.31e-01\n5008  2.31e-01 -1.65e-01  4.54e-01     2.46e-01     4.79e-01\n5009  3.12e-01 -1.94e-01  4.93e-01     2.76e-01     5.95e-01\n5010  9.98e-02 -3.92e-01  4.28e-01     3.38e-01     4.31e-01\n5011  4.22e-02 -6.99e-03  1.92e-01     1.35e-02     5.62e-02\n5012  3.10e-01  6.38e-02  4.90e-01     1.62e-01     4.82e-01\n5013  2.32e-01 -1.11e-01  4.61e-01     1.40e-01     3.64e-01\n5014  6.38e-02 -1.72e-02  2.57e-01     2.27e-02     8.57e-02\n5015  8.22e-02 -1.26e-02  2.97e-01     2.74e-02     1.11e-01\n5016  2.97e-01 -8.55e-02  4.89e-01     1.68e-01     4.65e-01\n5017  1.79e-01 -9.20e-02  4.41e-01     9.07e-02     2.66e-01\n5018  2.11e-01 -1.06e-01  4.57e-01     1.15e-01     3.21e-01\n5019  2.94e-01  1.36e-01  4.55e-01     1.53e-01     4.62e-01\n5020  2.53e-01  8.82e-02  4.21e-01     1.59e-01     4.24e-01\n5021  2.34e-01  1.59e-02  4.26e-01     2.86e-01     5.37e-01\n5022  3.38e-01  1.50e-01  4.93e-01     3.53e-01     7.09e-01\n5023  7.86e-02 -2.74e-01  3.52e-01     4.12e-01     4.87e-01\n5024  6.97e-02  1.76e-02  2.00e-01     1.95e-02     9.09e-02\n5025  3.42e-01  1.81e-01  4.88e-01     2.14e-01     5.77e-01\n5026  2.78e-01  1.03e-01  4.37e-01     1.84e-01     4.77e-01\n5027  1.04e-01  3.06e-02  2.60e-01     3.21e-02     1.39e-01\n5028  1.29e-01  4.05e-02  2.99e-01     3.93e-02     1.71e-01\n5029  3.49e-01  1.82e-01  4.92e-01     2.25e-01     5.92e-01\n5030  2.45e-01  7.72e-02  4.25e-01     1.26e-01     3.79e-01\n5031  2.72e-01  1.01e-01  4.39e-01     1.57e-01     4.39e-01\n5032  1.91e-01 -5.84e-02  4.10e-01     2.22e-01     4.22e-01\n5033  7.61e-02 -1.40e-01  3.49e-01     1.96e-01     2.73e-01\n5034  3.42e-02 -1.91e-01  2.91e-01     2.74e-01     3.04e-01\n5035  1.47e-01 -2.64e-01  3.87e-01     4.38e-01     5.91e-01\n5036 -3.97e-02 -2.66e-01  2.70e-01     1.95e-01     1.38e-01\n5037  4.44e-02 -2.66e-02  2.30e-01     3.15e-02     7.72e-02\n5038  2.56e-01 -2.29e-02  4.39e-01     3.15e-01     5.87e-01\n5039  8.22e-02 -1.77e-01  3.61e-01     2.27e-01     3.09e-01\n5040  5.50e-02 -4.74e-02  2.90e-01     4.95e-02     1.05e-01\n5041  8.52e-02 -4.51e-02  3.25e-01     6.36e-02     1.51e-01\n5042  2.25e-01 -1.81e-01  4.48e-01     3.23e-01     5.53e-01\n5043  7.22e-02 -1.62e-01  3.93e-01     1.59e-01     2.36e-01\n5044  8.57e-02 -1.79e-01  3.91e-01     2.00e-01     2.87e-01\n5045  2.47e-01  7.07e-02  4.52e-01     8.68e-02     3.38e-01\n5046  2.30e-01  4.40e-02  4.44e-01     9.39e-02     3.28e-01\n5047  2.67e-01  8.38e-03  4.64e-01     1.97e-01     4.74e-01\n5048  3.61e-01  1.32e-01  5.07e-01     2.22e-01     6.06e-01\n5049  2.66e-01 -9.77e-02  4.65e-01     2.76e-01     5.57e-01\n5050  4.42e-02  7.41e-03  1.78e-01     9.84e-03     5.48e-02\n5051  3.10e-01  1.09e-01  4.89e-01     1.25e-01     4.45e-01\n5052  2.59e-01  5.55e-02  4.61e-01     1.07e-01     3.72e-01\n5053  7.15e-02  1.18e-02  2.36e-01     1.68e-02     8.98e-02\n5054  8.67e-02  1.59e-02  2.67e-01     2.06e-02     1.08e-01\n5055  3.23e-01  1.10e-01  4.97e-01     1.30e-01     4.62e-01\n5056  2.16e-01  3.79e-02  4.34e-01     6.85e-02     2.88e-01\n5057  2.47e-01  5.07e-02  4.58e-01     8.80e-02     3.38e-01\n5058  1.46e-02 -1.44e-01  2.95e-01     8.71e-02     9.61e-02\n5059 -3.97e-02 -1.80e-01  1.65e-01     8.44e-02     2.98e-02\n5060 -8.76e-02 -3.29e-01  1.97e-01     1.76e-01     6.09e-02\n5061 -1.01e-01 -3.49e-01  2.37e-01     2.00e-01     6.47e-02\n5062 -8.41e-02 -3.05e-01 -1.04e-02     9.68e-02     4.88e-03\n5063 -3.11e-03 -2.65e-02  3.90e-02     9.49e-03     4.37e-03\n5064  7.51e-02 -1.59e-01  3.77e-01     1.27e-01     1.99e-01\n5065 -5.07e-02 -2.04e-01  1.53e-01     9.56e-02     2.74e-02\n5066 -6.99e-03 -4.24e-02  4.59e-02     1.49e-02     4.73e-03\n5067 -6.24e-03 -4.87e-02  8.08e-02     1.96e-02     9.63e-03\n5068 -4.70e-02 -2.34e-01  2.53e-01     1.23e-01     5.56e-02\n5069 -3.54e-02 -1.41e-01  8.52e-02     5.61e-02     1.06e-02\n5070 -4.41e-02 -1.70e-01  1.11e-01     7.35e-02     1.53e-02\n5071  2.81e-01  1.24e-01  4.39e-01     1.21e-01     4.12e-01\n5072  2.43e-01  8.69e-02  4.14e-01     1.26e-01     3.80e-01\n5073  2.34e-01  2.13e-02  4.22e-01     2.40e-01     4.93e-01\n5074  3.60e-01  1.95e-01  4.96e-01     2.88e-01     6.70e-01\n5075  1.54e-01 -1.16e-01  3.88e-01     3.03e-01     4.60e-01\n5076  5.97e-02  1.60e-02  1.82e-01     1.45e-02     7.51e-02\n5077  3.37e-01  1.80e-01  4.78e-01     1.72e-01     5.25e-01\n5078  2.71e-01  1.10e-01  4.35e-01     1.46e-01     4.29e-01\n5079  9.25e-02  2.66e-02  2.44e-01     2.38e-02     1.19e-01\n5080  1.14e-01  3.70e-02  2.69e-01     3.01e-02     1.45e-01\n5081  3.50e-01  1.94e-01  4.89e-01     1.77e-01     5.51e-01\n5082  2.38e-01  8.95e-02  4.13e-01     9.55e-02     3.44e-01\n5083  2.68e-01  1.12e-01  4.34e-01     1.20e-01     3.98e-01\n5084  3.67e-01  2.21e-01  5.00e-01     2.08e-01     5.94e-01\n5085  3.54e-01  1.93e-01  4.90e-01     2.20e-01     5.93e-01\n5086  3.12e-01  9.97e-02  4.78e-01     4.06e-01     7.39e-01\n5087  3.66e-01  1.88e-01  5.11e-01     4.38e-01     8.15e-01\n5088  2.69e-01  3.62e-02  4.59e-01     5.27e-01     8.13e-01\n5089  1.14e-01  3.27e-02  2.91e-01     2.69e-02     1.43e-01\n5090  3.86e-01  2.44e-01  5.13e-01     2.82e-01     6.92e-01\n5091  3.68e-01  2.17e-01  5.00e-01     2.46e-01     6.40e-01\n5092  1.69e-01  5.72e-02  3.55e-01     4.43e-02     2.16e-01\n5093  1.96e-01  7.50e-02  3.89e-01     5.41e-02     2.56e-01\n5094  3.96e-01  2.54e-01  5.22e-01     2.88e-01     7.09e-01\n5095  3.56e-01  1.98e-01  4.92e-01     1.69e-01     5.43e-01\n5096  3.73e-01  2.23e-01  5.02e-01     2.09e-01     6.02e-01\n5097  3.57e-04 -1.91e-01  1.78e-01     1.04e-01     1.04e-01\n5098 -4.70e-02 -2.61e-01  2.50e-02     8.72e-02     3.07e-02\n5099 -6.80e-02 -3.65e-01  4.32e-02     1.43e-01     5.65e-02\n5100 -1.38e-01 -4.58e-01  2.39e-02     2.31e-01     7.04e-02\n5101 -8.51e-02 -4.46e-01 -3.22e-03     9.19e-02     5.24e-03\n5102 -5.77e-03 -5.21e-02  7.56e-03     1.23e-02     4.84e-03\n5103  4.88e-02 -1.85e-01  2.78e-01     1.58e-01     2.12e-01\n5104 -6.34e-02 -3.02e-01  1.12e-02     1.01e-01     2.89e-02\n5105 -1.18e-02 -8.28e-02  4.47e-03     1.91e-02     5.32e-03\n5106 -1.16e-02 -9.56e-02  1.99e-02     2.51e-02     1.07e-02\n5107 -7.64e-02 -3.62e-01  6.69e-02     1.54e-01     6.26e-02\n5108 -5.08e-02 -2.50e-01 -2.20e-03     6.66e-02     1.11e-02\n5109 -6.22e-02 -2.83e-01 -1.69e-03     8.62e-02     1.67e-02\n5110  2.88e-01  1.34e-01  4.50e-01     1.05e-01     4.02e-01\n5111  2.85e-01  1.29e-01  4.47e-01     1.13e-01     4.06e-01\n5112  3.25e-01  1.13e-01  4.80e-01     2.40e-01     5.82e-01\n5113  3.88e-01  2.47e-01  5.15e-01     2.60e-01     6.71e-01\n5114  3.26e-01  8.38e-02  4.86e-01     3.41e-01     6.86e-01\n5115  5.69e-02  1.43e-02  1.76e-01     1.23e-02     7.01e-02\n5116  3.42e-01  1.82e-01  4.83e-01     1.49e-01     5.06e-01\n5117  3.11e-01  1.52e-01  4.66e-01     1.29e-01     4.50e-01\n5118  8.99e-02  2.67e-02  2.39e-01     2.04e-02     1.12e-01\n5119  1.07e-01  3.32e-02  2.66e-01     2.51e-02     1.33e-01\n5120  3.54e-01  1.97e-01  4.94e-01     1.54e-01     5.24e-01\n5121  2.61e-01  1.10e-01  4.29e-01     8.37e-02     3.52e-01\n5122  2.94e-01  1.37e-01  4.54e-01     1.05e-01     4.07e-01\n5123  3.32e-01  1.25e-01  4.99e-01     1.64e-01     5.08e-01\n5124  3.11e-01  7.76e-02  4.92e-01     1.75e-01     4.93e-01\n5125  2.90e-01  1.58e-02  4.65e-01     3.31e-01     6.40e-01\n5126  3.64e-01  1.72e-01  4.99e-01     3.68e-01     7.53e-01\n5127  2.52e-01 -1.46e-01  4.41e-01     4.38e-01     7.17e-01\n5128  8.54e-02  1.65e-02  2.69e-01     2.04e-02     1.07e-01\n5129  3.69e-01  1.85e-01  5.11e-01     2.28e-01     6.16e-01\n5130  3.32e-01  9.35e-02  5.00e-01     1.98e-01     5.44e-01\n5131  1.29e-01  2.52e-02  3.48e-01     3.35e-02     1.64e-01\n5132  1.51e-01  3.64e-02  3.78e-01     4.10e-02     1.96e-01\n5133  3.80e-01  1.87e-01  5.19e-01     2.35e-01     6.33e-01\n5134  3.12e-01  6.84e-02  4.97e-01     1.32e-01     4.52e-01\n5135  3.34e-01  9.04e-02  5.04e-01     1.64e-01     5.10e-01\n5136 -4.06e-02 -1.96e-01 -3.12e-03     4.68e-02     2.47e-03\n5137 -1.34e-02 -8.75e-02 -1.02e-03     1.49e-02     5.40e-04\n5138 -2.62e-02 -1.54e-01 -1.88e-03     2.92e-02     1.14e-03\n5139 -3.09e-02 -1.82e-01 -2.41e-03     3.40e-02     1.21e-03\n5140 -2.34e-03 -2.03e-02 -1.68e-04     2.55e-03     8.02e-05\n5141 -1.98e-03 -1.57e-02 -1.32e-04     2.21e-03     7.98e-05\n5142 -8.09e-02 -3.19e-01 -4.47e-03     9.79e-02     6.90e-03\n5143 -1.25e-02 -8.55e-02 -9.70e-04     1.38e-02     4.71e-04\n5144 -2.20e-03 -1.74e-02 -1.59e-04     2.41e-03     8.44e-05\n5145 -4.32e-03 -3.06e-02 -3.30e-04     4.79e-03     1.81e-04\n5146 -2.60e-02 -1.52e-01 -2.15e-03     2.91e-02     1.04e-03\n5147 -4.88e-03 -3.90e-02 -3.26e-04     5.36e-03     1.78e-04\n5148 -7.25e-03 -5.48e-02 -5.11e-04     7.94e-03     2.67e-04\n5149  3.33e-01  1.29e-01  4.98e-01     1.63e-01     5.08e-01\n5150  3.13e-01  8.05e-02  4.90e-01     1.73e-01     4.94e-01\n5151  2.88e-01  9.41e-03  4.68e-01     3.32e-01     6.43e-01\n5152  3.66e-01  1.71e-01  5.03e-01     3.65e-01     7.53e-01\n5153  2.53e-01 -1.64e-01  4.44e-01     4.36e-01     7.13e-01\n5154  8.46e-02  1.68e-02  2.70e-01     2.01e-02     1.06e-01\n5155  3.71e-01  1.82e-01  5.12e-01     2.28e-01     6.18e-01\n5156  3.32e-01  9.83e-02  4.99e-01     1.97e-01     5.43e-01\n5157  1.28e-01  2.63e-02  3.40e-01     3.35e-02     1.62e-01\n5158  1.53e-01  3.71e-02  3.75e-01     4.14e-02     1.99e-01\n5159  3.80e-01  1.85e-01  5.22e-01     2.32e-01     6.34e-01\n5160  3.10e-01  6.73e-02  4.95e-01     1.31e-01     4.48e-01\n5161  3.34e-01  9.49e-02  5.06e-01     1.63e-01     5.08e-01\n5162  1.98e-01  1.33e-02  4.31e-01     7.98e-02     2.83e-01\n5163  1.68e-01 -5.76e-02  4.16e-01     8.45e-02     2.52e-01\n5164  2.09e-01 -1.28e-01  4.50e-01     1.80e-01     3.89e-01\n5165  2.91e-01 -1.41e-01  4.91e-01     2.02e-01     4.96e-01\n5166  1.01e-01 -3.41e-01  4.42e-01     2.56e-01     3.39e-01\n5167  2.89e-02 -4.38e-03  1.45e-01     9.04e-03     3.84e-02\n5168  2.63e-01  5.12e-02  4.75e-01     1.14e-01     3.86e-01\n5169  1.85e-01 -7.97e-02  4.34e-01     9.85e-02     2.81e-01\n5170  4.42e-02 -1.17e-02  1.97e-01     1.49e-02     5.85e-02\n5171  5.77e-02 -9.06e-03  2.30e-01     1.85e-02     7.70e-02\n5172  2.48e-01 -6.30e-02  4.74e-01     1.19e-01     3.67e-01\n5173  1.35e-01 -6.53e-02  3.98e-01     6.26e-02     1.94e-01\n5174  1.66e-01 -7.95e-02  4.22e-01     7.90e-02     2.42e-01\n5175  1.90e-01  4.06e-02  4.15e-01     5.92e-02     2.54e-01\n5176  1.79e-01  2.73e-02  4.11e-01     6.34e-02     2.45e-01\n5177  2.28e-01  1.15e-02  4.51e-01     1.40e-01     3.74e-01\n5178  3.31e-01  9.23e-02  4.94e-01     1.58e-01     5.04e-01\n5179  2.48e-01 -7.75e-02  4.58e-01     2.02e-01     4.58e-01\n5180  2.94e-02  4.34e-03  1.33e-01     6.57e-03     3.65e-02\n5181  2.55e-01  6.36e-02  4.59e-01     8.67e-02     3.49e-01\n5182  2.05e-01  3.36e-02  4.28e-01     7.35e-02     2.81e-01\n5183  4.82e-02  6.53e-03  1.86e-01     1.11e-02     6.03e-02\n5184  5.94e-02  8.95e-03  2.10e-01     1.35e-02     7.38e-02\n5185  2.66e-01  6.52e-02  4.74e-01     8.89e-02     3.61e-01\n5186  1.61e-01  2.31e-02  3.92e-01     4.58e-02     2.09e-01\n5187  1.90e-01  3.15e-02  4.20e-01     5.90e-02     2.52e-01\n5188 -4.54e-02 -4.74e-01 -1.43e-05     5.32e-02     3.51e-03\n5189 -1.21e-02 -3.66e-01 -2.69e-06     1.38e-02     7.74e-04\n5190 -2.38e-02 -4.92e-01 -6.17e-06     2.73e-02     1.64e-03\n5191 -2.73e-02 -5.74e-01 -7.15e-06     3.10e-02     1.74e-03\n5192 -1.89e-03 -1.60e-01 -4.53e-07     2.16e-03     1.13e-04\n5193 -1.85e-03 -8.34e-02 -3.76e-07     2.11e-03     1.10e-04\n5194 -1.01e-01 -5.54e-01 -3.35e-05     1.22e-01     9.76e-03\n5195 -1.09e-02 -3.70e-01 -2.67e-06     1.23e-02     6.91e-04\n5196 -1.93e-03 -1.07e-01 -3.76e-07     2.15e-03     1.17e-04\n5197 -4.10e-03 -1.57e-01 -9.45e-07     4.67e-03     2.48e-04\n5198 -2.42e-02 -5.02e-01 -5.66e-06     2.74e-02     1.49e-03\n5199 -4.19e-03 -2.27e-01 -9.45e-07     4.71e-03     2.54e-04\n5200 -6.35e-03 -2.94e-01 -1.35e-06     7.04e-03     3.87e-04\n5201 -4.46e-02 -4.83e-01 -1.75e-05     5.30e-02     3.55e-03\n5202 -1.22e-02 -3.56e-01 -3.12e-06     1.39e-02     7.73e-04\n5203 -2.27e-02 -5.09e-01 -6.95e-06     2.63e-02     1.59e-03\n5204 -2.66e-02 -5.80e-01 -7.49e-06     3.06e-02     1.74e-03\n5205 -1.88e-03 -1.68e-01 -5.34e-07     2.12e-03     1.16e-04\n5206 -1.78e-03 -8.51e-02 -4.18e-07     2.03e-03     1.14e-04\n5207 -1.00e-01 -5.65e-01 -4.17e-05     1.19e-01     9.67e-03\n5208 -1.04e-02 -3.75e-01 -2.88e-06     1.20e-02     7.12e-04\n5209 -1.92e-03 -1.04e-01 -5.38e-07     2.22e-03     1.17e-04\n5210 -3.97e-03 -1.56e-01 -8.64e-07     4.54e-03     2.60e-04\n5211 -2.39e-02 -5.13e-01 -6.85e-06     2.71e-02     1.55e-03\n5212 -4.01e-03 -2.38e-01 -1.03e-06     4.60e-03     2.51e-04\n5213 -6.14e-03 -2.87e-01 -1.71e-06     7.15e-03     3.98e-04\n5214 -2.17e-02 -1.40e-01  6.27e-02     1.80e-01     1.54e-01\n5215 -2.25e-02 -1.46e-01  6.59e-02     1.89e-01     1.63e-01\n5216 -3.74e-02 -1.91e-01  9.83e-02     3.55e-01     3.14e-01\n5217 -3.71e-02 -1.86e-01  9.92e-02     3.92e-01     3.51e-01\n5218 -3.97e-02 -2.04e-01  1.35e-01     4.59e-01     4.15e-01\n5219 -2.85e-03 -3.28e-02  1.11e-02     2.24e-02     1.88e-02\n5220 -2.86e-02 -1.65e-01  7.48e-02     2.48e-01     2.15e-01\n5221 -2.45e-02 -1.56e-01  7.09e-02     2.14e-01     1.86e-01\n5222 -4.67e-03 -4.92e-02  1.75e-02     3.70e-02     3.11e-02\n5223 -5.91e-03 -5.84e-02  2.17e-02     4.59e-02     3.86e-02\n5224 -2.81e-02 -1.66e-01  7.73e-02     2.54e-01     2.22e-01\n5225 -1.72e-02 -1.26e-01  5.64e-02     1.44e-01     1.24e-01\n5226 -2.13e-02 -1.42e-01  6.55e-02     1.78e-01     1.55e-01\n5227 -6.15e-02 -2.22e-01  8.57e-02     4.02e-01     3.30e-01\n5228 -7.45e-02 -3.11e-01  8.23e-02     4.06e-01     3.15e-01\n5229 -7.63e-02 -3.74e-01  9.70e-02     5.81e-01     4.86e-01\n5230 -8.22e-02 -4.17e-01  6.96e-02     6.70e-01     5.71e-01\n5231 -1.52e-01 -6.14e-01  5.61e-02     6.82e-01     5.01e-01\n5232 -1.65e-02 -9.09e-02  2.66e-02     6.89e-02     4.86e-02\n5233 -6.44e-02 -2.27e-01  8.75e-02     5.04e-01     4.32e-01\n5234 -8.20e-02 -3.47e-01  8.15e-02     4.51e-01     3.52e-01\n5235 -2.75e-02 -1.36e-01  3.66e-02     1.10e-01     7.62e-02\n5236 -3.06e-02 -1.43e-01  4.56e-02     1.34e-01     9.59e-02\n5237 -7.99e-02 -3.37e-01  7.89e-02     5.23e-01     4.26e-01\n5238 -8.00e-02 -3.22e-01  7.06e-02     3.51e-01     2.51e-01\n5239 -8.47e-02 -3.58e-01  7.49e-02     4.09e-01     3.02e-01\n5240 -3.05e-01 -6.38e-01 -1.02e-02     5.97e-01     2.47e-01\n5241 -3.27e-01 -6.07e-01 -4.04e-02     4.59e-01     8.17e-02\n5242 -3.59e-01 -6.80e-01 -1.12e-02     5.68e-01     1.54e-01\n5243 -4.88e-01 -7.58e-01 -5.83e-02     7.16e-01     1.73e-01\n5244 -1.92e-01 -4.94e-01 -3.41e-02     2.26e-01     1.49e-02\n5245 -9.09e-02 -2.79e-01 -1.45e-02     1.16e-01     1.35e-02\n5246 -2.57e-01 -6.60e-01  6.59e-03     7.22e-01     4.31e-01\n5247 -3.53e-01 -6.30e-01 -6.06e-02     4.81e-01     7.69e-02\n5248 -1.22e-01 -3.32e-01 -2.26e-02     1.52e-01     1.50e-02\n5249 -1.67e-01 -4.02e-01 -3.00e-02     2.21e-01     2.97e-02\n5250 -4.43e-01 -7.17e-01 -6.03e-02     6.51e-01     1.56e-01\n5251 -2.63e-01 -5.41e-01 -5.63e-02     3.30e-01     3.15e-02\n5252 -3.18e-01 -5.88e-01 -7.07e-02     4.06e-01     4.57e-02\n5253 -3.95e-02 -1.75e-01  1.13e-01     7.28e-01     6.84e-01\n5254 -4.20e-02 -1.93e-01  1.35e-01     7.04e-01     6.58e-01\n5255 -2.80e-02 -2.02e-01  1.81e-01     7.62e-01     7.30e-01\n5256 -2.26e-02 -1.09e-01  5.11e-02     9.01e-01     8.76e-01\n5257 -4.14e-02 -3.03e-01  1.21e-01     8.71e-01     8.14e-01\n5258 -4.36e-02 -1.96e-01  6.70e-02     2.70e-01     2.23e-01\n5259 -3.11e-02 -1.46e-01  8.85e-02     8.14e-01     7.78e-01\n5260 -4.08e-02 -1.82e-01  1.15e-01     7.58e-01     7.11e-01\n5261 -5.89e-02 -2.22e-01  7.46e-02     3.92e-01     3.24e-01\n5262 -5.71e-02 -2.15e-01  8.39e-02     4.33e-01     3.72e-01\n5263 -3.42e-02 -1.40e-01  5.73e-02     8.49e-01     8.10e-01\n5264 -5.71e-02 -2.14e-01  7.61e-02     7.29e-01     6.62e-01\n5265 -4.91e-02 -1.83e-01  7.86e-02     7.63e-01     7.08e-01\n5266 -6.59e-02 -2.40e-01  8.51e-02     4.65e-01     3.91e-01\n5267 -7.85e-02 -3.44e-01  8.04e-02     4.69e-01     3.76e-01\n5268 -7.46e-02 -3.83e-01  9.29e-02     6.38e-01     5.50e-01\n5269 -7.66e-02 -4.51e-01  5.97e-02     7.24e-01     6.34e-01\n5270 -1.49e-01 -6.40e-01  4.86e-02     7.32e-01     5.58e-01\n5271 -2.07e-02 -1.09e-01  3.22e-02     8.84e-02     6.22e-02\n5272 -6.46e-02 -2.33e-01  8.30e-02     5.70e-01     5.00e-01\n5273 -8.58e-02 -3.82e-01  7.69e-02     5.14e-01     4.10e-01\n5274 -3.44e-02 -1.60e-01  4.39e-02     1.40e-01     9.54e-02\n5275 -3.76e-02 -1.67e-01  5.25e-02     1.68e-01     1.22e-01\n5276 -8.07e-02 -3.65e-01  7.38e-02     5.89e-01     4.95e-01\n5277 -8.99e-02 -3.78e-01  7.37e-02     4.13e-01     3.02e-01\n5278 -9.18e-02 -3.96e-01  7.36e-02     4.73e-01     3.63e-01\n5279 -6.40e-03 -1.38e-01 -2.85e-06     7.42e-03     3.33e-04\n5280 -1.39e-03 -4.06e-02 -4.45e-07     1.65e-03     7.04e-05\n5281 -3.04e-03 -7.96e-02 -1.18e-06     3.50e-03     1.48e-04\n5282 -3.18e-03 -8.24e-02 -1.22e-06     3.65e-03     1.57e-04\n5283 -2.19e-04 -6.82e-03 -9.25e-08     2.54e-04     1.06e-05\n5284 -2.03e-04 -7.13e-03 -7.30e-08     2.36e-04     1.05e-05\n5285 -1.76e-02 -2.79e-01 -8.08e-06     2.02e-02     9.22e-04\n5286 -1.25e-03 -3.65e-02 -4.93e-07     1.47e-03     6.26e-05\n5287 -2.22e-04 -6.97e-03 -7.73e-08     2.56e-04     1.09e-05\n5288 -4.61e-04 -1.44e-02 -1.80e-07     5.36e-04     2.31e-05\n5289 -2.86e-03 -7.62e-02 -1.09e-06     3.29e-03     1.40e-04\n5290 -4.70e-04 -1.47e-02 -1.61e-07     5.35e-04     2.30e-05\n5291 -7.14e-04 -2.16e-02 -2.59e-07     8.19e-04     3.46e-05\n5292 -1.20e-01 -4.24e-01  5.38e-02     4.90e-01     3.46e-01\n5293 -2.00e-01 -5.19e-01  2.84e-02     4.72e-01     2.40e-01\n5294 -2.09e-01 -6.10e-01  4.18e-02     6.38e-01     3.89e-01\n5295 -2.45e-01 -6.60e-01  1.19e-02     7.23e-01     4.54e-01\n5296 -3.71e-01 -6.81e-01 -5.15e-02     5.49e-01     8.60e-02\n5297 -4.49e-02 -1.74e-01  1.12e-02     9.34e-02     3.80e-02\n5298 -1.05e-01 -3.95e-01  6.13e-02     5.98e-01     4.75e-01\n5299 -2.29e-01 -5.58e-01  1.81e-02     5.11e-01     2.44e-01\n5300 -7.53e-02 -2.57e-01  9.34e-03     1.41e-01     4.96e-02\n5301 -8.19e-02 -2.73e-01  1.77e-02     1.77e-01     7.82e-02\n5302 -2.05e-01 -5.87e-01  2.61e-02     5.97e-01     3.62e-01\n5303 -2.19e-01 -5.03e-01 -4.91e-03     3.89e-01     1.32e-01\n5304 -2.40e-01 -5.40e-01  2.84e-03     4.56e-01     1.80e-01\n5305 -2.20e-02 -1.46e-01  6.20e-02     1.79e-01     1.54e-01\n5306 -2.31e-02 -1.51e-01  6.58e-02     1.84e-01     1.56e-01\n5307 -3.77e-02 -2.03e-01  9.57e-02     3.14e-01     2.69e-01\n5308 -3.72e-02 -1.86e-01  1.01e-01     4.00e-01     3.56e-01\n5309 -4.12e-02 -2.11e-01  1.36e-01     4.34e-01     3.86e-01\n5310 -2.97e-03 -3.62e-02  1.19e-02     2.34e-02     1.99e-02\n5311 -2.88e-02 -1.67e-01  7.54e-02     2.52e-01     2.18e-01\n5312 -2.54e-02 -1.59e-01  7.18e-02     2.14e-01     1.85e-01\n5313 -4.90e-03 -5.13e-02  1.79e-02     3.90e-02     3.28e-02\n5314 -6.24e-03 -6.26e-02  2.24e-02     4.81e-02     4.03e-02\n5315 -2.94e-02 -1.69e-01  7.97e-02     2.63e-01     2.31e-01\n5316 -1.80e-02 -1.32e-01  5.67e-02     1.49e-01     1.29e-01\n5317 -2.17e-02 -1.46e-01  6.63e-02     1.85e-01     1.60e-01\n5318 -4.43e-02 -4.51e-01 -1.13e-05     5.24e-02     3.65e-03\n5319 -1.21e-02 -3.43e-01 -2.25e-06     1.38e-02     7.98e-04\n5320 -2.30e-02 -4.82e-01 -4.71e-06     2.71e-02     1.66e-03\n5321 -2.65e-02 -5.59e-01 -5.71e-06     3.02e-02     1.79e-03\n5322 -1.89e-03 -1.69e-01 -3.71e-07     2.16e-03     1.23e-04\n5323 -1.78e-03 -8.18e-02 -3.84e-07     2.04e-03     1.12e-04\n5324 -9.87e-02 -5.50e-01 -3.12e-05     1.21e-01     1.01e-02\n5325 -1.12e-02 -3.62e-01 -2.30e-06     1.27e-02     7.21e-04\n5326 -1.96e-03 -9.92e-02 -3.39e-07     2.22e-03     1.24e-04\n5327 -4.04e-03 -1.55e-01 -7.30e-07     4.63e-03     2.58e-04\n5328 -2.38e-02 -4.95e-01 -4.75e-06     2.70e-02     1.57e-03\n5329 -4.11e-03 -2.28e-01 -8.11e-07     4.66e-03     2.65e-04\n5330 -6.26e-03 -3.01e-01 -1.05e-06     6.99e-03     3.97e-04\n5331 -6.69e-03 -1.59e-01  7.43e-02     5.47e-02     4.71e-02\n5332 -2.35e-03 -1.20e-01  3.54e-02     1.77e-02     1.48e-02\n5333 -4.30e-03 -1.85e-01  6.47e-02     3.49e-02     2.92e-02\n5334 -5.39e-03 -2.44e-01  7.72e-02     4.17e-02     3.50e-02\n5335 -3.98e-04 -5.06e-02  7.94e-03     3.21e-03     2.58e-03\n5336 -3.15e-04 -2.33e-02  6.08e-03     2.68e-03     2.23e-03\n5337 -1.15e-02 -1.98e-01  1.22e-01     1.11e-01     9.89e-02\n5338 -2.16e-03 -1.32e-01  3.44e-02     1.67e-02     1.37e-02\n5339 -3.53e-04 -2.91e-02  6.84e-03     3.00e-03     2.50e-03\n5340 -7.13e-04 -4.20e-02  1.21e-02     5.88e-03     4.85e-03\n5341 -4.48e-03 -1.90e-01  6.48e-02     3.52e-02     2.95e-02\n5342 -8.72e-04 -7.33e-02  1.53e-02     6.67e-03     5.44e-03\n5343 -1.22e-03 -9.80e-02  2.26e-02     9.97e-03     8.18e-03\n5344 -9.55e-02 -3.30e-01  6.01e-02     3.58e-01     2.46e-01\n5345 -1.49e-01 -4.16e-01  3.46e-02     3.50e-01     1.74e-01\n5346 -1.82e-01 -5.41e-01  5.20e-02     5.19e-01     2.98e-01\n5347 -2.20e-01 -5.83e-01  2.37e-02     6.06e-01     3.52e-01\n5348 -3.09e-01 -6.19e-01 -4.20e-02     4.50e-01     6.76e-02\n5349 -2.53e-02 -1.16e-01  8.18e-03     5.57e-02     2.48e-02\n5350 -9.25e-02 -3.31e-01  7.04e-02     4.61e-01     3.54e-01\n5351 -1.76e-01 -4.56e-01  2.72e-02     3.86e-01     1.80e-01\n5352 -4.54e-02 -1.66e-01  8.78e-03     8.86e-02     3.40e-02\n5353 -4.91e-02 -1.90e-01  1.62e-02     1.11e-01     5.12e-02\n5354 -1.67e-01 -4.86e-01  3.67e-02     4.65e-01     2.65e-01\n5355 -1.54e-01 -4.00e-01  6.24e-03     2.77e-01     9.47e-02\n5356 -1.74e-01 -4.35e-01  1.28e-02     3.36e-01     1.29e-01\n5357 -1.11e-01 -4.42e-01 -1.47e-03     1.57e-01     3.25e-02\n5358 -6.14e-02 -3.93e-01 -9.38e-04     7.42e-02     8.19e-03\n5359 -7.35e-02 -4.65e-01 -3.11e-04     9.78e-02     1.58e-02\n5360 -1.84e-01 -6.29e-01 -2.32e-03     2.10e-01     1.88e-02\n5361 -2.15e-02 -3.25e-01 -2.00e-04     2.36e-02     1.32e-03\n5362 -1.33e-02 -1.25e-01 -1.63e-04     1.54e-02     1.26e-03\n5363 -1.67e-01 -5.00e-01 -1.22e-03     2.72e-01     7.83e-02\n5364 -6.98e-02 -4.25e-01 -8.92e-04     8.12e-02     7.53e-03\n5365 -1.81e-02 -1.73e-01 -1.73e-04     2.01e-02     1.33e-03\n5366 -2.90e-02 -2.16e-01 -3.80e-04     3.29e-02     2.79e-03\n5367 -1.65e-01 -5.76e-01 -2.14e-03     1.91e-01     1.68e-02\n5368 -4.22e-02 -3.61e-01 -3.48e-04     4.70e-02     2.82e-03\n5369 -5.82e-02 -4.11e-01 -5.16e-04     6.45e-02     4.28e-03\n5370 -1.57e-01 -4.46e-01 -1.63e-02     1.88e-01     1.33e-02\n5371 -5.00e-02 -2.25e-01 -3.89e-03     5.75e-02     2.95e-03\n5372 -9.50e-02 -3.57e-01 -7.59e-03     1.12e-01     6.28e-03\n5373 -1.06e-01 -3.88e-01 -8.74e-03     1.23e-01     6.50e-03\n5374 -8.54e-03 -5.23e-02 -5.62e-04     9.71e-03     4.53e-04\n5375 -7.81e-03 -4.90e-02 -5.05e-04     8.97e-03     4.39e-04\n5376 -2.79e-01 -5.93e-01 -3.68e-02     3.57e-01     3.56e-02\n5377 -4.57e-02 -2.11e-01 -3.26e-03     5.23e-02     2.63e-03\n5378 -8.42e-03 -5.14e-02 -5.24e-04     9.65e-03     4.63e-04\n5379 -1.69e-02 -8.94e-02 -1.16e-03     1.95e-02     9.92e-04\n5380 -9.29e-02 -3.51e-01 -7.82e-03     1.08e-01     5.89e-03\n5381 -1.81e-02 -9.78e-02 -1.25e-03     2.05e-02     9.92e-04\n5382 -2.68e-02 -1.47e-01 -1.80e-03     3.06e-02     1.48e-03\n5383 -3.19e-02 -1.60e-01  5.87e-02     1.99e-01     1.62e-01\n5384 -3.28e-02 -1.62e-01  6.02e-02     2.06e-01     1.68e-01\n5385 -4.31e-02 -2.02e-01  9.87e-02     3.47e-01     3.00e-01\n5386 -5.70e-02 -2.09e-01  8.42e-02     4.31e-01     3.67e-01\n5387 -8.05e-02 -3.11e-01  8.71e-02     4.87e-01     3.93e-01\n5388 -4.93e-03 -4.28e-02  9.80e-03     2.65e-02     2.07e-02\n5389 -4.11e-02 -1.80e-01  6.90e-02     2.73e-01     2.28e-01\n5390 -3.76e-02 -1.72e-01  6.37e-02     2.35e-01     1.94e-01\n5391 -8.35e-03 -5.97e-02  1.51e-02     4.42e-02     3.40e-02\n5392 -1.02e-02 -6.80e-02  1.88e-02     5.35e-02     4.22e-02\n5393 -4.46e-02 -1.91e-01  6.92e-02     2.89e-01     2.38e-01\n5394 -3.08e-02 -1.56e-01  4.62e-02     1.68e-01     1.33e-01\n5395 -3.55e-02 -1.70e-01  5.29e-02     2.06e-01     1.65e-01\n5396 -6.60e-02 -2.45e-01  8.53e-02     4.66e-01     3.91e-01\n5397 -7.79e-02 -3.49e-01  8.08e-02     4.68e-01     3.74e-01\n5398 -7.21e-02 -3.86e-01  9.98e-02     6.36e-01     5.47e-01\n5399 -7.47e-02 -4.45e-01  6.18e-02     7.24e-01     6.36e-01\n5400 -1.44e-01 -6.35e-01  4.87e-02     7.34e-01     5.63e-01\n5401 -2.05e-02 -1.11e-01  3.21e-02     8.81e-02     6.25e-02\n5402 -6.47e-02 -2.30e-01  8.51e-02     5.73e-01     4.98e-01\n5403 -8.56e-02 -3.89e-01  7.82e-02     5.16e-01     4.14e-01\n5404 -3.44e-02 -1.63e-01  4.45e-02     1.40e-01     9.64e-02\n5405 -3.74e-02 -1.73e-01  5.22e-02     1.67e-01     1.21e-01\n5406 -8.08e-02 -3.66e-01  7.65e-02     5.87e-01     4.93e-01\n5407 -8.90e-02 -3.73e-01  7.39e-02     4.09e-01     3.04e-01\n5408 -9.17e-02 -3.95e-01  7.54e-02     4.73e-01     3.65e-01\n5409 -1.63e-02 -9.99e-02  5.53e-02     1.22e-01     1.02e-01\n5410 -1.81e-02 -1.05e-01  5.44e-02     1.24e-01     1.02e-01\n5411 -3.36e-02 -1.68e-01  8.74e-02     2.24e-01     1.84e-01\n5412 -3.39e-02 -1.64e-01  9.20e-02     2.96e-01     2.54e-01\n5413 -4.43e-02 -2.07e-01  1.02e-01     3.27e-01     2.74e-01\n5414 -1.95e-03 -1.88e-02  9.97e-03     1.51e-02     1.24e-02\n5415 -2.20e-02 -1.24e-01  6.88e-02     1.74e-01     1.47e-01\n5416 -2.07e-02 -1.19e-01  6.27e-02     1.47e-01     1.20e-01\n5417 -3.23e-03 -2.89e-02  1.53e-02     2.50e-02     2.07e-02\n5418 -4.13e-03 -3.56e-02  1.87e-02     3.05e-02     2.54e-02\n5419 -2.23e-02 -1.28e-01  7.16e-02     1.84e-01     1.57e-01\n5420 -1.31e-02 -8.89e-02  4.94e-02     1.00e-01     8.45e-02\n5421 -1.64e-02 -1.02e-01  5.70e-02     1.25e-01     1.05e-01\n5422 -6.04e-02 -2.23e-01  8.88e-02     3.96e-01     3.27e-01\n5423 -6.86e-02 -2.96e-01  8.98e-02     3.83e-01     2.98e-01\n5424 -6.57e-02 -3.13e-01  1.31e-01     4.97e-01     4.18e-01\n5425 -7.97e-02 -4.13e-01  7.03e-02     6.72e-01     5.76e-01\n5426 -1.47e-01 -5.86e-01  7.77e-02     6.37e-01     4.57e-01\n5427 -1.73e-02 -9.54e-02  2.79e-02     7.39e-02     5.15e-02\n5428 -6.32e-02 -2.21e-01  8.87e-02     5.07e-01     4.37e-01\n5429 -7.92e-02 -3.35e-01  8.41e-02     4.35e-01     3.41e-01\n5430 -2.92e-02 -1.51e-01  3.87e-02     1.18e-01     8.10e-02\n5431 -3.20e-02 -1.46e-01  4.48e-02     1.41e-01     1.02e-01\n5432 -8.03e-02 -3.42e-01  7.94e-02     5.41e-01     4.44e-01\n5433 -8.20e-02 -3.43e-01  6.94e-02     3.62e-01     2.62e-01\n5434 -8.61e-02 -3.60e-01  7.42e-02     4.16e-01     3.12e-01\n5435 -1.67e-02 -1.24e-01  4.72e-02     1.32e-01     1.13e-01\n5436 -1.76e-02 -1.29e-01  5.10e-02     1.34e-01     1.14e-01\n5437 -3.12e-02 -1.87e-01  8.23e-02     2.41e-01     2.06e-01\n5438 -3.31e-02 -1.78e-01  8.73e-02     3.12e-01     2.79e-01\n5439 -3.67e-02 -2.02e-01  1.19e-01     3.47e-01     3.07e-01\n5440 -2.03e-03 -2.66e-02  8.03e-03     1.63e-02     1.37e-02\n5441 -2.21e-02 -1.49e-01  6.24e-02     1.88e-01     1.64e-01\n5442 -1.94e-02 -1.38e-01  5.61e-02     1.57e-01     1.35e-01\n5443 -3.48e-03 -3.99e-02  1.28e-02     2.65e-02     2.28e-02\n5444 -4.35e-03 -4.74e-02  1.48e-02     3.34e-02     2.82e-02\n5445 -2.27e-02 -1.51e-01  6.69e-02     1.97e-01     1.71e-01\n5446 -1.34e-02 -1.10e-01  4.35e-02     1.08e-01     9.30e-02\n5447 -1.63e-02 -1.26e-01  5.19e-02     1.34e-01     1.16e-01\n5448 -2.59e-02 -1.65e-01  9.17e-02     2.51e-01     2.22e-01\n5449 -2.28e-02 -1.76e-01  1.20e-01     2.33e-01     2.13e-01\n5450 -3.37e-02 -2.10e-01  1.72e-01     4.11e-01     3.80e-01\n5451 -3.21e-02 -2.01e-01  1.84e-01     4.51e-01     4.23e-01\n5452 -3.02e-02 -3.51e-01  2.22e-01     2.52e-01     2.13e-01\n5453 -3.40e-03 -4.85e-02  2.18e-02     3.12e-02     2.78e-02\n5454 -3.32e-02 -1.82e-01  1.01e-01     3.36e-01     3.04e-01\n5455 -2.34e-02 -1.86e-01  1.31e-01     2.56e-01     2.34e-01\n5456 -5.15e-03 -6.75e-02  3.42e-02     4.78e-02     4.29e-02\n5457 -7.03e-03 -8.01e-02  4.04e-02     6.29e-02     5.61e-02\n5458 -2.88e-02 -1.87e-01  1.33e-01     3.20e-01     2.92e-01\n5459 -1.56e-02 -1.65e-01  1.08e-01     1.61e-01     1.46e-01\n5460 -1.91e-02 -1.79e-01  1.23e-01     2.05e-01     1.85e-01\n5461 -1.67e-02 -1.21e-01  5.11e-02     1.33e-01     1.15e-01\n5462 -1.74e-02 -1.26e-01  5.33e-02     1.42e-01     1.21e-01\n5463 -3.24e-02 -1.80e-01  8.62e-02     2.83e-01     2.45e-01\n5464 -3.27e-02 -1.79e-01  8.92e-02     3.12e-01     2.75e-01\n5465 -3.66e-02 -1.98e-01  1.16e-01     3.81e-01     3.41e-01\n5466 -1.98e-03 -2.53e-02  8.46e-03     1.60e-02     1.34e-02\n5467 -2.28e-02 -1.45e-01  6.27e-02     1.87e-01     1.64e-01\n5468 -1.98e-02 -1.39e-01  6.03e-02     1.62e-01     1.40e-01\n5469 -3.39e-03 -3.91e-02  1.36e-02     2.65e-02     2.24e-02\n5470 -4.18e-03 -4.64e-02  1.57e-02     3.26e-02     2.73e-02\n5471 -2.28e-02 -1.48e-01  6.73e-02     1.91e-01     1.67e-01\n5472 -1.32e-02 -1.08e-01  4.47e-02     1.07e-01     9.10e-02\n5473 -1.65e-02 -1.22e-01  5.27e-02     1.33e-01     1.15e-01\n5474 -4.91e-02 -2.36e-01  1.34e-01     3.90e-01     3.33e-01\n5475 -4.66e-02 -2.57e-01  1.50e-01     3.08e-01     2.53e-01\n5476 -3.35e-02 -2.42e-01  1.91e-01     2.88e-01     2.51e-01\n5477 -7.24e-02 -4.50e-01  8.84e-02     7.21e-01     6.33e-01\n5478 -1.11e-01 -4.89e-01  1.54e-01     4.87e-01     3.45e-01\n5479 -2.63e-02 -1.43e-01  4.15e-02     1.15e-01     7.97e-02\n5480 -5.36e-02 -2.50e-01  1.25e-01     5.32e-01     4.74e-01\n5481 -6.29e-02 -3.17e-01  1.41e-01     3.98e-01     3.21e-01\n5482 -4.76e-02 -2.19e-01  5.30e-02     1.95e-01     1.32e-01\n5483 -4.64e-02 -2.08e-01  6.38e-02     2.09e-01     1.51e-01\n5484 -7.89e-02 -4.23e-01  7.09e-02     6.73e-01     5.76e-01\n5485 -9.78e-02 -4.25e-01  7.66e-02     4.80e-01     3.63e-01\n5486 -9.10e-02 -4.06e-01  9.79e-02     4.91e-01     3.78e-01\n5487 -3.10e-02 -1.52e-01  9.15e-02     2.65e-01     2.31e-01\n5488 -3.39e-02 -1.58e-01  9.25e-02     2.79e-01     2.40e-01\n5489 -4.86e-02 -2.03e-01  1.04e-01     4.77e-01     4.22e-01\n5490 -4.34e-02 -1.94e-01  9.83e-02     5.16e-01     4.68e-01\n5491 -4.98e-02 -2.37e-01  1.12e-01     5.83e-01     5.30e-01\n5492 -4.76e-03 -4.00e-02  2.31e-02     3.70e-02     3.11e-02\n5493 -3.74e-02 -1.73e-01  9.93e-02     3.52e-01     3.11e-01\n5494 -3.58e-02 -1.68e-01  9.56e-02     3.10e-01     2.70e-01\n5495 -7.81e-03 -5.74e-02  3.45e-02     5.97e-02     5.02e-02\n5496 -9.57e-03 -6.58e-02  4.11e-02     7.35e-02     6.18e-02\n5497 -3.74e-02 -1.78e-01  1.01e-01     3.60e-01     3.18e-01\n5498 -2.68e-02 -1.39e-01  8.41e-02     2.18e-01     1.87e-01\n5499 -3.14e-02 -1.54e-01  9.05e-02     2.67e-01     2.29e-01\n5500 -1.63e-02 -9.73e-02  5.61e-02     1.22e-01     1.04e-01\n5501 -1.77e-02 -1.00e-01  5.59e-02     1.29e-01     1.09e-01\n5502 -3.41e-02 -1.61e-01  8.76e-02     2.62e-01     2.22e-01\n5503 -3.33e-02 -1.61e-01  9.10e-02     2.92e-01     2.54e-01\n5504 -4.33e-02 -1.90e-01  1.07e-01     3.56e-01     3.09e-01\n5505 -1.90e-03 -1.75e-02  9.65e-03     1.44e-02     1.21e-02\n5506 -2.21e-02 -1.20e-01  7.12e-02     1.71e-01     1.47e-01\n5507 -2.01e-02 -1.13e-01  6.30e-02     1.48e-01     1.26e-01\n5508 -3.17e-03 -2.68e-02  1.46e-02     2.37e-02     1.99e-02\n5509 -4.01e-03 -3.23e-02  1.78e-02     2.95e-02     2.46e-02\n5510 -2.24e-02 -1.26e-01  7.00e-02     1.77e-01     1.51e-01\n5511 -1.30e-02 -8.13e-02  4.88e-02     9.77e-02     8.17e-02\n5512 -1.60e-02 -9.71e-02  5.65e-02     1.22e-01     1.03e-01\n5513 -3.33e-01 -6.28e-01 -4.24e-02     4.78e-01     9.69e-02\n5514 -2.19e-01 -4.96e-01 -4.06e-02     2.70e-01     2.46e-02\n5515 -2.91e-01 -5.95e-01 -3.72e-02     3.81e-01     4.84e-02\n5516 -3.90e-01 -6.72e-01 -8.83e-02     4.92e-01     5.43e-02\n5517 -6.64e-02 -2.30e-01 -1.00e-02     7.51e-02     3.96e-03\n5518 -4.65e-02 -1.76e-01 -6.95e-03     5.48e-02     3.81e-03\n5519 -3.77e-01 -7.05e-01 -2.79e-02     6.42e-01     2.14e-01\n5520 -2.21e-01 -4.94e-01 -4.47e-02     2.69e-01     2.22e-02\n5521 -5.59e-02 -1.97e-01 -8.44e-03     6.44e-02     4.05e-03\n5522 -9.49e-02 -2.85e-01 -1.63e-02     1.13e-01     8.23e-03\n5523 -3.53e-01 -6.39e-01 -7.99e-02     4.46e-01     4.78e-02\n5524 -1.20e-01 -3.58e-01 -1.98e-02     1.39e-01     8.56e-03\n5525 -1.64e-01 -4.21e-01 -2.81e-02     1.91e-01     1.28e-02\n5526 -6.51e-02 -2.52e-01  9.02e-02     5.19e-01     4.42e-01\n5527 -7.64e-02 -3.53e-01  9.52e-02     4.97e-01     4.04e-01\n5528 -6.37e-02 -3.56e-01  1.33e-01     5.98e-01     5.21e-01\n5529 -6.84e-02 -4.61e-01  5.44e-02     7.75e-01     6.92e-01\n5530 -1.37e-01 -6.33e-01  7.40e-02     7.27e-01     5.58e-01\n5531 -2.79e-02 -1.39e-01  4.06e-02     1.19e-01     8.35e-02\n5532 -6.09e-02 -2.39e-01  7.99e-02     6.32e-01     5.60e-01\n5533 -8.38e-02 -3.97e-01  8.49e-02     5.58e-01     4.55e-01\n5534 -4.55e-02 -2.12e-01  5.32e-02     1.88e-01     1.29e-01\n5535 -4.81e-02 -2.06e-01  6.20e-02     2.17e-01     1.60e-01\n5536 -7.77e-02 -3.98e-01  6.70e-02     6.67e-01     5.72e-01\n5537 -9.67e-02 -4.29e-01  7.14e-02     4.91e-01     3.70e-01\n5538 -9.48e-02 -4.39e-01  7.14e-02     5.45e-01     4.28e-01\n5539 -1.72e-02 -1.27e-01  4.90e-02     1.30e-01     1.11e-01\n5540 -1.75e-02 -1.31e-01  5.17e-02     1.26e-01     1.07e-01\n5541 -3.03e-02 -1.95e-01  7.96e-02     2.00e-01     1.67e-01\n5542 -3.32e-02 -1.83e-01  9.09e-02     3.18e-01     2.82e-01\n5543 -3.73e-02 -2.16e-01  1.18e-01     3.14e-01     2.72e-01\n5544 -2.20e-03 -2.72e-02  8.59e-03     1.72e-02     1.44e-02\n5545 -2.32e-02 -1.51e-01  6.34e-02     1.88e-01     1.63e-01\n5546 -2.00e-02 -1.42e-01  5.71e-02     1.53e-01     1.30e-01\n5547 -3.77e-03 -4.06e-02  1.35e-02     2.87e-02     2.42e-02\n5548 -4.71e-03 -4.89e-02  1.67e-02     3.51e-02     2.96e-02\n5549 -2.43e-02 -1.55e-01  6.80e-02     2.07e-01     1.79e-01\n5550 -1.39e-02 -1.12e-01  4.57e-02     1.14e-01     9.79e-02\n5551 -1.69e-02 -1.28e-01  5.39e-02     1.39e-01     1.20e-01\n5552 -1.19e-01 -3.83e-01 -1.10e-02     1.43e-01     1.02e-02\n5553 -3.83e-02 -1.83e-01 -2.63e-03     4.37e-02     2.29e-03\n5554 -7.47e-02 -3.10e-01 -5.79e-03     8.66e-02     4.77e-03\n5555 -8.12e-02 -3.41e-01 -5.79e-03     9.44e-02     5.05e-03\n5556 -6.51e-03 -4.28e-02 -3.95e-04     7.43e-03     3.44e-04\n5557 -5.78e-03 -3.91e-02 -3.40e-04     6.63e-03     3.35e-04\n5558 -2.17e-01 -5.15e-01 -2.72e-02     2.77e-01     2.72e-02\n5559 -3.51e-02 -1.79e-01 -2.41e-03     4.02e-02     1.98e-03\n5560 -6.32e-03 -4.00e-02 -3.84e-04     7.28e-03     3.54e-04\n5561 -1.25e-02 -7.14e-02 -8.54e-04     1.45e-02     7.62e-04\n5562 -7.11e-02 -2.94e-01 -5.65e-03     8.25e-02     4.49e-03\n5563 -1.37e-02 -8.02e-02 -8.78e-04     1.56e-02     7.55e-04\n5564 -2.04e-02 -1.15e-01 -1.36e-03     2.34e-02     1.16e-03\n5565 -1.80e-03 -5.62e-02  5.35e-02     1.63e-02     1.25e-02\n5566 -3.31e-04 -2.02e-02  3.02e-02     4.27e-03     3.30e-03\n5567 -7.81e-04 -3.87e-02  5.35e-02     8.59e-03     6.46e-03\n5568 -7.15e-04 -4.42e-02  7.50e-02     9.88e-03     7.64e-03\n5569 -4.40e-05 -3.99e-03  9.57e-03     6.87e-04     5.42e-04\n5570 -4.32e-05 -3.48e-03  5.21e-03     6.27e-04     5.01e-04\n5571 -4.65e-03 -1.02e-01  7.73e-02     3.82e-02     2.92e-02\n5572 -2.85e-04 -1.89e-02  3.29e-02     3.87e-03     3.02e-03\n5573 -4.52e-05 -3.86e-03  6.58e-03     6.93e-04     5.34e-04\n5574 -1.02e-04 -6.88e-03  1.07e-02     1.41e-03     1.11e-03\n5575 -6.28e-04 -3.89e-02  5.73e-02     8.54e-03     6.75e-03\n5576 -9.94e-05 -8.04e-03  1.60e-02     1.48e-03     1.16e-03\n5577 -1.54e-04 -1.19e-02  2.35e-02     2.20e-03     1.71e-03\n5578 -7.58e-02 -2.70e-01  2.63e-02     1.99e-01     1.05e-01\n5579 -1.08e-01 -3.19e-01  3.02e-03     1.85e-01     5.62e-02\n5580 -1.71e-01 -4.50e-01  1.32e-02     3.17e-01     1.08e-01\n5581 -2.17e-01 -5.12e-01 -7.49e-03     3.89e-01     1.25e-01\n5582 -1.51e-01 -4.21e-01 -1.98e-02     1.83e-01     1.38e-02\n5583 -1.42e-02 -6.50e-02  9.14e-04     2.43e-02     7.27e-03\n5584 -8.33e-02 -2.97e-01  3.99e-02     2.75e-01     1.71e-01\n5585 -1.24e-01 -3.52e-01 -5.27e-03     2.06e-01     5.41e-02\n5586 -2.41e-02 -9.67e-02 -5.22e-04     3.81e-02     9.36e-03\n5587 -2.77e-02 -1.18e-01  2.57e-03     4.94e-02     1.60e-02\n5588 -1.42e-01 -3.97e-01  8.60e-03     2.67e-01     9.51e-02\n5589 -8.96e-02 -2.69e-01 -8.76e-03     1.29e-01     2.42e-02\n5590 -1.11e-01 -3.13e-01 -9.56e-03     1.65e-01     3.43e-02\n5591 -7.26e-02 -3.05e-01  1.61e-02     1.57e-01     7.51e-02\n5592 -6.52e-02 -3.29e-01  6.49e-04     9.71e-02     2.56e-02\n5593 -5.43e-02 -3.45e-01  1.35e-02     1.05e-01     4.19e-02\n5594 -2.39e-01 -5.76e-01 -1.18e-02     3.24e-01     6.50e-02\n5595 -5.81e-02 -4.12e-01 -1.28e-03     6.49e-02     5.14e-03\n5596 -2.01e-02 -1.27e-01 -8.02e-04     2.58e-02     4.35e-03\n5597 -9.69e-02 -3.26e-01  3.76e-02     2.62e-01     1.49e-01\n5598 -8.88e-02 -3.93e-01 -2.07e-03     1.21e-01     2.53e-02\n5599 -3.28e-02 -1.88e-01 -1.12e-03     3.90e-02     4.92e-03\n5600 -4.06e-02 -2.11e-01 -1.96e-03     5.29e-02     9.63e-03\n5601 -2.18e-01 -5.43e-01 -1.36e-02     2.91e-01     5.75e-02\n5602 -9.16e-02 -4.11e-01 -2.61e-03     1.06e-01     1.09e-02\n5603 -1.07e-01 -4.34e-01 -3.63e-03     1.27e-01     1.61e-02\n5604 -1.11e-02 -7.77e-02  4.58e-02     8.68e-02     7.33e-02\n5605 -1.24e-02 -8.23e-02  4.53e-02     9.23e-02     7.85e-02\n5606 -2.69e-02 -1.37e-01  7.54e-02     1.96e-01     1.65e-01\n5607 -2.61e-02 -1.40e-01  8.15e-02     2.21e-01     1.88e-01\n5608 -3.51e-02 -1.77e-01  9.23e-02     2.75e-01     2.35e-01\n5609 -1.25e-03 -1.26e-02  6.90e-03     9.89e-03     8.23e-03\n5610 -1.57e-02 -1.00e-01  5.85e-02     1.25e-01     1.07e-01\n5611 -1.44e-02 -9.19e-02  5.14e-02     1.07e-01     8.96e-02\n5612 -2.14e-03 -1.97e-02  1.04e-02     1.64e-02     1.38e-02\n5613 -2.70e-03 -2.38e-02  1.33e-02     2.04e-02     1.69e-02\n5614 -1.62e-02 -1.03e-01  6.07e-02     1.29e-01     1.09e-01\n5615 -8.98e-03 -6.59e-02  3.86e-02     6.84e-02     5.73e-02\n5616 -1.14e-02 -7.94e-02  4.41e-02     8.65e-02     7.32e-02\n5617 -2.21e-02 -1.48e-01  6.60e-02     1.85e-01     1.62e-01\n5618 -2.01e-02 -1.51e-01  8.15e-02     1.85e-01     1.64e-01\n5619 -3.36e-02 -1.93e-01  1.24e-01     3.51e-01     3.16e-01\n5620 -3.36e-02 -1.89e-01  1.27e-01     3.84e-01     3.52e-01\n5621 -3.06e-02 -2.79e-01  2.08e-01     3.13e-01     2.77e-01\n5622 -2.62e-03 -3.64e-02  1.40e-02     2.25e-02     1.96e-02\n5623 -2.86e-02 -1.71e-01  7.90e-02     2.59e-01     2.28e-01\n5624 -2.23e-02 -1.63e-01  9.29e-02     2.08e-01     1.87e-01\n5625 -4.33e-03 -5.06e-02  2.25e-02     3.65e-02     3.17e-02\n5626 -5.57e-03 -6.23e-02  2.47e-02     4.64e-02     3.98e-02\n5627 -2.66e-02 -1.71e-01  9.32e-02     2.54e-01     2.26e-01\n5628 -1.44e-02 -1.34e-01  7.41e-02     1.35e-01     1.19e-01\n5629 -1.78e-02 -1.49e-01  8.84e-02     1.70e-01     1.52e-01\n5630 -3.81e-02 -1.69e-01  9.85e-02     7.99e-01     7.57e-01\n5631 -5.82e-02 -2.30e-01  1.19e-01     7.68e-01     7.02e-01\n5632 -3.49e-02 -2.21e-01  1.61e-01     8.08e-01     7.65e-01\n5633 -3.21e-02 -1.39e-01  3.01e-02     9.31e-01     8.93e-01\n5634 -1.70e-01 -5.32e-01  4.01e-02     8.77e-01     6.73e-01\n5635 -7.87e-02 -2.67e-01  5.27e-02     3.66e-01     2.77e-01\n5636 -2.56e-02 -1.27e-01  7.21e-02     8.69e-01     8.39e-01\n5637 -6.11e-02 -2.36e-01  9.17e-02     8.16e-01     7.41e-01\n5638 -1.06e-01 -3.23e-01  4.74e-02     5.00e-01     3.75e-01\n5639 -8.87e-02 -2.72e-01  6.12e-02     5.42e-01     4.41e-01\n5640 -4.21e-02 -1.59e-01  3.15e-02     8.98e-01     8.47e-01\n5641 -1.07e-01 -3.58e-01  3.09e-02     8.00e-01     6.69e-01\n5642 -8.54e-02 -2.94e-01  4.00e-02     8.24e-01     7.23e-01\n5643 -6.79e-02 -2.54e-01  8.56e-02     5.30e-01     4.55e-01\n5644 -8.21e-02 -3.71e-01  8.10e-02     5.28e-01     4.32e-01\n5645 -7.00e-02 -4.10e-01  9.30e-02     6.92e-01     6.05e-01\n5646 -6.93e-02 -4.60e-01  5.29e-02     7.72e-01     6.88e-01\n5647 -1.42e-01 -6.71e-01  4.50e-02     7.76e-01     6.02e-01\n5648 -2.65e-02 -1.32e-01  4.00e-02     1.13e-01     8.00e-02\n5649 -6.23e-02 -2.38e-01  8.07e-02     6.35e-01     5.66e-01\n5650 -8.71e-02 -4.10e-01  7.53e-02     5.80e-01     4.75e-01\n5651 -4.28e-02 -1.92e-01  5.04e-02     1.73e-01     1.21e-01\n5652 -4.63e-02 -1.99e-01  5.85e-02     2.08e-01     1.51e-01\n5653 -7.95e-02 -3.87e-01  7.00e-02     6.51e-01     5.57e-01\n5654 -9.67e-02 -4.07e-01  7.31e-02     4.75e-01     3.59e-01\n5655 -9.63e-02 -4.33e-01  7.52e-02     5.37e-01     4.21e-01\n5656 -4.64e-02 -1.97e-01  8.46e-02     3.28e-01     2.76e-01\n5657 -5.20e-02 -2.14e-01  8.05e-02     3.14e-01     2.55e-01\n5658 -4.97e-02 -2.37e-01  1.32e-01     4.26e-01     3.69e-01\n5659 -7.48e-02 -2.31e-01  7.55e-02     6.09e-01     5.24e-01\n5660 -1.87e-01 -4.84e-01  4.87e-02     5.63e-01     3.40e-01\n5661 -1.22e-02 -8.34e-02  1.72e-02     5.67e-02     4.20e-02\n5662 -5.36e-02 -2.07e-01  9.04e-02     4.33e-01     3.79e-01\n5663 -6.30e-02 -2.29e-01  7.71e-02     3.66e-01     2.97e-01\n5664 -2.19e-02 -1.23e-01  2.12e-02     9.27e-02     6.74e-02\n5665 -2.38e-02 -1.24e-01  3.00e-02     1.11e-01     8.37e-02\n5666 -7.09e-02 -2.31e-01  7.36e-02     4.73e-01     3.93e-01\n5667 -7.12e-02 -2.42e-01  4.61e-02     3.00e-01     2.19e-01\n5668 -7.36e-02 -2.46e-01  5.52e-02     3.48e-01     2.64e-01\n5669 -5.48e-02 -2.08e-01  8.84e-02     4.44e-01     3.87e-01\n5670 -5.61e-02 -2.09e-01  8.97e-02     4.48e-01     3.90e-01\n5671 -4.89e-02 -2.02e-01  1.21e-01     6.21e-01     5.69e-01\n5672 -5.30e-02 -1.90e-01  8.23e-02     7.10e-01     6.52e-01\n5673 -7.32e-02 -3.64e-01  8.37e-02     7.46e-01     6.53e-01\n5674 -1.56e-02 -1.04e-01  2.70e-02     8.31e-02     6.46e-02\n5675 -5.63e-02 -2.05e-01  9.24e-02     5.47e-01     4.87e-01\n5676 -6.00e-02 -2.14e-01  9.15e-02     4.96e-01     4.33e-01\n5677 -2.45e-02 -1.39e-01  3.52e-02     1.30e-01     1.03e-01\n5678 -2.85e-02 -1.47e-01  4.39e-02     1.56e-01     1.26e-01\n5679 -6.19e-02 -2.11e-01  8.67e-02     5.68e-01     5.03e-01\n5680 -6.15e-02 -2.21e-01  7.73e-02     3.96e-01     3.29e-01\n5681 -6.35e-02 -2.21e-01  8.10e-02     4.56e-01     3.88e-01\n5682 -9.75e-02 -3.43e-01 -8.30e-03     1.17e-01     8.51e-03\n5683 -3.09e-02 -1.66e-01 -2.03e-03     3.54e-02     1.90e-03\n5684 -5.56e-02 -2.69e-01 -3.38e-03     6.54e-02     3.99e-03\n5685 -7.05e-02 -3.21e-01 -4.33e-03     8.13e-02     4.18e-03\n5686 -5.42e-03 -3.69e-02 -2.95e-04     6.21e-03     2.92e-04\n5687 -4.93e-03 -3.42e-02 -2.56e-04     5.64e-03     2.81e-04\n5688 -1.89e-01 -5.01e-01 -2.07e-02     2.39e-01     2.27e-02\n5689 -2.90e-02 -1.63e-01 -1.79e-03     3.32e-02     1.67e-03\n5690 -5.39e-03 -3.76e-02 -2.90e-04     6.14e-03     2.93e-04\n5691 -1.09e-02 -7.00e-02 -6.56e-04     1.24e-02     6.47e-04\n5692 -6.20e-02 -2.82e-01 -3.95e-03     7.11e-02     3.81e-03\n5693 -1.16e-02 -7.68e-02 -6.56e-04     1.30e-02     6.13e-04\n5694 -1.73e-02 -1.07e-01 -1.02e-03     1.96e-02     9.26e-04\n5695 -7.78e-03 -7.12e-02  2.92e-02     6.31e-02     5.38e-02\n5696 -8.47e-03 -7.79e-02  3.06e-02     6.65e-02     5.69e-02\n5697 -1.83e-02 -1.36e-01  5.88e-02     1.45e-01     1.24e-01\n5698 -1.92e-02 -1.35e-01  6.04e-02     1.64e-01     1.42e-01\n5699 -2.36e-02 -1.60e-01  8.29e-02     2.09e-01     1.82e-01\n5700 -8.34e-04 -1.18e-02  3.82e-03     6.97e-03     5.89e-03\n5701 -1.12e-02 -9.50e-02  3.88e-02     9.09e-02     7.77e-02\n5702 -9.76e-03 -8.65e-02  3.46e-02     7.72e-02     6.58e-02\n5703 -1.43e-03 -1.93e-02  5.95e-03     1.15e-02     9.72e-03\n5704 -1.80e-03 -2.19e-02  7.77e-03     1.45e-02     1.22e-02\n5705 -1.13e-02 -1.02e-01  3.98e-02     9.48e-02     7.97e-02\n5706 -5.96e-03 -6.23e-02  2.47e-02     4.89e-02     4.13e-02\n5707 -7.59e-03 -7.28e-02  2.92e-02     6.26e-02     5.36e-02\n5708 -5.53e-02 -2.06e-01  9.31e-02     5.09e-01     4.50e-01\n5709 -5.71e-02 -2.13e-01  9.91e-02     5.14e-01     4.50e-01\n5710 -4.45e-02 -2.02e-01  1.29e-01     6.77e-01     6.27e-01\n5711 -4.70e-02 -1.83e-01  7.94e-02     7.61e-01     7.07e-01\n5712 -6.62e-02 -3.68e-01  8.33e-02     7.90e-01     7.07e-01\n5713 -2.00e-02 -1.22e-01  3.28e-02     1.05e-01     8.25e-02\n5714 -5.44e-02 -2.01e-01  9.50e-02     6.14e-01     5.54e-01\n5715 -5.91e-02 -2.14e-01  9.45e-02     5.60e-01     4.96e-01\n5716 -3.07e-02 -1.59e-01  4.62e-02     1.64e-01     1.30e-01\n5717 -3.43e-02 -1.68e-01  5.16e-02     1.95e-01     1.57e-01\n5718 -5.87e-02 -2.05e-01  8.55e-02     6.34e-01     5.70e-01\n5719 -6.57e-02 -2.25e-01  8.02e-02     4.61e-01     3.91e-01\n5720 -6.55e-02 -2.21e-01  8.60e-02     5.22e-01     4.52e-01\n5721 -1.19e-02 -9.80e-02  3.69e-02     9.36e-02     7.93e-02\n5722 -1.27e-02 -1.02e-01  3.85e-02     9.89e-02     8.49e-02\n5723 -2.59e-02 -1.58e-01  6.77e-02     2.10e-01     1.80e-01\n5724 -2.62e-02 -1.59e-01  7.15e-02     2.34e-01     2.03e-01\n5725 -3.00e-02 -1.84e-01  9.98e-02     2.91e-01     2.57e-01\n5726 -1.34e-03 -1.71e-02  5.57e-03     1.09e-02     9.18e-03\n5727 -1.66e-02 -1.23e-01  4.94e-02     1.36e-01     1.14e-01\n5728 -1.44e-02 -1.14e-01  4.36e-02     1.15e-01     9.90e-02\n5729 -2.28e-03 -2.71e-02  8.74e-03     1.79e-02     1.50e-02\n5730 -2.95e-03 -3.29e-02  1.09e-02     2.23e-02     1.88e-02\n5731 -1.67e-02 -1.26e-01  4.94e-02     1.39e-01     1.19e-01\n5732 -9.32e-03 -8.24e-02  3.08e-02     7.42e-02     6.27e-02\n5733 -1.16e-02 -9.81e-02  3.71e-02     9.31e-02     7.92e-02\n5734 -1.72e-01 -4.41e-01 -2.18e-02     2.32e-01     3.66e-02\n5735 -9.05e-02 -2.87e-01 -1.18e-02     1.09e-01     8.87e-03\n5736 -1.21e-01 -3.74e-01 -1.01e-02     1.52e-01     1.79e-02\n5737 -2.13e-01 -5.09e-01 -3.58e-02     2.59e-01     2.02e-02\n5738 -2.48e-02 -1.14e-01 -3.03e-03     2.83e-02     1.43e-03\n5739 -1.77e-02 -8.16e-02 -2.04e-03     2.08e-02     1.37e-03\n5740 -2.48e-01 -5.53e-01 -1.90e-02     3.81e-01     8.75e-02\n5741 -9.58e-02 -3.02e-01 -1.41e-02     1.13e-01     8.14e-03\n5742 -2.16e-02 -9.68e-02 -2.51e-03     2.49e-02     1.47e-03\n5743 -3.77e-02 -1.49e-01 -4.98e-03     4.42e-02     3.08e-03\n5744 -1.91e-01 -4.70e-01 -3.14e-02     2.31e-01     1.74e-02\n5745 -4.83e-02 -1.97e-01 -6.25e-03     5.57e-02     3.05e-03\n5746 -6.84e-02 -2.45e-01 -9.42e-03     7.83e-02     4.63e-03\n5747 -1.91e-01 -4.66e-01 -2.83e-02     2.48e-01     2.93e-02\n5748 -8.91e-02 -3.02e-01 -1.15e-02     1.04e-01     6.78e-03\n5749 -1.40e-01 -4.07e-01 -1.86e-02     1.70e-01     1.43e-02\n5750 -1.90e-01 -4.84e-01 -2.90e-02     2.24e-01     1.54e-02\n5751 -1.94e-02 -9.70e-02 -2.04e-03     2.17e-02     1.08e-03\n5752 -1.52e-02 -7.64e-02 -1.50e-03     1.75e-02     1.06e-03\n5753 -2.80e-01 -5.87e-01 -3.87e-02     4.03e-01     7.41e-02\n5754 -8.67e-02 -2.86e-01 -1.17e-02     1.01e-01     6.18e-03\n5755 -1.74e-02 -8.23e-02 -1.94e-03     2.01e-02     1.10e-03\n5756 -3.26e-02 -1.38e-01 -3.81e-03     3.82e-02     2.32e-03\n5757 -1.67e-01 -4.40e-01 -2.31e-02     2.00e-01     1.36e-02\n5758 -3.90e-02 -1.67e-01 -4.33e-03     4.42e-02     2.31e-03\n5759 -5.70e-02 -2.19e-01 -6.23e-03     6.56e-02     3.52e-03\n5760 -1.92e-01 -4.84e-01  1.03e-02     4.13e-01     1.92e-01\n5761 -2.11e-01 -5.55e-01 -8.86e-03     2.92e-01     6.78e-02\n5762 -2.12e-01 -5.60e-01  8.72e-03     3.52e-01     1.18e-01\n5763 -4.03e-01 -6.88e-01 -4.93e-02     5.95e-01     1.51e-01\n5764 -1.59e-01 -6.57e-01 -4.79e-03     1.74e-01     1.26e-02\n5765 -5.64e-02 -2.73e-01 -3.39e-03     7.00e-02     1.10e-02\n5766 -1.81e-01 -4.42e-01  2.25e-02     5.60e-01     3.47e-01\n5767 -2.48e-01 -5.92e-01 -1.62e-02     3.27e-01     6.43e-02\n5768 -8.30e-02 -3.63e-01 -4.50e-03     9.68e-02     1.20e-02\n5769 -1.09e-01 -3.92e-01 -7.43e-03     1.36e-01     2.41e-02\n5770 -3.60e-01 -6.63e-01 -4.58e-02     5.25e-01     1.32e-01\n5771 -2.11e-01 -5.95e-01 -9.59e-03     2.41e-01     2.63e-02\n5772 -2.52e-01 -6.22e-01 -1.53e-02     3.00e-01     3.90e-02\n5773 -3.51e-02 -1.74e-01  9.47e-02     1.79e-01     1.36e-01\n5774 -2.71e-02 -1.47e-01  8.49e-02     1.20e-01     8.54e-02\n5775 -2.55e-02 -1.62e-01  1.08e-01     1.18e-01     8.57e-02\n5776 -6.58e-02 -3.01e-01  1.32e-01     3.98e-01     3.18e-01\n5777 -2.15e-02 -1.60e-01  1.51e-01     1.01e-01     7.27e-02\n5778 -6.59e-03 -5.43e-02  2.64e-02     3.46e-02     2.54e-02\n5779 -4.86e-02 -2.15e-01  1.09e-01     2.88e-01     2.28e-01\n5780 -3.45e-02 -1.77e-01  9.92e-02     1.56e-01     1.12e-01\n5781 -9.58e-03 -8.29e-02  4.93e-02     5.38e-02     4.08e-02\n5782 -1.36e-02 -9.14e-02  4.43e-02     6.90e-02     5.14e-02\n5783 -5.29e-02 -2.66e-01  1.19e-01     3.56e-01     2.90e-01\n5784 -2.67e-02 -1.83e-01  1.24e-01     1.48e-01     1.11e-01\n5785 -3.39e-02 -1.93e-01  1.17e-01     1.73e-01     1.29e-01\n5786 -2.75e-02 -1.68e-01  7.24e-02     2.28e-01     1.96e-01\n5787 -2.85e-02 -1.73e-01  7.45e-02     2.32e-01     2.03e-01\n5788 -4.30e-02 -2.14e-01  1.10e-01     3.80e-01     3.30e-01\n5789 -4.04e-02 -1.88e-01  1.03e-01     4.73e-01     4.31e-01\n5790 -4.31e-02 -2.14e-01  1.40e-01     5.05e-01     4.56e-01\n5791 -4.07e-03 -4.74e-02  1.63e-02     3.22e-02     2.72e-02\n5792 -3.42e-02 -1.82e-01  8.66e-02     3.12e-01     2.75e-01\n5793 -3.13e-02 -1.79e-01  8.11e-02     2.65e-01     2.34e-01\n5794 -6.70e-03 -6.92e-02  2.34e-02     5.20e-02     4.45e-02\n5795 -8.32e-03 -8.13e-02  2.74e-02     6.31e-02     5.41e-02\n5796 -3.40e-02 -1.83e-01  9.10e-02     3.27e-01     2.90e-01\n5797 -2.28e-02 -1.55e-01  6.55e-02     1.93e-01     1.67e-01\n5798 -2.71e-02 -1.66e-01  7.59e-02     2.34e-01     2.04e-01\n5799 -1.77e-02 -1.01e-01  5.29e-02     1.19e-01     9.70e-02\n5800 -1.90e-02 -1.04e-01  5.45e-02     1.15e-01     9.19e-02\n5801 -3.08e-02 -1.63e-01  8.53e-02     1.78e-01     1.42e-01\n5802 -3.56e-02 -1.71e-01  9.02e-02     2.98e-01     2.54e-01\n5803 -4.48e-02 -2.11e-01  1.03e-01     2.89e-01     2.33e-01\n5804 -2.05e-03 -2.01e-02  1.01e-02     1.56e-02     1.27e-02\n5805 -2.41e-02 -1.29e-01  6.90e-02     1.73e-01     1.44e-01\n5806 -2.17e-02 -1.17e-01  5.85e-02     1.39e-01     1.14e-01\n5807 -3.49e-03 -2.99e-02  1.65e-02     2.60e-02     2.15e-02\n5808 -4.46e-03 -3.57e-02  2.01e-02     3.18e-02     2.64e-02\n5809 -2.35e-02 -1.31e-01  7.55e-02     1.91e-01     1.63e-01\n5810 -1.40e-02 -9.14e-02  5.16e-02     1.04e-01     8.64e-02\n5811 -1.77e-02 -1.05e-01  5.77e-02     1.27e-01     1.05e-01\n5812 -5.03e-02 -2.14e-01  1.17e-01     4.92e-01     4.38e-01\n5813 -5.83e-02 -2.43e-01  1.25e-01     4.44e-01     3.86e-01\n5814 -4.21e-02 -2.60e-01  1.77e-01     4.86e-01     4.38e-01\n5815 -5.94e-02 -2.05e-01  7.73e-02     7.75e-01     7.06e-01\n5816 -1.76e-01 -4.87e-01  9.81e-02     6.55e-01     4.42e-01\n5817 -2.80e-02 -1.58e-01  2.93e-02     1.27e-01     9.66e-02\n5818 -4.76e-02 -1.98e-01  1.19e-01     6.20e-01     5.67e-01\n5819 -6.90e-02 -2.49e-01  1.19e-01     5.18e-01     4.45e-01\n5820 -4.99e-02 -2.11e-01  3.76e-02     2.04e-01     1.48e-01\n5821 -4.74e-02 -1.97e-01  5.11e-02     2.32e-01     1.80e-01\n5822 -7.06e-02 -2.18e-01  7.02e-02     6.91e-01     6.10e-01\n5823 -1.04e-01 -3.01e-01  5.75e-02     5.09e-01     3.91e-01\n5824 -9.40e-02 -2.74e-01  7.22e-02     5.49e-01     4.45e-01\n5825 -2.78e-02 -1.43e-01  7.60e-02     2.11e-01     1.78e-01\n5826 -3.02e-02 -1.49e-01  8.02e-02     2.14e-01     1.78e-01\n5827 -4.76e-02 -2.17e-01  1.09e-01     3.52e-01     2.94e-01\n5828 -4.31e-02 -1.90e-01  1.01e-01     4.50e-01     3.99e-01\n5829 -5.42e-02 -2.42e-01  1.13e-01     4.79e-01     4.17e-01\n5830 -3.69e-03 -3.38e-02  1.76e-02     2.90e-02     2.42e-02\n5831 -3.37e-02 -1.65e-01  9.15e-02     2.90e-01     2.51e-01\n5832 -3.26e-02 -1.57e-01  8.40e-02     2.49e-01     2.09e-01\n5833 -6.15e-03 -4.96e-02  2.86e-02     4.80e-02     3.99e-02\n5834 -7.61e-03 -5.79e-02  3.33e-02     5.87e-02     4.82e-02\n5835 -3.33e-02 -1.67e-01  9.25e-02     3.04e-01     2.66e-01\n5836 -2.23e-02 -1.28e-01  7.31e-02     1.78e-01     1.51e-01\n5837 -2.69e-02 -1.43e-01  8.05e-02     2.18e-01     1.85e-01\n5838 -5.57e-02 -2.49e-01  8.59e-02     2.63e-01     2.01e-01\n5839 -7.11e-02 -3.05e-01  4.95e-02     1.94e-01     1.13e-01\n5840 -4.62e-02 -2.95e-01  8.29e-02     1.86e-01     1.34e-01\n5841 -2.22e-01 -4.74e-01  2.15e-02     5.57e-01     3.09e-01\n5842 -1.83e-01 -5.53e-01 -7.82e-03     2.35e-01     4.31e-02\n5843 -3.18e-02 -1.61e-01  1.05e-03     6.12e-02     2.52e-02\n5844 -6.25e-02 -2.47e-01  1.13e-01     3.93e-01     3.26e-01\n5845 -1.12e-01 -3.65e-01  3.62e-02     2.55e-01     1.29e-01\n5846 -6.43e-02 -2.49e-01 -3.70e-03     1.04e-01     3.31e-02\n5847 -6.03e-02 -2.35e-01  3.26e-03     1.19e-01     5.28e-02\n5848 -2.09e-01 -4.49e-01 -2.09e-03     5.07e-01     2.71e-01\n5849 -1.88e-01 -4.59e-01 -1.67e-02     2.78e-01     7.94e-02\n5850 -1.80e-01 -4.47e-01 -6.74e-03     3.02e-01     1.06e-01\n5851 -2.52e-02 -1.52e-01  6.87e-02     1.44e-01     1.12e-01\n5852 -1.69e-02 -1.33e-01  8.62e-02     9.36e-02     7.08e-02\n5853 -3.22e-02 -2.08e-01  1.26e-01     1.67e-01     1.23e-01\n5854 -3.28e-02 -2.48e-01  1.67e-01     2.15e-01     1.71e-01\n5855 -4.22e-03 -7.27e-02  1.56e-01     3.17e-02     2.49e-02\n5856 -2.26e-03 -2.59e-02  1.61e-02     1.34e-02     9.89e-03\n5857 -3.47e-02 -1.82e-01  7.88e-02     2.21e-01     1.78e-01\n5858 -1.61e-02 -1.46e-01  1.05e-01     9.72e-02     7.42e-02\n5859 -2.77e-03 -3.42e-02  2.65e-02     1.78e-02     1.35e-02\n5860 -4.71e-03 -4.66e-02  3.04e-02     2.77e-02     2.05e-02\n5861 -2.55e-02 -1.97e-01  1.21e-01     1.59e-01     1.24e-01\n5862 -7.49e-03 -8.80e-02  8.79e-02     4.87e-02     3.77e-02\n5863 -1.04e-02 -1.13e-01  1.05e-01     6.71e-02     5.25e-02\n5864 -1.14e-02 -7.69e-02  4.48e-02     8.73e-02     7.36e-02\n5865 -1.26e-02 -8.12e-02  4.66e-02     9.32e-02     7.80e-02\n5866 -2.66e-02 -1.40e-01  7.55e-02     1.97e-01     1.66e-01\n5867 -2.63e-02 -1.39e-01  8.18e-02     2.20e-01     1.90e-01\n5868 -3.49e-02 -1.75e-01  9.74e-02     2.78e-01     2.35e-01\n5869 -1.26e-03 -1.32e-02  6.53e-03     1.01e-02     8.45e-03\n5870 -1.60e-02 -9.78e-02  5.74e-02     1.25e-01     1.06e-01\n5871 -1.40e-02 -9.17e-02  5.11e-02     1.08e-01     9.02e-02\n5872 -2.13e-03 -2.03e-02  1.07e-02     1.67e-02     1.39e-02\n5873 -2.68e-03 -2.34e-02  1.34e-02     2.06e-02     1.72e-02\n5874 -1.62e-02 -1.04e-01  5.84e-02     1.29e-01     1.10e-01\n5875 -9.06e-03 -6.48e-02  3.68e-02     6.88e-02     5.73e-02\n5876 -1.13e-02 -7.80e-02  4.43e-02     8.76e-02     7.28e-02\n5877 -3.28e-02 -1.76e-01  8.13e-02     2.87e-01     2.52e-01\n5878 -3.38e-02 -1.79e-01  8.60e-02     2.90e-01     2.53e-01\n5879 -4.72e-02 -2.20e-01  1.16e-01     4.51e-01     3.96e-01\n5880 -4.11e-02 -1.86e-01  1.06e-01     5.52e-01     5.05e-01\n5881 -4.26e-02 -2.13e-01  1.53e-01     5.77e-01     5.26e-01\n5882 -5.52e-03 -6.01e-02  2.05e-02     4.30e-02     3.62e-02\n5883 -3.87e-02 -1.86e-01  9.15e-02     3.81e-01     3.40e-01\n5884 -3.55e-02 -1.83e-01  9.10e-02     3.29e-01     2.90e-01\n5885 -9.19e-03 -8.28e-02  2.94e-02     7.04e-02     5.97e-02\n5886 -1.13e-02 -9.86e-02  3.50e-02     8.60e-02     7.31e-02\n5887 -3.80e-02 -1.84e-01  9.55e-02     3.97e-01     3.59e-01\n5888 -2.81e-02 -1.66e-01  7.64e-02     2.45e-01     2.16e-01\n5889 -3.23e-02 -1.77e-01  8.50e-02     2.95e-01     2.59e-01\n5890 -7.75e-03 -7.53e-02  2.77e-02     6.15e-02     5.18e-02\n5891 -8.43e-03 -7.85e-02  2.90e-02     6.54e-02     5.48e-02\n5892 -1.84e-02 -1.37e-01  5.67e-02     1.45e-01     1.22e-01\n5893 -1.92e-02 -1.36e-01  5.99e-02     1.62e-01     1.40e-01\n5894 -2.40e-02 -1.60e-01  8.44e-02     2.07e-01     1.80e-01\n5895 -8.48e-04 -1.22e-02  3.64e-03     6.75e-03     5.69e-03\n5896 -1.15e-02 -9.97e-02  3.69e-02     8.81e-02     7.58e-02\n5897 -9.50e-03 -8.84e-02  3.41e-02     7.58e-02     6.40e-02\n5898 -1.44e-03 -1.92e-02  6.17e-03     1.13e-02     9.46e-03\n5899 -1.82e-03 -2.34e-02  7.57e-03     1.42e-02     1.19e-02\n5900 -1.15e-02 -1.01e-01  3.84e-02     9.20e-02     7.86e-02\n5901 -6.06e-03 -6.24e-02  2.30e-02     4.83e-02     4.07e-02\n5902 -7.71e-03 -7.70e-02  2.83e-02     6.16e-02     5.17e-02\n5903 -2.01e-02 -1.67e-01  1.13e-01     2.03e-01     1.84e-01\n5904 -1.63e-02 -1.90e-01  1.26e-01     1.46e-01     1.32e-01\n5905 -2.54e-02 -2.44e-01  1.81e-01     2.49e-01     2.27e-01\n5906 -2.98e-02 -2.62e-01  2.26e-01     3.20e-01     2.92e-01\n5907 -1.01e-02 -3.05e-01  9.48e-02     6.66e-02     5.36e-02\n5908 -2.27e-03 -4.45e-02  2.43e-02     2.15e-02     1.91e-02\n5909 -2.82e-02 -1.79e-01  1.18e-01     3.00e-01     2.73e-01\n5910 -1.68e-02 -2.16e-01  1.33e-01     1.56e-01     1.40e-01\n5911 -3.43e-03 -6.51e-02  3.45e-02     3.00e-02     2.65e-02\n5912 -4.86e-03 -7.98e-02  4.19e-02     4.43e-02     3.97e-02\n5913 -2.25e-02 -2.23e-01  1.69e-01     2.41e-01     2.17e-01\n5914 -1.07e-02 -1.85e-01  8.87e-02     8.62e-02     7.44e-02\n5915 -1.41e-02 -2.05e-01  1.15e-01     1.17e-01     1.02e-01\n5916 -1.19e-02 -9.90e-02  3.77e-02     9.28e-02     7.92e-02\n5917 -1.25e-02 -1.01e-01  4.06e-02     9.51e-02     8.13e-02\n5918 -2.51e-02 -1.63e-01  7.26e-02     1.78e-01     1.53e-01\n5919 -2.66e-02 -1.63e-01  7.90e-02     2.36e-01     2.06e-01\n5920 -3.12e-02 -1.83e-01  1.04e-01     2.68e-01     2.34e-01\n5921 -1.37e-03 -1.89e-02  5.81e-03     1.11e-02     9.39e-03\n5922 -1.69e-02 -1.26e-01  5.16e-02     1.34e-01     1.16e-01\n5923 -1.41e-02 -1.15e-01  4.55e-02     1.13e-01     9.60e-02\n5924 -2.32e-03 -2.93e-02  9.20e-03     1.84e-02     1.57e-02\n5925 -2.97e-03 -3.44e-02  1.10e-02     2.24e-02     1.91e-02\n5926 -1.73e-02 -1.29e-01  5.28e-02     1.42e-01     1.23e-01\n5927 -9.56e-03 -8.66e-02  3.47e-02     7.53e-02     6.52e-02\n5928 -1.18e-02 -1.02e-01  3.95e-02     9.45e-02     8.15e-02\n5929 -4.57e-02 -2.09e-01  1.23e-01     4.72e-01     4.26e-01\n5930 -4.26e-02 -2.20e-01  1.38e-01     4.28e-01     3.85e-01\n5931 -3.33e-02 -2.48e-01  1.83e-01     4.74e-01     4.42e-01\n5932 -4.19e-02 -1.69e-01  9.45e-02     7.58e-01     7.14e-01\n5933 -5.93e-02 -3.16e-01  1.66e-01     6.75e-01     6.02e-01\n5934 -1.98e-02 -1.34e-01  3.77e-02     1.15e-01     9.23e-02\n5935 -4.62e-02 -1.97e-01  1.18e-01     5.95e-01     5.48e-01\n5936 -4.70e-02 -2.17e-01  1.35e-01     5.01e-01     4.55e-01\n5937 -3.33e-02 -1.72e-01  5.13e-02     1.88e-01     1.49e-01\n5938 -3.45e-02 -1.75e-01  6.04e-02     2.13e-01     1.74e-01\n5939 -5.48e-02 -1.95e-01  8.59e-02     6.68e-01     6.05e-01\n5940 -6.31e-02 -2.24e-01  8.63e-02     4.89e-01     4.19e-01\n5941 -5.85e-02 -2.18e-01  1.00e-01     5.27e-01     4.65e-01\n5942 -5.39e-02 -2.09e-01  9.15e-02     4.41e-01     3.84e-01\n5943 -5.49e-02 -2.14e-01  9.40e-02     4.46e-01     3.87e-01\n5944 -4.69e-02 -2.05e-01  1.19e-01     6.18e-01     5.64e-01\n5945 -5.29e-02 -1.91e-01  8.48e-02     7.07e-01     6.50e-01\n5946 -7.02e-02 -3.63e-01  8.86e-02     7.41e-01     6.54e-01\n5947 -1.53e-02 -1.03e-01  2.63e-02     8.08e-02     6.44e-02\n5948 -5.69e-02 -2.08e-01  9.38e-02     5.48e-01     4.88e-01\n5949 -5.84e-02 -2.14e-01  9.31e-02     4.93e-01     4.31e-01\n5950 -2.42e-02 -1.39e-01  3.63e-02     1.31e-01     1.03e-01\n5951 -2.80e-02 -1.50e-01  4.40e-02     1.56e-01     1.24e-01\n5952 -6.13e-02 -2.14e-01  8.65e-02     5.67e-01     5.02e-01\n5953 -6.04e-02 -2.20e-01  7.53e-02     3.96e-01     3.28e-01\n5954 -6.27e-02 -2.24e-01  8.29e-02     4.55e-01     3.86e-01\n5955 -6.21e-02 -2.28e-01  8.61e-02     4.04e-01     3.32e-01\n5956 -7.52e-02 -3.08e-01  7.98e-02     4.07e-01     3.17e-01\n5957 -7.55e-02 -3.79e-01  9.54e-02     5.80e-01     4.88e-01\n5958 -8.14e-02 -4.24e-01  6.59e-02     6.69e-01     5.72e-01\n5959 -1.52e-01 -6.13e-01  5.70e-02     6.82e-01     4.97e-01\n5960 -1.63e-02 -9.27e-02  2.70e-02     6.88e-02     4.82e-02\n5961 -6.49e-02 -2.28e-01  8.64e-02     5.04e-01     4.32e-01\n5962 -8.24e-02 -3.53e-01  7.69e-02     4.52e-01     3.52e-01\n5963 -2.78e-02 -1.36e-01  3.69e-02     1.11e-01     7.56e-02\n5964 -3.03e-02 -1.43e-01  4.42e-02     1.33e-01     9.61e-02\n5965 -7.96e-02 -3.49e-01  7.86e-02     5.24e-01     4.27e-01\n5966 -7.99e-02 -3.25e-01  6.67e-02     3.50e-01     2.50e-01\n5967 -8.64e-02 -3.55e-01  7.30e-02     4.07e-01     3.05e-01\n5968 -8.37e-05 -3.08e-02  3.97e-02     3.19e-03     2.33e-03\n5969 -1.64e-05 -8.25e-03  1.58e-02     7.13e-04     5.10e-04\n5970 -3.18e-05 -1.75e-02  3.22e-02     1.54e-03     1.09e-03\n5971 -3.49e-05 -1.93e-02  3.47e-02     1.55e-03     1.13e-03\n5972 -2.09e-06 -1.42e-03  2.78e-03     1.09e-04     7.51e-05\n5973 -2.10e-06 -1.35e-03  2.37e-03     1.04e-04     7.87e-05\n5974 -2.43e-04 -6.55e-02  6.99e-02     8.57e-03     6.20e-03\n5975 -1.36e-05 -7.86e-03  1.46e-02     6.37e-04     4.61e-04\n5976 -2.19e-06 -1.45e-03  2.71e-03     1.14e-04     8.18e-05\n5977 -4.81e-06 -2.75e-03  5.36e-03     2.33e-04     1.68e-04\n5978 -3.01e-05 -1.64e-02  2.75e-02     1.43e-03     1.01e-03\n5979 -4.86e-06 -3.00e-03  5.65e-03     2.35e-04     1.67e-04\n5980 -7.21e-06 -4.56e-03  8.81e-03     3.53e-04     2.46e-04\n5981 -8.01e-05 -2.99e-02  4.02e-02     3.49e-03     2.56e-03\n5982 -1.60e-05 -7.87e-03  1.58e-02     7.58e-04     5.47e-04\n5983 -3.52e-05 -1.74e-02  3.44e-02     1.62e-03     1.15e-03\n5984 -3.61e-05 -1.79e-02  3.68e-02     1.68e-03     1.25e-03\n5985 -2.16e-06 -1.32e-03  3.57e-03     1.14e-04     8.34e-05\n5986 -2.17e-06 -1.37e-03  2.80e-03     1.11e-04     7.99e-05\n5987 -2.62e-04 -6.30e-02  6.90e-02     9.12e-03     6.69e-03\n5988 -1.36e-05 -7.61e-03  1.73e-02     6.84e-04     4.98e-04\n5989 -2.40e-06 -1.38e-03  2.98e-03     1.20e-04     8.73e-05\n5990 -5.03e-06 -2.95e-03  5.49e-03     2.48e-04     1.79e-04\n5991 -3.10e-05 -1.68e-02  2.97e-02     1.50e-03     1.10e-03\n5992 -4.84e-06 -3.00e-03  6.44e-03     2.50e-04     1.86e-04\n5993 -7.24e-06 -4.51e-03  9.94e-03     3.83e-04     2.83e-04\n5994 -1.16e-01 -4.25e-01  7.48e-02     5.18e-01     3.80e-01\n5995 -1.73e-01 -5.01e-01  6.30e-02     4.50e-01     2.43e-01\n5996 -1.39e-01 -5.11e-01  1.16e-01     4.93e-01     3.20e-01\n5997 -2.32e-01 -6.85e-01  1.32e-02     7.70e-01     5.08e-01\n5998 -3.40e-01 -6.49e-01 -2.67e-02     5.14e-01     1.03e-01\n5999 -6.56e-02 -2.50e-01  1.39e-02     1.31e-01     5.12e-02\n6000 -9.88e-02 -4.04e-01  7.13e-02     6.44e-01     5.25e-01\n6001 -2.15e-01 -5.61e-01  4.21e-02     5.20e-01     2.68e-01\n6002 -1.11e-01 -3.37e-01  6.40e-03     2.02e-01     6.90e-02\n6003 -1.12e-01 -3.51e-01  1.94e-02     2.38e-01     1.04e-01\n6004 -2.19e-01 -6.36e-01  1.89e-02     6.94e-01     4.37e-01\n6005 -2.66e-01 -5.73e-01 -7.77e-03     4.78e-01     1.64e-01\n6006 -2.71e-01 -5.89e-01  2.87e-03     5.27e-01     2.16e-01\n6007 -5.41e-02 -2.09e-01  8.89e-02     4.43e-01     3.85e-01\n6008 -5.46e-02 -2.12e-01  9.11e-02     4.45e-01     3.87e-01\n6009 -4.80e-02 -2.08e-01  1.25e-01     6.21e-01     5.68e-01\n6010 -5.31e-02 -1.94e-01  8.39e-02     7.06e-01     6.50e-01\n6011 -7.15e-02 -3.44e-01  8.51e-02     7.42e-01     6.54e-01\n6012 -1.49e-02 -1.05e-01  2.69e-02     8.07e-02     6.42e-02\n6013 -5.68e-02 -2.09e-01  9.16e-02     5.48e-01     4.86e-01\n6014 -5.88e-02 -2.14e-01  9.09e-02     4.94e-01     4.30e-01\n6015 -2.43e-02 -1.39e-01  3.93e-02     1.30e-01     1.03e-01\n6016 -2.78e-02 -1.46e-01  4.57e-02     1.55e-01     1.25e-01\n6017 -6.11e-02 -2.14e-01  8.78e-02     5.67e-01     5.01e-01\n6018 -5.99e-02 -2.15e-01  7.86e-02     3.95e-01     3.27e-01\n6019 -6.23e-02 -2.21e-01  8.36e-02     4.52e-01     3.85e-01\n6020 -2.25e-02 -1.21e-01  6.98e-02     1.72e-01     1.45e-01\n6021 -2.54e-02 -1.34e-01  6.74e-02     1.74e-01     1.46e-01\n6022 -4.40e-02 -1.96e-01  9.45e-02     3.32e-01     2.80e-01\n6023 -4.29e-02 -2.03e-01  9.64e-02     3.66e-01     3.16e-01\n6024 -4.19e-02 -2.65e-01  1.79e-01     2.94e-01     2.47e-01\n6025 -3.01e-03 -2.50e-02  1.32e-02     2.11e-02     1.71e-02\n6026 -2.89e-02 -1.44e-01  8.27e-02     2.40e-01     2.04e-01\n6027 -2.78e-02 -1.46e-01  7.52e-02     1.98e-01     1.63e-01\n6028 -5.05e-03 -3.92e-02  2.04e-02     3.41e-02     2.77e-02\n6029 -6.23e-03 -4.71e-02  2.44e-02     4.23e-02     3.48e-02\n6030 -3.08e-02 -1.56e-01  8.25e-02     2.38e-01     2.03e-01\n6031 -1.94e-02 -1.16e-01  5.97e-02     1.27e-01     1.03e-01\n6032 -2.41e-02 -1.31e-01  6.88e-02     1.61e-01     1.32e-01\n6033 -7.93e-03 -7.55e-02  2.60e-02     6.27e-02     5.28e-02\n6034 -8.26e-03 -7.88e-02  2.82e-02     6.60e-02     5.61e-02\n6035 -1.83e-02 -1.36e-01  5.44e-02     1.45e-01     1.25e-01\n6036 -1.95e-02 -1.36e-01  5.90e-02     1.64e-01     1.42e-01\n6037 -2.39e-02 -1.62e-01  8.19e-02     2.09e-01     1.83e-01\n6038 -8.51e-04 -1.24e-02  3.73e-03     6.85e-03     5.84e-03\n6039 -1.13e-02 -9.73e-02  3.55e-02     9.12e-02     7.67e-02\n6040 -9.60e-03 -8.69e-02  3.10e-02     7.67e-02     6.61e-02\n6041 -1.47e-03 -1.79e-02  5.78e-03     1.15e-02     9.70e-03\n6042 -1.86e-03 -2.19e-02  7.10e-03     1.44e-02     1.20e-02\n6043 -1.16e-02 -1.01e-01  3.73e-02     9.28e-02     7.91e-02\n6044 -6.20e-03 -6.21e-02  2.20e-02     4.87e-02     4.14e-02\n6045 -7.90e-03 -7.58e-02  2.73e-02     6.27e-02     5.31e-02\n6046 -1.45e-01 -4.36e-01  4.46e-02     4.12e-01     2.35e-01\n6047 -1.88e-01 -4.70e-01  1.67e-02     3.41e-01     1.16e-01\n6048 -1.76e-01 -5.19e-01  6.18e-02     3.92e-01     1.73e-01\n6049 -3.51e-01 -6.72e-01 -1.71e-02     6.60e-01     2.69e-01\n6050 -2.41e-01 -5.52e-01 -4.18e-02     3.03e-01     2.99e-02\n6051 -5.16e-02 -1.91e-01 -1.84e-03     8.23e-02     2.02e-02\n6052 -1.36e-01 -4.56e-01  5.02e-02     5.41e-01     3.76e-01\n6053 -2.33e-01 -5.18e-01 -3.16e-04     3.93e-01     1.17e-01\n6054 -8.45e-02 -2.55e-01 -8.03e-03     1.25e-01     2.45e-02\n6055 -9.61e-02 -2.90e-01 -2.18e-03     1.57e-01     4.33e-02\n6056 -3.00e-01 -6.20e-01 -9.40e-03     5.69e-01     2.25e-01\n6057 -2.29e-01 -4.96e-01 -3.68e-02     3.24e-01     5.53e-02\n6058 -2.55e-01 -5.27e-01 -2.98e-02     3.79e-01     8.12e-02\n6059 -5.72e-02 -2.27e-01  6.04e-02     2.13e-01     1.42e-01\n6060 -6.98e-02 -2.56e-01  4.68e-02     1.73e-01     8.63e-02\n6061 -6.16e-02 -2.80e-01  8.75e-02     1.94e-01     1.15e-01\n6062 -1.92e-01 -5.05e-01  3.01e-02     4.66e-01     2.40e-01\n6063 -1.70e-01 -4.48e-01 -4.78e-03     2.43e-01     4.03e-02\n6064 -1.77e-02 -8.57e-02  5.38e-03     3.73e-02     1.53e-02\n6065 -6.85e-02 -2.53e-01  7.19e-02     3.12e-01     2.29e-01\n6066 -9.84e-02 -3.16e-01  3.69e-02     2.18e-01     9.84e-02\n6067 -3.28e-02 -1.33e-01  5.34e-03     6.16e-02     2.20e-02\n6068 -3.43e-02 -1.37e-01  1.08e-02     7.37e-02     3.28e-02\n6069 -1.49e-01 -4.34e-01  3.12e-02     3.69e-01     1.88e-01\n6070 -1.17e-01 -3.31e-01  3.75e-03     1.98e-01     6.24e-02\n6071 -1.26e-01 -3.49e-01  1.07e-02     2.32e-01     8.09e-02\n6072 -1.69e-02 -1.04e-01  5.77e-02     1.27e-01     1.06e-01\n6073 -1.92e-02 -1.15e-01  5.68e-02     1.31e-01     1.07e-01\n6074 -3.70e-02 -1.81e-01  8.62e-02     2.61e-01     2.14e-01\n6075 -3.71e-02 -1.84e-01  9.06e-02     2.92e-01     2.45e-01\n6076 -3.56e-02 -2.35e-01  1.57e-01     2.32e-01     1.85e-01\n6077 -2.06e-03 -2.00e-02  9.78e-03     1.49e-02     1.21e-02\n6078 -2.28e-02 -1.26e-01  7.18e-02     1.81e-01     1.53e-01\n6079 -2.20e-02 -1.27e-01  6.34e-02     1.49e-01     1.22e-01\n6080 -3.55e-03 -2.99e-02  1.57e-02     2.43e-02     1.95e-02\n6081 -4.35e-03 -3.68e-02  1.78e-02     3.06e-02     2.50e-02\n6082 -2.45e-02 -1.36e-01  6.99e-02     1.81e-01     1.51e-01\n6083 -1.45e-02 -9.56e-02  4.73e-02     9.31e-02     7.54e-02\n6084 -1.80e-02 -1.10e-01  5.72e-02     1.18e-01     9.63e-02\n6085 -1.23e-04 -6.62e-02  1.93e-02     3.31e-03     2.84e-03\n6086 -2.54e-05 -2.78e-02  5.82e-03     7.26e-04     6.29e-04\n6087 -5.55e-05 -5.53e-02  1.26e-02     1.55e-03     1.37e-03\n6088 -5.84e-05 -5.54e-02  1.27e-02     1.70e-03     1.40e-03\n6089 -3.75e-06 -5.19e-03  9.56e-04     1.13e-04     9.59e-05\n6090 -3.64e-06 -4.15e-03  9.31e-04     1.14e-04     9.16e-05\n6091 -3.49e-04 -1.13e-01  4.27e-02     8.75e-03     7.64e-03\n6092 -2.07e-05 -2.57e-02  5.37e-03     6.62e-04     5.58e-04\n6093 -3.67e-06 -5.06e-03  9.66e-04     1.15e-04     9.74e-05\n6094 -7.96e-06 -8.79e-03  1.97e-03     2.43e-04     2.08e-04\n6095 -5.15e-05 -4.68e-02  1.09e-02     1.49e-03     1.26e-03\n6096 -8.18e-06 -1.05e-02  2.04e-03     2.46e-04     2.11e-04\n6097 -1.25e-05 -1.56e-02  3.09e-03     3.60e-04     3.17e-04\n6098 -7.72e-03 -7.34e-02  2.69e-02     6.23e-02     5.24e-02\n6099 -8.38e-03 -7.87e-02  3.03e-02     6.63e-02     5.63e-02\n6100 -1.80e-02 -1.33e-01  5.73e-02     1.46e-01     1.25e-01\n6101 -1.86e-02 -1.37e-01  6.08e-02     1.64e-01     1.42e-01\n6102 -2.35e-02 -1.62e-01  8.34e-02     2.09e-01     1.83e-01\n6103 -8.47e-04 -1.20e-02  3.85e-03     6.88e-03     5.81e-03\n6104 -1.10e-02 -9.60e-02  3.77e-02     9.10e-02     7.66e-02\n6105 -9.53e-03 -8.87e-02  3.40e-02     7.67e-02     6.58e-02\n6106 -1.40e-03 -1.81e-02  6.27e-03     1.15e-02     9.75e-03\n6107 -1.75e-03 -2.27e-02  7.64e-03     1.44e-02     1.20e-02\n6108 -1.14e-02 -9.87e-02  3.99e-02     9.42e-02     8.02e-02\n6109 -5.94e-03 -6.07e-02  2.40e-02     4.86e-02     4.12e-02\n6110 -7.59e-03 -7.24e-02  2.96e-02     6.17e-02     5.31e-02\n6111 -5.15e-02 -2.03e-01  8.90e-02     3.26e-01     2.68e-01\n6112 -5.51e-02 -2.52e-01  9.37e-02     2.98e-01     2.30e-01\n6113 -4.96e-02 -2.71e-01  1.47e-01     3.61e-01     3.01e-01\n6114 -8.30e-02 -3.90e-01  7.61e-02     6.18e-01     5.22e-01\n6115 -1.36e-01 -5.20e-01  1.08e-01     5.28e-01     3.59e-01\n6116 -1.46e-02 -8.46e-02  2.31e-02     6.14e-02     4.29e-02\n6117 -5.87e-02 -2.17e-01  9.14e-02     4.39e-01     3.73e-01\n6118 -6.84e-02 -2.93e-01  8.96e-02     3.56e-01     2.76e-01\n6119 -2.59e-02 -1.32e-01  3.32e-02     1.01e-01     6.86e-02\n6120 -2.78e-02 -1.33e-01  4.05e-02     1.19e-01     8.53e-02\n6121 -7.90e-02 -3.31e-01  7.83e-02     4.98e-01     4.03e-01\n6122 -7.59e-02 -3.11e-01  6.70e-02     3.19e-01     2.27e-01\n6123 -7.96e-02 -3.30e-01  7.35e-02     3.62e-01     2.69e-01\n6124 -1.15e-02 -7.79e-02  4.58e-02     8.71e-02     7.34e-02\n6125 -1.24e-02 -8.19e-02  4.67e-02     9.32e-02     7.77e-02\n6126 -2.62e-02 -1.41e-01  7.71e-02     1.96e-01     1.66e-01\n6127 -2.62e-02 -1.36e-01  8.08e-02     2.20e-01     1.90e-01\n6128 -3.50e-02 -1.78e-01  9.26e-02     2.76e-01     2.33e-01\n6129 -1.21e-03 -1.31e-02  7.08e-03     9.87e-03     8.30e-03\n6130 -1.57e-02 -9.99e-02  5.73e-02     1.25e-01     1.06e-01\n6131 -1.40e-02 -9.38e-02  5.10e-02     1.06e-01     8.99e-02\n6132 -2.11e-03 -2.10e-02  1.09e-02     1.66e-02     1.40e-02\n6133 -2.64e-03 -2.39e-02  1.35e-02     2.05e-02     1.73e-02\n6134 -1.57e-02 -1.03e-01  6.02e-02     1.29e-01     1.10e-01\n6135 -8.87e-03 -6.59e-02  3.60e-02     6.86e-02     5.73e-02\n6136 -1.14e-02 -7.89e-02  4.44e-02     8.69e-02     7.36e-02\n6137 -4.98e-02 -4.73e-01 -8.54e-06     5.86e-02     4.09e-03\n6138 -1.33e-02 -3.62e-01 -2.05e-06     1.50e-02     9.05e-04\n6139 -2.63e-02 -4.87e-01 -3.88e-06     3.01e-02     1.92e-03\n6140 -2.93e-02 -5.83e-01 -3.99e-06     3.37e-02     1.99e-03\n6141 -2.14e-03 -1.68e-01 -2.96e-07     2.44e-03     1.36e-04\n6142 -1.94e-03 -8.34e-02 -3.08e-07     2.20e-03     1.26e-04\n6143 -1.04e-01 -5.59e-01 -2.20e-05     1.31e-01     1.11e-02\n6144 -1.23e-02 -3.80e-01 -1.93e-06     1.38e-02     7.86e-04\n6145 -2.12e-03 -1.07e-01 -3.21e-07     2.47e-03     1.35e-04\n6146 -4.47e-03 -1.52e-01 -7.27e-07     5.02e-03     2.93e-04\n6147 -2.63e-02 -5.15e-01 -3.95e-06     2.94e-02     1.76e-03\n6148 -4.55e-03 -2.50e-01 -6.72e-07     5.16e-03     2.91e-04\n6149 -6.84e-03 -2.96e-01 -9.98e-07     7.75e-03     4.41e-04\n6150 -5.11e-02 -2.01e-01  8.36e-02     3.78e-01     3.23e-01\n6151 -5.21e-02 -2.05e-01  8.28e-02     3.84e-01     3.29e-01\n6152 -5.01e-02 -2.11e-01  1.23e-01     5.56e-01     5.05e-01\n6153 -5.71e-02 -2.04e-01  8.94e-02     6.48e-01     5.87e-01\n6154 -7.71e-02 -3.56e-01  9.18e-02     6.89e-01     5.98e-01\n6155 -1.20e-02 -8.59e-02  2.12e-02     6.31e-02     4.98e-02\n6156 -5.65e-02 -2.07e-01  8.91e-02     4.79e-01     4.20e-01\n6157 -5.65e-02 -2.13e-01  8.56e-02     4.28e-01     3.69e-01\n6158 -1.97e-02 -1.20e-01  2.98e-02     1.03e-01     7.99e-02\n6159 -2.30e-02 -1.26e-01  3.59e-02     1.23e-01     9.70e-02\n6160 -6.15e-02 -2.16e-01  8.67e-02     5.00e-01     4.34e-01\n6161 -5.58e-02 -2.08e-01  6.96e-02     3.32e-01     2.71e-01\n6162 -5.80e-02 -2.14e-01  7.67e-02     3.87e-01     3.24e-01\n6163 -1.78e-03 -9.46e-02  3.76e-02     1.63e-02     1.40e-02\n6164 -4.76e-04 -5.23e-02  1.38e-02     4.34e-03     3.75e-03\n6165 -9.16e-04 -8.62e-02  2.63e-02     8.74e-03     7.37e-03\n6166 -1.06e-03 -1.21e-01  3.06e-02     1.01e-02     8.47e-03\n6167 -7.18e-05 -1.55e-02  2.55e-03     7.23e-04     5.91e-04\n6168 -6.41e-05 -9.57e-03  2.12e-03     6.55e-04     5.52e-04\n6169 -3.90e-03 -1.40e-01  6.75e-02     3.72e-02     3.26e-02\n6170 -4.08e-04 -5.46e-02  1.27e-02     4.00e-03     3.34e-03\n6171 -7.16e-05 -1.13e-02  2.48e-03     7.15e-04     5.96e-04\n6172 -1.38e-04 -1.82e-02  4.63e-03     1.44e-03     1.24e-03\n6173 -9.00e-04 -9.56e-02  2.46e-02     8.82e-03     7.38e-03\n6174 -1.53e-04 -2.64e-02  5.22e-03     1.53e-03     1.27e-03\n6175 -2.27e-04 -3.78e-02  7.45e-03     2.32e-03     1.91e-03\n6176 -4.77e-02 -1.86e-01  7.59e-02     2.78e-01     2.23e-01\n6177 -5.38e-02 -2.28e-01  7.85e-02     2.69e-01     2.03e-01\n6178 -5.82e-02 -2.74e-01  1.15e-01     3.79e-01     3.12e-01\n6179 -8.31e-02 -3.53e-01  7.61e-02     5.47e-01     4.47e-01\n6180 -1.43e-01 -5.23e-01  7.70e-02     5.19e-01     3.40e-01\n6181 -1.01e-02 -6.05e-02  1.72e-02     4.35e-02     3.02e-02\n6182 -5.60e-02 -2.01e-01  8.54e-02     3.74e-01     3.15e-01\n6183 -6.41e-02 -2.69e-01  7.69e-02     3.14e-01     2.37e-01\n6184 -1.78e-02 -9.31e-02  2.51e-02     7.16e-02     4.90e-02\n6185 -1.98e-02 -1.03e-01  3.18e-02     8.68e-02     6.16e-02\n6186 -7.24e-02 -2.81e-01  7.73e-02     4.03e-01     3.17e-01\n6187 -6.25e-02 -2.54e-01  5.83e-02     2.48e-01     1.73e-01\n6188 -6.76e-02 -2.81e-01  6.49e-02     2.92e-01     2.10e-01\n6189 -8.77e-03 -1.64e-01  8.82e-02     7.89e-02     7.01e-02\n6190 -4.49e-03 -1.57e-01  4.91e-02     3.12e-02     2.69e-02\n6191 -9.43e-03 -2.47e-01  9.83e-02     6.63e-02     5.48e-02\n6192 -9.80e-03 -2.69e-01  1.01e-01     7.05e-02     5.96e-02\n6193 -8.83e-04 -8.68e-02  1.21e-02     6.08e-03     4.97e-03\n6194 -5.43e-04 -2.59e-02  7.97e-03     4.31e-03     3.79e-03\n6195 -1.37e-02 -1.87e-01  1.27e-01     1.42e-01     1.30e-01\n6196 -4.13e-03 -1.66e-01  4.85e-02     2.99e-02     2.46e-02\n6197 -6.75e-04 -3.54e-02  9.93e-03     5.07e-03     4.30e-03\n6198 -1.29e-03 -4.98e-02  1.56e-02     9.55e-03     8.19e-03\n6199 -7.88e-03 -2.13e-01  8.05e-02     5.79e-02     4.89e-02\n6200 -1.71e-03 -9.90e-02  2.13e-02     1.23e-02     9.98e-03\n6201 -2.57e-03 -1.27e-01  3.43e-02     1.81e-02     1.47e-02\n6202 -4.74e-02 -1.89e-01  7.65e-02     2.78e-01     2.22e-01\n6203 -5.38e-02 -2.32e-01  7.62e-02     2.69e-01     2.05e-01\n6204 -5.98e-02 -2.89e-01  1.18e-01     3.79e-01     3.10e-01\n6205 -8.32e-02 -3.87e-01  7.65e-02     5.47e-01     4.46e-01\n6206 -1.43e-01 -5.14e-01  7.26e-02     5.19e-01     3.44e-01\n6207 -1.01e-02 -6.08e-02  1.65e-02     4.30e-02     3.03e-02\n6208 -5.61e-02 -2.03e-01  8.43e-02     3.77e-01     3.14e-01\n6209 -6.52e-02 -2.72e-01  7.60e-02     3.13e-01     2.36e-01\n6210 -1.79e-02 -9.15e-02  2.36e-02     7.16e-02     4.87e-02\n6211 -1.97e-02 -1.00e-01  3.07e-02     8.60e-02     6.19e-02\n6212 -7.12e-02 -2.94e-01  7.57e-02     4.05e-01     3.18e-01\n6213 -6.16e-02 -2.55e-01  5.40e-02     2.49e-01     1.74e-01\n6214 -6.81e-02 -2.86e-01  6.35e-02     2.94e-01     2.11e-01\n6215 -4.74e-02 -4.83e-01 -6.07e-06     5.58e-02     3.80e-03\n6216 -1.25e-02 -3.63e-01 -1.60e-06     1.44e-02     8.25e-04\n6217 -2.45e-02 -5.03e-01 -3.26e-06     2.84e-02     1.75e-03\n6218 -2.87e-02 -5.85e-01 -3.25e-06     3.25e-02     1.89e-03\n6219 -2.04e-03 -1.69e-01 -2.30e-07     2.33e-03     1.26e-04\n6220 -1.86e-03 -8.77e-02 -2.77e-07     2.14e-03     1.18e-04\n6221 -1.07e-01 -5.65e-01 -2.19e-05     1.28e-01     9.94e-03\n6222 -1.16e-02 -3.86e-01 -1.31e-06     1.33e-02     7.21e-04\n6223 -2.08e-03 -1.13e-01 -2.20e-07     2.32e-03     1.25e-04\n6224 -4.28e-03 -1.54e-01 -6.06e-07     4.85e-03     2.71e-04\n6225 -2.53e-02 -5.21e-01 -3.72e-06     2.82e-02     1.58e-03\n6226 -4.40e-03 -2.41e-01 -6.46e-07     4.99e-03     2.73e-04\n6227 -6.69e-03 -3.06e-01 -8.65e-07     7.50e-03     4.05e-04\n6228 -4.94e-02 -1.98e-01  7.65e-02     3.33e-01     2.79e-01\n6229 -5.87e-02 -2.19e-01  6.83e-02     3.38e-01     2.71e-01\n6230 -6.21e-02 -2.33e-01  1.06e-01     5.06e-01     4.36e-01\n6231 -7.59e-02 -2.36e-01  7.52e-02     6.01e-01     5.19e-01\n6232 -2.16e-01 -5.17e-01  2.44e-02     6.16e-01     3.62e-01\n6233 -1.15e-02 -7.93e-02  1.51e-02     5.25e-02     3.91e-02\n6234 -5.54e-02 -2.04e-01  8.54e-02     4.33e-01     3.74e-01\n6235 -6.71e-02 -2.31e-01  6.85e-02     3.79e-01     3.05e-01\n6236 -1.96e-02 -1.17e-01  2.05e-02     8.56e-02     6.20e-02\n6237 -2.21e-02 -1.24e-01  2.84e-02     1.04e-01     7.85e-02\n6238 -6.94e-02 -2.31e-01  7.38e-02     4.49e-01     3.75e-01\n6239 -6.81e-02 -2.37e-01  4.80e-02     2.88e-01     2.11e-01\n6240 -7.28e-02 -2.44e-01  5.47e-02     3.40e-01     2.59e-01\n6241 -2.15e-01 -4.94e-01 -2.02e-02     2.94e-01     4.64e-02\n6242 -1.16e-01 -3.38e-01 -1.57e-02     1.38e-01     1.15e-02\n6243 -1.49e-01 -4.24e-01 -1.04e-02     1.92e-01     2.23e-02\n6244 -2.60e-01 -5.59e-01 -4.64e-02     3.16e-01     2.54e-02\n6245 -3.13e-02 -1.34e-01 -4.09e-03     3.56e-02     1.78e-03\n6246 -2.38e-02 -1.06e-01 -2.87e-03     2.80e-02     1.78e-03\n6247 -2.95e-01 -6.02e-01 -2.33e-02     4.62e-01     1.14e-01\n6248 -1.21e-01 -3.40e-01 -1.93e-02     1.44e-01     1.02e-02\n6249 -2.83e-02 -1.24e-01 -3.64e-03     3.25e-02     1.87e-03\n6250 -5.01e-02 -1.89e-01 -6.72e-03     5.93e-02     3.92e-03\n6251 -2.35e-01 -5.28e-01 -4.30e-02     2.84e-01     2.26e-02\n6252 -6.11e-02 -2.36e-01 -8.76e-03     7.02e-02     3.82e-03\n6253 -8.68e-02 -2.88e-01 -1.25e-02     1.01e-01     5.84e-03\n6254 -3.95e-02 -2.13e-01  9.10e-02     2.64e-01     2.15e-01\n6255 -3.32e-02 -2.15e-01  1.33e-01     1.96e-01     1.56e-01\n6256 -5.38e-02 -3.15e-01  1.68e-01     3.51e-01     2.86e-01\n6257 -5.00e-02 -3.28e-01  1.84e-01     3.79e-01     3.18e-01\n6258 -1.04e-02 -1.45e-01  2.77e-01     7.75e-02     6.18e-02\n6259 -4.89e-03 -4.43e-02  2.88e-02     2.82e-02     2.11e-02\n6260 -4.71e-02 -2.23e-01  9.55e-02     3.70e-01     3.12e-01\n6261 -3.25e-02 -2.21e-01  1.51e-01     2.02e-01     1.60e-01\n6262 -6.43e-03 -6.42e-02  4.27e-02     3.77e-02     2.92e-02\n6263 -1.03e-02 -8.20e-02  4.93e-02     5.74e-02     4.40e-02\n6264 -4.35e-02 -2.69e-01  1.41e-01     2.87e-01     2.33e-01\n6265 -1.70e-02 -1.49e-01  1.33e-01     1.05e-01     8.29e-02\n6266 -2.31e-02 -1.83e-01  1.51e-01     1.43e-01     1.13e-01\n6267 -4.84e-02 -2.20e-01  1.23e-01     5.12e-01     4.63e-01\n6268 -5.19e-02 -2.44e-01  1.37e-01     4.68e-01     4.09e-01\n6269 -6.17e-02 -2.97e-01  1.67e-01     5.15e-01     4.38e-01\n6270 -2.98e-02 -1.51e-01  1.03e-01     7.89e-01     7.56e-01\n6271 -4.91e-02 -2.56e-01  1.84e-01     6.91e-01     6.30e-01\n6272 -1.71e-02 -1.38e-01  5.27e-02     1.36e-01     1.17e-01\n6273 -4.39e-02 -1.94e-01  1.22e-01     6.37e-01     5.90e-01\n6274 -4.90e-02 -2.30e-01  1.36e-01     5.43e-01     4.87e-01\n6275 -2.44e-02 -1.65e-01  7.52e-02     2.17e-01     1.89e-01\n6276 -2.86e-02 -1.76e-01  7.57e-02     2.43e-01     2.12e-01\n6277 -3.45e-02 -1.60e-01  9.94e-02     7.04e-01     6.69e-01\n6278 -4.04e-02 -1.89e-01  1.12e-01     5.33e-01     4.86e-01\n6279 -4.25e-02 -1.94e-01  1.17e-01     5.69e-01     5.26e-01\n6280 -1.39e-01 -3.99e-01  1.87e-02     2.43e-01     7.89e-02\n6281 -1.06e-01 -3.08e-01 -3.33e-03     1.45e-01     2.37e-02\n6282 -9.08e-02 -3.23e-01  2.44e-02     1.46e-01     3.94e-02\n6283 -3.18e-01 -6.06e-01 -5.41e-02     4.24e-01     5.88e-02\n6284 -6.37e-02 -2.22e-01 -8.93e-03     7.34e-02     4.37e-03\n6285 -3.43e-02 -1.34e-01 -4.61e-03     4.25e-02     4.15e-03\n6286 -1.80e-01 -4.91e-01  3.48e-02     3.86e-01     1.68e-01\n6287 -1.35e-01 -3.58e-01 -1.55e-02     1.75e-01     2.32e-02\n6288 -4.91e-02 -1.78e-01 -7.28e-03     5.91e-02     4.54e-03\n6289 -6.91e-02 -2.20e-01 -1.04e-02     8.63e-02     9.10e-03\n6290 -3.01e-01 -5.86e-01 -6.02e-02     3.98e-01     5.38e-02\n6291 -1.15e-01 -3.29e-01 -1.82e-02     1.37e-01     9.72e-03\n6292 -1.40e-01 -3.66e-01 -2.43e-02     1.68e-01     1.43e-02\n6293 -6.60e-02 -2.40e-01  8.73e-02     4.68e-01     3.93e-01\n6294 -7.93e-02 -3.44e-01  8.41e-02     4.68e-01     3.72e-01\n6295 -7.30e-02 -3.84e-01  9.67e-02     6.38e-01     5.47e-01\n6296 -7.64e-02 -4.30e-01  6.05e-02     7.25e-01     6.33e-01\n6297 -1.48e-01 -6.41e-01  4.99e-02     7.34e-01     5.54e-01\n6298 -2.07e-02 -1.12e-01  3.32e-02     8.89e-02     6.29e-02\n6299 -6.42e-02 -2.33e-01  8.49e-02     5.71e-01     5.00e-01\n6300 -8.59e-02 -3.78e-01  7.81e-02     5.19e-01     4.14e-01\n6301 -3.46e-02 -1.60e-01  4.55e-02     1.41e-01     9.69e-02\n6302 -3.73e-02 -1.73e-01  5.25e-02     1.67e-01     1.22e-01\n6303 -8.10e-02 -3.62e-01  7.42e-02     5.88e-01     4.94e-01\n6304 -9.11e-02 -3.72e-01  7.31e-02     4.10e-01     3.03e-01\n6305 -9.16e-02 -3.93e-01  7.64e-02     4.70e-01     3.63e-01\n6306 -7.83e-03 -7.20e-02  2.57e-02     6.08e-02     5.10e-02\n6307 -8.30e-03 -7.23e-02  2.77e-02     6.27e-02     5.26e-02\n6308 -1.73e-02 -1.27e-01  5.12e-02     1.21e-01     1.02e-01\n6309 -1.92e-02 -1.33e-01  6.02e-02     1.65e-01     1.40e-01\n6310 -2.30e-02 -1.56e-01  8.41e-02     1.88e-01     1.61e-01\n6311 -8.79e-04 -1.15e-02  4.07e-03     7.00e-03     5.88e-03\n6312 -1.13e-02 -9.21e-02  3.66e-02     8.95e-02     7.52e-02\n6313 -9.51e-03 -8.45e-02  3.25e-02     7.46e-02     6.29e-02\n6314 -1.43e-03 -1.87e-02  6.38e-03     1.17e-02     9.71e-03\n6315 -1.80e-03 -2.19e-02  7.84e-03     1.44e-02     1.20e-02\n6316 -1.16e-02 -9.84e-02  3.91e-02     9.41e-02     8.08e-02\n6317 -6.16e-03 -6.03e-02  2.41e-02     4.94e-02     4.16e-02\n6318 -7.61e-03 -7.31e-02  2.90e-02     6.26e-02     5.30e-02\n6319 -4.66e-02 -4.74e-01 -1.38e-05     5.31e-02     3.84e-03\n6320 -1.24e-02 -3.68e-01 -2.84e-06     1.41e-02     8.38e-04\n6321 -2.46e-02 -5.05e-01 -5.81e-06     2.80e-02     1.73e-03\n6322 -2.73e-02 -5.73e-01 -5.59e-06     3.12e-02     1.84e-03\n6323 -2.01e-03 -1.67e-01 -3.93e-07     2.26e-03     1.28e-04\n6324 -1.88e-03 -8.36e-02 -4.09e-07     2.15e-03     1.26e-04\n6325 -1.05e-01 -5.65e-01 -3.56e-05     1.27e-01     1.07e-02\n6326 -1.14e-02 -3.89e-01 -2.75e-06     1.30e-02     7.44e-04\n6327 -2.02e-03 -1.10e-01 -3.75e-07     2.27e-03     1.28e-04\n6328 -4.11e-03 -1.55e-01 -9.10e-07     4.65e-03     2.84e-04\n6329 -2.39e-02 -5.14e-01 -5.24e-06     2.70e-02     1.63e-03\n6330 -4.38e-03 -2.42e-01 -8.28e-07     4.97e-03     2.79e-04\n6331 -6.63e-03 -3.18e-01 -1.49e-06     7.38e-03     4.13e-04\n6332 -1.17e-02 -8.39e-02  4.21e-02     8.62e-02     7.15e-02\n6333 -1.29e-02 -8.54e-02  4.23e-02     8.82e-02     7.25e-02\n6334 -2.55e-02 -1.46e-01  7.15e-02     1.64e-01     1.33e-01\n6335 -2.71e-02 -1.44e-01  7.78e-02     2.20e-01     1.89e-01\n6336 -3.61e-02 -1.86e-01  9.15e-02     2.49e-01     2.05e-01\n6337 -1.27e-03 -1.37e-02  7.21e-03     1.03e-02     8.49e-03\n6338 -1.65e-02 -1.03e-01  5.59e-02     1.24e-01     1.04e-01\n6339 -1.45e-02 -9.68e-02  4.94e-02     1.04e-01     8.60e-02\n6340 -2.22e-03 -2.12e-02  1.14e-02     1.72e-02     1.43e-02\n6341 -2.74e-03 -2.56e-02  1.40e-02     2.10e-02     1.75e-02\n6342 -1.69e-02 -1.07e-01  5.99e-02     1.34e-01     1.13e-01\n6343 -9.27e-03 -6.95e-02  3.75e-02     7.03e-02     5.81e-02\n6344 -1.17e-02 -8.13e-02  4.23e-02     8.92e-02     7.45e-02\n6345 -6.11e-02 -2.24e-01  8.37e-02     4.04e-01     3.35e-01\n6346 -7.37e-02 -3.08e-01  8.05e-02     4.07e-01     3.21e-01\n6347 -7.53e-02 -3.61e-01  9.74e-02     5.80e-01     4.91e-01\n6348 -8.01e-02 -4.20e-01  6.77e-02     6.72e-01     5.75e-01\n6349 -1.52e-01 -6.10e-01  5.36e-02     6.86e-01     5.03e-01\n6350 -1.65e-02 -9.06e-02  2.66e-02     7.04e-02     4.93e-02\n6351 -6.46e-02 -2.24e-01  8.52e-02     5.11e-01     4.36e-01\n6352 -8.02e-02 -3.55e-01  8.00e-02     4.52e-01     3.56e-01\n6353 -2.79e-02 -1.32e-01  3.77e-02     1.11e-01     7.63e-02\n6354 -3.10e-02 -1.44e-01  4.50e-02     1.35e-01     9.79e-02\n6355 -7.97e-02 -3.31e-01  7.88e-02     5.25e-01     4.29e-01\n6356 -8.01e-02 -3.28e-01  7.02e-02     3.50e-01     2.53e-01\n6357 -8.41e-02 -3.45e-01  7.44e-02     4.09e-01     3.06e-01\n6358 -8.52e-03 -6.33e-02  2.83e-02     5.94e-02     4.86e-02\n6359 -9.57e-03 -6.72e-02  2.79e-02     5.87e-02     4.66e-02\n6360 -1.94e-02 -1.19e-01  5.08e-02     1.12e-01     8.80e-02\n6361 -2.18e-02 -1.30e-01  6.14e-02     1.55e-01     1.27e-01\n6362 -1.89e-02 -1.55e-01  8.99e-02     1.13e-01     8.57e-02\n6363 -9.14e-04 -1.04e-02  4.15e-03     6.76e-03     5.53e-03\n6364 -1.20e-02 -8.42e-02  3.98e-02     8.86e-02     7.38e-02\n6365 -1.13e-02 -7.83e-02  3.23e-02     6.94e-02     5.47e-02\n6366 -1.58e-03 -1.59e-02  6.83e-03     1.11e-02     8.91e-03\n6367 -2.01e-03 -1.94e-02  8.33e-03     1.39e-02     1.14e-02\n6368 -1.26e-02 -8.94e-02  4.05e-02     9.11e-02     7.55e-02\n6369 -6.68e-03 -5.39e-02  2.39e-02     4.47e-02     3.55e-02\n6370 -8.79e-03 -6.70e-02  2.93e-02     5.71e-02     4.53e-02\n6371 -4.44e-02 -4.64e-01 -8.32e-06     5.19e-02     3.55e-03\n6372 -1.14e-02 -3.63e-01 -1.93e-06     1.31e-02     7.68e-04\n6373 -2.29e-02 -4.87e-01 -3.67e-06     2.63e-02     1.63e-03\n6374 -2.60e-02 -5.78e-01 -4.24e-06     3.02e-02     1.69e-03\n6375 -1.88e-03 -1.74e-01 -2.99e-07     2.15e-03     1.13e-04\n6376 -1.75e-03 -8.67e-02 -3.07e-07     1.98e-03     1.07e-04\n6377 -9.59e-02 -5.58e-01 -2.42e-05     1.21e-01     9.72e-03\n6378 -1.04e-02 -3.60e-01 -1.64e-06     1.19e-02     6.95e-04\n6379 -1.84e-03 -1.08e-01 -3.81e-07     2.12e-03     1.16e-04\n6380 -3.87e-03 -1.55e-01 -6.07e-07     4.48e-03     2.53e-04\n6381 -2.29e-02 -4.99e-01 -3.34e-06     2.66e-02     1.50e-03\n6382 -4.00e-03 -2.37e-01 -6.25e-07     4.57e-03     2.48e-04\n6383 -5.94e-03 -3.05e-01 -8.47e-07     6.91e-03     3.82e-04\n6384 -2.04e-02 -1.17e-01  6.75e-02     1.64e-01     1.38e-01\n6385 -2.29e-02 -1.25e-01  6.79e-02     1.73e-01     1.47e-01\n6386 -4.09e-02 -1.80e-01  9.45e-02     3.32e-01     2.85e-01\n6387 -3.82e-02 -1.75e-01  9.81e-02     3.67e-01     3.24e-01\n6388 -4.71e-02 -2.22e-01  1.09e-01     4.36e-01     3.82e-01\n6389 -2.65e-03 -2.48e-02  1.31e-02     2.03e-02     1.69e-02\n6390 -2.71e-02 -1.43e-01  8.09e-02     2.27e-01     1.95e-01\n6391 -2.51e-02 -1.34e-01  7.41e-02     1.96e-01     1.66e-01\n6392 -4.29e-03 -3.69e-02  2.08e-02     3.33e-02     2.77e-02\n6393 -5.57e-03 -4.39e-02  2.47e-02     4.12e-02     3.42e-02\n6394 -2.77e-02 -1.46e-01  8.35e-02     2.32e-01     2.00e-01\n6395 -1.70e-02 -1.06e-01  6.11e-02     1.31e-01     1.10e-01\n6396 -2.10e-02 -1.21e-01  6.85e-02     1.64e-01     1.37e-01\n6397 -3.18e-02 -1.68e-01  6.54e-02     2.03e-01     1.69e-01\n6398 -3.66e-02 -1.87e-01  5.98e-02     1.79e-01     1.40e-01\n6399 -3.35e-02 -2.23e-01  1.05e-01     2.22e-01     1.88e-01\n6400 -8.92e-02 -2.66e-01  6.58e-02     4.61e-01     3.60e-01\n6401 -1.78e-01 -4.66e-01  1.85e-02     3.39e-01     1.39e-01\n6402 -8.38e-03 -6.01e-02  8.33e-03     3.32e-02     2.34e-02\n6403 -4.06e-02 -1.90e-01  8.05e-02     2.91e-01     2.48e-01\n6404 -5.10e-02 -2.12e-01  5.48e-02     2.24e-01     1.67e-01\n6405 -1.63e-02 -9.62e-02  1.04e-02     5.57e-02     3.71e-02\n6406 -1.62e-02 -9.74e-02  1.63e-02     6.66e-02     4.77e-02\n6407 -7.14e-02 -2.39e-01  5.25e-02     3.43e-01     2.62e-01\n6408 -6.55e-02 -2.34e-01  2.07e-02     1.94e-01     1.22e-01\n6409 -6.82e-02 -2.38e-01  3.17e-02     2.28e-01     1.53e-01\n6410 -6.26e-02 -2.38e-01  5.19e-02     2.25e-01     1.48e-01\n6411 -8.33e-02 -2.81e-01  3.60e-02     1.98e-01     9.69e-02\n6412 -8.47e-02 -3.31e-01  8.21e-02     2.53e-01     1.45e-01\n6413 -1.86e-01 -5.06e-01  2.82e-02     4.76e-01     2.47e-01\n6414 -1.98e-01 -4.85e-01 -1.57e-02     2.83e-01     4.42e-02\n6415 -1.60e-02 -7.93e-02  5.80e-03     3.57e-02     1.55e-02\n6416 -7.17e-02 -2.57e-01  6.52e-02     3.21e-01     2.35e-01\n6417 -1.09e-01 -3.30e-01  3.10e-02     2.41e-01     1.08e-01\n6418 -2.96e-02 -1.25e-01  5.98e-03     5.84e-02     2.15e-02\n6419 -3.17e-02 -1.36e-01  1.11e-02     7.12e-02     3.21e-02\n6420 -1.37e-01 -4.24e-01  3.28e-02     3.55e-01     1.85e-01\n6421 -1.10e-01 -3.16e-01  5.40e-03     1.94e-01     6.20e-02\n6422 -1.23e-01 -3.49e-01  1.06e-02     2.34e-01     8.31e-02\n6423 -1.24e-01 -4.50e-01  6.15e-02     5.39e-01     3.94e-01\n6424 -1.99e-01 -5.32e-01  4.32e-02     4.97e-01     2.63e-01\n6425 -1.77e-01 -5.77e-01  8.01e-02     6.00e-01     3.76e-01\n6426 -2.43e-01 -6.83e-01  1.08e-02     7.70e-01     5.06e-01\n6427 -3.70e-01 -6.72e-01 -4.13e-02     5.55e-01     1.02e-01\n6428 -6.20e-02 -2.26e-01  1.21e-02     1.23e-01     4.89e-02\n6429 -1.03e-01 -4.21e-01  6.00e-02     6.55e-01     5.35e-01\n6430 -2.36e-01 -5.75e-01  2.56e-02     5.47e-01     2.81e-01\n6431 -1.02e-01 -3.12e-01  8.25e-03     1.84e-01     6.45e-02\n6432 -1.07e-01 -3.32e-01  2.08e-02     2.25e-01     9.80e-02\n6433 -2.18e-01 -6.23e-01  2.23e-02     6.73e-01     4.22e-01\n6434 -2.62e-01 -5.55e-01 -6.84e-03     4.62e-01     1.63e-01\n6435 -2.72e-01 -5.77e-01  2.86e-04     5.20e-01     2.12e-01\n6436 -4.93e-02 -4.78e-01 -1.48e-05     5.78e-02     3.97e-03\n6437 -1.37e-02 -3.65e-01 -3.57e-06     1.55e-02     8.80e-04\n6438 -2.66e-02 -5.05e-01 -7.33e-06     3.06e-02     1.88e-03\n6439 -3.01e-02 -5.74e-01 -7.79e-06     3.41e-02     1.90e-03\n6440 -2.18e-03 -1.75e-01 -4.68e-07     2.44e-03     1.31e-04\n6441 -2.02e-03 -8.57e-02 -4.49e-07     2.29e-03     1.26e-04\n6442 -1.07e-01 -5.61e-01 -3.81e-05     1.32e-01     1.09e-02\n6443 -1.20e-02 -3.80e-01 -3.33e-06     1.35e-02     7.50e-04\n6444 -2.19e-03 -1.10e-01 -4.87e-07     2.47e-03     1.35e-04\n6445 -4.53e-03 -1.58e-01 -1.14e-06     5.15e-03     2.91e-04\n6446 -2.63e-02 -5.06e-01 -6.00e-06     2.96e-02     1.75e-03\n6447 -4.53e-03 -2.41e-01 -1.01e-06     5.17e-03     2.88e-04\n6448 -7.02e-03 -2.99e-01 -1.84e-06     7.93e-03     4.33e-04\n6449 -1.75e-01 -4.38e-01 -2.85e-03     3.58e-01     1.63e-01\n6450 -2.07e-01 -5.26e-01 -1.55e-02     2.76e-01     5.86e-02\n6451 -2.71e-01 -5.99e-01 -1.03e-02     4.11e-01     1.13e-01\n6452 -3.67e-01 -6.47e-01 -3.93e-02     5.27e-01     1.26e-01\n6453 -1.49e-01 -6.46e-01 -4.19e-03     1.64e-01     1.07e-02\n6454 -3.75e-02 -1.86e-01 -2.23e-03     4.83e-02     8.73e-03\n6455 -1.68e-01 -4.13e-01  9.10e-03     4.85e-01     2.89e-01\n6456 -2.34e-01 -5.64e-01 -1.65e-02     3.00e-01     5.49e-02\n6457 -5.62e-02 -2.52e-01 -2.97e-03     6.80e-02     9.96e-03\n6458 -7.45e-02 -2.94e-01 -4.55e-03     9.77e-02     1.92e-02\n6459 -2.92e-01 -5.89e-01 -3.22e-02     4.22e-01     1.08e-01\n6460 -1.63e-01 -5.14e-01 -7.20e-03     1.91e-01     2.17e-02\n6461 -2.03e-01 -5.48e-01 -1.14e-02     2.44e-01     3.25e-02\n6462 -1.81e-02 -1.07e-01  5.85e-02     1.28e-01     1.07e-01\n6463 -2.06e-02 -1.15e-01  5.74e-02     1.26e-01     1.01e-01\n6464 -3.67e-02 -1.76e-01  8.61e-02     2.21e-01     1.79e-01\n6465 -3.88e-02 -1.87e-01  9.35e-02     2.97e-01     2.50e-01\n6466 -3.61e-02 -2.27e-01  1.48e-01     2.12e-01     1.69e-01\n6467 -2.23e-03 -2.18e-02  1.05e-02     1.55e-02     1.27e-02\n6468 -2.38e-02 -1.31e-01  7.58e-02     1.84e-01     1.55e-01\n6469 -2.31e-02 -1.31e-01  6.43e-02     1.45e-01     1.18e-01\n6470 -3.77e-03 -3.19e-02  1.61e-02     2.51e-02     2.04e-02\n6471 -4.58e-03 -3.90e-02  1.91e-02     3.17e-02     2.60e-02\n6472 -2.61e-02 -1.42e-01  7.66e-02     1.88e-01     1.58e-01\n6473 -1.51e-02 -1.01e-01  5.21e-02     9.68e-02     7.78e-02\n6474 -1.89e-02 -1.15e-01  5.85e-02     1.23e-01     9.98e-02\n6475 -2.24e-02 -1.50e-01  7.13e-02     1.85e-01     1.60e-01\n6476 -1.86e-02 -1.54e-01  8.73e-02     1.58e-01     1.41e-01\n6477 -2.96e-02 -2.11e-01  1.18e-01     2.37e-01     2.06e-01\n6478 -3.10e-02 -2.00e-01  1.67e-01     3.75e-01     3.45e-01\n6479 -2.17e-02 -2.95e-01  1.64e-01     1.72e-01     1.49e-01\n6480 -2.64e-03 -3.87e-02  1.71e-02     2.41e-02     2.12e-02\n6481 -3.00e-02 -1.74e-01  8.28e-02     2.66e-01     2.34e-01\n6482 -1.97e-02 -1.68e-01  1.03e-01     1.85e-01     1.65e-01\n6483 -4.05e-03 -5.64e-02  2.82e-02     3.74e-02     3.35e-02\n6484 -5.75e-03 -6.44e-02  3.14e-02     4.92e-02     4.32e-02\n6485 -2.59e-02 -1.79e-01  1.21e-01     2.66e-01     2.42e-01\n6486 -1.30e-02 -1.47e-01  9.33e-02     1.28e-01     1.15e-01\n6487 -1.64e-02 -1.63e-01  1.09e-01     1.59e-01     1.44e-01\n6488 -7.74e-03 -7.17e-02  2.83e-02     6.21e-02     5.31e-02\n6489 -8.03e-03 -7.75e-02  3.01e-02     6.68e-02     5.75e-02\n6490 -1.76e-02 -1.33e-01  5.70e-02     1.47e-01     1.26e-01\n6491 -1.88e-02 -1.36e-01  6.10e-02     1.65e-01     1.42e-01\n6492 -2.33e-02 -1.61e-01  8.17e-02     2.10e-01     1.83e-01\n6493 -8.12e-04 -1.22e-02  3.97e-03     6.84e-03     5.92e-03\n6494 -1.08e-02 -9.68e-02  3.94e-02     9.06e-02     7.81e-02\n6495 -9.28e-03 -8.70e-02  3.48e-02     7.73e-02     6.60e-02\n6496 -1.38e-03 -1.86e-02  6.55e-03     1.15e-02     9.74e-03\n6497 -1.77e-03 -2.31e-02  8.15e-03     1.43e-02     1.22e-02\n6498 -1.10e-02 -9.91e-02  4.11e-02     9.26e-02     7.96e-02\n6499 -5.76e-03 -6.18e-02  2.43e-02     4.88e-02     4.15e-02\n6500 -7.35e-03 -7.50e-02  2.91e-02     6.19e-02     5.33e-02\n6501 -7.35e-03 -6.19e-02  3.14e-02     5.91e-02     4.90e-02\n6502 -8.45e-03 -6.39e-02  3.30e-02     6.29e-02     5.24e-02\n6503 -1.87e-02 -1.18e-01  6.22e-02     1.38e-01     1.14e-01\n6504 -1.87e-02 -1.19e-01  6.70e-02     1.56e-01     1.32e-01\n6505 -2.65e-02 -1.52e-01  8.18e-02     1.97e-01     1.66e-01\n6506 -8.04e-04 -9.29e-03  4.34e-03     6.52e-03     5.41e-03\n6507 -1.03e-02 -7.99e-02  4.36e-02     8.49e-02     7.10e-02\n6508 -9.44e-03 -7.21e-02  3.58e-02     7.26e-02     6.09e-02\n6509 -1.35e-03 -1.41e-02  7.35e-03     1.07e-02     9.00e-03\n6510 -1.70e-03 -1.65e-02  8.82e-03     1.34e-02     1.11e-02\n6511 -1.08e-02 -8.31e-02  4.34e-02     8.80e-02     7.40e-02\n6512 -5.94e-03 -4.97e-02  2.68e-02     4.56e-02     3.81e-02\n6513 -7.51e-03 -5.96e-02  3.20e-02     5.87e-02     4.92e-02\n6514 -7.65e-03 -7.67e-02  2.64e-02     6.18e-02     5.28e-02\n6515 -8.33e-03 -7.99e-02  2.84e-02     6.65e-02     5.63e-02\n6516 -1.83e-02 -1.35e-01  5.31e-02     1.44e-01     1.22e-01\n6517 -1.91e-02 -1.37e-01  5.99e-02     1.63e-01     1.41e-01\n6518 -2.36e-02 -1.67e-01  8.40e-02     2.08e-01     1.81e-01\n6519 -8.11e-04 -1.22e-02  3.71e-03     6.92e-03     5.83e-03\n6520 -1.12e-02 -1.01e-01  3.71e-02     8.98e-02     7.68e-02\n6521 -9.52e-03 -9.05e-02  3.22e-02     7.65e-02     6.50e-02\n6522 -1.39e-03 -1.93e-02  6.11e-03     1.15e-02     9.72e-03\n6523 -1.81e-03 -2.30e-02  7.28e-03     1.42e-02     1.20e-02\n6524 -1.13e-02 -1.01e-01  3.78e-02     9.19e-02     7.92e-02\n6525 -6.05e-03 -6.34e-02  2.33e-02     4.77e-02     4.05e-02\n6526 -7.59e-03 -7.61e-02  2.85e-02     6.17e-02     5.25e-02\n6527 -2.80e-01 -6.03e-01 -2.54e-02     4.86e-01     1.68e-01\n6528 -2.77e-01 -6.56e-01 -1.36e-02     3.44e-01     4.99e-02\n6529 -3.49e-01 -6.96e-01 -1.77e-02     4.81e-01     9.92e-02\n6530 -4.39e-01 -7.37e-01 -3.10e-02     5.90e-01     1.08e-01\n6531 -1.32e-01 -6.73e-01 -2.43e-03     1.42e-01     8.37e-03\n6532 -5.63e-02 -3.20e-01 -1.89e-03     6.56e-02     7.70e-03\n6533 -2.60e-01 -5.60e-01 -1.46e-02     6.29e-01     3.26e-01\n6534 -2.93e-01 -6.75e-01 -1.33e-02     3.54e-01     4.60e-02\n6535 -7.91e-02 -3.74e-01 -2.20e-03     9.06e-02     8.38e-03\n6536 -1.12e-01 -4.49e-01 -4.79e-03     1.35e-01     1.68e-02\n6537 -3.81e-01 -7.02e-01 -2.83e-02     5.09e-01     9.42e-02\n6538 -1.90e-01 -6.24e-01 -5.14e-03     2.15e-01     1.77e-02\n6539 -2.41e-01 -6.60e-01 -7.34e-03     2.78e-01     2.67e-02\n6540 -1.21e-02 -9.88e-02  3.79e-02     9.43e-02     7.97e-02\n6541 -1.31e-02 -1.02e-01  4.04e-02     1.01e-01     8.54e-02\n6542 -2.58e-02 -1.59e-01  7.20e-02     2.09e-01     1.80e-01\n6543 -2.70e-02 -1.59e-01  7.53e-02     2.34e-01     2.05e-01\n6544 -3.14e-02 -1.83e-01  1.05e-01     2.91e-01     2.56e-01\n6545 -1.37e-03 -1.75e-02  5.95e-03     1.08e-02     9.11e-03\n6546 -1.69e-02 -1.21e-01  4.97e-02     1.34e-01     1.15e-01\n6547 -1.44e-02 -1.13e-01  4.60e-02     1.16e-01     9.86e-02\n6548 -2.32e-03 -2.68e-02  9.32e-03     1.79e-02     1.52e-02\n6549 -2.96e-03 -3.23e-02  1.10e-02     2.22e-02     1.90e-02\n6550 -1.72e-02 -1.28e-01  5.18e-02     1.37e-01     1.18e-01\n6551 -9.37e-03 -8.20e-02  3.43e-02     7.47e-02     6.25e-02\n6552 -1.18e-02 -9.80e-02  4.01e-02     9.38e-02     8.01e-02\n6553 -1.56e-02 -9.84e-02  5.79e-02     1.22e-01     1.01e-01\n6554 -1.73e-02 -1.05e-01  5.65e-02     1.29e-01     1.09e-01\n6555 -3.38e-02 -1.65e-01  8.68e-02     2.62e-01     2.23e-01\n6556 -3.26e-02 -1.64e-01  9.03e-02     2.92e-01     2.53e-01\n6557 -4.24e-02 -1.99e-01  1.03e-01     3.58e-01     3.08e-01\n6558 -1.84e-03 -1.80e-02  9.53e-03     1.43e-02     1.21e-02\n6559 -2.12e-02 -1.21e-01  7.05e-02     1.72e-01     1.47e-01\n6560 -1.93e-02 -1.16e-01  6.34e-02     1.48e-01     1.25e-01\n6561 -3.13e-03 -2.79e-02  1.49e-02     2.40e-02     1.99e-02\n6562 -3.92e-03 -3.31e-02  1.79e-02     2.96e-02     2.47e-02\n6563 -2.14e-02 -1.25e-01  7.30e-02     1.78e-01     1.52e-01\n6564 -1.28e-02 -8.65e-02  4.78e-02     9.76e-02     8.19e-02\n6565 -1.58e-02 -1.01e-01  5.84e-02     1.22e-01     1.03e-01\n6566 -5.04e-02 -2.02e-01  8.60e-02     3.77e-01     3.23e-01\n6567 -5.13e-02 -2.06e-01  8.68e-02     3.87e-01     3.29e-01\n6568 -4.92e-02 -2.08e-01  1.23e-01     5.56e-01     5.03e-01\n6569 -5.73e-02 -2.02e-01  8.87e-02     6.49e-01     5.86e-01\n6570 -7.94e-02 -3.52e-01  8.97e-02     6.90e-01     5.96e-01\n6571 -1.18e-02 -8.53e-02  1.98e-02     6.27e-02     4.94e-02\n6572 -5.60e-02 -2.08e-01  8.99e-02     4.80e-01     4.20e-01\n6573 -5.62e-02 -2.10e-01  8.79e-02     4.28e-01     3.68e-01\n6574 -1.98e-02 -1.19e-01  2.87e-02     1.02e-01     7.86e-02\n6575 -2.25e-02 -1.29e-01  3.70e-02     1.23e-01     9.82e-02\n6576 -6.05e-02 -2.11e-01  8.59e-02     5.00e-01     4.33e-01\n6577 -5.46e-02 -2.06e-01  6.99e-02     3.33e-01     2.73e-01\n6578 -5.81e-02 -2.12e-01  7.76e-02     3.91e-01     3.24e-01\n6579 -7.33e-03 -5.98e-02  3.03e-02     5.73e-02     4.78e-02\n6580 -8.16e-03 -6.58e-02  3.31e-02     6.18e-02     5.10e-02\n6581 -1.85e-02 -1.19e-01  5.77e-02     1.37e-01     1.12e-01\n6582 -1.83e-02 -1.18e-01  6.41e-02     1.55e-01     1.30e-01\n6583 -2.59e-02 -1.57e-01  7.77e-02     1.98e-01     1.66e-01\n6584 -7.75e-04 -9.31e-03  4.37e-03     6.32e-03     5.29e-03\n6585 -1.04e-02 -7.86e-02  4.15e-02     8.36e-02     7.00e-02\n6586 -9.34e-03 -7.38e-02  3.71e-02     7.17e-02     5.95e-02\n6587 -1.33e-03 -1.43e-02  7.22e-03     1.08e-02     8.90e-03\n6588 -1.68e-03 -1.81e-02  9.04e-03     1.31e-02     1.10e-02\n6589 -1.08e-02 -7.96e-02  4.30e-02     8.77e-02     7.24e-02\n6590 -5.85e-03 -5.05e-02  2.63e-02     4.57e-02     3.78e-02\n6591 -7.22e-03 -6.29e-02  3.10e-02     5.82e-02     4.85e-02\n6592 -5.15e-02 -2.07e-01  9.13e-02     3.87e-01     3.33e-01\n6593 -5.92e-02 -2.28e-01  9.16e-02     3.72e-01     3.10e-01\n6594 -5.25e-02 -2.42e-01  1.44e-01     4.79e-01     4.24e-01\n6595 -7.32e-02 -2.29e-01  7.74e-02     6.70e-01     5.90e-01\n6596 -1.91e-01 -4.98e-01  6.28e-02     6.16e-01     3.93e-01\n6597 -1.59e-02 -1.05e-01  1.85e-02     7.24e-02     5.43e-02\n6598 -5.53e-02 -2.08e-01  9.62e-02     5.00e-01     4.40e-01\n6599 -6.96e-02 -2.38e-01  8.58e-02     4.24e-01     3.48e-01\n6600 -2.82e-02 -1.48e-01  2.56e-02     1.18e-01     8.62e-02\n6601 -2.94e-02 -1.47e-01  3.39e-02     1.39e-01     1.07e-01\n6602 -7.51e-02 -2.28e-01  7.64e-02     5.38e-01     4.58e-01\n6603 -8.29e-02 -2.66e-01  4.99e-02     3.59e-01     2.68e-01\n6604 -8.26e-02 -2.60e-01  6.08e-02     4.09e-01     3.19e-01\n6605 -1.19e-02 -9.86e-02  3.75e-02     9.35e-02     7.98e-02\n6606 -1.27e-02 -1.03e-01  3.98e-02     1.01e-01     8.60e-02\n6607 -2.53e-02 -1.60e-01  7.22e-02     2.10e-01     1.81e-01\n6608 -2.60e-02 -1.58e-01  7.51e-02     2.33e-01     2.03e-01\n6609 -3.14e-02 -1.85e-01  1.02e-01     2.93e-01     2.58e-01\n6610 -1.31e-03 -1.78e-02  5.66e-03     1.07e-02     9.09e-03\n6611 -1.65e-02 -1.20e-01  5.03e-02     1.34e-01     1.16e-01\n6612 -1.42e-02 -1.13e-01  4.57e-02     1.16e-01     9.90e-02\n6613 -2.24e-03 -2.67e-02  9.66e-03     1.78e-02     1.51e-02\n6614 -2.87e-03 -3.38e-02  1.12e-02     2.18e-02     1.86e-02\n6615 -1.66e-02 -1.27e-01  5.25e-02     1.39e-01     1.19e-01\n6616 -9.06e-03 -8.50e-02  3.30e-02     7.43e-02     6.26e-02\n6617 -1.13e-02 -9.87e-02  4.00e-02     9.40e-02     8.04e-02\n6618 -8.95e-02 -3.26e-01  6.81e-02     3.37e-01     2.30e-01\n6619 -1.22e-01 -3.85e-01  4.99e-02     2.95e-01     1.47e-01\n6620 -1.14e-01 -4.28e-01  1.01e-01     3.51e-01     2.07e-01\n6621 -2.24e-01 -6.03e-01  2.51e-02     6.10e-01     3.50e-01\n6622 -2.60e-01 -5.58e-01 -1.95e-02     3.74e-01     6.23e-02\n6623 -3.02e-02 -1.28e-01  8.33e-03     6.33e-02     2.57e-02\n6624 -9.23e-02 -3.41e-01  7.52e-02     4.56e-01     3.46e-01\n6625 -1.55e-01 -4.37e-01  3.71e-02     3.48e-01     1.61e-01\n6626 -5.32e-02 -1.89e-01  9.05e-03     1.01e-01     3.57e-02\n6627 -5.67e-02 -2.12e-01  1.58e-02     1.23e-01     5.31e-02\n6628 -1.85e-01 -5.27e-01  3.28e-02     5.03e-01     2.78e-01\n6629 -1.70e-01 -4.28e-01  4.61e-03     2.99e-01     9.60e-02\n6630 -1.83e-01 -4.55e-01  9.78e-03     3.45e-01     1.28e-01\n6631 -7.83e-03 -7.51e-02  2.70e-02     6.15e-02     5.19e-02\n6632 -8.13e-03 -7.97e-02  2.93e-02     6.54e-02     5.53e-02\n6633 -1.84e-02 -1.32e-01  5.53e-02     1.44e-01     1.22e-01\n6634 -1.89e-02 -1.33e-01  5.86e-02     1.62e-01     1.40e-01\n6635 -2.34e-02 -1.62e-01  8.41e-02     2.06e-01     1.81e-01\n6636 -8.35e-04 -1.25e-02  3.77e-03     6.77e-03     5.67e-03\n6637 -1.13e-02 -9.65e-02  3.63e-02     9.03e-02     7.70e-02\n6638 -9.44e-03 -8.83e-02  3.25e-02     7.61e-02     6.44e-02\n6639 -1.42e-03 -1.90e-02  6.11e-03     1.14e-02     9.67e-03\n6640 -1.79e-03 -2.23e-02  7.54e-03     1.42e-02     1.20e-02\n6641 -1.13e-02 -9.91e-02  3.75e-02     9.25e-02     7.93e-02\n6642 -5.83e-03 -6.13e-02  2.26e-02     4.80e-02     4.09e-02\n6643 -7.59e-03 -7.30e-02  2.67e-02     6.13e-02     5.26e-02\n6644 -4.50e-02 -4.82e-01 -1.40e-05     5.30e-02     3.71e-03\n6645 -1.16e-02 -3.51e-01 -3.72e-06     1.33e-02     8.02e-04\n6646 -2.38e-02 -4.89e-01 -6.74e-06     2.75e-02     1.67e-03\n6647 -2.63e-02 -5.65e-01 -6.32e-06     3.00e-02     1.74e-03\n6648 -1.91e-03 -1.50e-01 -4.23e-07     2.16e-03     1.23e-04\n6649 -1.75e-03 -8.45e-02 -4.38e-07     2.01e-03     1.17e-04\n6650 -1.01e-01 -5.75e-01 -3.57e-05     1.22e-01     9.95e-03\n6651 -1.04e-02 -3.57e-01 -2.74e-06     1.20e-02     6.94e-04\n6652 -1.91e-03 -1.07e-01 -5.17e-07     2.15e-03     1.24e-04\n6653 -3.91e-03 -1.48e-01 -1.01e-06     4.54e-03     2.61e-04\n6654 -2.32e-02 -5.05e-01 -6.07e-06     2.65e-02     1.58e-03\n6655 -4.08e-03 -2.28e-01 -9.27e-07     4.67e-03     2.61e-04\n6656 -6.03e-03 -2.89e-01 -1.59e-06     6.85e-03     3.82e-04\n6657 -1.23e-02 -9.89e-02  3.77e-02     9.52e-02     8.11e-02\n6658 -1.30e-02 -1.05e-01  4.00e-02     1.00e-01     8.61e-02\n6659 -2.57e-02 -1.59e-01  6.85e-02     2.13e-01     1.83e-01\n6660 -2.64e-02 -1.59e-01  7.49e-02     2.37e-01     2.07e-01\n6661 -3.11e-02 -1.80e-01  1.03e-01     2.94e-01     2.61e-01\n6662 -1.38e-03 -1.79e-02  5.67e-03     1.08e-02     9.24e-03\n6663 -1.69e-02 -1.23e-01  5.03e-02     1.35e-01     1.17e-01\n6664 -1.46e-02 -1.14e-01  4.63e-02     1.16e-01     9.96e-02\n6665 -2.26e-03 -2.73e-02  9.28e-03     1.82e-02     1.54e-02\n6666 -2.97e-03 -3.38e-02  1.13e-02     2.22e-02     1.91e-02\n6667 -1.73e-02 -1.25e-01  5.23e-02     1.40e-01     1.22e-01\n6668 -9.36e-03 -8.60e-02  3.35e-02     7.42e-02     6.35e-02\n6669 -1.17e-02 -1.01e-01  3.92e-02     9.45e-02     8.12e-02\n6670 -9.86e-02 -3.48e-01 -9.04e-03     1.19e-01     8.54e-03\n6671 -3.12e-02 -1.67e-01 -2.09e-03     3.60e-02     1.98e-03\n6672 -5.63e-02 -2.58e-01 -3.77e-03     6.58e-02     4.02e-03\n6673 -7.08e-02 -3.08e-01 -4.98e-03     8.15e-02     4.24e-03\n6674 -5.47e-03 -3.71e-02 -3.30e-04     6.19e-03     2.97e-04\n6675 -4.83e-03 -3.45e-02 -2.94e-04     5.58e-03     2.89e-04\n6676 -1.90e-01 -5.07e-01 -1.97e-02     2.38e-01     2.32e-02\n6677 -2.91e-02 -1.52e-01 -1.76e-03     3.36e-02     1.72e-03\n6678 -5.32e-03 -3.76e-02 -2.85e-04     6.17e-03     2.97e-04\n6679 -1.08e-02 -6.73e-02 -6.64e-04     1.25e-02     6.49e-04\n6680 -6.25e-02 -2.76e-01 -4.21e-03     7.24e-02     3.79e-03\n6681 -1.16e-02 -7.63e-02 -7.32e-04     1.31e-02     6.31e-04\n6682 -1.72e-02 -1.03e-01 -1.02e-03     1.96e-02     9.40e-04\n6683 -7.68e-03 -6.12e-02  3.07e-02     5.76e-02     4.81e-02\n6684 -8.46e-03 -6.71e-02  3.17e-02     6.22e-02     5.13e-02\n6685 -1.91e-02 -1.17e-01  5.69e-02     1.36e-01     1.12e-01\n6686 -1.93e-02 -1.21e-01  6.39e-02     1.54e-01     1.30e-01\n6687 -2.72e-02 -1.58e-01  7.68e-02     1.99e-01     1.66e-01\n6688 -8.03e-04 -9.54e-03  4.45e-03     6.40e-03     5.31e-03\n6689 -1.08e-02 -8.03e-02  4.25e-02     8.42e-02     7.07e-02\n6690 -9.69e-03 -7.32e-02  3.65e-02     7.25e-02     6.00e-02\n6691 -1.36e-03 -1.46e-02  7.35e-03     1.08e-02     8.93e-03\n6692 -1.69e-03 -1.78e-02  8.78e-03     1.33e-02     1.11e-02\n6693 -1.09e-02 -8.13e-02  4.38e-02     8.67e-02     7.34e-02\n6694 -5.85e-03 -5.14e-02  2.55e-02     4.55e-02     3.80e-02\n6695 -7.52e-03 -6.27e-02  3.20e-02     5.88e-02     4.89e-02\n6696 -1.59e-02 -1.26e-01  5.98e-02     1.39e-01     1.22e-01\n6697 -1.34e-02 -1.30e-01  7.38e-02     1.26e-01     1.14e-01\n6698 -2.50e-02 -1.85e-01  1.15e-01     2.22e-01     1.99e-01\n6699 -2.45e-02 -1.83e-01  1.38e-01     2.92e-01     2.68e-01\n6700 -1.82e-02 -2.64e-01  1.47e-01     1.44e-01     1.22e-01\n6701 -1.66e-03 -2.58e-02  1.16e-02     1.62e-02     1.42e-02\n6702 -2.23e-02 -1.48e-01  7.27e-02     2.00e-01     1.74e-01\n6703 -1.47e-02 -1.41e-01  8.36e-02     1.43e-01     1.29e-01\n6704 -2.56e-03 -3.92e-02  1.87e-02     2.54e-02     2.26e-02\n6705 -3.61e-03 -4.67e-02  2.16e-02     3.30e-02     2.91e-02\n6706 -1.90e-02 -1.55e-01  9.30e-02     1.94e-01     1.74e-01\n6707 -8.82e-03 -1.11e-01  6.38e-02     8.87e-02     8.20e-02\n6708 -1.17e-02 -1.28e-01  7.94e-02     1.15e-01     1.05e-01\n6709 -1.69e-02 -1.07e-01  5.72e-02     1.29e-01     1.08e-01\n6710 -1.96e-02 -1.16e-01  5.67e-02     1.32e-01     1.08e-01\n6711 -3.77e-02 -1.80e-01  8.40e-02     2.64e-01     2.17e-01\n6712 -3.73e-02 -1.85e-01  9.08e-02     2.94e-01     2.50e-01\n6713 -3.53e-02 -2.38e-01  1.59e-01     2.32e-01     1.88e-01\n6714 -2.15e-03 -2.05e-02  9.48e-03     1.51e-02     1.24e-02\n6715 -2.30e-02 -1.28e-01  7.18e-02     1.83e-01     1.56e-01\n6716 -2.21e-02 -1.29e-01  6.25e-02     1.50e-01     1.23e-01\n6717 -3.65e-03 -3.13e-02  1.52e-02     2.44e-02     1.98e-02\n6718 -4.45e-03 -3.77e-02  1.88e-02     3.11e-02     2.50e-02\n6719 -2.45e-02 -1.37e-01  6.92e-02     1.83e-01     1.53e-01\n6720 -1.41e-02 -9.88e-02  4.93e-02     9.49e-02     7.60e-02\n6721 -1.85e-02 -1.12e-01  5.66e-02     1.21e-01     9.89e-02\n6722 -2.91e-02 -1.42e-01  8.00e-02     2.25e-01     1.91e-01\n6723 -3.29e-02 -1.56e-01  8.06e-02     2.25e-01     1.88e-01\n6724 -5.09e-02 -2.15e-01  1.00e-01     4.06e-01     3.47e-01\n6725 -4.83e-02 -2.18e-01  9.99e-02     4.45e-01     3.86e-01\n6726 -4.72e-02 -3.06e-01  2.00e-01     3.52e-01     3.01e-01\n6727 -4.22e-03 -3.45e-02  1.74e-02     2.91e-02     2.34e-02\n6728 -3.50e-02 -1.62e-01  9.12e-02     3.05e-01     2.65e-01\n6729 -3.56e-02 -1.71e-01  8.75e-02     2.51e-01     2.11e-01\n6730 -7.10e-03 -5.15e-02  2.67e-02     4.56e-02     3.72e-02\n6731 -8.72e-03 -5.98e-02  3.24e-02     5.85e-02     4.75e-02\n6732 -3.81e-02 -1.75e-01  9.26e-02     3.04e-01     2.59e-01\n6733 -2.54e-02 -1.39e-01  7.39e-02     1.66e-01     1.36e-01\n6734 -3.07e-02 -1.55e-01  8.35e-02     2.09e-01     1.73e-01\n6735 -1.72e-02 -1.25e-01  5.04e-02     1.33e-01     1.14e-01\n6736 -1.78e-02 -1.27e-01  5.25e-02     1.41e-01     1.21e-01\n6737 -3.22e-02 -1.80e-01  8.52e-02     2.82e-01     2.46e-01\n6738 -3.29e-02 -1.77e-01  8.79e-02     3.12e-01     2.76e-01\n6739 -3.53e-02 -1.96e-01  1.19e-01     3.74e-01     3.38e-01\n6740 -2.03e-03 -2.56e-02  8.63e-03     1.61e-02     1.35e-02\n6741 -2.31e-02 -1.47e-01  6.43e-02     1.87e-01     1.62e-01\n6742 -1.97e-02 -1.40e-01  5.90e-02     1.60e-01     1.40e-01\n6743 -3.41e-03 -3.78e-02  1.28e-02     2.67e-02     2.27e-02\n6744 -4.35e-03 -4.74e-02  1.59e-02     3.25e-02     2.74e-02\n6745 -2.30e-02 -1.51e-01  6.63e-02     1.93e-01     1.68e-01\n6746 -1.35e-02 -1.12e-01  4.40e-02     1.06e-01     9.07e-02\n6747 -1.64e-02 -1.24e-01  5.23e-02     1.32e-01     1.15e-01\n6748 -5.41e-02 -2.11e-01  1.03e-01     5.20e-01     4.62e-01\n6749 -6.64e-02 -2.37e-01  1.06e-01     4.97e-01     4.24e-01\n6750 -5.24e-02 -2.43e-01  1.60e-01     5.98e-01     5.37e-01\n6751 -6.24e-02 -2.08e-01  6.39e-02     7.77e-01     7.09e-01\n6752 -1.98e-01 -5.25e-01  6.01e-02     7.22e-01     4.87e-01\n6753 -2.73e-02 -1.47e-01  3.07e-02     1.22e-01     9.09e-02\n6754 -5.15e-02 -1.98e-01  9.90e-02     6.32e-01     5.77e-01\n6755 -7.58e-02 -2.51e-01  9.80e-02     5.56e-01     4.77e-01\n6756 -4.61e-02 -1.97e-01  3.69e-02     1.90e-01     1.39e-01\n6757 -4.65e-02 -1.89e-01  4.88e-02     2.24e-01     1.71e-01\n6758 -7.33e-02 -2.25e-01  7.08e-02     6.75e-01     5.92e-01\n6759 -1.04e-01 -2.96e-01  5.57e-02     4.94e-01     3.79e-01\n6760 -9.71e-02 -2.83e-01  6.54e-02     5.48e-01     4.39e-01\n6761 -3.46e-02 -1.67e-01  7.73e-02     2.22e-01     1.79e-01\n6762 -3.63e-02 -1.74e-01  7.90e-02     1.96e-01     1.51e-01\n6763 -4.99e-02 -2.35e-01  1.09e-01     2.74e-01     2.13e-01\n6764 -5.75e-02 -2.73e-01  1.09e-01     4.38e-01     3.71e-01\n6765 -3.44e-02 -2.44e-01  2.05e-01     1.95e-01     1.53e-01\n6766 -5.21e-03 -4.19e-02  2.00e-02     3.15e-02     2.43e-02\n6767 -4.25e-02 -1.84e-01  9.05e-02     3.15e-01     2.64e-01\n6768 -4.13e-02 -1.95e-01  8.74e-02     2.27e-01     1.76e-01\n6769 -8.15e-03 -6.31e-02  2.98e-02     4.95e-02     3.88e-02\n6770 -1.05e-02 -7.42e-02  3.50e-02     6.36e-02     4.93e-02\n6771 -4.42e-02 -2.15e-01  9.62e-02     3.23e-01     2.69e-01\n6772 -2.68e-02 -1.67e-01  9.14e-02     1.59e-01     1.26e-01\n6773 -3.39e-02 -1.84e-01  9.41e-02     2.00e-01     1.57e-01\n6774 -1.14e-02 -7.81e-02  4.36e-02     8.68e-02     7.30e-02\n6775 -1.24e-02 -8.26e-02  4.70e-02     9.39e-02     7.76e-02\n6776 -2.68e-02 -1.38e-01  7.48e-02     1.97e-01     1.65e-01\n6777 -2.63e-02 -1.39e-01  8.07e-02     2.22e-01     1.90e-01\n6778 -3.36e-02 -1.76e-01  9.31e-02     2.76e-01     2.34e-01\n6779 -1.25e-03 -1.33e-02  6.96e-03     9.84e-03     8.39e-03\n6780 -1.61e-02 -1.01e-01  5.48e-02     1.25e-01     1.08e-01\n6781 -1.42e-02 -9.22e-02  4.98e-02     1.07e-01     8.98e-02\n6782 -2.11e-03 -2.05e-02  1.12e-02     1.68e-02     1.39e-02\n6783 -2.61e-03 -2.48e-02  1.33e-02     2.06e-02     1.72e-02\n6784 -1.61e-02 -1.01e-01  5.77e-02     1.30e-01     1.09e-01\n6785 -8.97e-03 -6.65e-02  3.80e-02     6.85e-02     5.76e-02\n6786 -1.16e-02 -7.85e-02  4.48e-02     8.80e-02     7.32e-02\n6787 -1.16e-02 -1.03e-01  4.62e-02     9.96e-02     8.71e-02\n6788 -9.91e-03 -1.06e-01  5.72e-02     9.40e-02     8.44e-02\n6789 -2.01e-02 -1.65e-01  1.03e-01     1.94e-01     1.76e-01\n6790 -2.01e-02 -1.63e-01  1.15e-01     2.21e-01     2.00e-01\n6791 -1.33e-02 -2.51e-01  1.31e-01     1.16e-01     9.68e-02\n6792 -1.11e-03 -1.81e-02  7.77e-03     1.07e-02     9.49e-03\n6793 -1.71e-02 -1.28e-01  5.72e-02     1.46e-01     1.27e-01\n6794 -1.07e-02 -1.19e-01  6.66e-02     1.04e-01     9.56e-02\n6795 -1.73e-03 -2.81e-02  1.27e-02     1.68e-02     1.49e-02\n6796 -2.42e-03 -3.39e-02  1.48e-02     2.23e-02     1.96e-02\n6797 -1.38e-02 -1.32e-01  7.29e-02     1.35e-01     1.23e-01\n6798 -6.20e-03 -8.92e-02  4.85e-02     6.09e-02     5.61e-02\n6799 -8.56e-03 -1.00e-01  6.32e-02     8.19e-02     7.35e-02\n6800 -1.06e-01 -3.80e-01  6.16e-02     4.12e-01     2.84e-01\n6801 -1.58e-01 -4.56e-01  3.79e-02     3.80e-01     1.91e-01\n6802 -1.62e-01 -5.26e-01  7.79e-02     4.93e-01     2.91e-01\n6803 -2.37e-01 -6.22e-01  2.30e-02     6.70e-01     4.02e-01\n6804 -3.16e-01 -6.18e-01 -3.05e-02     4.60e-01     7.63e-02\n6805 -3.65e-02 -1.55e-01  9.70e-03     7.51e-02     3.20e-02\n6806 -9.88e-02 -3.61e-01  6.80e-02     5.25e-01     4.08e-01\n6807 -1.89e-01 -4.94e-01  2.72e-02     4.29e-01     2.03e-01\n6808 -6.33e-02 -2.21e-01  8.44e-03     1.19e-01     4.30e-02\n6809 -6.70e-02 -2.40e-01  1.73e-02     1.45e-01     6.48e-02\n6810 -1.94e-01 -5.50e-01  2.88e-02     5.51e-01     3.19e-01\n6811 -1.94e-01 -4.51e-01  6.47e-03     3.44e-01     1.15e-01\n6812 -2.11e-01 -4.89e-01  9.52e-03     3.98e-01     1.56e-01\n6813 -6.76e-02 -2.69e-01  8.20e-02     5.94e-01     5.17e-01\n6814 -8.30e-02 -4.04e-01  7.86e-02     5.93e-01     4.94e-01\n6815 -6.47e-02 -4.10e-01  8.50e-02     7.39e-01     6.61e-01\n6816 -6.13e-02 -4.76e-01  4.50e-02     8.15e-01     7.41e-01\n6817 -1.32e-01 -6.82e-01  3.69e-02     8.13e-01     6.61e-01\n6818 -3.28e-02 -1.65e-01  4.28e-02     1.43e-01     1.01e-01\n6819 -5.88e-02 -2.41e-01  7.53e-02     6.92e-01     6.25e-01\n6820 -8.66e-02 -4.49e-01  7.12e-02     6.40e-01     5.35e-01\n6821 -5.25e-02 -2.31e-01  5.65e-02     2.16e-01     1.49e-01\n6822 -5.47e-02 -2.36e-01  6.51e-02     2.56e-01     1.87e-01\n6823 -7.50e-02 -4.16e-01  6.29e-02     7.09e-01     6.17e-01\n6824 -1.01e-01 -4.59e-01  7.01e-02     5.43e-01     4.16e-01\n6825 -9.76e-02 -4.83e-01  7.10e-02     6.02e-01     4.83e-01\n6826 -1.74e-01 -4.96e-01 -1.11e-03     2.99e-01     1.04e-01\n6827 -1.46e-01 -5.26e-01 -4.70e-03     1.86e-01     3.07e-02\n6828 -1.59e-01 -5.63e-01  5.74e-04     2.33e-01     5.65e-02\n6829 -3.45e-01 -6.95e-01 -1.88e-02     4.44e-01     7.04e-02\n6830 -7.84e-02 -5.30e-01 -1.36e-03     8.48e-02     5.24e-03\n6831 -3.50e-02 -2.22e-01 -1.23e-03     4.19e-02     4.84e-03\n6832 -1.98e-01 -4.93e-01  5.96e-03     4.48e-01     2.12e-01\n6833 -1.70e-01 -5.63e-01 -6.30e-03     2.08e-01     2.89e-02\n6834 -5.07e-02 -2.90e-01 -1.39e-03     5.76e-02     5.32e-03\n6835 -7.00e-02 -3.46e-01 -2.56e-03     8.49e-02     1.07e-02\n6836 -3.06e-01 -6.63e-01 -1.50e-02     3.92e-01     6.26e-02\n6837 -1.25e-01 -5.23e-01 -2.76e-03     1.41e-01     1.11e-02\n6838 -1.57e-01 -5.70e-01 -4.30e-03     1.79e-01     1.67e-02\n6839 -6.24e-02 -2.25e-01  8.25e-02     4.02e-01     3.32e-01\n6840 -7.43e-02 -3.12e-01  7.82e-02     4.06e-01     3.20e-01\n6841 -7.45e-02 -3.73e-01  9.73e-02     5.82e-01     4.91e-01\n6842 -8.11e-02 -4.27e-01  6.70e-02     6.71e-01     5.74e-01\n6843 -1.48e-01 -6.18e-01  5.36e-02     6.86e-01     5.02e-01\n6844 -1.64e-02 -9.19e-02  2.55e-02     7.01e-02     4.94e-02\n6845 -6.45e-02 -2.27e-01  8.56e-02     5.06e-01     4.34e-01\n6846 -8.23e-02 -3.43e-01  7.72e-02     4.50e-01     3.56e-01\n6847 -2.76e-02 -1.41e-01  3.61e-02     1.12e-01     7.72e-02\n6848 -3.13e-02 -1.43e-01  4.29e-02     1.33e-01     9.72e-02\n6849 -8.04e-02 -3.31e-01  7.83e-02     5.24e-01     4.30e-01\n6850 -8.05e-02 -3.24e-01  6.82e-02     3.52e-01     2.53e-01\n6851 -8.40e-02 -3.62e-01  7.38e-02     4.07e-01     3.06e-01\n6852 -2.01e-02 -1.18e-01  7.00e-02     1.64e-01     1.38e-01\n6853 -2.23e-02 -1.26e-01  7.06e-02     1.75e-01     1.46e-01\n6854 -3.94e-02 -1.83e-01  9.57e-02     3.31e-01     2.84e-01\n6855 -3.74e-02 -1.79e-01  9.64e-02     3.68e-01     3.23e-01\n6856 -4.54e-02 -2.15e-01  1.12e-01     4.38e-01     3.81e-01\n6857 -2.61e-03 -2.41e-02  1.32e-02     2.04e-02     1.70e-02\n6858 -2.66e-02 -1.44e-01  8.42e-02     2.28e-01     1.96e-01\n6859 -2.46e-02 -1.36e-01  7.70e-02     1.98e-01     1.68e-01\n6860 -4.33e-03 -3.77e-02  2.05e-02     3.35e-02     2.77e-02\n6861 -5.39e-03 -4.34e-02  2.55e-02     4.10e-02     3.42e-02\n6862 -2.74e-02 -1.44e-01  8.49e-02     2.35e-01     2.01e-01\n6863 -1.69e-02 -1.03e-01  6.15e-02     1.32e-01     1.11e-01\n6864 -2.05e-02 -1.23e-01  7.22e-02     1.64e-01     1.39e-01\n6865 -6.76e-03 -1.55e-01  7.65e-02     5.45e-02     4.68e-02\n6866 -2.26e-03 -1.23e-01  3.45e-02     1.79e-02     1.49e-02\n6867 -4.46e-03 -1.85e-01  6.26e-02     3.47e-02     2.92e-02\n6868 -5.54e-03 -2.36e-01  7.29e-02     4.16e-02     3.40e-02\n6869 -4.11e-04 -5.13e-02  7.73e-03     3.18e-03     2.55e-03\n6870 -3.39e-04 -2.16e-02  5.78e-03     2.72e-03     2.21e-03\n6871 -1.21e-02 -1.99e-01  1.22e-01     1.11e-01     9.79e-02\n6872 -2.24e-03 -1.27e-01  3.25e-02     1.68e-02     1.38e-02\n6873 -3.83e-04 -2.81e-02  7.02e-03     3.01e-03     2.41e-03\n6874 -7.22e-04 -4.16e-02  1.16e-02     5.88e-03     4.79e-03\n6875 -4.78e-03 -1.86e-01  6.18e-02     3.55e-02     2.91e-02\n6876 -8.54e-04 -7.26e-02  1.40e-02     6.47e-03     5.36e-03\n6877 -1.33e-03 -9.52e-02  2.03e-02     9.84e-03     7.94e-03\n6878 -2.01e-02 -1.17e-01  6.77e-02     1.63e-01     1.39e-01\n6879 -2.24e-02 -1.23e-01  7.20e-02     1.73e-01     1.46e-01\n6880 -4.01e-02 -1.80e-01  9.84e-02     3.32e-01     2.85e-01\n6881 -3.80e-02 -1.77e-01  1.01e-01     3.65e-01     3.22e-01\n6882 -4.63e-02 -2.14e-01  1.12e-01     4.36e-01     3.81e-01\n6883 -2.55e-03 -2.45e-02  1.36e-02     2.01e-02     1.69e-02\n6884 -2.67e-02 -1.43e-01  8.33e-02     2.28e-01     1.95e-01\n6885 -2.49e-02 -1.35e-01  7.73e-02     1.97e-01     1.68e-01\n6886 -4.28e-03 -3.54e-02  2.11e-02     3.35e-02     2.75e-02\n6887 -5.43e-03 -4.29e-02  2.48e-02     4.14e-02     3.48e-02\n6888 -2.72e-02 -1.46e-01  8.36e-02     2.32e-01     2.00e-01\n6889 -1.68e-02 -1.01e-01  6.03e-02     1.31e-01     1.10e-01\n6890 -2.08e-02 -1.18e-01  6.77e-02     1.63e-01     1.38e-01\n6891 -1.17e-02 -9.62e-02  3.94e-02     9.41e-02     7.98e-02\n6892 -1.30e-02 -9.93e-02  3.97e-02     1.00e-01     8.45e-02\n6893 -2.58e-02 -1.59e-01  6.75e-02     2.11e-01     1.80e-01\n6894 -2.62e-02 -1.56e-01  7.36e-02     2.33e-01     2.02e-01\n6895 -3.09e-02 -1.82e-01  9.90e-02     2.93e-01     2.56e-01\n6896 -1.33e-03 -1.78e-02  5.79e-03     1.08e-02     9.04e-03\n6897 -1.64e-02 -1.18e-01  5.05e-02     1.34e-01     1.14e-01\n6898 -1.44e-02 -1.11e-01  4.50e-02     1.16e-01     9.85e-02\n6899 -2.25e-03 -2.75e-02  9.14e-03     1.79e-02     1.49e-02\n6900 -2.88e-03 -3.32e-02  1.09e-02     2.21e-02     1.85e-02\n6901 -1.68e-02 -1.21e-01  5.08e-02     1.38e-01     1.19e-01\n6902 -9.37e-03 -8.37e-02  3.25e-02     7.39e-02     6.26e-02\n6903 -1.16e-02 -9.58e-02  3.90e-02     9.34e-02     7.90e-02\n6904 -7.74e-03 -6.20e-02  3.25e-02     5.92e-02     4.99e-02\n6905 -8.35e-03 -6.54e-02  3.32e-02     6.34e-02     5.29e-02\n6906 -1.89e-02 -1.20e-01  6.10e-02     1.40e-01     1.16e-01\n6907 -1.90e-02 -1.21e-01  6.76e-02     1.58e-01     1.34e-01\n6908 -2.67e-02 -1.55e-01  8.10e-02     2.02e-01     1.68e-01\n6909 -7.87e-04 -9.50e-03  4.46e-03     6.57e-03     5.52e-03\n6910 -1.08e-02 -8.09e-02  4.41e-02     8.67e-02     7.33e-02\n6911 -9.50e-03 -7.66e-02  3.81e-02     7.35e-02     6.16e-02\n6912 -1.38e-03 -1.54e-02  6.97e-03     1.11e-02     9.12e-03\n6913 -1.72e-03 -1.76e-02  9.23e-03     1.35e-02     1.13e-02\n6914 -1.09e-02 -8.55e-02  4.60e-02     8.89e-02     7.57e-02\n6915 -6.00e-03 -5.23e-02  2.69e-02     4.58e-02     3.86e-02\n6916 -7.46e-03 -6.09e-02  3.34e-02     5.90e-02     4.96e-02\n6917 -5.42e-03 -2.16e-01  1.14e-03     7.76e-03     6.78e-04\n6918 -5.69e-03 -2.56e-01 -1.83e-06     6.60e-03     2.73e-04\n6919 -1.71e-02 -4.78e-01 -6.57e-06     1.95e-02     8.35e-04\n6920 -9.98e-04 -7.01e-02 -2.88e-07     1.14e-03     5.08e-05\n6921 -6.82e-04 -1.07e-01 -1.70e-07     7.45e-04     2.11e-05\n6922 -5.05e-04 -3.29e-02 -1.16e-07     5.89e-04     2.82e-05\n6923 -3.69e-03 -1.55e-01  6.05e-03     6.54e-03     8.21e-04\n6924 -3.16e-03 -1.81e-01 -1.17e-06     3.61e-03     1.44e-04\n6925 -8.92e-05 -1.05e-02 -1.88e-08     1.02e-04     4.48e-06\n6926 -5.09e-04 -3.87e-02 -1.08e-07     6.15e-04     3.04e-05\n6927 -1.37e-04 -1.45e-02 -2.69e-08     1.65e-04     8.23e-06\n6928 -1.76e-04 -2.09e-02 -5.30e-08     1.95e-04     7.75e-06\n6929 -5.71e-04 -4.99e-02 -1.61e-07     6.39e-04     2.43e-05\n6930 -5.07e-03 -2.05e-01  1.71e-03     7.67e-03     6.88e-04\n6931 -5.47e-03 -2.46e-01 -1.68e-06     6.20e-03     2.79e-04\n6932 -1.58e-02 -4.64e-01 -5.54e-06     1.84e-02     8.21e-04\n6933 -1.00e-03 -6.55e-02 -3.55e-07     1.15e-03     5.06e-05\n6934 -6.35e-04 -1.01e-01 -1.72e-07     7.02e-04     2.11e-05\n6935 -4.62e-04 -3.19e-02 -1.28e-07     5.61e-04     2.84e-05\n6936 -3.60e-03 -1.48e-01  8.03e-03     6.46e-03     7.88e-04\n6937 -2.98e-03 -1.74e-01 -8.60e-07     3.45e-03     1.46e-04\n6938 -8.83e-05 -1.02e-02 -2.01e-08     9.96e-05     4.23e-06\n6939 -5.00e-04 -3.55e-02 -9.62e-08     6.22e-04     3.13e-05\n6940 -1.38e-04 -1.35e-02 -1.97e-08     1.62e-04     8.10e-06\n6941 -1.80e-04 -2.11e-02 -4.62e-08     2.00e-04     7.18e-06\n6942 -5.51e-04 -4.93e-02 -1.60e-07     6.38e-04     2.39e-05\n6943  1.24e-02 -9.86e-03  1.84e-01     1.21e-02     2.72e-02\n6944  1.59e-02 -3.95e-02  2.54e-01     2.42e-02     4.41e-02\n6945  1.66e-02 -1.10e-01  2.93e-01     6.70e-02     8.94e-02\n6946  1.07e-03 -1.10e-02  5.24e-02     4.14e-03     5.74e-03\n6947 -2.11e-03 -1.28e-01  1.52e-01     3.08e-02     2.18e-02\n6948  3.59e-03 -2.56e-03  7.41e-02     1.94e-03     5.90e-03\n6949  6.57e-03 -6.74e-03  1.20e-01     7.64e-03     1.59e-02\n6950  9.14e-03 -3.40e-02  1.94e-01     1.60e-02     2.74e-02\n6951  7.10e-04 -1.14e-03  2.96e-02     5.02e-04     1.30e-03\n6952  3.23e-03 -2.53e-03  7.24e-02     1.96e-03     5.61e-03\n6953  2.79e-04 -1.24e-03  1.75e-02     5.34e-04     9.31e-04\n6954  9.91e-04 -4.72e-03  4.23e-02     1.50e-03     2.71e-03\n6955  2.47e-03 -1.04e-02  7.97e-02     4.06e-03     7.11e-03\n6956  1.91e-02  5.79e-04  1.44e-01     6.92e-03     2.74e-02\n6957  3.55e-02  1.00e-03  2.15e-01     1.39e-02     5.37e-02\n6958  5.56e-02 -6.32e-03  2.85e-01     4.17e-02     1.09e-01\n6959  3.74e-03 -5.48e-04  4.42e-02     2.56e-03     7.05e-03\n6960  1.81e-02 -1.44e-02  1.69e-01     2.11e-02     4.55e-02\n6961  4.96e-03  1.72e-04  5.61e-02     1.04e-03     6.30e-03\n6962  1.01e-02  1.80e-04  9.35e-02     4.47e-03     1.59e-02\n6963  2.29e-02  5.56e-04  1.63e-01     9.44e-03     3.46e-02\n6964  1.25e-03  1.63e-05  2.29e-02     2.68e-04     1.60e-03\n6965  4.65e-03  1.46e-04  5.48e-02     1.09e-03     6.07e-03\n6966  6.79e-04  1.82e-06  1.34e-02     2.95e-04     1.07e-03\n6967  2.65e-03  4.96e-05  3.63e-02     8.54e-04     3.76e-03\n6968  6.34e-03  1.67e-04  6.39e-02     2.28e-03     9.28e-03\n6969  3.37e-02 -1.91e-02  2.05e-01     3.11e-02     7.24e-02\n6970  3.75e-02 -5.40e-02  2.28e-01     5.41e-02     1.06e-01\n6971  3.99e-02 -1.18e-01  2.66e-01     1.25e-01     1.85e-01\n6972  2.96e-03 -1.81e-02  4.69e-02     8.29e-03     1.33e-02\n6973 -1.86e-03 -1.33e-01  6.41e-02     2.80e-02     2.54e-02\n6974  1.10e-02 -1.34e-03  9.71e-02     5.59e-03     1.88e-02\n6975  1.60e-02 -1.81e-02  1.29e-01     1.88e-02     3.99e-02\n6976  2.08e-02 -4.64e-02  1.70e-01     3.54e-02     6.51e-02\n6977  1.88e-03 -1.18e-03  3.67e-02     1.34e-03     3.87e-03\n6978  9.92e-03 -1.28e-03  8.88e-02     5.64e-03     1.72e-02\n6979  7.31e-04 -2.49e-03  2.08e-02     1.25e-03     2.46e-03\n6980  1.80e-03 -8.05e-03  3.38e-02     3.25e-03     6.04e-03\n6981  4.92e-03 -1.85e-02  6.50e-02     8.79e-03     1.62e-02\n6982  1.81e-02 -4.98e-02  1.52e-01     3.24e-02     5.87e-02\n6983  2.93e-02 -8.25e-02  2.17e-01     6.19e-02     1.05e-01\n6984  1.76e-02 -1.73e-01  2.33e-01     1.33e-01     1.65e-01\n6985  1.12e-03 -3.11e-02  3.94e-02     8.83e-03     1.15e-02\n6986  8.39e-04 -1.56e-01  1.26e-01     6.16e-02     6.50e-02\n6987  1.53e-02  2.16e-04  1.20e-01     6.77e-03     2.45e-02\n6988  7.23e-03 -4.15e-02  8.49e-02     1.89e-02     3.00e-02\n6989  1.68e-02 -7.25e-02  1.57e-01     4.06e-02     6.58e-02\n6990  3.16e-03 -2.34e-04  5.00e-02     1.75e-03     5.56e-03\n6991  1.14e-02 -1.54e-03  9.60e-02     6.61e-03     1.99e-02\n6992  3.73e-04 -5.77e-03  1.34e-02     1.34e-03     2.16e-03\n6993  2.96e-03 -9.78e-03  4.47e-02     4.49e-03     8.96e-03\n6994  5.86e-03 -2.37e-02  7.32e-02     1.10e-02     1.96e-02\n6995  1.72e-02  3.38e-04  1.31e-01     7.00e-03     2.60e-02\n6996  3.20e-02  6.94e-04  2.05e-01     1.39e-02     5.01e-02\n6997  4.45e-02 -1.37e-02  2.54e-01     4.07e-02     9.75e-02\n6998  2.98e-03 -1.08e-03  3.69e-02     2.48e-03     6.31e-03\n6999  1.37e-02 -2.05e-02  1.42e-01     1.98e-02     3.85e-02\n7000  5.09e-03  1.97e-04  5.69e-02     1.11e-03     6.44e-03\n7001  8.81e-03  2.10e-05  7.95e-02     4.43e-03     1.47e-02\n7002  1.99e-02  2.12e-04  1.49e-01     9.27e-03     3.18e-02\n7003  1.24e-03  1.65e-05  2.25e-02     2.85e-04     1.58e-03\n7004  4.72e-03  1.64e-04  5.30e-02     1.12e-03     6.17e-03\n7005  5.90e-04  1.90e-07  1.28e-02     3.09e-04     9.88e-04\n7006  2.39e-03  4.10e-05  3.18e-02     8.84e-04     3.50e-03\n7007  5.87e-03  1.08e-04  6.16e-02     2.37e-03     8.83e-03\n7008 -5.98e-05 -4.48e-02  2.76e-02     1.76e-03     1.26e-03\n7009 -8.96e-05 -4.72e-02  9.17e-03     8.61e-04     5.47e-04\n7010 -2.87e-04 -1.27e-01  2.31e-02     2.59e-03     1.61e-03\n7011 -1.69e-05 -9.74e-03  1.67e-03     1.57e-04     9.95e-05\n7012 -8.48e-06 -6.97e-03  6.33e-04     7.19e-05     4.03e-05\n7013 -7.40e-06 -5.01e-03  1.03e-03     8.77e-05     5.51e-05\n7014 -2.30e-05 -3.58e-02  3.11e-02     1.92e-03     1.55e-03\n7015 -4.90e-05 -2.93e-02  4.73e-03     4.66e-04     2.78e-04\n7016 -1.05e-06 -1.57e-03  2.00e-04     1.39e-05     8.59e-06\n7017 -8.01e-06 -5.25e-03  1.27e-03     9.68e-05     6.17e-05\n7018 -1.81e-06 -2.28e-03  4.46e-04     2.43e-05     1.53e-05\n7019 -2.45e-06 -2.50e-03  2.54e-04     2.39e-05     1.47e-05\n7020 -8.31e-06 -6.50e-03  8.00e-04     8.09e-05     4.59e-05\n7021  1.68e-02  3.26e-04  1.39e-01     7.54e-03     2.67e-02\n7022  2.89e-02  4.10e-04  2.01e-01     1.50e-02     4.81e-02\n7023  3.90e-02 -2.12e-02  2.55e-01     4.30e-02     9.45e-02\n7024  2.54e-03 -1.72e-03  3.91e-02     2.63e-03     6.08e-03\n7025  5.61e-03 -3.77e-02  1.05e-01     1.68e-02     2.64e-02\n7026  5.15e-03  1.94e-04  5.59e-02     1.18e-03     6.59e-03\n7027  8.41e-03 -8.28e-06  8.51e-02     4.90e-03     1.48e-02\n7028  1.78e-02 -4.49e-05  1.50e-01     9.89e-03     3.09e-02\n7029  1.17e-03  1.58e-05  2.04e-02     3.09e-04     1.55e-03\n7030  4.61e-03  1.54e-04  5.40e-02     1.24e-03     6.16e-03\n7031  5.41e-04 -8.12e-06  1.23e-02     3.32e-04     9.76e-04\n7032  2.05e-03  1.75e-05  2.95e-02     9.04e-04     3.24e-03\n7033  4.90e-03  3.75e-05  5.74e-02     2.49e-03     8.17e-03\n7034  4.30e-02 -2.92e-02  3.41e-01     4.37e-02     9.49e-02\n7035  5.40e-02 -9.84e-02  3.84e-01     8.43e-02     1.46e-01\n7036  4.83e-02 -2.01e-01  3.68e-01     2.09e-01     2.62e-01\n7037  4.35e-03 -3.01e-02  1.36e-01     1.51e-02     2.06e-02\n7038 -9.69e-03 -2.41e-01  2.66e-01     1.06e-01     7.36e-02\n7039  1.36e-02 -6.79e-03  1.84e-01     7.29e-03     2.19e-02\n7040  2.31e-02 -2.14e-02  2.60e-01     2.83e-02     5.52e-02\n7041  3.32e-02 -8.11e-02  3.37e-01     5.78e-02     9.62e-02\n7042  2.78e-03 -3.49e-03  8.04e-02     2.00e-03     5.25e-03\n7043  1.20e-02 -7.07e-03  1.75e-01     7.34e-03     2.09e-02\n7044  1.04e-03 -4.03e-03  5.22e-02     2.02e-03     3.55e-03\n7045  3.82e-03 -1.35e-02  1.13e-01     5.81e-03     1.04e-02\n7046  9.30e-03 -2.93e-02  1.82e-01     1.51e-02     2.54e-02\n7047 -5.51e-03 -1.97e-01  7.37e-04     7.72e-03     6.69e-04\n7048 -5.44e-03 -2.66e-01 -1.87e-06     6.11e-03     2.68e-04\n7049 -1.63e-02 -4.72e-01 -4.23e-06     1.89e-02     8.34e-04\n7050 -9.87e-04 -7.15e-02 -2.87e-07     1.13e-03     4.97e-05\n7051 -6.73e-04 -1.09e-01 -1.47e-07     7.25e-04     2.03e-05\n7052 -5.13e-04 -3.56e-02 -1.24e-07     5.92e-04     2.74e-05\n7053 -3.69e-03 -1.50e-01  7.05e-03     6.46e-03     7.86e-04\n7054 -3.09e-03 -1.86e-01 -9.63e-07     3.53e-03     1.39e-04\n7055 -9.09e-05 -1.14e-02 -1.80e-08     1.04e-04     4.43e-06\n7056 -5.44e-04 -3.51e-02 -9.94e-08     6.48e-04     3.15e-05\n7057 -1.42e-04 -1.43e-02 -2.45e-08     1.68e-04     8.68e-06\n7058 -1.93e-04 -2.19e-02 -4.56e-08     2.12e-04     7.37e-06\n7059 -5.78e-04 -4.94e-02 -1.45e-07     6.42e-04     2.33e-05\n7060 -3.72e-02 -2.94e-01 -1.20e-03     4.27e-02     1.70e-03\n7061 -2.23e-02 -2.09e-01 -8.14e-04     2.45e-02     6.88e-04\n7062 -6.38e-02 -4.24e-01 -2.36e-03     6.91e-02     2.01e-03\n7063 -4.10e-03 -5.38e-02 -1.31e-04     4.54e-03     1.30e-04\n7064 -1.96e-03 -2.68e-02 -6.28e-05     2.12e-03     5.30e-05\n7065 -2.32e-03 -3.68e-02 -5.65e-05     2.53e-03     7.37e-05\n7066 -3.29e-02 -2.62e-01 -6.23e-04     3.95e-02     2.22e-03\n7067 -1.24e-02 -1.33e-01 -3.81e-04     1.37e-02     3.57e-04\n7068 -3.93e-04 -9.15e-03 -4.62e-06     4.34e-04     1.20e-05\n7069 -2.48e-03 -3.78e-02 -7.04e-05     2.73e-03     8.10e-05\n7070 -7.00e-04 -1.68e-02 -5.62e-06     7.78e-04     2.28e-05\n7071 -6.72e-04 -1.34e-02 -1.40e-05     7.33e-04     1.94e-05\n7072 -2.13e-03 -3.20e-02 -5.65e-05     2.36e-03     6.46e-05\n7073  2.01e-02  7.54e-04  1.47e-01     6.92e-03     2.87e-02\n7074  3.48e-02  1.20e-03  2.24e-01     1.34e-02     5.21e-02\n7075  5.74e-02 -3.81e-03  2.97e-01     4.27e-02     1.12e-01\n7076  4.06e-03 -3.08e-04  4.61e-02     2.59e-03     7.42e-03\n7077  9.95e-03 -3.20e-02  1.35e-01     1.81e-02     3.29e-02\n7078  4.56e-03  1.90e-04  5.05e-02     1.00e-03     5.77e-03\n7079  1.10e-02  3.04e-04  9.52e-02     4.43e-03     1.66e-02\n7080  2.22e-02  6.35e-04  1.64e-01     9.23e-03     3.40e-02\n7081  1.12e-03  1.45e-05  2.02e-02     2.74e-04     1.45e-03\n7082  4.52e-03  1.73e-04  4.87e-02     1.05e-03     5.88e-03\n7083  7.15e-04  3.05e-06  1.46e-02     3.03e-04     1.09e-03\n7084  2.37e-03  4.48e-05  3.21e-02     8.27e-04     3.43e-03\n7085  5.89e-03  1.70e-04  6.15e-02     2.27e-03     8.80e-03\n7086 -4.30e-02 -4.53e-01  8.55e-02     1.09e-01     4.58e-02\n7087 -1.07e-01 -5.97e-01 -9.89e-05     1.45e-01     2.13e-02\n7088 -2.41e-01 -7.07e-01 -4.79e-03     3.45e-01     6.08e-02\n7089 -2.36e-02 -3.22e-01 -1.03e-04     3.05e-02     3.95e-03\n7090 -4.51e-02 -5.48e-01 -4.60e-04     4.87e-02     1.73e-03\n7091 -9.72e-03 -1.93e-01  8.85e-04     1.38e-02     2.26e-03\n7092 -1.67e-02 -3.58e-01  1.24e-01     7.85e-02     4.95e-02\n7093 -7.63e-02 -5.47e-01 -9.10e-04     9.60e-02     1.16e-02\n7094 -2.44e-03 -7.59e-02 -3.00e-06     3.14e-03     3.62e-04\n7095 -1.02e-02 -1.92e-01  1.82e-03     1.49e-02     2.55e-03\n7096 -2.90e-03 -9.55e-02  2.32e-04     4.13e-03     6.76e-04\n7097 -6.56e-03 -1.47e-01 -6.62e-05     7.70e-03     6.08e-04\n7098 -1.81e-02 -2.79e-01 -2.48e-04     2.19e-02     1.97e-03\n7099  2.48e-03 -3.02e-02  9.53e-02     8.79e-03     1.34e-02\n7100 -2.75e-04 -7.35e-02  4.34e-02     8.41e-03     7.60e-03\n7101 -1.12e-03 -1.52e-01  9.21e-02     2.41e-02     2.15e-02\n7102 -5.58e-05 -1.59e-02  8.86e-03     1.45e-03     1.32e-03\n7103 -2.68e-04 -2.90e-02  3.58e-03     1.10e-03     6.75e-04\n7104  5.72e-06 -8.94e-03  6.98e-03     8.34e-04     8.37e-04\n7105  3.12e-03 -1.65e-02  7.93e-02     6.51e-03     1.15e-02\n7106 -3.07e-04 -5.27e-02  2.55e-02     4.90e-03     4.14e-03\n7107 -3.67e-06 -3.46e-03  1.66e-03     1.61e-04     1.42e-04\n7108  1.14e-05 -8.19e-03  8.75e-03     8.88e-04     9.48e-04\n7109  1.75e-07 -3.78e-03  2.51e-03     2.23e-04     2.31e-04\n7110 -3.07e-05 -6.59e-03  1.74e-03     3.10e-04     2.28e-04\n7111 -8.70e-05 -1.30e-02  4.95e-03     9.33e-04     7.06e-04\n7112  1.89e-02  4.50e-04  1.39e-01     7.28e-03     2.83e-02\n7113  3.56e-02  9.24e-04  2.24e-01     1.50e-02     5.49e-02\n7114  7.86e-02 -3.96e-03  3.46e-01     5.08e-02     1.43e-01\n7115  5.70e-03 -3.33e-04  6.28e-02     3.07e-03     9.79e-03\n7116  2.79e-02 -2.79e-02  2.19e-01     2.86e-02     6.41e-02\n7117  3.41e-03  9.05e-05  3.76e-02     1.05e-03     4.75e-03\n7118  1.16e-02  2.08e-04  1.01e-01     4.85e-03     1.79e-02\n7119  2.42e-02  3.88e-04  1.73e-01     9.90e-03     3.69e-02\n7120  8.75e-04  9.08e-06  1.56e-02     2.73e-04     1.23e-03\n7121  3.39e-03  8.59e-05  3.88e-02     1.06e-03     4.70e-03\n7122  7.81e-04  1.72e-06  1.70e-02     3.36e-04     1.21e-03\n7123  2.43e-03  3.13e-05  3.17e-02     8.87e-04     3.64e-03\n7124  6.33e-03  9.96e-05  6.05e-02     2.43e-03     9.49e-03\n7125  1.76e-02  3.92e-04  1.38e-01     7.07e-03     2.65e-02\n7126  3.26e-02  5.86e-04  2.07e-01     1.44e-02     5.10e-02\n7127  4.48e-02 -1.32e-02  2.67e-01     4.08e-02     9.76e-02\n7128  3.00e-03 -1.09e-03  3.93e-02     2.53e-03     6.33e-03\n7129  1.40e-02 -2.01e-02  1.54e-01     2.01e-02     3.95e-02\n7130  5.13e-03  1.78e-04  5.84e-02     1.11e-03     6.44e-03\n7131  9.00e-03  1.33e-05  8.90e-02     4.50e-03     1.46e-02\n7132  2.01e-02  2.27e-04  1.56e-01     9.47e-03     3.20e-02\n7133  1.25e-03  1.60e-05  2.28e-02     2.85e-04     1.61e-03\n7134  4.70e-03  1.67e-04  5.26e-02     1.13e-03     6.05e-03\n7135  6.02e-04 -5.26e-08  1.23e-02     3.00e-04     9.83e-04\n7136  2.47e-03  4.37e-05  3.41e-02     8.64e-04     3.49e-03\n7137  5.74e-03  1.07e-04  6.18e-02     2.32e-03     8.60e-03\n7138  8.78e-02  2.86e-03  4.25e-01     4.24e-02     1.37e-01\n7139  1.34e-01  2.69e-03  4.65e-01     8.19e-02     2.29e-01\n7140  1.48e-01 -4.84e-02  4.38e-01     2.09e-01     3.89e-01\n7141  1.80e-02 -5.81e-03  2.02e-01     1.54e-02     3.64e-02\n7142  5.57e-02 -7.87e-02  3.65e-01     1.09e-01     1.81e-01\n7143  2.80e-02  1.31e-03  2.44e-01     6.71e-03     3.63e-02\n7144  5.00e-02 -3.30e-04  3.31e-01     2.74e-02     8.19e-02\n7145  9.41e-02 -2.12e-03  4.28e-01     5.61e-02     1.61e-01\n7146  6.89e-03  9.05e-05  1.15e-01     1.79e-03     9.03e-03\n7147  2.59e-02  1.06e-03  2.28e-01     6.89e-03     3.46e-02\n7148  3.54e-03 -3.76e-05  7.95e-02     1.94e-03     6.01e-03\n7149  1.30e-02  9.24e-05  1.63e-01     5.47e-03     1.99e-02\n7150  3.05e-02  4.98e-05  2.68e-01     1.44e-02     4.74e-02\n7151  5.19e-02  3.33e-03  2.29e-01     2.03e-02     7.73e-02\n7152  8.84e-02  6.02e-03  3.19e-01     3.93e-02     1.38e-01\n7153  1.16e-01 -2.45e-02  3.69e-01     1.13e-01     2.57e-01\n7154  1.03e-02 -2.71e-03  8.39e-02     7.44e-03     1.96e-02\n7155  4.53e-02 -4.23e-02  2.45e-01     5.88e-02     1.16e-01\n7156  1.48e-02  1.03e-03  1.02e-01     3.14e-03     1.88e-02\n7157  2.78e-02  9.73e-04  1.55e-01     1.28e-02     4.43e-02\n7158  5.94e-02  3.14e-03  2.53e-01     2.71e-02     9.39e-02\n7159  3.75e-03  7.59e-05  4.82e-02     8.70e-04     4.80e-03\n7160  1.38e-02  9.33e-04  9.60e-02     3.21e-03     1.78e-02\n7161  1.99e-03  6.83e-06  3.31e-02     9.25e-04     3.28e-03\n7162  7.63e-03  2.99e-04  7.09e-02     2.61e-03     1.10e-02\n7163  1.79e-02  9.09e-04  1.23e-01     6.72e-03     2.67e-02\n7164  5.32e-02 -2.73e-02  3.60e-01     4.50e-02     1.07e-01\n7165  6.90e-02 -9.77e-02  4.10e-01     8.57e-02     1.62e-01\n7166  6.97e-02 -2.17e-01  3.89e-01     2.23e-01     3.02e-01\n7167  6.44e-03 -3.08e-02  1.60e-01     1.65e-02     2.49e-02\n7168 -7.42e-03 -2.70e-01  2.96e-01     1.15e-01     8.67e-02\n7169  1.37e-02 -7.17e-03  1.84e-01     7.19e-03     2.24e-02\n7170  3.09e-02 -1.80e-02  2.82e-01     2.92e-02     6.40e-02\n7171  4.27e-02 -8.47e-02  3.65e-01     5.86e-02     1.07e-01\n7172  2.81e-03 -3.36e-03  7.43e-02     1.89e-03     5.11e-03\n7173  1.31e-02 -7.15e-03  1.74e-01     7.41e-03     2.20e-02\n7174  1.47e-03 -4.62e-03  5.45e-02     2.13e-03     4.16e-03\n7175  4.91e-03 -1.37e-02  1.13e-01     5.74e-03     1.12e-02\n7176  1.20e-02 -3.15e-02  1.98e-01     1.54e-02     2.83e-02\n7177 -1.06e-03 -6.95e-02  7.22e-02     1.17e-02     8.16e-03\n7178 -1.02e-02 -1.53e-01  4.16e-02     2.13e-02     5.18e-03\n7179 -2.70e-02 -2.97e-01  5.90e-02     5.43e-02     1.42e-02\n7180 -1.68e-03 -3.49e-02  5.42e-03     3.40e-03     8.50e-04\n7181 -8.86e-03 -1.20e-01 -1.40e-04     1.03e-02     4.73e-04\n7182 -7.38e-04 -2.08e-02  9.78e-03     1.97e-03     5.76e-04\n7183 -7.35e-05 -3.66e-02  6.05e-02     7.49e-03     6.65e-03\n7184 -7.42e-03 -1.13e-01  1.83e-02     1.38e-02     2.83e-03\n7185 -2.06e-04 -8.85e-03  1.76e-03     4.81e-04     9.70e-05\n7186 -6.78e-04 -1.99e-02  9.69e-03     2.05e-03     6.19e-04\n7187 -1.61e-04 -8.26e-03  2.26e-03     4.74e-04     1.45e-04\n7188 -7.55e-04 -1.75e-02  1.17e-03     1.25e-03     1.57e-04\n7189 -1.98e-03 -3.71e-02  4.35e-03     3.30e-03     5.20e-04\n7190  1.59e-02 -7.09e-03  2.09e-01     1.27e-02     3.11e-02\n7191  2.16e-02 -3.40e-02  2.90e-01     2.48e-02     5.01e-02\n7192  2.71e-02 -1.03e-01  3.46e-01     7.24e-02     1.08e-01\n7193  1.88e-03 -1.04e-02  7.24e-02     4.47e-03     6.96e-03\n7194 -1.47e-03 -1.21e-01  2.09e-01     3.46e-02     2.65e-02\n7195  3.72e-03 -1.90e-03  7.40e-02     1.92e-03     5.94e-03\n7196  8.91e-03 -4.87e-03  1.47e-01     7.99e-03     1.91e-02\n7197  1.28e-02 -2.67e-02  2.32e-01     1.67e-02     3.17e-02\n7198  7.48e-04 -9.10e-04  2.65e-02     4.97e-04     1.40e-03\n7199  3.61e-03 -1.79e-03  7.17e-02     1.95e-03     6.00e-03\n7200  3.90e-04 -1.11e-03  2.14e-02     5.47e-04     1.10e-03\n7201  1.24e-03 -3.89e-03  4.77e-02     1.58e-03     3.00e-03\n7202  3.25e-03 -8.55e-03  9.83e-02     4.22e-03     8.08e-03\n7203  1.67e-01 -3.25e-03  4.07e-01     1.35e-01     3.30e-01\n7204  2.11e-01 -1.49e-02  4.55e-01     2.35e-01     4.86e-01\n7205  1.53e-01 -9.04e-02  4.24e-01     4.58e-01     6.38e-01\n7206  3.71e-02 -4.27e-02  2.03e-01     4.79e-02     9.48e-02\n7207  9.30e-02 -1.44e-01  3.49e-01     2.72e-01     3.87e-01\n7208  9.83e-02  1.31e-02  3.30e-01     2.58e-02     1.30e-01\n7209  1.00e-01 -2.59e-02  3.20e-01     8.85e-02     2.07e-01\n7210  1.68e-01 -2.62e-02  4.14e-01     1.70e-01     3.66e-01\n7211  2.69e-02  7.63e-04  1.89e-01     7.09e-03     3.57e-02\n7212  8.38e-02  1.05e-02  3.14e-01     2.58e-02     1.17e-01\n7213  8.98e-03 -2.74e-03  9.66e-02     6.92e-03     1.85e-02\n7214  3.86e-02  8.77e-04  2.04e-01     1.94e-02     6.42e-02\n7215  7.91e-02 -2.91e-03  2.85e-01     4.96e-02     1.40e-01\n7216  1.29e-02 -2.77e-03  1.91e-01     1.04e-02     2.58e-02\n7217  2.26e-02 -7.70e-03  2.68e-01     2.02e-02     4.86e-02\n7218  2.15e-02 -4.66e-02  2.81e-01     4.95e-02     8.07e-02\n7219  1.37e-03 -4.49e-03  5.21e-02     3.03e-03     5.13e-03\n7220  4.13e-03 -4.13e-02  1.66e-01     2.11e-02     2.87e-02\n7221  6.80e-03  1.29e-04  1.15e-01     1.87e-03     9.12e-03\n7222  5.70e-03 -3.50e-03  1.17e-01     6.19e-03     1.34e-02\n7223  1.29e-02 -7.04e-03  2.08e-01     1.33e-02     2.99e-02\n7224  1.45e-03  9.10e-06  4.27e-02     4.68e-04     2.06e-03\n7225  5.52e-03  7.67e-05  9.74e-02     1.83e-03     7.85e-03\n7226  3.38e-04 -3.51e-04  1.69e-02     3.98e-04     8.76e-04\n7227  1.84e-03 -3.34e-04  5.36e-02     1.29e-03     3.50e-03\n7228  4.05e-03 -1.36e-03  9.34e-02     3.37e-03     8.40e-03\n7229  2.67e-02  3.29e-04  2.46e-01     1.15e-02     4.16e-02\n7230  4.66e-02  1.82e-04  3.32e-01     2.32e-02     7.51e-02\n7231  6.65e-02 -2.04e-02  3.83e-01     6.62e-02     1.48e-01\n7232  4.87e-03 -1.71e-03  8.84e-02     4.08e-03     1.01e-02\n7233  1.73e-02 -3.60e-02  2.59e-01     3.17e-02     5.44e-02\n7234  7.70e-03  1.95e-04  1.04e-01     1.79e-03     9.83e-03\n7235  1.44e-02 -1.08e-04  1.70e-01     7.28e-03     2.34e-02\n7236  3.04e-02 -4.74e-04  2.80e-01     1.53e-02     5.01e-02\n7237  1.93e-03  1.19e-05  4.44e-02     4.72e-04     2.53e-03\n7238  7.13e-03  1.57e-04  9.25e-02     1.85e-03     9.42e-03\n7239  9.34e-04 -1.54e-05  2.88e-02     5.08e-04     1.56e-03\n7240  3.47e-03  1.19e-05  7.02e-02     1.42e-03     5.34e-03\n7241  8.49e-03 -1.03e-06  1.20e-01     3.80e-03     1.32e-02\n7242  3.26e-02 -3.19e-02  2.11e-01     3.65e-02     7.93e-02\n7243  1.76e-02 -1.10e-01  1.89e-01     5.44e-02     8.10e-02\n7244  2.30e-02 -1.71e-01  2.48e-01     1.28e-01     1.69e-01\n7245  1.58e-03 -3.11e-02  4.48e-02     8.75e-03     1.20e-02\n7246 -3.62e-03 -1.32e-01  2.97e-02     1.64e-02     1.14e-02\n7247  4.29e-03 -1.41e-02  6.43e-02     5.71e-03     1.18e-02\n7248  1.82e-02 -2.42e-02  1.53e-01     2.28e-02     4.91e-02\n7249  8.12e-03 -9.50e-02  1.37e-01     3.38e-02     4.83e-02\n7250  4.62e-04 -7.14e-03  1.68e-02     1.31e-03     2.25e-03\n7251  4.47e-03 -1.22e-02  6.25e-02     5.61e-03     1.19e-02\n7252  4.36e-04 -5.62e-03  1.73e-02     1.33e-03     2.18e-03\n7253  2.67e-04 -1.87e-02  1.78e-02     2.77e-03     3.51e-03\n7254  1.08e-03 -3.51e-02  4.24e-02     7.88e-03     1.01e-02\n7255  4.42e-02  1.04e-03  2.15e-01     2.35e-02     7.35e-02\n7256  7.58e-02  4.09e-04  2.99e-01     4.61e-02     1.33e-01\n7257  8.53e-02 -5.61e-02  3.24e-01     1.20e-01     2.26e-01\n7258  6.91e-03 -7.85e-03  6.96e-02     7.86e-03     1.71e-02\n7259  2.88e-02 -6.15e-02  2.08e-01     5.81e-02     9.91e-02\n7260  1.74e-02  1.25e-03  1.26e-01     4.00e-03     2.21e-02\n7261  2.23e-02 -2.43e-03  1.36e-01     1.48e-02     4.14e-02\n7262  4.90e-02 -3.18e-03  2.35e-01     3.09e-02     8.73e-02\n7263  4.24e-03  8.56e-05  5.20e-02     1.06e-03     5.51e-03\n7264  1.54e-02  9.61e-04  1.05e-01     3.97e-03     2.03e-02\n7265  1.53e-03 -1.86e-04  2.35e-02     1.06e-03     2.97e-03\n7266  6.94e-03  1.55e-04  6.44e-02     2.98e-03     1.10e-02\n7267  1.54e-02  2.23e-04  1.08e-01     7.93e-03     2.57e-02\n7268  1.04e-01 -5.03e-02  4.46e-01     9.89e-02     2.13e-01\n7269  1.19e-01 -1.67e-01  4.56e-01     1.84e-01     3.12e-01\n7270  9.20e-02 -2.88e-01  3.84e-01     4.01e-01     4.98e-01\n7271  1.48e-02 -5.77e-02  2.65e-01     3.83e-02     5.63e-02\n7272 -2.08e-02 -3.71e-01  3.34e-01     2.36e-01     1.85e-01\n7273  3.14e-02 -1.81e-02  3.03e-01     1.70e-02     5.03e-02\n7274  6.61e-02 -3.59e-02  3.88e-01     6.65e-02     1.39e-01\n7275  8.13e-02 -1.48e-01  4.27e-01     1.29e-01     2.19e-01\n7276  6.93e-03 -8.27e-03  1.49e-01     4.69e-03     1.23e-02\n7277  2.98e-02 -1.54e-02  2.90e-01     1.75e-02     4.99e-02\n7278  3.33e-03 -1.02e-02  1.12e-01     5.16e-03     9.44e-03\n7279  1.11e-02 -2.95e-02  2.04e-01     1.40e-02     2.69e-02\n7280  2.72e-02 -5.92e-02  3.09e-01     3.58e-02     6.56e-02\n7281  4.50e-03 -3.11e-02  1.12e-01     9.82e-03     1.75e-02\n7282 -5.32e-05 -7.94e-02  5.49e-02     1.01e-02     1.02e-02\n7283 -7.65e-04 -1.70e-01  1.07e-01     3.01e-02     2.81e-02\n7284 -2.87e-05 -2.02e-02  1.11e-02     1.87e-03     1.74e-03\n7285 -3.41e-04 -4.00e-02  4.34e-03     1.42e-03     8.62e-04\n7286  4.32e-05 -8.22e-03  1.02e-02     9.38e-04     1.05e-03\n7287  5.38e-03 -1.51e-02  1.04e-01     7.30e-03     1.53e-02\n7288 -1.91e-04 -5.62e-02  3.16e-02     5.97e-03     5.50e-03\n7289 -5.53e-07 -3.60e-03  1.92e-03     1.83e-04     1.78e-04\n7290  5.08e-05 -8.74e-03  1.14e-02     9.77e-04     1.16e-03\n7291  4.49e-06 -3.93e-03  3.70e-03     2.62e-04     2.94e-04\n7292 -2.93e-05 -6.98e-03  2.23e-03     3.82e-04     3.00e-04\n7293 -7.43e-05 -1.56e-02  6.62e-03     1.15e-03     9.44e-04\n7294 -2.77e-03 -1.26e-01  1.85e-01     2.53e-02     1.67e-02\n7295 -2.04e-03 -8.17e-02  1.08e-01     1.25e-02     7.11e-03\n7296 -6.13e-03 -1.86e-01  2.08e-01     3.73e-02     2.10e-02\n7297 -3.64e-04 -1.99e-02  2.76e-02     2.33e-03     1.30e-03\n7298 -1.74e-04 -9.45e-03  1.28e-02     1.01e-03     5.40e-04\n7299 -1.79e-04 -1.21e-02  1.81e-02     1.27e-03     7.35e-04\n7300 -1.78e-03 -1.27e-01  1.92e-01     2.66e-02     1.96e-02\n7301 -1.06e-03 -5.01e-02  6.97e-02     6.75e-03     3.63e-03\n7302 -2.48e-05 -3.26e-03  3.51e-03     2.15e-04     1.19e-04\n7303 -2.02e-04 -1.25e-02  1.84e-02     1.40e-03     8.33e-04\n7304 -4.57e-05 -5.95e-03  6.63e-03     3.93e-04     2.19e-04\n7305 -5.14e-05 -4.17e-03  4.91e-03     3.52e-04     2.00e-04\n7306 -1.82e-04 -1.12e-02  1.54e-02     1.17e-03     6.50e-04\n7307  2.43e-02  1.00e-03  1.65e-01     6.63e-03     3.25e-02\n7308  4.03e-02  1.43e-03  2.35e-01     1.29e-02     5.66e-02\n7309  8.63e-02  1.86e-03  3.56e-01     4.37e-02     1.43e-01\n7310  6.12e-03  9.21e-05  6.39e-02     2.65e-03     9.64e-03\n7311  7.04e-03 -4.11e-02  1.21e-01     1.67e-02     2.78e-02\n7312  4.12e-03  1.48e-04  4.17e-02     8.97e-04     5.23e-03\n7313  1.49e-02  5.60e-04  1.20e-01     4.38e-03     2.04e-02\n7314  2.61e-02  8.78e-04  1.80e-01     8.88e-03     3.75e-02\n7315  9.53e-04  1.23e-05  1.76e-02     2.37e-04     1.24e-03\n7316  4.12e-03  1.44e-04  4.42e-02     9.40e-04     5.29e-03\n7317  9.19e-04  1.03e-05  1.81e-02     2.94e-04     1.33e-03\n7318  2.29e-03  4.20e-05  3.15e-02     7.65e-04     3.30e-03\n7319  6.24e-03  1.61e-04  6.29e-02     2.06e-03     8.81e-03\n7320  1.83e-02 -3.15e-01  2.55e-01     1.74e-01     2.02e-01\n7321 -1.21e-01 -5.23e-01  1.03e-01     2.70e-01     1.30e-01\n7322 -1.98e-01 -5.82e-01  1.32e-01     5.47e-01     3.05e-01\n7323 -3.46e-02 -3.44e-01  2.89e-02     6.67e-02     2.56e-02\n7324 -1.77e-01 -6.94e-01 -7.28e-03     1.96e-01     1.28e-02\n7325 -9.27e-03 -1.97e-01  3.28e-02     2.77e-02     1.52e-02\n7326  4.19e-02 -2.01e-01  2.70e-01     1.22e-01     1.78e-01\n7327 -1.03e-01 -5.19e-01  5.46e-02     1.97e-01     7.36e-02\n7328 -3.26e-03 -9.44e-02  5.65e-03     7.26e-03     2.72e-03\n7329 -8.89e-03 -2.01e-01  3.54e-02     2.94e-02     1.65e-02\n7330 -2.72e-03 -1.02e-01  1.35e-02     9.01e-03     4.57e-03\n7331 -1.34e-02 -1.89e-01  1.93e-03     1.97e-02     4.45e-03\n7332 -3.42e-02 -3.48e-01  7.59e-03     5.38e-02     1.39e-02\n7333  3.10e-02  7.90e-04  2.76e-01     1.13e-02     4.55e-02\n7334  5.55e-02  1.22e-03  3.57e-01     2.31e-02     8.39e-02\n7335  8.78e-02 -9.55e-03  4.17e-01     6.83e-02     1.71e-01\n7336  6.58e-03 -5.88e-04  1.10e-01     4.32e-03     1.20e-02\n7337  2.49e-02 -3.42e-02  3.03e-01     3.41e-02     6.56e-02\n7338  7.46e-03  2.19e-04  1.06e-01     1.70e-03     9.49e-03\n7339  1.79e-02  3.08e-04  1.96e-01     7.44e-03     2.74e-02\n7340  3.61e-02  5.04e-04  2.98e-01     1.54e-02     5.48e-02\n7341  1.79e-03  1.71e-05  4.09e-02     4.36e-04     2.36e-03\n7342  7.20e-03  1.89e-04  1.07e-01     1.73e-03     9.15e-03\n7343  1.18e-03  2.11e-06  3.13e-02     5.06e-04     1.87e-03\n7344  4.02e-03  3.84e-05  7.86e-02     1.42e-03     5.76e-03\n7345  9.82e-03  1.28e-04  1.37e-01     3.79e-03     1.43e-02\n7346  2.17e-03 -4.18e-02  1.24e-01     1.26e-02     1.53e-02\n7347 -3.61e-03 -1.14e-01  1.29e-01     2.43e-02     1.29e-02\n7348 -1.44e-02 -2.43e-01  1.77e-01     6.58e-02     3.22e-02\n7349 -8.16e-04 -3.08e-02  2.23e-02     4.11e-03     2.03e-03\n7350 -1.43e-02 -1.59e-01  7.88e-03     1.93e-02     1.49e-03\n7351 -6.64e-05 -1.32e-02  3.04e-02     2.02e-03     1.51e-03\n7352  2.14e-03 -2.35e-02  9.18e-02     7.83e-03     1.08e-02\n7353 -3.43e-03 -8.67e-02  8.03e-02     1.59e-02     7.24e-03\n7354 -4.67e-05 -5.73e-03  8.14e-03     5.22e-04     2.66e-04\n7355 -4.70e-05 -1.22e-02  2.86e-02     2.00e-03     1.56e-03\n7356 -3.31e-05 -5.45e-03  6.81e-03     5.16e-04     3.38e-04\n7357 -4.12e-04 -1.46e-02  9.38e-03     1.41e-03     4.59e-04\n7358 -1.03e-03 -3.10e-02  2.36e-02     3.88e-03     1.43e-03\n7359  1.06e-02 -6.82e-02  1.40e-01     3.44e-02     5.06e-02\n7360  1.44e-02 -1.15e-01  1.88e-01     6.39e-02     8.95e-02\n7361  4.00e-03 -1.99e-01  2.00e-01     1.28e-01     1.37e-01\n7362  2.29e-04 -3.47e-02  3.10e-02     8.57e-03     9.36e-03\n7363 -8.88e-03 -1.89e-01  7.00e-02     5.59e-02     4.21e-02\n7364  1.26e-02 -4.03e-03  1.18e-01     8.22e-03     2.36e-02\n7365  3.49e-03 -5.02e-02  7.67e-02     1.96e-02     2.56e-02\n7366  7.19e-03 -9.59e-02  1.35e-01     4.20e-02     5.55e-02\n7367  2.18e-03 -2.97e-03  4.15e-02     2.19e-03     5.13e-03\n7368  8.54e-03 -7.85e-03  9.41e-02     7.87e-03     1.93e-02\n7369  1.37e-04 -7.76e-03  1.10e-02     1.39e-03     1.78e-03\n7370  1.18e-03 -1.80e-02  3.45e-02     4.80e-03     7.04e-03\n7371  2.42e-03 -3.61e-02  5.98e-02     1.19e-02     1.64e-02\n7372  1.52e-02  1.79e-04  1.35e-01     7.51e-03     2.45e-02\n7373  2.82e-02  2.52e-04  2.03e-01     1.48e-02     4.68e-02\n7374  3.54e-02 -2.13e-02  2.54e-01     4.14e-02     8.72e-02\n7375  2.35e-03 -1.75e-03  3.51e-02     2.46e-03     5.46e-03\n7376  1.06e-02 -2.40e-02  1.31e-01     1.97e-02     3.41e-02\n7377  5.41e-03  1.93e-04  5.73e-02     1.19e-03     6.79e-03\n7378  7.56e-03 -3.45e-04  8.00e-02     4.72e-03     1.36e-02\n7379  1.74e-02 -2.12e-04  1.49e-01     1.01e-02     2.96e-02\n7380  1.27e-03  1.51e-05  2.58e-02     3.13e-04     1.65e-03\n7381  4.77e-03  1.49e-04  5.34e-02     1.23e-03     6.33e-03\n7382  4.95e-04 -1.96e-05  1.22e-02     3.17e-04     9.11e-04\n7383  2.25e-03  2.93e-05  3.19e-02     9.13e-04     3.41e-03\n7384  5.24e-03  6.49e-05  5.70e-02     2.49e-03     8.37e-03\n7385  4.78e-02 -8.67e-04  2.20e-01     2.50e-02     8.08e-02\n7386  7.82e-02 -1.08e-02  2.97e-01     4.99e-02     1.40e-01\n7387  1.09e-01 -7.42e-02  3.78e-01     1.46e-01     2.89e-01\n7388  1.05e-02 -1.13e-02  9.02e-02     1.01e-02     2.32e-02\n7389  7.01e-03 -1.81e-01  1.88e-01     7.88e-02     9.15e-02\n7390  1.09e-02  4.68e-04  8.49e-02     3.72e-03     1.57e-02\n7391  2.82e-02 -3.60e-03  1.58e-01     1.65e-02     5.04e-02\n7392  5.09e-02 -1.26e-02  2.40e-01     3.39e-02     9.47e-02\n7393  2.73e-03  2.32e-05  3.57e-02     1.02e-03     4.07e-03\n7394  1.09e-02  3.65e-04  8.48e-02     3.87e-03     1.61e-02\n7395  1.83e-03 -4.76e-04  3.19e-02     1.19e-03     3.51e-03\n7396  5.71e-03 -6.80e-04  5.79e-02     3.16e-03     9.99e-03\n7397  1.45e-02 -2.61e-03  1.01e-01     8.44e-03     2.57e-02\n7398  1.49e-02 -1.06e-03  1.23e-01     8.59e-03     2.59e-02\n7399  2.70e-02 -3.53e-03  1.90e-01     1.73e-02     4.93e-02\n7400  3.90e-02 -4.79e-02  2.66e-01     5.10e-02     1.03e-01\n7401  2.48e-03 -4.22e-03  3.96e-02     3.21e-03     6.63e-03\n7402  9.18e-03 -5.33e-02  1.46e-01     2.61e-02     4.15e-02\n7403  4.03e-03  1.07e-04  4.37e-02     1.32e-03     5.65e-03\n7404  7.62e-03 -2.25e-03  7.52e-02     5.47e-03     1.48e-02\n7405  1.69e-02 -4.25e-03  1.45e-01     1.16e-02     3.21e-02\n7406  9.60e-04  7.36e-06  1.86e-02     3.39e-04     1.41e-03\n7407  3.71e-03  8.63e-05  4.41e-02     1.34e-03     5.49e-03\n7408  4.87e-04 -2.39e-04  1.13e-02     3.80e-04     1.02e-03\n7409  2.01e-03 -4.42e-05  3.05e-02     1.08e-03     3.47e-03\n7410  4.83e-03 -4.87e-04  5.45e-02     2.77e-03     8.57e-03\n7411  1.65e-02 -1.13e-01  2.12e-01     4.61e-02     7.36e-02\n7412 -1.92e-03 -1.97e-01  1.18e-01     4.44e-02     4.12e-02\n7413 -7.93e-03 -3.17e-01  1.97e-01     1.22e-01     1.10e-01\n7414 -4.43e-04 -7.11e-02  3.06e-02     8.36e-03     7.17e-03\n7415 -1.68e-03 -1.04e-01  1.22e-02     6.05e-03     3.62e-03\n7416  5.63e-05 -3.42e-02  2.38e-02     4.12e-03     4.58e-03\n7417  2.08e-02 -6.62e-02  2.07e-01     3.47e-02     6.60e-02\n7418 -1.96e-03 -1.60e-01  7.77e-02     2.61e-02     2.22e-02\n7419 -1.83e-05 -1.32e-02  5.35e-03     8.61e-04     7.96e-04\n7420  1.23e-04 -3.32e-02  2.68e-02     4.62e-03     5.01e-03\n7421  3.18e-07 -1.54e-02  9.30e-03     1.25e-03     1.33e-03\n7422 -2.05e-04 -2.55e-02  6.47e-03     1.67e-03     1.24e-03\n7423 -5.98e-04 -5.48e-02  1.67e-02     5.14e-03     4.01e-03\n7424  2.29e-02 -4.35e-03  2.44e-01     1.28e-02     3.86e-02\n7425  3.17e-02 -3.44e-02  3.19e-01     2.47e-02     6.00e-02\n7426  5.62e-02 -1.01e-01  3.94e-01     7.94e-02     1.46e-01\n7427  3.96e-03 -1.02e-02  1.00e-01     5.06e-03     9.62e-03\n7428  6.57e-04 -1.40e-01  2.47e-01     4.10e-02     3.47e-02\n7429  3.71e-03 -1.84e-03  7.49e-02     1.86e-03     5.77e-03\n7430  1.43e-02 -2.00e-03  1.78e-01     8.21e-03     2.47e-02\n7431  1.94e-02 -2.77e-02  2.58e-01     1.72e-02     3.93e-02\n7432  8.00e-04 -9.07e-04  2.92e-02     4.70e-04     1.38e-03\n7433  3.64e-03 -1.67e-03  7.53e-02     1.85e-03     6.01e-03\n7434  6.65e-04 -9.68e-04  2.65e-02     5.54e-04     1.43e-03\n7435  1.70e-03 -3.60e-03  5.00e-02     1.49e-03     3.40e-03\n7436  4.64e-03 -9.25e-03  1.04e-01     4.13e-03     9.52e-03\n7437  1.26e-02 -2.91e-03  1.20e-01     8.66e-03     2.44e-02\n7438  2.31e-02 -7.59e-03  1.85e-01     1.70e-02     4.54e-02\n7439  2.86e-02 -5.84e-02  2.38e-01     4.96e-02     9.13e-02\n7440  1.89e-03 -5.67e-03  3.50e-02     3.17e-03     5.87e-03\n7441  6.16e-03 -5.94e-02  1.19e-01     2.49e-02     3.61e-02\n7442  4.00e-03  7.79e-05  4.80e-02     1.38e-03     5.84e-03\n7443  6.39e-03 -4.02e-03  7.24e-02     5.48e-03     1.36e-02\n7444  1.42e-02 -8.10e-03  1.38e-01     1.16e-02     2.95e-02\n7445  9.53e-04  6.05e-06  1.89e-02     3.53e-04     1.43e-03\n7446  3.72e-03  5.07e-05  4.51e-02     1.41e-03     5.65e-03\n7447  3.99e-04 -3.87e-04  1.13e-02     3.89e-04     9.36e-04\n7448  1.74e-03 -2.96e-04  2.82e-02     1.07e-03     3.20e-03\n7449  4.13e-03 -1.34e-03  5.56e-02     2.88e-03     7.89e-03\n7450  1.88e-02 -5.48e-03  2.42e-01     1.26e-02     3.44e-02\n7451  2.69e-02 -3.66e-02  3.19e-01     2.46e-02     5.72e-02\n7452  3.91e-02 -1.12e-01  3.60e-01     7.75e-02     1.27e-01\n7453  2.73e-03 -1.14e-02  8.57e-02     4.83e-03     8.44e-03\n7454 -2.88e-04 -1.36e-01  2.27e-01     3.84e-02     3.02e-02\n7455  3.68e-03 -2.04e-03  8.65e-02     1.86e-03     5.98e-03\n7456  1.12e-02 -3.00e-03  1.81e-01     8.18e-03     2.19e-02\n7457  1.60e-02 -3.02e-02  2.52e-01     1.69e-02     3.61e-02\n7458  7.92e-04 -9.10e-04  3.10e-02     5.10e-04     1.42e-03\n7459  3.58e-03 -2.11e-03  8.61e-02     1.95e-03     6.02e-03\n7460  5.11e-04 -1.17e-03  2.58e-02     5.47e-04     1.24e-03\n7461  1.49e-03 -4.21e-03  5.49e-02     1.56e-03     3.27e-03\n7462  4.07e-03 -9.83e-03  1.09e-01     4.25e-03     8.91e-03\n7463  9.18e-02 -4.65e-02  3.35e-01     8.86e-02     2.04e-01\n7464  4.03e-02 -1.88e-01  2.80e-01     1.25e-01     1.81e-01\n7465  4.96e-02 -2.35e-01  3.37e-01     2.91e-01     3.64e-01\n7466  5.30e-03 -8.05e-02  9.19e-02     2.42e-02     3.38e-02\n7467 -9.74e-03 -2.53e-01  5.10e-02     3.53e-02     2.29e-02\n7468  8.57e-03 -2.72e-02  9.36e-02     1.20e-02     2.40e-02\n7469  7.33e-02 -2.45e-02  3.09e-01     6.15e-02     1.50e-01\n7470  1.80e-02 -1.70e-01  2.09e-01     7.91e-02     1.08e-01\n7471  8.57e-04 -1.58e-02  2.93e-02     2.65e-03     4.56e-03\n7472  9.18e-03 -2.81e-02  1.02e-01     1.25e-02     2.49e-02\n7473  1.38e-03 -1.31e-02  3.67e-02     3.61e-03     6.03e-03\n7474  4.72e-04 -3.86e-02  3.10e-02     6.30e-03     7.37e-03\n7475  2.21e-03 -7.47e-02  7.00e-02     1.78e-02     2.21e-02\n7476  4.08e-02 -3.33e-02  2.40e-01     4.05e-02     9.13e-02\n7477  1.16e-02 -1.36e-01  1.67e-01     5.19e-02     7.31e-02\n7478  1.70e-02 -2.18e-01  2.51e-01     1.40e-01     1.74e-01\n7479  1.21e-03 -3.98e-02  4.78e-02     9.78e-03     1.22e-02\n7480 -3.21e-03 -1.36e-01  2.03e-02     1.23e-02     7.82e-03\n7481  2.39e-03 -1.72e-02  4.56e-02     4.88e-03     8.40e-03\n7482  3.19e-02 -1.82e-02  2.03e-01     2.74e-02     6.68e-02\n7483  4.21e-03 -1.10e-01  1.19e-01     3.32e-02     4.15e-02\n7484  1.73e-04 -8.18e-03  1.24e-02     1.07e-03     1.53e-03\n7485  2.66e-03 -1.74e-02  4.82e-02     5.14e-03     9.19e-03\n7486  3.46e-04 -7.41e-03  1.62e-02     1.40e-03     2.19e-03\n7487  2.65e-05 -1.97e-02  1.28e-02     2.41e-03     2.52e-03\n7488  3.02e-04 -3.91e-02  3.18e-02     7.15e-03     7.90e-03\n7489  2.60e-03 -2.24e-01  1.71e-01     7.10e-02     7.65e-02\n7490 -5.39e-02 -4.24e-01  5.98e-02     1.19e-01     5.09e-02\n7491 -1.17e-01 -5.10e-01  8.46e-02     2.76e-01     1.30e-01\n7492 -1.04e-02 -1.69e-01  1.20e-02     2.23e-02     8.98e-03\n7493 -6.63e-02 -5.05e-01 -1.99e-03     7.37e-02     4.81e-03\n7494 -3.89e-03 -1.00e-01  1.48e-02     1.14e-02     5.77e-03\n7495  8.51e-03 -1.29e-01  1.64e-01     4.59e-02     6.32e-02\n7496 -4.11e-02 -3.74e-01  2.69e-02     7.97e-02     2.83e-02\n7497 -1.25e-03 -4.32e-02  2.15e-03     2.79e-03     9.62e-04\n7498 -3.50e-03 -1.04e-01  1.72e-02     1.15e-02     6.22e-03\n7499 -8.74e-04 -4.37e-02  5.00e-03     3.09e-03     1.58e-03\n7500 -5.08e-03 -9.49e-02  6.79e-04     7.54e-03     1.64e-03\n7501 -1.26e-02 -1.89e-01  3.31e-03     2.00e-02     5.18e-03\n7502  1.10e-01 -2.10e-01  3.93e-01     4.32e-01     5.61e-01\n7503  3.36e-02 -3.73e-01  3.34e-01     5.40e-01     5.70e-01\n7504  5.68e-03 -3.86e-01  2.23e-01     7.41e-01     7.42e-01\n7505  3.46e-03 -1.87e-01  2.92e-01     1.47e-01     1.49e-01\n7506 -5.01e-02 -3.53e-01  3.05e-01     2.33e-01     1.61e-01\n7507  4.99e-02 -1.51e-01  4.26e-01     1.11e-01     1.68e-01\n7508  9.81e-02 -1.46e-01  3.92e-01     3.15e-01     4.26e-01\n7509  1.69e-02 -3.42e-01  3.42e-01     4.16e-01     4.30e-01\n7510  4.64e-03 -7.93e-02  2.58e-01     2.85e-02     3.38e-02\n7511  4.75e-02 -1.46e-01  4.03e-01     1.10e-01     1.62e-01\n7512  2.61e-03 -6.48e-02  1.86e-01     2.69e-02     3.12e-02\n7513 -3.54e-04 -1.30e-01  2.50e-01     5.67e-02     5.27e-02\n7514  1.22e-03 -2.06e-01  3.29e-01     1.42e-01     1.39e-01\n7515  3.60e-02 -3.89e-02  3.08e-01     4.43e-02     8.74e-02\n7516  4.38e-02 -1.07e-01  3.58e-01     8.67e-02     1.36e-01\n7517  3.29e-02 -2.18e-01  3.43e-01     2.01e-01     2.35e-01\n7518  2.64e-03 -3.21e-02  1.05e-01     1.45e-02     1.81e-02\n7519 -1.23e-02 -2.23e-01  2.29e-01     9.87e-02     6.67e-02\n7520  1.42e-02 -1.05e-02  1.77e-01     7.97e-03     2.38e-02\n7521  1.78e-02 -2.59e-02  2.21e-01     2.81e-02     5.00e-02\n7522  2.59e-02 -8.96e-02  3.09e-01     5.80e-02     8.81e-02\n7523  2.70e-03 -4.72e-03  7.60e-02     2.09e-03     5.33e-03\n7524  1.19e-02 -1.02e-02  1.57e-01     7.81e-03     2.10e-02\n7525  7.54e-04 -5.22e-03  3.99e-02     2.01e-03     3.24e-03\n7526  3.27e-03 -1.51e-02  9.29e-02     5.92e-03     9.75e-03\n7527  7.62e-03 -3.38e-02  1.62e-01     1.52e-02     2.33e-02\n7528  1.67e-01  7.02e-03  4.99e-01     9.96e-02     2.79e-01\n7529  2.16e-01  2.27e-03  5.03e-01     1.80e-01     4.25e-01\n7530  1.74e-01 -7.33e-02  4.33e-01     3.97e-01     6.05e-01\n7531  4.01e-02 -1.38e-02  3.14e-01     3.70e-02     8.38e-02\n7532  9.29e-02 -1.35e-01  3.94e-01     2.29e-01     3.36e-01\n7533  6.55e-02  4.15e-03  3.77e-01     1.73e-02     8.64e-02\n7534  1.03e-01 -1.91e-03  4.39e-01     6.47e-02     1.77e-01\n7535  1.70e-01 -3.02e-03  4.90e-01     1.30e-01     3.15e-01\n7536  1.75e-02  3.05e-04  2.05e-01     4.50e-03     2.30e-02\n7537  6.06e-02  3.78e-03  3.56e-01     1.71e-02     8.11e-02\n7538  8.86e-03 -1.31e-04  1.41e-01     5.04e-03     1.53e-02\n7539  3.10e-02  3.03e-04  2.72e-01     1.37e-02     4.77e-02\n7540  6.78e-02 -1.86e-04  3.94e-01     3.53e-02     1.08e-01\n7541  6.88e-02 -4.01e-02  2.80e-01     6.48e-02     1.49e-01\n7542  9.65e-02 -7.56e-02  3.40e-01     1.22e-01     2.41e-01\n7543  8.32e-02 -1.70e-01  3.55e-01     2.80e-01     3.90e-01\n7544  9.22e-03 -4.66e-02  9.87e-02     2.22e-02     3.63e-02\n7545 -9.96e-03 -2.66e-01  1.90e-01     1.53e-01     1.40e-01\n7546  2.73e-02  8.55e-04  1.67e-01     1.15e-02     4.24e-02\n7547  3.55e-02 -4.18e-02  1.95e-01     4.18e-02     8.78e-02\n7548  6.41e-02 -6.97e-02  2.89e-01     8.46e-02     1.67e-01\n7549  6.51e-03  7.02e-06  7.83e-02     3.11e-03     1.09e-02\n7550  2.49e-02  2.99e-04  1.47e-01     1.13e-02     3.97e-02\n7551  2.24e-03 -5.36e-03  4.24e-02     3.11e-03     6.54e-03\n7552  8.84e-03 -1.13e-02  8.74e-02     8.87e-03     2.06e-02\n7553  2.10e-02 -2.66e-02  1.45e-01     2.24e-02     4.96e-02\n7554  6.15e-02 -5.18e-03  3.53e-01     4.13e-02     1.10e-01\n7555  9.53e-02 -1.52e-02  4.14e-01     7.95e-02     1.89e-01\n7556  9.23e-02 -8.42e-02  3.88e-01     1.88e-01     3.00e-01\n7557  8.93e-03 -1.04e-02  1.40e-01     1.30e-02     2.48e-02\n7558  2.67e-02 -8.75e-02  2.99e-01     9.00e-02     1.24e-01\n7559  2.82e-02  1.24e-03  2.32e-01     7.49e-03     3.72e-02\n7560  3.01e-02 -8.04e-03  2.60e-01     2.61e-02     6.22e-02\n7561  6.29e-02 -1.36e-02  3.57e-01     5.39e-02     1.25e-01\n7562  6.89e-03  6.24e-05  1.09e-01     1.96e-03     9.31e-03\n7563  2.40e-02  7.53e-04  2.17e-01     7.60e-03     3.32e-02\n7564  2.13e-03 -8.25e-04  5.02e-02     1.85e-03     4.45e-03\n7565  9.64e-03 -8.01e-04  1.34e-01     5.56e-03     1.63e-02\n7566  2.13e-02 -2.91e-03  2.07e-01     1.40e-02     3.78e-02\n7567  1.21e-01 -9.37e-02  3.68e-01     1.69e-01     3.20e-01\n7568  4.13e-02 -2.64e-01  3.04e-01     2.86e-01     3.39e-01\n7569  7.03e-03 -2.88e-01  3.04e-01     5.50e-01     5.65e-01\n7570  2.48e-03 -1.80e-01  1.27e-01     6.85e-02     7.27e-02\n7571 -2.24e-01 -6.19e-01 -8.46e-03     3.08e-01     6.48e-02\n7572  1.64e-02 -7.55e-02  1.40e-01     3.05e-02     5.32e-02\n7573  9.64e-02 -7.44e-02  3.27e-01     1.17e-01     2.35e-01\n7574  1.02e-02 -2.92e-01  2.47e-01     2.13e-01     2.26e-01\n7575  1.35e-03 -4.48e-02  4.97e-02     8.61e-03     1.16e-02\n7576  1.78e-02 -7.09e-02  1.41e-01     3.14e-02     5.57e-02\n7577  1.90e-03 -4.22e-02  5.77e-02     9.43e-03     1.34e-02\n7578 -2.54e-03 -1.29e-01  4.98e-02     2.45e-02     1.96e-02\n7579 -4.17e-03 -2.12e-01  1.07e-01     6.11e-02     5.55e-02\n7580  2.28e-02 -8.59e-02  3.16e-01     5.26e-02     8.09e-02\n7581 -5.76e-04 -1.52e-01  2.83e-01     6.38e-02     5.84e-02\n7582 -6.98e-03 -2.72e-01  3.12e-01     1.64e-01     1.44e-01\n7583 -3.83e-04 -4.03e-02  9.00e-02     1.15e-02     9.56e-03\n7584 -2.15e-03 -5.34e-02  7.99e-02     1.06e-02     5.87e-03\n7585  5.83e-04 -2.21e-02  9.18e-02     6.25e-03     6.94e-03\n7586  2.10e-02 -4.17e-02  2.77e-01     3.62e-02     6.15e-02\n7587 -1.39e-03 -1.12e-01  2.16e-01     3.87e-02     3.27e-02\n7588 -9.15e-07 -8.37e-03  2.95e-02     1.37e-03     1.23e-03\n7589  7.22e-04 -2.28e-02  9.47e-02     6.66e-03     7.57e-03\n7590  3.20e-05 -1.04e-02  2.96e-02     1.75e-03     1.74e-03\n7591 -1.81e-04 -1.47e-02  3.29e-02     2.73e-03     2.00e-03\n7592 -5.63e-04 -3.29e-02  7.61e-02     8.03e-03     6.23e-03\n7593  3.21e-02  8.76e-04  2.82e-01     1.16e-02     4.59e-02\n7594  5.66e-02  1.36e-03  3.73e-01     2.30e-02     8.45e-02\n7595  8.81e-02 -7.02e-03  4.17e-01     6.95e-02     1.74e-01\n7596  6.70e-03 -6.22e-04  1.21e-01     4.44e-03     1.23e-02\n7597  2.54e-02 -3.16e-02  3.10e-01     3.40e-02     6.70e-02\n7598  7.53e-03  2.20e-04  1.02e-01     1.72e-03     9.58e-03\n7599  1.79e-02  3.34e-04  2.06e-01     7.49e-03     2.71e-02\n7600  3.61e-02  6.00e-04  3.12e-01     1.56e-02     5.56e-02\n7601  1.88e-03  1.99e-05  4.27e-02     4.49e-04     2.43e-03\n7602  7.23e-03  1.81e-04  1.10e-01     1.76e-03     9.44e-03\n7603  1.19e-03  3.28e-06  3.21e-02     5.24e-04     1.85e-03\n7604  4.00e-03  4.43e-05  7.69e-02     1.41e-03     5.85e-03\n7605  1.02e-02  1.44e-04  1.43e-01     3.81e-03     1.47e-02\n7606  2.71e-02 -4.13e-02  2.95e-01     4.41e-02     7.86e-02\n7607  3.32e-02 -1.16e-01  3.39e-01     8.34e-02     1.25e-01\n7608  1.91e-02 -2.14e-01  3.17e-01     1.90e-01     2.11e-01\n7609  1.35e-03 -3.24e-02  9.90e-02     1.35e-02     1.55e-02\n7610 -1.17e-02 -2.19e-01  2.07e-01     8.92e-02     6.08e-02\n7611  1.37e-02 -1.07e-02  1.89e-01     8.31e-03     2.39e-02\n7612  1.24e-02 -3.03e-02  1.99e-01     2.72e-02     4.36e-02\n7613  1.82e-02 -9.30e-02  2.83e-01     5.70e-02     7.90e-02\n7614  2.56e-03 -4.82e-03  7.92e-02     2.26e-03     5.23e-03\n7615  1.12e-02 -1.15e-02  1.67e-01     8.36e-03     2.09e-02\n7616  5.01e-04 -5.54e-03  3.52e-02     1.92e-03     2.73e-03\n7617  2.39e-03 -1.69e-02  8.63e-02     5.82e-03     8.99e-03\n7618  5.65e-03 -3.48e-02  1.43e-01     1.53e-02     2.20e-02\n7619  2.29e-02 -3.23e-03  2.54e-01     1.27e-02     3.82e-02\n7620  3.28e-02 -3.10e-02  3.30e-01     2.52e-02     6.24e-02\n7621  5.63e-02 -9.78e-02  4.01e-01     8.04e-02     1.49e-01\n7622  4.17e-03 -9.52e-03  1.03e-01     5.14e-03     1.02e-02\n7623  1.25e-03 -1.38e-01  2.73e-01     4.16e-02     3.56e-02\n7624  3.83e-03 -1.66e-03  7.59e-02     1.85e-03     5.96e-03\n7625  1.40e-02 -1.16e-03  1.91e-01     8.41e-03     2.47e-02\n7626  1.93e-02 -2.45e-02  2.76e-01     1.71e-02     3.94e-02\n7627  8.29e-04 -7.83e-04  3.02e-02     4.81e-04     1.44e-03\n7628  3.90e-03 -1.40e-03  8.05e-02     1.88e-03     6.27e-03\n7629  6.99e-04 -8.79e-04  3.10e-02     5.60e-04     1.42e-03\n7630  1.71e-03 -3.88e-03  5.82e-02     1.55e-03     3.56e-03\n7631  4.90e-03 -8.25e-03  1.11e-01     4.15e-03     9.83e-03\n7632 -2.94e-02 -2.34e-01  6.42e-02     5.35e-02     1.15e-02\n7633 -5.70e-02 -3.26e-01  2.48e-03     7.22e-02     5.19e-03\n7634 -1.35e-01 -5.22e-01  1.08e-03     1.76e-01     1.51e-02\n7635 -9.75e-03 -9.31e-02  1.12e-04     1.24e-02     9.49e-04\n7636 -1.35e-02 -1.17e-01 -6.86e-04     1.49e-02     4.22e-04\n7637 -5.57e-03 -5.83e-02  1.82e-03     7.15e-03     5.72e-04\n7638 -1.43e-02 -1.59e-01  7.24e-02     3.54e-02     1.23e-02\n7639 -3.62e-02 -2.33e-01 -8.06e-04     4.45e-02     2.79e-03\n7640 -1.28e-03 -2.24e-02  6.13e-07     1.60e-03     9.28e-05\n7641 -5.74e-03 -5.95e-02  2.84e-03     7.56e-03     6.36e-04\n7642 -1.42e-03 -2.61e-02  3.45e-04     1.95e-03     1.68e-04\n7643 -2.84e-03 -3.59e-02 -5.44e-05     3.33e-03     1.55e-04\n7644 -8.13e-03 -7.65e-02 -2.08e-04     9.78e-03     4.91e-04\n7645  6.28e-02 -1.67e-02  3.87e-01     4.44e-02     1.14e-01\n7646  8.52e-02 -9.03e-02  4.33e-01     8.62e-02     1.77e-01\n7647  9.78e-02 -2.00e-01  4.20e-01     2.33e-01     3.42e-01\n7648  1.05e-02 -2.74e-02  1.98e-01     1.76e-02     3.02e-02\n7649 -2.37e-03 -2.60e-01  3.36e-01     1.26e-01     1.07e-01\n7650  1.44e-02 -5.96e-03  1.82e-01     6.91e-03     2.20e-02\n7651  3.89e-02 -1.01e-02  3.16e-01     2.93e-02     7.24e-02\n7652  5.50e-02 -7.47e-02  3.93e-01     6.07e-02     1.19e-01\n7653  3.07e-03 -2.88e-03  7.62e-02     1.86e-03     5.31e-03\n7654  1.40e-02 -4.99e-03  1.78e-01     7.11e-03     2.23e-02\n7655  2.09e-03 -3.32e-03  6.86e-02     2.10e-03     4.59e-03\n7656  5.78e-03 -1.14e-02  1.36e-01     5.74e-03     1.24e-02\n7657  1.51e-02 -2.36e-02  2.26e-01     1.51e-02     3.14e-02\n7658  7.04e-02 -3.32e-02  2.76e-01     5.91e-02     1.42e-01\n7659  1.08e-01 -5.28e-02  3.56e-01     1.11e-01     2.42e-01\n7660  9.91e-02 -1.48e-01  3.67e-01     2.62e-01     3.89e-01\n7661  1.12e-02 -3.69e-02  1.06e-01     2.10e-02     3.66e-02\n7662  3.04e-02 -1.78e-01  2.55e-01     1.47e-01     1.91e-01\n7663  2.79e-02  1.70e-03  1.67e-01     9.98e-03     4.12e-02\n7664  3.69e-02 -3.18e-02  1.96e-01     3.77e-02     8.46e-02\n7665  7.19e-02 -4.78e-02  2.95e-01     7.58e-02     1.68e-01\n7666  6.94e-03  8.54e-05  7.66e-02     2.71e-03     1.06e-02\n7667  2.51e-02  1.04e-03  1.53e-01     1.03e-02     3.86e-02\n7668  2.51e-03 -4.20e-03  4.15e-02     2.85e-03     6.39e-03\n7669  1.16e-02 -4.10e-03  9.47e-02     7.86e-03     2.16e-02\n7670  2.59e-02 -1.37e-02  1.56e-01     2.06e-02     5.21e-02\n7671  1.51e-02 -1.22e-03  1.25e-01     8.59e-03     2.68e-02\n7672  2.79e-02 -3.09e-03  1.94e-01     1.73e-02     5.07e-02\n7673  3.98e-02 -4.83e-02  2.62e-01     5.29e-02     1.06e-01\n7674  2.65e-03 -4.85e-03  4.05e-02     3.28e-03     6.95e-03\n7675  9.73e-03 -5.84e-02  1.37e-01     2.68e-02     4.26e-02\n7676  3.97e-03  9.95e-05  4.65e-02     1.30e-03     5.68e-03\n7677  7.78e-03 -2.60e-03  7.64e-02     5.52e-03     1.52e-02\n7678  1.74e-02 -3.20e-03  1.44e-01     1.17e-02     3.27e-02\n7679  9.70e-04  6.01e-06  1.90e-02     3.53e-04     1.43e-03\n7680  3.77e-03  6.67e-05  4.71e-02     1.33e-03     5.67e-03\n7681  4.87e-04 -2.45e-04  1.28e-02     3.79e-04     1.01e-03\n7682  2.08e-03 -6.32e-05  3.11e-02     1.08e-03     3.58e-03\n7683  4.86e-03 -4.49e-04  5.37e-02     2.93e-03     8.89e-03\n7684  1.87e-02  5.66e-04  1.41e-01     6.75e-03     2.73e-02\n7685  3.43e-02  1.13e-03  2.19e-01     1.34e-02     5.12e-02\n7686  5.35e-02 -7.30e-03  2.93e-01     4.04e-02     1.07e-01\n7687  3.58e-03 -5.37e-04  4.31e-02     2.51e-03     6.99e-03\n7688  1.73e-02 -1.79e-02  1.69e-01     2.03e-02     4.39e-02\n7689  4.98e-03  1.66e-04  5.57e-02     1.03e-03     6.19e-03\n7690  9.80e-03  1.62e-04  8.71e-02     4.42e-03     1.57e-02\n7691  2.19e-02  4.93e-04  1.64e-01     9.19e-03     3.35e-02\n7692  1.20e-03  1.37e-05  2.23e-02     2.66e-04     1.53e-03\n7693  4.48e-03  1.54e-04  5.33e-02     1.06e-03     5.79e-03\n7694  6.72e-04  2.01e-06  1.48e-02     3.05e-04     1.09e-03\n7695  2.54e-03  5.24e-05  3.54e-02     8.15e-04     3.67e-03\n7696  6.13e-03  1.62e-04  6.17e-02     2.24e-03     9.02e-03\n7697 -3.99e-05 -1.67e-02  1.63e-02     5.06e-04     2.71e-04\n7698 -1.90e-05 -9.54e-03  7.61e-03     2.15e-04     1.11e-04\n7699 -6.09e-05 -2.59e-02  1.97e-02     6.51e-04     3.30e-04\n7700 -3.52e-06 -1.87e-03  1.25e-03     4.00e-05     2.02e-05\n7701 -1.56e-06 -7.87e-04  5.53e-04     1.64e-05     8.63e-06\n7702 -1.71e-06 -1.12e-03  7.76e-04     2.18e-05     1.19e-05\n7703 -3.86e-05 -1.68e-02  2.01e-02     6.03e-04     3.45e-04\n7704 -1.02e-05 -4.61e-03  3.67e-03     1.13e-04     5.64e-05\n7705 -2.58e-07 -2.63e-04  1.56e-04     3.47e-06     1.81e-06\n7706 -2.05e-06 -1.11e-03  9.92e-04     2.40e-05     1.31e-05\n7707 -5.08e-07 -4.72e-04  2.88e-04     6.51e-06     3.55e-06\n7708 -5.05e-07 -3.62e-04  2.21e-04     5.77e-06     2.88e-06\n7709 -1.73e-06 -8.97e-04  6.76e-04     1.92e-05     9.92e-06\n7710 -3.85e-05 -1.70e-02  1.79e-02     5.41e-04     3.16e-04\n7711 -1.97e-05 -8.20e-03  7.38e-03     2.32e-04     1.22e-04\n7712 -5.99e-05 -2.47e-02  2.08e-02     6.84e-04     3.71e-04\n7713 -3.50e-06 -1.93e-03  1.35e-03     4.15e-05     2.25e-05\n7714 -1.56e-06 -7.38e-04  6.36e-04     1.72e-05     9.44e-06\n7715 -1.89e-06 -1.12e-03  9.89e-04     2.34e-05     1.26e-05\n7716 -3.93e-05 -1.65e-02  2.04e-02     6.54e-04     3.80e-04\n7717 -1.03e-05 -4.67e-03  3.98e-03     1.17e-04     6.41e-05\n7718 -2.59e-07 -2.30e-04  1.90e-04     3.52e-06     2.00e-06\n7719 -2.00e-06 -1.20e-03  9.83e-04     2.46e-05     1.48e-05\n7720 -4.79e-07 -4.94e-04  2.77e-04     7.13e-06     3.85e-06\n7721 -5.39e-07 -3.68e-04  2.14e-04     5.95e-06     3.25e-06\n7722 -1.76e-06 -8.53e-04  7.36e-04     1.96e-05     1.07e-05\n7723  7.92e-02 -9.02e-03  2.91e-01     5.51e-02     1.48e-01\n7724  1.16e-01 -2.64e-02  3.52e-01     1.04e-01     2.40e-01\n7725  1.09e-01 -1.06e-01  3.68e-01     2.35e-01     3.73e-01\n7726  1.19e-02 -2.17e-02  9.96e-02     1.79e-02     3.41e-02\n7727  2.42e-02 -1.38e-01  2.19e-01     1.02e-01     1.38e-01\n7728  3.68e-02  2.87e-03  1.99e-01     1.02e-02     4.91e-02\n7729  4.07e-02 -1.56e-02  1.97e-01     3.46e-02     8.47e-02\n7730  7.63e-02 -2.66e-02  2.92e-01     7.08e-02     1.63e-01\n7731  8.47e-03  1.56e-04  8.37e-02     2.69e-03     1.19e-02\n7732  3.11e-02  2.41e-03  1.73e-01     1.01e-02     4.39e-02\n7733  2.67e-03 -1.86e-03  4.22e-02     2.52e-03     6.10e-03\n7734  1.16e-02 -1.38e-03  9.46e-02     7.23e-03     2.12e-02\n7735  2.61e-02 -6.02e-03  1.59e-01     1.89e-02     4.97e-02\n7736  1.47e-02 -9.36e-04  1.21e-01     8.53e-03     2.62e-02\n7737  2.69e-02 -3.06e-03  1.95e-01     1.71e-02     5.00e-02\n7738  3.82e-02 -4.29e-02  2.53e-01     5.21e-02     1.04e-01\n7739  2.50e-03 -4.60e-03  3.68e-02     3.18e-03     6.61e-03\n7740  9.37e-03 -5.47e-02  1.40e-01     2.62e-02     4.14e-02\n7741  3.96e-03  1.04e-04  4.42e-02     1.28e-03     5.62e-03\n7742  7.72e-03 -1.98e-03  7.78e-02     5.62e-03     1.53e-02\n7743  1.70e-02 -3.26e-03  1.41e-01     1.14e-02     3.24e-02\n7744  9.49e-04  6.98e-06  1.79e-02     3.38e-04     1.40e-03\n7745  3.73e-03  7.63e-05  4.27e-02     1.30e-03     5.45e-03\n7746  4.72e-04 -1.82e-04  1.17e-02     3.75e-04     1.01e-03\n7747  1.96e-03 -5.03e-05  3.12e-02     1.05e-03     3.37e-03\n7748  4.80e-03 -5.31e-04  5.72e-02     2.79e-03     8.59e-03\n7749  1.87e-02 -1.39e-03  2.14e-01     1.13e-02     3.31e-02\n7750  2.28e-02 -1.86e-02  2.73e-01     2.12e-02     4.86e-02\n7751  2.94e-02 -6.37e-02  3.05e-01     5.84e-02     9.83e-02\n7752  1.93e-03 -5.97e-03  5.99e-02     3.58e-03     6.42e-03\n7753 -2.96e-05 -6.18e-02  1.25e-01     1.76e-02     1.56e-02\n7754  4.68e-03 -3.58e-04  8.41e-02     1.84e-03     6.94e-03\n7755  9.54e-03 -2.17e-03  1.43e-01     7.01e-03     1.86e-02\n7756  1.29e-02 -1.82e-02  2.05e-01     1.41e-02     3.02e-02\n7757  9.26e-04 -3.14e-04  2.97e-02     4.66e-04     1.56e-03\n7758  4.43e-03 -3.39e-04  7.90e-02     1.84e-03     6.88e-03\n7759  4.40e-04 -4.73e-04  1.95e-02     4.56e-04     1.05e-03\n7760  1.18e-03 -2.31e-03  4.17e-02     1.31e-03     2.81e-03\n7761  3.21e-03 -5.94e-03  8.39e-02     3.47e-03     7.58e-03\n7762  2.22e-02 -4.61e-03  2.36e-01     1.26e-02     3.74e-02\n7763  3.15e-02 -3.45e-02  3.15e-01     2.48e-02     5.95e-02\n7764  5.74e-02 -1.07e-01  3.89e-01     7.87e-02     1.45e-01\n7765  3.90e-03 -9.93e-03  9.99e-02     5.01e-03     9.92e-03\n7766  1.28e-03 -1.54e-01  2.58e-01     4.10e-02     3.52e-02\n7767  3.69e-03 -2.09e-03  7.22e-02     1.83e-03     5.83e-03\n7768  1.40e-02 -2.05e-03  1.88e-01     8.22e-03     2.46e-02\n7769  1.92e-02 -3.06e-02  2.54e-01     1.71e-02     3.93e-02\n7770  7.80e-04 -9.86e-04  2.86e-02     4.76e-04     1.40e-03\n7771  3.72e-03 -1.72e-03  7.12e-02     1.88e-03     6.05e-03\n7772  6.42e-04 -8.73e-04  2.52e-02     5.38e-04     1.33e-03\n7773  1.63e-03 -4.52e-03  5.31e-02     1.53e-03     3.43e-03\n7774  4.73e-03 -9.74e-03  1.15e-01     4.10e-03     9.53e-03\n7775  9.68e-02  4.79e-03  3.14e-01     5.21e-02     1.65e-01\n7776  1.29e-01 -7.46e-03  3.75e-01     9.76e-02     2.50e-01\n7777  1.35e-01 -7.39e-02  3.93e-01     2.40e-01     4.13e-01\n7778  1.64e-02 -1.78e-02  1.21e-01     1.84e-02     4.02e-02\n7779  1.37e-02 -1.69e-01  1.96e-01     9.31e-02     1.12e-01\n7780  3.15e-02  2.66e-03  1.83e-01     8.81e-03     4.28e-02\n7781  5.38e-02 -3.41e-03  2.33e-01     3.44e-02     9.71e-02\n7782  8.72e-02 -1.46e-02  3.13e-01     6.60e-02     1.70e-01\n7783  7.24e-03  1.21e-04  7.46e-02     2.32e-03     1.01e-02\n7784  2.92e-02  2.24e-03  1.71e-01     8.76e-03     4.02e-02\n7785  3.56e-03 -6.79e-04  5.27e-02     2.50e-03     6.90e-03\n7786  1.14e-02 -1.19e-03  9.28e-02     6.56e-03     2.02e-02\n7787  2.71e-02 -3.28e-03  1.65e-01     1.72e-02     4.87e-02\n7788  1.71e-01  3.46e-02  4.11e-01     6.93e-02     2.55e-01\n7789  2.30e-01  4.70e-02  4.68e-01     1.30e-01     3.89e-01\n7790  2.47e-01  5.42e-03  4.89e-01     3.32e-01     6.11e-01\n7791  5.13e-02  1.13e-03  2.24e-01     2.84e-02     8.75e-02\n7792  8.98e-02 -1.33e-01  3.49e-01     1.71e-01     2.82e-01\n7793  4.57e-02  5.38e-03  2.14e-01     1.08e-02     5.91e-02\n7794  1.12e-01  1.72e-02  3.32e-01     4.72e-02     1.70e-01\n7795  1.79e-01  2.95e-02  4.17e-01     9.13e-02     2.89e-01\n7796  1.25e-02  3.52e-04  1.07e-01     2.94e-03     1.62e-02\n7797  4.60e-02  4.95e-03  2.10e-01     1.13e-02     6.02e-02\n7798  9.67e-03  1.56e-04  8.72e-02     3.57e-03     1.42e-02\n7799  2.71e-02  1.76e-03  1.52e-01     9.13e-03     3.84e-02\n7800  6.40e-02  7.17e-03  2.43e-01     2.43e-02     9.40e-02\n7801  2.32e-02 -2.16e-04  2.47e-01     1.16e-02     3.75e-02\n7802  2.88e-02 -1.39e-02  3.00e-01     2.21e-02     5.59e-02\n7803  4.20e-02 -5.89e-02  3.39e-01     6.25e-02     1.16e-01\n7804  2.96e-03 -5.28e-03  7.36e-02     3.93e-03     7.82e-03\n7805  1.84e-04 -6.99e-02  1.54e-01     1.89e-02     1.78e-02\n7806  4.97e-03 -2.76e-04  9.30e-02     1.76e-03     7.20e-03\n7807  1.29e-02 -5.22e-04  1.69e-01     7.33e-03     2.20e-02\n7808  1.71e-02 -1.38e-02  2.29e-01     1.48e-02     3.49e-02\n7809  9.97e-04 -2.82e-04  3.13e-02     4.59e-04     1.62e-03\n7810  4.67e-03 -3.38e-04  8.48e-02     1.86e-03     7.10e-03\n7811  5.98e-04 -3.73e-04  2.49e-02     4.94e-04     1.24e-03\n7812  1.54e-03 -2.16e-03  4.42e-02     1.34e-03     3.20e-03\n7813  4.04e-03 -4.96e-03  9.03e-02     3.49e-03     8.36e-03\n7814 -5.63e-04 -4.14e-02 -4.93e-07     6.23e-04     1.58e-05\n7815 -2.37e-04 -2.00e-02 -1.95e-07     2.56e-04     6.56e-06\n7816 -7.37e-04 -5.61e-02 -5.84e-07     8.13e-04     1.95e-05\n7817 -4.33e-05 -4.32e-03 -3.64e-08     4.69e-05     1.19e-06\n7818 -1.87e-05 -1.75e-03 -1.56e-08     2.03e-05     4.75e-07\n7819 -2.48e-05 -2.67e-03 -1.75e-08     2.70e-05     7.01e-07\n7820 -6.63e-04 -4.25e-02 -4.58e-07     7.41e-04     2.09e-05\n7821 -1.27e-04 -1.13e-02 -1.07e-07     1.39e-04     3.46e-06\n7822 -3.84e-06 -5.80e-04 -1.87e-09     4.22e-06     1.05e-07\n7823 -2.65e-05 -2.51e-03 -2.17e-08     2.94e-05     7.52e-07\n7824 -7.18e-06 -1.06e-03 -2.78e-09     7.83e-06     1.96e-07\n7825 -6.62e-06 -8.43e-04 -4.80e-09     7.27e-06     1.74e-07\n7826 -2.14e-05 -2.34e-03 -1.55e-08     2.33e-05     5.72e-07\n7827  2.26e-02 -4.35e-03  2.64e-01     1.26e-02     3.80e-02\n7828  3.15e-02 -3.37e-02  3.28e-01     2.44e-02     6.15e-02\n7829  5.49e-02 -1.10e-01  4.00e-01     7.94e-02     1.45e-01\n7830  4.04e-03 -1.09e-02  1.12e-01     5.04e-03     9.96e-03\n7831  1.08e-03 -1.45e-01  2.60e-01     4.14e-02     3.47e-02\n7832  3.77e-03 -1.93e-03  7.87e-02     1.83e-03     5.91e-03\n7833  1.42e-02 -2.14e-03  1.92e-01     8.31e-03     2.44e-02\n7834  1.92e-02 -2.82e-02  2.64e-01     1.74e-02     3.89e-02\n7835  7.98e-04 -9.60e-04  3.01e-02     4.88e-04     1.41e-03\n7836  3.74e-03 -2.07e-03  7.62e-02     1.85e-03     5.99e-03\n7837  6.63e-04 -1.07e-03  2.83e-02     5.73e-04     1.41e-03\n7838  1.77e-03 -4.07e-03  5.27e-02     1.56e-03     3.63e-03\n7839  4.71e-03 -9.52e-03  1.05e-01     4.22e-03     9.60e-03\n7840  9.74e-02  1.20e-02  3.15e-01     3.99e-02     1.47e-01\n7841  1.55e-01  2.07e-02  4.05e-01     7.65e-02     2.51e-01\n7842  1.84e-01 -1.88e-02  4.36e-01     2.07e-01     4.30e-01\n7843  2.35e-02 -3.47e-03  1.43e-01     1.53e-02     4.31e-02\n7844  8.93e-02 -5.65e-02  3.39e-01     1.15e-01     2.28e-01\n7845  2.86e-02  2.78e-03  1.60e-01     6.24e-03     3.61e-02\n7846  5.79e-02  4.19e-03  2.37e-01     2.63e-02     9.18e-02\n7847  1.12e-01  1.08e-02  3.46e-01     5.33e-02     1.77e-01\n7848  7.72e-03  1.90e-04  7.43e-02     1.68e-03     9.87e-03\n7849  2.72e-02  2.58e-03  1.55e-01     6.38e-03     3.53e-02\n7850  4.42e-03  4.67e-05  5.47e-02     1.89e-03     6.94e-03\n7851  1.60e-02  8.68e-04  1.21e-01     5.12e-03     2.22e-02\n7852  3.73e-02  3.26e-03  1.91e-01     1.37e-02     5.45e-02\n7853  3.21e-02  9.01e-04  2.81e-01     1.19e-02     4.66e-02\n7854  5.58e-02  1.41e-03  3.75e-01     2.33e-02     8.46e-02\n7855  8.95e-02 -7.96e-03  4.23e-01     7.18e-02     1.74e-01\n7856  6.70e-03 -5.85e-04  1.15e-01     4.58e-03     1.22e-02\n7857  2.60e-02 -3.61e-02  3.18e-01     3.56e-02     6.74e-02\n7858  7.83e-03  2.16e-04  1.05e-01     1.77e-03     9.95e-03\n7859  1.77e-02  3.08e-04  2.04e-01     7.75e-03     2.72e-02\n7860  3.61e-02  4.35e-04  3.06e-01     1.61e-02     5.55e-02\n7861  1.93e-03  1.65e-05  4.24e-02     4.63e-04     2.48e-03\n7862  7.43e-03  1.83e-04  1.09e-01     1.81e-03     9.67e-03\n7863  1.24e-03  3.56e-06  3.57e-02     5.27e-04     1.92e-03\n7864  4.24e-03  3.13e-05  7.96e-02     1.44e-03     6.08e-03\n7865  9.99e-03  1.36e-04  1.40e-01     3.80e-03     1.52e-02\n7866 -5.58e-03 -1.85e-01  1.79e-03     8.12e-03     7.50e-04\n7867 -5.84e-03 -2.41e-01 -1.14e-06     6.68e-03     2.92e-04\n7868 -1.78e-02 -4.49e-01 -5.03e-06     2.02e-02     8.93e-04\n7869 -1.05e-03 -6.28e-02 -2.26e-07     1.21e-03     5.15e-05\n7870 -7.16e-04 -1.06e-01 -1.10e-07     7.81e-04     2.34e-05\n7871 -5.05e-04 -3.16e-02 -8.97e-08     6.07e-04     3.04e-05\n7872 -3.71e-03 -1.49e-01  7.43e-03     6.65e-03     8.76e-04\n7873 -3.33e-03 -1.69e-01 -6.61e-07     3.76e-03     1.54e-04\n7874 -9.37e-05 -1.04e-02 -1.25e-08     1.06e-04     4.57e-06\n7875 -5.52e-04 -3.44e-02 -7.35e-08     6.57e-04     3.49e-05\n7876 -1.47e-04 -1.39e-02 -1.03e-08     1.76e-04     8.98e-06\n7877 -1.93e-04 -2.08e-02 -3.10e-08     2.16e-04     7.91e-06\n7878 -6.17e-04 -4.74e-02 -1.34e-07     7.01e-04     2.68e-05\n7879  1.59e-02 -1.17e-04  1.29e-01     8.06e-03     2.62e-02\n7880  2.89e-02 -8.78e-04  1.97e-01     1.65e-02     5.05e-02\n7881  4.70e-02 -3.56e-02  2.81e-01     5.14e-02     1.12e-01\n7882  3.19e-03 -3.48e-03  4.31e-02     3.21e-03     7.41e-03\n7883  1.29e-02 -4.74e-02  1.53e-01     2.70e-02     4.66e-02\n7884  3.82e-03  9.31e-05  4.07e-02     1.24e-03     5.33e-03\n7885  8.64e-03 -1.19e-03  7.98e-02     5.34e-03     1.58e-02\n7886  1.87e-02 -1.73e-03  1.48e-01     1.10e-02     3.33e-02\n7887  9.40e-04  8.12e-06  1.72e-02     3.19e-04     1.37e-03\n7888  3.58e-03  7.72e-05  4.34e-02     1.21e-03     5.19e-03\n7889  5.50e-04 -7.87e-05  1.28e-02     3.62e-04     1.05e-03\n7890  2.11e-03  7.57e-06  3.10e-02     9.81e-04     3.48e-03\n7891  5.17e-03 -6.35e-05  6.02e-02     2.70e-03     8.67e-03\n7892 -2.51e-02 -2.59e-01 -4.41e-04     2.84e-02     9.22e-04\n7893 -1.29e-02 -1.70e-01 -2.15e-04     1.40e-02     3.67e-04\n7894 -3.86e-02 -3.63e-01 -6.84e-04     4.20e-02     1.10e-03\n7895 -2.40e-03 -4.53e-02 -3.92e-05     2.64e-03     6.70e-05\n7896 -1.05e-03 -1.97e-02 -1.80e-05     1.15e-03     2.76e-05\n7897 -1.30e-03 -2.53e-02 -1.74e-05     1.41e-03     3.88e-05\n7898 -2.66e-02 -2.66e-01 -4.31e-04     3.06e-02     1.16e-03\n7899 -6.85e-03 -1.09e-01 -1.20e-04     7.59e-03     1.90e-04\n7900 -2.15e-04 -6.86e-03 -1.29e-06     2.35e-04     5.97e-06\n7901 -1.44e-03 -2.74e-02 -2.01e-05     1.58e-03     4.12e-05\n7902 -3.87e-04 -1.23e-02 -2.51e-06     4.29e-04     1.17e-05\n7903 -3.69e-04 -9.05e-03 -4.72e-06     4.00e-04     9.91e-06\n7904 -1.16e-03 -2.20e-02 -1.84e-05     1.26e-03     3.32e-05\n7905  5.63e-02  5.29e-03  2.43e-01     1.81e-02     7.90e-02\n7906  1.01e-01  1.01e-02  3.31e-01     3.66e-02     1.47e-01\n7907  1.57e-01  5.59e-03  4.15e-01     1.09e-01     2.91e-01\n7908  1.45e-02  3.03e-04  1.02e-01     7.16e-03     2.38e-02\n7909  6.91e-02 -2.16e-02  2.97e-01     5.98e-02     1.42e-01\n7910  1.31e-02  9.44e-04  9.05e-02     2.72e-03     1.63e-02\n7911  3.38e-02  2.52e-03  1.73e-01     1.20e-02     4.90e-02\n7912  6.95e-02  6.40e-03  2.78e-01     2.51e-02     1.01e-01\n7913  3.48e-03  6.82e-05  4.45e-02     7.27e-04     4.36e-03\n7914  1.28e-02  9.10e-04  9.38e-02     2.77e-03     1.63e-02\n7915  2.45e-03  3.40e-05  3.31e-02     8.82e-04     3.55e-03\n7916  8.27e-03  4.09e-04  6.82e-02     2.33e-03     1.13e-02\n7917  2.00e-02  1.64e-03  1.26e-01     6.13e-03     2.82e-02\n7918 -7.58e-03 -1.13e-01 -4.95e-05     9.15e-03     4.98e-04\n7919 -5.78e-03 -9.99e-02 -1.04e-04     6.40e-03     2.06e-04\n7920 -1.65e-02 -2.38e-01 -3.22e-04     1.86e-02     6.05e-04\n7921 -1.05e-03 -2.46e-02 -1.62e-05     1.16e-03     3.68e-05\n7922 -5.65e-04 -1.25e-02 -1.05e-05     6.12e-04     1.58e-05\n7923 -5.61e-04 -1.41e-02 -7.79e-06     6.28e-04     2.10e-05\n7924 -5.68e-03 -9.92e-02  8.91e-04     7.63e-03     6.15e-04\n7925 -3.30e-03 -6.26e-02 -5.50e-05     3.60e-03     1.08e-04\n7926 -9.72e-05 -3.94e-03 -6.78e-07     1.09e-04     3.40e-06\n7927 -6.15e-04 -1.40e-02 -6.47e-06     6.94e-04     2.43e-05\n7928 -1.63e-04 -6.17e-03 -7.81e-07     1.87e-04     6.46e-06\n7929 -1.80e-04 -5.50e-03 -2.07e-06     1.97e-04     5.42e-06\n7930 -5.96e-04 -1.38e-02 -9.04e-06     6.54e-04     1.81e-05\n7931  5.76e-02  4.43e-03  2.44e-01     1.81e-02     7.91e-02\n7932  1.01e-01  8.46e-03  3.34e-01     3.61e-02     1.47e-01\n7933  1.57e-01  3.44e-03  4.16e-01     1.09e-01     2.93e-01\n7934  1.45e-02  1.21e-04  1.04e-01     7.17e-03     2.36e-02\n7935  6.88e-02 -2.32e-02  2.94e-01     5.88e-02     1.42e-01\n7936  1.28e-02  8.00e-04  9.32e-02     2.66e-03     1.61e-02\n7937  3.35e-02  2.01e-03  1.70e-01     1.21e-02     4.86e-02\n7938  6.80e-02  4.77e-03  2.73e-01     2.48e-02     9.89e-02\n7939  3.38e-03  6.92e-05  4.04e-02     7.14e-04     4.26e-03\n7940  1.28e-02  7.82e-04  9.35e-02     2.74e-03     1.60e-02\n7941  2.36e-03  3.13e-05  3.46e-02     8.29e-04     3.45e-03\n7942  8.27e-03  3.51e-04  6.94e-02     2.28e-03     1.13e-02\n7943  1.99e-02  1.23e-03  1.26e-01     6.09e-03     2.75e-02\n7944 -5.31e-03 -2.02e-01  1.39e-03     7.70e-03     6.76e-04\n7945 -5.58e-03 -2.70e-01 -1.14e-06     6.38e-03     2.75e-04\n7946 -1.70e-02 -4.74e-01 -3.56e-06     1.95e-02     8.36e-04\n7947 -1.07e-03 -7.15e-02 -1.88e-07     1.19e-03     5.13e-05\n7948 -7.14e-04 -1.06e-01 -1.07e-07     7.62e-04     2.13e-05\n7949 -4.99e-04 -3.39e-02 -8.65e-08     5.86e-04     2.80e-05\n7950 -3.62e-03 -1.46e-01  7.05e-03     6.49e-03     8.47e-04\n7951 -3.30e-03 -1.95e-01 -6.32e-07     3.68e-03     1.45e-04\n7952 -8.98e-05 -1.18e-02 -9.66e-09     1.03e-04     4.45e-06\n7953 -5.41e-04 -3.89e-02 -7.71e-08     6.40e-04     3.11e-05\n7954 -1.40e-04 -1.52e-02 -1.57e-08     1.67e-04     8.12e-06\n7955 -1.94e-04 -2.28e-02 -3.29e-08     2.16e-04     7.61e-06\n7956 -6.16e-04 -5.17e-02 -1.07e-07     6.84e-04     2.44e-05\n7957  1.70e-02  9.04e-05  1.37e-01     8.27e-03     2.80e-02\n7958  3.01e-02 -1.24e-03  2.01e-01     1.69e-02     5.25e-02\n7959  5.11e-02 -3.17e-02  2.93e-01     5.36e-02     1.21e-01\n7960  3.56e-03 -2.98e-03  4.71e-02     3.31e-03     7.92e-03\n7961  2.80e-03 -8.46e-02  1.11e-01     2.81e-02     3.40e-02\n7962  3.68e-03  8.51e-05  4.24e-02     1.25e-03     5.24e-03\n7963  9.90e-03 -3.76e-04  9.54e-02     5.41e-03     1.72e-02\n7964  1.89e-02 -1.82e-03  1.49e-01     1.14e-02     3.49e-02\n7965  8.64e-04  6.18e-06  1.76e-02     3.24e-04     1.30e-03\n7966  3.52e-03  7.04e-05  4.32e-02     1.28e-03     5.22e-03\n7967  6.00e-04 -6.56e-05  1.51e-02     3.83e-04     1.13e-03\n7968  1.89e-03 -6.69e-05  2.89e-02     1.04e-03     3.26e-03\n7969  4.93e-03 -3.45e-04  5.40e-02     2.74e-03     8.70e-03\n7970  7.85e-02 -6.80e-02  3.17e-01     9.52e-02     1.96e-01\n7971  2.95e-02 -1.99e-01  2.62e-01     1.29e-01     1.73e-01\n7972  3.50e-02 -2.50e-01  3.18e-01     2.94e-01     3.43e-01\n7973  3.54e-03 -8.12e-02  8.07e-02     2.44e-02     3.08e-02\n7974 -9.13e-03 -2.50e-01  4.61e-02     3.33e-02     2.21e-02\n7975  7.35e-03 -4.48e-02  8.80e-02     1.33e-02     2.40e-02\n7976  5.69e-02 -5.02e-02  2.73e-01     6.62e-02     1.40e-01\n7977  1.27e-02 -1.87e-01  1.95e-01     8.36e-02     1.05e-01\n7978  6.84e-04 -2.12e-02  2.71e-02     3.02e-03     4.50e-03\n7979  7.71e-03 -4.02e-02  9.47e-02     1.38e-02     2.58e-02\n7980  9.79e-04 -1.65e-02  3.35e-02     3.65e-03     5.61e-03\n7981  1.92e-04 -4.58e-02  2.71e-02     6.51e-03     7.29e-03\n7982  1.25e-03 -9.33e-02  6.35e-02     1.88e-02     2.15e-02\n7983  3.82e-03 -2.22e-02  1.27e-01     9.98e-03     1.55e-02\n7984  2.14e-04 -5.45e-02  1.22e-01     1.40e-02     1.35e-02\n7985 -4.08e-04 -1.17e-01  1.63e-01     3.60e-02     3.24e-02\n7986 -1.68e-05 -1.24e-02  2.20e-02     2.20e-03     1.99e-03\n7987 -4.42e-04 -2.14e-02  2.41e-02     2.82e-03     1.58e-03\n7988  2.33e-04 -6.74e-03  3.21e-02     1.42e-03     1.82e-03\n7989  2.72e-03 -1.22e-02  8.86e-02     6.28e-03     1.04e-02\n7990 -4.42e-05 -4.02e-02  7.75e-02     8.54e-03     7.63e-03\n7991  6.19e-06 -2.82e-03  7.73e-03     3.00e-04     3.16e-04\n7992  2.34e-04 -6.14e-03  3.22e-02     1.45e-03     1.77e-03\n7993  9.38e-06 -2.56e-03  6.55e-03     3.35e-04     3.50e-04\n7994 -1.95e-05 -4.98e-03  9.02e-03     6.40e-04     4.97e-04\n7995 -4.68e-05 -1.05e-02  2.13e-02     1.79e-03     1.46e-03\n7996  1.89e-02 -1.70e-01  3.19e-01     1.75e-01     1.96e-01\n7997  1.01e-02 -2.71e-01  3.13e-01     2.87e-01     2.90e-01\n7998 -2.19e-02 -3.23e-01  2.62e-01     4.35e-01     3.98e-01\n7999 -2.34e-03 -8.41e-02  1.43e-01     4.42e-02     3.85e-02\n8000 -4.75e-02 -3.41e-01  2.21e-01     2.25e-01     1.46e-01\n8001  4.68e-02 -8.00e-02  3.65e-01     5.77e-02     1.09e-01\n8002  6.52e-03 -1.15e-01  2.53e-01     1.01e-01     1.08e-01\n8003  8.80e-04 -2.35e-01  2.97e-01     1.99e-01     1.94e-01\n8004  7.24e-03 -3.39e-02  1.87e-01     1.48e-02     2.39e-02\n8005  2.85e-02 -7.82e-02  3.17e-01     5.29e-02     8.59e-02\n8006  1.60e-05 -2.46e-02  5.85e-02     8.10e-03     7.81e-03\n8007  1.02e-03 -7.34e-02  1.46e-01     2.90e-02     2.92e-02\n8008  1.05e-03 -1.23e-01  2.20e-01     6.55e-02     6.47e-02\n8009  1.92e-01 -2.60e-02  4.39e-01     1.96e-01     4.24e-01\n8010  1.47e-01 -1.20e-01  4.15e-01     2.95e-01     4.68e-01\n8011  1.08e-01 -1.42e-01  3.94e-01     5.44e-01     6.74e-01\n8012  3.23e-02 -8.96e-02  2.09e-01     6.65e-02     1.12e-01\n8013 -2.65e-02 -3.54e-01  1.78e-01     1.56e-01     1.23e-01\n8014  5.31e-02 -1.70e-02  2.56e-01     3.46e-02     9.87e-02\n8015  1.43e-01 -3.25e-02  3.83e-01     1.37e-01     3.07e-01\n8016  1.06e-01 -1.39e-01  3.64e-01     2.09e-01     3.39e-01\n8017  9.48e-03 -1.56e-02  1.15e-01     8.64e-03     2.17e-02\n8018  5.44e-02 -1.95e-02  2.45e-01     3.53e-02     9.98e-02\n8019  8.02e-03 -1.63e-02  1.07e-01     1.00e-02     2.17e-02\n8020  9.82e-03 -5.72e-02  1.22e-01     2.18e-02     3.66e-02\n8021  2.98e-02 -9.77e-02  2.08e-01     5.84e-02     9.87e-02\n8022  1.74e-02  3.97e-04  1.34e-01     7.30e-03     2.67e-02\n8023  3.09e-02  5.58e-04  2.08e-01     1.44e-02     5.02e-02\n8024  4.40e-02 -1.50e-02  2.68e-01     4.24e-02     9.79e-02\n8025  2.94e-03 -1.14e-03  3.93e-02     2.57e-03     6.31e-03\n8026  1.39e-02 -2.03e-02  1.50e-01     2.06e-02     3.99e-02\n8027  5.27e-03  1.87e-04  5.40e-02     1.17e-03     6.72e-03\n8028  8.94e-03  5.51e-05  8.16e-02     4.66e-03     1.52e-02\n8029  2.03e-02  2.40e-04  1.52e-01     9.79e-03     3.27e-02\n8030  1.26e-03  1.66e-05  2.17e-02     2.96e-04     1.62e-03\n8031  4.80e-03  1.64e-04  5.36e-02     1.16e-03     6.21e-03\n8032  5.77e-04  2.29e-07  1.37e-02     3.13e-04     9.90e-04\n8033  2.42e-03  4.14e-05  3.51e-02     8.95e-04     3.57e-03\n8034  5.88e-03  1.22e-04  6.05e-02     2.46e-03     8.97e-03\n8035  7.36e-02 -1.43e-02  4.06e-01     4.39e-02     1.27e-01\n8036  9.85e-02 -8.85e-02  4.52e-01     8.66e-02     1.93e-01\n8037  1.28e-01 -2.00e-01  4.49e-01     2.41e-01     3.85e-01\n8038  1.53e-02 -2.97e-02  2.26e-01     1.83e-02     3.55e-02\n8039  3.05e-03 -2.79e-01  3.60e-01     1.35e-01     1.20e-01\n8040  1.37e-02 -6.45e-03  1.73e-01     6.68e-03     2.17e-02\n8041  4.88e-02 -6.98e-03  3.36e-01     2.98e-02     8.50e-02\n8042  6.46e-02 -7.33e-02  4.19e-01     6.00e-02     1.29e-01\n8043  3.09e-03 -3.16e-03  7.57e-02     1.78e-03     5.25e-03\n8044  1.37e-02 -5.52e-03  1.79e-01     6.67e-03     2.16e-02\n8045  2.50e-03 -3.56e-03  7.85e-02     2.17e-03     5.33e-03\n8046  6.38e-03 -1.38e-02  1.43e-01     5.54e-03     1.28e-02\n8047  1.78e-02 -2.83e-02  2.42e-01     1.50e-02     3.35e-02\n8048 -5.23e-03 -1.91e-01  9.60e-04     7.73e-03     7.14e-04\n8049 -5.50e-03 -2.44e-01 -1.94e-06     6.20e-03     2.89e-04\n8050 -1.63e-02 -4.55e-01 -5.43e-06     1.85e-02     8.63e-04\n8051 -9.85e-04 -6.74e-02 -3.25e-07     1.14e-03     5.42e-05\n8052 -6.59e-04 -1.03e-01 -1.75e-07     7.18e-04     2.15e-05\n8053 -5.08e-04 -3.24e-02 -1.14e-07     5.97e-04     3.07e-05\n8054 -3.80e-03 -1.43e-01  5.96e-03     6.78e-03     8.67e-04\n8055 -3.08e-03 -1.77e-01 -1.02e-06     3.46e-03     1.51e-04\n8056 -8.77e-05 -1.12e-02 -1.76e-08     9.96e-05     4.56e-06\n8057 -5.31e-04 -3.49e-02 -1.21e-07     6.22e-04     3.26e-05\n8058 -1.44e-04 -1.51e-02 -2.03e-08     1.67e-04     8.53e-06\n8059 -1.88e-04 -2.00e-02 -4.69e-08     2.10e-04     7.75e-06\n8060 -6.05e-04 -4.74e-02 -1.62e-07     6.73e-04     2.66e-05\n8061  1.05e-01  5.51e-03  4.44e-01     4.28e-02     1.57e-01\n8062  1.60e-01  6.65e-03  4.91e-01     8.27e-02     2.57e-01\n8063  1.87e-01 -2.21e-02  4.75e-01     2.25e-01     4.46e-01\n8064  2.47e-02 -2.64e-03  2.52e-01     1.65e-02     4.42e-02\n8065  8.04e-02 -7.87e-02  4.14e-01     1.19e-01     2.12e-01\n8066  2.89e-02  1.38e-03  2.51e-01     6.68e-03     3.71e-02\n8067  6.20e-02  2.19e-03  3.68e-01     2.82e-02     9.57e-02\n8068  1.15e-01  2.31e-03  4.54e-01     5.73e-02     1.83e-01\n8069  7.17e-03  1.08e-04  1.18e-01     1.76e-03     9.43e-03\n8070  2.76e-02  1.36e-03  2.39e-01     6.94e-03     3.61e-02\n8071  4.65e-03  1.27e-05  9.17e-02     2.04e-03     7.24e-03\n8072  1.57e-02  2.17e-04  1.91e-01     5.48e-03     2.26e-02\n8073  3.77e-02  7.81e-04  2.96e-01     1.47e-02     5.54e-02\n8074  1.91e-02  5.82e-04  1.39e-01     6.81e-03     2.77e-02\n8075  3.52e-02  1.09e-03  2.21e-01     1.38e-02     5.23e-02\n8076  5.59e-02 -6.04e-03  2.88e-01     4.14e-02     1.11e-01\n8077  3.66e-03 -4.65e-04  4.36e-02     2.54e-03     7.09e-03\n8078  1.81e-02 -1.35e-02  1.68e-01     2.06e-02     4.47e-02\n8079  5.01e-03  1.91e-04  5.30e-02     1.03e-03     6.24e-03\n8080  1.02e-02  1.94e-04  8.97e-02     4.41e-03     1.61e-02\n8081  2.29e-02  5.17e-04  1.57e-01     9.48e-03     3.52e-02\n8082  1.23e-03  1.56e-05  2.24e-02     2.73e-04     1.58e-03\n8083  4.70e-03  1.54e-04  4.68e-02     1.09e-03     6.08e-03\n8084  6.83e-04  2.99e-06  1.43e-02     3.01e-04     1.05e-03\n8085  2.63e-03  5.62e-05  3.38e-02     8.51e-04     3.75e-03\n8086  6.20e-03  1.80e-04  6.45e-02     2.29e-03     9.30e-03\n8087  1.07e-01  4.09e-03  4.51e-01     4.51e-02     1.60e-01\n8088  1.27e-01 -3.32e-02  4.62e-01     8.45e-02     2.26e-01\n8089  1.62e-01 -9.76e-02  4.58e-01     2.34e-01     4.26e-01\n8090  2.07e-02 -1.34e-02  2.43e-01     1.79e-02     4.28e-02\n8091  3.37e-03 -1.51e-01  3.27e-01     8.12e-02     7.95e-02\n8092  1.99e-02 -8.32e-04  2.14e-01     6.68e-03     2.79e-02\n8093  7.05e-02  2.82e-03  3.92e-01     3.02e-02     1.07e-01\n8094  8.40e-02 -3.52e-02  4.25e-01     5.87e-02     1.51e-01\n8095  4.18e-03 -8.86e-04  8.86e-02     1.73e-03     6.53e-03\n8096  2.02e-02 -7.95e-04  2.06e-01     6.95e-03     2.83e-02\n8097  3.81e-03 -6.07e-04  8.84e-02     2.13e-03     6.55e-03\n8098  7.63e-03 -5.98e-03  1.37e-01     5.34e-03     1.43e-02\n8099  2.17e-02 -1.31e-02  2.43e-01     1.46e-02     3.86e-02\n8100 -4.68e-03 -2.00e-01  1.72e-03     7.19e-03     6.57e-04\n8101 -5.11e-03 -2.53e-01 -1.53e-06     5.96e-03     2.67e-04\n8102 -1.52e-02 -4.67e-01 -5.17e-06     1.76e-02     7.95e-04\n8103 -8.94e-04 -7.01e-02 -3.04e-07     1.02e-03     4.80e-05\n8104 -6.47e-04 -1.22e-01 -1.51e-07     7.08e-04     1.99e-05\n8105 -4.36e-04 -3.69e-02 -1.00e-07     5.21e-04     2.71e-05\n8106 -3.19e-03 -1.51e-01  1.06e-02     5.94e-03     7.92e-04\n8107 -2.90e-03 -1.86e-01 -9.19e-07     3.28e-03     1.37e-04\n8108 -7.98e-05 -1.02e-02 -2.22e-08     9.26e-05     3.95e-06\n8109 -4.80e-04 -3.50e-02 -9.20e-08     5.69e-04     2.99e-05\n8110 -1.27e-04 -1.44e-02 -2.10e-08     1.52e-04     7.68e-06\n8111 -1.74e-04 -2.17e-02 -4.28e-08     1.93e-04     6.73e-06\n8112 -5.42e-04 -5.07e-02 -1.58e-07     6.06e-04     2.22e-05\n8113  2.16e-02  5.28e-05  2.37e-01     1.11e-02     3.60e-02\n8114  3.72e-02 -1.10e-03  3.18e-01     2.22e-02     6.40e-02\n8115  4.62e-02 -2.50e-02  3.52e-01     6.03e-02     1.21e-01\n8116  3.16e-03 -2.39e-03  7.64e-02     3.74e-03     7.88e-03\n8117  1.09e-02 -3.56e-02  2.29e-01     2.76e-02     4.29e-02\n8118  7.56e-03  2.08e-04  1.03e-01     1.81e-03     9.76e-03\n8119  1.06e-02 -6.03e-04  1.52e-01     6.88e-03     1.95e-02\n8120  2.29e-02 -1.93e-03  2.52e-01     1.47e-02     4.15e-02\n8121  1.75e-03  1.49e-05  4.14e-02     4.81e-04     2.40e-03\n8122  6.56e-03  1.48e-04  9.36e-02     1.84e-03     8.99e-03\n8123  6.81e-04 -8.36e-05  2.38e-02     4.70e-04     1.33e-03\n8124  2.95e-03 -1.81e-05  6.53e-02     1.40e-03     4.73e-03\n8125  6.81e-03 -1.66e-04  1.21e-01     3.63e-03     1.14e-02\n8126  1.00e-01  6.47e-03  3.24e-01     5.22e-02     1.67e-01\n8127  1.35e-01 -1.40e-02  3.80e-01     1.02e-01     2.59e-01\n8128  1.75e-01 -7.01e-02  4.34e-01     2.79e-01     4.84e-01\n8129  2.51e-02 -1.73e-02  1.57e-01     2.25e-02     5.33e-02\n8130 -2.45e-02 -3.20e-01  1.90e-01     1.64e-01     1.30e-01\n8131  2.00e-02  1.23e-03  1.23e-01     7.85e-03     2.98e-02\n8132  6.69e-02  1.29e-03  2.59e-01     3.63e-02     1.12e-01\n8133  9.42e-02 -2.01e-02  3.25e-01     7.25e-02     1.82e-01\n8134  4.83e-03  1.59e-05  5.42e-02     2.16e-03     7.71e-03\n8135  2.04e-02  1.01e-03  1.24e-01     8.10e-03     3.09e-02\n8136  4.37e-03 -4.80e-04  5.61e-02     2.61e-03     7.95e-03\n8137  9.94e-03 -3.99e-03  8.54e-02     6.83e-03     1.92e-02\n8138  2.66e-02 -9.15e-03  1.56e-01     1.81e-02     5.05e-02\n8139  1.14e-01  1.74e-02  3.39e-01     3.90e-02     1.62e-01\n8140  1.70e-01  2.91e-02  4.10e-01     7.42e-02     2.66e-01\n8141  2.24e-01  1.15e-02  4.76e-01     2.13e-01     4.77e-01\n8142  3.10e-02  1.16e-03  1.62e-01     1.55e-02     5.17e-02\n8143  6.96e-02 -1.02e-01  3.13e-01     1.04e-01     1.90e-01\n8144  2.69e-02  2.55e-03  1.44e-01     5.77e-03     3.42e-02\n8145  7.11e-02  8.30e-03  2.61e-01     2.60e-02     1.03e-01\n8146  1.24e-01  1.70e-02  3.57e-01     5.21e-02     1.89e-01\n8147  6.90e-03  1.76e-04  6.89e-02     1.59e-03     8.83e-03\n8148  2.62e-02  2.51e-03  1.43e-01     6.08e-03     3.35e-02\n8149  5.45e-03  1.06e-04  6.14e-02     1.89e-03     7.92e-03\n8150  1.56e-02  9.80e-04  1.08e-01     4.84e-03     2.22e-02\n8151  3.83e-02  3.50e-03  1.85e-01     1.32e-02     5.46e-02\n8152  4.27e-02 -8.35e-04  2.09e-01     2.46e-02     7.36e-02\n8153  6.78e-02 -7.37e-03  2.86e-01     4.72e-02     1.28e-01\n8154  7.39e-02 -6.82e-02  3.14e-01     1.20e-01     2.16e-01\n8155  6.03e-03 -9.57e-03  6.38e-02     7.93e-03     1.60e-02\n8156  1.25e-02 -8.45e-02  1.56e-01     4.94e-02     6.96e-02\n8157  1.66e-02  1.17e-03  1.25e-01     4.25e-03     2.18e-02\n8158  2.09e-02 -5.26e-03  1.44e-01     1.54e-02     4.01e-02\n8159  4.23e-02 -9.20e-03  2.23e-01     3.21e-02     8.38e-02\n8160  3.89e-03  6.22e-05  5.29e-02     1.13e-03     5.37e-03\n8161  1.45e-02  9.46e-04  1.09e-01     4.33e-03     1.99e-02\n8162  1.38e-03 -5.10e-04  2.48e-02     1.10e-03     2.88e-03\n8163  5.69e-03 -2.15e-04  5.88e-02     3.15e-03     9.75e-03\n8164  1.30e-02 -1.27e-03  1.00e-01     8.09e-03     2.34e-02\n8165 -5.60e-03 -2.21e-01  1.56e-03     8.10e-03     7.32e-04\n8166 -5.92e-03 -2.59e-01 -1.85e-06     7.04e-03     3.00e-04\n8167 -1.80e-02 -4.90e-01 -6.43e-06     2.07e-02     8.89e-04\n8168 -1.05e-03 -7.46e-02 -3.25e-07     1.23e-03     5.41e-05\n8169 -7.49e-04 -1.04e-01 -1.86e-07     8.31e-04     2.26e-05\n8170 -5.41e-04 -3.58e-02 -1.19e-07     6.57e-04     3.15e-05\n8171 -3.79e-03 -1.57e-01  6.62e-03     6.75e-03     9.10e-04\n8172 -3.48e-03 -1.89e-01 -1.03e-06     3.93e-03     1.57e-04\n8173 -9.19e-05 -1.15e-02 -2.33e-08     1.05e-04     4.82e-06\n8174 -5.67e-04 -3.83e-02 -1.12e-07     6.77e-04     3.52e-05\n8175 -1.46e-04 -1.66e-02 -2.56e-08     1.76e-04     8.82e-06\n8176 -2.08e-04 -2.19e-02 -6.15e-08     2.27e-04     8.17e-06\n8177 -6.34e-04 -5.06e-02 -1.86e-07     7.10e-04     2.70e-05\n8178  3.18e-03 -5.63e-02  1.02e-01     1.54e-02     2.14e-02\n8179 -8.93e-03 -1.84e-01  4.21e-02     2.86e-02     1.43e-02\n8180 -2.95e-02 -3.35e-01  6.85e-02     8.40e-02     4.03e-02\n8181 -1.80e-03 -5.30e-02  7.13e-03     5.22e-03     2.55e-03\n8182 -1.89e-02 -2.62e-01 -2.93e-04     2.10e-02     1.34e-03\n8183 -3.00e-04 -2.14e-02  8.51e-03     2.27e-03     1.61e-03\n8184  4.57e-03 -2.53e-02  9.49e-02     1.01e-02     1.75e-02\n8185 -7.39e-03 -1.54e-01  1.77e-02     1.85e-02     7.94e-03\n8186 -1.57e-04 -9.93e-03  1.24e-03     5.58e-04     2.71e-04\n8187 -2.53e-04 -2.04e-02  9.55e-03     2.31e-03     1.70e-03\n8188 -9.42e-05 -9.68e-03  2.60e-03     6.36e-04     4.18e-04\n8189 -8.95e-04 -2.42e-02  7.02e-04     1.65e-03     4.57e-04\n8190 -2.25e-03 -5.64e-02  2.72e-03     4.46e-03     1.40e-03\n8191  8.00e-02 -1.56e-03  3.99e-01     4.52e-02     1.33e-01\n8192  9.22e-02 -4.76e-02  4.27e-01     8.37e-02     1.89e-01\n8193  1.04e-01 -1.19e-01  4.09e-01     2.11e-01     3.37e-01\n8194  1.10e-02 -1.65e-02  1.76e-01     1.60e-02     2.99e-02\n8195  6.89e-06 -1.50e-01  2.68e-01     7.07e-02     6.55e-02\n8196  1.92e-02 -1.32e-03  1.93e-01     7.40e-03     2.83e-02\n8197  4.74e-02 -2.92e-03  3.11e-01     2.97e-02     8.18e-02\n8198  5.87e-02 -4.19e-02  3.73e-01     5.67e-02     1.22e-01\n8199  3.91e-03 -1.28e-03  8.81e-02     1.90e-03     6.32e-03\n8200  1.82e-02 -1.49e-03  1.99e-01     7.39e-03     2.71e-02\n8201  2.50e-03 -1.47e-03  5.92e-02     2.04e-03     5.18e-03\n8202  5.87e-03 -6.74e-03  1.15e-01     5.38e-03     1.22e-02\n8203  1.57e-02 -1.38e-02  2.03e-01     1.44e-02     3.28e-02\n8204 -1.72e-02 -2.50e-01  2.70e-01     1.17e-01     8.11e-02\n8205 -9.95e-02 -4.16e-01  1.63e-01     1.92e-01     5.06e-02\n8206 -1.96e-01 -5.86e-01  1.52e-01     3.96e-01     1.27e-01\n8207 -2.04e-02 -1.52e-01  4.82e-02     3.74e-02     8.90e-03\n8208 -8.72e-02 -3.90e-01 -6.13e-03     1.00e-01     4.66e-03\n8209 -8.61e-03 -9.75e-02  6.98e-02     2.00e-02     5.89e-03\n8210 -5.13e-04 -1.54e-01  2.41e-01     7.65e-02     6.92e-02\n8211 -7.52e-02 -3.54e-01  1.25e-01     1.31e-01     2.77e-02\n8212 -2.48e-03 -4.56e-02  1.57e-02     5.08e-03     9.88e-04\n8213 -8.43e-03 -8.66e-02  7.00e-02     2.00e-02     6.35e-03\n8214 -2.05e-03 -4.23e-02  2.02e-02     5.39e-03     1.52e-03\n8215 -8.61e-03 -8.50e-02  1.32e-02     1.29e-02     1.60e-03\n8216 -2.19e-02 -1.50e-01  3.52e-02     3.43e-02     5.11e-03\n8217  2.26e-02 -3.47e-03  2.35e-01     1.29e-02     3.83e-02\n8218  3.21e-02 -3.47e-02  3.24e-01     2.55e-02     6.18e-02\n8219  5.57e-02 -1.01e-01  3.83e-01     8.01e-02     1.47e-01\n8220  4.03e-03 -9.43e-03  9.49e-02     5.15e-03     1.02e-02\n8221  1.00e-03 -1.38e-01  2.47e-01     4.23e-02     3.63e-02\n8222  3.70e-03 -1.76e-03  6.91e-02     1.90e-03     6.13e-03\n8223  1.41e-02 -2.09e-03  1.77e-01     8.35e-03     2.47e-02\n8224  1.96e-02 -2.69e-02  2.61e-01     1.71e-02     3.99e-02\n8225  8.48e-04 -7.89e-04  2.90e-02     4.82e-04     1.47e-03\n8226  3.72e-03 -1.55e-03  7.56e-02     1.91e-03     6.16e-03\n8227  6.99e-04 -7.91e-04  2.86e-02     5.89e-04     1.43e-03\n8228  1.76e-03 -4.20e-03  5.27e-02     1.59e-03     3.61e-03\n8229  4.92e-03 -8.67e-03  1.04e-01     4.17e-03     9.63e-03\n8230  3.67e-02  1.11e-03  3.20e-01     1.15e-02     5.13e-02\n8231  6.34e-02  1.43e-03  4.02e-01     2.31e-02     9.29e-02\n8232  1.14e-01  7.00e-05  4.52e-01     7.33e-02     2.07e-01\n8233  9.32e-03 -3.86e-05  1.46e-01     4.67e-03     1.53e-02\n8234  3.69e-02 -3.43e-02  3.50e-01     3.76e-02     8.31e-02\n8235  7.71e-03  1.65e-04  1.18e-01     1.73e-03     9.87e-03\n8236  2.16e-02  5.30e-04  2.37e-01     7.63e-03     3.10e-02\n8237  4.23e-02  7.26e-04  3.49e-01     1.55e-02     6.22e-02\n8238  1.91e-03  1.34e-05  5.05e-02     4.24e-04     2.45e-03\n8239  7.54e-03  1.83e-04  1.09e-01     1.73e-03     9.76e-03\n8240  1.43e-03  8.29e-06  4.33e-02     5.36e-04     2.13e-03\n8241  4.62e-03  4.04e-05  8.44e-02     1.40e-03     6.37e-03\n8242  1.16e-02  1.47e-04  1.69e-01     3.80e-03     1.63e-02\n8243  2.30e-02 -3.80e-03  2.50e-01     1.30e-02     3.97e-02\n8244  3.19e-02 -3.57e-02  3.28e-01     2.53e-02     6.30e-02\n8245  5.64e-02 -1.18e-01  3.90e-01     8.29e-02     1.50e-01\n8246  4.13e-03 -1.17e-02  1.06e-01     5.20e-03     1.05e-02\n8247  1.57e-03 -1.65e-01  2.67e-01     4.25e-02     3.58e-02\n8248  3.70e-03 -2.08e-03  7.85e-02     1.85e-03     6.13e-03\n8249  1.48e-02 -2.25e-03  1.90e-01     8.57e-03     2.59e-02\n8250  1.99e-02 -3.13e-02  2.72e-01     1.74e-02     3.97e-02\n8251  8.06e-04 -1.19e-03  2.95e-02     4.87e-04     1.46e-03\n8252  3.83e-03 -1.98e-03  7.92e-02     1.90e-03     6.23e-03\n8253  6.77e-04 -1.14e-03  3.01e-02     5.93e-04     1.45e-03\n8254  1.83e-03 -4.84e-03  6.08e-02     1.58e-03     3.77e-03\n8255  5.00e-03 -1.07e-02  1.13e-01     4.26e-03     9.91e-03\n8256 -1.56e-03 -1.21e-01  5.66e-02     1.58e-02     1.24e-02\n8257 -1.49e-02 -2.64e-01  6.93e-03     2.62e-02     7.16e-03\n8258 -4.02e-02 -3.95e-01  1.53e-02     7.10e-02     1.99e-02\n8259 -2.48e-03 -6.79e-02  1.20e-03     4.46e-03     1.22e-03\n8260 -1.14e-02 -2.19e-01 -1.06e-04     1.25e-02     6.07e-04\n8261 -1.14e-03 -4.00e-02  1.92e-03     2.37e-03     7.54e-04\n8262  7.94e-05 -6.17e-02  5.72e-02     1.00e-02     1.06e-02\n8263 -1.08e-02 -1.95e-01  2.18e-03     1.70e-02     3.86e-03\n8264 -3.24e-04 -1.52e-02  1.36e-04     5.56e-04     1.28e-04\n8265 -1.06e-03 -3.98e-02  2.70e-03     2.46e-03     8.62e-04\n8266 -2.60e-04 -1.33e-02  6.41e-04     6.02e-04     2.06e-04\n8267 -1.09e-03 -3.14e-02 -1.38e-06     1.44e-03     2.10e-04\n8268 -2.83e-03 -6.78e-02  2.26e-05     3.93e-03     6.66e-04\n8269  1.96e-02 -5.23e-03  2.34e-01     1.31e-02     3.54e-02\n8270  2.74e-02 -3.52e-02  3.02e-01     2.58e-02     5.74e-02\n8271  4.12e-02 -1.02e-01  3.68e-01     7.96e-02     1.30e-01\n8272  2.76e-03 -1.03e-02  8.89e-02     4.88e-03     8.63e-03\n8273 -6.51e-04 -1.32e-01  2.26e-01     4.01e-02     2.94e-02\n8274  3.90e-03 -2.00e-03  7.62e-02     2.01e-03     6.29e-03\n8275  1.17e-02 -2.86e-03  1.66e-01     8.54e-03     2.24e-02\n8276  1.61e-02 -2.88e-02  2.40e-01     1.76e-02     3.69e-02\n8277  7.82e-04 -9.44e-04  3.12e-02     5.02e-04     1.43e-03\n8278  3.71e-03 -1.86e-03  7.58e-02     2.02e-03     6.14e-03\n8279  5.49e-04 -1.14e-03  2.51e-02     5.74e-04     1.29e-03\n8280  1.53e-03 -3.95e-03  5.38e-02     1.60e-03     3.31e-03\n8281  3.94e-03 -1.01e-02  1.06e-01     4.31e-03     8.74e-03\n8282  2.76e-02  3.91e-04  2.47e-01     1.15e-02     4.18e-02\n8283  4.76e-02  1.78e-04  3.29e-01     2.30e-02     7.59e-02\n8284  6.66e-02 -1.80e-02  3.84e-01     6.74e-02     1.48e-01\n8285  4.80e-03 -1.35e-03  9.08e-02     4.14e-03     9.90e-03\n8286  1.71e-02 -3.73e-02  2.58e-01     3.18e-02     5.47e-02\n8287  7.77e-03  2.01e-04  1.02e-01     1.82e-03     9.89e-03\n8288  1.45e-02  6.12e-06  1.69e-01     7.33e-03     2.40e-02\n8289  3.01e-02 -2.59e-04  2.74e-01     1.53e-02     4.98e-02\n8290  1.85e-03  1.70e-05  4.29e-02     4.60e-04     2.42e-03\n8291  7.09e-03  1.78e-04  1.01e-01     1.87e-03     9.40e-03\n8292  9.46e-04 -9.00e-06  2.63e-02     5.03e-04     1.64e-03\n8293  3.60e-03  1.23e-05  6.52e-02     1.43e-03     5.39e-03\n8294  8.43e-03  2.07e-05  1.24e-01     3.84e-03     1.32e-02\n8295  1.64e-02 -1.69e-04  1.29e-01     8.40e-03     2.74e-02\n8296  2.98e-02 -9.49e-04  1.99e-01     1.66e-02     5.26e-02\n8297  4.82e-02 -3.58e-02  2.85e-01     5.23e-02     1.15e-01\n8298  3.27e-03 -2.94e-03  4.23e-02     3.27e-03     7.51e-03\n8299  1.32e-02 -4.82e-02  1.56e-01     2.77e-02     4.64e-02\n8300  3.84e-03  1.06e-04  4.19e-02     1.25e-03     5.50e-03\n8301  8.86e-03 -1.16e-03  8.27e-02     5.41e-03     1.61e-02\n8302  1.91e-02 -1.84e-03  1.51e-01     1.14e-02     3.49e-02\n8303  9.58e-04  7.90e-06  1.86e-02     3.28e-04     1.40e-03\n8304  3.72e-03  8.96e-05  4.06e-02     1.28e-03     5.39e-03\n8305  5.82e-04 -1.05e-04  1.34e-02     3.79e-04     1.10e-03\n8306  2.15e-03  2.07e-06  3.23e-02     1.05e-03     3.54e-03\n8307  5.35e-03 -1.91e-04  5.49e-02     2.83e-03     9.18e-03\n8308  3.79e-02  1.08e-03  3.05e-01     1.20e-02     5.20e-02\n8309  6.65e-02  1.76e-03  4.06e-01     2.35e-02     9.52e-02\n8310  1.18e-01  1.61e-04  4.56e-01     7.41e-02     2.13e-01\n8311  9.61e-03 -1.79e-05  1.47e-01     4.71e-03     1.57e-02\n8312  3.86e-02 -2.64e-02  3.62e-01     3.82e-02     8.40e-02\n8313  7.56e-03  2.03e-04  1.11e-01     1.67e-03     9.45e-03\n8314  2.23e-02  5.25e-04  2.35e-01     7.73e-03     3.21e-02\n8315  4.50e-02  8.85e-04  3.40e-01     1.59e-02     6.49e-02\n8316  1.93e-03  2.05e-05  4.48e-02     4.60e-04     2.52e-03\n8317  7.60e-03  1.98e-04  1.05e-01     1.76e-03     9.67e-03\n8318  1.51e-03  9.02e-06  4.44e-02     5.24e-04     2.18e-03\n8319  4.61e-03  6.09e-05  8.44e-02     1.45e-03     6.40e-03\n8320  1.21e-02  1.89e-04  1.61e-01     3.95e-03     1.69e-02\n8321  4.56e-02 -4.51e-03  2.22e-01     2.61e-02     7.82e-02\n8322  7.17e-02 -1.52e-02  2.93e-01     5.11e-02     1.36e-01\n8323  9.37e-02 -8.91e-02  3.48e-01     1.47e-01     2.66e-01\n8324  8.16e-03 -1.35e-02  7.74e-02     1.01e-02     2.13e-02\n8325  3.69e-03 -1.79e-01  1.66e-01     7.96e-02     8.61e-02\n8326  1.14e-02  5.06e-04  8.99e-02     4.14e-03     1.68e-02\n8327  2.49e-02 -7.21e-03  1.50e-01     1.71e-02     4.71e-02\n8328  4.65e-02 -1.64e-02  2.32e-01     3.65e-02     9.07e-02\n8329  2.82e-03  1.43e-05  3.54e-02     1.11e-03     4.27e-03\n8330  1.08e-02  3.51e-04  8.37e-02     4.15e-03     1.62e-02\n8331  1.62e-03 -8.87e-04  2.64e-02     1.25e-03     3.40e-03\n8332  5.39e-03 -1.41e-03  5.71e-02     3.32e-03     9.84e-03\n8333  1.33e-02 -5.51e-03  9.84e-02     8.87e-03     2.50e-02\n8334  1.96e-02 -5.08e-03  2.28e-01     1.25e-02     3.54e-02\n8335  2.68e-02 -3.47e-02  2.93e-01     2.57e-02     5.67e-02\n8336  4.02e-02 -1.02e-01  3.57e-01     7.75e-02     1.28e-01\n8337  2.79e-03 -1.06e-02  8.55e-02     4.81e-03     8.55e-03\n8338 -6.48e-04 -1.36e-01  2.18e-01     3.83e-02     2.99e-02\n8339  3.75e-03 -1.84e-03  7.40e-02     1.84e-03     6.06e-03\n8340  1.18e-02 -3.00e-03  1.62e-01     8.19e-03     2.21e-02\n8341  1.61e-02 -2.74e-02  2.37e-01     1.72e-02     3.55e-02\n8342  7.83e-04 -1.04e-03  2.98e-02     4.97e-04     1.42e-03\n8343  3.65e-03 -1.60e-03  7.55e-02     1.93e-03     6.04e-03\n8344  5.04e-04 -1.00e-03  2.49e-02     5.59e-04     1.23e-03\n8345  1.51e-03 -4.40e-03  5.10e-02     1.54e-03     3.35e-03\n8346  3.95e-03 -1.00e-02  1.01e-01     4.20e-03     8.90e-03\n8347  1.04e-01  1.20e-02  3.17e-01     4.45e-02     1.61e-01\n8348  1.54e-01  1.51e-02  3.90e-01     8.41e-02     2.57e-01\n8349  1.75e-01 -3.27e-02  4.30e-01     2.22e-01     4.35e-01\n8350  2.28e-02 -6.37e-03  1.35e-01     1.69e-02     4.40e-02\n8351  4.70e-02 -1.16e-01  2.73e-01     1.05e-01     1.68e-01\n8352  3.01e-02  2.81e-03  1.70e-01     6.96e-03     3.92e-02\n8353  6.10e-02  3.84e-03  2.38e-01     2.88e-02     9.78e-02\n8354  1.08e-01  7.36e-03  3.36e-01     5.79e-02     1.80e-01\n8355  7.55e-03  2.10e-04  7.85e-02     1.89e-03     9.98e-03\n8356  2.85e-02  2.68e-03  1.63e-01     7.14e-03     3.77e-02\n8357  4.38e-03  3.16e-05  5.64e-02     2.11e-03     7.32e-03\n8358  1.44e-02  6.06e-04  1.08e-01     5.62e-03     2.17e-02\n8359  3.45e-02  2.05e-03  1.73e-01     1.50e-02     5.34e-02\n8360  2.23e-02 -3.93e-03  2.49e-01     1.26e-02     3.78e-02\n8361  3.16e-02 -3.31e-02  3.25e-01     2.53e-02     6.14e-02\n8362  5.52e-02 -1.03e-01  3.89e-01     8.04e-02     1.43e-01\n8363  3.93e-03 -1.08e-02  1.04e-01     5.12e-03     1.00e-02\n8364  9.31e-04 -1.35e-01  2.62e-01     4.11e-02     3.47e-02\n8365  3.66e-03 -1.75e-03  7.82e-02     1.80e-03     5.86e-03\n8366  1.37e-02 -1.84e-03  1.85e-01     8.19e-03     2.44e-02\n8367  1.95e-02 -2.89e-02  2.63e-01     1.71e-02     3.94e-02\n8368  7.74e-04 -9.37e-04  2.93e-02     4.68e-04     1.36e-03\n8369  3.75e-03 -1.47e-03  7.72e-02     1.88e-03     6.05e-03\n8370  6.61e-04 -8.79e-04  2.83e-02     5.53e-04     1.40e-03\n8371  1.70e-03 -4.05e-03  5.37e-02     1.53e-03     3.49e-03\n8372  4.75e-03 -8.51e-03  1.10e-01     4.19e-03     9.60e-03\n8373 -5.34e-03 -1.91e-01  9.00e-04     7.65e-03     6.40e-04\n8374 -5.44e-03 -2.60e-01 -1.59e-06     6.29e-03     2.55e-04\n8375 -1.60e-02 -4.60e-01 -4.08e-06     1.79e-02     7.80e-04\n8376 -9.37e-04 -6.64e-02 -2.61e-07     1.07e-03     4.67e-05\n8377 -6.25e-04 -9.67e-02 -1.28e-07     6.75e-04     1.97e-05\n8378 -4.76e-04 -3.53e-02 -1.06e-07     5.61e-04     2.73e-05\n8379 -3.72e-03 -1.46e-01  7.97e-03     6.44e-03     7.98e-04\n8380 -2.96e-03 -1.77e-01 -7.96e-07     3.35e-03     1.35e-04\n8381 -8.69e-05 -1.01e-02 -1.71e-08     9.97e-05     4.01e-06\n8382 -4.95e-04 -3.42e-02 -8.78e-08     5.87e-04     2.97e-05\n8383 -1.33e-04 -1.47e-02 -1.92e-08     1.57e-04     7.35e-06\n8384 -1.70e-04 -1.99e-02 -3.65e-08     1.88e-04     6.86e-06\n8385 -5.34e-04 -5.01e-02 -1.44e-07     6.04e-04     2.24e-05\n8386  1.96e-02 -6.28e-03  2.23e-01     1.32e-02     3.60e-02\n8387  2.75e-02 -3.85e-02  2.93e-01     2.59e-02     5.76e-02\n8388  3.96e-02 -1.15e-01  3.47e-01     7.77e-02     1.30e-01\n8389  2.82e-03 -1.13e-02  7.90e-02     5.02e-03     8.54e-03\n8390 -8.39e-04 -1.53e-01  2.20e-01     3.96e-02     2.96e-02\n8391  3.77e-03 -2.23e-03  7.13e-02     1.97e-03     6.21e-03\n8392  1.20e-02 -3.58e-03  1.61e-01     8.70e-03     2.24e-02\n8393  1.61e-02 -2.99e-02  2.41e-01     1.75e-02     3.62e-02\n8394  7.89e-04 -9.58e-04  2.66e-02     5.11e-04     1.44e-03\n8395  3.60e-03 -2.18e-03  6.89e-02     1.99e-03     5.97e-03\n8396  5.41e-04 -1.10e-03  2.37e-02     5.77e-04     1.30e-03\n8397  1.48e-03 -4.81e-03  5.05e-02     1.60e-03     3.36e-03\n8398  4.00e-03 -9.53e-03  9.51e-02     4.30e-03     9.12e-03\n8399  1.71e-02 -1.20e-01  2.05e-01     4.62e-02     7.36e-02\n8400 -1.95e-03 -2.08e-01  1.20e-01     4.46e-02     4.08e-02\n8401 -8.45e-03 -3.15e-01  2.04e-01     1.24e-01     1.11e-01\n8402 -4.68e-04 -6.25e-02  3.28e-02     8.46e-03     7.48e-03\n8403 -1.74e-03 -9.84e-02  1.18e-02     6.15e-03     3.68e-03\n8404  4.93e-05 -3.65e-02  2.32e-02     4.19e-03     4.55e-03\n8405  2.03e-02 -7.34e-02  2.07e-01     3.57e-02     6.48e-02\n8406 -2.07e-03 -1.61e-01  7.39e-02     2.68e-02     2.28e-02\n8407 -2.14e-05 -1.23e-02  5.66e-03     8.58e-04     7.59e-04\n8408  1.30e-04 -3.63e-02  2.66e-02     4.70e-03     4.93e-03\n8409  2.52e-06 -1.63e-02  9.91e-03     1.28e-03     1.29e-03\n8410 -2.10e-04 -2.42e-02  6.05e-03     1.63e-03     1.27e-03\n8411 -6.46e-04 -5.05e-02  1.72e-02     5.14e-03     3.96e-03\n8412  3.89e-02  1.02e-03  3.10e-01     1.19e-02     5.36e-02\n8413  6.80e-02  1.80e-03  4.01e-01     2.41e-02     9.81e-02\n8414  1.21e-01 -5.68e-04  4.55e-01     7.64e-02     2.17e-01\n8415  9.51e-03 -3.29e-05  1.45e-01     4.71e-03     1.57e-02\n8416  3.77e-02 -3.46e-02  3.51e-01     3.86e-02     8.33e-02\n8417  7.91e-03  2.18e-04  1.14e-01     1.74e-03     9.96e-03\n8418  2.30e-02  4.86e-04  2.34e-01     7.95e-03     3.31e-02\n8419  4.52e-02  1.00e-03  3.44e-01     1.58e-02     6.47e-02\n8420  1.99e-03  1.97e-05  4.70e-02     4.49e-04     2.55e-03\n8421  7.75e-03  1.91e-04  1.08e-01     1.76e-03     9.99e-03\n8422  1.58e-03  8.96e-06  3.96e-02     5.49e-04     2.28e-03\n8423  4.93e-03  5.86e-05  8.56e-02     1.46e-03     6.81e-03\n8424  1.25e-02  1.86e-04  1.65e-01     4.08e-03     1.76e-02\n8425 -3.45e-03 -1.43e-01  2.12e-01     5.02e-02     3.93e-02\n8426 -4.31e-02 -2.81e-01  1.37e-01     8.78e-02     2.32e-02\n8427 -1.10e-01 -4.70e-01  1.60e-01     2.23e-01     6.34e-02\n8428 -8.07e-03 -9.04e-02  2.89e-02     1.66e-02     4.07e-03\n8429 -4.12e-02 -2.72e-01 -2.02e-03     4.79e-02     2.03e-03\n8430 -2.85e-03 -4.32e-02  3.53e-02     7.66e-03     2.53e-03\n8431  1.96e-03 -8.50e-02  1.86e-01     3.35e-02     3.36e-02\n8432 -3.13e-02 -2.27e-01  8.46e-02     5.85e-02     1.28e-02\n8433 -8.66e-04 -1.97e-02  7.47e-03     1.95e-03     4.17e-04\n8434 -2.62e-03 -4.45e-02  3.70e-02     7.97e-03     2.77e-03\n8435 -7.14e-04 -2.02e-02  9.55e-03     2.14e-03     7.02e-04\n8436 -3.23e-03 -4.38e-02  6.74e-03     5.30e-03     7.08e-04\n8437 -8.51e-03 -8.26e-02  1.86e-02     1.42e-02     2.27e-03\n8438  2.29e-02 -6.77e-05  2.53e-01     1.20e-02     3.81e-02\n8439  2.93e-02 -1.54e-02  3.08e-01     2.26e-02     5.62e-02\n8440  4.11e-02 -5.37e-02  3.52e-01     6.57e-02     1.18e-01\n8441  2.76e-03 -5.01e-03  8.58e-02     3.98e-03     7.67e-03\n8442  8.17e-05 -6.73e-02  1.54e-01     1.99e-02     1.82e-02\n8443  4.95e-03 -2.84e-04  8.41e-02     1.84e-03     7.35e-03\n8444  1.26e-02 -5.61e-04  1.79e-01     7.57e-03     2.25e-02\n8445  1.65e-02 -1.39e-02  2.44e-01     1.49e-02     3.46e-02\n8446  1.03e-03 -3.32e-04  3.08e-02     4.68e-04     1.64e-03\n8447  4.77e-03 -2.74e-04  8.58e-02     1.85e-03     7.04e-03\n8448  5.94e-04 -3.02e-04  2.62e-02     5.01e-04     1.28e-03\n8449  1.47e-03 -2.05e-03  4.86e-02     1.35e-03     3.13e-03\n8450  4.12e-03 -4.78e-03  9.30e-02     3.66e-03     8.42e-03\n8451  1.41e-02 -3.02e-03  1.98e-01     1.08e-02     2.74e-02\n8452  1.75e-02 -1.93e-02  2.48e-01     2.01e-02     4.24e-02\n8453  1.90e-02 -6.44e-02  2.79e-01     5.11e-02     7.94e-02\n8454  1.25e-03 -7.00e-03  4.66e-02     3.25e-03     5.26e-03\n8455 -1.20e-04 -6.47e-02  1.07e-01     1.53e-02     1.36e-02\n8456  4.45e-03 -4.82e-04  9.10e-02     1.84e-03     6.70e-03\n8457  7.01e-03 -2.84e-03  1.29e-01     6.64e-03     1.53e-02\n8458  9.71e-03 -1.73e-02  1.82e-01     1.33e-02     2.58e-02\n8459  8.07e-04 -3.80e-04  2.91e-02     4.55e-04     1.45e-03\n8460  4.01e-03 -5.06e-04  8.17e-02     1.81e-03     6.37e-03\n8461  3.15e-04 -5.97e-04  1.53e-02     4.36e-04     8.86e-04\n8462  9.35e-04 -2.51e-03  3.76e-02     1.25e-03     2.43e-03\n8463  2.35e-03 -5.23e-03  7.17e-02     3.30e-03     6.35e-03\n8464  1.66e-02 -7.01e-03  2.18e-01     1.29e-02     3.24e-02\n8465  2.20e-02 -3.51e-02  2.82e-01     2.53e-02     5.13e-02\n8466  2.73e-02 -1.05e-01  3.27e-01     7.32e-02     1.11e-01\n8467  1.90e-03 -1.09e-02  7.41e-02     4.65e-03     7.33e-03\n8468 -1.47e-03 -1.34e-01  1.88e-01     3.55e-02     2.49e-02\n8469  3.81e-03 -2.13e-03  7.31e-02     2.00e-03     6.18e-03\n8470  9.05e-03 -5.05e-03  1.48e-01     8.33e-03     1.94e-02\n8471  1.28e-02 -3.03e-02  2.22e-01     1.72e-02     3.25e-02\n8472  7.78e-04 -1.01e-03  3.17e-02     5.18e-04     1.44e-03\n8473  3.67e-03 -2.17e-03  7.28e-02     2.06e-03     6.15e-03\n8474  3.93e-04 -1.31e-03  2.06e-02     5.42e-04     1.09e-03\n8475  1.29e-03 -4.65e-03  4.75e-02     1.57e-03     3.12e-03\n8476  3.33e-03 -9.54e-03  9.31e-02     4.22e-03     8.27e-03\n8477  3.55e-02 -1.51e-02  1.98e-01     2.94e-02     7.39e-02\n8478  5.54e-02 -3.56e-02  2.59e-01     5.69e-02     1.28e-01\n8479  5.90e-02 -1.28e-01  3.14e-01     1.49e-01     2.32e-01\n8480  4.67e-03 -2.30e-02  6.03e-02     1.04e-02     1.75e-02\n8481 -3.02e-03 -1.91e-01  1.31e-01     7.50e-02     7.06e-02\n8482  1.24e-02  4.59e-04  9.44e-02     4.97e-03     1.91e-02\n8483  1.79e-02 -1.66e-02  1.28e-01     1.87e-02     4.19e-02\n8484  3.48e-02 -3.30e-02  2.01e-01     3.88e-02     8.47e-02\n8485  2.84e-03  7.04e-06  4.03e-02     1.31e-03     4.70e-03\n8486  1.13e-02  2.87e-04  8.52e-02     4.98e-03     1.75e-02\n8487  1.09e-03 -2.14e-03  2.21e-02     1.33e-03     2.89e-03\n8488  4.29e-03 -3.76e-03  5.15e-02     3.89e-03     9.49e-03\n8489  1.02e-02 -1.01e-02  9.15e-02     9.89e-03     2.35e-02\n8490  9.10e-02 -5.01e-02  3.98e-01     1.09e-01     2.14e-01\n8491  6.96e-02 -1.60e-01  3.93e-01     1.79e-01     2.56e-01\n8492  5.49e-02 -2.27e-01  3.38e-01     3.57e-01     4.18e-01\n8493  6.91e-03 -5.05e-02  1.74e-01     3.19e-02     4.10e-02\n8494 -1.30e-02 -1.89e-01  2.28e-01     8.91e-02     6.34e-02\n8495  2.64e-02 -2.39e-02  2.80e-01     1.98e-02     4.97e-02\n8496  5.40e-02 -3.37e-02  3.49e-01     7.00e-02     1.33e-01\n8497  4.26e-02 -1.36e-01  3.56e-01     1.20e-01     1.67e-01\n8498  3.85e-03 -1.20e-02  1.18e-01     5.10e-03     1.01e-02\n8499  2.42e-02 -2.11e-02  2.62e-01     2.00e-02     4.73e-02\n8500  1.93e-03 -9.48e-03  8.07e-02     4.87e-03     7.72e-03\n8501  3.33e-03 -3.01e-02  1.31e-01     1.22e-02     1.66e-02\n8502  1.02e-02 -5.80e-02  2.26e-01     3.20e-02     4.44e-02\n8503  3.15e-02  8.49e-04  2.75e-01     1.14e-02     4.56e-02\n8504  5.35e-02  9.39e-04  3.65e-01     2.26e-02     8.30e-02\n8505  8.60e-02 -8.63e-03  4.20e-01     6.90e-02     1.71e-01\n8506  6.61e-03 -7.37e-04  1.15e-01     4.43e-03     1.21e-02\n8507  2.51e-02 -3.52e-02  3.14e-01     3.39e-02     6.38e-02\n8508  7.62e-03  2.30e-04  1.05e-01     1.71e-03     9.63e-03\n8509  1.78e-02  2.72e-04  1.96e-01     7.39e-03     2.72e-02\n8510  3.54e-02  3.98e-04  3.07e-01     1.53e-02     5.55e-02\n8511  1.85e-03  1.99e-05  4.20e-02     4.51e-04     2.44e-03\n8512  7.08e-03  1.98e-04  1.01e-01     1.76e-03     9.26e-03\n8513  1.16e-03  2.71e-06  3.31e-02     5.06e-04     1.81e-03\n8514  4.09e-03  3.33e-05  7.40e-02     1.41e-03     5.85e-03\n8515  1.00e-02  1.18e-04  1.46e-01     3.75e-03     1.47e-02\n8516 -2.39e-04 -6.41e-02  1.09e-01     1.35e-02     1.08e-02\n8517 -1.01e-02 -1.48e-01  7.19e-02     2.45e-02     6.28e-03\n8518 -3.36e-02 -3.23e-01  1.13e-01     7.43e-02     1.84e-02\n8519 -2.00e-03 -4.33e-02  1.30e-02     4.61e-03     1.11e-03\n8520 -1.20e-02 -1.37e-01 -2.40e-04     1.40e-02     5.77e-04\n8521 -5.45e-04 -1.62e-02  1.32e-02     1.94e-03     6.71e-04\n8522  9.51e-04 -3.42e-02  8.88e-02     8.83e-03     9.80e-03\n8523 -7.85e-03 -1.14e-01  4.15e-02     1.61e-02     3.46e-03\n8524 -1.65e-04 -7.24e-03  2.89e-03     4.68e-04     1.11e-04\n8525 -4.89e-04 -1.72e-02  1.48e-02     1.92e-03     7.41e-04\n8526 -1.43e-04 -8.19e-03  3.76e-03     5.68e-04     1.88e-04\n8527 -7.45e-04 -1.69e-02  2.68e-03     1.33e-03     1.93e-04\n8528 -2.04e-03 -3.63e-02  7.97e-03     3.69e-03     6.25e-04\n8529  5.29e-02  3.12e-03  2.36e-01     2.22e-02     8.05e-02\n8530  8.43e-02  4.25e-03  3.03e-01     4.34e-02     1.39e-01\n8531  1.10e-01 -3.42e-02  3.56e-01     1.21e-01     2.57e-01\n8532  9.70e-03 -4.22e-03  8.05e-02     7.95e-03     2.00e-02\n8533  2.20e-02 -7.84e-02  1.90e-01     5.25e-02     8.45e-02\n8534  1.49e-02  1.00e-03  1.07e-01     3.59e-03     1.94e-02\n8535  2.84e-02  6.48e-04  1.60e-01     1.46e-02     4.66e-02\n8536  5.56e-02  1.65e-03  2.50e-01     2.94e-02     9.24e-02\n8537  3.67e-03  8.04e-05  4.23e-02     9.32e-04     4.83e-03\n8538  1.38e-02  9.68e-04  1.04e-01     3.62e-03     1.83e-02\n8539  1.89e-03  2.41e-06  2.87e-02     9.99e-04     3.25e-03\n8540  6.77e-03  1.91e-04  6.32e-02     2.84e-03     1.04e-02\n8541  1.68e-02  5.35e-04  1.08e-01     7.40e-03     2.62e-02\n8542  1.31e-02 -2.06e-04  1.17e-01     7.49e-03     2.28e-02\n8543  2.31e-02 -8.05e-04  1.74e-01     1.45e-02     4.20e-02\n8544  2.65e-02 -3.34e-02  2.20e-01     3.97e-02     7.64e-02\n8545  1.71e-03 -3.06e-03  2.79e-02     2.45e-03     4.90e-03\n8546  7.41e-03 -3.01e-02  1.08e-01     1.80e-02     2.91e-02\n8547  5.46e-03  1.78e-04  6.02e-02     1.27e-03     7.09e-03\n8548  6.17e-03 -1.46e-03  6.54e-02     4.63e-03     1.21e-02\n8549  1.41e-02 -1.59e-03  1.27e-01     9.78e-03     2.64e-02\n8550  1.24e-03  1.45e-05  2.41e-02     3.26e-04     1.66e-03\n8551  4.65e-03  1.46e-04  5.31e-02     1.30e-03     6.21e-03\n8552  3.89e-04 -1.04e-04  1.00e-02     3.08e-04     8.09e-04\n8553  1.98e-03  1.01e-05  2.93e-02     9.53e-04     3.18e-03\n8554  4.30e-03 -4.41e-05  5.26e-02     2.50e-03     7.44e-03\n8555 -9.88e-03 -3.05e-01  1.43e-01     8.36e-02     6.75e-02\n8556 -8.01e-02 -4.98e-01  2.58e-02     1.35e-01     3.86e-02\n8557 -1.73e-01 -6.04e-01  4.15e-02     3.14e-01     1.03e-01\n8558 -1.63e-02 -2.39e-01  4.77e-03     2.65e-02     6.88e-03\n8559 -6.38e-02 -5.29e-01 -1.31e-03     6.83e-02     3.29e-03\n8560 -6.49e-03 -1.38e-01  7.51e-03     1.26e-02     4.22e-03\n8561  2.32e-03 -2.15e-01  1.53e-01     5.60e-02     6.30e-02\n8562 -5.86e-02 -4.59e-01  7.80e-03     8.91e-02     2.06e-02\n8563 -1.89e-03 -5.47e-02  5.92e-04     3.08e-03     7.35e-04\n8564 -6.34e-03 -1.35e-01  8.82e-03     1.31e-02     4.53e-03\n8565 -1.72e-03 -6.07e-02  2.29e-03     3.66e-03     1.22e-03\n8566 -6.32e-03 -1.08e-01 -2.54e-05     8.11e-03     1.14e-03\n8567 -1.61e-02 -2.30e-01  1.89e-04     2.18e-02     3.68e-03\n8568  1.85e-02  6.91e-04  1.34e-01     6.77e-03     2.71e-02\n8569  3.49e-02  1.18e-03  2.11e-01     1.34e-02     5.24e-02\n8570  5.39e-02 -4.68e-03  2.87e-01     4.09e-02     1.07e-01\n8571  3.65e-03 -5.05e-04  4.34e-02     2.50e-03     6.83e-03\n8572  1.76e-02 -1.43e-02  1.61e-01     2.04e-02     4.31e-02\n8573  4.83e-03  1.83e-04  5.15e-02     1.05e-03     6.10e-03\n8574  1.02e-02  2.19e-04  8.70e-02     4.39e-03     1.58e-02\n8575  2.18e-02  7.10e-04  1.56e-01     9.05e-03     3.36e-02\n8576  1.16e-03  1.70e-05  2.13e-02     2.72e-04     1.49e-03\n8577  4.57e-03  1.59e-04  4.88e-02     1.05e-03     5.91e-03\n8578  6.51e-04  3.53e-06  1.45e-02     2.99e-04     1.03e-03\n8579  2.59e-03  6.31e-05  3.33e-02     8.22e-04     3.64e-03\n8580  6.24e-03  2.00e-04  5.99e-02     2.23e-03     9.05e-03\n8581  2.16e-02  5.13e-05  2.35e-01     1.10e-02     3.58e-02\n8582  3.64e-02 -9.38e-04  3.09e-01     2.12e-02     6.35e-02\n8583  4.71e-02 -2.67e-02  3.40e-01     5.94e-02     1.19e-01\n8584  3.27e-03 -2.38e-03  7.56e-02     3.68e-03     7.85e-03\n8585  1.11e-02 -3.67e-02  2.21e-01     2.77e-02     4.27e-02\n8586  7.41e-03  1.62e-04  1.04e-01     1.76e-03     9.53e-03\n8587  1.07e-02 -7.01e-04  1.53e-01     6.88e-03     1.94e-02\n8588  2.32e-02 -1.92e-03  2.48e-01     1.44e-02     4.17e-02\n8589  1.74e-03  1.17e-05  4.19e-02     4.66e-04     2.33e-03\n8590  6.53e-03  1.16e-04  1.01e-01     1.84e-03     8.78e-03\n8591  6.77e-04 -7.16e-05  2.37e-02     4.66e-04     1.32e-03\n8592  2.89e-03 -3.01e-05  6.20e-02     1.33e-03     4.60e-03\n8593  6.86e-03 -2.16e-04  1.13e-01     3.62e-03     1.14e-02\n8594 -3.69e-02 -2.93e-01 -1.19e-03     4.23e-02     1.71e-03\n8595 -2.20e-02 -2.09e-01 -9.10e-04     2.43e-02     7.05e-04\n8596 -6.21e-02 -4.12e-01 -2.56e-03     6.92e-02     2.13e-03\n8597 -4.19e-03 -5.83e-02 -1.29e-04     4.59e-03     1.30e-04\n8598 -1.98e-03 -2.76e-02 -7.22e-05     2.13e-03     5.29e-05\n8599 -2.31e-03 -3.42e-02 -6.64e-05     2.49e-03     7.54e-05\n8600 -3.26e-02 -2.62e-01 -7.00e-04     3.94e-02     2.19e-03\n8601 -1.22e-02 -1.39e-01 -4.41e-04     1.32e-02     3.80e-04\n8602 -4.03e-04 -9.89e-03 -3.59e-06     4.41e-04     1.20e-05\n8603 -2.45e-03 -3.86e-02 -7.22e-05     2.72e-03     7.98e-05\n8604 -6.97e-04 -1.66e-02 -6.75e-06     7.67e-04     2.25e-05\n8605 -6.64e-04 -1.37e-02 -1.55e-05     7.24e-04     1.96e-05\n8606 -2.15e-03 -3.21e-02 -5.50e-05     2.35e-03     6.41e-05\n8607  2.14e-02  4.21e-05  2.34e-01     1.10e-02     3.55e-02\n8608  3.74e-02 -7.30e-04  3.17e-01     2.16e-02     6.46e-02\n8609  4.67e-02 -3.01e-02  3.49e-01     6.10e-02     1.19e-01\n8610  3.31e-03 -2.54e-03  7.54e-02     3.71e-03     7.96e-03\n8611  1.15e-02 -3.46e-02  2.26e-01     2.78e-02     4.35e-02\n8612  7.62e-03  1.77e-04  1.13e-01     1.86e-03     9.99e-03\n8613  1.06e-02 -7.68e-04  1.58e-01     6.95e-03     1.93e-02\n8614  2.32e-02 -1.70e-03  2.53e-01     1.47e-02     4.12e-02\n8615  1.77e-03  1.41e-05  4.49e-02     4.79e-04     2.34e-03\n8616  6.75e-03  1.46e-04  9.80e-02     1.86e-03     9.10e-03\n8617  6.95e-04 -8.60e-05  2.51e-02     4.81e-04     1.34e-03\n8618  2.92e-03 -2.22e-05  6.30e-02     1.40e-03     4.69e-03\n8619  6.75e-03 -2.08e-04  1.11e-01     3.63e-03     1.13e-02\n8620  1.93e-02 -5.92e-03  2.26e-01     1.28e-02     3.56e-02\n8621  2.78e-02 -3.65e-02  3.06e-01     2.53e-02     5.69e-02\n8622  4.24e-02 -1.04e-01  3.55e-01     7.86e-02     1.32e-01\n8623  2.85e-03 -1.11e-02  8.74e-02     4.94e-03     8.69e-03\n8624 -4.74e-04 -1.35e-01  2.24e-01     3.87e-02     3.07e-02\n8625  3.85e-03 -2.03e-03  7.40e-02     1.90e-03     6.05e-03\n8626  1.12e-02 -3.45e-03  1.70e-01     8.36e-03     2.14e-02\n8627  1.70e-02 -3.06e-02  2.43e-01     1.76e-02     3.61e-02\n8628  7.86e-04 -9.80e-04  2.80e-02     4.98e-04     1.41e-03\n8629  3.72e-03 -1.98e-03  7.33e-02     1.95e-03     6.10e-03\n8630  5.62e-04 -9.98e-04  2.43e-02     5.67e-04     1.29e-03\n8631  1.49e-03 -4.29e-03  4.90e-02     1.57e-03     3.26e-03\n8632  4.11e-03 -9.67e-03  1.02e-01     4.33e-03     8.91e-03\n8633  3.73e-02  1.27e-03  3.00e-01     1.16e-02     5.15e-02\n8634  6.42e-02  1.80e-03  3.86e-01     2.30e-02     9.29e-02\n8635  1.17e-01 -8.50e-04  4.46e-01     7.48e-02     2.07e-01\n8636  9.20e-03 -5.45e-05  1.32e-01     4.72e-03     1.52e-02\n8637  3.62e-02 -3.16e-02  3.38e-01     3.79e-02     8.12e-02\n8638  7.60e-03  2.25e-04  1.02e-01     1.67e-03     9.62e-03\n8639  2.19e-02  5.76e-04  2.21e-01     7.63e-03     3.14e-02\n8640  4.37e-02  9.32e-04  3.26e-01     1.60e-02     6.29e-02\n8641  1.89e-03  1.77e-05  4.29e-02     4.37e-04     2.40e-03\n8642  7.50e-03  2.07e-04  1.03e-01     1.70e-03     9.60e-03\n8643  1.47e-03  6.96e-06  3.72e-02     5.19e-04     2.17e-03\n8644  4.60e-03  6.80e-05  7.80e-02     1.45e-03     6.44e-03\n8645  1.17e-02  2.11e-04  1.48e-01     3.81e-03     1.66e-02\n8646 -6.45e-03 -2.91e-01 -1.50e-07     8.15e-03     6.78e-04\n8647 -3.65e-03 -3.03e-01 -1.51e-07     4.37e-03     2.73e-04\n8648 -1.03e-02 -4.76e-01 -4.29e-07     1.25e-02     8.35e-04\n8649 -6.23e-04 -7.74e-02 -1.90e-08     7.40e-04     5.08e-05\n8650 -3.15e-04 -6.05e-02 -1.05e-08     3.70e-04     2.11e-05\n8651 -3.78e-04 -5.35e-02 -1.43e-08     4.43e-04     2.82e-05\n8652 -5.65e-03 -2.47e-01  1.07e-06     7.65e-03     8.21e-04\n8653 -1.94e-03 -1.91e-01 -8.65e-08     2.32e-03     1.44e-04\n8654 -5.99e-05 -1.54e-02 -1.59e-09     7.05e-05     4.48e-06\n8655 -4.15e-04 -6.20e-02 -1.24e-08     4.85e-04     3.04e-05\n8656 -1.01e-04 -2.00e-02 -2.57e-09     1.20e-04     8.23e-06\n8657 -1.07e-04 -2.29e-02 -3.57e-09     1.25e-04     7.75e-06\n8658 -3.45e-04 -5.47e-02 -1.17e-08     4.00e-04     2.43e-05\n8659 -6.16e-03 -3.07e-01 -9.73e-08     7.85e-03     6.88e-04\n8660 -3.62e-03 -2.91e-01 -1.86e-07     4.30e-03     2.79e-04\n8661 -9.95e-03 -4.77e-01 -6.20e-07     1.18e-02     8.21e-04\n8662 -6.12e-04 -7.10e-02 -2.33e-08     7.26e-04     5.06e-05\n8663 -2.95e-04 -6.62e-02 -1.43e-08     3.44e-04     2.11e-05\n8664 -4.01e-04 -5.22e-02 -1.81e-08     4.73e-04     2.84e-05\n8665 -5.39e-03 -2.43e-01  2.39e-05     7.38e-03     7.88e-04\n8666 -1.86e-03 -2.01e-01 -9.19e-08     2.23e-03     1.46e-04\n8667 -6.16e-05 -1.26e-02 -2.55e-09     7.22e-05     4.23e-06\n8668 -4.35e-04 -5.91e-02 -1.45e-08     5.14e-04     3.13e-05\n8669 -9.91e-05 -1.83e-02 -1.73e-09     1.17e-04     8.10e-06\n8670 -1.02e-04 -2.31e-02 -4.08e-09     1.21e-04     7.18e-06\n8671 -3.43e-04 -5.22e-02 -1.58e-08     3.94e-04     2.39e-05\n8672  9.76e-04 -3.51e-02  4.36e-02     9.79e-03     1.21e-02\n8673  1.93e-03 -6.00e-02  7.65e-02     1.94e-02     2.42e-02\n8674  6.70e-03 -1.09e-01  1.54e-01     5.17e-02     6.70e-02\n8675  3.91e-04 -1.39e-02  1.84e-02     3.28e-03     4.14e-03\n8676  3.42e-03 -6.92e-02  1.01e-01     2.36e-02     3.08e-02\n8677  1.20e-04 -8.20e-03  9.03e-03     1.62e-03     1.94e-03\n8678  6.25e-04 -2.26e-02  3.05e-02     6.11e-03     7.64e-03\n8679  1.37e-03 -4.23e-02  5.76e-02     1.29e-02     1.60e-02\n8680  2.34e-05 -2.79e-03  3.44e-03     4.25e-04     5.02e-04\n8681  1.25e-04 -7.64e-03  9.07e-03     1.63e-03     1.96e-03\n8682  3.12e-05 -2.93e-03  3.88e-03     4.18e-04     5.34e-04\n8683  9.94e-05 -6.77e-03  8.06e-03     1.24e-03     1.50e-03\n8684  3.25e-04 -1.43e-02  1.79e-02     3.28e-03     4.06e-03\n8685 -1.00e-03 -6.69e-02  7.74e-02     2.74e-02     2.51e-02\n8686 -3.58e-03 -1.15e-01  1.08e-01     5.37e-02     4.46e-02\n8687 -3.84e-03 -1.71e-01  1.74e-01     1.09e-01     9.72e-02\n8688 -2.08e-04 -2.38e-02  3.04e-02     7.05e-03     6.34e-03\n8689 -6.88e-03 -1.44e-01  1.00e-01     4.55e-02     2.86e-02\n8690 -6.26e-04 -2.78e-02  1.69e-02     6.30e-03     4.70e-03\n8691 -2.98e-04 -4.03e-02  5.31e-02     1.59e-02     1.48e-02\n8692 -2.33e-03 -9.10e-02  8.66e-02     3.46e-02     2.82e-02\n8693 -1.32e-04 -1.01e-02  6.44e-03     1.60e-03     1.15e-03\n8694 -5.35e-04 -2.48e-02  1.76e-02     6.07e-03     4.59e-03\n8695 -2.63e-05 -6.38e-03  6.07e-03     1.07e-03     9.07e-04\n8696 -3.26e-04 -1.86e-02  1.26e-02     3.76e-03     2.77e-03\n8697 -7.96e-04 -3.27e-02  3.01e-02     9.28e-03     7.18e-03\n8698 -2.93e-02 -2.25e-01  5.90e-02     7.24e-02     2.90e-02\n8699 -6.71e-02 -3.27e-01  2.98e-02     1.06e-01     1.91e-02\n8700 -9.73e-02 -4.37e-01  7.23e-02     1.85e-01     4.92e-02\n8701 -7.33e-03 -7.18e-02  8.81e-03     1.33e-02     3.10e-03\n8702 -2.05e-02 -1.52e-01 -2.88e-04     2.54e-02     1.80e-03\n8703 -1.36e-02 -1.11e-01  1.66e-03     1.88e-02     2.18e-03\n8704 -9.91e-03 -1.26e-01  6.51e-02     3.99e-02     2.27e-02\n8705 -4.30e-02 -2.45e-01  1.90e-02     6.51e-02     1.06e-02\n8706 -2.76e-03 -4.61e-02  1.36e-04     3.87e-03     3.67e-04\n8707 -1.19e-02 -1.01e-01  2.53e-03     1.72e-02     2.43e-03\n8708 -1.25e-03 -2.70e-02  1.84e-03     2.46e-03     5.51e-04\n8709 -4.56e-03 -5.09e-02  3.64e-04     6.04e-03     6.17e-04\n8710 -1.15e-02 -9.52e-02  2.08e-03     1.62e-02     1.89e-03\n8711  1.31e-03 -1.39e-01  9.10e-02     5.33e-02     5.87e-02\n8712  2.13e-03 -1.77e-01  1.35e-01     9.81e-02     1.05e-01\n8713  6.35e-03 -2.09e-01  1.87e-01     1.54e-01     1.65e-01\n8714  3.74e-04 -4.21e-02  2.89e-02     1.03e-02     1.15e-02\n8715  8.15e-04 -1.60e-01  1.07e-01     6.21e-02     6.50e-02\n8716 -1.15e-03 -9.20e-02  4.30e-02     2.60e-02     2.45e-02\n8717  9.97e-04 -8.73e-02  5.81e-02     2.78e-02     3.00e-02\n8718  1.65e-03 -1.51e-01  1.04e-01     6.24e-02     6.58e-02\n8719 -1.07e-04 -3.67e-02  1.88e-02     5.99e-03     5.56e-03\n8720 -4.38e-04 -7.63e-02  3.95e-02     2.06e-02     1.99e-02\n8721  2.47e-05 -1.20e-02  7.92e-03     1.95e-03     2.16e-03\n8722  4.30e-05 -3.73e-02  2.35e-02     8.62e-03     8.96e-03\n8723  2.55e-04 -6.94e-02  4.33e-02     1.90e-02     1.96e-02\n8724 -8.27e-04 -6.04e-02  7.42e-02     2.60e-02     2.37e-02\n8725 -3.02e-03 -1.14e-01  1.07e-01     5.01e-02     4.09e-02\n8726 -2.45e-03 -1.67e-01  1.70e-01     9.75e-02     8.68e-02\n8727 -1.33e-04 -2.03e-02  2.61e-02     6.31e-03     5.45e-03\n8728 -5.77e-03 -1.30e-01  8.59e-02     3.85e-02     2.46e-02\n8729 -7.00e-04 -2.58e-02  1.71e-02     6.44e-03     4.79e-03\n8730 -2.15e-04 -3.68e-02  5.15e-02     1.47e-02     1.39e-02\n8731 -2.02e-03 -8.40e-02  7.84e-02     3.18e-02     2.56e-02\n8732 -1.49e-04 -1.04e-02  6.44e-03     1.58e-03     1.17e-03\n8733 -6.02e-04 -2.38e-02  1.63e-02     6.17e-03     4.73e-03\n8734 -1.85e-05 -6.24e-03  5.76e-03     9.88e-04     8.69e-04\n8735 -3.25e-04 -1.80e-02  1.18e-02     3.50e-03     2.54e-03\n8736 -6.90e-04 -3.33e-02  2.77e-02     8.83e-03     6.82e-03\n8737 -1.06e-03 -6.83e-02 -6.29e-08     1.26e-03     6.73e-05\n8738 -4.36e-04 -3.45e-02 -3.07e-08     5.47e-04     2.66e-05\n8739 -1.32e-03 -9.44e-02 -7.71e-08     1.61e-03     8.37e-05\n8740 -8.15e-05 -6.89e-03 -4.93e-09     9.95e-05     5.09e-06\n8741 -3.38e-05 -2.86e-03 -2.22e-09     4.03e-05     2.14e-06\n8742 -4.48e-05 -4.11e-03 -2.89e-09     5.51e-05     2.70e-06\n8743 -1.26e-03 -7.06e-02 -6.42e-08     1.55e-03     8.29e-05\n8744 -2.36e-04 -1.94e-02 -1.52e-08     2.78e-04     1.47e-05\n8745 -7.04e-06 -1.04e-03 -3.44e-10     8.59e-06     4.30e-07\n8746 -5.06e-05 -4.96e-03 -3.07e-09     6.17e-05     3.17e-06\n8747 -1.23e-05 -1.92e-03 -4.94e-10     1.53e-05     8.06e-07\n8748 -1.20e-05 -1.33e-03 -7.65e-10     1.47e-05     7.41e-07\n8749 -3.79e-05 -3.94e-03 -1.93e-09     4.59e-05     2.51e-06\n8750 -3.19e-03 -8.95e-02  5.56e-02     2.67e-02     1.92e-02\n8751 -1.42e-02 -1.74e-01  6.00e-02     4.81e-02     2.28e-02\n8752 -2.00e-02 -2.48e-01  1.15e-01     9.45e-02     5.31e-02\n8753 -1.21e-03 -3.40e-02  1.36e-02     6.08e-03     3.43e-03\n8754 -1.58e-02 -1.59e-01  1.56e-02     2.64e-02     4.43e-03\n8755 -2.28e-03 -4.50e-02  8.15e-03     6.59e-03     2.68e-03\n8756 -8.69e-04 -4.69e-02  4.43e-02     1.48e-02     1.24e-02\n8757 -9.58e-03 -1.36e-01  4.12e-02     3.09e-02     1.37e-02\n8758 -6.05e-04 -1.64e-02  1.92e-03     1.55e-03     5.34e-04\n8759 -1.92e-03 -3.96e-02  8.34e-03     6.16e-03     2.62e-03\n8760 -1.73e-04 -9.19e-03  3.02e-03     9.76e-04     5.40e-04\n8761 -1.35e-03 -2.73e-02  3.76e-03     3.24e-03     9.94e-04\n8762 -3.17e-03 -5.31e-02  9.85e-03     8.17e-03     2.98e-03\n8763  4.36e-03 -9.05e-02  9.19e-02     3.56e-02     4.37e-02\n8764  8.58e-03 -1.35e-01  1.43e-01     6.81e-02     8.43e-02\n8765  2.45e-02 -1.78e-01  2.36e-01     1.68e-01     2.09e-01\n8766  1.74e-03 -3.96e-02  4.67e-02     1.17e-02     1.51e-02\n8767  1.36e-02 -1.42e-01  1.78e-01     8.03e-02     1.06e-01\n8768  5.66e-04 -2.43e-02  2.32e-02     6.07e-03     7.29e-03\n8769  2.91e-03 -6.29e-02  6.70e-02     2.23e-02     2.83e-02\n8770  6.20e-03 -1.08e-01  1.16e-01     4.66e-02     5.78e-02\n8771  1.03e-04 -9.04e-03  9.52e-03     1.58e-03     2.00e-03\n8772  5.69e-04 -2.38e-02  2.36e-02     6.18e-03     7.34e-03\n8773  1.40e-04 -8.36e-03  1.02e-02     1.58e-03     2.02e-03\n8774  4.62e-04 -2.10e-02  1.96e-02     4.54e-03     5.81e-03\n8775  1.41e-03 -4.21e-02  4.38e-02     1.23e-02     1.51e-02\n8776 -6.69e-03 -3.02e-01 -1.23e-07     8.16e-03     6.69e-04\n8777 -3.76e-03 -2.98e-01 -1.33e-07     4.39e-03     2.68e-04\n8778 -1.08e-02 -4.77e-01 -2.56e-07     1.28e-02     8.34e-04\n8779 -6.31e-04 -7.11e-02 -1.82e-08     7.38e-04     4.97e-05\n8780 -3.15e-04 -6.38e-02 -1.25e-08     3.61e-04     2.03e-05\n8781 -3.81e-04 -5.56e-02 -1.40e-08     4.40e-04     2.74e-05\n8782 -5.66e-03 -2.43e-01  1.12e-05     7.81e-03     7.86e-04\n8783 -1.97e-03 -1.98e-01 -6.15e-08     2.30e-03     1.39e-04\n8784 -5.74e-05 -1.40e-02 -1.24e-09     6.79e-05     4.43e-06\n8785 -4.30e-04 -5.55e-02 -1.35e-08     5.16e-04     3.15e-05\n8786 -1.07e-04 -1.98e-02 -2.00e-09     1.27e-04     8.68e-06\n8787 -1.05e-04 -2.27e-02 -2.49e-09     1.28e-04     7.37e-06\n8788 -3.36e-04 -5.42e-02 -1.07e-08     3.96e-04     2.33e-05\n8789  3.61e-03 -1.58e-01  1.44e-01     3.28e-02     4.27e-02\n8790  1.13e-03 -1.89e-01  1.04e-01     1.96e-02     2.45e-02\n8791  3.52e-03 -2.92e-01  2.08e-01     5.66e-02     6.91e-02\n8792  2.09e-04 -5.22e-02  2.66e-02     3.65e-03     4.54e-03\n8793  5.67e-05 -4.54e-02  1.28e-02     1.84e-03     2.12e-03\n8794  9.07e-05 -3.10e-02  1.58e-02     2.07e-03     2.53e-03\n8795  4.17e-03 -1.30e-01  1.28e-01     2.90e-02     3.95e-02\n8796  5.40e-04 -1.34e-01  6.29e-02     1.09e-02     1.37e-02\n8797  8.28e-06 -9.49e-03  3.72e-03     3.58e-04     4.34e-04\n8798  1.10e-04 -3.47e-02  1.72e-02     2.18e-03     2.73e-03\n8799  2.29e-05 -1.41e-02  6.40e-03     6.02e-04     7.78e-04\n8800  1.88e-05 -1.50e-02  5.71e-03     6.10e-04     7.33e-04\n8801  7.31e-05 -3.75e-02  1.44e-02     1.96e-03     2.36e-03\n8802 -3.83e-03 -8.90e-02  5.86e-02     2.87e-02     2.03e-02\n8803 -1.55e-02 -1.79e-01  6.51e-02     5.21e-02     2.57e-02\n8804 -2.62e-02 -2.65e-01  1.21e-01     1.12e-01     6.37e-02\n8805 -1.69e-03 -3.96e-02  1.62e-02     7.42e-03     4.07e-03\n8806 -2.00e-02 -1.82e-01  1.68e-02     3.29e-02     5.33e-03\n8807 -1.89e-03 -3.47e-02  9.34e-03     5.77e-03     2.62e-03\n8808 -1.29e-03 -4.97e-02  4.84e-02     1.66e-02     1.35e-02\n8809 -1.08e-02 -1.37e-01  4.08e-02     3.40e-02     1.56e-02\n8810 -5.10e-04 -1.44e-02  2.36e-03     1.45e-03     5.44e-04\n8811 -1.76e-03 -3.54e-02  9.27e-03     5.88e-03     2.73e-03\n8812 -2.06e-04 -9.99e-03  3.51e-03     1.09e-03     6.20e-04\n8813 -1.37e-03 -2.90e-02  4.75e-03     3.43e-03     1.12e-03\n8814 -3.39e-03 -5.21e-02  1.18e-02     8.80e-03     3.32e-03\n8815 -1.35e-01 -5.89e-01  2.08e-03     2.02e-01     4.58e-02\n8816 -1.51e-01 -6.70e-01 -7.78e-04     1.86e-01     2.13e-02\n8817 -2.73e-01 -7.17e-01 -1.77e-03     3.73e-01     6.08e-02\n8818 -2.81e-02 -3.96e-01 -8.90e-05     3.47e-02     3.95e-03\n8819 -2.44e-02 -4.75e-01 -6.90e-05     2.74e-02     1.73e-03\n8820 -2.08e-02 -3.47e-01 -6.49e-05     2.42e-02     2.26e-03\n8821 -8.65e-02 -5.04e-01  2.01e-02     1.53e-01     4.95e-02\n8822 -9.57e-02 -6.30e-01 -4.25e-04     1.16e-01     1.16e-02\n8823 -3.92e-03 -1.53e-01 -4.33e-06     4.57e-03     3.62e-04\n8824 -2.17e-02 -3.51e-01 -6.71e-05     2.57e-02     2.55e-03\n8825 -4.79e-03 -1.54e-01 -2.92e-06     5.85e-03     6.76e-04\n8826 -7.06e-03 -1.93e-01 -1.69e-05     8.02e-03     6.08e-04\n8827 -2.12e-02 -3.93e-01 -6.55e-05     2.44e-02     1.97e-03\n8828 -1.03e-02 -1.52e-01 -2.09e-05     1.34e-02     1.08e-03\n8829 -6.24e-03 -1.09e-01 -5.46e-05     7.60e-03     4.41e-04\n8830 -1.74e-02 -2.33e-01 -1.20e-04     2.15e-02     1.38e-03\n8831 -1.09e-03 -2.35e-02 -6.06e-06     1.32e-03     8.14e-05\n8832 -5.60e-04 -1.20e-02 -4.51e-06     6.75e-04     3.50e-05\n8833 -7.01e-04 -1.65e-02 -4.55e-06     8.37e-04     4.76e-05\n8834 -8.24e-03 -1.19e-01  9.27e-04     1.15e-02     1.29e-03\n8835 -3.43e-03 -6.29e-02 -2.90e-05     4.14e-03     2.37e-04\n8836 -1.19e-04 -4.67e-03 -2.93e-07     1.42e-04     7.57e-06\n8837 -7.85e-04 -1.82e-02 -5.02e-06     9.48e-04     5.43e-05\n8838 -1.87e-04 -6.98e-03 -2.33e-07     2.31e-04     1.43e-05\n8839 -1.87e-04 -5.75e-03 -9.53e-07     2.28e-04     1.26e-05\n8840 -5.89e-04 -1.42e-02 -4.77e-06     7.06e-04     3.97e-05\n8841 -1.33e-03 -1.02e-01  5.37e-02     3.11e-02     2.83e-02\n8842 -2.69e-03 -1.48e-01  8.49e-02     6.04e-02     5.49e-02\n8843 -3.02e-03 -2.05e-01  1.59e-01     1.49e-01     1.43e-01\n8844 -2.07e-04 -4.45e-02  2.47e-02     1.01e-02     9.79e-03\n8845 -4.10e-03 -1.87e-01  1.05e-01     7.28e-02     6.41e-02\n8846 -3.34e-04 -2.87e-02  1.23e-02     5.52e-03     4.75e-03\n8847 -5.91e-04 -7.30e-02  3.81e-02     1.94e-02     1.79e-02\n8848 -1.62e-03 -1.22e-01  6.69e-02     4.14e-02     3.69e-02\n8849 -6.45e-05 -1.19e-02  4.26e-03     1.40e-03     1.23e-03\n8850 -3.49e-04 -2.82e-02  1.25e-02     5.58e-03     4.70e-03\n8851 -2.91e-05 -1.02e-02  5.16e-03     1.35e-03     1.21e-03\n8852 -1.97e-04 -2.29e-02  9.87e-03     4.00e-03     3.64e-03\n8853 -4.86e-04 -5.00e-02  2.19e-02     1.06e-02     9.49e-03\n8854 -8.35e-04 -6.28e-02  6.98e-02     2.65e-02     2.37e-02\n8855 -2.77e-03 -1.11e-01  1.02e-01     5.10e-02     4.15e-02\n8856 -2.28e-03 -1.60e-01  1.67e-01     9.76e-02     8.71e-02\n8857 -1.23e-04 -2.20e-02  2.57e-02     6.33e-03     5.64e-03\n8858 -5.21e-03 -1.27e-01  8.93e-02     3.95e-02     2.51e-02\n8859 -6.62e-04 -2.78e-02  1.71e-02     6.44e-03     4.89e-03\n8860 -1.86e-04 -3.81e-02  5.15e-02     1.46e-02     1.38e-02\n8861 -1.85e-03 -8.59e-02  8.00e-02     3.20e-02     2.61e-02\n8862 -1.33e-04 -1.10e-02  6.41e-03     1.61e-03     1.18e-03\n8863 -5.45e-04 -2.37e-02  1.65e-02     6.05e-03     4.70e-03\n8864 -2.02e-05 -5.69e-03  6.28e-03     9.83e-04     8.62e-04\n8865 -3.15e-04 -1.77e-02  1.24e-02     3.49e-03     2.58e-03\n8866 -6.81e-04 -3.22e-02  2.59e-02     8.60e-03     6.76e-03\n8867  4.91e-03 -6.07e-02  1.44e-01     4.24e-02     4.92e-02\n8868  9.33e-03 -9.87e-02  1.99e-01     8.19e-02     9.42e-02\n8869  2.53e-02 -1.63e-01  2.75e-01     2.09e-01     2.42e-01\n8870  2.08e-03 -2.72e-02  7.77e-02     1.54e-02     1.86e-02\n8871  1.38e-02 -1.22e-01  2.46e-01     1.09e-01     1.26e-01\n8872  6.36e-04 -1.45e-02  3.84e-02     6.71e-03     7.88e-03\n8873  3.34e-03 -4.44e-02  1.06e-01     2.74e-02     3.20e-02\n8874  6.53e-03 -7.94e-02  1.74e-01     5.61e-02     6.44e-02\n8875  1.13e-04 -5.31e-03  1.58e-02     1.79e-03     2.10e-03\n8876  6.52e-04 -1.46e-02  4.02e-02     6.89e-03     7.91e-03\n8877  1.47e-04 -5.95e-03  1.82e-02     1.94e-03     2.28e-03\n8878  4.67e-04 -1.34e-02  3.47e-02     5.47e-03     6.34e-03\n8879  1.59e-03 -2.56e-02  7.12e-02     1.44e-02     1.66e-02\n8880 -3.47e-03 -1.19e-01  1.31e-01     7.73e-02     6.96e-02\n8881 -1.10e-02 -1.89e-01  1.75e-01     1.38e-01     1.17e-01\n8882 -1.02e-02 -2.42e-01  2.24e-01     2.57e-01     2.30e-01\n8883 -7.62e-04 -5.00e-02  5.87e-02     1.96e-02     1.82e-02\n8884 -2.07e-02 -2.38e-01  1.56e-01     1.16e-01     7.81e-02\n8885 -2.23e-03 -5.28e-02  4.35e-02     1.88e-02     1.37e-02\n8886 -1.06e-03 -7.75e-02  1.01e-01     4.43e-02     4.17e-02\n8887 -7.96e-03 -1.55e-01  1.46e-01     9.39e-02     7.75e-02\n8888 -4.78e-04 -2.40e-02  1.55e-02     4.80e-03     3.46e-03\n8889 -1.99e-03 -5.00e-02  4.09e-02     1.78e-02     1.37e-02\n8890 -9.28e-05 -1.45e-02  1.50e-02     3.28e-03     2.81e-03\n8891 -1.20e-03 -3.97e-02  3.01e-02     1.10e-02     8.01e-03\n8892 -2.72e-03 -7.05e-02  5.90e-02     2.67e-02     2.05e-02\n8893  4.29e-03 -8.70e-02  9.37e-02     3.70e-02     4.50e-02\n8894  8.28e-03 -1.25e-01  1.45e-01     7.13e-02     8.57e-02\n8895  2.39e-02 -1.81e-01  2.32e-01     1.84e-01     2.23e-01\n8896  1.80e-03 -4.02e-02  4.90e-02     1.30e-02     1.65e-02\n8897  1.47e-02 -1.46e-01  1.84e-01     9.13e-02     1.15e-01\n8898  5.46e-04 -2.20e-02  2.27e-02     6.03e-03     7.19e-03\n8899  2.92e-03 -6.37e-02  6.97e-02     2.35e-02     2.92e-02\n8900  6.02e-03 -9.85e-02  1.15e-01     4.85e-02     5.86e-02\n8901  1.04e-04 -8.72e-03  9.18e-03     1.55e-03     1.89e-03\n8902  5.34e-04 -2.13e-02  2.32e-02     6.22e-03     7.41e-03\n8903  1.38e-04 -8.68e-03  1.11e-02     1.67e-03     2.13e-03\n8904  4.53e-04 -1.85e-02  2.05e-02     4.78e-03     5.74e-03\n8905  1.44e-03 -3.85e-02  4.21e-02     1.24e-02     1.54e-02\n8906  1.15e-03 -3.48e-02  5.12e-02     9.51e-03     1.17e-02\n8907  2.31e-03 -5.43e-02  8.39e-02     1.62e-02     2.13e-02\n8908  6.67e-03 -9.65e-02  1.60e-01     4.14e-02     5.43e-02\n8909  4.03e-04 -1.18e-02  2.08e-02     2.52e-03     3.40e-03\n8910  9.44e-04 -5.46e-02  6.02e-02     7.95e-03     1.03e-02\n8911  1.49e-04 -8.54e-03  1.12e-02     1.55e-03     1.97e-03\n8912  7.24e-04 -2.38e-02  3.55e-02     5.83e-03     7.49e-03\n8913  1.53e-03 -3.73e-02  6.04e-02     1.06e-02     1.38e-02\n8914  3.01e-05 -2.74e-03  4.24e-03     3.75e-04     4.81e-04\n8915  1.55e-04 -7.85e-03  1.16e-02     1.57e-03     2.05e-03\n8916  3.77e-05 -2.30e-03  4.48e-03     3.57e-04     4.74e-04\n8917  1.04e-04 -5.71e-03  8.04e-03     9.08e-04     1.25e-03\n8918  3.39e-04 -1.15e-02  1.87e-02     2.53e-03     3.30e-03\n8919  9.61e-04 -3.12e-02  4.36e-02     1.04e-02     1.27e-02\n8920  1.98e-03 -5.63e-02  7.40e-02     2.03e-02     2.48e-02\n8921  6.84e-03 -1.13e-01  1.52e-01     5.89e-02     7.24e-02\n8922  4.13e-04 -1.36e-02  1.85e-02     3.59e-03     4.47e-03\n8923  3.51e-03 -6.88e-02  1.01e-01     2.81e-02     3.46e-02\n8924  1.17e-04 -7.18e-03  8.48e-03     1.62e-03     1.92e-03\n8925  6.58e-04 -2.25e-02  2.95e-02     6.55e-03     7.99e-03\n8926  1.32e-03 -4.04e-02  5.54e-02     1.36e-02     1.67e-02\n8927  2.21e-05 -2.60e-03  3.29e-03     4.22e-04     4.97e-04\n8928  1.17e-04 -6.88e-03  9.05e-03     1.69e-03     1.95e-03\n8929  2.92e-05 -2.72e-03  4.25e-03     4.43e-04     5.47e-04\n8930  9.79e-05 -6.14e-03  7.34e-03     1.24e-03     1.58e-03\n8931  3.19e-04 -1.39e-02  1.77e-02     3.42e-03     4.22e-03\n8932 -9.82e-03 -2.35e-01  2.41e-01     3.30e-01     3.10e-01\n8933 -2.77e-02 -3.28e-01  2.31e-01     4.86e-01     4.41e-01\n8934 -1.14e-02 -3.16e-01  2.15e-01     6.38e-01     6.15e-01\n8935 -2.76e-03 -1.38e-01  1.83e-01     9.48e-02     8.86e-02\n8936 -6.15e-02 -4.25e-01  2.25e-01     3.87e-01     3.02e-01\n8937 -1.74e-02 -2.00e-01  1.50e-01     1.30e-01     9.92e-02\n8938 -1.39e-03 -1.80e-01  2.38e-01     2.07e-01     2.01e-01\n8939 -2.60e-02 -3.03e-01  2.39e-01     3.66e-01     3.29e-01\n8940 -4.16e-03 -1.04e-01  7.94e-02     3.57e-02     2.52e-02\n8941 -1.44e-02 -1.75e-01  1.51e-01     1.17e-01     9.34e-02\n8942 -3.85e-04 -5.00e-02  7.02e-02     1.85e-02     1.66e-02\n8943 -7.59e-03 -1.31e-01  1.19e-01     6.42e-02     4.92e-02\n8944 -1.40e-02 -2.00e-01  1.87e-01     1.40e-01     1.16e-01\n8945  1.03e-03 -2.42e-02  6.89e-02     1.04e-02     1.22e-02\n8946  1.98e-03 -4.49e-02  1.06e-01     2.02e-02     2.43e-02\n8947  6.17e-03 -8.30e-02  1.88e-01     4.95e-02     6.08e-02\n8948  3.67e-04 -8.18e-03  2.79e-02     3.03e-03     3.74e-03\n8949  2.60e-03 -4.76e-02  1.28e-01     2.11e-02     2.63e-02\n8950  1.30e-04 -6.17e-03  1.55e-02     1.87e-03     2.21e-03\n8951  6.48e-04 -1.57e-02  4.60e-02     6.19e-03     7.43e-03\n8952  1.35e-03 -3.01e-02  7.94e-02     1.33e-02     1.59e-02\n8953  2.51e-05 -2.02e-03  6.53e-03     4.68e-04     5.48e-04\n8954  1.33e-04 -5.85e-03  1.60e-02     1.83e-03     2.15e-03\n8955  3.33e-05 -2.00e-03  5.97e-03     3.98e-04     5.02e-04\n8956  9.64e-05 -4.87e-03  1.29e-02     1.29e-03     1.55e-03\n8957  3.08e-04 -1.03e-02  2.86e-02     3.37e-03     3.97e-03\n8958  9.63e-04 -2.50e-02  6.57e-02     1.15e-02     1.31e-02\n8959  1.95e-03 -4.42e-02  1.09e-01     2.32e-02     2.59e-02\n8960  6.62e-03 -9.49e-02  2.04e-01     6.62e-02     7.76e-02\n8961  3.89e-04 -1.08e-02  3.10e-02     4.08e-03     4.96e-03\n8962  3.25e-03 -6.13e-02  1.51e-01     3.17e-02     3.71e-02\n8963  1.13e-04 -5.40e-03  1.30e-02     1.79e-03     2.03e-03\n8964  6.44e-04 -1.64e-02  4.70e-02     7.28e-03     8.72e-03\n8965  1.28e-03 -3.20e-02  7.91e-02     1.53e-02     1.76e-02\n8966  2.21e-05 -1.96e-03  4.98e-03     4.72e-04     5.31e-04\n8967  1.32e-04 -5.05e-03  1.32e-02     1.85e-03     2.13e-03\n8968  2.94e-05 -1.89e-03  6.23e-03     5.08e-04     5.97e-04\n8969  8.76e-05 -4.62e-03  1.25e-02     1.42e-03     1.64e-03\n8970  3.11e-04 -9.83e-03  2.65e-02     3.80e-03     4.43e-03\n8971 -4.82e-02 -2.82e-01  2.78e-02     7.93e-02     1.59e-02\n8972 -6.32e-02 -3.31e-01  1.70e-03     8.10e-02     7.98e-03\n8973 -1.19e-01 -4.62e-01  1.68e-02     1.69e-01     2.32e-02\n8974 -8.80e-03 -8.03e-02  1.43e-03     1.20e-02     1.43e-03\n8975 -9.73e-03 -8.40e-02 -2.50e-04     1.14e-02     6.54e-04\n8976 -9.54e-03 -9.23e-02 -1.05e-04     1.18e-02     8.86e-04\n8977 -2.26e-02 -1.86e-01  3.78e-02     4.91e-02     1.54e-02\n8978 -3.76e-02 -2.35e-01  2.60e-04     4.83e-02     4.33e-03\n8979 -1.83e-03 -2.86e-02 -6.49e-06     2.25e-03     1.49e-04\n8980 -9.51e-03 -9.28e-02 -5.89e-05     1.19e-02     9.71e-04\n8981 -1.56e-03 -2.94e-02  2.71e-04     2.18e-03     2.49e-04\n8982 -2.87e-03 -3.74e-02 -2.80e-05     3.51e-03     2.31e-04\n8983 -8.28e-03 -7.90e-02 -5.97e-05     1.01e-02     7.43e-04\n8984 -2.20e-03 -1.09e-01  1.41e-01     7.35e-02     6.80e-02\n8985 -8.50e-03 -1.81e-01  1.76e-01     1.33e-01     1.14e-01\n8986 -5.39e-03 -2.23e-01  2.34e-01     2.26e-01     2.12e-01\n8987 -3.31e-04 -4.02e-02  5.78e-02     1.71e-02     1.56e-02\n8988 -1.44e-02 -2.03e-01  1.56e-01     9.91e-02     6.78e-02\n8989 -2.80e-03 -6.26e-02  4.71e-02     2.21e-02     1.66e-02\n8990 -2.86e-04 -6.74e-02  1.03e-01     4.14e-02     3.88e-02\n8991 -5.52e-03 -1.41e-01  1.47e-01     8.73e-02     7.47e-02\n8992 -5.14e-04 -2.58e-02  1.84e-02     5.51e-03     4.00e-03\n8993 -2.17e-03 -5.30e-02  4.68e-02     2.03e-02     1.59e-02\n8994 -4.80e-05 -1.13e-02  1.55e-02     2.97e-03     2.64e-03\n8995 -9.95e-04 -3.60e-02  2.98e-02     1.10e-02     8.17e-03\n8996 -2.14e-03 -6.52e-02  6.30e-02     2.57e-02     2.06e-02\n8997  1.10e-02 -1.36e-01  1.45e-01     8.21e-02     9.89e-02\n8998  2.03e-02 -1.80e-01  1.96e-01     1.52e-01     1.84e-01\n8999  4.21e-02 -1.99e-01  2.86e-01     3.44e-01     4.01e-01\n9000  4.82e-03 -7.72e-02  8.01e-02     3.02e-02     3.83e-02\n9001  3.07e-02 -1.87e-01  2.39e-01     1.92e-01     2.36e-01\n9002  1.50e-03 -4.53e-02  3.91e-02     1.39e-02     1.70e-02\n9003  7.65e-03 -1.10e-01  1.11e-01     5.44e-02     6.65e-02\n9004  1.45e-02 -1.56e-01  1.75e-01     1.06e-01     1.29e-01\n9005  2.85e-04 -1.74e-02  1.73e-02     3.86e-03     4.69e-03\n9006  1.52e-03 -4.27e-02  4.25e-02     1.45e-02     1.75e-02\n9007  3.54e-04 -1.86e-02  2.07e-02     4.01e-03     5.16e-03\n9008  1.21e-03 -4.00e-02  3.67e-02     1.12e-02     1.40e-02\n9009  3.94e-03 -7.41e-02  7.24e-02     2.86e-02     3.58e-02\n9010 -1.36e-02 -1.70e-01 -1.93e-08     1.75e-02     1.35e-03\n9011 -8.41e-03 -1.20e-01 -7.32e-05     1.02e-02     5.74e-04\n9012 -2.31e-02 -2.61e-01 -1.70e-04     2.81e-02     1.69e-03\n9013 -1.43e-03 -2.85e-02 -8.58e-06     1.74e-03     1.01e-04\n9014 -7.13e-04 -1.32e-02 -5.97e-06     8.62e-04     4.35e-05\n9015 -8.71e-04 -1.85e-02 -6.37e-06     1.05e-03     6.02e-05\n9016 -1.10e-02 -1.43e-01  9.53e-04     1.53e-02     1.63e-03\n9017 -4.52e-03 -6.90e-02 -3.57e-05     5.50e-03     2.94e-04\n9018 -1.45e-04 -4.90e-03 -2.74e-07     1.78e-04     9.24e-06\n9019 -9.60e-04 -1.98e-02 -6.32e-06     1.16e-03     6.42e-05\n9020 -2.35e-04 -8.18e-03 -3.84e-07     2.94e-04     1.75e-05\n9021 -2.46e-04 -6.26e-03 -1.10e-06     3.00e-04     1.57e-05\n9022 -7.83e-04 -1.65e-02 -4.75e-06     9.44e-04     5.08e-05\n9023  7.41e-04 -1.02e-01  2.20e-01     2.53e-02     2.63e-02\n9024  3.64e-04 -6.60e-02  2.03e-01     1.25e-02     1.34e-02\n9025  9.67e-04 -1.45e-01  3.42e-01     3.73e-02     3.87e-02\n9026  6.15e-05 -1.47e-02  5.57e-02     2.33e-03     2.44e-03\n9027  2.62e-05 -7.17e-03  3.45e-02     1.01e-03     1.08e-03\n9028  3.28e-05 -9.02e-03  3.47e-02     1.27e-03     1.36e-03\n9029  7.70e-04 -9.71e-02  1.96e-01     2.66e-02     2.79e-02\n9030  1.68e-04 -3.81e-02  1.46e-01     6.75e-03     6.93e-03\n9031  2.97e-06 -2.21e-03  8.69e-03     2.15e-04     2.34e-04\n9032  3.62e-05 -9.09e-03  3.39e-02     1.40e-03     1.51e-03\n9033  5.86e-06 -4.33e-03  1.29e-02     3.93e-04     4.16e-04\n9034  8.92e-06 -2.81e-03  1.24e-02     3.52e-04     3.81e-04\n9035  3.13e-05 -9.03e-03  3.24e-02     1.17e-03     1.23e-03\n9036 -8.44e-03 -1.15e-01  4.33e-02     3.25e-02     1.77e-02\n9037 -2.71e-02 -2.18e-01  3.21e-02     5.66e-02     1.72e-02\n9038 -6.11e-02 -3.64e-01  6.94e-02     1.43e-01     4.89e-02\n9039 -4.24e-03 -5.84e-02  8.99e-03     9.64e-03     2.97e-03\n9040 -2.16e-02 -1.81e-01  9.34e-05     2.78e-02     2.33e-03\n9041 -2.40e-03 -3.53e-02  3.58e-03     5.23e-03     1.59e-03\n9042 -3.65e-03 -7.03e-02  3.57e-02     2.04e-02     1.33e-02\n9043 -1.90e-02 -1.65e-01  2.01e-02     3.75e-02     9.86e-03\n9044 -6.17e-04 -1.52e-02  7.52e-04     1.24e-03     3.12e-04\n9045 -2.42e-03 -3.57e-02  4.05e-03     5.29e-03     1.73e-03\n9046 -4.87e-04 -1.43e-02  1.83e-03     1.33e-03     4.59e-04\n9047 -1.97e-03 -3.08e-02  1.25e-03     3.30e-03     6.12e-04\n9048 -5.01e-03 -6.02e-02  3.84e-03     8.81e-03     1.93e-03\n9049 -1.56e-01 -5.12e-01  6.39e-02     3.89e-01     2.02e-01\n9050 -2.90e-01 -6.65e-01  6.06e-04     4.57e-01     1.30e-01\n9051 -3.09e-01 -6.50e-01  1.88e-02     6.78e-01     3.05e-01\n9052 -7.80e-02 -4.91e-01  2.86e-03     1.11e-01     2.56e-02\n9053 -1.41e-01 -6.93e-01 -1.02e-03     1.59e-01     1.28e-02\n9054 -6.28e-02 -4.49e-01 -1.32e-04     8.27e-02     1.52e-02\n9055 -8.60e-02 -4.25e-01  9.20e-02     2.86e-01     1.78e-01\n9056 -2.36e-01 -6.58e-01 -1.37e-03     3.34e-01     7.36e-02\n9057 -1.54e-02 -2.49e-01 -1.09e-05     1.97e-02     2.72e-03\n9058 -6.28e-02 -4.45e-01  4.62e-05     8.41e-02     1.65e-02\n9059 -1.37e-02 -2.33e-01  4.23e-04     2.04e-02     4.57e-03\n9060 -3.13e-02 -3.34e-01 -1.45e-04     3.75e-02     4.45e-03\n9061 -8.19e-02 -5.07e-01 -4.62e-04     1.01e-01     1.39e-02\n9062  9.30e-04 -2.55e-02  5.92e-02     1.13e-02     1.33e-02\n9063  1.90e-03 -4.76e-02  9.69e-02     2.31e-02     2.65e-02\n9064  6.41e-03 -1.03e-01  1.86e-01     6.83e-02     8.14e-02\n9065  3.90e-04 -1.18e-02  2.74e-02     4.32e-03     5.20e-03\n9066  3.06e-03 -6.45e-02  1.41e-01     3.41e-02     4.10e-02\n9067  1.12e-04 -4.80e-03  1.15e-02     1.70e-03     1.99e-03\n9068  6.20e-04 -1.71e-02  4.07e-02     7.44e-03     8.86e-03\n9069  1.27e-03 -3.56e-02  7.76e-02     1.54e-02     1.83e-02\n9070  2.14e-05 -1.75e-03  4.87e-03     4.36e-04     5.08e-04\n9071  1.17e-04 -5.40e-03  1.29e-02     1.73e-03     2.04e-03\n9072  2.74e-05 -2.34e-03  5.71e-03     5.06e-04     5.92e-04\n9073  8.57e-05 -5.02e-03  1.23e-02     1.42e-03     1.60e-03\n9074  2.90e-04 -9.70e-03  2.50e-02     3.79e-03     4.40e-03\n9075  1.12e-03 -3.60e-02  4.41e-02     1.01e-02     1.26e-02\n9076  2.43e-03 -6.33e-02  7.80e-02     1.87e-02     2.43e-02\n9077  7.59e-03 -1.12e-01  1.57e-01     5.05e-02     6.58e-02\n9078  4.28e-04 -1.32e-02  2.05e-02     3.05e-03     4.11e-03\n9079  2.21e-03 -6.35e-02  8.32e-02     1.45e-02     1.93e-02\n9080  1.41e-04 -8.84e-03  9.19e-03     1.59e-03     2.02e-03\n9081  7.13e-04 -2.53e-02  3.12e-02     6.25e-03     7.83e-03\n9082  1.65e-03 -4.07e-02  5.54e-02     1.23e-02     1.59e-02\n9083  3.01e-05 -2.92e-03  3.47e-03     4.07e-04     5.22e-04\n9084  1.44e-04 -7.30e-03  9.89e-03     1.66e-03     2.00e-03\n9085  3.65e-05 -2.96e-03  4.15e-03     3.91e-04     5.16e-04\n9086  1.18e-04 -6.61e-03  8.55e-03     1.09e-03     1.41e-03\n9087  3.79e-04 -1.40e-02  1.84e-02     2.99e-03     3.88e-03\n9088  1.27e-03 -1.26e-01  9.97e-02     4.82e-02     5.06e-02\n9089  8.96e-04 -1.73e-01  1.34e-01     8.78e-02     8.95e-02\n9090  3.96e-03 -1.99e-01  1.81e-01     1.31e-01     1.37e-01\n9091  2.42e-04 -3.76e-02  2.63e-02     8.81e-03     9.36e-03\n9092 -5.33e-03 -1.70e-01  7.30e-02     5.00e-02     4.21e-02\n9093 -2.64e-03 -1.13e-01  4.52e-02     2.79e-02     2.36e-02\n9094  8.61e-04 -7.44e-02  6.16e-02     2.40e-02     2.56e-02\n9095  3.95e-04 -1.38e-01  9.95e-02     5.52e-02     5.55e-02\n9096 -3.95e-04 -4.30e-02  1.54e-02     5.98e-03     5.13e-03\n9097 -1.07e-03 -8.15e-02  4.03e-02     2.13e-02     1.93e-02\n9098  1.94e-05 -1.21e-02  8.13e-03     1.72e-03     1.78e-03\n9099 -2.45e-04 -3.86e-02  1.99e-02     7.64e-03     7.04e-03\n9100 -2.66e-04 -7.15e-02  3.90e-02     1.68e-02     1.64e-02\n9101 -5.72e-04 -6.24e-02  7.08e-02     2.45e-02     2.27e-02\n9102 -2.59e-03 -1.07e-01  1.01e-01     4.68e-02     3.93e-02\n9103 -1.67e-03 -1.52e-01  1.66e-01     8.72e-02     8.10e-02\n9104 -8.74e-05 -1.94e-02  2.64e-02     5.46e-03     5.04e-03\n9105 -4.43e-03 -1.17e-01  8.85e-02     3.41e-02     2.31e-02\n9106 -6.79e-04 -2.87e-02  1.90e-02     6.79e-03     5.22e-03\n9107 -9.07e-05 -3.61e-02  4.66e-02     1.36e-02     1.28e-02\n9108 -1.65e-03 -8.40e-02  7.57e-02     2.96e-02     2.54e-02\n9109 -1.50e-04 -1.23e-02  6.36e-03     1.65e-03     1.23e-03\n9110 -5.65e-04 -2.54e-02  1.79e-02     6.33e-03     5.06e-03\n9111 -1.54e-05 -5.32e-03  5.71e-03     9.11e-04     8.23e-04\n9112 -2.86e-04 -1.89e-02  1.26e-02     3.41e-03     2.56e-03\n9113 -6.14e-04 -3.18e-02  2.87e-02     8.37e-03     6.52e-03\n9114 -3.08e-03 -1.67e-01  9.60e-02     8.51e-02     8.08e-02\n9115 -9.65e-03 -2.23e-01  1.29e-01     1.55e-01     1.40e-01\n9116 -5.71e-03 -2.52e-01  2.00e-01     2.94e-01     2.89e-01\n9117 -4.85e-04 -7.94e-02  3.93e-02     2.40e-02     2.32e-02\n9118 -3.37e-02 -3.11e-01  9.08e-02     1.38e-01     9.15e-02\n9119 -2.05e-03 -7.56e-02  2.50e-02     1.89e-02     1.57e-02\n9120 -9.98e-04 -1.24e-01  7.20e-02     5.17e-02     5.04e-02\n9121 -6.67e-03 -1.98e-01  1.05e-01     1.05e-01     9.47e-02\n9122 -4.39e-04 -3.30e-02  9.12e-03     4.91e-03     4.07e-03\n9123 -1.71e-03 -7.11e-02  2.60e-02     1.89e-02     1.61e-02\n9124 -7.26e-05 -2.28e-02  1.02e-02     3.70e-03     3.51e-03\n9125 -1.18e-03 -6.01e-02  1.78e-02     1.22e-02     9.99e-03\n9126 -2.73e-03 -1.06e-01  3.79e-02     2.95e-02     2.57e-02\n9127 -4.47e-04 -8.25e-02  5.16e-02     2.68e-02     2.59e-02\n9128 -8.88e-04 -1.24e-01  8.15e-02     5.05e-02     4.93e-02\n9129  9.12e-04 -1.69e-01  1.44e-01     1.01e-01     1.03e-01\n9130  5.25e-05 -2.65e-02  1.86e-02     6.53e-03     6.63e-03\n9131 -6.56e-04 -1.32e-01  8.23e-02     4.25e-02     4.15e-02\n9132 -3.77e-04 -3.21e-02  1.31e-02     6.55e-03     5.65e-03\n9133 -4.87e-05 -5.09e-02  3.33e-02     1.48e-02     1.48e-02\n9134 -4.13e-04 -1.00e-01  5.94e-02     3.24e-02     3.21e-02\n9135 -6.48e-05 -1.17e-02  5.35e-03     1.60e-03     1.41e-03\n9136 -2.86e-04 -2.83e-02  1.32e-02     6.15e-03     5.49e-03\n9137 -2.87e-06 -6.84e-03  4.37e-03     1.02e-03     1.02e-03\n9138 -8.85e-05 -2.01e-02  1.01e-02     3.60e-03     3.47e-03\n9139 -1.91e-04 -3.73e-02  2.22e-02     8.71e-03     8.57e-03\n9140 -5.79e-02 -3.42e-01 -4.10e-04     7.36e-02     5.85e-03\n9141 -3.41e-02 -2.48e-01 -5.86e-04     4.12e-02     2.38e-03\n9142 -9.03e-02 -4.52e-01 -1.33e-03     1.10e-01     7.30e-03\n9143 -6.04e-03 -7.23e-02 -6.83e-05     7.17e-03     4.47e-04\n9144 -3.06e-03 -3.56e-02 -4.59e-05     3.62e-03     1.81e-04\n9145 -3.79e-03 -4.71e-02 -4.90e-05     4.58e-03     2.52e-04\n9146 -4.84e-02 -3.20e-01  4.02e-03     6.60e-02     6.97e-03\n9147 -1.86e-02 -1.68e-01 -3.10e-04     2.22e-02     1.25e-03\n9148 -6.53e-04 -1.34e-02 -2.18e-06     7.96e-04     4.27e-05\n9149 -4.18e-03 -5.31e-02 -4.91e-05     5.01e-03     2.79e-04\n9150 -1.07e-03 -2.27e-02 -2.62e-06     1.33e-03     8.03e-05\n9151 -1.02e-03 -1.71e-02 -1.00e-05     1.24e-03     6.53e-05\n9152 -3.35e-03 -4.14e-02 -4.31e-05     4.01e-03     2.19e-04\n9153  9.06e-04 -3.37e-02  4.14e-02     1.04e-02     1.28e-02\n9154  1.84e-03 -5.75e-02  7.28e-02     2.05e-02     2.47e-02\n9155  6.55e-03 -1.26e-01  1.60e-01     6.43e-02     7.94e-02\n9156  3.89e-04 -1.46e-02  2.07e-02     4.07e-03     5.06e-03\n9157  3.71e-03 -8.85e-02  1.15e-01     3.29e-02     4.10e-02\n9158  1.04e-04 -6.54e-03  8.09e-03     1.50e-03     1.86e-03\n9159  6.12e-04 -2.40e-02  2.98e-02     6.71e-03     8.21e-03\n9160  1.29e-03 -4.44e-02  5.54e-02     1.39e-02     1.72e-02\n9161  2.13e-05 -2.39e-03  3.20e-03     3.91e-04     4.70e-04\n9162  1.14e-04 -6.54e-03  8.61e-03     1.54e-03     1.85e-03\n9163  2.75e-05 -2.89e-03  4.00e-03     4.59e-04     5.54e-04\n9164  9.31e-05 -6.53e-03  7.16e-03     1.23e-03     1.49e-03\n9165  2.96e-04 -1.23e-02  1.91e-02     3.40e-03     4.13e-03\n9166 -1.81e-04 -8.33e-02  5.13e-02     2.46e-02     2.44e-02\n9167 -3.99e-04 -1.24e-01  8.16e-02     4.63e-02     4.54e-02\n9168  1.11e-03 -1.69e-01  1.41e-01     8.80e-02     9.13e-02\n9169  5.47e-05 -2.53e-02  1.75e-02     5.64e-03     5.87e-03\n9170 -4.15e-04 -1.23e-01  7.73e-02     3.59e-02     3.61e-02\n9171 -3.95e-04 -3.36e-02  1.53e-02     6.55e-03     5.84e-03\n9172  2.31e-05 -5.33e-02  3.19e-02     1.34e-02     1.36e-02\n9173 -1.51e-04 -9.51e-02  6.11e-02     3.00e-02     2.95e-02\n9174 -5.87e-05 -1.24e-02  5.15e-03     1.64e-03     1.43e-03\n9175 -2.60e-04 -3.12e-02  1.46e-02     6.21e-03     5.65e-03\n9176  1.45e-07 -6.85e-03  4.21e-03     9.29e-04     9.36e-04\n9177 -7.01e-05 -1.95e-02  1.02e-02     3.31e-03     3.20e-03\n9178 -1.19e-04 -3.93e-02  2.13e-02     8.08e-03     7.89e-03\n9179  9.76e-04 -3.84e-02  4.19e-02     1.00e-02     1.26e-02\n9180  1.93e-03 -6.17e-02  7.57e-02     2.03e-02     2.46e-02\n9181  6.72e-03 -1.18e-01  1.52e-01     6.21e-02     7.75e-02\n9182  4.03e-04 -1.57e-02  2.07e-02     3.83e-03     4.83e-03\n9183  3.89e-03 -7.77e-02  1.08e-01     2.95e-02     3.84e-02\n9184  1.19e-04 -7.81e-03  8.72e-03     1.54e-03     1.86e-03\n9185  6.00e-04 -2.61e-02  3.09e-02     6.62e-03     8.18e-03\n9186  1.32e-03 -4.71e-02  5.56e-02     1.39e-02     1.69e-02\n9187  2.04e-05 -2.52e-03  3.26e-03     4.12e-04     5.10e-04\n9188  1.18e-04 -7.96e-03  9.05e-03     1.60e-03     1.95e-03\n9189  3.10e-05 -2.95e-03  4.31e-03     4.51e-04     5.47e-04\n9190  9.73e-05 -6.78e-03  7.88e-03     1.27e-03     1.56e-03\n9191  3.17e-04 -1.44e-02  1.78e-02     3.34e-03     4.25e-03\n9192 -1.37e-01 -4.72e-01  3.33e-02     2.04e-01     3.27e-02\n9193 -1.42e-01 -4.63e-01 -4.04e-03     1.81e-01     1.51e-02\n9194 -2.66e-01 -6.28e-01  6.27e-03     3.64e-01     4.38e-02\n9195 -2.67e-02 -1.68e-01  4.92e-04     3.38e-02     2.82e-03\n9196 -1.95e-02 -1.29e-01 -7.64e-04     2.29e-02     1.25e-03\n9197 -1.97e-02 -1.43e-01 -3.68e-04     2.40e-02     1.58e-03\n9198 -8.73e-02 -3.80e-01  5.23e-02     1.50e-01     3.60e-02\n9199 -8.71e-02 -3.57e-01 -2.32e-03     1.08e-01     8.07e-03\n9200 -3.71e-03 -4.99e-02 -1.45e-05     4.56e-03     2.77e-04\n9201 -2.03e-02 -1.46e-01 -4.19e-04     2.49e-02     1.79e-03\n9202 -4.61e-03 -5.91e-02  4.16e-05     6.03e-03     5.13e-04\n9203 -6.13e-03 -6.24e-02 -1.01e-04     7.37e-03     4.53e-04\n9204 -1.85e-02 -1.34e-01 -4.93e-04     2.21e-02     1.40e-03\n9205 -6.55e-02 -3.39e-01  8.00e-03     9.13e-02     1.21e-02\n9206 -5.89e-02 -3.07e-01 -1.25e-03     7.31e-02     5.20e-03\n9207 -1.33e-01 -5.00e-01 -1.92e-03     1.74e-01     1.57e-02\n9208 -9.70e-03 -9.29e-02 -7.00e-05     1.22e-02     9.81e-04\n9209 -6.60e-03 -5.99e-02 -1.39e-04     7.82e-03     4.13e-04\n9210 -7.00e-03 -7.03e-02 -1.13e-04     8.40e-03     5.52e-04\n9211 -4.22e-02 -2.68e-01  2.12e-02     6.68e-02     1.34e-02\n9212 -3.37e-02 -2.20e-01 -7.57e-04     4.15e-02     2.81e-03\n9213 -1.26e-03 -2.16e-02 -4.72e-06     1.53e-03     9.26e-05\n9214 -7.44e-03 -7.41e-02 -1.18e-04     9.19e-03     6.11e-04\n9215 -1.70e-03 -2.94e-02 -1.28e-06     2.19e-03     1.64e-04\n9216 -2.07e-03 -2.93e-02 -2.73e-05     2.52e-03     1.54e-04\n9217 -6.59e-03 -6.34e-02 -1.23e-04     7.90e-03     4.76e-04\n9218 -5.67e-02 -3.94e-01  5.39e-02     1.48e-01     7.65e-02\n9219 -1.29e-01 -5.53e-01  4.23e-03     1.98e-01     5.09e-02\n9220 -1.79e-01 -5.71e-01  3.13e-02     3.44e-01     1.30e-01\n9221 -1.77e-02 -2.34e-01  3.68e-03     2.99e-02     8.98e-03\n9222 -4.87e-02 -4.67e-01 -3.29e-04     5.59e-02     4.81e-03\n9223 -2.43e-02 -2.75e-01  1.67e-06     3.26e-02     5.77e-03\n9224 -2.00e-02 -2.84e-01  6.79e-02     9.11e-02     6.32e-02\n9225 -8.92e-02 -4.97e-01  1.41e-03     1.29e-01     2.83e-02\n9226 -5.12e-03 -1.27e-01 -3.82e-06     6.57e-03     9.62e-04\n9227 -2.25e-02 -2.71e-01  1.60e-04     3.13e-02     6.22e-03\n9228 -2.93e-03 -8.86e-02  7.68e-04     5.28e-03     1.58e-03\n9229 -9.77e-03 -1.65e-01 -2.91e-05     1.22e-02     1.64e-03\n9230 -2.48e-02 -2.86e-01 -3.17e-07     3.18e-02     5.18e-03\n9231  3.56e-02 -2.29e-01  2.85e-01     4.32e-01     4.66e-01\n9232  2.60e-02 -3.16e-01  2.89e-01     5.40e-01     5.63e-01\n9233  2.39e-02 -3.01e-01  2.29e-01     7.41e-01     7.64e-01\n9234  1.58e-02 -1.63e-01  2.79e-01     1.47e-01     1.65e-01\n9235  1.59e-02 -2.93e-01  4.22e-01     2.33e-01     2.54e-01\n9236  5.27e-03 -1.54e-01  2.41e-01     1.11e-01     1.19e-01\n9237  3.78e-02 -1.87e-01  3.02e-01     3.15e-01     3.54e-01\n9238  2.50e-02 -2.96e-01  3.09e-01     4.16e-01     4.32e-01\n9239  7.48e-04 -7.65e-02  1.37e-01     2.85e-02     2.88e-02\n9240  6.42e-03 -1.45e-01  2.36e-01     1.10e-01     1.17e-01\n9241  1.65e-03 -6.08e-02  1.49e-01     2.69e-02     3.02e-02\n9242  3.06e-03 -1.10e-01  2.12e-01     5.67e-02     5.78e-02\n9243  9.86e-03 -1.78e-01  2.86e-01     1.42e-01     1.53e-01\n9244  4.78e-03 -8.72e-02  9.51e-02     3.61e-02     4.43e-02\n9245  9.36e-03 -1.30e-01  1.44e-01     6.98e-02     8.67e-02\n9246  2.46e-02 -1.74e-01  2.33e-01     1.63e-01     2.01e-01\n9247  1.76e-03 -3.49e-02  4.23e-02     1.12e-02     1.45e-02\n9248  1.35e-02 -1.36e-01  1.67e-01     7.54e-02     9.87e-02\n9249  5.92e-04 -2.43e-02  2.50e-02     6.61e-03     7.97e-03\n9250  3.10e-03 -5.97e-02  6.56e-02     2.24e-02     2.81e-02\n9251  6.32e-03 -9.82e-02  1.16e-01     4.57e-02     5.80e-02\n9252  1.16e-04 -8.71e-03  1.03e-02     1.78e-03     2.09e-03\n9253  6.43e-04 -2.37e-02  2.53e-02     6.82e-03     7.81e-03\n9254  1.42e-04 -7.86e-03  1.07e-02     1.57e-03     2.01e-03\n9255  5.16e-04 -1.81e-02  2.14e-02     4.78e-03     5.92e-03\n9256  1.60e-03 -3.81e-02  4.34e-02     1.23e-02     1.52e-02\n9257  1.28e-02 -1.02e-01  2.19e-01     9.96e-02     1.15e-01\n9258  2.11e-02 -1.50e-01  2.59e-01     1.80e-01     2.04e-01\n9259  4.00e-02 -2.02e-01  2.95e-01     3.97e-01     4.41e-01\n9260  5.37e-03 -5.09e-02  1.37e-01     3.70e-02     4.51e-02\n9261  2.86e-02 -1.73e-01  2.88e-01     2.29e-01     2.64e-01\n9262  1.69e-03 -2.87e-02  7.20e-02     1.73e-02     2.01e-02\n9263  8.83e-03 -7.43e-02  1.76e-01     6.47e-02     7.57e-02\n9264  1.57e-02 -1.18e-01  2.39e-01     1.30e-01     1.49e-01\n9265  3.22e-04 -1.14e-02  3.27e-02     4.50e-03     5.22e-03\n9266  1.83e-03 -2.93e-02  7.87e-02     1.71e-02     2.00e-02\n9267  4.28e-04 -1.15e-02  3.71e-02     5.04e-03     5.95e-03\n9268  1.28e-03 -2.53e-02  6.90e-02     1.37e-02     1.59e-02\n9269  4.31e-03 -4.98e-02  1.34e-01     3.53e-02     4.08e-02\n9270 -7.03e-04 -2.06e-01  1.50e-01     1.47e-01     1.49e-01\n9271 -8.50e-03 -2.53e-01  1.85e-01     2.50e-01     2.41e-01\n9272  2.49e-03 -2.56e-01  2.42e-01     3.84e-01     3.90e-01\n9273  3.08e-04 -1.07e-01  6.29e-02     3.54e-02     3.63e-02\n9274 -3.53e-02 -3.24e-01  1.32e-01     1.88e-01     1.40e-01\n9275 -5.50e-03 -1.50e-01  5.77e-02     5.15e-02     4.24e-02\n9276  9.12e-04 -1.62e-01  1.13e-01     8.49e-02     8.78e-02\n9277 -5.85e-03 -2.32e-01  1.57e-01     1.74e-01     1.67e-01\n9278 -1.05e-03 -6.89e-02  2.16e-02     1.31e-02     1.09e-02\n9279 -4.10e-03 -1.30e-01  5.59e-02     4.58e-02     3.97e-02\n9280 -1.35e-05 -3.79e-02  1.97e-02     6.50e-03     6.54e-03\n9281 -1.90e-03 -8.85e-02  3.72e-02     2.43e-02     2.06e-02\n9282 -3.34e-03 -1.49e-01  7.24e-02     5.59e-02     4.96e-02\n9283  4.84e-03 -5.80e-02  1.54e-01     4.13e-02     4.94e-02\n9284  9.10e-03 -9.22e-02  2.12e-01     7.95e-02     9.45e-02\n9285  2.50e-02 -1.48e-01  2.78e-01     1.88e-01     2.22e-01\n9286  1.89e-03 -2.49e-02  7.74e-02     1.30e-02     1.66e-02\n9287  1.22e-02 -1.04e-01  2.40e-01     9.00e-02     1.10e-01\n9288  6.25e-04 -1.70e-02  4.47e-02     7.49e-03     8.68e-03\n9289  3.24e-03 -3.94e-02  1.11e-01     2.61e-02     3.18e-02\n9290  6.33e-03 -7.30e-02  1.84e-01     5.39e-02     6.42e-02\n9291  1.31e-04 -6.60e-03  1.73e-02     1.96e-03     2.32e-03\n9292  6.65e-04 -1.50e-02  4.36e-02     7.60e-03     8.76e-03\n9293  1.63e-04 -5.62e-03  1.74e-02     1.85e-03     2.30e-03\n9294  4.96e-04 -1.28e-02  3.75e-02     5.56e-03     6.49e-03\n9295  1.54e-03 -2.65e-02  7.55e-02     1.40e-02     1.74e-02\n9296 -5.10e-02 -3.19e-01  1.73e-01     3.80e-01     3.20e-01\n9297 -1.54e-01 -4.56e-01  1.15e-01     5.20e-01     3.39e-01\n9298 -1.08e-01 -3.90e-01  1.55e-01     6.94e-01     5.65e-01\n9299 -3.85e-02 -3.13e-01  5.81e-02     1.21e-01     7.27e-02\n9300 -2.50e-01 -6.59e-01 -2.74e-03     3.33e-01     6.48e-02\n9301 -5.64e-02 -3.64e-01  2.50e-02     1.19e-01     5.32e-02\n9302 -1.90e-02 -2.74e-01  1.66e-01     2.57e-01     2.35e-01\n9303 -1.51e-01 -4.75e-01  8.07e-02     3.99e-01     2.26e-01\n9304 -1.70e-02 -2.16e-01  4.12e-03     3.18e-02     1.16e-02\n9305 -4.93e-02 -3.38e-01  2.79e-02     1.15e-01     5.57e-02\n9306 -6.19e-03 -1.49e-01  1.65e-02     2.25e-02     1.34e-02\n9307 -3.64e-02 -3.08e-01  5.56e-03     6.16e-02     1.96e-02\n9308 -7.64e-02 -4.08e-01  2.01e-02     1.43e-01     5.55e-02\n9309  3.38e-03 -9.28e-02  1.79e-01     5.26e-02     5.72e-02\n9310  3.01e-03 -1.26e-01  2.27e-01     6.38e-02     6.63e-02\n9311  9.15e-03 -2.20e-01  2.95e-01     1.64e-01     1.70e-01\n9312  6.22e-04 -3.31e-02  8.00e-02     1.15e-02     1.21e-02\n9313  5.36e-04 -3.89e-02  1.61e-01     1.06e-02     1.13e-02\n9314  2.12e-04 -2.09e-02  4.60e-02     6.25e-03     6.18e-03\n9315  2.93e-03 -6.77e-02  1.41e-01     3.62e-02     4.06e-02\n9316  1.72e-03 -9.03e-02  1.85e-01     3.87e-02     4.00e-02\n9317  2.47e-05 -7.10e-03  1.52e-02     1.37e-03     1.37e-03\n9318  2.29e-04 -2.19e-02  4.72e-02     6.66e-03     6.91e-03\n9319  4.27e-05 -8.91e-03  1.91e-02     1.75e-03     1.81e-03\n9320  9.01e-05 -1.11e-02  3.20e-02     2.73e-03     2.76e-03\n9321  3.18e-04 -2.74e-02  7.00e-02     8.03e-03     8.34e-03\n9322  9.96e-04 -2.50e-02  6.26e-02     1.16e-02     1.35e-02\n9323  2.00e-03 -4.43e-02  1.11e-01     2.30e-02     2.68e-02\n9324  7.11e-03 -1.04e-01  1.99e-01     6.95e-02     8.19e-02\n9325  4.15e-04 -1.09e-02  3.20e-02     4.44e-03     5.31e-03\n9326  3.36e-03 -6.64e-02  1.47e-01     3.40e-02     4.05e-02\n9327  1.18e-04 -5.28e-03  1.24e-02     1.72e-03     1.98e-03\n9328  6.64e-04 -1.69e-02  4.59e-02     7.49e-03     8.77e-03\n9329  1.35e-03 -3.25e-02  8.15e-02     1.56e-02     1.83e-02\n9330  2.30e-05 -1.95e-03  4.81e-03     4.49e-04     5.23e-04\n9331  1.26e-04 -5.17e-03  1.30e-02     1.76e-03     2.05e-03\n9332  3.02e-05 -2.30e-03  6.28e-03     5.24e-04     6.19e-04\n9333  9.34e-05 -4.76e-03  1.22e-02     1.41e-03     1.62e-03\n9334  3.05e-04 -9.68e-03  2.52e-02     3.81e-03     4.48e-03\n9335  4.89e-03 -8.26e-02  1.01e-01     3.48e-02     4.41e-02\n9336  9.73e-03 -1.25e-01  1.46e-01     6.65e-02     8.34e-02\n9337  2.43e-02 -1.69e-01  2.31e-01     1.49e-01     1.90e-01\n9338  1.71e-03 -3.41e-02  4.33e-02     1.02e-02     1.35e-02\n9339  1.32e-02 -1.25e-01  1.73e-01     6.58e-02     8.92e-02\n9340  6.56e-04 -2.66e-02  2.52e-02     6.87e-03     8.31e-03\n9341  3.12e-03 -5.78e-02  6.61e-02     2.09e-02     2.72e-02\n9342  6.39e-03 -9.52e-02  1.14e-01     4.45e-02     5.70e-02\n9343  1.24e-04 -9.30e-03  1.12e-02     1.78e-03     2.26e-03\n9344  6.69e-04 -2.47e-02  2.82e-02     6.86e-03     8.36e-03\n9345  1.52e-04 -8.00e-03  1.07e-02     1.49e-03     1.92e-03\n9346  5.30e-04 -2.02e-02  2.27e-02     4.75e-03     5.82e-03\n9347  1.70e-03 -3.73e-02  4.45e-02     1.21e-02     1.53e-02\n9348  8.66e-04 -3.41e-02  4.20e-02     1.03e-02     1.27e-02\n9349  1.85e-03 -6.10e-02  7.18e-02     2.08e-02     2.52e-02\n9350  6.65e-03 -1.25e-01  1.57e-01     6.43e-02     8.04e-02\n9351  3.95e-04 -1.60e-02  2.08e-02     4.07e-03     5.14e-03\n9352  3.75e-03 -8.62e-02  1.09e-01     3.23e-02     4.16e-02\n9353  1.03e-04 -7.20e-03  7.68e-03     1.49e-03     1.85e-03\n9354  6.01e-04 -2.47e-02  3.03e-02     6.91e-03     8.41e-03\n9355  1.24e-03 -4.66e-02  5.58e-02     1.40e-02     1.71e-02\n9356  2.01e-05 -2.51e-03  3.34e-03     3.91e-04     4.81e-04\n9357  1.04e-04 -7.02e-03  8.91e-03     1.54e-03     1.88e-03\n9358  2.84e-05 -3.21e-03  4.19e-03     4.64e-04     5.60e-04\n9359  8.91e-05 -6.73e-03  7.78e-03     1.24e-03     1.55e-03\n9360  2.72e-04 -1.36e-02  1.71e-02     3.40e-03     4.15e-03\n9361  6.88e-03 -9.62e-02  1.22e-01     4.11e-02     5.35e-02\n9362  9.18e-03 -1.39e-01  1.71e-01     5.43e-02     7.22e-02\n9363  2.51e-02 -1.91e-01  2.64e-01     1.35e-01     1.76e-01\n9364  1.77e-03 -3.84e-02  4.69e-02     8.81e-03     1.24e-02\n9365  8.25e-04 -1.13e-01  5.75e-02     1.23e-02     1.49e-02\n9366  7.17e-04 -2.66e-02  2.76e-02     5.45e-03     7.15e-03\n9367  4.45e-03 -6.87e-02  9.47e-02     2.72e-02     3.54e-02\n9368  5.56e-03 -1.10e-01  1.23e-01     3.32e-02     4.45e-02\n9369  1.09e-04 -9.90e-03  1.01e-02     1.23e-03     1.60e-03\n9370  7.89e-04 -2.69e-02  2.69e-02     5.74e-03     7.56e-03\n9371  1.78e-04 -9.25e-03  1.20e-02     1.39e-03     1.95e-03\n9372  2.76e-04 -1.96e-02  1.71e-02     2.56e-03     3.33e-03\n9373  1.02e-03 -3.96e-02  3.58e-02     7.21e-03     9.78e-03\n9374  4.15e-03 -9.15e-02  9.09e-02     3.62e-02     4.44e-02\n9375  8.00e-03 -1.39e-01  1.37e-01     7.07e-02     8.62e-02\n9376  2.36e-02 -1.89e-01  2.28e-01     1.95e-01     2.33e-01\n9377  1.78e-03 -4.54e-02  4.75e-02     1.40e-02     1.76e-02\n9378  1.52e-02 -1.59e-01  1.85e-01     1.02e-01     1.26e-01\n9379  5.04e-04 -2.15e-02  2.06e-02     5.90e-03     6.91e-03\n9380  2.75e-03 -6.88e-02  6.86e-02     2.40e-02     2.93e-02\n9381  5.72e-03 -1.13e-01  1.11e-01     4.87e-02     6.07e-02\n9382  9.69e-05 -8.50e-03  8.40e-03     1.55e-03     1.86e-03\n9383  5.19e-04 -2.16e-02  2.14e-02     5.95e-03     7.11e-03\n9384  1.26e-04 -9.49e-03  1.03e-02     1.69e-03     2.10e-03\n9385  4.15e-04 -1.99e-02  1.94e-02     4.74e-03     5.74e-03\n9386  1.34e-03 -4.17e-02  4.02e-02     1.23e-02     1.51e-02\n9387 -4.94e-04 -2.06e-01  1.46e-01     1.42e-01     1.42e-01\n9388 -1.25e-03 -2.43e-01  1.93e-01     2.43e-01     2.42e-01\n9389  7.56e-03 -2.44e-01  2.51e-01     3.83e-01     3.89e-01\n9390  8.09e-04 -9.70e-02  6.27e-02     3.46e-02     3.66e-02\n9391 -1.89e-03 -2.49e-01  1.83e-01     1.93e-01     1.91e-01\n9392 -3.45e-03 -1.41e-01  5.62e-02     4.52e-02     4.12e-02\n9393  1.03e-03 -1.61e-01  1.05e-01     8.25e-02     8.46e-02\n9394 -4.98e-04 -2.21e-01  1.63e-01     1.65e-01     1.68e-01\n9395 -5.32e-04 -5.75e-02  2.34e-02     1.19e-02     1.06e-02\n9396 -2.53e-03 -1.23e-01  5.27e-02     4.15e-02     3.86e-02\n9397  1.31e-05 -3.19e-02  1.98e-02     6.32e-03     6.39e-03\n9398 -5.34e-04 -7.86e-02  4.16e-02     2.26e-02     2.16e-02\n9399 -8.21e-04 -1.34e-01  7.88e-02     5.33e-02     5.21e-02\n9400 -3.84e-04 -8.74e-02  5.29e-02     2.74e-02     2.68e-02\n9401 -7.62e-04 -1.27e-01  8.51e-02     5.10e-02     5.07e-02\n9402  1.08e-03 -1.72e-01  1.48e-01     1.02e-01     1.06e-01\n9403  6.02e-05 -2.86e-02  1.95e-02     6.49e-03     6.95e-03\n9404 -7.87e-04 -1.28e-01  8.49e-02     4.39e-02     4.26e-02\n9405 -3.82e-04 -3.35e-02  1.33e-02     6.40e-03     5.68e-03\n9406 -6.16e-05 -5.33e-02  3.56e-02     1.53e-02     1.52e-02\n9407 -3.60e-04 -1.02e-01  6.51e-02     3.33e-02     3.27e-02\n9408 -6.10e-05 -1.32e-02  5.04e-03     1.64e-03     1.43e-03\n9409 -3.08e-04 -3.04e-02  1.33e-02     6.30e-03     5.67e-03\n9410 -2.39e-06 -7.99e-03  4.61e-03     1.03e-03     1.01e-03\n9411 -8.47e-05 -2.08e-02  1.06e-02     3.75e-03     3.58e-03\n9412 -1.70e-04 -3.99e-02  2.15e-02     9.28e-03     8.89e-03\n9413 -1.03e-03 -6.62e-02  7.19e-02     2.73e-02     2.41e-02\n9414 -3.38e-03 -1.19e-01  9.82e-02     5.12e-02     4.30e-02\n9415 -3.49e-03 -1.71e-01  1.72e-01     1.07e-01     9.31e-02\n9416 -1.98e-04 -2.33e-02  2.61e-02     6.99e-03     6.01e-03\n9417 -6.82e-03 -1.38e-01  9.65e-02     4.39e-02     2.80e-02\n9418 -6.06e-04 -2.55e-02  1.67e-02     6.19e-03     4.60e-03\n9419 -3.08e-04 -3.94e-02  4.99e-02     1.57e-02     1.46e-02\n9420 -2.25e-03 -8.64e-02  7.58e-02     3.35e-02     2.74e-02\n9421 -1.33e-04 -1.05e-02  6.02e-03     1.53e-03     1.12e-03\n9422 -5.43e-04 -2.42e-02  1.53e-02     5.79e-03     4.49e-03\n9423 -2.57e-05 -5.99e-03  6.28e-03     1.09e-03     9.25e-04\n9424 -3.45e-04 -1.73e-02  1.27e-02     3.67e-03     2.57e-03\n9425 -7.55e-04 -3.32e-02  2.67e-02     9.02e-03     6.84e-03\n9426  2.79e-06 -1.15e-02  2.88e-02     5.06e-04     5.05e-04\n9427  1.04e-06 -5.86e-03  1.66e-02     2.15e-04     2.18e-04\n9428  2.55e-06 -1.48e-02  5.10e-02     6.51e-04     6.53e-04\n9429  1.75e-07 -1.02e-03  3.46e-03     4.00e-05     4.11e-05\n9430  6.84e-08 -4.46e-04  1.54e-03     1.64e-05     1.66e-05\n9431  9.04e-08 -6.76e-04  2.17e-03     2.18e-05     2.24e-05\n9432  4.19e-06 -1.21e-02  2.78e-02     6.03e-04     6.24e-04\n9433  4.79e-07 -2.90e-03  1.01e-02     1.13e-04     1.16e-04\n9434  9.92e-09 -1.36e-04  5.03e-04     3.47e-06     3.70e-06\n9435  9.18e-08 -7.19e-04  2.17e-03     2.40e-05     2.52e-05\n9436  2.19e-08 -2.87e-04  9.35e-04     6.51e-06     6.99e-06\n9437  2.55e-08 -2.26e-04  7.04e-04     5.77e-06     5.75e-06\n9438  7.38e-08 -5.48e-04  2.04e-03     1.92e-05     1.98e-05\n9439  2.42e-06 -9.67e-03  3.07e-02     5.41e-04     5.75e-04\n9440  9.08e-07 -5.52e-03  1.88e-02     2.32e-04     2.42e-04\n9441  2.73e-06 -1.51e-02  5.40e-02     6.84e-04     6.97e-04\n9442  1.55e-07 -1.04e-03  3.91e-03     4.15e-05     4.44e-05\n9443  6.50e-08 -4.39e-04  1.92e-03     1.72e-05     1.85e-05\n9444  8.22e-08 -5.78e-04  2.63e-03     2.34e-05     2.53e-05\n9445  3.17e-06 -1.15e-02  2.86e-02     6.54e-04     6.82e-04\n9446  4.08e-07 -2.86e-03  1.09e-02     1.17e-04     1.23e-04\n9447  9.08e-09 -1.44e-04  4.97e-04     3.52e-06     3.82e-06\n9448  8.01e-08 -6.91e-04  2.50e-03     2.46e-05     2.74e-05\n9449  1.92e-08 -2.70e-04  9.00e-04     7.13e-06     7.46e-06\n9450  2.12e-08 -2.09e-04  7.37e-04     5.95e-06     6.51e-06\n9451  7.20e-08 -5.48e-04  2.12e-03     1.96e-05     2.15e-05\n9452 -2.03e-02 -2.11e-01  1.66e-01     1.48e-01     1.13e-01\n9453 -7.09e-02 -3.72e-01  1.59e-01     2.40e-01     1.34e-01\n9454 -7.45e-02 -4.30e-01  1.91e-01     3.73e-01     2.58e-01\n9455 -6.98e-03 -9.39e-02  6.29e-02     3.41e-02     2.05e-02\n9456 -8.21e-02 -3.43e-01  6.56e-02     1.38e-01     2.84e-02\n9457 -1.96e-02 -1.61e-01  4.50e-02     4.91e-02     1.95e-02\n9458 -5.97e-03 -1.24e-01  1.50e-01     8.47e-02     7.18e-02\n9459 -5.26e-02 -3.06e-01  1.28e-01     1.63e-01     8.32e-02\n9460 -4.90e-03 -7.59e-02  1.33e-02     1.19e-02     4.01e-03\n9461 -1.65e-02 -1.41e-01  4.56e-02     4.39e-02     1.92e-02\n9462 -1.08e-03 -3.30e-02  1.78e-02     6.10e-03     3.57e-03\n9463 -9.15e-03 -9.63e-02  2.12e-02     2.12e-02     6.96e-03\n9464 -1.96e-02 -1.53e-01  5.32e-02     4.97e-02     1.97e-02\n9465 -3.33e-04 -8.56e-02  5.24e-02     2.70e-02     2.62e-02\n9466 -6.64e-04 -1.32e-01  8.75e-02     5.07e-02     5.00e-02\n9467  8.90e-04 -1.78e-01  1.46e-01     1.02e-01     1.04e-01\n9468  5.84e-05 -2.92e-02  1.95e-02     6.53e-03     6.61e-03\n9469 -5.18e-04 -1.34e-01  8.30e-02     4.30e-02     4.14e-02\n9470 -3.84e-04 -3.14e-02  1.33e-02     6.37e-03     5.62e-03\n9471 -2.22e-05 -5.52e-02  3.32e-02     1.53e-02     1.53e-02\n9472 -3.32e-04 -1.00e-01  6.51e-02     3.30e-02     3.24e-02\n9473 -6.29e-05 -1.10e-02  4.98e-03     1.62e-03     1.40e-03\n9474 -3.04e-04 -3.01e-02  1.44e-02     6.09e-03     5.45e-03\n9475 -1.57e-06 -7.82e-03  4.53e-03     1.01e-03     1.01e-03\n9476 -8.79e-05 -2.03e-02  1.09e-02     3.57e-03     3.37e-03\n9477 -1.44e-04 -3.92e-02  2.29e-02     8.98e-03     8.59e-03\n9478  1.01e-03 -2.85e-02  6.54e-02     1.13e-02     1.32e-02\n9479  1.68e-03 -5.16e-02  1.02e-01     2.12e-02     2.43e-02\n9480  5.59e-03 -1.03e-01  1.80e-01     5.84e-02     7.01e-02\n9481  3.18e-04 -1.08e-02  2.60e-02     3.58e-03     4.26e-03\n9482  9.21e-04 -5.66e-02  9.98e-02     1.76e-02     1.92e-02\n9483  1.02e-04 -6.71e-03  1.27e-02     1.84e-03     2.04e-03\n9484  6.94e-04 -1.94e-02  4.25e-02     7.01e-03     8.43e-03\n9485  1.05e-03 -3.79e-02  7.15e-02     1.41e-02     1.63e-02\n9486  1.73e-05 -2.43e-03  4.44e-03     4.66e-04     5.34e-04\n9487  1.04e-04 -6.58e-03  1.32e-02     1.84e-03     2.11e-03\n9488  2.71e-05 -2.57e-03  5.82e-03     4.56e-04     5.47e-04\n9489  6.22e-05 -5.71e-03  1.12e-02     1.31e-03     1.46e-03\n9490  2.23e-04 -1.26e-02  2.31e-02     3.47e-03     3.94e-03\n9491  9.13e-04 -3.60e-02  4.13e-02     1.03e-02     1.26e-02\n9492  1.85e-03 -6.13e-02  7.24e-02     2.04e-02     2.48e-02\n9493  6.54e-03 -1.28e-01  1.53e-01     6.40e-02     7.87e-02\n9494  3.79e-04 -1.54e-02  2.10e-02     3.98e-03     5.01e-03\n9495  3.77e-03 -8.87e-02  1.09e-01     3.24e-02     4.10e-02\n9496  1.07e-04 -6.73e-03  7.62e-03     1.50e-03     1.83e-03\n9497  5.97e-04 -2.52e-02  2.93e-02     6.73e-03     8.22e-03\n9498  1.26e-03 -4.77e-02  5.16e-02     1.40e-02     1.71e-02\n9499  2.11e-05 -2.49e-03  3.09e-03     3.93e-04     4.76e-04\n9500  1.12e-04 -6.85e-03  7.74e-03     1.52e-03     1.88e-03\n9501  2.78e-05 -3.08e-03  3.63e-03     4.44e-04     5.38e-04\n9502  8.77e-05 -6.77e-03  7.28e-03     1.25e-03     1.53e-03\n9503  2.79e-04 -1.36e-02  1.70e-02     3.37e-03     4.10e-03\n9504 -4.20e-02 -2.78e-01  1.36e-01     1.65e-01     9.79e-02\n9505 -1.18e-01 -4.40e-01  1.09e-01     2.50e-01     9.18e-02\n9506 -1.48e-01 -5.30e-01  1.46e-01     4.13e-01     2.05e-01\n9507 -1.67e-02 -1.45e-01  4.19e-02     4.02e-02     1.54e-02\n9508 -8.19e-02 -3.54e-01  8.26e-03     1.12e-01     1.18e-02\n9509 -2.38e-02 -1.70e-01  2.16e-02     4.28e-02     1.07e-02\n9510 -1.53e-02 -1.79e-01  1.32e-01     9.71e-02     7.07e-02\n9511 -8.66e-02 -3.75e-01  8.17e-02     1.70e-01     5.29e-02\n9512 -5.97e-03 -7.52e-02  4.47e-03     1.01e-02     2.01e-03\n9513 -2.11e-02 -1.60e-01  2.33e-02     4.02e-02     1.14e-02\n9514 -2.46e-03 -5.23e-02  1.00e-02     6.90e-03     2.57e-03\n9515 -1.23e-02 -1.09e-01  7.44e-03     2.02e-02     3.64e-03\n9516 -2.88e-02 -1.86e-01  2.24e-02     4.87e-02     1.08e-02\n9517 -4.65e-02 -2.99e-01  1.86e-01     2.55e-01     1.88e-01\n9518 -1.27e-01 -4.72e-01  1.52e-01     3.89e-01     2.20e-01\n9519 -1.35e-01 -5.49e-01  1.49e-01     6.11e-01     4.37e-01\n9520 -2.73e-02 -2.05e-01  9.71e-02     8.75e-02     4.48e-02\n9521 -1.84e-01 -5.09e-01  6.46e-02     2.82e-01     5.06e-02\n9522 -2.21e-02 -1.66e-01  5.46e-02     5.91e-02     2.63e-02\n9523 -2.13e-02 -2.07e-01  1.73e-01     1.70e-01     1.37e-01\n9524 -1.08e-01 -4.21e-01  1.40e-01     2.89e-01     1.44e-01\n9525 -6.29e-03 -8.42e-02  1.81e-02     1.62e-02     5.64e-03\n9526 -2.10e-02 -1.59e-01  6.00e-02     6.02e-02     2.79e-02\n9527 -3.55e-03 -6.46e-02  2.52e-02     1.42e-02     7.20e-03\n9528 -1.85e-02 -1.47e-01  2.96e-02     3.84e-02     1.20e-02\n9529 -4.22e-02 -2.39e-01  6.18e-02     9.40e-02     3.43e-02\n9530  9.33e-04 -2.83e-02  6.38e-02     1.16e-02     1.34e-02\n9531  1.44e-03 -5.24e-02  9.96e-02     2.21e-02     2.55e-02\n9532  5.42e-03 -1.03e-01  1.87e-01     6.25e-02     7.17e-02\n9533  3.16e-04 -1.19e-02  2.79e-02     3.93e-03     4.66e-03\n9534  9.14e-04 -6.34e-02  1.17e-01     1.89e-02     2.05e-02\n9535  9.43e-05 -6.49e-03  1.26e-02     1.76e-03     2.02e-03\n9536  6.76e-04 -1.81e-02  4.70e-02     7.33e-03     8.56e-03\n9537  9.69e-04 -3.78e-02  7.72e-02     1.48e-02     1.70e-02\n9538  1.48e-05 -2.23e-03  4.61e-03     4.59e-04     5.19e-04\n9539  9.81e-05 -6.00e-03  1.37e-02     1.86e-03     2.05e-03\n9540  2.19e-05 -2.45e-03  6.05e-03     4.94e-04     5.72e-04\n9541  5.72e-05 -5.81e-03  1.05e-02     1.34e-03     1.48e-03\n9542  2.18e-04 -1.18e-02  2.44e-02     3.49e-03     3.87e-03\n9543  2.50e-06 -2.42e-02  1.63e-02     5.33e-04     6.23e-04\n9544  6.91e-07 -1.50e-02  8.38e-03     2.24e-04     2.56e-04\n9545  1.96e-06 -4.46e-02  2.19e-02     6.98e-04     8.13e-04\n9546  1.10e-07 -3.14e-03  1.66e-03     4.19e-05     4.69e-05\n9547  4.41e-08 -1.54e-03  6.54e-04     1.75e-05     2.03e-05\n9548  5.94e-08 -2.02e-03  9.67e-04     2.37e-05     2.70e-05\n9549  4.53e-06 -2.15e-02  1.87e-02     6.31e-04     7.41e-04\n9550  3.24e-07 -9.03e-03  4.74e-03     1.20e-04     1.39e-04\n9551  5.97e-09 -4.36e-04  1.92e-04     3.74e-06     4.22e-06\n9552  6.87e-08 -1.78e-03  1.03e-03     2.54e-05     2.94e-05\n9553  1.51e-08 -8.27e-04  4.05e-04     6.79e-06     7.83e-06\n9554  1.24e-08 -6.29e-04  2.42e-04     6.00e-06     7.27e-06\n9555  4.75e-08 -1.64e-03  8.94e-04     2.05e-05     2.33e-05\n9556  9.53e-04 -3.64e-02  4.16e-02     1.03e-02     1.26e-02\n9557  1.88e-03 -6.57e-02  7.26e-02     2.05e-02     2.44e-02\n9558  6.56e-03 -1.33e-01  1.60e-01     6.50e-02     7.94e-02\n9559  3.77e-04 -1.78e-02  2.17e-02     4.04e-03     5.04e-03\n9560  3.93e-03 -9.58e-02  1.15e-01     3.22e-02     4.14e-02\n9561  1.07e-04 -7.50e-03  8.03e-03     1.51e-03     1.83e-03\n9562  6.13e-04 -2.64e-02  2.90e-02     6.81e-03     8.31e-03\n9563  1.28e-03 -4.81e-02  5.31e-02     1.41e-02     1.74e-02\n9564  2.05e-05 -2.87e-03  3.01e-03     4.02e-04     4.88e-04\n9565  1.14e-04 -7.38e-03  8.65e-03     1.55e-03     1.85e-03\n9566  2.71e-05 -3.04e-03  3.94e-03     4.69e-04     5.73e-04\n9567  8.85e-05 -6.75e-03  7.43e-03     1.30e-03     1.56e-03\n9568  2.95e-04 -1.36e-02  1.63e-02     3.49e-03     4.22e-03\n9569 -8.71e-03 -1.66e-01  1.89e-01     1.47e-01     1.30e-01\n9570 -2.30e-02 -2.61e-01  2.13e-01     2.51e-01     2.15e-01\n9571 -1.85e-02 -3.09e-01  2.31e-01     4.30e-01     3.95e-01\n9572 -1.99e-03 -8.13e-02  1.07e-01     4.31e-02     3.77e-02\n9573 -4.24e-02 -3.36e-01  2.10e-01     2.28e-01     1.55e-01\n9574 -4.51e-03 -8.46e-02  7.08e-02     3.61e-02     2.75e-02\n9575 -3.33e-03 -1.15e-01  1.58e-01     9.18e-02     8.35e-02\n9576 -1.71e-02 -2.24e-01  1.94e-01     1.77e-01     1.47e-01\n9577 -9.67e-04 -3.94e-02  3.06e-02     9.87e-03     6.98e-03\n9578 -4.14e-03 -8.16e-02  7.07e-02     3.53e-02     2.71e-02\n9579 -2.68e-04 -2.81e-02  2.86e-02     6.94e-03     6.05e-03\n9580 -2.67e-03 -6.75e-02  5.81e-02     2.22e-02     1.65e-02\n9581 -6.46e-03 -1.20e-01  1.01e-01     5.45e-02     4.22e-02\n9582  1.04e-03 -2.54e-02  6.49e-02     1.19e-02     1.37e-02\n9583  1.98e-03 -4.42e-02  1.06e-01     2.33e-02     2.69e-02\n9584  7.21e-03 -1.00e-01  2.03e-01     7.18e-02     8.30e-02\n9585  4.37e-04 -1.11e-02  3.05e-02     4.58e-03     5.33e-03\n9586  3.46e-03 -6.57e-02  1.50e-01     3.56e-02     4.11e-02\n9587  1.19e-04 -5.12e-03  1.28e-02     1.77e-03     2.04e-03\n9588  6.83e-04 -1.73e-02  4.65e-02     7.75e-03     9.24e-03\n9589  1.34e-03 -3.21e-02  7.86e-02     1.61e-02     1.86e-02\n9590  2.32e-05 -1.83e-03  4.48e-03     4.63e-04     5.30e-04\n9591  1.28e-04 -5.22e-03  1.37e-02     1.81e-03     2.11e-03\n9592  3.09e-05 -2.24e-03  5.79e-03     5.27e-04     6.16e-04\n9593  9.87e-05 -5.05e-03  1.28e-02     1.44e-03     1.66e-03\n9594  3.14e-04 -1.04e-02  2.56e-02     3.80e-03     4.56e-03\n9595 -7.06e-03 -2.85e-01 -5.38e-08     8.77e-03     7.50e-04\n9596 -4.04e-03 -2.91e-01 -4.74e-08     4.89e-03     2.92e-04\n9597 -1.15e-02 -4.54e-01 -1.54e-07     1.36e-02     8.93e-04\n9598 -6.51e-04 -8.08e-02 -5.58e-09     7.84e-04     5.15e-05\n9599 -3.40e-04 -6.44e-02 -5.73e-09     3.94e-04     2.34e-05\n9600 -4.07e-04 -5.05e-02 -7.59e-09     4.71e-04     3.04e-05\n9601 -6.03e-03 -2.33e-01  4.67e-06     8.20e-03     8.76e-04\n9602 -2.11e-03 -2.04e-01 -2.33e-08     2.53e-03     1.54e-04\n9603 -6.48e-05 -1.45e-02 -7.24e-10     7.77e-05     4.57e-06\n9604 -4.67e-04 -5.22e-02 -5.25e-09     5.39e-04     3.49e-05\n9605 -1.08e-04 -1.66e-02 -9.53e-10     1.32e-04     8.98e-06\n9606 -1.04e-04 -2.16e-02 -1.79e-09     1.24e-04     7.91e-06\n9607 -3.71e-04 -5.96e-02 -3.77e-09     4.30e-04     2.68e-05\n9608 -5.90e-04 -9.11e-02  5.35e-02     2.71e-02     2.62e-02\n9609 -1.23e-03 -1.36e-01  8.81e-02     5.22e-02     5.05e-02\n9610  2.36e-04 -1.81e-01  1.54e-01     1.11e-01     1.12e-01\n9611  1.49e-05 -3.42e-02  2.25e-02     7.27e-03     7.41e-03\n9612 -1.14e-03 -1.44e-01  8.98e-02     4.83e-02     4.66e-02\n9613 -3.57e-04 -3.03e-02  1.31e-02     6.14e-03     5.33e-03\n9614 -1.73e-04 -5.80e-02  3.72e-02     1.58e-02     1.58e-02\n9615 -6.70e-04 -1.07e-01  6.57e-02     3.41e-02     3.33e-02\n9616 -6.15e-05 -1.12e-02  4.77e-03     1.55e-03     1.37e-03\n9617 -3.03e-04 -3.04e-02  1.29e-02     5.87e-03     5.19e-03\n9618 -5.80e-06 -8.60e-03  5.16e-03     1.09e-03     1.05e-03\n9619 -1.22e-04 -2.22e-02  1.07e-02     3.79e-03     3.48e-03\n9620 -2.46e-04 -4.35e-02  2.37e-02     9.29e-03     8.67e-03\n9621  1.26e-03 -1.84e-01  1.26e-01     2.31e-02     2.84e-02\n9622  3.63e-04 -1.72e-01  7.97e-02     1.23e-02     1.40e-02\n9623  1.04e-03 -2.98e-01  1.69e-01     3.49e-02     4.20e-02\n9624  5.85e-05 -4.57e-02  2.03e-02     2.23e-03     2.64e-03\n9625  2.21e-05 -3.00e-02  8.68e-03     9.84e-04     1.15e-03\n9626  3.14e-05 -2.61e-02  1.15e-02     1.20e-03     1.41e-03\n9627  2.05e-03 -1.50e-01  1.26e-01     2.40e-02     3.06e-02\n9628  1.67e-04 -1.19e-01  5.05e-02     6.38e-03     7.59e-03\n9629  3.18e-06 -6.94e-03  2.65e-03     2.01e-04     2.35e-04\n9630  3.62e-05 -2.75e-02  1.26e-02     1.38e-03     1.58e-03\n9631  6.23e-06 -1.11e-02  5.15e-03     3.66e-04     4.29e-04\n9632  6.43e-06 -1.08e-02  3.53e-03     3.39e-04     4.00e-04\n9633  2.58e-05 -2.79e-02  9.90e-03     1.10e-03     1.26e-03\n9634 -5.18e-03 -1.21e-01  1.39e-01     7.90e-02     7.00e-02\n9635 -1.46e-02 -1.89e-01  1.73e-01     1.47e-01     1.21e-01\n9636 -1.82e-02 -2.54e-01  2.22e-01     2.91e-01     2.61e-01\n9637 -1.43e-03 -5.68e-02  6.43e-02     2.38e-02     2.04e-02\n9638 -2.98e-02 -2.64e-01  1.68e-01     1.42e-01     8.81e-02\n9639 -1.97e-03 -4.79e-02  3.71e-02     1.63e-02     1.25e-02\n9640 -2.22e-03 -8.25e-02  1.06e-01     4.90e-02     4.48e-02\n9641 -1.05e-02 -1.60e-01  1.43e-01     1.01e-01     7.95e-02\n9642 -4.26e-04 -1.98e-02  1.48e-02     4.36e-03     3.21e-03\n9643 -1.86e-03 -4.44e-02  3.77e-02     1.63e-02     1.27e-02\n9644 -1.75e-04 -1.44e-02  1.57e-02     3.55e-03     2.98e-03\n9645 -1.38e-03 -3.82e-02  2.80e-02     1.13e-02     8.06e-03\n9646 -3.35e-03 -6.82e-02  5.67e-02     2.82e-02     2.09e-02\n9647  7.51e-04 -4.55e-02  5.48e-02     6.97e-03     9.15e-03\n9648  2.72e-04 -6.32e-02  4.90e-02     5.27e-03     6.40e-03\n9649  9.00e-04 -1.33e-01  1.13e-01     1.55e-02     1.86e-02\n9650  5.44e-05 -1.35e-02  1.02e-02     9.21e-04     1.16e-03\n9651  1.22e-05 -1.45e-02  5.54e-03     5.48e-04     6.12e-04\n9652  2.42e-05 -8.00e-03  6.10e-03     5.14e-04     6.28e-04\n9653  7.06e-04 -3.32e-02  4.43e-02     5.77e-03     7.63e-03\n9654  1.34e-04 -4.03e-02  2.84e-02     2.96e-03     3.60e-03\n9655  2.21e-06 -2.08e-03  1.42e-03     9.35e-05     1.09e-04\n9656  2.88e-05 -7.67e-03  6.10e-03     5.60e-04     6.94e-04\n9657  5.37e-06 -2.88e-03  2.71e-03     1.49e-04     1.87e-04\n9658  4.27e-06 -3.99e-03  2.03e-03     1.67e-04     1.97e-04\n9659  1.72e-05 -9.57e-03  6.34e-03     5.30e-04     6.54e-04\n9660 -4.78e-03 -1.20e-01  1.30e-01     7.91e-02     6.97e-02\n9661 -1.37e-02 -1.97e-01  1.67e-01     1.47e-01     1.19e-01\n9662 -1.64e-02 -2.64e-01  2.17e-01     2.93e-01     2.60e-01\n9663 -1.28e-03 -5.33e-02  6.26e-02     2.36e-02     2.03e-02\n9664 -2.92e-02 -2.61e-01  1.67e-01     1.42e-01     8.92e-02\n9665 -2.03e-03 -4.62e-02  3.50e-02     1.61e-02     1.23e-02\n9666 -2.01e-03 -8.41e-02  1.02e-01     4.86e-02     4.40e-02\n9667 -1.03e-02 -1.61e-01  1.36e-01     9.89e-02     8.07e-02\n9668 -4.62e-04 -1.96e-02  1.27e-02     4.26e-03     3.10e-03\n9669 -1.83e-03 -4.32e-02  3.67e-02     1.60e-02     1.25e-02\n9670 -1.47e-04 -1.56e-02  1.49e-02     3.45e-03     2.95e-03\n9671 -1.37e-03 -3.61e-02  2.84e-02     1.13e-02     7.88e-03\n9672 -3.33e-03 -6.97e-02  5.50e-02     2.75e-02     2.08e-02\n9673 -6.52e-03 -3.27e-01 -5.70e-08     8.38e-03     6.76e-04\n9674 -3.71e-03 -3.12e-01 -6.39e-08     4.42e-03     2.75e-04\n9675 -1.06e-02 -5.00e-01 -1.87e-07     1.27e-02     8.36e-04\n9676 -6.26e-04 -7.82e-02 -8.33e-09     7.56e-04     5.13e-05\n9677 -3.08e-04 -6.89e-02 -5.22e-09     3.61e-04     2.13e-05\n9678 -3.94e-04 -5.48e-02 -8.02e-09     4.61e-04     2.80e-05\n9679 -5.66e-03 -2.55e-01  2.11e-06     7.70e-03     8.47e-04\n9680 -1.98e-03 -2.18e-01 -3.33e-08     2.32e-03     1.45e-04\n9681 -6.19e-05 -1.65e-02 -7.16e-10     7.25e-05     4.45e-06\n9682 -4.17e-04 -6.37e-02 -7.76e-09     4.86e-04     3.11e-05\n9683 -9.74e-05 -1.86e-02 -1.30e-09     1.21e-04     8.12e-06\n9684 -1.05e-04 -2.47e-02 -1.88e-09     1.24e-04     7.61e-06\n9685 -3.45e-04 -5.84e-02 -7.52e-09     4.13e-04     2.44e-05\n9686 -1.00e-03 -9.24e-02  5.15e-02     3.01e-02     2.80e-02\n9687 -2.74e-03 -1.43e-01  8.00e-02     5.74e-02     5.25e-02\n9688 -2.25e-03 -2.02e-01  1.48e-01     1.25e-01     1.21e-01\n9689 -1.29e-04 -3.70e-02  2.11e-02     8.37e-03     7.92e-03\n9690 -1.22e-02 -2.04e-01  4.66e-02     5.22e-02     3.40e-02\n9691 -5.22e-04 -3.58e-02  1.10e-02     6.29e-03     5.24e-03\n9692 -2.62e-04 -5.96e-02  3.83e-02     1.76e-02     1.72e-02\n9693 -1.98e-03 -1.17e-01  5.84e-02     3.79e-02     3.49e-02\n9694 -1.09e-04 -1.25e-02  4.18e-03     1.61e-03     1.30e-03\n9695 -4.77e-04 -3.09e-02  1.22e-02     6.15e-03     5.22e-03\n9696 -2.23e-05 -8.84e-03  5.18e-03     1.23e-03     1.13e-03\n9697 -3.34e-04 -2.50e-02  8.24e-03     3.92e-03     3.26e-03\n9698 -7.12e-04 -4.75e-02  1.75e-02     1.00e-02     8.70e-03\n9699 -1.29e-01 -4.69e-01  3.12e-02     1.96e-01     3.34e-02\n9700 -1.37e-01 -4.65e-01 -4.36e-03     1.73e-01     1.53e-02\n9701 -2.49e-01 -6.15e-01  9.99e-03     3.43e-01     4.48e-02\n9702 -2.37e-02 -1.56e-01  1.10e-03     3.08e-02     2.82e-03\n9703 -1.89e-02 -1.28e-01 -6.49e-04     2.21e-02     1.24e-03\n9704 -2.00e-02 -1.41e-01 -5.10e-04     2.40e-02     1.64e-03\n9705 -7.99e-02 -3.67e-01  4.99e-02     1.40e-01     3.58e-02\n9706 -8.46e-02 -3.56e-01 -2.43e-03     1.05e-01     8.11e-03\n9707 -3.68e-03 -4.90e-02 -1.91e-05     4.50e-03     2.77e-04\n9708 -2.11e-02 -1.43e-01 -4.48e-04     2.58e-02     1.83e-03\n9709 -4.27e-03 -6.44e-02  1.31e-04     5.61e-03     4.97e-04\n9710 -6.06e-03 -6.27e-02 -1.04e-04     7.29e-03     4.44e-04\n9711 -1.78e-02 -1.26e-01 -3.61e-04     2.15e-02     1.43e-03\n9712  5.94e-04 -3.13e-02  6.12e-02     9.98e-03     1.15e-02\n9713  5.53e-04 -4.97e-02  8.85e-02     1.40e-02     1.49e-02\n9714  1.94e-03 -1.01e-01  1.68e-01     3.60e-02     3.86e-02\n9715  1.15e-04 -1.04e-02  1.90e-02     2.20e-03     2.42e-03\n9716  9.50e-05 -1.58e-02  5.03e-02     2.82e-03     2.95e-03\n9717  3.16e-05 -7.09e-03  1.20e-02     1.42e-03     1.46e-03\n9718  5.29e-04 -1.96e-02  4.43e-02     6.28e-03     7.77e-03\n9719  3.10e-04 -3.53e-02  6.30e-02     8.54e-03     8.90e-03\n9720  3.77e-06 -2.52e-03  4.15e-03     3.00e-04     3.05e-04\n9721  3.74e-05 -6.69e-03  1.24e-02     1.45e-03     1.48e-03\n9722  8.37e-06 -2.41e-03  4.46e-03     3.35e-04     3.54e-04\n9723  1.55e-05 -4.12e-03  7.81e-03     6.40e-04     6.55e-04\n9724  5.56e-05 -8.88e-03  1.95e-02     1.79e-03     1.90e-03\n9725  2.61e-02 -1.73e-01  2.14e-01     1.35e-01     1.75e-01\n9726  4.10e-02 -1.96e-01  2.66e-01     2.30e-01     2.87e-01\n9727  6.00e-02 -1.94e-01  3.15e-01     3.58e-01     4.35e-01\n9728  7.31e-03 -8.28e-02  9.00e-02     3.23e-02     4.42e-02\n9729  3.88e-02 -1.87e-01  2.53e-01     1.71e-01     2.25e-01\n9730  5.76e-03 -1.08e-01  1.08e-01     4.74e-02     5.77e-02\n9731  1.67e-02 -1.35e-01  1.51e-01     7.58e-02     1.01e-01\n9732  3.06e-02 -1.82e-01  2.33e-01     1.55e-01     1.99e-01\n9733  1.21e-03 -4.85e-02  5.00e-02     1.18e-02     1.48e-02\n9734  6.20e-03 -9.43e-02  1.06e-01     4.30e-02     5.29e-02\n9735  8.79e-04 -2.62e-02  3.09e-02     5.90e-03     8.10e-03\n9736  3.71e-03 -6.55e-02  7.55e-02     2.18e-02     2.90e-02\n9737  9.89e-03 -1.06e-01  1.22e-01     4.96e-02     6.55e-02\n9738 -2.12e-01 -5.73e-01  9.38e-02     4.24e-01     1.56e-01\n9739 -3.14e-01 -6.54e-01  2.29e-02     4.68e-01     9.05e-02\n9740 -3.80e-01 -7.25e-01  4.31e-02     6.74e-01     2.17e-01\n9741 -7.75e-02 -3.26e-01  2.23e-02     1.12e-01     1.68e-02\n9742 -1.02e-01 -3.84e-01 -6.54e-03     1.23e-01     8.10e-03\n9743 -7.58e-02 -3.30e-01  2.24e-03     9.87e-02     9.93e-03\n9744 -1.23e-01 -4.59e-01  1.34e-01     3.07e-01     1.42e-01\n9745 -2.42e-01 -5.83e-01  1.96e-02     3.39e-01     4.90e-02\n9746 -1.71e-02 -1.60e-01 -1.58e-05     2.17e-02     1.78e-03\n9747 -7.47e-02 -3.27e-01  3.08e-03     9.98e-02     1.15e-02\n9748 -1.40e-02 -1.51e-01  5.31e-03     2.17e-02     3.06e-03\n9749 -2.94e-02 -1.95e-01 -5.53e-04     3.66e-02     2.88e-03\n9750 -7.77e-02 -3.24e-01  2.03e-03     9.87e-02     9.08e-03\n9751 -7.67e-04 -6.39e-02  7.02e-02     2.67e-02     2.42e-02\n9752 -2.91e-03 -1.15e-01  1.02e-01     5.02e-02     4.26e-02\n9753 -2.35e-03 -1.62e-01  1.69e-01     9.79e-02     9.02e-02\n9754 -1.39e-04 -2.17e-02  2.43e-02     6.31e-03     5.80e-03\n9755 -5.51e-03 -1.29e-01  8.56e-02     3.99e-02     2.54e-02\n9756 -6.52e-04 -2.62e-02  1.69e-02     6.72e-03     5.05e-03\n9757 -1.81e-04 -3.81e-02  4.80e-02     1.52e-02     1.40e-02\n9758 -1.93e-03 -8.44e-02  7.55e-02     3.27e-02     2.73e-02\n9759 -1.46e-04 -9.93e-03  6.00e-03     1.62e-03     1.19e-03\n9760 -5.54e-04 -2.57e-02  1.83e-02     6.21e-03     4.82e-03\n9761 -2.09e-05 -5.99e-03  6.32e-03     9.90e-04     8.70e-04\n9762 -3.06e-04 -1.95e-02  1.22e-02     3.57e-03     2.74e-03\n9763 -7.11e-04 -3.31e-02  2.67e-02     8.97e-03     6.94e-03\n9764  3.89e-03 -8.98e-02  8.69e-02     3.72e-02     4.39e-02\n9765  7.79e-03 -1.38e-01  1.39e-01     7.14e-02     8.66e-02\n9766  2.30e-02 -1.95e-01  2.35e-01     2.01e-01     2.41e-01\n9767  1.75e-03 -4.40e-02  4.85e-02     1.47e-02     1.83e-02\n9768  1.51e-02 -1.62e-01  1.90e-01     1.09e-01     1.35e-01\n9769  4.81e-04 -2.05e-02  1.97e-02     5.58e-03     6.68e-03\n9770  2.63e-03 -6.45e-02  6.58e-02     2.46e-02     2.98e-02\n9771  5.37e-03 -1.11e-01  1.14e-01     4.97e-02     6.00e-02\n9772  9.64e-05 -7.73e-03  7.73e-03     1.48e-03     1.78e-03\n9773  5.19e-04 -2.06e-02  1.98e-02     5.67e-03     6.67e-03\n9774  1.16e-04 -9.40e-03  1.07e-02     1.76e-03     2.17e-03\n9775  3.99e-04 -2.04e-02  1.84e-02     4.50e-03     5.54e-03\n9776  1.33e-03 -4.11e-02  4.09e-02     1.24e-02     1.50e-02\n9777 -6.72e-03 -3.08e-01 -2.10e-07     8.25e-03     7.14e-04\n9778 -3.76e-03 -3.02e-01 -1.63e-07     4.44e-03     2.89e-04\n9779 -1.07e-02 -4.84e-01 -3.58e-07     1.28e-02     8.63e-04\n9780 -6.54e-04 -7.25e-02 -2.79e-08     7.83e-04     5.42e-05\n9781 -3.15e-04 -6.59e-02 -1.04e-08     3.72e-04     2.15e-05\n9782 -4.00e-04 -5.44e-02 -1.13e-08     4.74e-04     3.07e-05\n9783 -5.92e-03 -2.37e-01  5.66e-07     8.19e-03     8.67e-04\n9784 -2.06e-03 -2.05e-01 -8.30e-08     2.44e-03     1.51e-04\n9785 -6.29e-05 -1.47e-02 -1.08e-09     7.33e-05     4.56e-06\n9786 -4.43e-04 -5.68e-02 -1.24e-08     5.28e-04     3.26e-05\n9787 -1.04e-04 -1.83e-02 -2.61e-09     1.25e-04     8.53e-06\n9788 -1.07e-04 -2.24e-02 -2.91e-09     1.29e-04     7.75e-06\n9789 -3.50e-04 -5.46e-02 -1.28e-08     4.23e-04     2.66e-05\n9790  4.98e-03 -6.02e-02  1.45e-01     4.28e-02     4.90e-02\n9791  9.29e-03 -9.90e-02  2.02e-01     8.27e-02     9.35e-02\n9792  2.52e-02 -1.72e-01  2.75e-01     2.25e-01     2.56e-01\n9793  2.06e-03 -2.83e-02  8.25e-02     1.65e-02     1.96e-02\n9794  1.42e-02 -1.30e-01  2.50e-01     1.19e-01     1.39e-01\n9795  5.99e-04 -1.34e-02  3.71e-02     6.68e-03     7.62e-03\n9796  3.39e-03 -4.28e-02  1.15e-01     2.82e-02     3.31e-02\n9797  6.65e-03 -7.51e-02  1.76e-01     5.73e-02     6.72e-02\n9798  1.15e-04 -5.02e-03  1.58e-02     1.76e-03     2.04e-03\n9799  6.58e-04 -1.36e-02  4.03e-02     6.94e-03     7.92e-03\n9800  1.49e-04 -5.96e-03  2.00e-02     2.04e-03     2.44e-03\n9801  4.65e-04 -1.32e-02  3.50e-02     5.48e-03     6.52e-03\n9802  1.56e-03 -2.56e-02  7.06e-02     1.47e-02     1.70e-02\n9803 -1.11e-03 -6.48e-02  6.86e-02     2.77e-02     2.48e-02\n9804 -3.70e-03 -1.16e-01  1.05e-01     5.23e-02     4.35e-02\n9805 -3.68e-03 -1.70e-01  1.67e-01     1.11e-01     9.88e-02\n9806 -2.10e-04 -2.28e-02  2.52e-02     7.09e-03     6.35e-03\n9807 -6.97e-03 -1.45e-01  8.97e-02     4.47e-02     2.84e-02\n9808 -6.79e-04 -2.67e-02  1.67e-02     6.24e-03     4.72e-03\n9809 -3.44e-04 -4.03e-02  4.99e-02     1.61e-02     1.48e-02\n9810 -2.43e-03 -9.08e-02  7.84e-02     3.52e-02     2.82e-02\n9811 -1.31e-04 -1.08e-02  5.53e-03     1.58e-03     1.15e-03\n9812 -5.68e-04 -2.36e-02  1.62e-02     6.08e-03     4.79e-03\n9813 -2.91e-05 -6.82e-03  5.89e-03     1.05e-03     9.01e-04\n9814 -3.37e-04 -1.83e-02  1.17e-02     3.75e-03     2.68e-03\n9815 -8.18e-04 -3.62e-02  2.51e-02     9.30e-03     7.10e-03\n9816  4.41e-03 -6.35e-02  1.56e-01     4.51e-02     5.15e-02\n9817  6.43e-03 -1.07e-01  1.97e-01     8.45e-02     9.29e-02\n9818  1.90e-02 -1.89e-01  2.68e-01     2.34e-01     2.57e-01\n9819  1.55e-03 -3.35e-02  8.78e-02     1.79e-02     2.02e-02\n9820  4.73e-03 -1.44e-01  2.36e-01     8.12e-02     8.60e-02\n9821  4.87e-04 -1.47e-02  3.94e-02     6.68e-03     7.44e-03\n9822  3.07e-03 -4.95e-02  1.21e-01     3.02e-02     3.50e-02\n9823  4.41e-03 -8.25e-02  1.73e-01     5.87e-02     6.51e-02\n9824  7.84e-05 -5.51e-03  1.49e-02     1.73e-03     1.89e-03\n9825  5.25e-04 -1.49e-02  3.84e-02     6.95e-03     7.72e-03\n9826  1.23e-04 -7.32e-03  1.77e-02     2.13e-03     2.46e-03\n9827  2.79e-04 -1.35e-02  3.14e-02     5.34e-03     5.74e-03\n9828  1.03e-03 -2.73e-02  6.67e-02     1.46e-02     1.60e-02\n9829 -6.25e-03 -2.89e-01 -6.93e-08     7.90e-03     6.57e-04\n9830 -3.49e-03 -2.96e-01 -9.87e-08     4.08e-03     2.67e-04\n9831 -9.64e-03 -4.78e-01 -2.46e-07     1.16e-02     7.95e-04\n9832 -5.91e-04 -7.17e-02 -1.56e-08     7.14e-04     4.80e-05\n9833 -2.77e-04 -8.19e-02 -8.22e-09     3.32e-04     1.99e-05\n9834 -3.59e-04 -5.76e-02 -1.18e-08     4.25e-04     2.71e-05\n9835 -5.18e-03 -2.27e-01  4.87e-06     7.17e-03     7.92e-04\n9836 -1.80e-03 -2.14e-01 -3.91e-08     2.14e-03     1.37e-04\n9837 -5.74e-05 -1.54e-02 -1.40e-09     6.91e-05     3.95e-06\n9838 -3.99e-04 -5.32e-02 -9.72e-09     4.76e-04     2.99e-05\n9839 -9.37e-05 -1.94e-02 -1.87e-09     1.14e-04     7.68e-06\n9840 -9.56e-05 -2.40e-02 -2.66e-09     1.12e-04     6.73e-06\n9841 -3.10e-04 -5.47e-02 -7.09e-09     3.62e-04     2.22e-05\n9842  1.10e-03 -2.37e-02  6.77e-02     1.11e-02     1.32e-02\n9843  2.14e-03 -4.41e-02  1.09e-01     2.22e-02     2.60e-02\n9844  7.17e-03 -8.90e-02  1.98e-01     6.03e-02     7.27e-02\n9845  4.22e-04 -9.47e-03  3.07e-02     3.74e-03     4.52e-03\n9846  3.23e-03 -5.11e-02  1.39e-01     2.76e-02     3.33e-02\n9847  1.25e-04 -4.84e-03  1.48e-02     1.81e-03     2.10e-03\n9848  6.91e-04 -1.56e-02  4.62e-02     6.88e-03     8.25e-03\n9849  1.43e-03 -3.06e-02  8.59e-02     1.47e-02     1.73e-02\n9850  2.55e-05 -1.73e-03  5.49e-03     4.81e-04     5.61e-04\n9851  1.39e-04 -5.03e-03  1.39e-02     1.84e-03     2.17e-03\n9852  3.42e-05 -2.18e-03  6.51e-03     4.70e-04     5.73e-04\n9853  1.04e-04 -4.65e-03  1.25e-02     1.40e-03     1.64e-03\n9854  3.21e-04 -1.01e-02  2.91e-02     3.63e-03     4.33e-03\n9855 -1.29e-02 -2.36e-01  1.38e-01     1.84e-01     1.67e-01\n9856 -3.78e-02 -3.00e-01  1.58e-01     3.07e-01     2.59e-01\n9857 -3.23e-02 -2.89e-01  2.14e-01     5.29e-01     4.84e-01\n9858 -5.60e-03 -1.67e-01  6.89e-02     6.14e-02     5.33e-02\n9859 -1.35e-01 -4.91e-01  6.84e-02     2.91e-01     1.30e-01\n9860 -6.23e-03 -1.38e-01  3.65e-02     3.88e-02     2.98e-02\n9861 -5.67e-03 -2.01e-01  1.12e-01     1.19e-01     1.12e-01\n9862 -3.15e-02 -2.95e-01  1.31e-01     2.24e-01     1.82e-01\n9863 -1.61e-03 -6.40e-02  1.37e-02     1.07e-02     7.71e-03\n9864 -5.78e-03 -1.28e-01  3.70e-02     3.86e-02     3.09e-02\n9865 -5.85e-04 -5.62e-02  1.77e-02     9.16e-03     7.95e-03\n9866 -5.89e-03 -1.23e-01  2.28e-02     2.76e-02     1.92e-02\n9867 -1.30e-02 -2.02e-01  5.30e-02     6.82e-02     5.05e-02\n9868 -3.00e-02 -2.34e-01  1.48e-01     1.62e-01     1.17e-01\n9869 -8.93e-02 -3.80e-01  1.40e-01     2.66e-01     1.45e-01\n9870 -1.18e-01 -4.99e-01  1.66e-01     4.77e-01     3.14e-01\n9871 -1.58e-02 -1.39e-01  6.39e-02     5.17e-02     2.72e-02\n9872 -1.23e-01 -4.18e-01  5.13e-02     1.90e-01     3.19e-02\n9873 -1.20e-02 -1.09e-01  3.48e-02     3.42e-02     1.56e-02\n9874 -1.32e-02 -1.56e-01  1.36e-01     1.03e-01     8.19e-02\n9875 -7.18e-02 -3.29e-01  1.16e-01     1.89e-01     9.03e-02\n9876 -3.29e-03 -5.49e-02  9.91e-03     8.83e-03     3.34e-03\n9877 -1.16e-02 -1.02e-01  3.87e-02     3.35e-02     1.59e-02\n9878 -1.91e-03 -3.99e-02  1.60e-02     7.92e-03     4.06e-03\n9879 -1.02e-02 -9.67e-02  1.84e-02     2.22e-02     7.10e-03\n9880 -2.46e-02 -1.67e-01  4.14e-02     5.46e-02     2.04e-02\n9881 -9.98e-03 -1.52e-01  1.09e-01     7.36e-02     5.63e-02\n9882 -3.86e-02 -2.77e-01  1.11e-01     1.28e-01     6.70e-02\n9883 -4.58e-02 -3.41e-01  1.65e-01     2.16e-01     1.42e-01\n9884 -3.31e-03 -6.08e-02  3.23e-02     1.60e-02     9.68e-03\n9885 -4.15e-02 -2.56e-01  3.40e-02     6.96e-02     1.34e-02\n9886 -8.53e-03 -1.02e-01  2.20e-02     2.18e-02     8.92e-03\n9887 -2.63e-03 -8.20e-02  9.32e-02     4.01e-02     3.48e-02\n9888 -2.73e-02 -2.20e-01  8.51e-02     8.38e-02     4.01e-02\n9889 -2.07e-03 -4.40e-02  6.23e-03     5.37e-03     1.79e-03\n9890 -7.10e-03 -8.59e-02  2.12e-02     1.99e-02     8.80e-03\n9891 -5.02e-04 -2.04e-02  8.23e-03     2.88e-03     1.67e-03\n9892 -4.15e-03 -5.97e-02  9.55e-03     9.75e-03     3.22e-03\n9893 -9.36e-03 -9.92e-02  2.47e-02     2.34e-02     9.02e-03\n9894 -7.05e-03 -3.21e-01 -1.59e-07     8.85e-03     7.32e-04\n9895 -4.07e-03 -3.07e-01 -1.33e-07     4.71e-03     3.00e-04\n9896 -1.12e-02 -4.83e-01 -4.50e-07     1.35e-02     8.89e-04\n9897 -6.57e-04 -8.33e-02 -2.54e-08     8.03e-04     5.41e-05\n9898 -3.35e-04 -6.84e-02 -1.35e-08     4.02e-04     2.26e-05\n9899 -4.27e-04 -5.24e-02 -1.55e-08     5.10e-04     3.15e-05\n9900 -6.15e-03 -2.65e-01  1.02e-06     8.47e-03     9.10e-04\n9901 -2.09e-03 -2.10e-01 -8.65e-08     2.52e-03     1.57e-04\n9902 -6.88e-05 -1.69e-02 -1.72e-09     8.17e-05     4.82e-06\n9903 -4.68e-04 -5.80e-02 -1.39e-08     5.50e-04     3.52e-05\n9904 -1.02e-04 -1.98e-02 -2.25e-09     1.27e-04     8.82e-06\n9905 -1.17e-04 -2.26e-02 -5.32e-09     1.36e-04     8.17e-06\n9906 -3.73e-04 -6.06e-02 -1.35e-08     4.46e-04     2.70e-05\n9907 -1.59e-02 -2.31e-01  2.29e-02     4.33e-02     2.14e-02\n9908 -4.09e-02 -3.69e-01  1.84e-03     6.10e-02     1.43e-02\n9909 -7.89e-02 -4.57e-01  1.22e-02     1.34e-01     4.03e-02\n9910 -5.34e-03 -1.06e-01  9.43e-04     8.90e-03     2.55e-03\n9911 -1.50e-02 -2.73e-01 -4.62e-05     1.70e-02     1.34e-03\n9912 -5.43e-03 -9.86e-02  7.27e-05     7.73e-03     1.61e-03\n9913 -5.44e-03 -1.46e-01  2.98e-02     2.68e-02     1.75e-02\n9914 -2.67e-02 -3.05e-01  5.79e-04     3.81e-02     7.94e-03\n9915 -1.22e-03 -4.03e-02  5.97e-07     1.60e-03     2.71e-04\n9916 -5.05e-03 -9.74e-02  1.05e-04     7.46e-03     1.70e-03\n9917 -7.82e-04 -2.84e-02  1.90e-04     1.42e-03     4.18e-04\n9918 -2.56e-03 -6.50e-02 -4.85e-06     3.27e-03     4.57e-04\n9919 -6.83e-03 -1.26e-01  7.50e-06     9.00e-03     1.40e-03\n9920  4.74e-03 -6.91e-02  1.47e-01     4.52e-02     5.24e-02\n9921  7.39e-03 -1.11e-01  2.03e-01     8.37e-02     9.41e-02\n9922  2.06e-02 -1.79e-01  2.73e-01     2.11e-01     2.42e-01\n9923  1.58e-03 -3.19e-02  7.82e-02     1.60e-02     1.88e-02\n9924  4.70e-03 -1.32e-01  2.28e-01     7.07e-02     7.33e-02\n9925  5.26e-04 -1.72e-02  3.86e-02     7.40e-03     8.20e-03\n9926  3.22e-03 -4.71e-02  1.15e-01     2.97e-02     3.41e-02\n9927  4.71e-03 -8.88e-02  1.71e-01     5.67e-02     6.35e-02\n9928  7.81e-05 -7.36e-03  1.44e-02     1.90e-03     2.09e-03\n9929  5.09e-04 -1.71e-02  4.12e-02     7.39e-03     8.44e-03\n9930  1.32e-04 -6.96e-03  1.72e-02     2.04e-03     2.39e-03\n9931  3.17e-04 -1.63e-02  3.43e-02     5.38e-03     5.79e-03\n9932  1.06e-03 -3.12e-02  6.72e-02     1.44e-02     1.61e-02\n9933  1.39e-02 -1.46e-01  1.60e-01     9.24e-02     1.17e-01\n9934  2.47e-02 -1.85e-01  2.24e-01     1.52e-01     1.92e-01\n9935  4.94e-02 -2.07e-01  3.01e-01     3.23e-01     3.96e-01\n9936  5.43e-03 -7.62e-02  8.36e-02     2.78e-02     3.74e-02\n9937  1.23e-02 -2.19e-01  1.88e-01     7.89e-02     1.00e-01\n9938  2.21e-03 -5.20e-02  5.27e-02     1.60e-02     2.00e-02\n9939  9.31e-03 -1.16e-01  1.29e-01     5.99e-02     7.65e-02\n9940  1.76e-02 -1.62e-01  1.90e-01     1.03e-01     1.31e-01\n9941  4.19e-04 -2.02e-02  2.23e-02     3.95e-03     5.08e-03\n9942  2.13e-03 -4.74e-02  5.14e-02     1.62e-02     2.00e-02\n9943  4.99e-04 -2.08e-02  2.41e-02     4.08e-03     5.39e-03\n9944  1.48e-03 -4.22e-02  4.25e-02     9.59e-03     1.29e-02\n9945  4.57e-03 -7.33e-02  7.94e-02     2.62e-02     3.43e-02\n9946  8.95e-04 -3.50e-02  4.57e-02     1.06e-02     1.29e-02\n9947  1.86e-03 -6.31e-02  7.27e-02     2.12e-02     2.55e-02\n9948  6.85e-03 -1.24e-01  1.59e-01     6.74e-02     8.01e-02\n9949  4.01e-04 -1.64e-02  2.15e-02     4.21e-03     5.15e-03\n9950  3.87e-03 -8.79e-02  1.16e-01     3.41e-02     4.23e-02\n9951  1.09e-04 -7.58e-03  7.76e-03     1.58e-03     1.90e-03\n9952  6.22e-04 -2.49e-02  3.00e-02     7.17e-03     8.35e-03\n9953  1.34e-03 -4.78e-02  5.66e-02     1.44e-02     1.71e-02\n9954  2.00e-05 -2.53e-03  3.22e-03     4.14e-04     4.82e-04\n9955  1.19e-04 -6.55e-03  8.42e-03     1.61e-03     1.91e-03\n9956  2.83e-05 -2.85e-03  4.04e-03     4.78e-04     5.89e-04\n9957  9.50e-05 -6.61e-03  7.78e-03     1.28e-03     1.59e-03\n9958  3.09e-04 -1.39e-02  1.79e-02     3.53e-03     4.17e-03\n9959  9.76e-04 -2.76e-02  6.31e-02     1.15e-02     1.33e-02\n9960  1.91e-03 -5.03e-02  1.05e-01     2.31e-02     2.65e-02\n9961  6.98e-03 -1.12e-01  1.95e-01     7.33e-02     8.41e-02\n9962  4.13e-04 -1.33e-02  3.11e-02     4.67e-03     5.56e-03\n9963  3.52e-03 -7.48e-02  1.54e-01     3.76e-02     4.35e-02\n9964  1.15e-04 -5.64e-03  1.28e-02     1.73e-03     1.99e-03\n9965  6.61e-04 -1.92e-02  4.76e-02     7.63e-03     8.80e-03\n9966  1.24e-03 -3.67e-02  8.18e-02     1.55e-02     1.81e-02\n9967  2.22e-05 -2.01e-03  4.98e-03     4.24e-04     4.97e-04\n9968  1.24e-04 -5.65e-03  1.32e-02     1.73e-03     2.06e-03\n9969  2.98e-05 -2.40e-03  6.13e-03     5.36e-04     6.21e-04\n9970  9.32e-05 -5.38e-03  1.15e-02     1.40e-03     1.62e-03\n9971  2.89e-04 -1.18e-02  2.71e-02     3.80e-03     4.42e-03\n9972  9.29e-04 -3.36e-02  4.38e-02     1.10e-02     1.30e-02\n9973  1.91e-03 -5.92e-02  7.54e-02     2.10e-02     2.53e-02\n9974  6.90e-03 -1.21e-01  1.65e-01     6.79e-02     8.29e-02\n9975  4.26e-04 -1.57e-02  2.14e-02     4.29e-03     5.20e-03\n9976  3.83e-03 -8.26e-02  1.18e-01     3.38e-02     4.25e-02\n9977  1.11e-04 -7.38e-03  7.76e-03     1.55e-03     1.85e-03\n9978  6.23e-04 -2.43e-02  3.03e-02     7.05e-03     8.57e-03\n9979  1.29e-03 -4.35e-02  5.82e-02     1.44e-02     1.74e-02\n9980  2.20e-05 -2.53e-03  3.19e-03     4.14e-04     4.87e-04\n9981  1.16e-04 -6.60e-03  9.18e-03     1.60e-03     1.90e-03\n9982  2.79e-05 -3.02e-03  4.61e-03     4.89e-04     5.93e-04\n9983  8.92e-05 -6.49e-03  8.26e-03     1.29e-03     1.58e-03\n9984  2.92e-04 -1.44e-02  1.76e-02     3.52e-03     4.26e-03\n9985 -1.45e-02 -2.47e-01  1.50e-02     3.25e-02     1.24e-02\n9986 -2.85e-02 -3.71e-01  2.20e-05     3.98e-02     7.16e-03\n9987 -5.29e-02 -4.63e-01  3.76e-03     8.20e-02     1.99e-02\n9988 -3.32e-03 -9.72e-02  3.51e-04     5.25e-03     1.22e-03\n9989 -6.94e-03 -1.93e-01 -1.44e-05     8.03e-03     6.07e-04\n9990 -4.52e-03 -1.12e-01 -5.51e-06     5.66e-03     7.54e-04\n9991 -5.06e-03 -1.54e-01  1.95e-02     1.86e-02     1.06e-02\n9992 -1.77e-02 -2.72e-01 -4.86e-07     2.37e-02     3.86e-03\n9993 -9.04e-04 -3.85e-02 -6.67e-07     1.13e-03     1.28e-04\n9994 -4.25e-03 -1.05e-01 -3.33e-06     5.73e-03     8.62e-04\n9995 -5.57e-04 -2.61e-02  5.02e-05     8.88e-04     2.06e-04\n9996 -1.56e-03 -5.20e-02 -2.44e-06     1.90e-03     2.10e-04\n9997 -4.21e-03 -1.07e-01 -6.78e-06     5.22e-03     6.66e-04\n9998  9.33e-04 -3.50e-02  4.50e-02     1.07e-02     1.31e-02\n9999  2.02e-03 -6.04e-02  7.31e-02     2.12e-02     2.58e-02\n [ reached 'max' / getOption(\"max.print\") -- omitted 3833 rows ]\n\n\nCODE\nsummary(mfx)\n\n\n       Group             Term                 Contrast  Effect    2.5 %\n1 orthogonal pretty_condition        impasse - control -0.3225 -0.39719\n2 orthogonal      ospan_split high-memory - low-memory -0.0260 -0.09659\n3      other pretty_condition        impasse - control  0.1331  0.07487\n4      other      ospan_split high-memory - low-memory -0.0617 -0.12101\n5    angular pretty_condition        impasse - control  0.0221 -0.01069\n6    angular      ospan_split high-memory - low-memory -0.0111 -0.04425\n7 triangular pretty_condition        impasse - control  0.1654  0.06204\n8 triangular      ospan_split high-memory - low-memory  0.0971 -0.00596\n    97.5 %\n1 -0.24339\n2  0.04697\n3  0.19174\n4  0.00144\n5  0.05608\n6  0.02263\n7  0.26942\n8  0.20267\n\nModel type:  brmsfit \nPrediction type:  response \n\n\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n#model summary doesn't work for brms multinomial\n\n# DOESN'T WORK FOR BRMS\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n# \n# \n# #GET MODEL ESTIMATES\n# t <- as.data.frame(model_parameters(m, exponentiate = TRUE))\n# # \n# # #REFORMAT\n# x <- t %>%\n#   mutate(\n#     Parameter = str_remove_all(Parameter,\"_pretty\"),\n#     Parameter = str_remove_all(Parameter,\"b_mu\"),\n#     Interpretation = word(Parameter, 1, sep = \"_\"),\n#     Interpretation = fct_relevel(Interpretation, levels = c(\"other\",\"angular\",\"triangular\")),\n#     Factor = word(Parameter, 2, sep = \"_\"),\n#     Factor = recode_factor(Factor,\n#                          \"Intercept\" = \"(Intercept)\",\n#                          \"conditionimpasse\" = \"Condition[impasse]\",\n#                          \"ospan\" = \"OSPAN[high-memory]\",\n#                          \"conditionimpasse:ospan\" = \"Condition:OSPAN\"),\n#     Median = round(Median,2),\n#     CI_low = round(CI_low,2),\n#     CI_high = round(CI_high,2),\n#     pd = round(pd,2),\n#     ROPE_Percentage = round(ROPE_Percentage,2)) %>%\n#   arrange(Interpretation) %>%\n#   dplyr::select(-CI, -Rhat, -ESS) %>%\n#   rename( \"%_in_ROPE\"=\"ROPE_Percentage\",\n#   \"(Odds Ratio)\" = \"Median\") %>%\n#   dplyr::select(Interpretation, Factor, `(Odds Ratio)`, CI_low, CI_high, pd, `%_in_ROPE`)\n# \n# # #KNIT\n# title = \"Study 3C (OSPAN) | Question Interpretation | Mixed Multinomial Regression\"\n# tab <- kbl(x, format = \"latex\", caption = title,\n#            booktabs = FALSE) %>% kable_classic() %>%\n# footnote(general = paste(\"Model Interpretation ~ \",b$Model[2], \"Bayes Factor \", format( exp(b$log_BF[2]), digits =2 ) ), footnote_as_chunk = T, general_title = \"\")\n# writeLines(tab, \"tables/SGC3C_OSPAN_BRMS_state.tex\")\n\n\n\n\nVisualize\n\n\nCODE\n## PLOT INTERACTION\nlibrary(ggeffects)\nggpredict(m, terms = c(\"pretty_condition\",\"ospan_split\")) %>% \n  plot(connect.lines = TRUE) + \n  scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 2)) + \n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"Condition\"\n) + theme(legend.position=\"bottom\")\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\n\n\n\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, vline.color = \"red\", \n#            show.intercept = TRUE, \n#            show.values = TRUE,\n#            p.threshold = 0.1, #manually adjust to account for directional test\n#            ci.lvl = 0.90 ) + #manually adjusted for directional test   \n#   labs(title = \"Model Estimate | Odds Ratio\",\n#        subtitle = \"\",\n#        x = \"Condition\")\n\n\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(m, exponentiate = TRUE, component = \"all\")\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n# + theme_clean()\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\nPicking joint bandwidth of 0.0938\n\n\nWarning: Removed 7200 rows containing non-finite values (stat_density_ridges).\n\n\n\n\n\nCODE\nresult <- rope(m)\nplot(result)\n\n\n\n\n\nCODE\n##TODO see documentation for removing, reorganizing parameters\nresult <- pd(m, effects = \"fixed\", component = \"all\")\nplot(result, show_intercept = FALSE,\n     n_columns = 3)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\",\n           axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n##WORKING\n# https://mjskay.github.io/ggdist/reference/stat_slab.html\n## VIS probability of correct response\n#TAKES A REALLY LONG TIME\n\n#1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, ospan_split, subject, q) %>%\n#   add_epred_draws(m,\n#                    # ndraws = 100, # n = 100,\n#                    # dpar = TRUE,\n#                    transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n\n\n# draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n\n#OR load from file\n# draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n\n#2| VISUALIZE PREDICTIONS | GGDIST\n##TODO figure out height normalization.\n##do it with much smaller number of draws \n#TODO adjust bandwidth/smoothing? + put on same line + \n#TAKES A REAAALY LONG TIME\n# d <- \n\n# d <- draws %>% sample_n(10) %>% \n#   ggplot(aes(x = .epred,  y = pretty_condition, fill = ospan_split)) +\n#   stat_slab(width = c(.95), alpha = 0.5, normalize=\"xy\") +\n#   facet_wrap(~.category) +\n#   #   #normalize = all, panels, xy, groups, none\n#   xlim(0,1) + labs(\n#     title = \"Model Predicted Probability of Correct Response\",\n#     x = \"probability of correct response\",\n#     y = \"Interpretation\"\n#   ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()\n# # \n# # ggsave(d, filename = \"figures/sgc3a_BBm.cat.CrSQ_lab_posterior.svg\", width = 6, height =4)\nd\n\n\nSummary of Posterior Distribution\n\nParameter                                                   | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                                           |  -1.95 | [-2.80, -1.18] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1040.00\nmuangular_Intercept                                         |  -4.10 | [-5.53, -2.72] |   100% | [-0.18, 0.18] |        0% | 1.000 | 1378.00\nmutriangular_Intercept                                      |  -4.82 | [-6.86, -2.93] |   100% | [-0.18, 0.18] |        0% | 1.000 | 1102.00\nmuother_pretty_conditionimpasse                             |   1.81 | [ 1.23,  2.45] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1993.00\nmuother_ospan_splithighMmemory                              |  -0.18 | [-0.81,  0.45] | 71.52% | [-0.18, 0.18] |    38.68% | 1.001 | 2323.00\nmuother_pretty_conditionimpasse:ospan_splithighMmemory      |  -0.08 | [-0.98,  0.81] | 56.37% | [-0.18, 0.18] |    32.33% | 1.001 | 1907.00\nmuangular_pretty_conditionimpasse                           |   1.85 | [ 0.79,  3.00] | 99.98% | [-0.18, 0.18] |        0% | 1.001 | 1900.00\nmuangular_ospan_splithighMmemory                            |   0.16 | [-1.01,  1.32] | 60.73% | [-0.18, 0.18] |    25.18% | 1.002 | 1892.00\nmuangular_pretty_conditionimpasse:ospan_splithighMmemory    |  -0.33 | [-1.84,  1.23] | 66.37% | [-0.18, 0.18] |    17.42% | 1.000 | 1986.00\nmutriangular_pretty_conditionimpasse                        |   2.45 | [ 0.24,  4.68] | 98.75% | [-0.18, 0.18] |        0% | 1.002 |  824.00\nmutriangular_ospan_splithighMmemory                         |   0.07 | [-2.25,  2.28] | 52.40% | [-0.18, 0.18] |    12.63% | 1.005 | 1164.00\nmutriangular_pretty_conditionimpasse:ospan_splithighMmemory |   2.76 | [-0.12,  5.52] | 97.03% | [-0.18, 0.18] |     1.37% | 1.001 | 1268.00\n\n\n\n\nCODE\n###VISUALIZE\n#make predictions\npred <- predictions(m)\n\n#get draws\ndraws <- posteriordraws(pred)\n\n#plot draws\n\n##PLOT ANGULAR\nggplot(draws %>% sample_n(1000), aes(x = draw, fill = group)) +\n    geom_density(alpha = 0.8, color = \"white\", trim = TRUE) +\n    facet_grid(ospan_split ~ pretty_condition) +\n    labs(x = \"Predicted probability\",\n         y = \"Density\",\n         fill = \"INTERPRETATION\")\n\n\n\n\n\nCODE\n## AS DENSITY RIDGES\nggplot(draws %>% sample(100000), aes(x = draw, y = pretty_condition, fill = ospan_split)) +\n    geom_density_ridges(alpha = 0.5, rel_min_height = 0.01) +\n    facet_grid(group ~ .) +\n    labs(x = \"Predicted probability\",\n         y = \"Density\")\n\n\nPicking joint bandwidth of 0.00562\n\n\nPicking joint bandwidth of 0.0463\n\n\nPicking joint bandwidth of 0.029\n\n\nPicking joint bandwidth of 0.0332\n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n#CHECK Fit of posterior predictive to data\npp_check(m, ndraws=1000)\n\n\n\n\n\nCODE\n#CHECK posterior vs. priors\nresult <- estimate_density(m)\nplot(result, stack = FALSE, priors= TRUE)\n\n\n\n\n\nCODE\n#CHECK model\nplot(m)"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#cumulative-progress",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#cumulative-progress",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "CUMULATIVE PROGRESS",
    "text": "CUMULATIVE PROGRESS\n\n\nCODE\n#SETUP\ndf_scaled <- read_csv('analysis/SGC3A/data/2-scored-data/sgc3a_scaled_progress_OSPAN.csv')\n\n\nRows: 1729 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): subject, mode, pretty_condition\ndbl (2): question, score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCODE\ndf_absolute <- read_csv('analysis/SGC3A/data/2-scored-data/sgc3a_absolute_progress_OSPAN.csv')\n\n\nRows: 1729 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): subject, mode, pretty_condition\ndbl (2): question, score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCODE\n## JOIN OSPAN score to progress data \n\n#get ospan scores\ntemp_ospans <- df_subjects %>% dplyr::select(subject,\n  OSPAN.weighted, ospan_split) \n\n#MERGE into progress \ndf_scaled <- merge(df_scaled, temp_ospans, by=\"subject\")\ndf_absolute <- merge(df_absolute, temp_ospans, by=\"subject\")\n\n\n\nVisualize Progress over Task\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.10, h=0.0), size=1) +\n # geom_line( size=1) +\n facet_wrap(ospan_split ~ pretty_condition) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n # scale_y_continuous(lim=c(-13,13))+\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_absolute, aes(x = question, y = score, group = subject, alpha = 0.1, color = pretty_condition)) + \n # geom_line(position=position_jitter(w=0.15, h=0.15), size=0.5) +\n geom_line(position=position_jitter(w=0.15, h=0.15), size=1.5) +\n # geom_line( size=1) +\n facet_wrap(ospan_split ~ pretty_condition) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n # scale_y_continuous(lim=c(0,13))+\n theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#q1-accuracy",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#q1-accuracy",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "Q1 ACCURACY",
    "text": "Q1 ACCURACY\n\nSetup\n\n\nCODE\ndf <- df_items %>% filter(q==1) %>% dplyr::select(accuracy, pretty_condition, ospan_split)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~ospan_split) +\n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Accuracy\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Impasse Condition yields a greater proportion of correct responses\")\n\n\n\n\n\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\npaste(\"Proportions of Correct Responses by Condition\")\n\n\n[1] \"Proportions of Correct Responses by Condition\"\n\n\nCODE\ntable(df$accuracy, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n           \n            control impasse   Sum\n  incorrect   0.892   0.765 0.827\n  correct     0.108   0.235 0.173\n  Sum         1.000   1.000 1.000\n\n\nCODE\npaste(\"Number of Correct Responses by Condition\")\n\n\n[1] \"Number of Correct Responses by Condition\"\n\n\nCODE\ntable(df$accuracy, df$pretty_condition, df$ospan_split) %>% addmargins(2) %>% #display sum for row\n      addmargins(1) #sanity check sum of columns\n\n\n, ,  = low-memory\n\n           \n            control impasse Sum\n  incorrect      28      31  59\n  correct         3       5   8\n  Sum            31      36  67\n\n, ,  = high-memory\n\n           \n            control impasse Sum\n  incorrect      30      21  51\n  correct         4      11  15\n  Sum            34      32  66\n\n\n\n\nCHI SQUARE [YES]\n\n\nCODE\n#CHI SQUARE ON ACCURACY X OSPAN-SPLIT in LOW WORKING MEMORY\ndf_low <- df %>% filter(ospan_split == \"low-memory\")\n# table(df_low$pretty_condition, df_low$accuracy)\nchisq.test( x = df_low$pretty_condition, y = df_low$accuracy, correct = TRUE)\n\n\nWarning in chisq.test(x = df_low$pretty_condition, y = df_low$accuracy, : Chi-\nsquared approximation may be incorrect\n\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  df_low$pretty_condition and df_low$accuracy\nX-squared = 0.02, df = 1, p-value = 0.9\n\n\nCODE\n#CHI SQUARE ON ACCURACY X OSPAN-SPLIT in HIGH WORKING MEMORY\ndf_high <- df %>% filter(ospan_split == \"high-memory\")\n#table(df_high$pretty_condition, df_high$accuracy)\nchisq.test( x = df_high$pretty_condition, y = df_high$accuracy,correct = TRUE)\n\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  df_high$pretty_condition and df_high$accuracy\nX-squared = 4, df = 1, p-value = 0.06\n\n\nCODE\n#significant if correct = FALSE\n\n\nTODO why do these chisqrs not match the grouped bar stats? ::: {.cell}\n\nCODE\n# INTERACTION (OSPAN X CONDITION)\ngrouped_ggbarstats( data = df, x = accuracy, y = pretty_condition, \n                    grouping.var = ospan_split,\n                    type = \"nonparametric\")\n\n\n\n\n\nCODE\n# MAIN EFFECT CONDITION (yes)\n# ggbarstats( data = df, x = accuracy, y = pretty_condition, \n#                     type = \"nonparametric\")\n\n# MAIN EFFECT OSPAN (none)\n# ggbarstats( data = df, x = accuracy, y = ospan_split, \n#                     type = \"nonparametric\")\n\n:::\nThere is no non-parametric version of two-way ANOVA, so we perform individual CHI-SQR tests. We split the data into two groups (low memory, and high memory, based on the median split). For each, we run a CHI SQR test of independence testing the null hypothesis that Q1 ACCURACY is independent of CONDITION. In the low-working memory group, we cannot reject the null hypothesis, suggesting that accuracy does not differ by condition. But in the HIGH working memory group we do reject the null hypothesis. The proportion of correct responses in IMPASSE is much higher than in CONTROL, but only in the HIGH WORKING MEMORY group.\n\n\nLOGISTIC REGRESSION (MAIN EFFECT CONDITION)\nTODO:: consider weighted(centered) continuous vs ospan split\nFit a logistic regression predicting accuracy (absolute score) (n = 133) by condition (k = 2).\n\n\nParameter estimate: \\(\\beta_{0}\\) = Log Odds of (correct) responses in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of correct response in CONTROL condition\nParameter estimate: \\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for correct response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of correct response in IMPASSE (vs) CONTROL\nNull hypothesis:\\(\\beta_{impasse} \\le 0\\) the odds for a correct response does not change, or decreases\nAlternative hypothesis: \\(\\beta_{impasse} \\gt 0\\) the odds of a correct response increases\n\n\nFit CONDITION Model\nFirst, we fit a logistic regression with condition as predictor, and compare its fit to an empty (intercept-only) model.\n\n\nCODE\n# MODEL FITTING ::::::::\n\n#: 1 EMPTY MODEL baseline glm model intercept only\nm.0 = glm(accuracy ~ 1, data = df, family = \"binomial\")\n# print(\"EMPTY MODEL\")\n# summary(m0)\n\n#: 2 CONDITION model\nm.C <- glm( accuracy ~ pretty_condition, data = df, family = \"binomial\")\n# print(\"PREDICTOR MODEL\")\n# summary(m1)\n\n#: 2 TEST SUPERIOR FIT\npaste(\"AIC wth predictor is lower than empty model?\", m.0$aic > m.C$aic)\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(m.0,m.C) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName | Model | df | df_diff | Chi2 |     p\n------------------------------------------\nm.0  |   glm |  1 |         |      |      \nm.C  |   glm |  2 |       1 | 3.88 | 0.049\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(m.0,m.C))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0489409367734944\"\n\n\nCODE\nsummary(m.C)\n\n\n\nCall:\nglm(formula = accuracy ~ pretty_condition, family = \"binomial\", \n    data = df)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-0.733  -0.733  -0.477  -0.477   2.111  \n\nCoefficients:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -2.115      0.400   -5.28  1.3e-07 ***\npretty_conditionimpasse    0.936      0.492    1.90    0.057 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 122.49  on 132  degrees of freedom\nResidual deviance: 118.62  on 131  degrees of freedom\nAIC: 122.6\n\nNumber of Fisher Scoring iterations: 4\n\n\nCODE\n##### Fit OSPAN Models\n\n#: 3 OSPAN ONLY MODEL \nm.O = glm(accuracy ~ ospan_split, data = df, family = \"binomial\")\n# print(\"EMPTY MODEL\")\n# summary(m0)\n\n#: 3 TEST SUPERIOR FIT\npaste(\"AIC OSPAN predictor is lower than CONDITION model?\", m.C$aic > m.O$aic)\n\n\n[1] \"AIC OSPAN predictor is lower than CONDITION model? FALSE\"\n\n\nCODE\n#: 4 OSPAN + CONDITION model\nm.CO <- glm( accuracy ~ pretty_condition + ospan_split, data = df, family = \"binomial\")\n# print(\"PREDICTOR MODEL\")\nsummary(m.CO)\n\n\n\nCall:\nglm(formula = accuracy ~ pretty_condition + ospan_split, family = \"binomial\", \n    data = df)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-0.870  -0.599  -0.559  -0.373   2.323  \n\nCoefficients:\n                        Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               -2.629      0.523   -5.03    5e-07 ***\npretty_conditionimpasse    1.002      0.499    2.01    0.045 *  \nospan_splithigh-memory     0.851      0.487    1.75    0.081 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 122.49  on 132  degrees of freedom\nResidual deviance: 115.42  on 130  degrees of freedom\nAIC: 121.4\n\nNumber of Fisher Scoring iterations: 4\n\n\nCODE\ncar::Anova(m.CO, type=3)\n\n\nAnalysis of Deviance Table (Type III tests)\n\nResponse: accuracy\n                 LR Chisq Df Pr(>Chisq)  \npretty_condition     4.33  1      0.037 *\nospan_split          3.19  1      0.074 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#: 4 TEST SUPERIOR FIT\npaste(\"AIC wth OSPAN is lower than CONDITION only model?\", m.C$aic > m.CO$aic)\n\n\n[1] \"AIC wth OSPAN is lower than CONDITION only model? TRUE\"\n\n\nCODE\ntest_lrt(m.C,m.CO) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName | Model | df | df_diff | Chi2 |     p\n------------------------------------------\nm.C  |   glm |  2 |         |      |      \nm.CO |   glm |  3 |       1 | 3.19 | 0.074\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(m.C,m.CO))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0739762476630023\"\n\n\nCODE\n##Adding OSPAN as a predictor (no interaction) decreases AIC, but does not improve fit (LRT)\n\n\n#: 5 OSPAN + CONDITION INTERACTION model\nm.C.O <- glm( accuracy ~ pretty_condition * ospan_split, data = df, family = \"binomial\")\n# print(\"PREDICTOR MODEL\")\n# summary(m.C.O)\n# car::Anova(m.C.O, type =3)\n\n#: 5 TEST SUPERIOR FIT\npaste(\"AIC wth OSPAN IXN lower than CONDITION + OSPAN only model?\", m.CO$aic > m.C.O$aic)\n\n\n[1] \"AIC wth OSPAN IXN lower than CONDITION + OSPAN only model? FALSE\"\n\n\nCODE\ntest_lrt(m.CO,m.C.O) \n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName  | Model | df | df_diff | Chi2 |     p\n-------------------------------------------\nm.CO  |   glm |  3 |         |      |      \nm.C.O |   glm |  4 |       1 | 0.89 | 0.346\n\n\nCODE\npaste(\"AIC wth OSPAN IXN is lower than CONDITION only model?\", m.C$aic > m.C.O$aic)\n\n\n[1] \"AIC wth OSPAN IXN is lower than CONDITION only model? TRUE\"\n\n\nCODE\ntest_lrt(m.C,m.C.O) \n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName  | Model | df | df_diff | Chi2 |     p\n-------------------------------------------\nm.C   |   glm |  2 |         |      |      \nm.C.O |   glm |  4 |       2 | 4.08 | 0.130\n\n\nAdding OSPAN interaction does not improve model fit over condition-only model, or main effects only model.\n\n\nDescribe\n\n\nCODE\n#set model\nm <- m.C.O\n\n# DESCRIBE MODEL ::::::::::::::::::::::::::::::::::::: \n\nprint(\"PREDICTOR MODEL [default two-tailed sig test]\")\n\n\n[1] \"PREDICTOR MODEL [default two-tailed sig test]\"\n\n\nCODE\nsummary(m)\n\n\n\nCall:\nglm(formula = accuracy ~ pretty_condition * ospan_split, family = \"binomial\", \n    data = df)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-0.918  -0.547  -0.500  -0.451   2.161  \n\nCoefficients:\n                                               Estimate Std. Error z value\n(Intercept)                                      -2.234      0.607   -3.68\npretty_conditionimpasse                           0.409      0.775    0.53\nospan_splithigh-memory                            0.219      0.808    0.27\npretty_conditionimpasse:ospan_splithigh-memory    0.959      1.011    0.95\n                                               Pr(>|z|)    \n(Intercept)                                     0.00024 ***\npretty_conditionimpasse                         0.59782    \nospan_splithigh-memory                          0.78656    \npretty_conditionimpasse:ospan_splithigh-memory  0.34295    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 122.49  on 132  degrees of freedom\nResidual deviance: 114.54  on 129  degrees of freedom\nAIC: 122.5\n\nNumber of Fisher Scoring iterations: 4\n\n\nCODE\nprint(\"SIGNIFIGANCE TEST\")\n\n\n[1] \"SIGNIFIGANCE TEST\"\n\n\nCODE\ncar::Anova(m, type=3)\n\n\nAnalysis of Deviance Table (Type III tests)\n\nResponse: accuracy\n                             LR Chisq Df Pr(>Chisq)\npretty_condition                0.284  1       0.59\nospan_split                     0.074  1       0.79\npretty_condition:ospan_split    0.887  1       0.35\n\n\nCODE\n# MANUAL ONE-SIDED SIGTEST ::::::::::::::::::::::::::: \n\n# one-sided (right tail) z test for B COEFFICIENT\n#https://stats.stackexchange.com/questions/330655/strategy-for-a-one-sided-test-of-glms-coefficients\n\n#SANITY CHECK 2-tailed test should match the model output\n# tt <- 2*pnorm(summary(m)$coefficients[2:4], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,3))\n# ot <- pnorm(summary(m)$coefficients[2:4], lower.tail = F)\n# paste(\"BUT we want a one tailed directional, null: B <= 0: \",round(ot,3))\n# paste(\"adjusted confint for directional hypothesis\")\n# (dcint <- confint(m, level = 0.90)) # get 90% for right side))\n# # https://stats.stackexchange.com/questions/20734/is-a-1-sided-90-prediction-interval-equivalent-to-a-2-sided-95-prediction-inte\n\n#:::::::: INTERPRET COEFFICIENTS\n\n# print(\"Confidence Interval —- LOG ODDS\")\n# confint(m1) #not adjusted for 1-tailed\nprint(\"Coefficients —- ODDS RATIOS\")\n\n\n[1] \"Coefficients —- ODDS RATIOS\"\n\n\nCODE\n(e <- cbind( exp(coef(m)), exp(confint(m)))) #exponentiated, not adjusted\n\n\nWaiting for profiling to be done...\n\n\n                                                      2.5 % 97.5 %\n(Intercept)                                    0.107 0.0256  0.302\npretty_conditionimpasse                        1.505 0.3380  7.881\nospan_splithigh-memory                         1.244 0.2528  6.786\npretty_conditionimpasse:ospan_splithigh-memory 2.610 0.3409 19.436\n\n\nCODE\n# (e <- cbind( exp(coef(m)), exp(dcint))) #exponentiated, adjusted\n\n#TODO INTERACTIONS & ESTIMATED MARGINAL MEANS \n# print(\"MODEL PREDICTIONS\")\n# Retrieve predictions as probabilities \n# (for each level of the predictor)\n# pred.control <- predict(m,data.frame(pretty_condition=\"control\"),type=\"response\")\n#this should match : plogis(intercept coefficient)\n# paste(\"Probability of success in control,\", pred.control)\n# pred.impasse <- predict(m,data.frame(pretty_condition=\"impasse\"),type=\"response\")\n#this should match : plogis(intercept coefficient + predictor coeff)\n# paste(\"Probability of success in impasse,\", pred.impasse)\n\n\n\n\nInference\nTODO double check chisqrs vs grouped_barstats. Why is the tests not the same. Otherwise report mm.C as ospan didn’t improve fit\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n\n## | PLOT TESTS\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n#ONLY FOR BAYESIAN VERSION\n# result <- rope(m)\n# plot(result)\n# \n# result <- pd(m)\n# plot(result)\n\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\",\n           axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")  \n\n\n$pretty_condition\n\n\n\n\n\n\n$ospan_split\n\n\n\n\n\nCODE\nplot_model(m, type = \"eff\")  \n\n\n$pretty_condition\n\n\n\n\n\n\n$ospan_split\n\n\n\n\n\nCODE\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.11\n0.03 – 0.30\n<0.001\n\n\npretty condition[impasse]\n1.51\n0.34 – 7.88\n0.598\n\n\nospan split [high-memory]\n1.24\n0.25 – 6.79\n0.787\n\n\npretty condition[impasse] * ospan split[high-memory]\n2.61\n0.34 – 19.44\n0.343\n\n\nObservations\n133\n\n\nR2 Tjur\n0.066\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report::report(m)\n\n#print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"MODEL DIAGNOSTICS\")\n\n\n[1] \"MODEL DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#q1-interpretation-state",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#q1-interpretation-state",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "Q1 INTERPRETATION STATE",
    "text": "Q1 INTERPRETATION STATE\nDo Ss in the IMPASSE condition offer less-orthogonal interpretations on first question?\nWhile absolute accuracy score tells us whether a participant successfully interpreted the coordinate system, it doesn’t allow us to differentiate between different kinds of incorrect interpretations. Here we examine the (categorical) interpretation state type based on the nature of subject’s response, and determine if these interpretations differ by experimental condition. State is a 3-category derived response variable that groups the following interpretations:\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular and ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n\n\n\n\n\n\n\n\nResearch Question\nDoes Ss in the impasse condition produce less orthogonal responses on the first question?\n\n\n\n\nHypothesis\nH1A | Ss in the IMPASSE condition will have a higher likelihood of producing unknown and and triangle-like response states, relative to orthogonal response states, on the first question\n\n\nData\n\ndata: df_items where q == 1\noutcome: state ( 4 level factor from 5 level high_interpretation )\npredictor: condition [between-subjects factor]\n\n\n\nAnalysis Strategy\n\nMultinomial (Logistic) Regression on state predicted by condition\n\nAlternative:\n\nOrdinal regression on state; but model doesn’t satisfy proportional odds assumption (parallel slopes)\nMultinomial or Ordinal regression on high_interpretation (5 category interpretation state which distinguishes between uncertain (blank, reference) unclassifiable, triangle-like and true triangular.) There are some cells with zeros, however (no uncertain responses in control) which means the model can’t accurately estimate those comparisons\n\n\n\n\n\nSetup\n\n\nCODE\ndf <- df_items %>% filter(q==1) %>% \n  dplyr::select(pretty_condition, ospan_split, state)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~ospan_split) +\n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Interpretation\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df$state, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             control impasse    Sum\n  orthogonal  0.8154  0.2647 0.5338\n  other       0.0462  0.3824 0.2180\n  angular     0.0308  0.1176 0.0752\n  triangular  0.1077  0.2353 0.1729\n  Sum         1.0000  1.0000 1.0000\n\n\nCODE\n(t <- table(df$state, df$pretty_condition, df$ospan_split) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n, ,  = low-memory\n\n            \n             control impasse Sum\n  orthogonal      26      15  41\n  other            1      13  14\n  angular          1       3   4\n  triangular       3       5   8\n  Sum             31      36  67\n\n, ,  = high-memory\n\n            \n             control impasse Sum\n  orthogonal      27       3  30\n  other            2      13  15\n  angular          1       5   6\n  triangular       4      11  15\n  Sum             34      32  66\n\n\n\n\nMULTINOMIAL REGRESSION\nTODO:: USE MBLOGIT VERSION WITH P VALUES IN MODEL\nDoes condition affect the response state of Q1?\nFit a logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\n3 equations will be estimated (# categories - 1); each representing the odds of answering in that particular interpretation (vs) the reference category (orthogonal answer) [essentially a series of binary logistic regressions, but instead of incorrect/correct, comparing [reference category] vs [this category])\nFor each equation:\n\n\\(\\beta_{0}\\) = Log Odds of [this category type vs. reference category type) response in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of [this category type vs. reference category type] response in CONTROL condition\n\\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for [this category] type response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of [this. vs reference category type] response in IMPASSE (vs) CONTROL\nTwo-tailed NHST Null hypothesis: \\(\\beta_{impasse} = 0\\) the odds for [this category of response vs. reference] are not different for IMPASSE condition\nAlternative hypothesis: \\(\\beta_{impasse} \\ne 0\\) the odds of [this category of response vs. reference] increases or decreases for IMPASSE condition\n\n\n\nFit CONDITION Model\n\n\nCODE\n#check reference level \nprint(\"Categories (first is reference)\")\n\n\n[1] \"Categories (first is reference)\"\n\n\nCODE\nlevels(df$state)\n\n\n[1] \"orthogonal\" \"other\"      \"angular\"    \"triangular\"\n\n\nCODE\n#FIT EMPTY MODEL\n# print(\"EMPTY MODEL\")\ncatm.0 <- multinom(state ~ 1, data = df)\n\n\n# weights:  8 (3 variable)\ninitial  value 184.377150 \niter  10 value 155.544397\nfinal  value 154.972366 \nconverged\n\n\nCODE\n# summary(catm.0)\n\n#FIT PREDICTOR MODEL\n# print(\"PREDICTOR MODEL\")\ncatm.C <- multinom(formula = state ~ pretty_condition, data = df, model = TRUE)\n\n\n# weights:  12 (6 variable)\ninitial  value 184.377150 \niter  10 value 131.798993\nfinal  value 131.798569 \nconverged\n\n\nCODE\n# summary(catm.C)\n\n#COMPARE MODEL FIT\npaste(\"AIC wth predictor is lower than empty model?\", catm.0$AIC > catm.C$AIC)\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(catm.0, catm.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff |  Chi2 |      p\n-------------------------------------------------\ncatm.0 | multinom |  3 |         |       |       \ncatm.C | multinom |  6 |       3 | 46.35 | < .001\n\n\nCODE\n##compare bayesian version\n#library(brms)\n# b.cat <- brm( state2 ~ pretty_condition, data = df, family = \"categorical\", backend = \"cmdstanr\")\n# summary(b.cat)\n# plot_model(b.cat)\n# report(b.cat)\n# coefficient estimates are very simliar to catm. super cool!\n\n##compare mclogit version\n#\"baseline-category logit model\n# https://www.elff.eu/software/mclogit/manual/mblogit/\n# blm1 <- mblogit(state2 ~ pretty_condition , data = df)\n# summary(blm1)\n#identical to catm. super cool!\n\n\nAIC in predictor model is less than empty model, and likelihood ratio test indicates predictor model is significantly better fit to the sample data than the empty (intercept only) model.\n\n\nFit OSPAN Model\n\n\nCODE\n#FIT OSPAN only MODEL\n# print(\"OSPAN ONLY MODEL\")\ncatm.O <- multinom(state ~ ospan_split, data = df)\n\n\n# weights:  12 (6 variable)\ninitial  value 184.377150 \niter  10 value 152.820024\nfinal  value 152.819667 \nconverged\n\n\nCODE\n# summary(catm.O) \n# car::Anova(catm.O) \nprint(\"OSPAN ONLY better than empty?\")\n\n\n[1] \"OSPAN ONLY better than empty?\"\n\n\nCODE\ntest_lrt(catm.0, catm.O)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff | Chi2 |     p\n-----------------------------------------------\ncatm.0 | multinom |  3 |         |      |      \ncatm.O | multinom |  6 |       3 | 4.31 | 0.230\n\n\nCODE\n#FIT OSPAN + CONDITION\n# print(\"OSPAN + CONDITION MODEL\")\ncatm.CO <- multinom(formula = state ~ pretty_condition + ospan_split, data = df, model = TRUE)\n\n\n# weights:  16 (9 variable)\ninitial  value 184.377150 \niter  10 value 128.125771\nfinal  value 128.076360 \nconverged\n\n\nCODE\n# summary(catm.CO)\ncar::Anova(catm.CO) #MainEff condition, marginal ospan\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: state\n                 LR Chisq Df Pr(>Chisq)    \npretty_condition     49.5  3      1e-10 ***\nospan_split           7.4  3      0.059 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#COMPARE MODEL FIT\npaste(\"Adding OSPAN to CONDITION lowers AIC?\", catm.C$AIC > catm.CO$AIC)\n\n\n[1] \"Adding OSPAN to CONDITION lowers AIC? TRUE\"\n\n\nCODE\ntest_lrt(catm.C, catm.CO)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff | Chi2 |     p\n------------------------------------------------\ncatm.C  | multinom |  6 |         |      |      \ncatm.CO | multinom |  9 |       3 | 7.44 | 0.059\n\n\nAdding (main effect) predictor of OSPAN decreases AIC and is a marginally better fit. In this model, there is still only a main effect of condition. OSPAN is not a significant main effect.\n\n\nCODE\n#FIT OSPAN * CONDITION\n# print(\"OSPAN * CONDITION MODEL\")\ncatm.C.O <- multinom(formula = state ~ pretty_condition * ospan_split, data = df, model = TRUE)\n\n\n# weights:  20 (12 variable)\ninitial  value 184.377150 \niter  10 value 126.168657\niter  20 value 125.962345\nfinal  value 125.962341 \nconverged\n\n\nCODE\ncar::Anova(catm.C.O, type = 3)\n\n\nAnalysis of Deviance Table (Type III tests)\n\nResponse: state\n                             LR Chisq Df Pr(>Chisq)    \npretty_condition                16.37  3    0.00095 ***\nospan_split                      0.36  3    0.94767    \npretty_condition:ospan_split     4.23  3    0.23787    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n# summary(catm.C.O)\n# car::Anova(catm.C.O) #MainEff condition, marginal ospan\n#COMPARE MODEL FIT\npaste(\"Adding INTERACTION lowers AIC?\", catm.CO$AIC > catm.C.O$AIC)\n\n\n[1] \"Adding INTERACTION lowers AIC? FALSE\"\n\n\nCODE\ntest_lrt(catm.CO, catm.C.O)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName     |    Model | df | df_diff | Chi2 |     p\n-------------------------------------------------\ncatm.CO  | multinom |  9 |         |      |      \ncatm.C.O | multinom | 12 |       3 | 4.23 | 0.238\n\n\nAdding interaction of OSPAN does not improve fit and does not lower AIC. In the IXN model, only the main effect of condition is significant.\n\n\nCODE\n##compare bayesian version\n# library(brms)\n# b.cat <- brm( state ~ pretty_condition*ospan_split, data = df, family = \"categorical\", backend = \"cmdstanr\")\n# summary(b.cat)\n# plot_model(b.cat) \n# plot(equivalence_test(b.cat))\n# plot(rope(b.cat))\n# report(b.cat)\n# coefficient estimates are very simliar to catm. super cool!\n\n##compare mclogit version\n#\"baseline-category logit model\n# https://www.elff.eu/software/mclogit/manual/mblogit/\nblm1 <- mblogit(state ~ pretty_condition *ospan_split , data = df)\n\n\n\nIteration 1 - deviance = 253 - criterion = 0.272\nIteration 2 - deviance = 252 - criterion = 0.00566\nIteration 3 - deviance = 252 - criterion = 0.000157\nIteration 4 - deviance = 252 - criterion = 2.98e-07\nIteration 5 - deviance = 252 - criterion = 2.53e-12\nconverged\n\n\nCODE\nsummary(blm1)\n\n\n\nCall:\nmblogit(formula = state ~ pretty_condition * ospan_split, data = df)\n\nEquation for other vs orthogonal:\n                                               Estimate Std. Error z value\n(Intercept)                                      -3.258      1.019   -3.20\npretty_conditionimpasse                           3.115      1.087    2.87\nospan_splithigh-memory                            0.655      1.255    0.52\npretty_conditionimpasse:ospan_splithigh-memory    0.954      1.459    0.65\n                                               Pr(>|z|)   \n(Intercept)                                      0.0014 **\npretty_conditionimpasse                          0.0042 **\nospan_splithigh-memory                           0.6016   \npretty_conditionimpasse:ospan_splithigh-memory   0.5132   \n\nEquation for angular vs orthogonal:\n                                                  Estimate Std. Error z value\n(Intercept)                                        -3.2581     1.0190   -3.20\ntri(Intercept)                                     -2.1595     0.6097   -3.54\npretty_conditionimpasse                             1.6487     1.1994    1.37\ntripretty_conditionimpasse                          1.0609     0.7990    1.33\nospan_splithigh-memory                             -0.0377     1.4407   -0.03\ntriospan_splithigh-memory                           0.2499     0.8117    0.31\npretty_conditionimpasse:ospan_splithigh-memory      2.1580     1.7346    1.24\ntripretty_conditionimpasse:ospan_splithigh-memory   2.1480     1.1618    1.85\n                                                  Pr(>|z|)    \n(Intercept)                                         0.0014 ** \ntri(Intercept)                                      0.0004 ***\npretty_conditionimpasse                             0.1693    \ntripretty_conditionimpasse                          0.1843    \nospan_splithigh-memory                              0.9791    \ntriospan_splithigh-memory                           0.7581    \npretty_conditionimpasse:ospan_splithigh-memory      0.2135    \ntripretty_conditionimpasse:ospan_splithigh-memory   0.0645 .  \n\nEquation for triangular vs orthogonal:\n                                               Estimate Std. Error z value\n(Intercept)                                      -2.159      0.610   -3.54\npretty_conditionimpasse                           1.061      0.799    1.33\nospan_splithigh-memory                            0.250      0.812    0.31\npretty_conditionimpasse:ospan_splithigh-memory    2.148      1.162    1.85\n                                               Pr(>|z|)    \n(Intercept)                                      0.0004 ***\npretty_conditionimpasse                          0.1843    \nospan_splithigh-memory                           0.7581    \npretty_conditionimpasse:ospan_splithigh-memory   0.0645 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNull Deviance:     369 \nResidual Deviance: 252 \nNumber of Fisher Scoring iterations:  5 \nNumber of observations:  133 \n\n\nCODE\n# car::Anova(blm1) #todo need to separate by individual equation\n#identical to catm. super cool!\n\n\nAIC in predictor model is less than empty model, and likelihood ratio test indicates predictor model is significantly better fit to the sample data than the empty (intercept only) model.\n\n\nDescribe\n\n\nCODE\n#set model\nm <- catm.C.O\n\n#::::::::INTERPRETATION\npaste(\"MODEL SUMMARY\")\n\n\n[1] \"MODEL SUMMARY\"\n\n\nCODE\nsummary(m)\n\n\nCall:\nmultinom(formula = state ~ pretty_condition * ospan_split, data = df, \n    model = TRUE)\n\nCoefficients:\n           (Intercept) pretty_conditionimpasse ospan_splithigh-memory\nother            -3.26                    3.11                 0.6553\nangular          -3.26                    1.65                -0.0377\ntriangular       -2.16                    1.06                 0.2500\n           pretty_conditionimpasse:ospan_splithigh-memory\nother                                               0.954\nangular                                             2.158\ntriangular                                          2.148\n\nStd. Errors:\n           (Intercept) pretty_conditionimpasse ospan_splithigh-memory\nother             1.02                   1.087                  1.255\nangular           1.02                   1.199                  1.441\ntriangular        0.61                   0.799                  0.812\n           pretty_conditionimpasse:ospan_splithigh-memory\nother                                                1.46\nangular                                              1.73\ntriangular                                           1.16\n\nResidual Deviance: 252 \nAIC: 276 \n\n\nCODE\ncar::Anova(m, type =3) #always type 3 for ixns \n\n\nAnalysis of Deviance Table (Type III tests)\n\nResponse: state\n                             LR Chisq Df Pr(>Chisq)    \npretty_condition                16.37  3    0.00095 ***\nospan_split                      0.36  3    0.94767    \npretty_condition:ospan_split     4.23  3    0.23787    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n# calculate z-statistics of coefficients\nz_stats <- summary(m)$coefficients/summary(m)$standard.errors\n# convert to p-values\np_values <- (1 - pnorm(abs(z_stats)))*2\n# display p-values in transposed data frame\n(p_values <- data.frame(p = (p_values)))\n\n\n           p..Intercept. p.pretty_conditionimpasse p.ospan_splithigh.memory\nother           0.001388                   0.00417                    0.602\nangular         0.001387                   0.16927                    0.979\ntriangular      0.000398                   0.18428                    0.758\n           p.pretty_conditionimpasse.ospan_splithigh.memory\nother                                                0.5132\nangular                                              0.2134\ntriangular                                           0.0645\n\n\nCODE\n# display odds ratios in transposed data frame\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\nodds_ratios <- data.frame(OR = exp(summary(m)$coefficients))\noptions(scipen = 2)\n(results <- cbind(odds_ratios, p_values))\n\n\n           OR..Intercept. OR.pretty_conditionimpasse OR.ospan_splithigh.memory\nother              0.0385                      22.53                     1.926\nangular            0.0385                       5.20                     0.963\ntriangular         0.1154                       2.89                     1.284\n           OR.pretty_conditionimpasse.ospan_splithigh.memory p..Intercept.\nother                                                   2.60      0.001388\nangular                                                 8.65      0.001387\ntriangular                                              8.57      0.000398\n           p.pretty_conditionimpasse p.ospan_splithigh.memory\nother                        0.00417                    0.602\nangular                      0.16927                    0.979\ntriangular                   0.18428                    0.758\n           p.pretty_conditionimpasse.ospan_splithigh.memory\nother                                                0.5132\nangular                                              0.2134\ntriangular                                           0.0645\n\n\n\n\nInference\nlooking at detailed p values\n… OTHER: only main effect of condition TRI-LIKE: no effects TRI: IXN condition * impasse\nTODO\n\nBeing in the IMPASSE condition increases the odds of giving an unknown (potentially nonsense) or blank/uncertain response rather than an orthogonal (or satisficing) response by a factor of 45 (z = 3.81, p < 0.001) . Participants in the impasse condition were 45x as likely to give an unknown/uncertain response rather than an orthogonal response compared to participants in control.\nBeing in the IMPASSE condition increases the odds of giving ‘triangle-like’ response rather than an orthogonal (or satisficing) response by a factor of 17.5 (z = 2.60, p < 0.001 ). Participants in the impasse condition were almost 6x as likely to give an a triangular response rather than an orthogonal response compared to participants in control.\nBeing in the IMPASSE condition increases the odds of giving ‘triangle-like’ response rather than an orthogonal (or satisficing) response by a factor of 4.8 (z = 3.30, p < 0.001 ). Participants in the impasse condition were almost 6x as likely to give an a triangular response rather than an orthogonal response compared to participants in control.\nAs with the (binary) logistic regression on accuracy ~ condition, significant model intercepts indicate that the odds of being in any particular response state (vs) orthogonal are significantly different than 1 in the control condition. (i.e. not 1:1 odds or 50% chance of being in that response state. Orthogonal is a much more probable response state in control)\n[need to to double check interpretation, but I think that the OR intercepts converted to probabilities equate to the marginal probability of being in each state in the control condition. which makes sense. I think.?]\nIF I change reference category for condition… then the intercepts should no longer be significant. The b1 coefficients should still be significant, but with changed sign (much less likely) [Yup! this works!]\n\n\n\nVisualize\n\n\nCODE\n#:::::::: PLOT\n\n#SJPLOT | MODEL | ODDS RATIO\n#library(sjPlot)\nplot_model(m, type = \"est\",\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) +  #manually adjusted for directional test   \n  # scale_y_continuous() + #remove to put on log scale x axis \n  # scale_x_discrete(labels=c(\"control\",\"impasse\"))+\n  labs(title = \"MODEL ESTIMATE  | Q1 Accuracy ~ condition\",\n       subtitle = \"Impasse increases odds of correct response on Q1\",\n       x = \"Condition\") + theme_clean()\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type = \"int\", ci.lvl = 0.95) \n\n\n\n\n\nCODE\nplot_model(m, type=\"eff\", ci.lvl = 0.95) \n\n\n$pretty_condition\n\n\n\n\n\n\n$ospan_split\n\n\n\n\n\nCODE\n# +  ylim(0,1) +\n#   labs(title = \"MODEL PREDICTION  | Q1 State ~ condition\",\n#        subtitle = \"Impasse increases probability of more accurate response states Q1\",\n#        x = \"Condition\") + theme_clean()\n\n#TODO ESTIMAED MARGINALS AND IXN PLOTS \n# https://cran.r-project.org/web/packages/emmeans/vignettes/comparisons.html\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \nstate\n\n\nPredictors\nOdds Ratios\nCI\np\nResponse\n\n\n(Intercept)\n0.04\n0.01 – 0.29\n0.002\nother\n\n\npretty condition[impasse]\n22.53\n2.62 – 193.88\n0.005\nother\n\n\nospan split [high-memory]\n1.93\n0.16 – 23.11\n0.603\nother\n\n\npretty condition[impasse] * ospan split[high-memory]\n2.60\n0.14 – 46.67\n0.514\nother\n\n\n(Intercept)\n0.04\n0.01 – 0.29\n0.002\nangular\n\n\npretty condition[impasse]\n5.20\n0.48 – 55.86\n0.172\nangular\n\n\nospan split [high-memory]\n0.96\n0.06 – 16.68\n0.979\nangular\n\n\npretty condition[impasse] * ospan split[high-memory]\n8.65\n0.28 – 268.24\n0.216\nangular\n\n\n(Intercept)\n0.12\n0.03 – 0.39\n0.001\ntriangular\n\n\npretty condition[impasse]\n2.89\n0.59 – 14.05\n0.187\ntriangular\n\n\nospan split [high-memory]\n1.28\n0.26 – 6.40\n0.759\ntriangular\n\n\npretty condition[impasse] * ospan split[high-memory]\n8.57\n0.86 – 85.46\n0.067\ntriangular\n\n\nObservations\n133\n\n\nR2 / R2 adjusted\n0.187 / 0.181\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n# modelsummary(mixcat.1, s)\n#TODO OUTPUT TABLE \n#https://arelbundock.com/posts/modelsummary_multinomial_logit/\n\n\n\n\nDiagnostics\n\n\nCODE\n#EXAMINE PREDICTIONS\n#create sample data frame\n# test <- data.frame(pretty_condition = c(\"control\", \"impasse\"))\n# pred <- predict(m, newdata = test, \"probs\")\n# paste(\"Predicted Probability of Being in Each State\")\n# ( x <- cbind(test, pred))\n\nprint(\"MODEL PERFORMANCE\")\n\n\n[1] \"MODEL PERFORMANCE\"\n\n\nCODE\nperformance(m)\n\n\nCan't calculate log-loss.\nCan't calculate proper scoring rules for ordinal, multinomial or cumulative link models.\n\n\n# Indices of model performance\n\nAIC     |     BIC |    R2 | R2 (adj.) |  RMSE | Sigma\n-----------------------------------------------------\n275.925 | 310.609 | 0.187 |     0.181 | 0.354 | 1.443\n\n\nCODE\nDescTools::PseudoR2(m, which = c(\"McFadden\", \"CoxSnell\", \"Nagelkerke\"))\n\n\n  McFadden   CoxSnell Nagelkerke \n     0.187      0.354      0.392 \n\n\nCODE\n#General Goodness of Fit\n#library(generalhoslem)\n#logitgof(df$state, catm$fitted.values, g = 3)\n#A non-significant p value indicates that there is no evidence that the observed and expected frequencies differ (i.e., evidence of good fit).\n#don't fret! this version of the hoslem-lem test is problematic with fewer than 10 input variables\nchisq.test(df$state,predict(m)) #actual states VS predicted states\n\n\nWarning in chisq.test(df$state, predict(m)): Chi-squared approximation may be\nincorrect\n\n\n\n    Pearson's Chi-squared test\n\ndata:  df$state and predict(m)\nX-squared = 33, df = 3, p-value = 3e-07\n\n\nCODE\n# The chi-square test tests the decrease in unexplained variance from the baseline model to the final model\n\n# print(\"MODEL DIAGNOSTICS\")\n# check_model(m) can't do overall diagnostics, have to do them on individual model equations"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#wm-in-control-condition",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#wm-in-control-condition",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "WM in CONTROL CONDITION",
    "text": "WM in CONTROL CONDITION\nWhat is the effect of WM capacity in just the control condition?\nExploration of response accuracy and response latency between working memory groups in the control condition did not reveal any interesting differences. There are a couple of questions where low WM participants were more accurate (5 [midpoint],8[duration constraint, before B/after X]) which seems strange. Low WM participants were also faster on these questions. The faster response time could be explained in Q5 by the distractor answer (A) which was popular.\n\nSetup\n\n\nCODE\ndf_s <- df_subjects %>% filter(pretty_condition == \"control\")\ndf_i <- df_items %>% filter(subject %in% df_s$subject) %>% filter(q %nin% c(6,9))\n\n#validation \nnrow(df_i) / 13 == nrow(df_s)\n\n\n[1] TRUE\n\n\n\n\nExplore\n\n\nCODE\n##OVERALL\nggbetweenstats( data = df_s, x = ospan_split, y = s_NABS,\n                type = \"nonparametric\") + \n  labs(title = \"Control Condition | Accuracy does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbetweenstats( data = df_s, x = ospan_split, y = rt_m,\n                type = \"nonparametric\") + \n  labs(title = \"Control Condition | Response time does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbarstats( data = df_i, x = state, y = ospan_split) + \n  labs(title = \"Control Condition | INTERPRETATION does not differ by ospan split\")\n\n\n\n\n\nCODE\n##Q1\nggbarstats( data = df_i %>% filter(q==1), x = accuracy, y = ospan_split,\n            type = \"nonparametric\") + \n  labs(title = \"Q1 [first exposure] | Performance does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbetweenstats( data = df_i %>% filter(q==1), y = rt_s, x = ospan_split,\n            type = \"parametric\") + \n  labs(title = \"Q1 [first exposure] | RT does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbarstats( data = df_i %>% filter(q==1), x = state, y = ospan_split) + \n  labs(title = \"Q1 [first expsoure] | Control Condition | INTERPRETATION does not differ by ospan split\")\n\n\n\n\n\nCODE\n##Q3\nggbarstats( data = df_i %>% filter(q==3), x = accuracy, y = ospan_split,\n            type = \"nonparametric\") + \n  labs(title = \"Q3 [first endtime] | Performance does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbetweenstats( data = df_i %>% filter(q==3), y = rt_s, x = ospan_split,\n            type = \"parametric\") + \n  labs(title = \"Q1 [first endtime] | RT does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbarstats( data = df_i %>% filter(q==3), x = state, y = ospan_split) + \n  labs(title = \"Q1 [first endtime] |INTERPRETATION does not differ by ospan split\")\n\n\n\n\n\nCODE\n##Q8\nggbarstats( data = df_i %>% filter(q==8), x = accuracy, y = ospan_split,\n            type = \"nonparametric\") + \n  labs(title = \"Q8 [high orth load] | Accuracy does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbetweenstats( data = df_i %>% filter(q==8), y = rt_s, x = ospan_split,\n            type = \"parametric\") + \n  labs(title = \"Q8 [high orth load] | RT does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbarstats( data = df_i %>% filter(q==8), x = state, y = ospan_split) + \n  labs(title = \"Q8 [high orth] |INTERPRETATION does not differ by ospan split\")\n\n\n\n\n\nCODE\n##Q5\nggbarstats( data = df_i %>% filter(q==5), x = accuracy, y = ospan_split,\n            type = \"nonparametric\") + \n  labs(title = \"Q5 [high orth load] | Performance does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbetweenstats( data = df_i %>% filter(q==5), y = rt_s, x = ospan_split,\n            type = \"parametric\") + \n  labs(title = \"Q5 [high orth load] | RT does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbarstats( data = df_i %>% filter(q==5), x = state, y = ospan_split) + \n  labs(title = \"Q5 [high orth] |INTERPRETATION does not differ by ospan split\")\n\n\n\n\n\nCODE\n##Q10\nggbarstats( data = df_i %>% filter(q==10), x = accuracy, y = ospan_split,\n            type = \"nonparametric\") + \n  labs(title = \"Q10 [easy tri] | Performance does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbetweenstats( data = df_i %>% filter(q==10), y = rt_s, x = ospan_split,\n            type = \"parametric\") + \n  labs(title = \"Q10 [easy tri] | RT does not differ by ospan split\")\n\n\n\n\n\nCODE\nggbarstats( data = df_i %>% filter(q==5), x = state, y = ospan_split, type = \"nonparametric\") + \n  labs(title = \"Q5 [high orth] |INTERPRETATION does not differ by ospan split\")"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#q8-interpretation-state",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#q8-interpretation-state",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "Q8 INTERPRETATION STATE",
    "text": "Q8 INTERPRETATION STATE\n\nSetup\n\n\nCODE\ndf <- df_items %>% filter(q==8) %>% \n  dplyr::select(pretty_condition, ospan_split, state)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~ospan_split) +\n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q8 Interpretation\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df$state, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             control impasse    Sum\n  orthogonal  0.6308  0.3971 0.5113\n  other       0.2769  0.3088 0.2932\n  angular     0.0462  0.0588 0.0526\n  triangular  0.0462  0.2353 0.1429\n  Sum         1.0000  1.0000 1.0000\n\n\nCODE\n(t <- table(df$state, df$pretty_condition, df$ospan_split) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n, ,  = low-memory\n\n            \n             control impasse Sum\n  orthogonal      19      16  35\n  other            9      15  24\n  angular          1       2   3\n  triangular       2       3   5\n  Sum             31      36  67\n\n, ,  = high-memory\n\n            \n             control impasse Sum\n  orthogonal      22      11  33\n  other            9       6  15\n  angular          2       2   4\n  triangular       1      13  14\n  Sum             34      32  66\n\n\n\n\nMULTINOMIAL REGRESSION\nTODO:: USE MBLOGIT VERSION WITH P VALUES IN MODEL\nDoes condition affect the response state of Q?\n\nFit CONDITION Model\n\n\nCODE\n#check reference level \nprint(\"Categories (first is reference)\")\n\n\n[1] \"Categories (first is reference)\"\n\n\nCODE\nlevels(df$state)\n\n\n[1] \"orthogonal\" \"other\"      \"angular\"    \"triangular\"\n\n\nCODE\n#FIT EMPTY MODEL\n# print(\"EMPTY MODEL\")\ncatm.0 <- multinom(state ~ 1, data = df)\n\n\n# weights:  8 (3 variable)\ninitial  value 184.377150 \niter  10 value 151.045297\niter  10 value 151.045297\niter  10 value 151.045296\nfinal  value 151.045296 \nconverged\n\n\nCODE\n# summary(catm.0)\n\n#FIT PREDICTOR MODEL\n# print(\"PREDICTOR MODEL\")\ncatm.C <- multinom(formula = state ~ pretty_condition, data = df, model = TRUE)\n\n\n# weights:  12 (6 variable)\ninitial  value 184.377150 \niter  10 value 144.557718\nfinal  value 144.557713 \nconverged\n\n\nCODE\n# summary(catm.C)\n\n#COMPARE MODEL FIT\npaste(\"AIC wth predictor is lower than empty model?\", catm.0$AIC > catm.C$AIC)\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(catm.0, catm.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff |  Chi2 |     p\n------------------------------------------------\ncatm.0 | multinom |  3 |         |       |      \ncatm.C | multinom |  6 |       3 | 12.98 | 0.005\n\n\nCODE\n##compare bayesian version\n#library(brms)\n# b.cat <- brm( state2 ~ pretty_condition, data = df, family = \"categorical\", backend = \"cmdstanr\")\n# summary(b.cat)\n# plot_model(b.cat)\n# report(b.cat)\n# coefficient estimates are very simliar to catm. super cool!\n\n##compare mclogit version\n#\"baseline-category logit model\n# https://www.elff.eu/software/mclogit/manual/mblogit/\n# blm1 <- mblogit(state2 ~ pretty_condition , data = df)\n# summary(blm1)\n#identical to catm. super cool!\n\n\nAIC in predictor model is less than empty model, and likelihood ratio test indicates predictor model is significantly better fit to the sample data than the empty (intercept only) model.\n\n\nFit OSPAN Model\n\n\nCODE\n#FIT OSPAN only MODEL\n# print(\"OSPAN ONLY MODEL\")\ncatm.O <- multinom(state ~ ospan_split, data = df)\n\n\n# weights:  12 (6 variable)\ninitial  value 184.377150 \niter  10 value 147.680865\nfinal  value 147.680635 \nconverged\n\n\nCODE\n# summary(catm.O) \n# car::Anova(catm.O) \nprint(\"OSPAN ONLY better than empty?\")\n\n\n[1] \"OSPAN ONLY better than empty?\"\n\n\nCODE\ntest_lrt(catm.0, catm.O)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff | Chi2 |     p\n-----------------------------------------------\ncatm.0 | multinom |  3 |         |      |      \ncatm.O | multinom |  6 |       3 | 6.73 | 0.081\n\n\nCODE\n#FIT OSPAN + CONDITION\n# print(\"OSPAN + CONDITION MODEL\")\ncatm.CO <- multinom(formula = state ~ pretty_condition + ospan_split, data = df, model = TRUE)\n\n\n# weights:  16 (9 variable)\ninitial  value 184.377150 \niter  10 value 140.787130\nfinal  value 140.643485 \nconverged\n\n\nCODE\n# summary(catm.CO)\ncar::Anova(catm.CO) #MainEff condition, marginal ospan\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: state\n                 LR Chisq Df Pr(>Chisq)   \npretty_condition    14.07  3     0.0028 **\nospan_split          7.83  3     0.0497 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#COMPARE MODEL FIT\npaste(\"Adding OSPAN to CONDITION lowers AIC?\", catm.C$AIC > catm.CO$AIC)\n\n\n[1] \"Adding OSPAN to CONDITION lowers AIC? TRUE\"\n\n\nCODE\ntest_lrt(catm.C, catm.CO)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff | Chi2 |     p\n------------------------------------------------\ncatm.C  | multinom |  6 |         |      |      \ncatm.CO | multinom |  9 |       3 | 7.83 | 0.050\n\n\nAdding (main effect) predictor of OSPAN decreases AIC and is a marginally better fit. In this model, there are main effects of condition and OSPAN.\n\n\nCODE\n#FIT OSPAN * CONDITION\n# print(\"OSPAN * CONDITION MODEL\")\ncatm.C.O <- multinom(formula = state ~ pretty_condition * ospan_split, data = df, model = TRUE)\n\n\n# weights:  20 (12 variable)\ninitial  value 184.377150 \niter  10 value 138.567549\niter  20 value 138.467842\niter  20 value 138.467842\niter  20 value 138.467842\nfinal  value 138.467842 \nconverged\n\n\nCODE\ncar::Anova(catm.C.O, type = 3)\n\n\nAnalysis of Deviance Table (Type III tests)\n\nResponse: state\n                             LR Chisq Df Pr(>Chisq)\npretty_condition                 1.94  3       0.58\nospan_split                      0.76  3       0.86\npretty_condition:ospan_split     4.35  3       0.23\n\n\nCODE\n# summary(catm.C.O)\n# car::Anova(catm.C.O) #MainEff condition, marginal ospan\n#COMPARE MODEL FIT\npaste(\"Adding INTERACTION lowers AIC?\", catm.CO$AIC > catm.C.O$AIC)\n\n\n[1] \"Adding INTERACTION lowers AIC? FALSE\"\n\n\nCODE\ntest_lrt(catm.CO, catm.C.O)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName     |    Model | df | df_diff | Chi2 |     p\n-------------------------------------------------\ncatm.CO  | multinom |  9 |         |      |      \ncatm.C.O | multinom | 12 |       3 | 4.35 | 0.226\n\n\nAdding interaction of OSPAN does not improve fit and does not lower AIC. In the IXN model, no effects are significant. So we conclude that the main effects only model is the final model.\n\n\nCODE\n##compare bayesian version\n# library(brms)\n# b.cat <- brm( state ~ pretty_condition*ospan_split, data = df, family = \"categorical\", backend = \"cmdstanr\")\n# summary(b.cat)\n# plot_model(b.cat) \n# plot(equivalence_test(b.cat))\n# plot(rope(b.cat))\n# report(b.cat)\n# coefficient estimates are very simliar to catm. super cool!\n\n##compare mclogit version\n#\"baseline-category logit model\n# https://www.elff.eu/software/mclogit/manual/mblogit/\n# blm1 <- mblogit(state ~ pretty_condition *ospan_split , data = df)\n# summary(blm1)\n# car::Anova(blm1) #todo need to separate by individual equation\n#identical to catm. super cool!\n\n\n\n\nDescribe\n\n\nCODE\n#set model\nm <- catm.CO\n\n#::::::::INTERPRETATION\npaste(\"MODEL SUMMARY\")\n\n\n[1] \"MODEL SUMMARY\"\n\n\nCODE\nsummary(m)\n\n\nCall:\nmultinom(formula = state ~ pretty_condition + ospan_split, data = df, \n    model = TRUE)\n\nCoefficients:\n           (Intercept) pretty_conditionimpasse ospan_splithigh-memory\nother           -0.652                   0.533                 -0.352\nangular         -2.866                   0.754                  0.430\ntriangular      -3.494                   2.224                  1.297\n\nStd. Errors:\n           (Intercept) pretty_conditionimpasse ospan_splithigh-memory\nother            0.344                   0.409                  0.414\nangular          0.785                   0.809                  0.810\ntriangular       0.765                   0.689                  0.604\n\nResidual Deviance: 281 \nAIC: 299 \n\n\nCODE\ncar::Anova(m, type =2) #always type 3 for ixns \n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: state\n                 LR Chisq Df Pr(>Chisq)   \npretty_condition    14.07  3     0.0028 **\nospan_split          7.83  3     0.0497 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n# calculate z-statistics of coefficients\nz_stats <- summary(m)$coefficients/summary(m)$standard.errors\n# convert to p-values\np_values <- (1 - pnorm(abs(z_stats)))*2\n# display p-values in transposed data frame\n(p_values <- data.frame(p = (p_values)))\n\n\n           p..Intercept. p.pretty_conditionimpasse p.ospan_splithigh.memory\nother         0.05779206                   0.19245                   0.3953\nangular       0.00026029                   0.35180                   0.5951\ntriangular    0.00000496                   0.00126                   0.0317\n\n\nCODE\n# display odds ratios in transposed data frame\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\nodds_ratios <- data.frame(OR = exp(summary(m)$coefficients))\noptions(scipen = 2)\n(results <- cbind(odds_ratios, p_values))\n\n\n           OR..Intercept. OR.pretty_conditionimpasse OR.ospan_splithigh.memory\nother              0.5209                       1.70                     0.703\nangular            0.0569                       2.12                     1.538\ntriangular         0.0304                       9.24                     3.660\n           p..Intercept. p.pretty_conditionimpasse p.ospan_splithigh.memory\nother         0.05779206                   0.19245                   0.3953\nangular       0.00026029                   0.35180                   0.5951\ntriangular    0.00000496                   0.00126                   0.0317\n\n\n\n\nInference\n\n\nVisualize\n\n\nCODE\n#:::::::: PLOT\n\n#SJPLOT | MODEL | ODDS RATIO\n#library(sjPlot)\nplot_model(m, type = \"est\",\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) +  #manually adjusted for directional test   \n  # scale_y_continuous() + #remove to put on log scale x axis \n  # scale_x_discrete(labels=c(\"control\",\"impasse\"))+\n  labs(title = \"MODEL ESTIMATE  | Q1 Accuracy ~ condition\",\n       subtitle = \"Impasse increases odds of correct response on Q1\",\n       x = \"Condition\") + theme_clean()\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type = \"int\", ci.lvl = 0.95) \nplot_model(m, type=\"eff\", ci.lvl = 0.95) \n\n\n$pretty_condition\n\n\n\n\n\n\n$ospan_split\n\n\n\n\n\nCODE\n# +  ylim(0,1) +\n#   labs(title = \"MODEL PREDICTION  | Q1 State ~ condition\",\n#        subtitle = \"Impasse increases probability of more accurate response states Q1\",\n#        x = \"Condition\") + theme_clean()\n\n#TODO ESTIMAED MARGINALS AND IXN PLOTS \n# https://cran.r-project.org/web/packages/emmeans/vignettes/comparisons.html\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n# modelsummary(mixcat.1, s)\n#TODO OUTPUT TABLE \n#https://arelbundock.com/posts/modelsummary_multinomial_logit/\n\n\n\n\nDiagnostics\n\n\nCODE\n#EXAMINE PREDICTIONS\n#create sample data frame\n# test <- data.frame(pretty_condition = c(\"control\", \"impasse\"))\n# pred <- predict(m, newdata = test, \"probs\")\n# paste(\"Predicted Probability of Being in Each State\")\n# ( x <- cbind(test, pred))\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n# DescTools::PseudoR2(m, which = c(\"McFadden\", \"CoxSnell\", \"Nagelkerke\"))\n\n#General Goodness of Fit\n#library(generalhoslem)\n#logitgof(df$state, catm$fitted.values, g = 3)\n#A non-significant p value indicates that there is no evidence that the observed and expected frequencies differ (i.e., evidence of good fit).\n#don't fret! this version of the hoslem-lem test is problematic with fewer than 10 input variables\nchisq.test(df$state,predict(m)) #actual states VS predicted states\n\n\nWarning in chisq.test(df$state, predict(m)): Chi-squared approximation may be\nincorrect\n\n\n\n    Pearson's Chi-squared test\n\ndata:  df$state and predict(m)\nX-squared = 24, df = 3, p-value = 0.00002\n\n\nCODE\n# The chi-square test tests the decrease in unexplained variance from the baseline model to the final model\n\n# print(\"MODEL DIAGNOSTICS\")\n# check_model(m) can't do overall diagnostics, have to do them on individual model equations"
  },
  {
    "objectID": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#explore-specific-question",
    "href": "analysis/SGC3A/4_sgc3A_ospan_hypotesting.html#explore-specific-question",
    "title": "9  SGC3 (OSPAN) Hypothesis Testing",
    "section": "EXPLORE specific question",
    "text": "EXPLORE specific question\n\n\nCODE\ndf <- df_items %>% filter(q==10)\ngrouped_ggbarstats( data = df, x = accuracy, y = pretty_condition, grouping.var = ospan_split)"
  },
  {
    "objectID": "analysis/SGC3B/1_sgc3B_introduction.html",
    "href": "analysis/SGC3B/1_sgc3B_introduction.html",
    "title": "10  Introduction",
    "section": "",
    "text": "TODO UPDATE ALL\nIn Study 3B we compare the efficacy of the explicit [interaction] scaffold and the implicit [impasse] scaffold."
  },
  {
    "objectID": "analysis/SGC3B/1_sgc3B_introduction.html#methods",
    "href": "analysis/SGC3B/1_sgc3B_introduction.html#methods",
    "title": "10  Introduction",
    "section": "METHODS",
    "text": "METHODS\n\nDesign\nWe employed a mixed design with 1 between-subjects factor with 2 levels (Scaffold: control, impasse) and 15 items (within-subjects factor).\nIndependent Variables:\n\nB-S (Scaffold: control,impasse)\nW-S (Item x 15)\n\nDependent Variables:\n\nResponse Accuracy : Is the response triangular-correct?\nResponse Interpretation : (derived) With which interpretation of the graph is the subject’s response on an individual question consistent?\nResponse Latency : Time from stimulus onset to clicking ‘Submit’ button: time in (s)\n\n\n\nMaterials\nStimuli consisted of a series of 15 graph comprehension questions, each testing a different combination of time interval relations, to be read from a Triangular-Model graph. Figure 21.1. The list of questions can be found here.\n\n\n\nFigure 10.1: Sample Question (Q=1) for Graph Comprehension Task\n\n\nNote that across both control and impasse conditions, both the question, response options and graph structure were identical. The experimental manipulation (posing a mental impasse) was accomplished by changing the position of datapoints in the impasse-condition graph, such that for any given question, there was no available response option if the reader were to interpret the graph as cartesian (making an orthogonal rather than diagonal projection from the x-axis.)\nThe green line indicates the ideal-scanpath to the correct (triangular) answer to the first question, and the red line indicates the (incorrect) orthogonal interpretation. In the IMPASSE figure (at right), there are no data points that intersect the red line. We hypothesize that this presents the reader with an obstacle, at which point they are forced to confront their interpretation of the coordinate system and (ideally) develop a new strategy.\n\n\n\nFigure 10.2: Sample Question (Q=1) graphs for each condition\n\n\n\n\nProcedure\nParticipants completed the study via a web-browser.\n(1) Upon starting, they submitted informed consent, before reading task instructions.\n(2) Participants were introduced to a scenario in which they were to play the role of a project manager, scheduling shifts for a group of employees. The schedule of the employees was presented in a TriangularModel (TM) graph, and they would be answering question about the schedule.\n(3) Then participants completed an experimental block of 15 items.\n(3B) The first five items in the task are defined as the SCAFFOLDING block. In the IMPASSE condition, the first five questions included an IMPASSE problem state. For participants in the CONTROL condition, the dataset was structure such that there was always an available ‘orthogonal answer’ for the first 5 questions.\n(3B) The remaining 10 items are defined as the TESTING block. In both conditions, these questions were not structured as impasse (i.e. contained an available orthogonal answer)\n(4) Following the experimental block, participants answered a free-response question about their strategy for reading the graph, followed by a demographic questionnaire and debrief.\n\n\nSample\nData was collected by convenience sample of a university subject pool. Initial data (Fall 2017, Spring 2018) were collected in-person, with large groups of students simultaneously completing the study (independently) in a computer lab. In Fall 2021 and Winter 2022 we collected additional data to replicate results in a remote format (students completing the study asynchronously on their own computers)."
  },
  {
    "objectID": "analysis/SGC3B/1_sgc3B_introduction.html#analysis",
    "href": "analysis/SGC3B/1_sgc3B_introduction.html#analysis",
    "title": "10  Introduction",
    "section": "ANALYSIS",
    "text": "ANALYSIS\n\nData Preparation\nData were collected via a custom web application and stored in a NoSQL database. The following exclusion criteria were applied during data cleaning:\n\ncompletion status : “success” ; subject must have finished all parts of the study, including demographic questionnaire\nsession ID: [in list] ; subject must have been assigned to valid data collection session (discard testing and piloting data)\nbrowser interaction violations < 3; subject must have fewer than 3 violations of non-allowed browser interactions (i.e. resizing window, leaving browser tab or leaving fullscreen mode)\nself-rated effort > 2; subjects who reported, “not trying hard/rushing through questions” or “started out trying hard but giving up at some point” were excluded from analysis.\nattention check ==TRUE ; subjects who failed to answer a mid-study attention check question (Graph Comprehension Task Question #6) are excluded\n\nBefore analysis, data files from individual data collection periods are harmonized into a common data format.\n\n\n\n\n\n\n\nPre-Requisite\nFollowed By\n\n\n\n\nspring17_clean_data.Rmd  spring18_clean_data.Rmd  fall21_clean_data.Rmd  winter2022_clean_sgc3b.Rmd\n2_sgc3B_scoring.qmd\n\n\n\nData for study SGC_3B were collected across four time periods, interrupted by the Covid-19 pandemic.\n\n\n\nPeriod\nModality\n\n\n\n\nFall 2017\nin person, SONA groups in computer lab\n\n\nSpring 2018\nin person, SONA groups in computer lab\n\n\nFall 2021\nasynchronous, online, SONA\n\n\nSummer 2022\nasynchronous, online, SONA\n\n\n\nData collected in Fall 2017, Spring 2018 constitute the original SGC_3B study, conducted in person. Data collected in Fall 2021 constitute the web-based replication, conducted online (asynchronously). In all cases, the experiment was administered via a web application.\nThe underlying data structure of the stimulus web application changed across the data collection period, resulting in slightly different data files (i.e. columns are not named consistently). In this section, we combine the files from each data collection period into a single harmonized data file for analysis (one for participants, one for items).\n\nParticipants\nFirst we import participant-level data from each data collection period, selecting only the columns relevant for analysis, and renaming columns to be consistent across each file. The result is a single data frame df_subjects containing one row for each subject (across all periods). Note that we are not discarding any response data. Rather, we discard columns that are automatically recorded by the stimulus web application and help the application run.\nNote that we discard some columns representing scores calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. No raw data (responses and response times) are discarded, only algorithmically-derived scores for the responses.\n\n\nCODE\n#IMPORT PARTICIPANT DATA\n\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # # mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#set datafiles\nfall17 <- \"analysis/SGC3B/data/0-session-level/fall17_sgc3b_participants.csv\"\nspring18 <- \"analysis/SGC3B/data/0-session-level/spring18_sgc3b_participants.csv\"\nfall21 <- \"analysis/SGC3B/data/0-session-level/fall21_sgc3b_participants.csv\"\nsummer22 <- \"analysis/SGC3B/data/0-session-level/su22_sgc3b_participants.rds\"\n\n\n#read datafiles, set mode and term\ndf_subjects_fall17 <- read_csv(fall17) %>% mutate(mode = \"lab-synch\", term = \"fall17\")\ndf_subjects_spring18 <- read_csv(spring18) %>% mutate(mode = \"lab-synch\", term = \"spring18\")\ndf_subjects_fall21 <- read_csv(fall21) %>% mutate(mode = \"asynch\", term = \"fall21\")\ndf_subjects_summer22 <- read_rds(summer22) %>% mutate(mode = \"asynch\", term = \"summer22\")\n\n\n#SAVE METADATA FROM SGC3A, but no rows \ndf_subjects <- df_subjects_summer22 %>% filter(condition=='X') %>% \n  dplyr::select(\n  subject,condition,term,mode,\n  gender,age,language, schoolyear, country,\n  effort,difficulty,confidence,enjoyment,other,\n  totaltime_m, \n  # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n  #exploratory factors\n  violations, browser, width, height\n)\n\n#COMPARE COLS\n# janitor::compare_df_cols(df_subjects_fall17, df_subjects_spring18, df_subjects_fall21,meta)\n\n#reduce data collected using OLD webapp to useful columns\ndf_subjects_before <- rbind(df_subjects_fall17, df_subjects_spring18, df_subjects_fall21) %>% \n  #rename and summarize some columns\n  mutate(\n    totaltime_m = totalTime / 1000 / 60,  \n    absolute_score = triangular_score,\n    language = native_language,\n    gender = sex,\n    schoolyear = year) %>% \n  #create placeholders for cols not collected until NEW webapp [for later rbind]\n  mutate(\n    effort = \"NULL\",\n    difficulty = \"NULL\",\n    confidence = \"NULL\",\n    enjoyment = \"NULL\",\n    other = \"NULL\",\n    disability = \"NULL\",\n    violations = \"NULL\",\n    browser = \"NULL\",\n    width = \"NULL\",\n    height = \"NULL\"\n  ) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select(subject, condition, term, mode, \n                #demographics\n                gender, age, language, schoolyear, country,\n                #placeholder effort survey\n                effort, difficulty, confidence, enjoyment, \n                #placeholder misc \n                other, disability,\n                #response characteristics\n                totaltime_m, \n                # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                #exploratory factors\n                violations, browser, width, height)\n\n\n#reduce data collected using NEW webapp to useful columns\ndf_subjects_summer22 <- df_subjects_summer22 %>% \n  mutate(score = absolute_score) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m, \n                 # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                 #exploratory factors \n                 violations, browser, width, height)\n\n\neffort_labels <- c(\"I tried my best on each question\", \"I tried my best on most questions\")\n\n#combine dataframes from old and new webapps\ndf_subjects <- rbind(df_subjects, df_subjects_before, df_subjects_summer22) %>% \n  #refactor factors\n  mutate (\n    subject = factor(subject),\n    condition = factor(condition),\n    pretty_condition = recode_factor(condition, \n                                     \"111\" = \"none-control\", \"121\" =  \"none-impasse\",\n                                     \"211\" = \"img-control\", \"221\" =  \"img-impasse\",\n                                     \"311\" = \"ixv-control\", \"321\" =  \"ixv-impasse\"),\n    pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\"),\n    term = factor(term, levels= c(\"fall17\",\"spring18\",\"fall21\",\"winter22\",\"su22\", \"summer22\")),\n    mode = factor(mode, levels=c(\"lab-synch\",\"asynch\")),\n    gender = factor(gender),\n    schoolyear = factor(schoolyear, levels=c(\"First\",\"Second\",\"Third\",\"Fourth\",\"Fifth\",\"Other\"))\n  )\n\n\n#FIX METADATA\n#Add metadata for columns that lost it [factors, for some reason!]\nvar_label(df_subjects$subject) <- \"ID of subject (randomly assigned in stimulus app).\"\nvar_label(df_subjects$condition) <- \"ID indicates randomly assigned condition (111 -> control, 121 -> impasse).\"\nvar_label(df_subjects$term) <- \"indicates if session was run with experimenter present or asynchronously\"\nvar_label(df_subjects$mode) <- \"indicates mode in which the participant completed the study\"\nvar_label(df_subjects$gender) <- \"What is your gender identity?\"\nvar_label(df_subjects$schoolyear) <- \"What is your year in school?\"\n\n#CLEANUP\nrm(df_subjects_fall17,df_subjects_fall21, df_subjects_spring18, df_subjects_before, df_subjects_summer22)\nrm(fall17,fall21,spring18,summer22)\n\n\n\n\n## TO EVEN COLUMNS, DROP FA21 DATA FOR 111 AND 112 [the sgc3a online replication study]\ndf_subjects <- df_subjects %>% filter(\n  !(condition %in% c(111,121) & term == \"fall21\")\n)\n\n\n\n\nItems\nNext we import item-level data from each data collection period, selecting only the columns relevant for analysis, and renaming columns to be consistent across each file. The result is a single data frame df_items containing one row for each graph comprehension task question (qs=15) (across all periods). A second data frame df_freeresponse contains one row for each free response strategy question (last question posed to participants in Winter2022) Note that we do not discard any response data. Rather, we do discard several columns representing accuracy scores for responses that were calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. Original response data are always preserved.\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # #mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#set datafiles\nfall17 <- \"analysis/SGC3B/data/0-session-level/fall17_sgc3b_blocks.csv\"\nspring18 <- \"analysis/SGC3B/data/0-session-level/spring18_sgc3b_blocks.csv\"\nfall21 <- \"analysis/SGC3B/data/0-session-level/fall21_sgc3b_blocks.csv\"\nsummer22 <- \"analysis/SGC3B/data/0-session-level/su22_sgc3b_items.rds\"\n\n#read datafiles, set mode and term\ndf_items_fall17 <- read_csv(fall17) %>% mutate(mode = \"lab-synch\", term = \"fall17\")\ndf_items_spring18 <- read_csv(spring18) %>% mutate(mode = \"lab-synch\", term = \"spring18\")\ndf_items_fall21 <- read_csv(fall21) %>% mutate(mode = \"asynch\", term = \"fall21\")\ndf_items_summer22 <- read_rds(summer22) %>%  mutate(mode = \"asynch\", term = \"summer21\")#use RDS file as it contains metadata\n\n#get mapping being question # and interval relation the question tests, that is encoded only in the winter22 data files\nmap_relations <- df_items_summer22 %>% group_by(q) %>% dplyr::select(q,relation) %>% unique()\n\n#SAVE METADATA FROM SUMMER, but no rows \ndf_items <- df_items_summer22 %>% filter(condition=='X') %>% dplyr::select(\n  subject,condition,term,mode,\n  question, q, answer, correct, rt_s\n) \n  \n#reduce data collected using old webapp\ndf_items_before <- rbind(df_items_fall17, df_items_spring18, df_items_fall21) %>% \n  mutate(rt_s = rt / 1000, correct = as.logical(correct)) %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) \n\n#COMPARE COLS\n# janitor::compare_df_cols(df_items_before, df_items)\n\n#reduce data collected using new webapp\ndf_items_summer22 <- df_items_summer22 %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  )\n\n#combine dataframes from old and new webapps\ndf_items <- rbind(df_items, df_items_before, df_items_summer22) %>% \n  #refactorize columns\n  mutate(\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term, levels= c(\"fall17\",\"spring18\",\"fall21\",\"winter22\")),\n    mode = factor(mode, levels=c(\"lab-synch\",\"asynch\")),\n    q = as.integer(q)) %>% \n  #rename answer column to RESPONSE \n  rename(response = answer) %>% \n  #remove all commas and make as character string\n  mutate(\n    response = str_remove_all(as.character(response), \",\"),\n    num_o = str_length(response)\n  ) %>% \n  # handle NA values (why are some empty responses blank and others NA?) \n  mutate(\n    response = replace_na(response, \"\"),\n    num_o = replace_na(num_o, 0)\n  )\n\n\n#FIX METADATA\n#Add metadata for columns that lost it [factors, for some reason!]\nvar_label(df_items$subject) <- \"ID of subject (randomly assigned in stimulus app).\"\nvar_label(df_items$condition) <- \"ID indicates randomly assigned condition (111 -> control, 121 -> impasse).\"\nvar_label(df_items$term) <- \"indicates if session was run with experimenter present or asynchronously\"\nvar_label(df_items$mode) <- \"indicates mode in which the participant completed the study\"\nvar_label(df_items$q) <- \"Question Number (in order)\"\nvar_label(df_items$correct) <- \"Is the response (strictly) correct? [dichotomous scoring]\"\nvar_label(df_items$response) <- \"options (datapoints) selected by the subject\"\nvar_label(df_items$num_o) <- \"number of options selected by the subject\"\n\n#HANDLE FREE RESPONSE QUESTION #16 \n#save `free response` Q#16 in its own dataframe\ndf_freeresponse <- df_items %>% filter(q == 16) %>% dplyr::select(-question,-correct,-rt_s,-num_o)\n#add question description\ndf_freeresponse <- df_freeresponse %>% mutate(\n  question = \"Please describe how to determine what event(s) start at 12pm?\",\n  response = as.character(response) #doesn't need to be factor\n)\n#remove 'free response' Q#16 from df_items\ndf_items <- df_items %>% filter (q != 16)\n\n#add back pretty condition \ndf_items <- df_items %>% mutate(\n  pretty_condition = recode_factor(condition, \n                                     \"111\" = \"none-control\", \"121\" =  \"none-impasse\",\n                                     \"211\" = \"img-control\", \"221\" =  \"img-impasse\",\n                                     \"311\" = \"ixv-control\", \"321\" =  \"ixv-impasse\"),\n  pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\")\n) \n\n#CLEANUP\nrm(df_items_fall17,df_items_fall21, df_items_spring18, df_items_before, df_items_summer22)\nrm(fall17,fall21,spring18,summer22, map_relations)\n\n##ONLY INCLUDE ITEMS FOR INCLUDED SUBJECTS\n##SEE CONDITION LEVELLING IN PARTICIPANTS BLOCK\ndf_items <- df_items %>% filter(subject %in% df_subjects$subject)\n\n\n\n\nValidation\nNext, we validate that we have the complete number of item-level records based on the number of subject-level records\n\n\nCODE\n#the number of items should be equal to 15 x the number of subjects\nnrow(df_items) == 15* nrow(df_subjects) #TRUE\n\n\n[1] TRUE\n\n\nCODE\n#each subject should have 15 items\ndf_items %>% group_by(subject) %>% summarise(n = n()) %>% filter(n != 15) %>% nrow() == 0\n\n\n[1] TRUE\n\n\n\n\nExport\nFinally, we export the (session-harmonized) data for analysis, as CSVs, and .RDS (includes metadata)\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # #mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC3B/data/1-study-level/sgc3b_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC3B/data/1-study-level/sgc3b_items.csv\", row.names = FALSE)\nwrite.csv(df_freeresponse,\"analysis/SGC3B/data/1-study-level/sgc3b_freeresponse.csv\", row.names = FALSE)\n\n#SAVE R Data Structures \n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC3B/data/1-study-level/sgc3b_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC3B/data/1-study-level/sgc3b_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC3B/1_sgc3B_introduction.html#resources",
    "href": "analysis/SGC3B/1_sgc3B_introduction.html#resources",
    "title": "10  Introduction",
    "section": "RESOURCES",
    "text": "RESOURCES\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] kableExtra_1.3.4 forcats_0.5.1    stringr_1.4.0    dplyr_1.0.9     \n [5] purrr_0.3.4      readr_2.1.2      tidyr_1.2.0      tibble_3.1.7    \n [9] ggplot2_3.3.6    tidyverse_1.3.1  codebook_0.9.2  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.8.3      svglite_2.1.0     lubridate_1.8.0   assertthat_0.2.1 \n [5] digest_0.6.29     utf8_1.2.2        R6_2.5.1          cellranger_1.1.0 \n [9] backports_1.4.1   reprex_2.0.1      labelled_2.9.1    evaluate_0.15    \n[13] highr_0.9         httr_1.4.3        pillar_1.7.0      rlang_1.0.3      \n[17] curl_4.3.2        readxl_1.4.0      data.table_1.14.2 rstudioapi_0.13  \n[21] rmarkdown_2.14    webshot_0.5.3     foreign_0.8-82    htmlwidgets_1.5.4\n[25] bit_4.0.4         munsell_0.5.0     broom_0.8.0       compiler_4.2.1   \n[29] modelr_0.1.8      xfun_0.31         pkgconfig_2.0.3   systemfonts_1.0.4\n[33] htmltools_0.5.2   tidyselect_1.1.2  rio_0.5.29        fansi_1.0.3      \n[37] viridisLite_0.4.0 crayon_1.5.1      tzdb_0.3.0        dbplyr_2.2.1     \n[41] withr_2.5.0       grid_4.2.1        jsonlite_1.8.0    gtable_0.3.0     \n[45] lifecycle_1.0.1   DBI_1.1.3         magrittr_2.0.3    scales_1.2.0     \n[49] zip_2.2.0         vroom_1.5.7       cli_3.3.0         stringi_1.7.6    \n[53] fs_1.5.2          xml2_1.3.3        ellipsis_0.3.2    generics_0.1.2   \n[57] vctrs_0.4.1       openxlsx_4.2.5    tools_4.2.1       bit64_4.0.5      \n[61] glue_1.6.2        hms_1.1.1         parallel_4.2.1    fastmap_1.1.0    \n[65] yaml_2.3.5        colorspace_2.0-3  rvest_1.0.2       knitr_1.39       \n[69] haven_2.5.0"
  },
  {
    "objectID": "analysis/SGC3B/2_sgc3B_scoring.html",
    "href": "analysis/SGC3B/2_sgc3B_scoring.html",
    "title": "11  Response Scoring",
    "section": "",
    "text": "TODO\nThe purpose of this notebook is to score (assign a measure of accuracy) to response data for the SGC3B study. This is required because the question type on the graph comprehension task used a ‘Multiple Response’ (MR) question design. Here, we evaluate different approaches to scoring multiple response questions, and transform raw item responses (e.g. boxes ABC are checked) to a measure of response accuracy. (Warning: this notebook takes several minutes to execute.) To review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3."
  },
  {
    "objectID": "analysis/SGC3B/2_sgc3B_scoring.html#score-sgc-data",
    "href": "analysis/SGC3B/2_sgc3B_scoring.html#score-sgc-data",
    "title": "11  Response Scoring",
    "section": "SCORE SGC DATA",
    "text": "SCORE SGC DATA\nTo review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3.\nIn SGC we are fundamentally interested in understanding how a participant interprets the presented graph (stimulus). The graph comprehension task asks them to select the data points in the graph that meet the criteria posed in the question. To assess a participant’s performance, for each question (q=15) we will calculate the following scores:\nAn overall, strict score:\n1. Absolute Score : using dichotomous scoring referencing true (Triangular) answer. (see 1.2)\nSub-scores, for each alternative graph interpretation\n2. Triangular Score : using partial scoring [-1/q, +1/p] referencing true (Triangular) answer key.\n3. Orthogonal Score : using partial scoring [-1/q, +1/p] referencing (incorrect Orthogonal) answer key.\nBased on prior observational studies where we observed emergence of other alternative interpretations (i.e. transitional interpretations) we also calculate subscores for these alternatives.\n4. Tversky Score : using partial scoring [-1/q, +1/p] referencing (incorrect connecting-lines strategy) answer key. 5. Satisficing Score : using partial scoring [-1/q, +1/p] referencing (incorrect satisficing strategy) answer key.\n\nPrepare Answer Keys\nWe start by importing three answer keys: (1) Q1 - Q5 [control condition], (2) Q1-Q5 [impasse condition], (3) Q6-15. Separate answer keys by condition are required for Q1-Q5 because the stimuli for each condition visualize a different underlying dataset (i.e. the graphs show datapoints in different positions). Q6-Q15 are identical across conditions. Each answer key includes a row for each question, and a column defining the subset of response options that correspond to different graph interpretations.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#SAVE KEYS FOR FUTURE USE\nkeys_raw <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_raw\")\nkeys_orth <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_orth\")\nkeys_tri <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tri\")\nkeys_both <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_both\")\nkeys_satisfice_left <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_left\")\nkeys_satisfice_right <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_right\")\nkeys_tversky_duration <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_duration\")\nkeys_tversky_end <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_end\")\nkeys_tversky_max <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_max\")\nkeys_tversky_start <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_start\")\n\n\n\n\nCalculate Subscores\nNext, we import the item-level response data. For each row in the item level dataset (indicating the response to a single question-item for a single subject), we compare the raw response df_items$response with the answer keys in each interpretation (e.g. keys_orth, keys_tri, etc…), then using those sets, determine the number of correctly selected items(p) and incorrectly selected items (q), which in turn are used to calculate partial[-1/q, +1/p] scores for each interpretation. The resulting scores are then stored on each item in df_items, and can be used to determine which graph interpretation the subject held.\nSpecifically, the following scores are calculated for each item:\nInterpretation Subscores\n\nscore_TRI How consistent is the response with the triangularinterpretation?\nscore_ORTH How consistent is the response with the orthogonalinterpretation?\nscore_BOTH How consistent is the response with both the orthogonal and triangular interpretations?\nscore_SATISFICE is calculated by taking the maximum value of :\n\nscore_SAT_left How consistent is the response with the (left side) Satisficing interpretation?\nscore_SAT_right How consistent is the response with the (right side) Satisficing interpretation\n\nscore_TVERSKY is calculated by taking the maximum value of:\n\nscore_TV_max How consistent is the response with the (maximal) Tversky interpretation?\nscore_TV_start How consistent is the response with the (start-time) Tversky interpretation?\nscore_TV_end How consistent is the response with the (end-time) Tversky interpretation?\nscore_TV_duration How consistent is the response with the (duration) Tversky interpretation?\n\nscore_REF Did the response select only the reference point?\n\nAbsolute Scores\n\nscore_ABS Is the response strictly correct? (triangular interpretation)\nscore_niceABS Is the response strictly correct? (triangular interpretation, not penalizing ref points). This is a more generous version of the Absolute score that does not penalize the participant if in addition to the correct answer in addition to they also select the data point referenced in the question.\n\n\n\nCODE\n#HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#backup <- read_rds('analysis/SGC3B/data/1-study-level/sgc3b_items.rds') #for troubleshooting only\ndf_items <- read_rds('analysis/SGC3B/data/1-study-level/sgc3b_items.rds')\n\n#ADD TEMP IMPASSE COLUMN\ndf_items <- df_items %>% mutate(\n  IMPASSE = substr(condition,2,2),\n  IMPASSE = recode_factor(IMPASSE, \"1\"=\"none\", \"2\"=\"IMPASSE\")\n)\n\n\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\nsource(\"analysis/utils/scoring.R\")\n\n\nnote: this cell takes approximately 30 minutes to run on the full df_items dataframe with 4950 records\n\n\nCODE\n#RUN THIS <OR> THE CALCULATE-SCORES-FORLOOP [not both]\n\n#TROUBLESHOOTING\n# backup <- df_items\n# df_items <- backup %>% sample_n(20)\n\n#ALPHEBETIZE RESPONSE\ndf_items$response = pbmapply(reorder_inplace, df_items$response)\n\n#STRATEGY PARTIAL-SUBSCORES\ndf_items$score_TRI = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tri))\n\ndf_items$score_ORTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_orth))\n\ndf_items$score_BOTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_both))\n\ndf_items$score_SAT_left = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_left))\ndf_items$score_SAT_right = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_right))\n\ndf_items$score_TV_max = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_max))\ndf_items$score_TV_start = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_start))\ndf_items$score_TV_end = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_end))\ndf_items$score_TV_duration = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_duration))\n\n#SPECIAL ABSOLUTE SUBSCORES\ndf_items$score_REF = pbmapply(calc_refscore, df_items$q, df_items$response)\n\n#OLD score_BOTH... new one is above (explicitly in key)\n# df_items$score_BOTH = as.integer((df_items$score_TRI == 1) & (df_items$score_ORTH ==1))\n\n#ABSOLUTE SCORES\ndf_items$score_ABS = as.integer(df_items$correct) \ndf_items$score_niceABS  <- as.integer((df_items$score_TRI == 1)) #tri doesn't penalize ref or ve-area\n\n\n\n\nDerive Interpretation\nFinally, we use the interpretation subscores to classify the response as a particular interpretation. This classification algorithm : (1) First decides if the response matches one or more ‘special’ situations (blank response, reference point response, both ORTH and TRI) (2) If response doesn’t match a special situation, it compares the individual subscores, and subscores and decides if they are discriminant (i.e. are the scores different enough to make a prediction). A discriminant threshold of 0.5pts (on a scale from -1 to +1 is used) (2) If the variance in subscores surpasses the threshold, the interpretation is classified based on the highest subscore (TRIANGULAR, ORTHOGONAL, TVERSKY, SATISFICE) (3) If the variance does not surpass the threshold, the interpretation is labelled as “?”, indicating it cannot be classified, and is of an unknown interpretation.\nThe final output is called interpretation.\n\n\nCODE\n#stoopid extra copying for troubleshooting safety\ntemp <- df_items #%>% head(16) %>% tail(1)\ntemp <- derive_interpretation(temp)\n\n\n[1] \"DERIVING INTERPRETATION\"\n\n\nCODE\ndf_items <- temp\n\n\n\n\n? SPECIAL EXCEPTIONS\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nALSO reconciles issues when interpetation == triangular but scoreniceabs = 0 ::: {.cell}\n\nCODE\n# #temp setup for protection\n# backup <- df_items\ntemp <- df_items %>% mutate(\n  override = \"\"\n)\n\n## CONTROL. Q==1. \"FK\" derives as 'TRI', should be tversky start\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==1) & (IMPASSE ==\"none\") & (response == \"FK\"),\n  tv_type = \"score_TV_start\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"TRI\"\n)\n\n## IMPASS Q==2. \"EK\" derives as 'TRI', should be tversky MAX\ntemp <- temp %>% mutate_when(\n  (q==2) & (IMPASSE ==\"IMPASSE\") & (response == \"EK\"),\n  tv_type = \"score_TV_max\",\n  int2 = \"Tversky\", #override from TRI\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n## CONTROL. Q==3. \"A\" derives as 'unknown', should be tversky duration\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"A\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n\n## CONTROL  Q==3 \"AF\" derives as TRI. hardcode as \"both\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"AF\"),\n  int2 = \"both tri + orth\", #override from TRI\n  interpretation = \"both tri + orth\", #override from TRI\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## CONTROL  Q==3 derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response %in% c(\"EFK\",\"FO\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL  Q==3 \"FG\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"FG\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASS  Q==3 \"AF\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE  Q==3 \"AFG\" derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AFG\", \"DF\", \"EFU\", \"DEF\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE  Q==3 \"AH\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n## IMPASSE  Q==3 \"AO\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE  Q==3 \"AOU\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AOU\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## CONTROL Q==4 AH Derives as TRI RECODE as TVERSKY\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"AH\",\"HK\")),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n## CONTROL Q==4 HJ DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"HJ\",\"HJK\") ),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==4 DEU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DEOU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEOU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 KU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"KU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==4 BD Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BD\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 BDEG Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BDEG\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 AFG Derives as SATISFICE RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"?\", #override from Satisfice\n  interpretation = \"?\", #override from Satisfice\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE Q==4 DH Derives as TRI RECODE as BOTH\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"DH\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AU Derives as TRI RECODE as satisfice\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AU\"),\n  int2 = \"Satisfice\", #override from Triangular\n  interpretation = \"Satisfice\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AZ Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AZ\", \"AX\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AFG Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n\n## IMPASSE Q==5 AF Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AO Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"FO\",\"JO\") ),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"HO\",\"FO\",\"DJO\",\"FGKO\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==5 KO Derives as TRI RECODE as tversky_duration\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response == \"KO\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==7 HOX, OX Derives as TRI but incorrect\n#includes H which is at rather than under 5 hours.\n#give credit \ntemp <- temp %>% mutate_when(\n  (q==7)  & (response %in% c(\"HOX\", \"OX\")),\n  score_niceABS = 1\n)\n\n##  Q==7 Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MO\",\"AX\",\"FJOX\",\"IO\")) ,\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==7 Derives as TRI RECODE as tversky\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MOX\", \"MX\", \"DX\",\"O\",\"X\",\"JX\",\"CO\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==8 Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==8)  & (response %in% c(\"FG\",\"CG\",\"CFG\",\"CGM\",\"CM\",\"ACGP\",\"GM\",\n                             \"AGK\", \"ACG\",\"AFGK\",\"GK\", \"AG\", \"CFGO\",\n                             \"BFG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==11 M Derives as TRI MISSING RESPONSE\n##LEAVE AS TRI + OVERRIDE SCORENABS\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"M\",\"L\") ),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==11 BLM Derives as TRI set at both\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response == \"BLM\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at ORTH\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"AGM\")),\n  int2 = \"Orthogonal\",\n  interpretation = \"Orthogonal\", \n  high_interpretation = \"orthogonal\", \n  override = \"Triangular\"\n)\n##  Q==11 EKM Derives as TRI set at other\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"EKM\",\"JM\")),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"KL\",\"MOX\",\"CLMP\",\"DKL\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==12 Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==12)  & (response %in% c(\"GP\", \"EG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13 E Derives as TRI but incorrect\n##LEAVE AS TRI + OVERRIDE SCORENABS\n##one of two correct answers\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response == \"E\"),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==13 CE Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"CE\",\"EH\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13  Derives as TRI set at ?\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"EO\",\"EK\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"FX\",\"CX\",\"EFX\", \"OX\", \"JX\", \"EX\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"AX\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\",\n  override = \"Triangular\"\n)\n\n##  Q==15 CX Derives as TRI but incorrect \n#within visual margin... give credit\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"CX\",\"KO\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n#  Q==15  Derives as TRI but incorrect \n#missing 1 right answer or within 0.5hr visual error \ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"X\",\"CK\",\"K\",\"GKX\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"DJNX\", \"OX\", \"AK\",\"DNX\", \"AX\",\"ACX\",\n                              \"AGX\",\"CGX\",\"CKX\",\"DKL\",\"GX\",\"GX\",\"HOX\",\n                              \"HX\",\"JNX\")),\n  # tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"AKPX\",\"GK\",\"JX\",\"LX\",\"BK\",\"HK\",\"HNX\",\n                              \"KP\",\"BX\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n#SET BACK\ndf_items <- temp\n\n:::\n\n\nDerive Scaled Score\nThe interpretation response variable gives us the finest grain indication of the reader’s understanding of the graph for a particular question. However, it is a categorical variable, which poses a challenge for analyzing cumulative performance at the subject level. To address this challenge, we derive a scaled_score that converts each possible interpretation to a numeric value on a scale from -1 to +1. This scaling takes advantage of the observation that each interpretation can be positioned along a spectrum of understanding from completely incorrect (orthogonal) to completely correct (triangular). Alternative interpretations lay somewhere between.\nSpecifically, we assign the following values to each interpretation:\n\n(-1) : ORTHOGONAL, SATISFICE (satisfice represents an attempt at an orthogonal answer when none is available)\n(-0.5): ? (some alternative that cannot be identified; but meaningful that it is not orthogonal)\n(0): REFERENCE POINT, BLANK (indicates the individual thinks there is no answer, recognizes that ORTHOGONAL cannot be correct, but does not conceive of triangular)\n(+0.5) TVERSKY, BOTH TRI + ORTH (indicates that they “see” a triangular response, but lack certainty and also select the ORTHOGONAL response)\n(+1) TRIANGULAR +1\n\n\n\nCODE\ndf_items$score_SCALED <- calc_scaled(df_items$interpretation)\n\n\n\n\nDerive State Score\nThe scaled score represents a 5-category ordering of understanding. We also derive a 3-category ordering that gives higher grained access to “orthogonal-like” vs “uncertain” vs “triangle-like” responses.\nSpecifically, we assign the following values to each interpretation:\n\n(orth-like) : orthogonal, satisfice\n(unknown) : unidentified alternatives, blank, both tri&orth, and reference point responses\n(tri-like) : Tverskian and triangular responses\n\n\n\nCODE\ndf_items <- df_items %>% mutate (\n  score_STATE = recode_factor(df_items$score_SCALED,\n                         \"-1\" = \"orth-like\",\n                         \"-0.5\" = \"unknown\",\n                         \"0\" = \"unknown\",\n                         \"0.5\" = \"tri-like\",\n                         \"1\" = \"tri-like\"),\n  score_STATE = as.ordered(score_STATE))"
  },
  {
    "objectID": "analysis/SGC3B/2_sgc3B_scoring.html#summarize-by-subject",
    "href": "analysis/SGC3B/2_sgc3B_scoring.html#summarize-by-subject",
    "title": "11  Response Scoring",
    "section": "SUMMARIZE BY SUBJECT",
    "text": "SUMMARIZE BY SUBJECT\nNext, we summarize the item level scores by subject in order to calculate cummulative subscores to be stored on the subject record.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#import subjects\ndf_subjects <- read_rds('analysis/SGC3B/data/1-study-level/sgc3b_participants.rds') %>% mutate(subject = as.character(subject)) %>% arrange(subject)\n\n#make temporary copies for testing safety\ns = df_subjects\ni = df_items \n\n#summarize\ntest_subs <- summarise_bySubject(s,i)\n\n\n`summarise()` has grouped output by 'subject'. You can override using the\n`.groups` argument.\n\n\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n\n\nCODE\ndf_subjects <- test_subs\n\n\nWe also summarize absolute and scaled score progress at each question in the task, to explore cumulative performance over the task.\n\n\nCODE\n#GET ABSOLUTE PROGRESS \ndf_absolute_progress <- progress_Absolute(df_items)\n\n#GET SCALED PROGRESS\ndf_scaled_progress <- progress_Scaled(df_items)"
  },
  {
    "objectID": "analysis/SGC3B/2_sgc3B_scoring.html#explore-distributions",
    "href": "analysis/SGC3B/2_sgc3B_scoring.html#explore-distributions",
    "title": "11  Response Scoring",
    "section": "EXPLORE DISTRIBUTIONS",
    "text": "EXPLORE DISTRIBUTIONS\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#create temp data frame for visualizations\ndf = df_items %>% filter (q %nin% c(6,9)) %>% mutate(\n  score_niceABS = as.factor(score_niceABS),\n  pretty_interpretation = factor(interpretation,\n    levels = c(\"Orthogonal\", \"Satisfice\", \n               \"frenzy\",\"?\",\n                \"reference\",\"blank\",\n                \"Tversky\", \"both tri + orth\",\n               \"Triangular\" ))\n  )\n\n\n\nAbsolute Score\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE FULL TASK\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (all Items)\",\n        subtitle = paste(\"Impasse Condition (blue) yields more correct responses across the entire task\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY ITEM\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(pretty_condition~q) + \n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields more correct responses on each item\",\n        y = \"Proprition of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY SUBJECT\ngf_props(~s_NABS, fill = ~pretty_condition, position = position_dodge(), data = df_subjects) %>%\ngf_facet_wrap(~pretty_condition)+\n  labs( x = \"Total Absolute Score\",\n        title = \"Distribution of Total Absolute Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher total absolute scores\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE TEST PHASE\ngf_props(~item_test_NABS, fill = ~pretty_condition, \n             data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + \n  labs( x = \"Absolute Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Absolute Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nScaled Score\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#DISTRIBUTION SCALED SCORE FULL TASK\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (all Items)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores across the entire task\",\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY ITEM\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(q~pretty_condition) + \n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores on each item\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  scale_y_continuous(breaks=c(0,0.5)) + \n  theme_minimal() + theme(legend.position=\"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY SUBJECT\ngf_props(~s_SCALED, fill = ~pretty_condition, data = df_subjects)  %>% \n  gf_facet_grid(pretty_condition ~. )+\n  labs( x = \"Total Scaled Score\", \n        title = \"Distribution of Total Scaled Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher cumulative scaled scores\",\n        y = \"Number of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE TEST PHASE\ngf_histogram(~item_test_SCALED, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + \n  labs( x = \"Scaled Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Scaled Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nInterpretations\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION\ngf_props(~pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition ~ ., labeller = label_both) + \n  labs( title = \"Distribution of Interpretations (across Task)\",\n        x = \"Graph Interpretation\",\n        y = \"Proportion of Responses\",\n        subtitle = \"Impasse condition (blue) yields fewer Orthogonal and more Triangular responses\") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION ACROSS ITEMS\ngf_propsh(~ pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more Triangular responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION TYPE ACROSS ITEMS\ngf_propsh(~ high_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more positive trending responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\nggbarstats( data = df, x = score_STATE, y = pretty_condition)\n\n\n\n\n\nCODE\nggbarstats( data = df, x = high_interpretation, y = pretty_condition)\n\n\n\n\n\n\n\nProgress over Task\n\n\nCODE\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ndf_scaled_progress <- df_scaled_progress %>% \n  mutate(\n    implicit = recode_factor(pretty_condition,\n                            \"none-control\"=\"none\",\n                            \"none-impasse\"=\"impasse\",\n                            \"img-control\"=\"none\",\n                            \"img-impasse\"=\"impasse\",\n                            \"ixv-control\"=\"none\",\n                            \"ixv-impasse\"=\"impasse\"),\n    explicit = recode_factor(pretty_condition,\n                            \"none-control\"=\"none\",\n                            \"none-impasse\"=\"none\",\n                            \"img-control\"=\"img\",\n                            \"img-impasse\"=\"img\",\n                            \"ixv-control\"=\"ixv\",\n                            \"ixv-impasse\"=\"ixv\")\n  )\n\n\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(explicit~implicit) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nInterpretation Subscores\n\n\nCODE\ngf_density(~ s_TRI, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Triangular Score\",\n        subtitle = \"Impasse shifts density toward higher Triagular scores\",\n        x = \"Item Triangular Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_ORTH, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Orthogonal Score\",\n        subtitle = \"Impasse shifts density toward lower Orthogonal scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_TVERSKY, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Tversky Score\",\n        subtitle = \"Impasse shifts density toward higher Tversky scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_histogram(~ s_SATISFICE, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Satisfice Score\",\n        subtitle = \"Satisficing only occurs in impasse, when no orthogonal response is available\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC3B/2_sgc3B_scoring.html#peek",
    "href": "analysis/SGC3B/2_sgc3B_scoring.html#peek",
    "title": "11  Response Scoring",
    "section": "PEEK",
    "text": "PEEK\n\n\nCODE\nggbetweenstats( data = df_subjects,\n                x = pretty_condition, y = s_NABS,\n                type = \"non-parametric\",\n                title = \"Total Absolute Score [directional test]\")\n\n\n\n\n\nCODE\nggbarstats( data = df_items,\n                x = score_niceABS, y = pretty_condition,\n                type = \"non-parametric\",\n                title = \"Total Absolute Score [directional test]\")\n\n\n\n\n\nCODE\nggbarstats( data = df_items,\n                x = interpretation, y = pretty_condition,\n                type = \"non-parametric\",\n                title = \"Interpretation [directional test]\")\n\n\nWarning: Number of labels is greater than default palette color count.Select\nanother color `palette` (and/or `package`).\n\n\n\n\n\nCODE\nggbarstats( data = df_items,\n                x = score_STATE, y = pretty_condition,\n                type = \"non-parametric\",\n                title = \"State [directional test]\")"
  },
  {
    "objectID": "analysis/SGC3B/2_sgc3B_scoring.html#explore-responses",
    "href": "analysis/SGC3B/2_sgc3B_scoring.html#explore-responses",
    "title": "11  Response Scoring",
    "section": "EXPLORE RESPONSES",
    "text": "EXPLORE RESPONSES\nIn this section we explore responses given by participants to each particular item in the graph comprehension task, indicate how each response was scored, and what interpretation of the graph is indicated by different responses.\n\n\nCODE\ngf_props(~ score_niceABS, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Item Absolute Score\", title = \"Distribution of Accuracy  | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nSCAFFOLD PHASE\nThe first five questions constitute the ‘scaffold’ (or learning) phase, where participants see a different version of the stimulus (specifically a different dataset is visualized) invoking a different experimental condition.\n\nQuestion #1\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ1. Control Conditions\nWe start by exploring the range of response options checked by participants on Question 1, for those assigned to the control (non-impasse) condition (condition = 111).\n\n\n\nFigure 11.1: Question 1 — Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==1)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q1 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q1 Control Condition :  Which shift(s) start at 11 am?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    A \n    OI \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    CF \n    Z \n  \n  \n    Tversky [start diagonal] \n    F \n    Z \n  \n  \n    Tversky [end diagonal] \n    C \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nHere we summarize the distinct response options given by participants on this item. Each letter in response indicates a checkbox selected by the participant (See Figure 22.1 ). n indicates the number of participants who gave this response, while interpretation indicates the graph interpretation most consistent with that response. At the right of this table are the Absolute, followed by Partial Credit subscores for each response. NA indicates that there is no score calculated (occurs when there is no subset of response options that accord with that interpretation for this question).\nNotice that for this Question, the Triangular answer is the same as the Tversky [start diagonal] answer. In fact, for most questions, one of the Tversky sub-types will match the correct response.\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #1 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 1 & condition %in% c(111,211,311)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 1) %>% \n  # pack_rows(\"Lines-Connect\", 2, 2) %>% \n  # pack_rows(\"Orthogonal\", 3, 3) %>% \n  # pack_rows(\"Other\", 4, 4)  %>% \n  # pack_rows(\"Unknown\", 5, 7)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #1 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    70 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    CF \n    7 \n    Tversky \n    0 \n    0.923 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    CD \n    1 \n    Tversky \n    0 \n    -0.154 \n    0.929 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    A \n    106 \n    Orthogonal \n    0 \n    -0.077 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AF \n    1 \n    both tri + orth \n    0 \n    0.923 \n    0.923 \n    NA \n    0.917 \n    0.5 \n  \n  \n    DK \n    1 \n    ? \n    0 \n    -0.154 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQ1. Impasse Condition\n\n\n\nFigure 11.2: Question 1 — Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==1)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q1 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q1 Impasse Condition :  Which shift(s) start at 11 am?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n     \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n    O \n     \n  \n  \n    Satisficing [right] \n    AI \n     \n  \n  \n    Tversky [maximal] \n    CF \n     \n  \n  \n    Tversky [start diagonal] \n    F \n     \n  \n  \n    Tversky [end diagonal] \n    C \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #1 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 1 & condition %in% c(121,221,321)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 1) %>% \n  # pack_rows(\"Lines-Connect\", 2, 4) %>% \n  # pack_rows(\"Satisfice\", 5, 9) %>% \n  # pack_rows(\"Other\", 10, 10) %>% \n  # pack_rows(\"Unknown\", 11, 12) %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #1 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    104 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    -0.071 \n    NA \n    1.0 \n  \n  \n    CF \n    20 \n    Tversky \n    0 \n    0.929 \n    1.000 \n    -0.143 \n    NA \n    0.5 \n  \n  \n    C \n    2 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    -0.071 \n    NA \n    0.5 \n  \n  \n    O \n    20 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    AI \n    7 \n    Satisfice \n    0 \n    -0.143 \n    -0.143 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    I \n    3 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    A \n    1 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    AO \n    1 \n    Satisfice \n    0 \n    -0.143 \n    -0.143 \n    0.929 \n    NA \n    -1.0 \n  \n  \n    IO \n    1 \n    Satisfice \n    0 \n    -0.143 \n    -0.143 \n    0.929 \n    NA \n    -1.0 \n  \n  \n     \n    26 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n    BDEFGKU \n    1 \n    frenzy \n    0 \n    0.571 \n    0.571 \n    -0.500 \n    NA \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.071 \n    NA \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\nWe see that nearly all of the subjects selected a response consistent with one of the identified interpretations. Responses that do not accord with any interpretation are indicated as ? .\nTODO ADJUST ‘both’ to select for both tri/satisfice or both tri/orth\n\n\n\n\n\n\n\nWhich shifts start at 11am?\n\n\n\n\n\n\nResponse: F\n\nindicates the triangular (correct) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (11am) on the x-axis, and following the right-diagonal gridline, identifying data point F.\n\n\n\n\nResponse: [C, F]\n\nindicates a maximal-Tversky strategy following connecting lines\nConsistent with the reader identifying the reference point (11am) on the x-axis, and following both the right-diagonal and left-diagonal gridlines, identifying both datapoints F and C gridline.\n\n\n\n\nResponses: [AOI]\n\nindicates a satisficing strategy\nConsistent with the reader identifying the datapoints nearest to the orthogonal projection from the reference point point\n\n\n\n\nTwo responses were given that were not consistent with any of the identified interpretations.\n\n\n\n\n\n\n[E],[X]\n\n\n\n\n\n\n\n\n\n\n\nQuestion #2\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ2. Control Condition\n\n\n\nFigure 11.3: Q2—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==2)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q2 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q2 Control Condition :  Which shift(s) start at the same time as D?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    K \n    Z \n  \n  \n    Orthgonal \n    E \n    G \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AKJX \n    Z \n  \n  \n    Tversky [start diagonal] \n    AK \n    Z \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    J \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #2 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 2 & condition  %in% c(111,211,311)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 2) %>%\n  # pack_rows(\"Lines-Connect\", 3, 4) %>% \n  # pack_rows(\"Orthogonal\", 5, 7) %>%\n  # pack_rows(\"Other\", 8, 8)  %>% \n  # pack_rows(\"Unknown\", 9, 10)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #2 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    K \n    79 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    DK \n    2 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    J \n    5 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AK \n    3 \n    Tversky \n    0 \n    0.917 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    ADKX \n    1 \n    Tversky \n    0 \n    0.833 \n    0.909 \n    NA \n    -0.250 \n    0.5 \n  \n  \n    X \n    1 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    E \n    78 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    DE \n    2 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EG \n    1 \n    Orthogonal \n    0 \n    -0.167 \n    -0.154 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    D \n    11 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\nAgain, we see that most subjects selected a response consistent with one of the identified interpretations. (note, when the question stem includes a data point rather than time as reference, we do not penalize respondents for selecting the reference data point in addition to an interpretation consistent response. For example, in this question, we do not penalize respondents for selecting option D, the reference point in the question. )\n\n\n\n\n\n\n\nWhich shift(s) start at the same time as D?\n\n\n\n\nReponse: E (also EG, DE)\n\nindicates an orthogonal (incorrect) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (D) on the graph, projecting an invisible orthogonal line through it, and locating data point E.\n\n\n\n\nResponse: K (also KD)\n\nindicates an triangular (correct) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (D) on the graph, and following its descending-leftward diagonal gridline, and locating data point K.\n\n\n\n\nResponse: AK\n\nindicates an Tversky strategy following connecting lines\nConsistent with the reader identifying the reference point (D) on the graph, and following its descending-leftward diagonal gridline, and locating data point K then continuing along the connecting ascending leftward diagonal locating data point A.\n\n\n\n\nResponse: J\n\nindicates an Tversky strategy following connecting lines\nConsistent with the reader identifying the reference point (D) on the graph, and following its horizontal gridline to the y-axis, locating data point J.\n\n\n\n\nResponse: D\n\nthe reader selected only the reference point\nConsistent with the reader identifying the reference point (D) on the graph\nPossibly indicates uncertainty or confusion\n\n\n\n\n\n\n\n\n\n\n\nB\nC\n\n\n\n\n\n\n\n\n\n\n\nQ2. Impasse Condition\n\n\n\nFigure 11.4: Q2—Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==2)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q2 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q2 Impasse Condition :  Which shift(s) start at the same time as D?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    K \n    Z \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n    G \n     \n  \n  \n    Tversky [maximal] \n    JKEX \n    Z \n  \n  \n    Tversky [start diagonal] \n    K \n    Z \n  \n  \n    Tversky [end diagonal] \n    EX \n     \n  \n  \n    Tversky [duration line] \n    J \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #2 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 2 & condition  %in% c(121,221,321)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 2) %>%\n  # pack_rows(\"Lines-Connect\", 3, 10) %>% \n  # pack_rows(\"Satisfice\", 11, 12) %>%\n  # pack_rows(\"Other\", 13, 16)  %>% \n  # pack_rows(\"Unknown\", 17, 18)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #2 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    K \n    128 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    DK \n    2 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    EK \n    8 \n    Tversky \n    0 \n    0.917 \n    0.917 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    E \n    4 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    J \n    4 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    EX \n    2 \n    Tversky \n    0 \n    -0.167 \n    1.000 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    EKX \n    1 \n    Tversky \n    0 \n    0.833 \n    0.917 \n    -0.231 \n    NA \n    0.5 \n  \n  \n    JK \n    1 \n    Tversky \n    0 \n    0.917 \n    0.923 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    G \n    6 \n    Satisfice \n    0 \n    -0.083 \n    -0.077 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    BG \n    1 \n    Satisfice \n    0 \n    -0.167 \n    -0.154 \n    0.923 \n    NA \n    -1.0 \n  \n  \n    D \n    10 \n    reference \n    0 \n    0.000 \n    NA \n    0.000 \n    NA \n    0.0 \n  \n  \n     \n    15 \n    blank \n    0 \n    0.000 \n    NA \n    0.000 \n    NA \n    0.0 \n  \n  \n    ACDFHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.250 \n    0.250 \n    -0.846 \n    NA \n    -0.5 \n  \n  \n    BEGKUZ \n    1 \n    frenzy \n    0 \n    0.667 \n    0.667 \n    0.615 \n    NA \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    -0.167 \n    -0.154 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    0.000 \n    0.000 \n    -0.077 \n    NA \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\n\nQuestion #3\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ3. Control Condition\n\n\n\nFigure 11.5: Q3—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==3)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q3 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q3 Control Condition :  Which shift(s) begin when C ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    Z \n    FIO \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AUBFOJ \n     \n  \n  \n    Tversky [start diagonal] \n    OJ \n     \n  \n  \n    Tversky [end diagonal] \n    F \n    Z \n  \n  \n    Tversky [duration line] \n    AUB \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #3 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 3 & condition  %in% c(111,211,311)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #3 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    91 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    0.0 \n    1.0 \n  \n  \n    EFU \n    1 \n    Triangular \n    0 \n    0.833 \n    0.833 \n    NA \n    -0.2 \n    1.0 \n  \n  \n    A \n    20 \n    Tversky \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    DJO \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.917 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    IO \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    0.0 \n    0.5 \n  \n  \n    O \n    1 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    0.0 \n    0.5 \n  \n  \n    Z \n    60 \n    Orthogonal \n    0 \n    0.000 \n    0.000 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    AF \n    1 \n    both tri + orth \n    0 \n    0.917 \n    0.917 \n    NA \n    -0.1 \n    0.5 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    0.0 \n  \n  \n    ABDEFGKUZ \n    1 \n    frenzy \n    0 \n    0.417 \n    0.455 \n    NA \n    0.3 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    U \n    2 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    DE \n    1 \n    ? \n    0 \n    -0.167 \n    -0.167 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    EFK \n    1 \n    ? \n    0 \n    0.833 \n    0.833 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    EU \n    1 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 17)  \n\n\nTODO\n\naddress RESPONSE FKE which is classified as Triangular but doesn’t seem to fit this interpretation?\nShould O,K be considered Tvresky ?\nconsider adding trapdoor on n_q, such that score is penalized (OR interpretation is not predicted?) if the Ss selects more than 1 extra options, or is missing more than 2 options?\nLEFT OFF HERE\n\n\n\n\n\n\n\n\nWhat shift(s) begin when C ends?\n\n\n\n\n\n\nResponse: Z\n\nindicates an orthogonal (incorrect) interpretation of the coordinate system\nConsistent with the reader identifying the reference point (C) then using the duration encoded on the y-axis (2) , project along the horizontal gridline by two hours, and then project an invisible orthogonal line through that time (12PM) locating data point Z.\n\n\n\n\nResponse: F\n\nindicates a (correct) triangular interpretation of the coordinate system\nConsistent with the reader identifying the reference point (C) on the graph, and following the descending gridline to the x-axis to identify the end-time (11AM) and then following the ascending gridline to identify datapoints starting at 11AM and locating data point F.\n\n\n\n\nResponse: AUB (also A)\n\nindicates a Tversky strategy following connecting lines (duration)\nConsistent with the reader identifying the reference point (C) on the graph, and following the horizontal y-axis gridline and locating data points A U B.\n\n\n\n\nResponse: OJ\n\nindicates a Tversky strategy following connecting lines (start-time)\nConsistent with the reader identifying the reference point (C) on the graph, and following the ascending diagonal gridline and locating data points O J.\n\n\n\n\nResponse: C\n\nthe participant selected the point referenced in the question\npossibly indicates confusion or uncertainty\n\n\n\n\nResponse: AIOZFHJXKUDEGB\n\nthe participant selects all (or nearly all) the data points\npossibly indicates confusion or uncertainty\n\n\n\n\nSix responses (from 9 participants) appear inconsistent with any interpretation.\n\n\n\n\n\n\n\n\nK (n=3)\nAH (n=1)\nDE (n=1)\n\n\n\n\n\n\n\n\n\nUE (n=1)\nU (n=1)\nE (n=1)\n\n\n\n\n\n\n\n\n\n\nQ3. Impasse Condition\n\n\n\nFigure 11.6: Q3—Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==3)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q3 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q3 Impasse Condition :  Which shift(s) begin when C ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n     \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n    AI \n     \n  \n  \n    Satisficing [right] \n    F \n     \n  \n  \n    Tversky [maximal] \n    BJ \n     \n  \n  \n    Tversky [start diagonal] \n    J \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n    B \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nTODO investigate these responses 17 at O?\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #3 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 3 & condition  %in% c(121,221,321)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #3 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    127 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    1.000 \n    NA \n    1.0 \n  \n  \n    B \n    5 \n    Tversky \n    0 \n    -0.077 \n    1.000 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    AH \n    3 \n    Tversky \n    0 \n    -0.154 \n    -0.154 \n    0.417 \n    NA \n    0.5 \n  \n  \n    AOU \n    3 \n    Tversky \n    0 \n    -0.231 \n    -0.231 \n    0.333 \n    NA \n    0.5 \n  \n  \n    AF \n    2 \n    Tversky \n    0 \n    0.923 \n    -0.154 \n    0.923 \n    NA \n    0.5 \n  \n  \n    J \n    2 \n    Tversky \n    0 \n    -0.077 \n    1.000 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    AO \n    1 \n    Tversky \n    0 \n    -0.154 \n    -0.154 \n    0.417 \n    NA \n    0.5 \n  \n  \n    BE \n    1 \n    Tversky \n    0 \n    -0.154 \n    0.923 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    JK \n    1 \n    Tversky \n    0 \n    -0.154 \n    0.923 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    A \n    4 \n    Satisfice \n    0 \n    -0.077 \n    -0.077 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    AFI \n    2 \n    Satisfice \n    0 \n    0.846 \n    -0.231 \n    0.917 \n    NA \n    -1.0 \n  \n  \n    AI \n    2 \n    Satisfice \n    0 \n    -0.154 \n    -0.154 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    AIO \n    1 \n    Satisfice \n    0 \n    -0.231 \n    -0.231 \n    0.917 \n    NA \n    -1.0 \n  \n  \n    I \n    1 \n    Satisfice \n    0 \n    -0.077 \n    -0.077 \n    0.500 \n    NA \n    -1.0 \n  \n  \n     \n    12 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n    ABDEFGHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    -0.5 \n  \n  \n    BDEFGHJKUXZ \n    1 \n    frenzy \n    0 \n    0.231 \n    0.250 \n    0.231 \n    NA \n    -0.5 \n  \n  \n    BDEGKUZ \n    1 \n    frenzy \n    0 \n    -0.538 \n    0.538 \n    -0.538 \n    NA \n    -0.5 \n  \n  \n    O \n    8 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    DK \n    2 \n    ? \n    0 \n    -0.154 \n    -0.154 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    DEF \n    1 \n    ? \n    0 \n    0.846 \n    -0.231 \n    0.846 \n    NA \n    -0.5 \n  \n  \n    DF \n    1 \n    ? \n    0 \n    0.923 \n    -0.154 \n    0.923 \n    NA \n    -0.5 \n  \n  \n    EU \n    1 \n    ? \n    0 \n    -0.154 \n    -0.154 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    U \n    1 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.077 \n    -0.077 \n    -0.077 \n    NA \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 5) %>% \n#   pack_rows(\"Lines-Connect\", 3, 5) %>% \n#   pack_rows(\"Satisfice\", 6, 15) %>% \n#   pack_rows(\"Other\", 16, 21) %>% \n#   pack_rows(\"Unknown\", 22, 29) \n\n\n\n\n\nQuestion #4\n[PLACEHOLDER — NOT YET CONSIDERED THIS QUESTION]\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ4. Control Condition\n\n\n\nFigure 11.7: Q4—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==4)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q4 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q4 Control Condition :  Which shift(s) end at 4 pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    H \n     \n  \n  \n    Orthgonal \n    U \n    OF \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    BH \n     \n  \n  \n    Tversky [start diagonal] \n    B \n     \n  \n  \n    Tversky [end diagonal] \n    H \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #4 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 4 & condition  %in% c(111,211,311)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #4 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    H \n    111 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    AH \n    2 \n    Tversky \n    0 \n    0.929 \n    0.929 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    B \n    1 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    U \n    47 \n    Orthogonal \n    0 \n    -0.071 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    2 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    UX \n    1 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.917 \n    -1.0 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    E \n    9 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DE \n    6 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    DEOU \n    1 \n    ? \n    0 \n    -0.286 \n    -0.286 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    F \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    HJ \n    1 \n    ? \n    0 \n    0.929 \n    0.929 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    KU \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.917 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 3) %>% \n#   pack_rows(\"Orthogonal\", 4, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 16) \n\n\n\nTBL4 test\n\n\n\n\n\n\nOrthogonal\nOrthogonal-LinesConnecting\n\n\n\n\n |\n\n\n\nIf the subject calculates end time for each data point (using duration on the y axis), they find that an (incorrect) projection of point U ‘end time’ intersects with the (incorrect) orthogonal projection of 4:00PM.\nAlternatively, some subjects selected points E and D which intersect with an orthogonal projection from 4:00pm. We call this an ’orthogonal-lines connect” strategy, because it (incorrectly) adapts the orthogonal procedure for finding events that start at 4:00pm in order to find those that end at 4:00pm, thus selecting any data point with an orthogonal intersection with 4:00pm.\n\n\n\n\n\nQ4. Impasse Condition\n\n\n\nFigure 11.8: Q4—Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==4)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q4 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q4 Impasse Condition :  Which shift(s) end at 4 pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    H \n     \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n    FO \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    BH \n     \n  \n  \n    Tversky [start diagonal] \n    B \n     \n  \n  \n    Tversky [end diagonal] \n    H \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nTODO investigate D? add to tversky or orth?\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #4 (Impasse Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 4 & condition  %in% c(121,221,321)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #4 (Impasse Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    H \n    133 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    B \n    7 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    BH \n    2 \n    Tversky \n    0 \n    0.929 \n    1.000 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    FO \n    4 \n    Satisfice \n    0 \n    -0.143 \n    -0.143 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    O \n    4 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    F \n    2 \n    Satisfice \n    0 \n    -0.071 \n    -0.071 \n    0.500 \n    NA \n    -1.0 \n  \n  \n    DH \n    1 \n    both tri + orth \n    0 \n    0.929 \n    0.929 \n    -0.154 \n    NA \n    0.5 \n  \n  \n     \n    8 \n    blank \n    0 \n    0.000 \n    0.000 \n    0.000 \n    NA \n    0.0 \n  \n  \n    D \n    12 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    A \n    4 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    K \n    3 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    AH \n    2 \n    ? \n    0 \n    0.929 \n    0.929 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    J \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    BD \n    1 \n    ? \n    0 \n    -0.143 \n    0.929 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    DK \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    -0.077 \n    NA \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 6) %>% \n#   pack_rows(\"Satisfice\", 7, 10) %>% \n#   pack_rows(\"Other\", 11, 12) %>% \n#   pack_rows(\"Unknown\", 13, 19) \n\n\n\n\n\nQuestion #5\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nQ5. Control Condition\n\n\n\nFigure 11.9: Q5—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==5)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q5 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q5 Control Condition :  Coffee breaks happen halfway through a shift. Which shift(s) share a break with I?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    O \n    AZ \n  \n  \n    Orthgonal \n    U \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    UGX \n    AZKD \n  \n  \n    Tversky [start diagonal] \n    X \n     \n  \n  \n    Tversky [end diagonal] \n    UG \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #5 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 5 & condition  %in% c(111,211,311)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #5 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    O \n    116 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    IO \n    2 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    AIO \n    1 \n    Triangular \n    1 \n    1.000 \n    -0.143 \n    NA \n    -0.154 \n    1.0 \n  \n  \n    OZ \n    1 \n    Triangular \n    1 \n    1.000 \n    -0.143 \n    NA \n    -0.154 \n    1.0 \n  \n  \n    X \n    2 \n    Tversky \n    0 \n    -0.091 \n    1.000 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    G \n    1 \n    Tversky \n    0 \n    -0.091 \n    0.500 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    U \n    40 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    HU \n    1 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    I \n    2 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    DEHJKO \n    1 \n    frenzy \n    0 \n    0.545 \n    -0.462 \n    NA \n    -0.462 \n    -0.5 \n  \n  \n    F \n    4 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    Z \n    3 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    J \n    2 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    AK \n    1 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    DEHJ \n    1 \n    ? \n    0 \n    -0.364 \n    -0.308 \n    NA \n    -0.308 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HK \n    1 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>% \n#   pack_rows(\"Lines-Connect\", 5, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 9) %>% \n#   pack_rows(\"Other\", 10, 11) %>% \n#   pack_rows(\"Unknown\", 12, 22) \n\n\nTODO note the compelling cases of internal inconsistency (HJDE)\n\n\nQ5. Impasse Condition\n\n\n\nFigure 11.10: Q5—Impasse Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"impasse\") %>% filter(Q==5)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q5 Impasse Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q5 Impasse Condition :  Coffee breaks happen halfway through a shift. Which shift(s) share a break with I?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    A \n     \n  \n  \n    Orthgonal \n     \n     \n  \n  \n    Satisficing [left] \n    FUZ \n     \n  \n  \n    Satisficing [right] \n    H \n     \n  \n  \n    Tversky [maximal] \n    OX \n     \n  \n  \n    Tversky [start diagonal] \n    OX \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #5 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 5 & condition  %in% c(121,221,321)) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #5 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    A \n    128 \n    Triangular \n    1 \n    1.000 \n    -0.083 \n    -0.077 \n    NA \n    1.0 \n  \n  \n    O \n    10 \n    Tversky \n    0 \n    -0.077 \n    0.500 \n    -0.077 \n    NA \n    0.5 \n  \n  \n    OX \n    5 \n    Tversky \n    0 \n    -0.154 \n    1.000 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    AF \n    4 \n    Tversky \n    0 \n    0.923 \n    -0.167 \n    0.242 \n    NA \n    0.5 \n  \n  \n    AFG \n    2 \n    Tversky \n    0 \n    0.846 \n    -0.250 \n    0.152 \n    NA \n    0.5 \n  \n  \n    AO \n    1 \n    Tversky \n    0 \n    0.923 \n    0.417 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    DJX \n    1 \n    Tversky \n    0 \n    -0.231 \n    0.333 \n    -0.231 \n    NA \n    0.5 \n  \n  \n    EX \n    1 \n    Tversky \n    0 \n    -0.154 \n    0.417 \n    -0.154 \n    NA \n    0.5 \n  \n  \n    H \n    6 \n    Satisfice \n    0 \n    -0.077 \n    -0.083 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    FHZ \n    1 \n    Satisfice \n    0 \n    -0.231 \n    -0.250 \n    0.846 \n    NA \n    -1.0 \n  \n  \n    FU \n    1 \n    Satisfice \n    0 \n    -0.154 \n    -0.167 \n    0.667 \n    NA \n    -1.0 \n  \n  \n    HI \n    1 \n    Satisfice \n    0 \n    -0.077 \n    -0.083 \n    1.000 \n    NA \n    -1.0 \n  \n  \n    HK \n    1 \n    Satisfice \n    0 \n    -0.154 \n    -0.167 \n    0.923 \n    NA \n    -1.0 \n  \n  \n    HKUZ \n    1 \n    Satisfice \n    0 \n    -0.308 \n    -0.333 \n    0.769 \n    NA \n    -1.0 \n  \n  \n    I \n    3 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n     \n    6 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    NA \n    0.0 \n  \n  \n    ABCFGUZ \n    1 \n    frenzy \n    0 \n    0.538 \n    -0.583 \n    0.636 \n    NA \n    -0.5 \n  \n  \n    FHJKX \n    1 \n    frenzy \n    0 \n    -0.385 \n    0.167 \n    0.692 \n    NA \n    -0.5 \n  \n  \n    J \n    4 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    F \n    3 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    0.333 \n    NA \n    -0.5 \n  \n  \n    K \n    3 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    -0.077 \n    NA \n    -0.5 \n  \n  \n    AX \n    1 \n    ? \n    0 \n    0.923 \n    0.417 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.154 \n    -0.167 \n    -0.154 \n    NA \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.077 \n    -0.083 \n    -0.077 \n    NA \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 7) %>% \n#   pack_rows(\"Lines-Connect\", 8, 13) %>% \n#   pack_rows(\"Orthogonal\", 14, 16) %>% \n#   pack_rows(\"Other\", 17, 21) %>% \n#   pack_rows(\"Unknown\", 22, 31) \n\n\n\n\n\n\nTESTING PHASE\nThe following 10 questions were the same for both conditions.\n\nQuestion #7\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 11.11: Q7-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==7)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts less than 5 hours long start at the same time?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    OX \n     \n  \n  \n    Orthgonal \n    BF \n    M \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    IJZNCHOX \n     \n  \n  \n    Tversky [start diagonal] \n    OX \n     \n  \n  \n    Tversky [end diagonal] \n    IJZN \n     \n  \n  \n    Tversky [duration line] \n    CH \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #7\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 7) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #7\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    OX \n    206 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    HOX \n    2 \n    Triangular \n    1 \n    0.938 \n    0.938 \n    NA \n    -0.200 \n    1.0 \n  \n  \n    CH \n    3 \n    Tversky \n    0 \n    -0.125 \n    1.000 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    IJ \n    2 \n    Tversky \n    0 \n    -0.125 \n    0.500 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    DX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    JX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    BF \n    131 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FZ \n    14 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    B \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BJ \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    F \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    FG \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BDFIJNOXZ \n    1 \n    frenzy \n    0 \n    0.562 \n    0.643 \n    NA \n    0.533 \n    -0.5 \n  \n  \n    BDIJMNOX \n    1 \n    frenzy \n    0 \n    0.625 \n    0.625 \n    NA \n    0.100 \n    -0.5 \n  \n  \n    BIO \n    1 \n    ? \n    0 \n    0.375 \n    0.375 \n    NA \n    0.367 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DN \n    1 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    KM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 5) %>%\n#   pack_rows(\"Lines-Connect\", 6, 9) %>%\n#   pack_rows(\"Orthogonal\", 10, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 17)\n\n\n\n\nQuestion #8\n\n\n\nFigure 11.12: Q8-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==8)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q: \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q:  Which shift(s) under 7 hours long starts before B starts, and ends after X ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    E \n    F \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #8\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 8) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #8\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    187 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.071 \n    1.0 \n  \n  \n    AGK \n    5 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    AG \n    2 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    CFGO \n    2 \n    Tversky \n    0 \n    0.800 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CG \n    2 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    FG \n    2 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.071 \n    0.5 \n  \n  \n    CM \n    1 \n    Tversky \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    E \n    94 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EIJ \n    4 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EFIJ \n    3 \n    Orthogonal \n    0 \n    -0.267 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EF \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EFI \n    1 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EI \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EG \n    1 \n    both tri + orth \n    0 \n    0.933 \n    NA \n    NA \n    0.929 \n    0.5 \n  \n  \n     \n    9 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    DEHIJNOZ \n    2 \n    frenzy \n    0 \n    -0.533 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    EFGIJ \n    2 \n    frenzy \n    0 \n    0.733 \n    NA \n    NA \n    0.786 \n    -0.5 \n  \n  \n    CDEFGHIJNOZ \n    1 \n    frenzy \n    0 \n    0.333 \n    NA \n    NA \n    0.357 \n    -0.5 \n  \n  \n    CDHIJNOZ \n    1 \n    frenzy \n    0 \n    -0.533 \n    NA \n    NA \n    -0.571 \n    -0.5 \n  \n  \n    J \n    8 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    M \n    6 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    F \n    5 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    IJ \n    5 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    A \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    I \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    C \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    AK \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    JM \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    AJN \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    DHNZ \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    DIJN \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    DJN \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    EFGI \n    1 \n    ? \n    0 \n    0.800 \n    NA \n    NA \n    0.857 \n    -0.5 \n  \n  \n    IJM \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    JO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Orthogonal\", 11, 16) %>%\n#   pack_rows(\"Other\", 17, 21) %>%\n#   pack_rows(\"Unknown\", 22, 45)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #10\n\n\n\nFigure 11.13: Q10-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==10)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    E \n     \n  \n  \n    Orthgonal \n    X \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    EGZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n    E \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #10\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 10) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #10\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    E \n    250 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    EF \n    2 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    11 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    G \n    3 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    XZ \n    2 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    0.938 \n    0.5 \n  \n  \n    BZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    X \n    71 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FX \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    2 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    3 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    CEGIO \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    B \n    12 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    5 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    BCO \n    1 \n    ? \n    0 \n    -0.188 \n    -0.188 \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    BIJM \n    1 \n    ? \n    0 \n    -0.250 \n    -0.250 \n    NA \n    -0.250 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>%\n#   pack_rows(\"Lines-Connect\", 3, 7) %>%\n#   pack_rows(\"Orthogonal\", 8, 11) %>%\n#   pack_rows(\"Other\", 12, 14) %>%\n#   pack_rows(\"Unknown\", 15, 27)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #11\n\n\n\nFigure 11.14: Q11-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==11)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at 12pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    ML \n     \n  \n  \n    Orthgonal \n    FB \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #11\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 11) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #11\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    LM \n    234 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.125 \n    1.0 \n  \n  \n    M \n    10 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    L \n    1 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    BF \n    115 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    2 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BGO \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    NA \n    NA \n    0.375 \n    -1.0 \n  \n  \n    BLM \n    2 \n    both tri + orth \n    0 \n    0.938 \n    NA \n    NA \n    0.375 \n    0.5 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACDGHKLMNOPXZ \n    1 \n    frenzy \n    0 \n    0.312 \n    NA \n    NA \n    -0.812 \n    -0.5 \n  \n  \n    DHLMNOXZ \n    1 \n    frenzy \n    0 \n    0.625 \n    NA \n    NA \n    -0.500 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    EKM \n    1 \n    ? \n    0 \n    0.375 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 9) %>%\n#   pack_rows(\"Other\", 10, 12) %>%\n#   pack_rows(\"Unknown\", 13, 17)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 11)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 11)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #12\n\n\n\nFigure 11.15: Q12-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==12)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    GZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #12\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 12) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #12\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    231 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    FG \n    13 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    GP \n    4 \n    Tversky \n    0 \n    0.938 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    Z \n    3 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    B \n    113 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    2 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BCO \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    -0.188 \n    NA \n    0.875 \n    -1.0 \n  \n  \n    CEGIO \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    E \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    LM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Lines-Connect\", 4, 6) %>%\n#   pack_rows(\"Orthogonal\", 7, 8) %>%\n#   pack_rows(\"Other\", 9, 10) %>%\n#   pack_rows(\"Unknown\", 11, 14)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #13\n\n\n\nFigure 11.16: Q13-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==13)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts end when Z begins?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EF \n     \n  \n  \n    Orthgonal \n    FX \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #13\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 13) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #13\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EF \n    235 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    0.433 \n    1.0 \n  \n  \n    E \n    1 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.067 \n    1.0 \n  \n  \n    FX \n    75 \n    Orthogonal \n    0 \n    0.433 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    X \n    4 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    CX \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    KX \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    OX \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    BX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    GX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    HNX \n    1 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.367 \n    -1.0 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    HN \n    19 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HL \n    5 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CO \n    3 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HLP \n    3 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    BF \n    2 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    EX \n    2 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    F \n    2 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    AH \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    AJ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CGO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DKM \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HZ \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    JK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    LM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    NO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Orthogonal\", 4, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 36)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 13)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 13)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #14\n\n\n\nFigure 11.17: Q14-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==14)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at 3pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    X \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XJND \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    JND \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #14\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 14) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #14\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    X \n    259 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.059 \n    1.0 \n  \n  \n    FX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    OX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    B \n    73 \n    Orthogonal \n    0 \n    -0.059 \n    -0.059 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    6 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BGO \n    1 \n    Orthogonal \n    0 \n    -0.176 \n    -0.176 \n    NA \n    0.882 \n    -1.0 \n  \n  \n    BO \n    1 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BX \n    1 \n    both tri + orth \n    0 \n    0.941 \n    0.941 \n    NA \n    0.941 \n    0.5 \n  \n  \n     \n    9 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    O \n    7 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    D \n    2 \n    ? \n    0 \n    -0.059 \n    0.333 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    F \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    AH \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    FG \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    HLP \n    1 \n    ? \n    0 \n    -0.176 \n    -0.176 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 7) %>%\n#   pack_rows(\"Other\", 8, 9) %>%\n#   pack_rows(\"Unknown\", 10, 22)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 14)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 14)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #15\n\n\n\nFigure 11.18: Q15-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==15)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Coffee breaks happen halfway through a shift. Which shifts share a break at 2pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    XK \n     \n  \n  \n    Orthgonal \n    EF \n    B \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XKZ \n     \n  \n  \n    Tversky [start diagonal] \n    Z \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #15\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 15) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #15\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    KX \n    240 \n    Triangular \n    1 \n    1.000 \n    0.667 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    CX \n    4 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    X \n    4 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    CK \n    2 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    GKX \n    1 \n    Triangular \n    1 \n    0.938 \n    0.600 \n    NA \n    -0.200 \n    1.0 \n  \n  \n    FZ \n    4 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    0.433 \n    0.5 \n  \n  \n    OX \n    2 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    DNX \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    HZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    EF \n    62 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    12 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    F \n    4 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    E \n    3 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BE \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    CF \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EG \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EFZ \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    0.882 \n    NA \n    0.933 \n    -1.0 \n  \n  \n     \n    6 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    AG \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CG \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CO \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    ACG \n    1 \n    ? \n    0 \n    -0.188 \n    -0.176 \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    BG \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    BM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    GM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    HNX \n    1 \n    ? \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    LM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Lines-Connect\", 11, 13) %>%\n#   pack_rows(\"Orthogonal\", 14, 22) %>%\n#   pack_rows(\"Other\", 23, 23) %>%\n#   pack_rows(\"Unknown\", 24, 44)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 15)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 15)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nNON-DISCRIMINANT QUESTIONS\n\nQuestion #6 NONDISCRIM\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 11.19: Q6-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==6)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) are six hours long?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EG \n     \n  \n  \n    Orthgonal \n    EG \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\nTODO discuss non discriminant\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #6\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 6) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #6\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EG \n    367 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n    C \n    2 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    CH \n    2 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    BDI \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    BE \n    1 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    0.438 \n    -0.5 \n  \n\n\n\n\n\n\n\nQuestion #9 NONDISCRIM\n\n\n\nFigure 11.20: Q9-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==9)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) begins before J begins and ends during B?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    I \n     \n  \n  \n    Orthgonal \n    I \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #9\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q ==9) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #9\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    I \n    244 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    20 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    E \n    79 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    9 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    F \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    EI \n    2 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    FI \n    2 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    IJ \n    2 \n    ? \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    -0.5 \n  \n  \n    IM \n    2 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    BEI \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    DK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    EIJ \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Other\", 1, 2) %>%\n#   pack_rows(\"Unknown\", 3, 19)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC3B/2_sgc3B_scoring.html#export",
    "href": "analysis/SGC3B/2_sgc3B_scoring.html#export",
    "title": "11  Response Scoring",
    "section": "EXPORT",
    "text": "EXPORT\n\n\nCODE\ntable(df_subjects$mode, df_subjects$condition) %>% addmargins()\n\n\n           \n            111 121 211 221 311 321 Sum\n  lab-synch  62  64  45  30  59  30 290\n  asynch      0   0  17  32   3  31  83\n  Sum        62  64  62  62  62  61 373\n\n\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC3B/data/2-scored-data/sgc3b_scored_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC3B/data/2-scored-data/sgc3b_scored_items.csv\", row.names = FALSE)\nwrite.csv(df_absolute_progress,\"analysis/SGC3B/data/2-scored-data/sgc3b_absolute_progressL.csv\", row.names = FALSE)\nwrite.csv(df_scaled_progress,\"analysis/SGC3B/data/2-scored-data/sgc3b_scaled_progress.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC3B/data/2-scored-data/sgc3b_scored_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC3B/data/2-scored-data/sgc3b_scored_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC3B/2_sgc3B_scoring.html#resources",
    "href": "analysis/SGC3B/2_sgc3B_scoring.html#resources",
    "title": "11  Response Scoring",
    "section": "RESOURCES",
    "text": "RESOURCES\nset operations\nhttps://stat.ethz.ch/R-manual/R-devel/library/base/html/sets.html\nkableExtra tables\nhttps://haozhu233.github.io/kableExtra/awesome_table_in_html.html#grouped_columns__rows\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] forcats_0.5.1          stringr_1.4.0          dplyr_1.0.9           \n [4] purrr_0.3.4            readr_2.1.2            tidyr_1.2.0           \n [7] tibble_3.1.7           tidyverse_1.3.1        tidyfst_1.6.5         \n[10] statsExpressions_1.3.2 ggstatsplot_0.9.3      Hmisc_4.7-0           \n[13] Formula_1.2-4          survival_3.3-1         lattice_0.20-45       \n[16] pbapply_1.5-0          ggformula_0.10.1       ggridges_0.5.3        \n[19] scales_1.2.0           ggstance_0.3.5         ggplot2_3.3.6         \n[22] kableExtra_1.3.4      \n\nloaded via a namespace (and not attached):\n  [1] readxl_1.4.0           backports_1.4.1        systemfonts_1.0.4     \n  [4] plyr_1.8.7             splines_4.2.1          gmp_0.6-5             \n  [7] kSamples_1.2-9         TH.data_1.1-1          SuppDists_1.1-9.7     \n [10] digest_0.6.29          htmltools_0.5.2        fansi_1.0.3           \n [13] magrittr_2.0.3         checkmate_2.1.0        memoise_2.0.1         \n [16] paletteer_1.4.0        cluster_2.1.3          openxlsx_4.2.5        \n [19] tzdb_0.3.0             mosaicCore_0.9.0       modelr_0.1.8          \n [22] vroom_1.5.7            sandwich_3.0-2         svglite_2.1.0         \n [25] jpeg_0.1-9             colorspace_2.0-3       rvest_1.0.2           \n [28] ggrepel_0.9.1          haven_2.5.0            xfun_0.31             \n [31] crayon_1.5.1           prismatic_1.1.0        jsonlite_1.8.0        \n [34] zeallot_0.1.0          zoo_1.8-10             glue_1.6.2            \n [37] polyclip_1.10-0        gtable_0.3.0           emmeans_1.7.5         \n [40] webshot_0.5.3          MatrixModels_0.5-0     Rmpfr_0.8-9           \n [43] mvtnorm_1.1-3          DBI_1.1.3              PMCMRplus_1.9.5       \n [46] Rcpp_1.0.8.3           viridisLite_0.4.0      xtable_1.8-4          \n [49] performance_0.9.1      htmlTable_2.4.0        foreign_0.8-82        \n [52] bit_4.0.4              datawizard_0.5.1       htmlwidgets_1.5.4     \n [55] httr_1.4.3             fstcore_0.9.12         RColorBrewer_1.1-3    \n [58] ellipsis_0.3.2         pkgconfig_2.0.3        farver_2.1.0          \n [61] multcompView_0.1-8     nnet_7.3-17            dbplyr_2.2.1          \n [64] utf8_1.2.2             tidyselect_1.1.2       labeling_0.4.2        \n [67] rlang_1.0.3            effectsize_0.7.0       munsell_0.5.0         \n [70] cellranger_1.1.0       tools_4.2.1            cachem_1.0.6          \n [73] cli_3.3.0              generics_0.1.2         broom_0.8.0           \n [76] evaluate_0.15          fastmap_1.1.0          BWStest_0.2.2         \n [79] yaml_2.3.5             rematch2_2.1.2         knitr_1.39            \n [82] bit64_4.0.5            fs_1.5.2               zip_2.2.0             \n [85] xml2_1.3.3             correlation_0.8.1      compiler_4.2.1        \n [88] rstudioapi_0.13        curl_4.3.2             png_0.1-7             \n [91] ggsignif_0.6.3         reprex_2.0.1           tweenr_1.0.2          \n [94] stringi_1.7.6          highr_0.9              parameters_0.18.1     \n [97] Matrix_1.4-1           vctrs_0.4.1            pillar_1.7.0          \n[100] lifecycle_1.0.1        estimability_1.4       data.table_1.14.2     \n[103] insight_0.18.2         patchwork_1.1.1        R6_2.5.1              \n[106] latticeExtra_0.6-29    rio_0.5.29             gridExtra_2.3         \n[109] BayesFactor_0.9.12-4.4 codetools_0.2-18       boot_1.3-28           \n[112] MASS_7.3-57            assertthat_0.2.1       withr_2.5.0           \n[115] multcomp_1.4-19        bayestestR_0.12.1      parallel_4.2.1        \n[118] hms_1.1.1              fst_0.9.8              grid_4.2.1            \n[121] rpart_4.1.16           labelled_2.9.1         coda_0.19-4           \n[124] rmarkdown_2.14         ggforce_0.3.3          lubridate_1.8.0       \n[127] base64enc_0.1-3"
  },
  {
    "objectID": "analysis/SGC3B/4_sgc3B_hypotesting.html",
    "href": "analysis/SGC3B/4_sgc3B_hypotesting.html",
    "title": "12  SGC3B (Impasse * Explicit) Hypothesis Testing",
    "section": "",
    "text": "The purpose of this notebook is test the hypotheses that determined the design of the SGC3B factorial study."
  },
  {
    "objectID": "analysis/SGC3B/4_sgc3B_hypotesting.html#sample",
    "href": "analysis/SGC3B/4_sgc3B_hypotesting.html#sample",
    "title": "12  SGC3B (Impasse * Explicit) Hypothesis Testing",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Control Condition\",\"Impasse Condition\", \"Control+Img\", \"Impasse + Img\", \"Control + IXN\", \"Impasse + IXN\", \"Total for Period\")\ncont <- table(df_subjects$term, df_subjects$pretty_condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n      \n    Control Condition \n    Impasse Condition \n    Control+Img \n    Impasse + Img \n    Control + IXN \n    Impasse + IXN \n    Total for Period \n  \n \n\n  \n    fall17 \n    27 \n    27 \n    30 \n    30 \n    30 \n    30 \n    174 \n  \n  \n    spring18 \n    35 \n    37 \n    15 \n    0 \n    29 \n    0 \n    116 \n  \n  \n    fall21 \n    0 \n    0 \n    5 \n    12 \n    3 \n    11 \n    31 \n  \n  \n    summer22 \n    0 \n    0 \n    12 \n    20 \n    0 \n    20 \n    52 \n  \n  \n    Sum \n    62 \n    64 \n    62 \n    62 \n    62 \n    61 \n    373 \n  \n\n\n\n\n\nCODE\ntable(df_subjects$IMPLICIT, df_subjects$EXPLICIT)\n\n\n         \n          none img ixn\n  control   62  62  62\n  impasse   64  62  61\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.male <- ((df_subjects %>% filter(gender==\"Male\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.female <- ((df_subjects %>% filter(gender==\"Female\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.other <- ((df_subjects %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())/count(df_subjects))$n\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n     \n    18 \n    19 \n    20 \n    21 \n    66 \n    21.6 \n    5.55 \n    373 \n    0 \n    0.389 \n    0.595 \n    0.016 \n  \n\n\nNote:   Age in Years\n\n\n\n\nREPORTED\nOverall 373 participants (39 % male, 60 % female, 2 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 66 years)."
  },
  {
    "objectID": "analysis/SGC3B/4_sgc3B_hypotesting.html#overall-accuracy",
    "href": "analysis/SGC3B/4_sgc3B_hypotesting.html#overall-accuracy",
    "title": "12  SGC3B (Impasse * Explicit) Hypothesis Testing",
    "section": "OVERALL ACCURACY",
    "text": "OVERALL ACCURACY\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% \n  dplyr::select(pretty_condition, condition, accuracy, subject,q, IMPLICIT, EXPLICIT)\n\ndf_s <- df_subjects %>% \n  dplyr::select(pretty_condition, condition, task_percent, IMPLICIT, EXPLICIT)\n\n\n\n\nVisualize\n\nExploratory\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = IMPLICIT,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  facet_grid(~EXPLICIT) + \n  # scale_fill_foxy(discrete = TRUE, \"accuracy\")  +\n  scale_fill_brewer(palette = \"Set1\")  +\n   labs(title = \"Overall Accuracy\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"IMPLICIT and EXPLICIT scaffolds appear to have an additive effect\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_foxy(discrete = TRUE, \"accuracy\")  +\n  facet_wrap(~ q ) +\n   labs(title = \"Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Q6 and Q9 are non-discriminative\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\nstats = df_s %>% group_by(IMPLICIT, EXPLICIT) %>% dplyr::summarise(mean = mean(task_percent))\ngf_props(~task_percent,\n         fill = ~pretty_condition, data = df_s) %>%\n  gf_facet_grid(IMPLICIT~EXPLICIT) %>%\n  gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n  labs(x = \"% Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score (% Correct)\",\n       subtitle = \"\") + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nPresent\n\n\nCODE\np <- grouped_ggbetweenstats(data = df_s,\n                       y = task_percent, x = IMPLICIT, grouping.var = EXPLICIT,\n               plot.type = \"box\", type = \"nonparametric\", var.equal = FALSE,\n               centrality.type = \"parametric\",\n               package = \"RColorBrewer\",\n               palette = \"PRGn\",\n               centrality.point.args = list(color=\"black\", size = 3, shape = 1),\n               results.subtitle = FALSE,\n               # point.args = list(alpha=0), #suppress points\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  # aes(color = IMPLICIT, fill = IMPLICIT),\n                  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  # scale_fill_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3))\n                  # theme(axis.text.x = element_text(angle = 90)\n                )) \n\np1 <- p[[1]]+coord_flip() + theme_clean() + \n  ggeasy::easy_remove_x_axis() + ggeasy::easy_remove_legend() +\n  labs(title = \"EXPLICIT: none\")\np2 <- p[[2]]+coord_flip() + theme_clean() +\n  ggeasy::easy_remove_x_axis() + ggeasy::easy_remove_legend() +\n  labs(title = \"EXPLICIT: static-image\")\np3 <- p[[3]]+coord_flip() + theme_clean() + \n  ggeasy::easy_remove_x_axis() + ggeasy::easy_remove_legend() +\n  labs(title = \"EXPLICIT: interactive-image\",\n                       y = \"Total Percentage of Correct Responses\")\n\n\n(t <- cowplot::plot_grid(p1,  p2, p3, ncol=1))\n\n\n\n\n\nCODE\nggsave(t, filename = \"figures/sgc3b_totalscore.svg\", width = 6, height =4)\n\n# # ggplot(data = df_s, aes( x = pretty_condition, y = task_percent)) + \n#   ggdist::stat_halfeye(\n#     alpha = 0.7,\n#     point_colour = NA,\n#     adjust = .5,\n#     width = .5, .width = 0,\n#     justification = -.5) +\n#   geom_boxplot(\n#     alpha = 0.1,\n#     width = .2,\n#     outlier.shape = NA\n#   ) +\n#   geom_point(\n#     size = 2,\n#     alpha = .5,\n#     position = position_jitter(\n#       seed = 1, width = .05, height = .02\n#     )\n#   ) \n# coord_flip() + theme_clean() + theme(legend.position = \"blank\")\n# p$layers[[3]]=NULL #remove default boxplot\n# e <- statsExpressions::two_sample_test(y = task_percent, x = pretty_condition, data = df_s,\n#                                 type = \"nonparametric\", alternative = \"less\",\n#                                 var.equal = FALSE)\n# #labels are layer 4\n# p + labs(title = \"Distribution of Total Accuracy\",\n#          y = \"Proportion of correct responses across task\", x = \"\",\n#          subtitle = \"Impasse condition yields higher scores and greater variance\",\n#          caption=e$expression[[1]])\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\nx <- df_i %>% mutate(\n  pretty_explicit = recode_factor(EXPLICIT,\n                                  \"none\" = \"no image\",\n                                  \"img\" = \"static image\",\n                                  \"ixn\" = \"interactive image\"\n  )\n)\n\nx %>% \n  ggplot(data = .,\n         mapping = aes(x = IMPLICIT,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\", width = 0.75 ) + \n  facet_wrap(~pretty_explicit)+\n  scale_fill_foxy(discrete = TRUE, \"accuracy\")  +\n  # scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))+\n  # facet_wrap(~pretty_mode) + \n  # coord_flip() +\n  theme(legend.position=\"bottom\")+\n   labs(title = \"Study 3B | DISTRIBUTION of Question Accuracy\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"Implicit and Explicit Scaffolds have an additive effect\") \n\n\n\n\n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct)\"\ntbl1 <- mosaic::favstats(~task_percent, data = df_s) \ntbl1 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0 \n    0.154 \n    0.846 \n    0.923 \n    1 \n    0.614 \n    0.397 \n    373 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\"\ntbl2 <- mosaic::favstats(task_percent ~ pretty_condition, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\n \n  \n    pretty_condition \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    none-control \n    0.000 \n    0.000 \n    0.000 \n    0.154 \n    1 \n    0.211 \n    0.370 \n    62 \n    0 \n  \n  \n    none-impasse \n    0.000 \n    0.058 \n    0.346 \n    0.846 \n    1 \n    0.425 \n    0.389 \n    64 \n    0 \n  \n  \n    img-control \n    0.000 \n    0.308 \n    0.769 \n    0.923 \n    1 \n    0.620 \n    0.371 \n    62 \n    0 \n  \n  \n    img-impasse \n    0.000 \n    0.635 \n    0.923 \n    0.923 \n    1 \n    0.777 \n    0.278 \n    62 \n    0 \n  \n  \n    ixv-control \n    0.000 \n    0.769 \n    0.923 \n    1.000 \n    1 \n    0.819 \n    0.273 \n    62 \n    0 \n  \n  \n    ixv-impasse \n    0.077 \n    0.846 \n    0.923 \n    1.000 \n    1 \n    0.841 \n    0.238 \n    61 \n    0 \n  \n\n\n\n\n\nREPORTED\nAcross conditions, overall accuracy on the task ranges from 0 to 100 with a mean of 61.394. We see that the distribution of this outcome variable is clearly bimodal: with modes near the floor (0% correct) and ceiling (100% correct) of the scale. This bimodality is sensical considering the nature of the task, where each item in the task indexes a different information extraction operation over the same coordinate system.\nA score of 100% indicates that the participant correctly interpreted the interval-coordinate system throughout the task, starting at the first question. A score of 0% indicates the individual never correctly interpreted the coordinate system. A score somewhere inbetween indicates that an individual deciphered the coordinate system sometime over the course the task.\n\nTESTS\n\nAligned Ranks Transformation\n\n\n\nCODE\nm.art = art(task_percent ~ IMPLICIT*EXPLICIT, data = df_s)\nanova(m.art)\n\n\nAnalysis of Variance of Aligned Rank Transformed Data\n\nTable Type: Anova Table (Type III tests) \nModel: No Repeated Measures (lm)\nResponse: art(task_percent)\n\n                    Df Df.res F value Pr(>F)    \n1 IMPLICIT           1    367 17.6390  3e-05 ***\n2 EXPLICIT           2    367 71.3269 <2e-16 ***\n3 IMPLICIT:EXPLICIT  2    367  5.8892  0.003  **\n---\nSignif. codes:   0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n\n\n\n\nKruskal Wallis Test\n\n\nCODE\n(k <- kruskal.test(df_s$task_percent ~ df_s$pretty_condition))\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  df_s$task_percent by df_s$pretty_condition\nKruskal-Wallis chi-squared = 107, df = 5, p-value <2e-16\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STATSPLOT | VIOLIN\ngrouped_ggbetweenstats(y = task_percent, x = EXPLICIT, grouping.var = IMPLICIT,  \n               data = df_s, type = \"nonparametric\")\n\n\n\n\n\nCODE\ngrouped_ggbetweenstats(y = task_percent, x = IMPLICIT, grouping.var = EXPLICIT,  \n               data = df_s, type = \"nonparametric\")\n\n\n\n\n\n\n\n\nMIXED LOGISTIC REGRESSION\nFit a mixed logistic regression (at the item level), predicting accuracy (absolute score) on all discriminating questions by condition; accounting for random effects of subject and item.\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 13\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy) && is.factor(df_i$ospan_split)\n\n\n[1] FALSE\n\n\nCODE\n## 1 | SETUP RANDOM EFFECTS\n\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n## 2 | ADD MAIN EFFECTS \n\nprint(\"MAIN FIXED  implicit + explicit + Subject & Item random intercepts\")\n\n\n[1] \"MAIN FIXED  implicit + explicit + Subject & Item random intercepts\"\n\n\nCODE\nmm.I.ErSQ <- glmer(accuracy ~ IMPLICIT + EXPLICIT + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# car::Anova(mm.IErSQ, type = 3)\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.I.ErSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.I.ErSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName      |    Model | df | df_diff |   Chi2 |      p\n-----------------------------------------------------\nmm.rSQ    | glmerMod |  3 |         |        |       \nmm.I.ErSQ | glmerMod |  6 |       3 | 153.73 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rSQ,mm.I.ErSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  4.1389548127204e-33\"\n\n\nCODE\n## 2 | ADD IXN FIXED EFFECT\n\nprint(\"MAIN IXN implicit*explicit + Subject & Item random intercepts\")\n\n\n[1] \"MAIN IXN implicit*explicit + Subject & Item random intercepts\"\n\n\nCODE\nmm.IErSQ <- glmer(accuracy ~ IMPLICIT*EXPLICIT + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# car::Anova(mm.IErSQ, type = 3)\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.IErSQ)) > AIC(logLik(mm.I.ErSQ)) )\n\n\n[1] \"AIC decreases w/ new model FALSE\"\n\n\nCODE\ntest_lrt(mm.I.ErSQ,mm.IErSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName      |    Model | df | df_diff | Chi2 |     p\n--------------------------------------------------\nmm.I.ErSQ | glmerMod |  6 |         |      |      \nmm.IErSQ  | glmerMod |  8 |       2 | 8.20 | 0.017\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.I.ErSQ,mm.IErSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.0165804173438411\"\n\n\nCODE\npaste(\"Final model better than random model?\")\n\n\n[1] \"Final model better than random model?\"\n\n\nCODE\ntest_lrt(mm.IErSQ,mm.rSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName     |    Model | df | df_diff |   Chi2 |      p\n----------------------------------------------------\nmm.IErSQ | glmerMod |  8 |         |        |       \nmm.rSQ   | glmerMod |  3 |      -5 | 161.93 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.IErSQ,mm.rSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  3.84756436223341e-33\"\n\n\nCODE\npaste(\"Model Performance\")\n\n\n[1] \"Model Performance\"\n\n\nCODE\nperformance(mm.IErSQ)\n\n\n# Indices of model performance\n\nAIC      |     AICc |      BIC | R2 (cond.) | R2 (marg.) |   ICC |  RMSE | Sigma | Log_loss | Score_log | Score_spherical\n-------------------------------------------------------------------------------------------------------------------------\n3310.851 | 3310.881 | 3362.743 |      0.832 |      0.318 | 0.754 | 0.265 | 1.000 |    0.232 |      -Inf |           0.002\n\n\nREPORTED\nTo quantify the effect of IMPLICIT and EXPLICIT scaffolding techniques on ACCURACY, we fit a mixed effects logistic regression model with random intercepts for subjects and questions, and IMPLICIT, EXPLICIT and their interaction term as fixed effects. A likelihood ratio test indicates that a model including both fixed effect and their interaction term is a significantly better fit to the data than random-intercepts only baseline model \\(chi^2(3,8) = 161.93, p < 0.001\\)\nThe explanatory power of the final model is substantial (conditional R2 = 0.83) and the part related to the fixed effects EXPLICIT and IMPLICIT scaffolding (marginal R2) explains 32% of variance.\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.IErSQ\nm %>% write_rds(file = \"analysis/SGC3B/models/sgc3b_glmer_acc_mm.IErSQ.rds\")\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ IMPLICIT * EXPLICIT + (1 | subject) + (1 | q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n    3311     3363    -1647     3295     4841 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-5.503 -0.140  0.110  0.297  7.569 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 9.390    3.06    \n q       (Intercept) 0.672    0.82    \nNumber of obs: 4849, groups:  subject, 373; q, 13\n\nFixed effects:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                   -3.704      0.559   -6.63  3.5e-11 ***\nIMPLICITimpasse                2.865      0.653    4.39  1.1e-05 ***\nEXPLICITimg                    4.632      0.668    6.93  4.2e-12 ***\nEXPLICITixn                    6.813      0.707    9.64  < 2e-16 ***\nIMPLICITimpasse:EXPLICITimg   -1.435      0.885   -1.62   0.1050    \nIMPLICITimpasse:EXPLICITixn   -2.591      0.912   -2.84   0.0045 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n                       (Intr) IMPLICITm EXPLICITm EXPLICITx\nIMPLICITmps            -0.699                              \nEXPLICITimg            -0.705  0.590                       \nEXPLICITixn            -0.697  0.578     0.592             \nIMPLICITmpss:EXPLICITm  0.505 -0.730    -0.729    -0.413   \nIMPLICITmpss:EXPLICITx  0.497 -0.713    -0.419    -0.721   \n                       IMPLICITmpss:EXPLICITm\nIMPLICITmps                                  \nEXPLICITimg                                  \nEXPLICITixn                                  \nIMPLICITmpss:EXPLICITm                       \nIMPLICITmpss:EXPLICITx  0.521                \n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=3) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: accuracy\n                  Chisq Df Pr(>Chisq)    \n(Intercept)        43.9  1    3.5e-11 ***\nIMPLICIT           19.3  1    1.1e-05 ***\nEXPLICIT           95.2  2    < 2e-16 ***\nIMPLICIT:EXPLICIT   8.1  2      0.017 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 8 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…   -3.70      0.559     -6.63  3.47e-11    -4.80    -2.61 \n2 fixed    <NA>  IMPL…    2.87      0.653      4.39  1.14e- 5     1.59     4.14 \n3 fixed    <NA>  EXPL…    4.63      0.668      6.93  4.20e-12     3.32     5.94 \n4 fixed    <NA>  EXPL…    6.81      0.707      9.64  5.49e-22     5.43     8.20 \n5 fixed    <NA>  IMPL…   -1.44      0.885     -1.62  1.05e- 1    -3.17     0.300\n6 fixed    <NA>  IMPL…   -2.59      0.912     -2.84  4.50e- 3    -4.38    -0.804\n7 ran_pars subj… sd__…    3.06     NA         NA    NA           NA       NA    \n8 ran_pars q     sd__…    0.820    NA         NA    NA           NA       NA    \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 8 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…   0.0246    0.0138     -6.63  3.47e-11  8.23e-3    0.0737\n2 fixed    <NA>  IMPL…  17.5      11.5         4.39  1.14e- 5  4.88e+0   63.1   \n3 fixed    <NA>  EXPL… 103.       68.7         6.93  4.20e-12  2.77e+1  381.    \n4 fixed    <NA>  EXPL… 910.      643.          9.64  5.49e-22  2.28e+2 3635.    \n5 fixed    <NA>  IMPL…   0.238     0.211      -1.62  1.05e- 1  4.20e-2    1.35  \n6 fixed    <NA>  IMPL…   0.0750    0.0684     -2.84  4.50e- 3  1.26e-2    0.448 \n7 ran_pars subj… sd__…   3.06     NA          NA    NA        NA         NA     \n8 ran_pars q     sd__…   0.820    NA          NA    NA        NA         NA     \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\n# newdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n# preds <- predict(m, newdata = newdata, type = \"response\")\n# preds <- cbind(newdata, preds)\n# p <- preds %>% \n#   dplyr::select(pretty_condition, preds) %>% \n#   group_by(pretty_condition) %>% \n#   summarise(\n#     median = median(preds),\n#     se = sd(preds)/sqrt(n()),\n#     lwr = median - 1.96*se,\n#     upr = median + 1.96*se)\n    \n  \n#FROM merTools\n#setup df \nnewdata <- df_i %>% dplyr::select(IMPLICIT, EXPLICIT, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning: executing %dopar% sequentially: no parallel backend registered\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(IMPLICIT, EXPLICIT, fit, lwr, upr) %>% \n  group_by(IMPLICIT,EXPLICIT) %>% \n  summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 6 × 5\n# Groups:   IMPLICIT [2]\n  IMPLICIT EXPLICIT median   lower  upper\n  <fct>    <fct>     <dbl>   <dbl>  <dbl>\n1 control  none     0.0244 0.00571 0.0981\n2 control  img      0.720  0.383   0.914 \n3 control  ixn      0.958  0.843   0.990 \n4 impasse  none     0.301  0.0944  0.641 \n5 impasse  img      0.914  0.717   0.978 \n6 impasse  ixn      0.967  0.874   0.992 \n\n\n\n\nINFERENCE\nREPORTED Wald Chi-Square tests indicate both significant main effects for IMPLICIT (\\(\\chi^2 (1) = 19.3, p < 0.001\\)) and EXPLICIT (\\(\\chi^2 (1) = 95.2, p < 0.001\\)) scaffolds , as well as a significant interaction (\\(\\chi^2 (1) = 8.1, p < 0.05\\)). [SEE POSTHOCS BELOW]\nThe (unstandardized) regression coefficients indicate that across explicit scaffolds, the impasse manipulation increases the odds of a correct response by a factor of 17.5, (\\(e^{\\beta_1} = 17.5, SE = 11.5, p < 0.001\\)). The effect of the explicit scaffolds were much more pronounced, however, with the static-image increasing odds of a correct response by a factor of 103, (\\(e^{\\beta_1} = 103, SE = 68.7, 381], p < 0.001\\)) and the interactive-image increasing odds of a correct response by a factor of 910, (\\(e^{\\beta_1} = 910, SE = 643, p < 0.001\\)).\n\n\nInteractions\n\n\nCODE\n# https://cran.r-project.org/web/packages/emmeans/vignettes/interactions.html#simple\n# https://stats.oarc.ucla.edu/stata/faq/how-can-i-understand-a-categorical-by-categorical-interaction-in-logistic-regression-stata-12/\n# https://stats.oarc.ucla.edu/stata/seminars/deciphering-interactions-in-logistic-regression/\n  \nlibrary(emmeans)\n\n#sanity check reference grid\nref_grid(m)\n\n\n'emmGrid' object with variables:\n    IMPLICIT = control, impasse\n    EXPLICIT = none, img, ixn\nTransformation: \"logit\" \n\n\nCODE\n#PRINT ESTIMATED MARGINAL MEANS\n#should be same as summ_preds\nemmeans(m,  ~ IMPLICIT + EXPLICIT, type = \"response\")\n\n\n IMPLICIT EXPLICIT  prob     SE  df asymp.LCL asymp.UCL\n control  none     0.024 0.0131 Inf     0.008     0.069\n impasse  none     0.302 0.1007 Inf     0.145     0.524\n control  img      0.717 0.0978 Inf     0.496     0.867\n impasse  img      0.914 0.0386 Inf     0.802     0.965\n control  ixn      0.957 0.0209 Inf     0.892     0.984\n impasse  ixn      0.967 0.0165 Inf     0.914     0.988\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n\nCODE\n##POST-HOC COMPARISONS\nprint(\"POSTHOC COMPARISONS\")\n\n\n[1] \"POSTHOC COMPARISONS\"\n\n\nCODE\nemmeans(m,  pairwise ~ IMPLICIT + EXPLICIT, \n        type = \"response\" , adjust = \"tukey\") #sidak, tukey\n\n\n$emmeans\n IMPLICIT EXPLICIT  prob     SE  df asymp.LCL asymp.UCL\n control  none     0.024 0.0131 Inf     0.008     0.069\n impasse  none     0.302 0.1007 Inf     0.145     0.524\n control  img      0.717 0.0978 Inf     0.496     0.867\n impasse  img      0.914 0.0386 Inf     0.802     0.965\n control  ixn      0.957 0.0209 Inf     0.892     0.984\n impasse  ixn      0.967 0.0165 Inf     0.914     0.988\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast                    odds.ratio    SE  df null z.ratio p.value\n control none / impasse none      0.057 0.037 Inf    1  -4.390  <.0001\n control none / control img       0.010 0.007 Inf    1  -6.930  <.0001\n control none / impasse img       0.002 0.002 Inf    1  -8.890  <.0001\n control none / control ixn       0.001 0.001 Inf    1  -9.640  <.0001\n control none / impasse ixn       0.001 0.001 Inf    1  -9.910  <.0001\n impasse none / control img       0.171 0.102 Inf    1  -2.950  0.0370\n impasse none / impasse img       0.041 0.025 Inf    1  -5.270  <.0001\n impasse none / control ixn       0.019 0.012 Inf    1  -6.300  <.0001\n impasse none / impasse ixn       0.015 0.009 Inf    1  -6.670  <.0001\n control img / impasse img        0.239 0.145 Inf    1  -2.360  0.1700\n control img / control ixn        0.113 0.070 Inf    1  -3.510  0.0060\n control img / impasse ixn        0.086 0.054 Inf    1  -3.910  0.0010\n impasse img / control ixn        0.472 0.294 Inf    1  -1.210  0.8340\n impasse img / impasse ixn        0.359 0.225 Inf    1  -1.630  0.5770\n control ixn / impasse ixn        0.760 0.486 Inf    1  -0.430  0.9980\n\nP value adjustment: tukey method for comparing a family of 6 estimates \nTests are performed on the log odds ratio scale \n\n\nCODE\n##PLOT INTERACTION\n#equivalent to plot_model, type = \"int\"\nemmip(m, IMPLICIT ~ EXPLICIT,\n      type = \"response\",\n      CIs = TRUE,\n      linearg = list(linetype = \"dashed\"),\n      engine = \"ggplot\") \n\n\n\n\n\nCODE\n#conditioned on fixed effects only\nplot_model(m, type = \"int\",pred.type = \"fe\" )\n\n\n\n\n\nCODE\n#conditioned on random effects\nplot_model(m, type = \"int\",pred.type = \"re\" )\n\n\n\n\n\nCODE\n##PLOT PROBABILITY\nplot(ref_grid(m), by = \"EXPLICIT\", type = \"response\")\n\n\n\n\n\nREPORTED\nPosthoc paired comparisons (with Tukey method correction) reveal that across each the no-image control and static image conditions, posing a mental impasse significantly improved performance over the non-impasse control. The source of the interaction effect is driven by accuracy reaching ceiling across both non-impasse and impasse conditions (OR = 0.76, z = -0.43, p = 0.99). That is to say, the explicit interactive-image scaffold is so effective, very few participants are in need of additional implicit scaffolding. This is in contrast with the no-explicit scaffold conditions (no images), where the addition of the mental impasse significantly increased the probability of a correct response (OR = 0.06, z = -4.39, p </.0001)\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# title = \"Study 3B (EXPLICIT vs IMPLICIT) | Question Accuracy | Mixed Logistic Regression\"\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              paste(\"n = \", n_obs(m), \"R^2(Conditional) =\", round(r2(m)[[1]],2),\n#                    \"R^2(Marginal) =\", round(r2(m)[[2]],2)),\n#              \"Accuracy  ~ Condition * OSPAN +  (1 | subject) + (1 | q)\")\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\n#                \"IMPLICITimpasse\" = \"Implicit[impasse]\",\n#                \"EXPLICITimg\" = \"Explicit[img]\",\n#                \"EXPLICITixn\" = \"Explicit[ixn]\",\n#                \"IMPLICITimpasseEXPLICITimg\" = \"Implicit[impasse] : Explicit[img]\",\n#                \"IMPLICITimpasseEXPLICITixn\" = \"Implicit[impasse] : Explicit[ixn]\"\n#                ),\n#              title = title,\n#              notes = notes,\n#              output = \"tables/SGC3B_GLMER_OverallAccuracy.tex\")\n             # coef_omit = \"Intercept\"\n\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(m, exponentiate = TRUE, component = \"all\")\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT TESTS\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n#ONLY FOR BAYESIAN VERSION\n# result <- rope(m)\n# plot(result)\n# \n# result <- pd(m)\n# plot(result)\n\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"int\",\n           show.p = TRUE,\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\",\n           axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")  \n\n\n$IMPLICIT\n\n\n\n\n\n\n$EXPLICIT\n\n\n\n\n\nCODE\nplot_model(m, type = \"eff\")  \n\n\n$IMPLICIT\n\n\n\n\n\n\n$EXPLICIT\n\n\n\n\n\nCODE\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\nPresent\n\n\nCODE\n##PLOT INTERACTION ANOTHER WAY\nlibrary(ggeffects)\n\n\n\nAttaching package: 'ggeffects'\n\n\nThe following object is masked from 'package:modelr':\n\n    data_grid\n\n\nThe following object is masked from 'package:cowplot':\n\n    get_title\n\n\nCODE\nggpredict(m, terms = c(\"EXPLICIT\",\"IMPLICIT\")) %>% \n  plot(connect.lines = TRUE) + \n\n  scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 2)) + \n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"EXPLICIT scaffold\"\n) + theme(legend.position = \"bottom\")\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC3B/4_sgc3B_hypotesting.html#overall-interpretation-state",
    "href": "analysis/SGC3B/4_sgc3B_hypotesting.html#overall-interpretation-state",
    "title": "12  SGC3B (Impasse * Explicit) Hypothesis Testing",
    "section": "OVERALL INTERPRETATION STATE",
    "text": "OVERALL INTERPRETATION STATE\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular => indicates a correct triangular coordinate understanding\n\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% dplyr::select(pretty_condition, q,subject,state,IMPLICIT, EXPLICIT) %>% droplevels()\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = EXPLICIT,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~IMPLICIT) +\n   labs(title = \"Interpretation across all Questions\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = IMPLICIT,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~EXPLICIT) +\n   labs(title = \"Interpretation across all Questions\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = EXPLICIT,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(q ~ IMPLICIT) +\n   labs(title = \"Interpretation by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\n\nx <- df_i %>% mutate(\n  pretty_explicit = recode_factor(EXPLICIT,\n                                  \"none\" = \"no image\",\n                                  \"img\" = \"static image\",\n                                  \"ixn\" = \"interactive image\"\n  )\n)\n\nx %>% \n  ggplot(data = .,\n         mapping = aes(x = IMPLICIT,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n   scale_fill_foxy(discrete = TRUE, \"state\")  +\n  facet_wrap(~pretty_explicit) +\n   labs(title = \"DISTRIBUTION | Interpretation\",\n       x = \"Condition\", y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"\") + theme_clean()\n\n\n\n\n\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             none-control none-impasse img-control img-impasse ixv-control\n  orthogonal       0.6960       0.3281      0.2531      0.0620      0.1129\n  other            0.0682       0.1839      0.0844      0.1079      0.0459\n  angular          0.0248       0.0625      0.0409      0.0533      0.0223\n  triangular       0.2109       0.4255      0.6216      0.7767      0.8189\n  Sum              1.0000       1.0000      1.0000      1.0000      1.0000\n            \n             ixv-impasse    Sum\n  orthogonal      0.0593 0.2528\n  other           0.0542 0.0914\n  angular         0.0454 0.0417\n  triangular      0.8411 0.6141\n  Sum             1.0000 1.0000\n\n\nCODE\n(t <- table(df_i$state, df_i$EXPLICIT, df_i$IMPLICIT) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n, ,  = control\n\n            \n             none  img  ixn  Sum\n  orthogonal  561  204   91  856\n  other        55   68   37  160\n  angular      20   33   18   71\n  triangular  170  501  660 1331\n  Sum         806  806  806 2418\n\n, ,  = impasse\n\n            \n             none  img  ixn  Sum\n  orthogonal  273   50   47  370\n  other       153   87   43  283\n  angular      52   43   36  131\n  triangular  354  626  667 1647\n  Sum         832  806  793 2431\n\n\n\nMIXED MULTINOMIAL REGRESSION\nDoes condition affect the response state of of items across the task?\nFit a MIXED logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\nFit Model [brms]\n\n\nCODE\n# to set priors... create model with default priors\n# then run prior_summary to see what the defaults are and syntax for coefficients\n# prior_summary(flat)\n# then create lists with the new priors, and create a new model with the priors \n\ninf_priors <- c(\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  \n  #prior on CONDITION COEFFICIENT\n  #likely to change odds between 0 and 2.4\n    \n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimgMcontrol\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimgMimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionixvMcontrol\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionixvMimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionnoneMimpasse\", dpar = \"muother\"),\n  \n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimgMcontrol\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimgMimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionixvMcontrol\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionixvMimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionnoneMimpasse\", dpar = \"muangular\"),\n  \n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimgMcontrol\", dpar = \"mutriangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionimgMimpasse\", dpar = \"mutriangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionixvMcontrol\", dpar = \"mutriangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionixvMimpasse\", dpar = \"mutriangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"pretty_conditionnoneMimpasse\", dpar = \"mutriangular\")\n)\n\nme_priors <- c(\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  \n  #prior on IMPLICIT COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse\", dpar = \"mutriangular\"),\n  \n  #prior on EXPLICIT COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITimg\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITimg\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITimg\", dpar = \"mutriangular\"),\n  \n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITixn\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITixn\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITixn\", dpar = \"mutriangular\")\n)\n\nixn_priors <- c(\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  \n  #prior on IMPLICIT COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse\", dpar = \"mutriangular\"),\n  \n  #prior on EXPLICIT COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITimg\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITimg\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITimg\", dpar = \"mutriangular\"),\n  \n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITixn\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITixn\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"EXPLICITixn\", dpar = \"mutriangular\"),\n  \n  #prior on IXN COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse:EXPLICITimg\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse:EXPLICITimg\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse:EXPLICITimg\", dpar = \"mutriangular\"),\n  \n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse:EXPLICITixn\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse:EXPLICITixn\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"IMPLICITimpasse:EXPLICITixn\", dpar = \"mutriangular\")\n)\n\n#BAYESIAN RANDOM ONLY\nBmm.cat.rSQ <- brm( state ~ 1 + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3B/models/sgc3b_brms_state_Bmm.cat.rSQ.rds\")\n\n# CONDITION (unravelled, not fatorial) EQUAL ONLY MODEL\nBmm.cat.CrSQ <- brm( state ~ pretty_condition + (1|subject) + (1|q), \n                 data = df_i, \n                 prior = inf_priors,\n                 family = \"categorical\",\n                 chains = 4, iter = 2000, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 backend = \"cmdstanr\",\n                 file =\"analysis/SGC3B/models/sgc3b_brms_state_Bmm.cat.CrSQ.rds\")\n\n##MODEL COMPARISON\n# print(\"MODEL COMPARISON: random effects (vs) CONDITION\")\n# bayesfactor(Bmm.cat.rSQ, Bmm.cat.CrSQ)\n#substantial evidence in favor of conditon model over random only BF 1.64e+16\n\n# CONDITION * OSPAN MODEL\nBmm.cat.IErSQ  <- brm( state ~ IMPLICIT + EXPLICIT + (1|subject) + (1|q), \n                 data = df_i, \n                 prior = me_priors,\n                 family = \"categorical\",\n                 chains = 4, iter = 2000, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3B/models/sgc3b_brms_state_Bmm.cat.IErSQ.rds\")\n\n\n\n# CONDITION * OSPAN MODEL\nBmm.cat.I.ErSQ  <- brm( state ~ IMPLICIT*EXPLICIT + (1|subject) + (1|q), \n                 data = df_i, \n                 prior = ixn_priors,\n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC3B/models/sgc3b_brms_state_Bmm.cat.I.ErSQ.rds\")\n\n\n##MODEL COMPARISON\nprint(\"IS FACTORIAL better than MAIN EFFECTS model?\")\n\n\n[1] \"IS FACTORIAL better than MAIN EFFECTS model?\"\n\n\nCODE\n(b <- bayesfactor(Bmm.cat.I.ErSQ, Bmm.cat.IErSQ))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nBayes Factors for Model Comparison\n\n    Model                                                BF\n[2] IMPLICIT + EXPLICIT + (1 | subject) + (1 | q) 5.03e+129\n\n* Against Denominator: [1] IMPLICIT * EXPLICIT + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\ncompare_models(Bmm.cat.I.ErSQ, Bmm.cat.IErSQ)\n\n\nPossible multicollinearity between b_muangular_IMPLICITimpasse:EXPLICITixn and b_muangular_EXPLICITixn (r = 0.72). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nParameter                                |       Bmm.cat.I.ErSQ |        Bmm.cat.IErSQ\n--------------------------------------------------------------------------------------\nmuother_Intercept                        | -3.06 (-3.95, -2.25) | -2.84 (-3.68, -2.06)\nmuangular_Intercept                      | -4.57 (-5.74, -3.41) | -4.49 (-5.59, -3.47)\nmutriangular_Intercept                   | -3.02 (-4.16, -1.93) | -2.83 (-3.92, -1.84)\nmuother_IMPLICITimpasse                  |  2.30 ( 1.73,  2.88) |  1.93 ( 1.54,  2.36)\nmuother_EXPLICITimg                      |  1.57 ( 0.96,  2.21) |  1.41 ( 0.98,  1.89)\nmuother_EXPLICITixn                      |  1.84 ( 1.13,  2.57) |  1.18 ( 0.67,  1.68)\nmuangular_IMPLICITimpasse                |  2.17 ( 1.34,  3.02) |  2.10 ( 1.52,  2.68)\nmuangular_EXPLICITimg                    |  1.93 ( 1.05,  2.87) |  1.85 ( 1.19,  2.51)\nmuangular_EXPLICITixn                    |  1.93 ( 0.88,  2.99) |  1.91 ( 1.23,  2.62)\nmutriangular_IMPLICITimpasse             |  2.63 ( 1.42,  3.78) |  2.30 ( 1.58,  3.08)\nmutriangular_EXPLICITimg                 |  4.20 ( 2.96,  5.43) |  4.22 ( 3.28,  5.16)\nmutriangular_EXPLICITixn                 |  6.36 ( 5.14,  7.61) |  5.73 ( 4.76,  6.79)\nmuangular_IMPLICITimpasse:EXPLICITixn    | -0.20 (-1.59,  1.16) |                     \nmutriangular_IMPLICITimpasse:EXPLICITixn | -1.34 (-3.02,  0.36) |                     \nmuother_IMPLICITimpasse:EXPLICITimg      | -0.26 (-1.15,  0.67) |                     \nmuother_IMPLICITimpasse:EXPLICITixn      | -1.36 (-2.42, -0.37) |                     \nmutriangular_IMPLICITimpasse:EXPLICITimg |  0.09 (-1.56,  1.77) |                     \nmuangular_IMPLICITimpasse:EXPLICITimg    | -0.17 (-1.38,  1.06) |                     \n--------------------------------------------------------------------------------------\nObservations                             |                 4849 |                 4849\n\n\nReported\nTo quantify the effect of IMPLICIT and EXPLICIT scaffolding on INTERPRETATION, we fit a (bayesian) mixed multinomial regression model with random intercepts for subjects and questions.\nA Bayes Factor model comparison (against a random intercepts only model) indicates extreme evidence for the final model including fixed effects of IMPLICIT, EXPLICIT and their interaction term (BF = 6.89e+125)\n(note, the BF may change as it is estimated via simulation each time)\n\n\nDescribe\n\n\nCODE\n# best model\nm <- Bmm.cat.I.ErSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n Family: categorical \n  Links: muother = logit; muangular = logit; mutriangular = logit \nFormula: state ~ IMPLICIT * EXPLICIT + (1 | subject) + (1 | q) \n   Data: df_i (Number of observations: 4849) \n  Draws: 4 chains, each with iter = 2500; warmup = 1000; thin = 1;\n         total post-warmup draws = 6000\n\nGroup-Level Effects: \n~q (Number of levels: 13) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.36      0.33     0.87     2.15 1.00     2461\nsd(muangular_Intercept)        1.68      0.44     1.04     2.75 1.00     2371\nsd(mutriangular_Intercept)     1.19      0.29     0.78     1.92 1.00     2321\n                           Tail_ESS\nsd(muother_Intercept)          3697\nsd(muangular_Intercept)        3766\nsd(mutriangular_Intercept)     3852\n\n~subject (Number of levels: 373) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.11      0.12     0.88     1.35 1.00     2221\nsd(muangular_Intercept)        1.58      0.18     1.24     1.96 1.00     2193\nsd(mutriangular_Intercept)     3.36      0.21     2.97     3.79 1.00     1945\n                           Tail_ESS\nsd(muother_Intercept)          3686\nsd(muangular_Intercept)        3675\nsd(mutriangular_Intercept)     3460\n\nPopulation-Level Effects: \n                                         Estimate Est.Error l-95% CI u-95% CI\nmuother_Intercept                           -3.07      0.43    -3.95    -2.25\nmuangular_Intercept                         -4.57      0.60    -5.74    -3.41\nmutriangular_Intercept                      -3.03      0.56    -4.16    -1.93\nmuother_IMPLICITimpasse                      2.30      0.30     1.73     2.88\nmuother_EXPLICITimg                          1.58      0.32     0.96     2.21\nmuother_EXPLICITixn                          1.84      0.37     1.13     2.57\nmuother_IMPLICITimpasse:EXPLICITimg         -0.26      0.46    -1.15     0.67\nmuother_IMPLICITimpasse:EXPLICITixn         -1.37      0.52    -2.42    -0.37\nmuangular_IMPLICITimpasse                    2.18      0.43     1.34     3.02\nmuangular_EXPLICITimg                        1.94      0.47     1.05     2.87\nmuangular_EXPLICITixn                        1.93      0.53     0.88     2.99\nmuangular_IMPLICITimpasse:EXPLICITimg       -0.18      0.62    -1.38     1.06\nmuangular_IMPLICITimpasse:EXPLICITixn       -0.21      0.69    -1.59     1.16\nmutriangular_IMPLICITimpasse                 2.63      0.61     1.42     3.78\nmutriangular_EXPLICITimg                     4.20      0.63     2.96     5.43\nmutriangular_EXPLICITixn                     6.36      0.64     5.14     7.61\nmutriangular_IMPLICITimpasse:EXPLICITimg     0.10      0.85    -1.56     1.77\nmutriangular_IMPLICITimpasse:EXPLICITixn    -1.34      0.86    -3.02     0.36\n                                         Rhat Bulk_ESS Tail_ESS\nmuother_Intercept                        1.00     1769     2895\nmuangular_Intercept                      1.00     1945     2830\nmutriangular_Intercept                   1.00     1575     3016\nmuother_IMPLICITimpasse                  1.00     3197     4077\nmuother_EXPLICITimg                      1.00     4010     4863\nmuother_EXPLICITixn                      1.00     3622     4471\nmuother_IMPLICITimpasse:EXPLICITimg      1.00     3492     4315\nmuother_IMPLICITimpasse:EXPLICITixn      1.00     3238     3904\nmuangular_IMPLICITimpasse                1.00     3505     4288\nmuangular_EXPLICITimg                    1.00     3321     4185\nmuangular_EXPLICITixn                    1.00     4057     4557\nmuangular_IMPLICITimpasse:EXPLICITimg    1.00     3668     4610\nmuangular_IMPLICITimpasse:EXPLICITixn    1.00     3742     4443\nmutriangular_IMPLICITimpasse             1.00     1648     2908\nmutriangular_EXPLICITimg                 1.00     1430     2451\nmutriangular_EXPLICITixn                 1.00     1801     2982\nmutriangular_IMPLICITimpasse:EXPLICITimg 1.00     1548     2657\nmutriangular_IMPLICITimpasse:EXPLICITixn 1.00     1335     2895\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCODE\n(d <- describe_posterior(ci=.95, m))\n\n\nPossible multicollinearity between b_muangular_IMPLICITimpasse:EXPLICITixn and b_muangular_EXPLICITixn (r = 0.72). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nSummary of Posterior Distribution\n\nParameter                                | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n-------------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                        |  -3.06 | [-3.95, -2.25] |   100% | [-0.18, 0.18] |        0% | 1.005 | 1760.00\nmuangular_Intercept                      |  -4.57 | [-5.74, -3.41] |   100% | [-0.18, 0.18] |        0% | 1.003 | 1939.00\nmutriangular_Intercept                   |  -3.02 | [-4.16, -1.93] |   100% | [-0.18, 0.18] |        0% | 1.002 | 1570.00\nmuother_IMPLICITimpasse                  |   2.30 | [ 1.73,  2.88] |   100% | [-0.18, 0.18] |        0% | 1.001 | 3203.00\nmuother_EXPLICITimg                      |   1.57 | [ 0.96,  2.21] |   100% | [-0.18, 0.18] |        0% | 1.001 | 4001.00\nmuother_EXPLICITixn                      |   1.84 | [ 1.13,  2.57] |   100% | [-0.18, 0.18] |        0% | 1.001 | 3568.00\nmuother_IMPLICITimpasse:EXPLICITimg      |  -0.26 | [-1.15,  0.67] | 71.73% | [-0.18, 0.18] |    27.60% | 1.001 | 3486.00\nmuother_IMPLICITimpasse:EXPLICITixn      |  -1.36 | [-2.42, -0.37] | 99.73% | [-0.18, 0.18] |        0% | 1.000 | 3206.00\nmuangular_IMPLICITimpasse                |   2.17 | [ 1.34,  3.02] |   100% | [-0.18, 0.18] |        0% | 1.001 | 3486.00\nmuangular_EXPLICITimg                    |   1.93 | [ 1.05,  2.87] |   100% | [-0.18, 0.18] |        0% | 1.001 | 3301.00\nmuangular_EXPLICITixn                    |   1.93 | [ 0.88,  2.99] |   100% | [-0.18, 0.18] |        0% | 1.000 | 4044.00\nmuangular_IMPLICITimpasse:EXPLICITimg    |  -0.17 | [-1.38,  1.06] | 60.80% | [-0.18, 0.18] |    23.81% | 1.001 | 3670.00\nmuangular_IMPLICITimpasse:EXPLICITixn    |  -0.20 | [-1.59,  1.16] | 61.93% | [-0.18, 0.18] |    21.26% | 1.001 | 3736.00\nmutriangular_IMPLICITimpasse             |   2.63 | [ 1.42,  3.78] |   100% | [-0.18, 0.18] |        0% | 1.002 | 1631.00\nmutriangular_EXPLICITimg                 |   4.20 | [ 2.96,  5.43] |   100% | [-0.18, 0.18] |        0% | 1.004 | 1410.00\nmutriangular_EXPLICITixn                 |   6.36 | [ 5.14,  7.61] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1784.00\nmutriangular_IMPLICITimpasse:EXPLICITimg |   0.09 | [-1.56,  1.77] | 54.57% | [-0.18, 0.18] |    17.68% | 1.003 | 1528.00\nmutriangular_IMPLICITimpasse:EXPLICITixn |  -1.34 | [-3.02,  0.36] | 93.65% | [-0.18, 0.18] |     5.28% | 1.004 | 1303.00\n\n\nCODE\nprint(\"BAYES FACTOR [comparison to RANDOM ONLY model]\")\n\n\n[1] \"BAYES FACTOR [comparison to RANDOM ONLY model]\"\n\n\nCODE\n#think of this like the anova(model) to get p values for each predictor\n#has to recompile the models with rstan. total drag\n#already calculated bayes factor above, this just interprets it\neffectsize::interpret_bf(exp(b$log_BF), include_value = TRUE)\n\n\n[1] \"no evidence (BF = 1.00) against or in favour of\"\n[2] \"extreme evidence (BF = 5.03e+129) in favour of\" \n(Rules: jeffreys1961)\n\n\nCODE\nprint(\"DESCRIBE POSTERIOR\")\n\n\n[1] \"DESCRIBE POSTERIOR\"\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n(l <- describe_posterior(m))\n\n\nPossible multicollinearity between b_muangular_IMPLICITimpasse:EXPLICITixn and b_muangular_EXPLICITixn (r = 0.72). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nSummary of Posterior Distribution\n\nParameter                                | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n-------------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                        |  -3.06 | [-3.95, -2.25] |   100% | [-0.18, 0.18] |        0% | 1.005 | 1760.00\nmuangular_Intercept                      |  -4.57 | [-5.74, -3.41] |   100% | [-0.18, 0.18] |        0% | 1.003 | 1939.00\nmutriangular_Intercept                   |  -3.02 | [-4.16, -1.93] |   100% | [-0.18, 0.18] |        0% | 1.002 | 1570.00\nmuother_IMPLICITimpasse                  |   2.30 | [ 1.73,  2.88] |   100% | [-0.18, 0.18] |        0% | 1.001 | 3203.00\nmuother_EXPLICITimg                      |   1.57 | [ 0.96,  2.21] |   100% | [-0.18, 0.18] |        0% | 1.001 | 4001.00\nmuother_EXPLICITixn                      |   1.84 | [ 1.13,  2.57] |   100% | [-0.18, 0.18] |        0% | 1.001 | 3568.00\nmuother_IMPLICITimpasse:EXPLICITimg      |  -0.26 | [-1.15,  0.67] | 71.73% | [-0.18, 0.18] |    27.60% | 1.001 | 3486.00\nmuother_IMPLICITimpasse:EXPLICITixn      |  -1.36 | [-2.42, -0.37] | 99.73% | [-0.18, 0.18] |        0% | 1.000 | 3206.00\nmuangular_IMPLICITimpasse                |   2.17 | [ 1.34,  3.02] |   100% | [-0.18, 0.18] |        0% | 1.001 | 3486.00\nmuangular_EXPLICITimg                    |   1.93 | [ 1.05,  2.87] |   100% | [-0.18, 0.18] |        0% | 1.001 | 3301.00\nmuangular_EXPLICITixn                    |   1.93 | [ 0.88,  2.99] |   100% | [-0.18, 0.18] |        0% | 1.000 | 4044.00\nmuangular_IMPLICITimpasse:EXPLICITimg    |  -0.17 | [-1.38,  1.06] | 60.80% | [-0.18, 0.18] |    23.81% | 1.001 | 3670.00\nmuangular_IMPLICITimpasse:EXPLICITixn    |  -0.20 | [-1.59,  1.16] | 61.93% | [-0.18, 0.18] |    21.26% | 1.001 | 3736.00\nmutriangular_IMPLICITimpasse             |   2.63 | [ 1.42,  3.78] |   100% | [-0.18, 0.18] |        0% | 1.002 | 1631.00\nmutriangular_EXPLICITimg                 |   4.20 | [ 2.96,  5.43] |   100% | [-0.18, 0.18] |        0% | 1.004 | 1410.00\nmutriangular_EXPLICITixn                 |   6.36 | [ 5.14,  7.61] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1784.00\nmutriangular_IMPLICITimpasse:EXPLICITimg |   0.09 | [-1.56,  1.77] | 54.57% | [-0.18, 0.18] |    17.68% | 1.003 | 1528.00\nmutriangular_IMPLICITimpasse:EXPLICITixn |  -1.34 | [-3.02,  0.36] | 93.65% | [-0.18, 0.18] |     5.28% | 1.004 | 1303.00\n\n\nCODE\n# (tm <- tidy(m,   conf.int = TRUE))\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nPossible multicollinearity between b_muangular_IMPLICITimpasse:EXPLICITixn and b_muangular_EXPLICITixn (r = 0.72). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nParameter                                | Median |            95% CI |     pd | % in ROPE |  Rhat |     ESS\n------------------------------------------------------------------------------------------------------------\nmuother_Intercept                        |   0.05 | [  0.02,    0.11] |   100% |        0% | 1.005 | 1760.00\nmuangular_Intercept                      |   0.01 | [  0.00,    0.03] |   100% |        0% | 1.003 | 1939.00\nmutriangular_Intercept                   |   0.05 | [  0.02,    0.15] |   100% |        0% | 1.002 | 1570.00\nmuother_IMPLICITimpasse                  |   9.94 | [  5.65,   17.76] |   100% |        0% | 1.001 | 3203.00\nmuother_EXPLICITimg                      |   4.82 | [  2.60,    9.09] |   100% |        0% | 1.001 | 4001.00\nmuother_EXPLICITixn                      |   6.32 | [  3.08,   13.03] |   100% |        0% | 1.001 | 3568.00\nmuother_IMPLICITimpasse:EXPLICITimg      |   0.77 | [  0.32,    1.96] | 71.73% |    27.60% | 1.001 | 3486.00\nmuother_IMPLICITimpasse:EXPLICITixn      |   0.26 | [  0.09,    0.69] | 99.73% |        0% | 1.000 | 3206.00\nmuangular_IMPLICITimpasse                |   8.77 | [  3.83,   20.57] |   100% |        0% | 1.001 | 3486.00\nmuangular_EXPLICITimg                    |   6.92 | [  2.85,   17.60] |   100% |        0% | 1.001 | 3301.00\nmuangular_EXPLICITixn                    |   6.92 | [  2.41,   19.96] |   100% |        0% | 1.000 | 4044.00\nmuangular_IMPLICITimpasse:EXPLICITimg    |   0.84 | [  0.25,    2.90] | 60.80% |    23.81% | 1.001 | 3670.00\nmuangular_IMPLICITimpasse:EXPLICITixn    |   0.82 | [  0.20,    3.18] | 61.93% |    21.26% | 1.001 | 3736.00\nmutriangular_IMPLICITimpasse             |  13.83 | [  4.13,   43.88] |   100% |        0% | 1.002 | 1631.00\nmutriangular_EXPLICITimg                 |  66.94 | [ 19.39,  227.71] |   100% |        0% | 1.004 | 1410.00\nmutriangular_EXPLICITixn                 | 576.65 | [170.58, 2027.99] |   100% |        0% | 1.001 | 1784.00\nmutriangular_IMPLICITimpasse:EXPLICITimg |   1.09 | [  0.21,    5.85] | 54.57% |    17.68% | 1.003 | 1528.00\nmutriangular_IMPLICITimpasse:EXPLICITixn |   0.26 | [  0.05,    1.43] | 93.65% |     5.28% | 1.004 | 1303.00\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#PREDICT METHOD\nnewdata <- df_i %>% dplyr::select(IMPLICIT, EXPLICIT, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n# lengthen data frame to handle multinomial\npreds <- preds %>%\n  dplyr::select(-subject, -q) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = ! IMPLICIT & !EXPLICIT,\n  values_to = \"preds\",\n  names_to = \"state\",\n)\n\n(p <- preds %>%\n  group_by(IMPLICIT, EXPLICIT , state ) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 24 × 7\n# Groups:   IMPLICIT, EXPLICIT [6]\n   IMPLICIT EXPLICIT state              median      se     lwr     upr\n   <fct>    <fct>    <chr>               <dbl>   <dbl>   <dbl>   <dbl>\n 1 control  none     P(Y = angular)    0.00975 0.00146 0.00689 0.0126 \n 2 control  none     P(Y = orthogonal) 0.856   0.0118  0.833   0.879  \n 3 control  none     P(Y = other)      0.0491  0.00309 0.0430  0.0551 \n 4 control  none     P(Y = triangular) 0.0308  0.0123  0.00674 0.0548 \n 5 control  img      P(Y = angular)    0.0138  0.00228 0.00937 0.0183 \n 6 control  img      P(Y = orthogonal) 0.126   0.00987 0.107   0.146  \n 7 control  img      P(Y = other)      0.0333  0.00421 0.0251  0.0416 \n 8 control  img      P(Y = triangular) 0.776   0.0128  0.750   0.801  \n 9 control  ixn      P(Y = angular)    0.00467 0.00159 0.00155 0.00778\n10 control  ixn      P(Y = orthogonal) 0.0317  0.00685 0.0182  0.0451 \n# … with 14 more rows\n\n\nCODE\n##DRAWS METHOD\n# GENERATE draws from model\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# # SUMMARIZE draws from model\n# (k <- kable(draws %>%\n#   dplyr::select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 4, col.names =\n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>%\n#   kable_styling())\n\n\n\n\nINFERENCE\nConsistent with our findings for question ACCURACY, we see similarly increasing probability of triangular responses across the explicit scaffold factors such that no image < static image < interactive image. Within each explicit scaffold, we see that the impasse factor yields more angular and other responses relative to control, consistent with our findings in Study 3A. Much like with ACCURACY, we see near ceiling performance across both non-impasse and impasse conditions with the interactive image.\nThe model parameter estimates (see appendix TODO) indicate reliable evidence for main effects of both impasse and explicit. Specifically, the static image and interactive image conditions increase the probability of TRIANGULAR, ANGULAR and OTHER answers, (relative to orthogonal answers, in the no-image condition). The impasse factor increases the probability of triangular, angular and other answers in the no-image condition, but does not substantially increase the proportion of angular or other answers relative to the non-impasse control in the static image and interactive image conditions. It seems that the explicit scaffold has the strongest effect. Importantly, impasse factor increases the probability of triangular responses (relative to non-impasse) across an explicit scaffolds, except the interactive image, where both the non-impasse control and impasse condition are nearly at ceiling.\n\n\nBayes Factor\n\nhttps://easystats.github.io/bayestestR/articles/bayes_factors.html\n\nCompute bayes factor for model parameters\n\n\nCODE\n#define null on the log odds scale as the range from -0.4 to 0.4, a 1.5X increase or decrease in odds \n(coef_bf <- bayesfactor(m, null = c(-0.4, 0.4)))\n\n\nSampling priors, please wait...\n\n\nBayes Factor (Null-Interval)\n\nParameter                                |       BF\n---------------------------------------------------\nmuother_Intercept                        | 2.40e+04\nmuangular_Intercept                      | 1.43e+06\nmutriangular_Intercept                   | 1.98e+04\nmuother_IMPLICITimpasse                  | 4.94e+05\nmuother_EXPLICITimg                      |   316.39\nmuother_EXPLICITixn                      |   751.26\nmuother_IMPLICITimpasse:EXPLICITimg      |    0.130\nmuother_IMPLICITimpasse:EXPLICITixn      |     5.43\nmuangular_IMPLICITimpasse                | 2.11e+03\nmuangular_EXPLICITimg                    |   119.52\nmuangular_EXPLICITixn                    |    45.01\nmuangular_IMPLICITimpasse:EXPLICITimg    |    0.176\nmuangular_IMPLICITimpasse:EXPLICITixn    |    0.213\nmutriangular_IMPLICITimpasse             |   414.07\nmutriangular_EXPLICITimg                 | 9.33e+05\nmutriangular_EXPLICITixn                 | 2.38e+09\nmutriangular_IMPLICITimpasse:EXPLICITimg |    0.257\nmutriangular_IMPLICITimpasse:EXPLICITixn |     1.20\n\n* Evidence Against The Null: [-0.400, 0.400]\n\n\nCODE\n#plot bayes factors\nplot(coef_bf)\n\n\n\n\n\nCODE\n#interpretation guidelines\neffectsize::interpret_bf(exp(coef_bf$log_BF), include_value = TRUE)\n\n\n [1] \"extreme evidence (BF = 2.40e+04) in favour of\" \n [2] \"extreme evidence (BF = 1.43e+06) in favour of\" \n [3] \"extreme evidence (BF = 1.98e+04) in favour of\" \n [4] \"extreme evidence (BF = 4.94e+05) in favour of\" \n [5] \"extreme evidence (BF = 316.39) in favour of\"   \n [6] \"extreme evidence (BF = 751.26) in favour of\"   \n [7] \"moderate evidence (BF = 1/7.69) against\"       \n [8] \"moderate evidence (BF = 5.43) in favour of\"    \n [9] \"extreme evidence (BF = 2.11e+03) in favour of\" \n[10] \"extreme evidence (BF = 119.52) in favour of\"   \n[11] \"very strong evidence (BF = 45.01) in favour of\"\n[12] \"moderate evidence (BF = 1/5.67) against\"       \n[13] \"moderate evidence (BF = 1/4.70) against\"       \n[14] \"extreme evidence (BF = 414.07) in favour of\"   \n[15] \"extreme evidence (BF = 9.33e+05) in favour of\" \n[16] \"extreme evidence (BF = 2.38e+09) in favour of\" \n[17] \"moderate evidence (BF = 1/3.90) against\"       \n[18] \"anecdotal evidence (BF = 1.20) in favour of\"   \n(Rules: jeffreys1961)\n\n\n\n\nInteractions\n\n\nCODE\n#EMMEANS doesn't support multinomial brms models. BUMMER\n#BUT brms has some built in stuffs. \n\n# FOR MAIN EFFECTS PLOTS \nprint(\"MAIN EFFECTS\")\n\n\n[1] \"MAIN EFFECTS\"\n\n\nCODE\nconditional_effects(m, categorical = TRUE)\n\n\nWarning: Interactions cannot be plotted directly if 'categorical' is TRUE.\nPlease use argument 'conditions' instead.\n\n\n\n\n\n\n\n\nCODE\nprint(\"INTERACTION PLOT\")\n\n\n[1] \"INTERACTION PLOT\"\n\n\nCODE\nconditions <- make_conditions(m, vars = c(\"EXPLICIT\"))\nc <- conditional_effects(m, \"IMPLICIT\", conditions = conditions,\n                    categorical = TRUE)\nugly_plot <- plot(c, plot = FALSE)[[1]]                    \nugly_plot + \n  # geom_line(aes(group = EXPLICIT))+\n  scale_color_foxy(discrete = TRUE, \"state\")  +\n  theme_clean() \n\n\n\n\n\nCODE\nprint(\"INTERACTION PLOT\")\n\n\n[1] \"INTERACTION PLOT\"\n\n\nCODE\nplot_model(m, type=\"int\")\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\n\n\n\nCODE\n## MARGINAL EFFECTS\n\n# from easystats \n# library(modelbased)\n# uses emmeans, doesn't support brms categorical \n# estimate_contrasts(m, test = \"bf\", bf_prior = m)\n\n# library(marginaleffects)\n# https://vincentarelbundock.github.io/marginaleffects/articles/brms.html\n## takes a really long time... maybe hangs machine??\n# (mfx <- marginaleffects::marginaleffects(m))\n# summary(mfx)\n\n\n\n\nCODE\nlibrary(ggeffects)\nggpredict(m, terms = c(\"EXPLICIT\",\"IMPLICIT\")) %>% \n  plot(connect.lines = TRUE) + \n  scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)) +\n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"EXPLICIT scaffold\", y = \"Interpretation\"\n) + theme(legend.position = \"bottom\")\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\n\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, vline.color = \"red\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            p.threshold = 0.1, #manually adjust to account for directional test\n#            ci.lvl = 0.90 ) + #manually adjusted for directional test\n#   labs(title = \"Model Estimate | Odds Ratio\",\n#        subtitle = \"\",\n#        x = \"Condition\")\n\n\n#EASYSTATS | MODEL | LOG ODDS RATIO\nresult <- model_parameters(m, exponentiate = FALSE, component = \"all\")\n\n\nPossible multicollinearity between b_muangular_IMPLICITimpasse:EXPLICITixn and b_muangular_EXPLICITixn (r = 0.72). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nCODE\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n\n\nPossible multicollinearity between b_muangular_IMPLICITimpasse:EXPLICITixn and b_muangular_EXPLICITixn (r = 0.72). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nCODE\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n# + theme_clean()\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\n\n\nPossible multicollinearity between b_muangular_IMPLICITimpasse:EXPLICITixn and b_muangular_EXPLICITixn (r = 0.72). This might lead to inappropriate results. See 'Details' in '?equivalence_test'.\n\n\nCODE\nplot(result)\n\n\nPicking joint bandwidth of 0.0694\n\n\nWarning: Removed 10800 rows containing non-finite values (stat_density_ridges).\n\n\n\n\n\nCODE\nresult <- rope(m)\n\n\nPossible multicollinearity between b_muangular_IMPLICITimpasse:EXPLICITixn and b_muangular_EXPLICITixn (r = 0.72). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nCODE\nplot(result)\n\n\n\n\n\nCODE\nresult <- pd(m) \nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\",\n           axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n##WORKING\n# https://mjskay.github.io/ggdist/reference/stat_slab.html\n## VIS probability of correct response\n#TAKES A REALLY LONG TIME\n\n#1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, ospan_split, subject, q) %>%\n#   add_epred_draws(m,\n#                    # ndraws = 100, # n = 100,\n#                    # dpar = TRUE,\n#                    transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n\n#OR load from file\n# draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n\n#2| VISUALIZE PREDICTIONS | GGDIST\n##TODO figure out height normalization.\n##do it with much smaller number of draws \n#TODO adjust bandwidth/smoothing? + put on same line + \n#TAKES A REAAALY LONG TIME\n# d <- \n\n# d <- draws %>% sample_n(10) %>% \n#   ggplot(aes(x = .epred,  y = pretty_condition, fill = ospan_split)) +\n#   stat_slab(width = c(.95), alpha = 0.5, normalize=\"xy\") +\n#   facet_wrap(~.category) +\n#   #   #normalize = all, panels, xy, groups, none\n#   xlim(0,1) + labs(\n#     title = \"Model Predicted Probability of Correct Response\",\n#     x = \"probability of correct response\",\n#     y = \"Interpretation\"\n#   ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()\n# # # \n# # # ggsave(d, filename = \"figures/sgc3a_BBm.cat.CrSQ_lab_posterior.svg\", width = 6, height =4)\n# d\n\n\n#USING PREDS\n\npreds %>% \n  ggplot(aes (x = preds, y = EXPLICIT, fill = IMPLICIT)) +\n  stat_slab( normalize = \"xy\", alpha = 0.5) +\n  facet_grid(~ state)\n\n\n\n\n\n\n\nCODE\n#DISPLAY MODEL AS TABLE\ntab_model(m)\n\n\n'bayes_R2' is not defined for unordered categorical models.\n\n\n\n\n \nstate: other\nstate: angular\nstate: triangular\n\n\nPredictors\nOdds Ratios\nCI (95%)\nOdds Ratios\nCI (95%)\nOdds Ratios\nCI (95%)\n\n\nIntercept\n0.01\n0.00 – 0.03\n0.05\n0.02 – 0.11\n0.05\n0.02 – 0.15\n\n\nIMPLICIT: impasse\n8.77\n3.83 – 20.57\n9.94\n5.65 – 17.76\n13.83\n4.13 – 43.88\n\n\nEXPLICIT: img\n6.92\n2.85 – 17.60\n4.82\n2.60 – 9.09\n66.94\n19.39 – 227.71\n\n\nEXPLICIT: ixn\n6.92\n2.41 – 19.96\n6.32\n3.08 – 13.03\n576.65\n170.58 – 2027.99\n\n\nIMPLICITimpasse:EXPLICITimg\n0.84\n0.25 – 2.90\n0.77\n0.32 – 1.96\n1.09\n0.21 – 5.85\n\n\nIMPLICITimpasse:EXPLICITixn\n0.82\n0.20 – 3.18\n0.26\n0.09 – 0.69\n0.26\n0.05 – 1.43\n\n\nRandom Effects\n\n\n\nσ2\n-0.08\n\n\n\nτ00\n1.80\n\n\nICC\n-0.05\n\n\nN subject\n373\n\n\nN q\n13\n\nObservations\n4849\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n#TODO OUTPUT TABLE \n\n#https://arelbundock.com/posts/modelsummary_multinomial_logit/\n# modelsummary(m)\n\n\n\n\nDiagnostics\n\n\nCODE\n#CHECK Fit of posterior predictive to data\npp_check(m, ndraws=1000)\n\n\n\n\n\nCODE\n#CHECK posterior vs. priors\nresult <- estimate_density(m)\nplot(result, stack = FALSE, priors= TRUE)\n\n\n\n\n\nCODE\n#CHECK model\nplot(m)"
  },
  {
    "objectID": "analysis/SGC3B/4_sgc3B_hypotesting.html#h1b-q1-accuracy",
    "href": "analysis/SGC3B/4_sgc3B_hypotesting.html#h1b-q1-accuracy",
    "title": "12  SGC3B (Impasse * Explicit) Hypothesis Testing",
    "section": "H1B | Q1 ACCURACY",
    "text": "H1B | Q1 ACCURACY\n\nSetup\n\n\nCODE\ndf <- df_items %>% filter(q==1) %>% dplyr::select(accuracy, pretty_condition, IMPLICIT, EXPLICIT)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Accuracy\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = IMPLICIT,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~EXPLICIT) +\n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Accuracy\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\npaste(\"Proportions of Correct Responses by Condition\")\n\n\n[1] \"Proportions of Correct Responses by Condition\"\n\n\nCODE\ntable(df$accuracy, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n           \n            none-control none-impasse img-control img-impasse ixv-control\n  incorrect        0.839        0.703       0.677       0.371       0.355\n  correct          0.161        0.297       0.323       0.629       0.645\n  Sum              1.000        1.000       1.000       1.000       1.000\n           \n            ixv-impasse   Sum\n  incorrect       0.246 0.534\n  correct         0.754 0.466\n  Sum             1.000 1.000\n\n\nCODE\npaste(\"Number of Correct Responses by Condition\")\n\n\n[1] \"Number of Correct Responses by Condition\"\n\n\nCODE\ntable(df$accuracy, df$IMPLICIT, df$EXPLICIT) %>% addmargins(2) %>% #display sum for row\n      addmargins(1) #sanity check sum of columns\n\n\n, ,  = none\n\n           \n            control impasse Sum\n  incorrect      52      45  97\n  correct        10      19  29\n  Sum            62      64 126\n\n, ,  = img\n\n           \n            control impasse Sum\n  incorrect      42      23  65\n  correct        20      39  59\n  Sum            62      62 124\n\n, ,  = ixn\n\n           \n            control impasse Sum\n  incorrect      22      15  37\n  correct        40      46  86\n  Sum            62      61 123\n\n\n\n\nTESTS\n\n\nCODE\n#CHI SQUARE ON ACCURACY X OSPAN-SPLIT in LOW WORKING MEMORY\n# df_low <- df %>% filter(ospan_split == \"low-memory\")\n# # table(df_low$pretty_condition, df_low$accuracy)\n# chisq.test( x = df_low$pretty_condition, y = df_low$accuracy, correct = TRUE)\n# \n# #CHI SQUARE ON ACCURACY X OSPAN-SPLIT in HIGH WORKING MEMORY\n# df_high <- df %>% filter(ospan_split == \"high-memory\")\n# #table(df_high$pretty_condition, df_high$accuracy)\n# chisq.test( x = df_high$pretty_condition, y = df_high$accuracy,correct = TRUE)\n# #significant if correct = FALSE\n\n\n\n\nCODE\n# INTERACTION (IMPLICIT (VS) EXPLICIT)\ngrouped_ggbarstats( data = df, x = IMPLICIT, y = accuracy, \n                    grouping.var = EXPLICIT,\n                    type = \"nonparametric\")\n\n\n\n\n\nCODE\n# MAIN EFFECT CONDITION (yes)\nggbarstats( data = df, x = accuracy, y = pretty_condition,\n                    type = \"nonparametric\")\n\n\n\n\n\nCODE\n# MAIN EFFECT OSPAN (none)\n# ggbarstats( data = df, x = accuracy, y = ospan_split, \n#                     type = \"nonparametric\")\n\n\n\n\nLOGISTIC REGRESSION (MAIN EFFECT CONDITION)\nFit a logistic regression predicting accuracy (absolute score) (n = 373) by condition (k = 2).\n\n\nParameter estimate: \\(\\beta_{0}\\) = Log Odds of (correct) responses in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of correct response in CONTROL condition\nParameter estimate: \\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for correct response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of correct response in IMPASSE (vs) CONTROL\nNull hypothesis:\\(\\beta_{impasse} \\le 0\\) the odds for a correct response does not change, or decreases\nAlternative hypothesis: \\(\\beta_{impasse} \\gt 0\\) the odds of a correct response increases\n\n\nFit CONDITION Model\nFirst, we fit a logistic regression with condition as predictor, and compare its fit to an empty (intercept-only) model.\n\n\nCODE\n# MODEL FITTING ::::::::\n\n#: 1 EMPTY MODEL baseline glm model intercept only\nm.0 = glm(accuracy ~ 1, data = df, family = \"binomial\")\n# print(\"EMPTY MODEL\")\n# summary(m0)\n\n#: 2 CONDITION model\nm.C <- glm( accuracy ~ pretty_condition, data = df, family = \"binomial\")\n# print(\"PREDICTOR MODEL\")\n# summary(m1)\n\n#: 2 TEST SUPERIOR FIT\npaste(\"AIC wth predictor is lower than empty model?\", m.0$aic > m.C$aic)\n\n\n[1] \"AIC wth predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(m.0,m.C) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName | Model | df | df_diff |  Chi2 |      p\n--------------------------------------------\nm.0  |   glm |  1 |         |       |       \nm.C  |   glm |  6 |       5 | 74.33 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(m.0,m.C))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  1.28060386240202e-14\"\n\n\nCODE\n# summary(m.C)\n\n\n#: 4 FACTORIAL model\nm.IE <- glm( accuracy ~ IMPLICIT*EXPLICIT, data = df, family = \"binomial\")\n# print(\"PREDICTOR MODEL\")\n# summary(m.IE)\n# car::Anova(m.IE, type=3)\n\n#: 4 TEST SUPERIOR FIT\npaste(\"AIC with FACTORIAL lower than FLAT CONDITION only model?\", m.C$aic > m.IE$aic)\n\n\n[1] \"AIC with FACTORIAL lower than FLAT CONDITION only model? TRUE\"\n\n\nCODE\n#can't do lrt ... not nested models\n\n\n\n\nDescribe\n\n\nCODE\n#set model\nm <- m.IE\n\n# DESCRIBE MODEL ::::::::::::::::::::::::::::::::::::: \n\nprint(\"PREDICTOR MODEL [default two-tailed sig test]\")\n\n\n[1] \"PREDICTOR MODEL [default two-tailed sig test]\"\n\n\nCODE\nsummary(m)\n\n\n\nCall:\nglm(formula = accuracy ~ IMPLICIT * EXPLICIT, family = \"binomial\", \n    data = df)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n-1.675  -0.883  -0.593   0.936   1.910  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                   -1.649      0.345   -4.77  1.8e-06 ***\nIMPLICITimpasse                0.786      0.441    1.79    0.074 .  \nEXPLICITimg                    0.907      0.439    2.06    0.039 *  \nEXPLICITixn                    2.246      0.436    5.16  2.5e-07 ***\nIMPLICITimpasse:EXPLICITimg    0.484      0.581    0.83    0.405    \nIMPLICITimpasse:EXPLICITixn   -0.264      0.594   -0.44    0.657    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 515.41  on 372  degrees of freedom\nResidual deviance: 441.08  on 367  degrees of freedom\nAIC: 453.1\n\nNumber of Fisher Scoring iterations: 4\n\n\nCODE\nprint(\"SIGNIFIGANCE TEST\")\n\n\n[1] \"SIGNIFIGANCE TEST\"\n\n\nCODE\ncar::Anova(m, type=3)\n\n\nAnalysis of Deviance Table (Type III tests)\n\nResponse: accuracy\n                  LR Chisq Df Pr(>Chisq)    \nIMPLICIT               3.3  1      0.069 .  \nEXPLICIT              33.0  2      7e-08 ***\nIMPLICIT:EXPLICIT      1.9  2      0.383    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n# MANUAL ONE-SIDED SIGTEST ::::::::::::::::::::::::::: \n\n# one-sided (right tail) z test for B COEFFICIENT\n#https://stats.stackexchange.com/questions/330655/strategy-for-a-one-sided-test-of-glms-coefficients\n\n#SANITY CHECK 2-tailed test should match the model output\n# tt <- 2*pnorm(summary(m)$coefficients[2:4], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,3))\n# ot <- pnorm(summary(m)$coefficients[2:4], lower.tail = F)\n# paste(\"BUT we want a one tailed directional, null: B <= 0: \",round(ot,3))\n# paste(\"adjusted confint for directional hypothesis\")\n# (dcint <- confint(m, level = 0.90)) # get 90% for right side))\n# # https://stats.stackexchange.com/questions/20734/is-a-1-sided-90-prediction-interval-equivalent-to-a-2-sided-95-prediction-inte\n\n#:::::::: INTERPRET COEFFICIENTS\n\n# print(\"Confidence Interval —- LOG ODDS\")\n# confint(m1) #not adjusted for 1-tailed\n# print(\"Coefficients —- ODDS RATIOS\")\n# (e <- cbind( exp(coef(m)), exp(confint(m)))) #exponentiated, not adjusted\n# (e <- cbind( exp(coef(m)), exp(dcint))) #exponentiated, adjusted\n\n#TODO INTERACTIONS & ESTIMATED MARGINAL MEANS \n# print(\"MODEL PREDICTIONS\")\n# Retrieve predictions as probabilities \n# (for each level of the predictor)\n# pred.control <- predict(m,data.frame(pretty_condition=\"control\"),type=\"response\")\n#this should match : plogis(intercept coefficient)\n# paste(\"Probability of success in control,\", pred.control)\n# pred.impasse <- predict(m,data.frame(pretty_condition=\"impasse\"),type=\"response\")\n#this should match : plogis(intercept coefficient + predictor coeff)\n# paste(\"Probability of success in impasse,\", pred.impasse)\n\n\n\n\nInference\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n\n## | PLOT TESTS\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n#ONLY FOR BAYESIAN VERSION\n# result <- rope(m)\n# plot(result)\n# \n# result <- pd(m)\n# plot(result)\n\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\",\n           axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")  \n\n\n$IMPLICIT\n\n\n\n\n\n\n$EXPLICIT\n\n\n\n\n\nCODE\nplot_model(m, type = \"eff\")  \n\n\n$IMPLICIT\n\n\n\n\n\n\n$EXPLICIT\n\n\n\n\n\nCODE\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.19\n0.09 – 0.36\n<0.001\n\n\nIMPLICIT [impasse]\n2.20\n0.94 – 5.38\n0.074\n\n\nEXPLICIT [img]\n2.48\n1.07 – 6.06\n0.039\n\n\nEXPLICIT [ixn]\n9.45\n4.16 – 23.18\n<0.001\n\n\nIMPLICIT [impasse] *EXPLICIT [img]\n1.62\n0.51 – 5.04\n0.405\n\n\nIMPLICIT [impasse] *EXPLICIT [ixn]\n0.77\n0.24 – 2.45\n0.657\n\n\nObservations\n373\n\n\nR2 Tjur\n0.189\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report::report(m)\n\n#print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"MODEL DIAGNOSTICS\")\n\n\n[1] \"MODEL DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC3B/4_sgc3B_hypotesting.html#h1b-q1-interpretation-state",
    "href": "analysis/SGC3B/4_sgc3B_hypotesting.html#h1b-q1-interpretation-state",
    "title": "12  SGC3B (Impasse * Explicit) Hypothesis Testing",
    "section": "H1B | Q1 INTERPRETATION STATE",
    "text": "H1B | Q1 INTERPRETATION STATE\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular and ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n\n\n\n\n\n\n\n\nResearch Question\nDoes Ss in the impasse condition produce less orthogonal responses on the first question?\n\n\n\n\nHypothesis\nH1A | Ss in the IMPASSE condition will have a higher likelihood of producing unknown and and triangle-like response states, relative to orthogonal response states, on the first question\n\n\nData\n\ndata: df_items where q == 1\noutcome: state ( 4 level factor from 5 level high_interpretation )\npredictor: condition [between-subjects factor]\n\n\n\nAnalysis Strategy\n\nMultinomial (Logistic) Regression on state predicted by condition\n\nAlternative:\n\nOrdinal regression on state; but model doesn’t satisfy proportional odds assumption (parallel slopes)\nMultinomial or Ordinal regression on high_interpretation (5 category interpretation state which distinguishes between uncertain (blank, reference) unclassifiable, triangle-like and true triangular.) There are some cells with zeros, however (no uncertain responses in control) which means the model can’t accurately estimate those comparisons\n\n\n\n\n\nSetup\n\n\nCODE\ndf <- df_items %>% filter(q==1) %>% \n  dplyr::select(pretty_condition, IMPLICIT, EXPLICIT, state)\n\n\n\n\nDescribe\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Interpretation\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf %>% \n  ggplot(data = .,\n         mapping = aes(x = IMPLICIT,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~EXPLICIT) +\n   labs(#y = \"Correct Response on Q 1\",\n       title = \"Q1 Interpretation\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df$state, df$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             none-control none-impasse img-control img-impasse ixv-control\n  orthogonal       0.8065       0.3125      0.6452      0.1290      0.2581\n  other            0.0000       0.2812      0.0161      0.1452      0.0000\n  angular          0.0323       0.1094      0.0161      0.0968      0.0968\n  triangular       0.1613       0.2969      0.3226      0.6290      0.6452\n  Sum              1.0000       1.0000      1.0000      1.0000      1.0000\n            \n             ixv-impasse    Sum\n  orthogonal      0.0820 0.3727\n  other           0.0164 0.0777\n  angular         0.1475 0.0831\n  triangular      0.7541 0.4665\n  Sum             1.0000 1.0000\n\n\nCODE\n(t <- table(df$state, df$IMPLICIT, df$EXPLICIT) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n, ,  = none\n\n            \n             control impasse Sum\n  orthogonal      50      20  70\n  other            0      18  18\n  angular          2       7   9\n  triangular      10      19  29\n  Sum             62      64 126\n\n, ,  = img\n\n            \n             control impasse Sum\n  orthogonal      40       8  48\n  other            1       9  10\n  angular          1       6   7\n  triangular      20      39  59\n  Sum             62      62 124\n\n, ,  = ixn\n\n            \n             control impasse Sum\n  orthogonal      16       5  21\n  other            0       1   1\n  angular          6       9  15\n  triangular      40      46  86\n  Sum             62      61 123\n\n\n\n\nMULTINOMIAL REGRESSION\nDoes condition affect the response state of Q1?\nFit a logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\n3 equations will be estimated (# categories - 1); each representing the odds of answering in that particular interpretation (vs) the reference category (orthogonal answer) [essentially a series of binary logistic regressions, but instead of incorrect/correct, comparing [reference category] vs [this category])\nFor each equation:\n\n\\(\\beta_{0}\\) = Log Odds of [this category type vs. reference category type) response in CONTROL condition\n\\(e^{\\beta_{0}}\\) = ODDS of [this category type vs. reference category type] response in CONTROL condition\n\\(\\beta_{1}\\) = \\(\\beta_{1impasse}\\) Log Odds (Log OR; change in odds for [this category] type response in impasse (vs) control [log scale])\n\\(e^{\\beta_{1}}\\) = ODDS RATIO of [this. vs reference category type] response in IMPASSE (vs) CONTROL\nTwo-tailed NHST Null hypothesis: \\(\\beta_{impasse} = 0\\) the odds for [this category of response vs. reference] are not different for IMPASSE condition\nAlternative hypothesis: \\(\\beta_{impasse} \\ne 0\\) the odds of [this category of response vs. reference] increases or decreases for IMPASSE condition\n\n\n\nFit CONDITION Model\n\n\nCODE\n#check reference level \nprint(\"Categories (first is reference)\")\n\n\n[1] \"Categories (first is reference)\"\n\n\nCODE\nlevels(df$state)\n\n\n[1] \"orthogonal\" \"other\"      \"angular\"    \"triangular\"\n\n\nCODE\n#FIT EMPTY MODEL\nprint(\"EMPTY MODEL\")\n\n\n[1] \"EMPTY MODEL\"\n\n\nCODE\ncatm.0 <- multinom(state ~ 1, data = df)\n\n\n# weights:  8 (3 variable)\ninitial  value 517.087797 \nfinal  value 421.076070 \nconverged\n\n\nCODE\n# summary(catm.0)\n\n#FIT PREDICTOR MODEL\nprint(\"CONDITION MODEL\")\n\n\n[1] \"CONDITION MODEL\"\n\n\nCODE\ncatm.C <- multinom(formula = state ~ pretty_condition, data = df, model = TRUE)\n\n\n# weights:  28 (18 variable)\ninitial  value 517.087797 \niter  10 value 342.627778\niter  20 value 334.991914\niter  30 value 334.824433\nfinal  value 334.824100 \nconverged\n\n\nCODE\n# summary(catm.C)\n\n#COMPARE MODEL FIT\npaste(\"AIC wth CONDITION predictor is lower than empty model?\", catm.0$AIC > catm.C$AIC)\n\n\n[1] \"AIC wth CONDITION predictor is lower than empty model? TRUE\"\n\n\nCODE\ntest_lrt(catm.0, catm.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff |   Chi2 |      p\n--------------------------------------------------\ncatm.0 | multinom |  3 |         |        |       \ncatm.C | multinom | 18 |      15 | 172.50 | < .001\n\n\nCODE\n#FIT PREDICTOR MODEL\nprint(\"FACTORIAL MODEL\")\n\n\n[1] \"FACTORIAL MODEL\"\n\n\nCODE\ncatm.IE <- multinom(formula = state ~ IMPLICIT*EXPLICIT, data = df, model = TRUE)\n\n\n# weights:  28 (18 variable)\ninitial  value 517.087797 \niter  10 value 338.418971\niter  20 value 334.948654\niter  30 value 334.824378\nfinal  value 334.824101 \nconverged\n\n\nCODE\n# summary(catm.IE)\n# car::Anova(catm.IE)\n\n#COMPARE MODEL FIT\npaste(\"AIC wth FACTORIAL predictor is lower than empty model?\", catm.IE$AIC > catm.0$AIC)\n\n\n[1] \"AIC wth FACTORIAL predictor is lower than empty model? FALSE\"\n\n\nCODE\ntest_lrt(catm.0, catm.IE)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |   Chi2 |      p\n---------------------------------------------------\ncatm.0  | multinom |  3 |         |        |       \ncatm.IE | multinom | 18 |      15 | 172.50 | < .001\n\n\nAIC in predictor model is less than empty model, and likelihood ratio test indicates predictor model is significantly better fit to the sample data than the empty (intercept only) model.\n\n\nDescribe\n\n\nCODE\n#set model\nm <- catm.IE\n\n#::::::::INTERPRETATION\npaste(\"MODEL SUMMARY\")\n\n\n[1] \"MODEL SUMMARY\"\n\n\nCODE\nsummary(m)\n\n\nCall:\nmultinom(formula = state ~ IMPLICIT * EXPLICIT, data = df, model = TRUE)\n\nCoefficients:\n           (Intercept) IMPLICITimpasse EXPLICITimg EXPLICITixn\nother           -17.00           16.90      13.316      -0.328\nangular          -3.22            2.17      -0.471       2.238\ntriangular       -1.61            1.56       0.916       2.526\n           IMPLICITimpasse:EXPLICITimg IMPLICITimpasse:EXPLICITixn\nother                          -13.093                      -1.177\nangular                          1.233                      -0.600\ntriangular                       0.719                      -0.255\n\nStd. Errors:\n           (Intercept) IMPLICITimpasse EXPLICITimg EXPLICITixn\nother            0.545           0.545       0.545       0.571\nangular          0.721           0.844       1.243       0.865\ntriangular       0.346           0.472       0.442       0.456\n           IMPLICITimpasse:EXPLICITimg IMPLICITimpasse:EXPLICITixn\nother                            0.645                       0.571\nangular                          1.425                       1.119\ntriangular                       0.670                       0.729\n\nResidual Deviance: 670 \nAIC: 706 \n\n\nCODE\ncar::Anova(m, type =3) #always type 3 for ixns \n\n\nAnalysis of Deviance Table (Type III tests)\n\nResponse: state\n                  LR Chisq Df Pr(>Chisq)    \nIMPLICIT              44.0  3    1.5e-09 ***\nEXPLICIT              46.0  6    3.0e-08 ***\nIMPLICIT:EXPLICIT      4.8  6       0.56    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m)\n\n\n# A tibble: 18 × 6\n   y.level    term                        estimate std.error statistic   p.value\n   <chr>      <chr>                          <dbl>     <dbl>     <dbl>     <dbl>\n 1 other      (Intercept)                  -17.0       0.545   -31.2   2.12e-213\n 2 other      IMPLICITimpasse               16.9       0.545    31.0   8.65e-211\n 3 other      EXPLICITimg                   13.3       0.545    24.4   1.22e-131\n 4 other      EXPLICITixn                   -0.328     0.571    -0.574 5.66e-  1\n 5 other      IMPLICITimpasse:EXPLICITimg  -13.1       0.645   -20.3   1.04e- 91\n 6 other      IMPLICITimpasse:EXPLICITixn   -1.18      0.571    -2.06  3.95e-  2\n 7 angular    (Intercept)                   -3.22      0.721    -4.46  8.05e-  6\n 8 angular    IMPLICITimpasse                2.17      0.844     2.57  1.02e-  2\n 9 angular    EXPLICITimg                   -0.471     1.24     -0.379 7.05e-  1\n10 angular    EXPLICITixn                    2.24      0.865     2.59  9.72e-  3\n11 angular    IMPLICITimpasse:EXPLICITimg    1.23      1.42      0.865 3.87e-  1\n12 angular    IMPLICITimpasse:EXPLICITixn   -0.600     1.12     -0.536 5.92e-  1\n13 triangular (Intercept)                   -1.61      0.346    -4.65  3.38e-  6\n14 triangular IMPLICITimpasse                1.56      0.472     3.30  9.59e-  4\n15 triangular EXPLICITimg                    0.916     0.442     2.07  3.80e-  2\n16 triangular EXPLICITixn                    2.53      0.456     5.54  2.94e-  8\n17 triangular IMPLICITimpasse:EXPLICITimg    0.719     0.670     1.07  2.83e-  1\n18 triangular IMPLICITimpasse:EXPLICITixn   -0.255     0.729    -0.350 7.26e-  1\n\n\nCODE\npaste(\"ODDS RATIO\")\n\n\n[1] \"ODDS RATIO\"\n\n\nCODE\ntidy(m, exponentiate = TRUE)\n\n\n# A tibble: 18 × 6\n   y.level    term                        estimate std.error statistic   p.value\n   <chr>      <chr>                          <dbl>     <dbl>     <dbl>     <dbl>\n 1 other      (Intercept)                  4.12e-8     0.545   -31.2   2.12e-213\n 2 other      IMPLICITimpasse              2.18e+7     0.545    31.0   8.65e-211\n 3 other      EXPLICITimg                  6.07e+5     0.545    24.4   1.22e-131\n 4 other      EXPLICITixn                  7.20e-1     0.571    -0.574 5.66e-  1\n 5 other      IMPLICITimpasse:EXPLICITimg  2.06e-6     0.645   -20.3   1.04e- 91\n 6 other      IMPLICITimpasse:EXPLICITixn  3.08e-1     0.571    -2.06  3.95e-  2\n 7 angular    (Intercept)                  4.00e-2     0.721    -4.46  8.05e-  6\n 8 angular    IMPLICITimpasse              8.75e+0     0.844     2.57  1.02e-  2\n 9 angular    EXPLICITimg                  6.25e-1     1.24     -0.379 7.05e-  1\n10 angular    EXPLICITixn                  9.37e+0     0.865     2.59  9.72e-  3\n11 angular    IMPLICITimpasse:EXPLICITimg  3.43e+0     1.42      0.865 3.87e-  1\n12 angular    IMPLICITimpasse:EXPLICITixn  5.49e-1     1.12     -0.536 5.92e-  1\n13 triangular (Intercept)                  2.00e-1     0.346    -4.65  3.38e-  6\n14 triangular IMPLICITimpasse              4.75e+0     0.472     3.30  9.59e-  4\n15 triangular EXPLICITimg                  2.50e+0     0.442     2.07  3.80e-  2\n16 triangular EXPLICITixn                  1.25e+1     0.456     5.54  2.94e-  8\n17 triangular IMPLICITimpasse:EXPLICITimg  2.05e+0     0.670     1.07  2.83e-  1\n18 triangular IMPLICITimpasse:EXPLICITixn  7.75e-1     0.729    -0.350 7.26e-  1\n\n\n\n\nINFERENCE\n\n\nVisualize\n\n\nCODE\n#:::::::: PLOT\n\n#SJPLOT | MODEL | ODDS RATIO\n#library(sjPlot)\nplot_model(m, type = \"est\",\n           vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) +  #manually adjusted for directional test   \n  # scale_y_continuous() + #remove to put on log scale x axis \n  # scale_x_discrete(labels=c(\"control\",\"impasse\"))+\n  labs(title = \"MODEL ESTIMATE  | Q1 Accuracy ~ condition\",\n       subtitle = \"Impasse increases odds of correct response on Q1\",\n       x = \"Condition\") + theme_clean()\n\n\n\n\n\nCODE\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type = \"int\") \n\n\n\n\n\nCODE\nplot_model(m, type=\"eff\", ci.lvl = 0.95) \n\n\n$IMPLICIT\n\n\n\n\n\n\n$EXPLICIT\n\n\n\n\n\nCODE\n# +  ylim(0,1) +\n#   labs(title = \"MODEL PREDICTION  | Q1 State ~ condition\",\n#        subtitle = \"Impasse increases probability of more accurate response states Q1\",\n#        x = \"Condition\") + theme_clean()\n\n#TODO ESTIMAED MARGINALS AND IXN PLOTS \n# https://cran.r-project.org/web/packages/emmeans/vignettes/comparisons.html\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \nstate\n\n\nPredictors\nOdds Ratios\nCI\np\nResponse\n\n\n(Intercept)\n0.00\n0.00 – 0.00\n<0.001\nother\n\n\nIMPLICIT [impasse]\n21844852.25\n7473167.96 – 63854789.87\n<0.001\nother\n\n\nEXPLICIT [img]\n606607.92\n207522.04 – 1773176.36\n<0.001\nother\n\n\nEXPLICIT [ixn]\n0.72\n0.23 – 2.22\n0.567\nother\n\n\nIMPLICIT [impasse] *EXPLICIT [img]\n0.00\n0.00 – 0.00\n<0.001\nother\n\n\nIMPLICIT [impasse] *EXPLICIT [ixn]\n0.31\n0.10 – 0.95\n0.040\nother\n\n\n(Intercept)\n0.04\n0.01 – 0.17\n<0.001\nangular\n\n\nIMPLICIT [impasse]\n8.75\n1.66 – 46.02\n0.011\nangular\n\n\nEXPLICIT [img]\n0.62\n0.05 – 7.20\n0.705\nangular\n\n\nEXPLICIT [ixn]\n9.37\n1.71 – 51.42\n0.010\nangular\n\n\nIMPLICIT [impasse] *EXPLICIT [img]\n3.43\n0.21 – 56.52\n0.388\nangular\n\n\nIMPLICIT [impasse] *EXPLICIT [ixn]\n0.55\n0.06 – 4.96\n0.592\nangular\n\n\n(Intercept)\n0.20\n0.10 – 0.40\n<0.001\ntriangular\n\n\nIMPLICIT [impasse]\n4.75\n1.88 – 12.01\n0.001\ntriangular\n\n\nEXPLICIT [img]\n2.50\n1.05 – 5.96\n0.039\ntriangular\n\n\nEXPLICIT [ixn]\n12.50\n5.10 – 30.62\n<0.001\ntriangular\n\n\nIMPLICIT [impasse] *EXPLICIT [img]\n2.05\n0.55 – 7.66\n0.284\ntriangular\n\n\nIMPLICIT [impasse] *EXPLICIT [ixn]\n0.77\n0.18 – 3.25\n0.727\ntriangular\n\n\nObservations\n373\n\n\nR2 / R2 adjusted\n0.205 / 0.202\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n\n# modelsummary(mixcat.1, s)\n#TODO OUTPUT TABLE \n#https://arelbundock.com/posts/modelsummary_multinomial_logit/\n\n\n\n\nDiagnostics\n\n\nCODE\n#EXAMINE PREDICTIONS\n#create sample data frame\n# test <- data.frame(pretty_condition = c(\"control\", \"impasse\"))\n# pred <- predict(m, newdata = test, \"probs\")\n# paste(\"Predicted Probability of Being in Each State\")\n# ( x <- cbind(test, pred))\n# \n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n# DescTools::PseudoR2(m, which = c(\"McFadden\", \"CoxSnell\", \"Nagelkerke\"))"
  },
  {
    "objectID": "analysis/SGC3B/4_sgc3B_hypotesting.html#explore-specific-question",
    "href": "analysis/SGC3B/4_sgc3B_hypotesting.html#explore-specific-question",
    "title": "12  SGC3B (Impasse * Explicit) Hypothesis Testing",
    "section": "EXPLORE specific question",
    "text": "EXPLORE specific question\n\n\nCODE\n# \n# df <- df_items %>% filter(q==10)\n# grouped_ggbarstats( data = df, x = accuracy, y = pretty_condition, grouping.var = ospan_split)"
  },
  {
    "objectID": "analysis/SGC4A/1_sgc4A_introduction.html",
    "href": "analysis/SGC4A/1_sgc4A_introduction.html",
    "title": "13  Introduction",
    "section": "",
    "text": "In Study 4A we explore the extent to which the design of the axes and gridlines of the graph influence how a reader interprets its underlying coordinate system.\nExperimental Hypothesis:\nWe hypothesize that the design of the major axes (specifically orthogonal) axes establish for the learner the basis of the coordinate system. Differently oriented axes should lead the reader to be more open to alternative coordinate systems.\nExploratory Questions"
  },
  {
    "objectID": "analysis/SGC4A/1_sgc4A_introduction.html#methods",
    "href": "analysis/SGC4A/1_sgc4A_introduction.html#methods",
    "title": "13  Introduction",
    "section": "METHODS",
    "text": "METHODS\n\nDesign\nWe employed a mixed design with 1 between-subjects factor with 4 levels (Graphical Framework: ORTH-FULL, ORTH-SPARSE, ORTH-GRID, TRI-SPARSE) and 15 items (within-subjects factor).\nIndependent Variables:\n\nB-S (Graphical Framework: ORTH-FULL, ORTH-SPARSE, ORTH-GRID, TRI-SPARSE)\nW-S (Item x 15)\n\nDependent Variables:\n\nResponse Accuracy : Is the response triangular-correct?\nResponse Interpretation : (derived) With which interpretation of the graph is the subject’s response on an individual question consistent?\nResponse Latency : Time from stimulus onset to clicking ‘Submit’ button: time in (s)\n\n\n\nMaterials\nStimuli consisted of a series of 15 graph comprehension questions, each testing a different combination of time interval relations, to be read from a Triangular-Model graph. Figure 21.1. The list of questions can be found here.\n\n\n\nFigure 13.1: Sample Question (Q=1) for Graph Comprehension Task\n\n\n\n\nProcedure\nParticipants completed the study via a web-browser.\n(1) Upon starting, they submitted informed consent, before reading task instructions.\n(2) Participants were introduced to a scenario in which they were to play the role of a project manager, scheduling shifts for a group of employees. The schedule of the employees was presented in a TriangularModel (TM) graph, and they would be answering question about the schedule.\n(3) Then participants completed an experimental block of 15 items : the Graph Comprehension Task\n(4) Following the experimental block, participants answered a free-response question about their strategy for reading the graph, followed by a demographic questionnaire and debrief.\n\n\nSample\nData were collected by convenience sample of a university subject pool during the winter of 2022. Participants accessed the study via a web browser (asynchronously). The stimulus application required the participant stay in full-screen mode for the entirety of the study."
  },
  {
    "objectID": "analysis/SGC4A/1_sgc4A_introduction.html#analysis",
    "href": "analysis/SGC4A/1_sgc4A_introduction.html#analysis",
    "title": "13  Introduction",
    "section": "ANALYSIS",
    "text": "ANALYSIS\n\nData Preparation\nData were collected via a custom web application and stored in a NoSQL database. The following exclusion criteria were applied during data cleaning:\n\ncompletion status : “success” ; subject must have finished all parts of the study, including demographic questionnaire\nsession ID: [in list] ; subject must have been assigned to valid data collection session (discard testing and piloting data)\nbrowser interaction violations < 3; subject must have fewer than 3 violations of non-allowed browser interactions (i.e. resizing window, leaving browser tab or leaving fullscreen mode)\nself-rated effort > 2; subjects who reported, “not trying hard/rushing through questions” or “started out trying hard but giving up at some point” were excluded from analysis.\nattention check ==TRUE ; subjects who failed to answer a mid-study attention check question (Graph Comprehension Task Question #6) are excluded\n\n\n\n\nPre-Requisite\nFollowed By\n\n\n\n\nwinter2022_clean_sgc4a.Rmd\n2_sgc4A_scoring.qmd\n\n\n\nThe underlying data structure of the stimulus web application changed across the data collection period, resulting in slightly different data files (i.e. columns are not named consistently). In this section, we combine the files from each data collection period into a single harmonized data file for analysis (one for participants, one for items).\n\nParticipants\nFirst we import participant-level data, selecting only the columns relevant for analysis. The result is a single data frame df_subjects containing one row for each subject (across all periods). Note that we are not discarding any response data. Rather, we discard columns that are automatically recorded by the stimulus web application and help the application run.\nNote that we discard some columns representing scores calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. No raw data (responses and response times) are discarded, only algorithmically-derived scores for the responses.\n\n\nCODE\n#IMPORT PARTICIPANT DATA\n\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # # mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#set datafiles\nfall17 <- \"analysis/SGC4A/data/0-session-level/fall17_sgc4a_participants.csv\"\nspring18 <- \"analysis/SGC4A/data/0-session-level/spring18_sgc4a_participants.csv\"\nwinter22 <- \"analysis/SGC4A/data/0-session-level/winter22_sgc4a_participants.rds\"\nsummer22 <- \"analysis/SGC4A/data/0-session-level/su22_sgc4a_participants.rds\"\n\n#read datafiles, set mode and term\ndf_subjects_fall17 <- read_csv(fall17) %>% mutate(mode = \"lab-synch\", term = \"fall17\")\ndf_subjects_spring18 <- read_csv(spring18) %>% mutate(mode = \"lab-synch\", term = \"spring18\")\ndf_subjects_winter22 <- read_rds(winter22) #use RDS file as it contains metadata\ndf_subjects_summer22 <- read_rds(summer22) #use RDS file as it contains metadata\n\n#SAVE METADATA FROM WINTER, but no rows \ndf_subjects <- df_subjects_winter22 %>% filter(condition=='X') %>% \n  dplyr::select(\n  subject,condition,pretty_condition, term,mode,\n  gender,age,language, schoolyear, country,\n  effort,difficulty,confidence,enjoyment,other,\n  totaltime_m, \n  # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n  #exploratory factors\n  violations, browser, width, height\n)\n\n#reduce data collected using OLD webapp to useful columns\ndf_subjects_before <- rbind(df_subjects_fall17, df_subjects_spring18) %>% \n  #rename and summarize some columns\n  mutate(\n    totaltime_m = totalTime / 1000 / 60,  \n    absolute_score = triangular_score,\n    language = native_language,\n    gender = sex,\n    schoolyear = year) %>% \n  #create placeholders for cols not collected until NEW webapp [for later rbind]\n  mutate(\n    condition = as.factor(condition),\n    pretty_condition = \"NULL\",\n    effort = \"NULL\",\n    difficulty = \"NULL\",\n    confidence = \"NULL\",\n    enjoyment = \"NULL\",\n    other = \"NULL\",\n    disability = \"NULL\",\n    violations = \"NULL\",\n    browser = \"NULL\",\n    width = \"NULL\",\n    height = \"NULL\"\n  ) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select(subject, condition, pretty_condition, term, mode, \n                #demographics\n                gender, age, language, schoolyear, country,\n                #placeholder effort survey\n                effort, difficulty, confidence, enjoyment, \n                #placeholder misc \n                other, disability,\n                #response characteristics\n                totaltime_m, \n                # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                #exploratory factors\n                violations, browser, width, height)\n\n#save 'explanation' columns from winter22, which is actually a response to a free response item (Q16); was recorded with item_level data in old webapp\ndf_winter22_q16 <- df_subjects_winter22 %>% \n  dplyr::select(subject, condition, pretty_condition, term , mode, explanation) %>% \n  mutate(\n    q = 16,\n    response = explanation\n  ) %>% dplyr::select(-explanation)\n\n\n#reduce data collected using NEW webapp to useful columns\ndf_subjects_winter22 <- df_subjects_winter22 %>% \n  mutate(score = absolute_score) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, pretty_condition, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m, \n                 # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                 #exploratory factors \n                 violations, browser, width, height)\n\ndf_subjects_summer22 <- df_subjects_summer22 %>% \n  mutate(score = absolute_score) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, pretty_condition, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m, \n                 # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                 #exploratory factors \n                 violations, browser, width, height)\n\neffort_labels <- c(\"I tried my best on each question\", \"I tried my best on most questions\")\n\n#compare dataframe columns\n# janitor::compare_df_cols(df_subjects, df_subjects_winter22, df_subjects_before)\n\n#combine dataframes from old and new webapps\ndf_subjects <- rbind(df_subjects, df_subjects_winter22, df_subjects_summer22, df_subjects_before) %>% \n  #refactor factors\n  mutate (\n    subject = factor(subject),\n    condition = factor(condition),\n    pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\"),\n    term = factor(term, levels= c(\"fall17\",\"spring18\",\"fall21\",\"winter22\",\"summer22\")),\n    mode = factor(mode, levels=c(\"lab-synch\",\"asynch\")),\n    gender = factor(gender),\n    schoolyear = factor(schoolyear, levels=c(\"First\",\"Second\",\"Third\",\"Fourth\",\"Fifth\",\"Other\"))\n  )\n\n#FIX METADATA\n#Add metadata for columns that lost it [factors, for some reason!]\nvar_label(df_subjects$subject) <- \"ID of subject (randomly assigned in stimulus app).\"\nvar_label(df_subjects$condition) <- \"ID indicates randomly assigned condition (111 -> control, 121 -> impasse).\"\nvar_label(df_subjects$term) <- \"indicates if session was run with experimenter present or asynchronously\"\nvar_label(df_subjects$mode) <- \"indicates mode in which the participant completed the study\"\nvar_label(df_subjects$gender) <- \"What is your gender identity?\"\nvar_label(df_subjects$schoolyear) <- \"What is your year in school?\"\n\n#REFACTOR CONDITIONS\ndf_subjects <- df_subjects %>% mutate(\n    condition = recode_factor(condition, \"11111\" = \"111\", \"112\" = \"112\", \"111\" = \"111\", \"113\" = \"113\", \"114\" = \"114\", \"115\"=\"115\"),\n    pretty_condition = recode_factor(condition, \"111\" = \"Orth-Full\", \"114\" =  \"Orth-Sparse\", \"115\"=\"Orth-Grid\",\"113\"=\"Tri-Sparse\"),\n    pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\")\n) \n\n#CLEANUP\nrm(df_subjects_fall17, df_subjects_spring18, df_subjects_winter22,df_subjects_before, df_subjects_summer22)\nrm(fall17,spring18,winter22, summer22)\n\n#FINALLY DROP CONDITION 112 (partial orthog with y axis lines extending only to right end of triangle)\n#this was an incomplete [pilot only] condition collected in FA17 SP18 for pilot purposes\ndf_subjects <- df_subjects %>% filter(condition != \"112\") %>% \n  mutate(\n    condition = droplevels(condition),\n    pretty_condition = droplevels(pretty_condition)\n  )\n\n#FINALLY DROP CONDITION 113 \n#actually part ofstudy SGC4D under different naming scheme\ndf_subjects <- df_subjects %>% filter(condition != \"113\") %>% \n  mutate(\n    condition = droplevels(condition),\n    pretty_condition = droplevels(pretty_condition)\n  )\n\n\n\n\nItems\nNext we import item-level data from each data collection period, selecting only the columns relevant for analysis. The result is a single data frame df_items containing one row for each graph comprehension task question (qs=15) (across all periods). A second data frame df_freeresponse contains one row for each free response strategy question (last question posed to participants in Winter2022) Note that we do not discard any response data. Rather, we do discard several columns representing accuracy scores for responses that were calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. Original response data are always preserved.\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # #mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#set datafiles\nfall17 <- \"analysis/SGC4A/data/0-session-level/fall17_sgc4a_blocks.csv\"\nspring18 <- \"analysis/SGC4A/data/0-session-level/spring18_sgc4a_blocks.csv\"\nwinter22 <- \"analysis/SGC4A/data/0-session-level/winter22_sgc4a_items.rds\"\nsummer22 <- \"analysis/SGC4A/data/0-session-level/su22_sgc4a_items.rds\"\n\n#read datafiles, set mode and term\ndf_items_fall17 <- read_csv(fall17) %>% mutate(mode = \"lab-synch\", term = \"fall17\")\ndf_items_spring18 <- read_csv(spring18) %>% mutate(mode = \"lab-synch\", term = \"spring18\")\ndf_items_winter22 <- read_rds(winter22) #use RDS file as it contains metadata\ndf_items_summer22 <- read_rds(summer22) #use RDS file as it contains metadata\n\n#get mapping being question # and interval relation the question tests, that is encoded only in the winter22 data files\nmap_relations <- df_items_winter22 %>% group_by(q) %>% dplyr::select(q,relation) %>% unique()\n\n#SAVE METADATA FROM WINTER, but no rows \ndf_items <- df_items_winter22 %>% filter(condition=='X') %>% dplyr::select(\n  subject,condition,term,mode,\n  question, q, answer, correct, rt_s\n) \n\n#reduce data collected using old webapp\ndf_items_before <- rbind(df_items_fall17, df_items_spring18) %>% \n  mutate(rt_s = rt / 1000, correct = as.logical(correct)) %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) \n  \n#reduce data collected using new webapp\ndf_items_winter22 <- df_items_winter22 %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  )\n\ndf_items_summer22 <- df_items_summer22 %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  )\n\n\n#combine dataframes from old and new webapps\ndf_items <- rbind(df_items, df_items_winter22, df_items_summer22, df_items_before) %>% \n  #refactorize columns\n  mutate(\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term, levels= c(\"fall17\",\"spring18\",\"fall21\",\"winter22\",\"summer22\")),\n    mode = factor(mode, levels=c(\"lab-synch\",\"asynch\")),\n    q = as.integer(q)) %>% \n  #rename answer column to RESPONSE \n  rename(response = answer) %>% \n  #remove all commas and make as character string\n  mutate(\n    response = str_remove_all(as.character(response), \",\"),\n    num_o = str_length(response)\n  ) %>% \n  # handle NA values (why are some empty responses blank and others NA?) \n  mutate(\n    response = replace_na(response, \"\"),\n    num_o = replace_na(num_o, 0)\n  )\n\n\n#FIX METADATA\n#Add metadata for columns that lost it [factors, for some reason!]\nvar_label(df_items$subject) <- \"ID of subject (randomly assigned in stimulus app).\"\nvar_label(df_items$condition) <- \"ID indicates randomly assigned condition (111 -> control, 121 -> impasse).\"\nvar_label(df_items$term) <- \"indicates if session was run with experimenter present or asynchronously\"\nvar_label(df_items$mode) <- \"indicates mode in which the participant completed the study\"\nvar_label(df_items$q) <- \"Question Number (in order)\"\nvar_label(df_items$correct) <- \"Is the response (strictly) correct? [dichotomous scoring]\"\nvar_label(df_items$response) <- \"options (datapoints) selected by the subject\"\nvar_label(df_items$num_o) <- \"number of options selected by the subject\"\n\n#HANDLE FREE RESPONSE QUESTION #16 \n#save `free response` Q#16 in its own dataframe\ndf_freeresponse <- df_items %>% filter(q == 16) %>% dplyr::select(-question,-correct,-rt_s,-num_o)\n#add data from wi22 [stored on subject data]\ndf_winter22_q16 <- df_winter22_q16 %>% dplyr::select(-pretty_condition)\ndf_freeresponse <- rbind(df_freeresponse, df_winter22_q16)\n#add question description\ndf_freeresponse <- df_freeresponse %>% mutate(\n    question = \"Please describe how to determine what event(s) start at 12pm?\",\n    response = as.character(response) #doesn't need to be factor\n  ) \n#remove 'free response' Q#16 from df_items\ndf_items <- df_items %>% filter (q != 16)\n\n#REFACTOR CONDITIONS\ndf_items <- df_items %>% mutate(\n    condition = recode_factor(condition, \"11111\" = \"111\", \"112\" = \"112\", \"111\" = \"111\", \"113\" = \"113\", \"114\" = \"114\", \"115\"=\"115\"),\n    pretty_condition = recode_factor(condition, \"111\" = \"Orth-Full\", \"114\" =  \"Orth-Sparse\", \"115\"=\"Orth-Grid\",\"113\"=\"Tri-Sparse\"),\n    pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\")\n) \n\n#CLEANUP\nrm(df_items_fall17, df_items_spring18, df_items_winter22, df_items_before, df_winter22_q16, df_items_summer22)\nrm(fall17,spring18,winter22, map_relations, summer22)\n\n#FINALLY DROP CONDITION 112 (partial orthog with y axis lines extending only to right end of triangle)\n#this was an incomplete [pilot only] condition collected in FA17 SP18 for pilot purposes\ndf_items <- df_items %>% filter(condition != \"112\") %>% \n  mutate(\n    condition = droplevels(condition),\n    pretty_condition = droplevels(pretty_condition)\n  )\n\n#DROP CONDITION 113 whichis actually a part of study SGC4D (changed naming scheme)\n\ndf_items <- df_items %>% filter(condition != \"113\") %>% \n  mutate(\n    condition = droplevels(condition),\n    pretty_condition = droplevels(pretty_condition)\n  )\n\n\n\n\nValidation\nNext, we validate that we have the complete number of item-level records based on the number of subject-level records\n\n\nCODE\ntable(df_subjects$condition)\n\n\n\n111 114 115 \n150 151 152 \n\n\nCODE\n#the number of items should be equal to 15 x the number of subjects\nnrow(df_items) == 15* nrow(df_subjects) #TRUE\n\n\n[1] TRUE\n\n\nCODE\n#each subject should have 15 items\ndf_items %>% group_by(subject) %>% summarise(n = n()) %>% filter(n != 15) %>% nrow() == 0\n\n\n[1] TRUE\n\n\n\n\nExport\nFinally, we export the (session-harmonized) data for analysis, as CSVs, and .RDS (includes metadata)\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4A/data/1-study-level/sgc4a_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4A/data/1-study-level/sgc4a_items.csv\", row.names = FALSE)\nwrite.csv(df_freeresponse,\"analysis/SGC4A/data/1-study-level/sgc4a_freeresponse.csv\", row.names = FALSE)\n\n#SAVE R Data Structures \n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4A/data/1-study-level/sgc4a_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4A/data/1-study-level/sgc4a_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC4A/1_sgc4A_introduction.html#resources",
    "href": "analysis/SGC4A/1_sgc4A_introduction.html#resources",
    "title": "13  Introduction",
    "section": "RESOURCES",
    "text": "RESOURCES\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] forcats_0.5.1    stringr_1.4.0    dplyr_1.0.9      purrr_0.3.4     \n [5] readr_2.1.2      tidyr_1.2.0      tibble_3.1.7     ggplot2_3.3.6   \n [9] tidyverse_1.3.1  kableExtra_1.3.4 codebook_0.9.2  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.8.3      svglite_2.1.0     lubridate_1.8.0   assertthat_0.2.1 \n [5] digest_0.6.29     utf8_1.2.2        R6_2.5.1          cellranger_1.1.0 \n [9] backports_1.4.1   reprex_2.0.1      labelled_2.9.1    evaluate_0.15    \n[13] httr_1.4.3        highr_0.9         pillar_1.7.0      rlang_1.0.3      \n[17] curl_4.3.2        readxl_1.4.0      data.table_1.14.2 rstudioapi_0.13  \n[21] rmarkdown_2.14    webshot_0.5.3     foreign_0.8-82    htmlwidgets_1.5.4\n[25] bit_4.0.4         munsell_0.5.0     broom_0.8.0       compiler_4.2.1   \n[29] modelr_0.1.8      xfun_0.31         pkgconfig_2.0.3   systemfonts_1.0.4\n[33] htmltools_0.5.2   tidyselect_1.1.2  rio_0.5.29        fansi_1.0.3      \n[37] viridisLite_0.4.0 crayon_1.5.1      tzdb_0.3.0        dbplyr_2.2.1     \n[41] withr_2.5.0       grid_4.2.1        jsonlite_1.8.0    gtable_0.3.0     \n[45] lifecycle_1.0.1   DBI_1.1.3         magrittr_2.0.3    scales_1.2.0     \n[49] zip_2.2.0         cli_3.3.0         stringi_1.7.6     vroom_1.5.7      \n[53] fs_1.5.2          xml2_1.3.3        ellipsis_0.3.2    generics_0.1.2   \n[57] vctrs_0.4.1       openxlsx_4.2.5    tools_4.2.1       bit64_4.0.5      \n[61] glue_1.6.2        hms_1.1.1         parallel_4.2.1    fastmap_1.1.0    \n[65] yaml_2.3.5        colorspace_2.0-3  rvest_1.0.2       knitr_1.39       \n[69] haven_2.5.0"
  },
  {
    "objectID": "analysis/SGC4A/2_sgc4A_scoring.html#score-sgc-data",
    "href": "analysis/SGC4A/2_sgc4A_scoring.html#score-sgc-data",
    "title": "14  Response Scoring",
    "section": "SCORE SGC DATA",
    "text": "SCORE SGC DATA\nTo review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3.\nIn SGC we are fundamentally interested in understanding how a participant interprets the presented graph (stimulus). The graph comprehension task asks them to select the data points in the graph that meet the criteria posed in the question. To assess a participant’s performance, for each question (q=15) we will calculate the following scores:\nAn overall, strict score:\n1. Absolute Score : using dichotomous scoring referencing true (Triangular) answer. (see 1.2)\nSub-scores, for each alternative graph interpretation\n2. Triangular Score : using partial scoring [-1/q, +1/p] referencing true (Triangular) answer key.\n3. Orthogonal Score : using partial scoring [-1/q, +1/p] referencing (incorrect Orthogonal) answer key.\nBased on prior observational studies where we observed emergence of other alternative interpretations (i.e. transitional interpretations) we also calculate subscores for these alternatives.\n4. Tversky Score : using partial scoring [-1/q, +1/p] referencing (incorrect connecting-lines strategy) answer key. 5. Satisficing Score : using partial scoring [-1/q, +1/p] referencing (incorrect satisficing strategy) answer key.\n\nPrepare Answer Keys\nWe start by importing three answer keys: (1) Q1 - Q5 [control condition], (2) Q1-Q5 [impasse condition], (3) Q6-15. Separate answer keys by condition are required for Q1-Q5 because the stimuli for each condition visualize a different underlying dataset (i.e. the graphs show datapoints in different positions). Q6-Q15 are identical across conditions. Each answer key includes a row for each question, and a column defining the subset of response options that correspond to different graph interpretations.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#SAVE KEYS FOR FUTURE USE\nkeys_raw <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_raw\")\nkeys_orth <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_orth\")\nkeys_tri <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tri\")\nkeys_both <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_both\")\nkeys_satisfice_left <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_left\")\nkeys_satisfice_right <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_right\")\nkeys_tversky_duration <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_duration\")\nkeys_tversky_end <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_end\")\nkeys_tversky_max <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_max\")\nkeys_tversky_start <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_start\")\n\n\n\n\nCalculate Subscores\nNext, we import the item-level response data. For each row in the item level dataset (indicating the response to a single question-item for a single subject), we compare the raw response df_items$response with the answer keys in each interpretation (e.g. keys_orth, keys_tri, etc…), then using those sets, determine the number of correctly selected items(p) and incorrectly selected items (q), which in turn are used to calculate partial[-1/q, +1/p] scores for each interpretation. The resulting scores are then stored on each item in df_items, and can be used to determine which graph interpretation the subject held.\nSpecifically, the following scores are calculated for each item:\nInterpretation Subscores\n\nscore_TRI How consistent is the response with the triangularinterpretation?\nscore_ORTH How consistent is the response with the orthogonalinterpretation?\nscore_BOTH How consistent is the response with both the orthogonal and triangular interpretations?\nscore_SATISFICE is calculated by taking the maximum value of :\n\nscore_SAT_left How consistent is the response with the (left side) Satisficing interpretation?\nscore_SAT_right How consistent is the response with the (right side) Satisficing interpretation\n\nscore_TVERSKY is calculated by taking the maximum value of:\n\nscore_TV_max How consistent is the response with the (maximal) Tversky interpretation?\nscore_TV_start How consistent is the response with the (start-time) Tversky interpretation?\nscore_TV_end How consistent is the response with the (end-time) Tversky interpretation?\nscore_TV_duration How consistent is the response with the (duration) Tversky interpretation?\n\nscore_REF Did the response select only the reference point?\n\nAbsolute Scores\n\nscore_ABS Is the response strictly correct? (triangular interpretation)\nscore_niceABS Is the response strictly correct? (triangular interpretation, not penalizing ref points). This is a more generous version of the Absolute score that does not penalize the participant if in addition to the correct answer in addition to they also select the data point referenced in the question.\n\n\n\nCODE\n#HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#backup <- read_rds('analysis/SGC4A/data/1-study-level/sgc4a_items.rds') #for troubleshooting only\ndf_items <- read_rds('analysis/SGC4A/data/1-study-level/sgc4a_items.rds')\n\n#ADD TEMP IMPASSE COLUMN\ndf_items <- df_items %>% mutate(\n  IMPASSE = substr(condition,2,2),\n  IMPASSE = recode_factor(IMPASSE, \"1\"=\"none\", \"2\"=\"IMPASSE\")\n)\n\n\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\nsource(\"analysis/utils/scoring.R\")\n\n\nnote: this cell takes approximately 30 minutes to run on the full df_items dataframe with 4950 records\n\n\nCODE\n#RUN THIS <OR> THE CALCULATE-SCORES-FORLOOP [not both]\n\n#TROUBLESHOOTING\n# backup <- df_items\n# df_items <- backup %>% sample_n(20)\n\n#ALPHEBETIZE RESPONSE\ndf_items$response = pbmapply(reorder_inplace, df_items$response)\n\n#STRATEGY PARTIAL-SUBSCORES\ndf_items$score_TRI = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tri))\n\ndf_items$score_ORTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_orth))\n\ndf_items$score_BOTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_both))\n\ndf_items$score_SAT_left = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_left))\ndf_items$score_SAT_right = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_right))\n\ndf_items$score_TV_max = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_max))\ndf_items$score_TV_start = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_start))\ndf_items$score_TV_end = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_end))\ndf_items$score_TV_duration = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_duration))\n\n#SPECIAL ABSOLUTE SUBSCORES\ndf_items$score_REF = pbmapply(calc_refscore, df_items$q, df_items$response)\n\n#OLD score_BOTH... new one is above (explicitly in key)\n# df_items$score_BOTH = as.integer((df_items$score_TRI == 1) & (df_items$score_ORTH ==1))\n\n#ABSOLUTE SCORES\ndf_items$score_ABS = as.integer(df_items$correct) \ndf_items$score_niceABS  <- as.integer((df_items$score_TRI == 1)) #tri doesn't penalize ref or ve-area\n\n\n\n\nDerive Interpretation\nFinally, we use the interpretation subscores to classify the response as a particular interpretation. This classification algorithm : (1) First decides if the response matches one or more ‘special’ situations (blank response, reference point response, both ORTH and TRI) (2) If response doesn’t match a special situation, it compares the individual subscores, and subscores and decides if they are discriminant (i.e. are the scores different enough to make a prediction). A discriminant threshold of 0.5pts (on a scale from -1 to +1 is used) (2) If the variance in subscores surpasses the threshold, the interpretation is classified based on the highest subscore (TRIANGULAR, ORTHOGONAL, TVERSKY, SATISFICE) (3) If the variance does not surpass the threshold, the interpretation is labelled as “?”, indicating it cannot be classified, and is of an unknown interpretation.\nThe final output is called interpretation.\n\n\nCODE\n#stoopid extra copying for troubleshooting safety\ntemp <- df_items #%>% head(16) %>% tail(1)\ntemp <- derive_interpretation(temp)\n\n\n[1] \"DERIVING INTERPRETATION\"\n\n\nCODE\ndf_items <- temp\n\n\n\n\n? SPECIAL EXCEPTIONS\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nALSO reconciles issues when interpetation == triangular but scoreniceabs = 0 ::: {.cell}\n\nCODE\n# #temp setup for protection\n# backup <- df_items\ntemp <- df_items %>% mutate(\n  override = \"\"\n)\n\n## CONTROL. Q==1. \"FK\" derives as 'TRI', should be tversky start\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==1) & (IMPASSE ==\"none\") & (response == \"FK\"),\n  tv_type = \"score_TV_start\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"TRI\"\n)\n\n## CONTROL. Q==1. TRI --> OTHER\ntemp <- temp %>% mutate_when(\n  (q==1) & (IMPASSE ==\"none\") & (response == \"FHK\"),\n  # tv_type = \"score_TV_start\",\n  int2 = \"?\", #override from ?\n  interpretation = \"?\", #override from ?\n  high_interpretation = \"neg.trans\",\n  override = \"TRI\"\n)\n\n## IMPASS Q==2. \"EK\" derives as 'TRI', should be tversky MAX\ntemp <- temp %>% mutate_when(\n  (q==2) & (IMPASSE ==\"IMPASSE\") & (response == \"EK\"),\n  tv_type = \"score_TV_max\",\n  int2 = \"Tversky\", #override from TRI\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n## IMPASS Q==2. TRI --> ?\ntemp <- temp %>% mutate_when(\n  (q==2) & (IMPASSE ==\"none\") & (response == \"HKU\"),\n  # tv_type = \"score_TV_max\",\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\",\n  override = \"TRI\"\n)\n\n\n## CONTROL. Q==3. \"A\" derives as 'unknown', should be tversky duration\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"A\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n  \n## CONTROL  Q==3 \"AF\" derives as TRI. hardcode as \"both\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"AF\"),\n  int2 = \"both tri + orth\", #override from TRI\n  interpretation = \"both tri + orth\", #override from TRI\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## CONTROL  Q==3 derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response %in% c(\"EFK\",\"FO\", \"FU\",\"FIUX\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL  Q==3 \"FG\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"FG\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASS  Q==3 \"AF\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE  Q==3 \"AFG\" derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AFG\", \"DF\", \"EFU\", \"DEF\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE  Q==3 \"AH\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n## IMPASSE  Q==3 \"AO\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE  Q==3 \"AOU\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AOU\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## CONTROL Q==4 AH Derives as TRI RECODE as TVERSKY\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"AH\",\"HK\")),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n## CONTROL Q==4  DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"HJ\",\"HJK\",\"EFH\") ),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==4 DEU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DEOU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEOU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 KU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"KU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==4 BD Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BD\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 BDEG Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BDEG\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 AFG Derives as SATISFICE RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"?\", #override from Satisfice\n  interpretation = \"?\", #override from Satisfice\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE Q==4 DH Derives as TRI RECODE as BOTH\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"DH\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AU Derives as TRI RECODE as satisfice\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AU\"),\n  int2 = \"Satisfice\", #override from Triangular\n  interpretation = \"Satisfice\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AZ Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AZ\", \"AX\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AFG Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AF Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AO Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"FO\",\"JO\") ),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"HO\",\"FO\",\"DJO\",\"FGKO\", \"HJO\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==5 KO Derives as TRI RECODE as tversky_duration\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response == \"KO\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==7 HOX, OX Derives as TRI but incorrect\n#includes H which is at rather than under 5 hours.\n#give credit \ntemp <- temp %>% mutate_when(\n  (q==7)  & (response %in% c(\"HOX\", \"OX\")),\n  score_niceABS = 1\n)\n\n##  Q==7 Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MO\",\"AX\",\"FJOX\",\"IO\",\"IJOX\")) ,\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==7 Derives as TRI RECODE as tversky\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MOX\", \"MX\", \"DX\",\"O\",\"X\",\"JX\",\"CO\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==8 Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==8)  & (response %in% c(\"FG\",\"CG\",\"CFG\",\"CGM\",\"CM\",\"ACGP\",\"GM\",\n                             \"AGK\", \"ACG\",\"AFGK\",\"GK\", \"AG\", \"CFGO\",\n                             \"BFG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==10 Derives as TRI -->\ntemp <- temp %>% mutate_when(\n  (q==10)  & (response %in% c(\"BEH\",\"BE\",\"BEF\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n##  Q==11 M Derives as TRI MISSING RESPONSE\n##LEAVE AS TRI + OVERRIDE SCORENABS\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"M\",\"L\") ),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==11 BLM Derives as TRI set at both\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response == \"BLM\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at ORTH\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"AGM\")),\n  int2 = \"Orthogonal\",\n  interpretation = \"Orthogonal\", \n  high_interpretation = \"orthogonal\", \n  override = \"Triangular\"\n)\n\n##  Q==11  Derives as TRI set at other\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"EKM\",\"JM\")),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"KL\",\"MOX\",\"CLMP\",\"DKL\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==12 Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==12)  & (response %in% c(\"GP\", \"EG\",\"GLM\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n\n##  Q==13 E Derives as TRI but incorrect\n##LEAVE AS TRI + OVERRIDE SCORENABS\n##one of two correct answers\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response == \"E\"),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==13 CE Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"CE\",\"EH\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13  Derives as TRI set at ?\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"EO\",\"EK\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"FX\",\"CX\",\"EFX\", \"OX\", \"JX\", \"EX\",\"HX\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"AX\", \"ILOX\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\",\n  override = \"Triangular\"\n)\n\n\n##  Q==15 CX Derives as TRI but incorrect \n#within visual margin... give credit\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"CX\",\"KO\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n#  Q==15  Derives as TRI but incorrect \n#missing 1 right answer or within 0.5hr visual error \ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"X\",\"CK\",\"K\",\"GKX\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"DJNX\", \"OX\", \"AK\",\"DNX\", \"AX\",\"ACX\",\n                              \"AGX\",\"CGX\",\"CKX\",\"DKL\",\"GX\",\"GX\",\"HOX\",\n                              \"HX\",\"JNX\",\"NX\")),\n  # tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"AKPX\",\"GK\",\"JX\",\"LX\",\"BK\",\"HK\",\"HNX\",\n                              \"KP\",\"BX\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n#SET BACK\ndf_items <- temp\n\n:::\n\n\nDerive Scaled Score\nThe interpretation response variable gives us the finest grain indication of the reader’s understanding of the graph for a particular question. However, it is a categorical variable, which poses a challenge for analyzing cumulative performance at the subject level. To address this challenge, we derive a scaled_score that converts each possible interpretation to a numeric value on a scale from -1 to +1. This scaling takes advantage of the observation that each interpretation can be positioned along a spectrum of understanding from completely incorrect (orthogonal) to completely correct (triangular). Alternative interpretations lay somewhere between.\nSpecifically, we assign the following values to each interpretation:\n\n(-1) : ORTHOGONAL, SATISFICE (satisfice represents an attempt at an orthogonal answer when none is available)\n(-0.5): ? (some alternative that cannot be identified; but meaningful that it is not orthogonal)\n(0): REFERENCE POINT, BLANK (indicates the individual thinks there is no answer, recognizes that ORTHOGONAL cannot be correct, but does not conceive of triangular)\n(+0.5) TVERSKY, BOTH TRI + ORTH (indicates that they “see” a triangular response, but lack certainty and also select the ORTHOGONAL response)\n(+1) TRIANGULAR +1\n\n\n\nCODE\ndf_items$score_SCALED <- calc_scaled(df_items$interpretation)\n\n\n\n\nDerive State Score\nThe scaled score represents a 5-category ordering of understanding. We also derive a 3-category ordering that gives higher grained access to “orthogonal-like” vs “uncertain” vs “triangle-like” responses.\nSpecifically, we assign the following values to each interpretation:\n\n(orth-like) : orthogonal, satisfice\n(unknown) : unidentified alternatives, blank, both tri&orth, and reference point responses\n(tri-like) : Tverskian and triangular responses\n\n\n\nCODE\ndf_items <- df_items %>% mutate (\n  score_STATE = recode_factor(df_items$score_SCALED,\n                         \"-1\" = \"orth-like\",\n                         \"-0.5\" = \"unknown\",\n                         \"0\" = \"unknown\",\n                         \"0.5\" = \"tri-like\",\n                         \"1\" = \"tri-like\"),\n  score_STATE = as.ordered(score_STATE))"
  },
  {
    "objectID": "analysis/SGC4A/2_sgc4A_scoring.html#summarize-by-subject",
    "href": "analysis/SGC4A/2_sgc4A_scoring.html#summarize-by-subject",
    "title": "14  Response Scoring",
    "section": "SUMMARIZE BY SUBJECT",
    "text": "SUMMARIZE BY SUBJECT\nNext, we summarize the item level scores by subject in order to calculate cummulative subscores to be stored on the subject record.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#import subjects\ndf_subjects <- read_rds('analysis/SGC4A/data/1-study-level/sgc4a_participants.rds') %>% mutate(subject = as.character(subject)) %>% arrange(subject)\n\n#make temporary copies for testing safety\ns = df_subjects\ni = df_items \n\n#summarize\ntest_subs <- summarise_bySubject(s,i)\n\n\n`summarise()` has grouped output by 'subject'. You can override using the\n`.groups` argument.\n\n\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n\n\nCODE\ndf_subjects <- test_subs\n\n\nWe also summarize absolute and scaled score progress at each question in the task, to explore cumulative performance over the task.\n\n\nCODE\n#GET ABSOLUTE PROGRESS \ndf_absolute_progress <- progress_Absolute(df_items)\n\n#GET SCALED PROGRESS\ndf_scaled_progress <- progress_Scaled(df_items)"
  },
  {
    "objectID": "analysis/SGC4A/2_sgc4A_scoring.html#explore-distributions",
    "href": "analysis/SGC4A/2_sgc4A_scoring.html#explore-distributions",
    "title": "14  Response Scoring",
    "section": "EXPLORE DISTRIBUTIONS",
    "text": "EXPLORE DISTRIBUTIONS\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#create temp data frame for visualizations\ndf = df_items %>% filter (q %nin% c(6,9)) %>% mutate(\n  score_niceABS = as.factor(score_niceABS),\n  pretty_interpretation = factor(interpretation,\n    levels = c(\"Orthogonal\", \"Satisfice\", \n               \"frenzy\",\"?\",\n                \"reference\",\"blank\",\n                \"Tversky\", \"both tri + orth\",\n               \"Triangular\" ))\n  )\n\n\n\nAbsolute Score\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE FULL TASK\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (all Items)\",\n        subtitle = paste(\"Impasse Condition (blue) yields more correct responses across the entire task\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY ITEM\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(pretty_condition~q) + \n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields more correct responses on each item\",\n        y = \"Proprition of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY SUBJECT\ngf_props(~s_NABS, fill = ~pretty_condition, position = position_dodge(), data = df_subjects) %>%\ngf_facet_wrap(~pretty_condition)+\n  labs( x = \"Total Absolute Score\",\n        title = \"Distribution of Total Absolute Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher total absolute scores\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE TEST PHASE\ngf_props(~item_test_NABS, fill = ~pretty_condition, \n             data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + \n  labs( x = \"Absolute Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Absolute Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nScaled Score\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#DISTRIBUTION SCALED SCORE FULL TASK\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (all Items)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores across the entire task\",\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY ITEM\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(q~pretty_condition) + \n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores on each item\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  scale_y_continuous(breaks=c(0,0.5)) + \n  theme_minimal() + theme(legend.position=\"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY SUBJECT\ngf_props(~s_SCALED, fill = ~pretty_condition, data = df_subjects)  %>% \n  gf_facet_grid(pretty_condition ~. )+\n  labs( x = \"Total Scaled Score\", \n        title = \"Distribution of Total Scaled Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher cumulative scaled scores\",\n        y = \"Number of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n# #DISTRIBUTION SCALED SCORE TEST PHASE\n# gf_histogram(~item_test_SCALED, fill = ~pretty_condition, data = df_subjects) %>% \n#   # gf_facet_grid(SHAPE~ROTATION) + \n#   labs( x = \"Scaled Score in TEST Phase\", \n#         title = \"Distribution of TEST PHASE Scaled Score (all Items)\",\n#         subtitle = paste(\"\"),\n#         y = \"Proportion of Items\") +\n#   scale_fill_discrete(name = \"Condition\") +  \n#   theme_minimal()\n\n\n\n\nInterpretations\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION\ngf_props(~pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition ~ ., labeller = label_both) + \n  labs( title = \"Distribution of Interpretations (across Task)\",\n        x = \"Graph Interpretation\",\n        y = \"Proportion of Responses\",\n        subtitle = \"Impasse condition (blue) yields fewer Orthogonal and more Triangular responses\") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION ACROSS ITEMS\ngf_propsh(~ pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more Triangular responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION TYPE ACROSS ITEMS\ngf_propsh(~ high_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more positive trending responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\nggbarstats( data = df, x = score_STATE, y = pretty_condition)\n\n\n\n\n\nCODE\nggbarstats( data = df, x = high_interpretation, y = pretty_condition)\n\n\n\n\n\n\n\nProgress over Task\n\n\nCODE\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(~pretty_condition) +\n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n# df_scaled_progress <- df_scaled_progress %>%\n#   mutate(\n#    pretty_condition = recode_factor(pretty_condition,\n#                                      \"control\" = \"ORTH-0\",\n#                                      \"Tri-Sparse\" = \"TRI-0\",\n#                                      \"ORTH-rotate-45\" = \"ORTH-45\",\n#                                      \"TRI-rotate-45\" =  \"TRI-45\",\n#                                      \"ORTH-rotate-90\" = \"ORTH-90\",\n#                                      \"TRI-rotate-90\" = \"TRI-90\"),\n#     ROTATION = recode_factor(pretty_condition,\n#                                      \"ORTH-0\" = \"0\",\n#                                      \"TRI-0\" = \"0\",\n#                                      \"ORTH-45\" = \"45\",\n#                                      \"TRI-45\" = \"45\",\n#                                      \"ORTH-90\" = \"90\",\n#                                      \"TRI-90\" = \"90\"),\n#     SHAPE = recode_factor(pretty_condition,\n#                                    \"ORTH-0\" = \"ORTH\",\n#                                    \"TRI-0\" = \"TRI\",\n#                                    \"ORTH-45\" = \"ORTH\",\n#                                    \"TRI-45\" = \"TRI\",\n#                                    \"ORTH-90\" = \"ORTH\",\n#                                    \"TRI-90\" = \"TRI\"\n#   ))\n\n\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(~pretty_condition) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nInterpretation Subscores\n\n\nCODE\ngf_density(~ s_TRI, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Triangular Score\",\n        subtitle = \"Impasse shifts density toward higher Triagular scores\",\n        x = \"Item Triangular Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_ORTH, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Orthogonal Score\",\n        subtitle = \"Impasse shifts density toward lower Orthogonal scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_TVERSKY, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Tversky Score\",\n        subtitle = \"Impasse shifts density toward higher Tversky scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_histogram(~ s_SATISFICE, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Satisfice Score\",\n        subtitle = \"Satisficing only occurs in impasse, when no orthogonal response is available\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4A/2_sgc4A_scoring.html#peek",
    "href": "analysis/SGC4A/2_sgc4A_scoring.html#peek",
    "title": "14  Response Scoring",
    "section": "PEEK",
    "text": "PEEK\n\n\nCODE\nggbetweenstats( data = df_subjects,\n                x = pretty_condition, y = s_NABS,\n                type = \"non-parametric\")"
  },
  {
    "objectID": "analysis/SGC4A/2_sgc4A_scoring.html#explore-responses",
    "href": "analysis/SGC4A/2_sgc4A_scoring.html#explore-responses",
    "title": "14  Response Scoring",
    "section": "EXPLORE RESPONSES",
    "text": "EXPLORE RESPONSES\nIn this section we explore responses given by participants to each particular item in the graph comprehension task, indicate how each response was scored, and what interpretation of the graph is indicated by different responses.\n\n\nCODE\ngf_props(~ score_niceABS, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Item Absolute Score\", title = \"Distribution of Accuracy  | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nSCAFFOLD PHASE\nThe first five questions constitute the ‘scaffold’ (or learning) phase, where participants see a different version of the stimulus (specifically a different dataset is visualized) invoking a different experimental condition.\n\nQuestion #1\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nWe start by exploring the range of response options checked by participants on Question 1.\n\n\n\nFigure 14.1: Question 1 — Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==1)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q1 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q1 Control Condition :  Which shift(s) start at 11 am?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    A \n    OI \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    CF \n    Z \n  \n  \n    Tversky [start diagonal] \n    F \n    Z \n  \n  \n    Tversky [end diagonal] \n    C \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nHere we summarize the distinct response options given by participants on this item. Each letter in response indicates a checkbox selected by the participant (See Figure 22.1 ). n indicates the number of participants who gave this response, while interpretation indicates the graph interpretation most consistent with that response. At the right of this table are the Absolute, followed by Partial Credit subscores for each response. NA indicates that there is no score calculated (occurs when there is no subset of response options that accord with that interpretation for this question).\nNotice that for this Question, the Triangular answer is the same as the Tversky [start diagonal] answer. In fact, for most questions, one of the Tversky sub-types will match the correct response.\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #1 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 1) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 1) %>% \n  # pack_rows(\"Lines-Connect\", 2, 2) %>% \n  # pack_rows(\"Orthogonal\", 3, 3) %>% \n  # pack_rows(\"Other\", 4, 4)  %>% \n  # pack_rows(\"Unknown\", 5, 7)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #1 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    36 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    CF \n    8 \n    Tversky \n    0 \n    0.923 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    AC \n    1 \n    Tversky \n    0 \n    -0.154 \n    0.929 \n    NA \n    0.917 \n    0.5 \n  \n  \n    FK \n    1 \n    Tversky \n    0 \n    0.923 \n    0.923 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    A \n    383 \n    Orthogonal \n    0 \n    -0.077 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AIO \n    3 \n    Orthogonal \n    0 \n    -0.231 \n    -0.214 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AO \n    1 \n    Orthogonal \n    0 \n    -0.154 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AF \n    2 \n    both tri + orth \n    0 \n    0.923 \n    0.923 \n    NA \n    0.917 \n    0.5 \n  \n  \n     \n    3 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    BCFIUX \n    1 \n    frenzy \n    0 \n    0.615 \n    0.667 \n    NA \n    -0.417 \n    -0.5 \n  \n  \n    I \n    4 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    Z \n    3 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    B \n    2 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    AFJU \n    1 \n    ? \n    0 \n    0.769 \n    0.769 \n    NA \n    0.750 \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.154 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    EKO \n    1 \n    ? \n    0 \n    -0.231 \n    -0.214 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    FHK \n    1 \n    ? \n    0 \n    0.846 \n    0.846 \n    NA \n    -0.250 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQuestion #2\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 14.2: Q2—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==2)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q2 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q2 Control Condition :  Which shift(s) start at the same time as D?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    K \n    Z \n  \n  \n    Orthgonal \n    E \n    G \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AKJX \n    Z \n  \n  \n    Tversky [start diagonal] \n    AK \n    Z \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    J \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #2 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 2) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 2) %>%\n  # pack_rows(\"Lines-Connect\", 3, 4) %>% \n  # pack_rows(\"Orthogonal\", 5, 7) %>%\n  # pack_rows(\"Other\", 8, 8)  %>% \n  # pack_rows(\"Unknown\", 9, 10)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #2 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    K \n    45 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    DK \n    3 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    J \n    11 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AK \n    6 \n    Tversky \n    0 \n    0.917 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    A \n    1 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    HJU \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.846 \n    NA \n    -0.250 \n    0.5 \n  \n  \n    IJ \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.923 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    KX \n    1 \n    Tversky \n    0 \n    0.917 \n    0.923 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    E \n    356 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    DE \n    8 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EG \n    1 \n    Orthogonal \n    0 \n    -0.167 \n    -0.154 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    D \n    3 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    5 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BFIUX \n    1 \n    frenzy \n    0 \n    -0.417 \n    0.692 \n    NA \n    -0.417 \n    -0.5 \n  \n  \n    U \n    3 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    B \n    2 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    I \n    2 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    HKU \n    1 \n    ? \n    0 \n    0.833 \n    0.318 \n    NA \n    -0.250 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQuestion #3\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 14.3: Q3—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==3)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q3 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q3 Control Condition :  Which shift(s) begin when C ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    Z \n    FIO \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AUBFOJ \n     \n  \n  \n    Tversky [start diagonal] \n    OJ \n     \n  \n  \n    Tversky [end diagonal] \n    F \n    Z \n  \n  \n    Tversky [duration line] \n    AUB \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #3 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 3 ) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #3 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    48 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    0.0 \n    1.0 \n  \n  \n    A \n    53 \n    Tversky \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    ABU \n    4 \n    Tversky \n    0 \n    -0.250 \n    1.000 \n    NA \n    -0.3 \n    0.5 \n  \n  \n    O \n    4 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    0.0 \n    0.5 \n  \n  \n    FG \n    3 \n    Tversky \n    0 \n    0.917 \n    0.917 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    JO \n    3 \n    Tversky \n    0 \n    -0.167 \n    1.000 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    J \n    2 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    BOU \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.576 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    DJO \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.917 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    IO \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    0.0 \n    0.5 \n  \n  \n    KO \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    Z \n    280 \n    Orthogonal \n    0 \n    0.000 \n    0.000 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    IOZ \n    2 \n    Orthogonal \n    0 \n    -0.167 \n    0.333 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    C \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    0.0 \n  \n  \n    AF \n    1 \n    both tri + orth \n    0 \n    0.917 \n    0.917 \n    NA \n    -0.1 \n    0.5 \n  \n  \n     \n    19 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    0.0 \n  \n  \n    ABDEFGHIJKOUXZ \n    3 \n    frenzy \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    -0.5 \n  \n  \n    ABDEFGKUZ \n    1 \n    frenzy \n    0 \n    0.417 \n    0.455 \n    NA \n    0.3 \n    -0.5 \n  \n  \n    K \n    4 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    U \n    4 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    I \n    3 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    0.0 \n    -0.5 \n  \n  \n    EU \n    2 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    AH \n    1 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    DE \n    1 \n    ? \n    0 \n    -0.167 \n    -0.167 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    DEU \n    1 \n    ? \n    0 \n    -0.250 \n    0.152 \n    NA \n    -0.3 \n    -0.5 \n  \n  \n    DI \n    1 \n    ? \n    0 \n    -0.167 \n    -0.167 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    EFK \n    1 \n    ? \n    0 \n    0.833 \n    0.833 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    FIUX \n    1 \n    ? \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    HIU \n    1 \n    ? \n    0 \n    -0.250 \n    0.152 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 17)  \n\n\n\n\nQuestion #4\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 14.4: Q4—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==4)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q4 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q4 Control Condition :  Which shift(s) end at 4 pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    H \n     \n  \n  \n    Orthgonal \n    U \n    OF \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    BH \n     \n  \n  \n    Tversky [start diagonal] \n    B \n     \n  \n  \n    Tversky [end diagonal] \n    H \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #4 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 4) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #4 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    H \n    58 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    B \n    9 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AH \n    1 \n    Tversky \n    0 \n    0.929 \n    0.929 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    U \n    233 \n    Orthogonal \n    0 \n    -0.071 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    14 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    UX \n    4 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.917 \n    -1.0 \n  \n  \n    OU \n    3 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FOU \n    2 \n    Orthogonal \n    0 \n    -0.214 \n    -0.214 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    HU \n    1 \n    both tri + orth \n    0 \n    0.929 \n    0.929 \n    NA \n    0.917 \n    0.5 \n  \n  \n     \n    14 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACDEFHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.143 \n    0.143 \n    NA \n    0.167 \n    -0.5 \n  \n  \n    CEJKZ \n    1 \n    frenzy \n    0 \n    -0.357 \n    -0.357 \n    NA \n    -0.417 \n    -0.5 \n  \n  \n    DE \n    57 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    E \n    12 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    F \n    7 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    K \n    7 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DEU \n    5 \n    ? \n    0 \n    -0.214 \n    -0.214 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    G \n    5 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    Z \n    3 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    D \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    J \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    BHU \n    1 \n    ? \n    0 \n    0.857 \n    0.923 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DEK \n    1 \n    ? \n    0 \n    -0.214 \n    -0.214 \n    NA \n    -0.250 \n    -0.5 \n  \n  \n    DEOU \n    1 \n    ? \n    0 \n    -0.286 \n    -0.286 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    DK \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    EFH \n    1 \n    ? \n    0 \n    0.857 \n    0.857 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    HJU \n    1 \n    ? \n    0 \n    0.857 \n    0.857 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 3) %>% \n#   pack_rows(\"Orthogonal\", 4, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 16) \n\n\n\n\nQuestion #5\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 14.5: Q5—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==5)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q5 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q5 Control Condition :  Coffee breaks happen halfway through a shift. Which shift(s) share a break with I?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    O \n    AZ \n  \n  \n    Orthgonal \n    U \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    UGX \n    AZKD \n  \n  \n    Tversky [start diagonal] \n    X \n     \n  \n  \n    Tversky [end diagonal] \n    UG \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #5 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 5) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #5 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    O \n    124 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    IO \n    2 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    OZ \n    1 \n    Triangular \n    1 \n    1.000 \n    -0.143 \n    NA \n    -0.154 \n    1.0 \n  \n  \n    G \n    3 \n    Tversky \n    0 \n    -0.091 \n    0.500 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    X \n    2 \n    Tversky \n    0 \n    -0.091 \n    1.000 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    BG \n    1 \n    Tversky \n    0 \n    -0.182 \n    0.417 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    DHJX \n    1 \n    Tversky \n    0 \n    -0.364 \n    0.769 \n    NA \n    -0.308 \n    0.5 \n  \n  \n    FG \n    1 \n    Tversky \n    0 \n    -0.182 \n    0.417 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    U \n    151 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    4 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    HU \n    4 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    IU \n    2 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FOU \n    1 \n    Orthogonal \n    0 \n    0.818 \n    0.333 \n    NA \n    0.846 \n    -1.0 \n  \n  \n    I \n    3 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    OU \n    4 \n    both tri + orth \n    0 \n    0.909 \n    0.417 \n    NA \n    0.923 \n    0.5 \n  \n  \n     \n    29 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABCDEFGHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    CEJKZ \n    1 \n    frenzy \n    0 \n    -0.364 \n    -0.385 \n    NA \n    -0.385 \n    -0.5 \n  \n  \n    DEHIJO \n    1 \n    frenzy \n    0 \n    0.636 \n    -0.385 \n    NA \n    -0.385 \n    -0.5 \n  \n  \n    F \n    27 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    H \n    22 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    K \n    9 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    DJ \n    8 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    J \n    7 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    C \n    6 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    E \n    6 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    Z \n    5 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    A \n    4 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    HK \n    4 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    D \n    3 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    FO \n    3 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HJ \n    2 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    AC \n    1 \n    ? \n    0 \n    -0.091 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    AF \n    1 \n    ? \n    0 \n    -0.091 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    BEFK \n    1 \n    ? \n    0 \n    -0.364 \n    -0.308 \n    NA \n    -0.308 \n    -0.5 \n  \n  \n    DE \n    1 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    DEHJ \n    1 \n    ? \n    0 \n    -0.364 \n    -0.308 \n    NA \n    -0.308 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    FK \n    1 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HIJ \n    1 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    JK \n    1 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>% \n#   pack_rows(\"Lines-Connect\", 5, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 9) %>% \n#   pack_rows(\"Other\", 10, 11) %>% \n#   pack_rows(\"Unknown\", 12, 22) \n\n\nTODO note the compelling cases of internal inconsistency (HJDE)\n\n\nQuestion #7\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 14.6: Q7-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==7)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts less than 5 hours long start at the same time?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    OX \n     \n  \n  \n    Orthgonal \n    BF \n    M \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    IJZNCHOX \n     \n  \n  \n    Tversky [start diagonal] \n    OX \n     \n  \n  \n    Tversky [end diagonal] \n    IJZN \n     \n  \n  \n    Tversky [duration line] \n    CH \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #7\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 7) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #7\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    OX \n    57 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    CH \n    3 \n    Tversky \n    0 \n    -0.125 \n    1.000 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    H \n    3 \n    Tversky \n    0 \n    -0.062 \n    0.500 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    IJ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.500 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    AH \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    C \n    1 \n    Tversky \n    0 \n    -0.062 \n    0.500 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    CHIZ \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.875 \n    NA \n    -0.267 \n    0.5 \n  \n  \n    HL \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    HLP \n    1 \n    Tversky \n    0 \n    -0.188 \n    0.375 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    X \n    1 \n    Tversky \n    0 \n    0.500 \n    0.500 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    BF \n    318 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FZ \n    23 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    F \n    6 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    B \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BE \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    BEK \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    -0.188 \n    NA \n    0.367 \n    -1.0 \n  \n  \n    FJ \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    5 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BCDFHIJMNOXZ \n    2 \n    frenzy \n    0 \n    0.375 \n    0.600 \n    NA \n    0.400 \n    -0.5 \n  \n  \n    BDFIJNOXZ \n    2 \n    frenzy \n    0 \n    0.562 \n    0.643 \n    NA \n    0.533 \n    -0.5 \n  \n  \n    BDFIJMNOXZ \n    1 \n    frenzy \n    0 \n    0.500 \n    0.571 \n    NA \n    0.533 \n    -0.5 \n  \n  \n    BDFIMNOXZ \n    1 \n    frenzy \n    0 \n    0.562 \n    0.562 \n    NA \n    0.600 \n    -0.5 \n  \n  \n    BDFJNOXZ \n    1 \n    frenzy \n    0 \n    0.625 \n    0.625 \n    NA \n    0.600 \n    -0.5 \n  \n  \n    BFIJOZ \n    1 \n    frenzy \n    0 \n    0.188 \n    0.536 \n    NA \n    0.733 \n    -0.5 \n  \n  \n    BFIOZ \n    1 \n    frenzy \n    0 \n    0.250 \n    0.286 \n    NA \n    0.800 \n    -0.5 \n  \n  \n    CFILOX \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    0.167 \n    -0.5 \n  \n  \n    N \n    5 \n    ? \n    0 \n    -0.062 \n    0.250 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DN \n    2 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    FJOX \n    1 \n    ? \n    0 \n    0.875 \n    0.875 \n    NA \n    0.300 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.062 \n    0.250 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    KL \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.062 \n    0.250 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 5) %>%\n#   pack_rows(\"Lines-Connect\", 6, 9) %>%\n#   pack_rows(\"Orthogonal\", 10, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 17)\n\n\n\n\nQuestion #8\n\n\n\nFigure 14.7: Q8-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==8)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q: \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q:  Which shift(s) under 7 hours long starts before B starts, and ends after X ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    E \n    F \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #8\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 8) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #8\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    52 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.071 \n    1.0 \n  \n  \n    CGM \n    3 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CFGO \n    2 \n    Tversky \n    0 \n    0.800 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CG \n    2 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    AGK \n    1 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    BFG \n    1 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.071 \n    0.5 \n  \n  \n    E \n    265 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EIJ \n    5 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EFIJ \n    2 \n    Orthogonal \n    0 \n    -0.267 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    CEF \n    1 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EI \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EIJM \n    1 \n    Orthogonal \n    0 \n    -0.267 \n    NA \n    NA \n    0.786 \n    -1.0 \n  \n  \n    EG \n    2 \n    both tri + orth \n    0 \n    0.933 \n    NA \n    NA \n    0.929 \n    0.5 \n  \n  \n     \n    16 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    DEHIJNOZ \n    4 \n    frenzy \n    0 \n    -0.533 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    BCEFHIKLNOXZ \n    1 \n    frenzy \n    0 \n    -0.667 \n    NA \n    NA \n    0.429 \n    -0.5 \n  \n  \n    CDEGHNOZ \n    1 \n    frenzy \n    0 \n    0.533 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    CEFGHZ \n    1 \n    frenzy \n    0 \n    0.667 \n    NA \n    NA \n    0.714 \n    -0.5 \n  \n  \n    CFGHZ \n    1 \n    frenzy \n    0 \n    0.733 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    CFHMPXZ \n    1 \n    frenzy \n    0 \n    -0.400 \n    NA \n    NA \n    -0.357 \n    -0.5 \n  \n  \n    DEIJNZ \n    1 \n    frenzy \n    0 \n    -0.400 \n    NA \n    NA \n    0.643 \n    -0.5 \n  \n  \n    DHIJNOZ \n    1 \n    frenzy \n    0 \n    -0.467 \n    NA \n    NA \n    -0.500 \n    -0.5 \n  \n  \n    DIJNO \n    1 \n    frenzy \n    0 \n    -0.333 \n    NA \n    NA \n    -0.357 \n    -0.5 \n  \n  \n    EFGIJ \n    1 \n    frenzy \n    0 \n    0.733 \n    NA \n    NA \n    0.786 \n    -0.5 \n  \n  \n    EGJKMOPZ \n    1 \n    frenzy \n    0 \n    0.533 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    IJ \n    18 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    I \n    12 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    F \n    6 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    O \n    5 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    J \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    K \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    M \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    L \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    N \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    BF \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    D \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    DJN \n    2 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    DN \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    IJM \n    2 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    AK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    AKP \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    CZ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    DHNZ \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    DJNX \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    DNO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    HIK \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    JK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    KO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Orthogonal\", 11, 16) %>%\n#   pack_rows(\"Other\", 17, 21) %>%\n#   pack_rows(\"Unknown\", 22, 45)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #10\n\n\n\nFigure 14.8: Q10-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==10)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    E \n     \n  \n  \n    Orthgonal \n    X \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    EGZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n    E \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #10\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 10) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #10\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    E \n    80 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    EF \n    2 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    29 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    G \n    3 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    XZ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    0.938 \n    0.5 \n  \n  \n    CGO \n    1 \n    Tversky \n    0 \n    -0.188 \n    0.875 \n    NA \n    -0.188 \n    0.5 \n  \n  \n    FZ \n    1 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    GK \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    GN \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    X \n    217 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BX \n    5 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    0.938 \n    -1.0 \n  \n  \n    FX \n    5 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    4 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    EX \n    3 \n    both tri + orth \n    0 \n    0.938 \n    0.938 \n    NA \n    0.938 \n    0.5 \n  \n  \n     \n    17 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BEHKN \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    CEGIO \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    EFHJLMNO \n    1 \n    frenzy \n    0 \n    0.625 \n    0.625 \n    NA \n    -0.438 \n    -0.5 \n  \n  \n    B \n    40 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    15 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IJ \n    4 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    BJ \n    3 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    H \n    3 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    I \n    3 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    L \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    BEH \n    1 \n    ? \n    0 \n    0.875 \n    0.875 \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>%\n#   pack_rows(\"Lines-Connect\", 3, 7) %>%\n#   pack_rows(\"Orthogonal\", 8, 11) %>%\n#   pack_rows(\"Other\", 12, 14) %>%\n#   pack_rows(\"Unknown\", 15, 27)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #11\n\n\n\nFigure 14.9: Q11-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==11)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at 12pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    ML \n     \n  \n  \n    Orthgonal \n    FB \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #11\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 11) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #11\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    LM \n    64 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.125 \n    1.0 \n  \n  \n    M \n    12 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    L \n    1 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    MOX \n    1 \n    Tversky \n    0 \n    0.375 \n    NA \n    NA \n    -0.188 \n    0.5 \n  \n  \n    BF \n    332 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    B \n    4 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    F \n    2 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    AGM \n    1 \n    Orthogonal \n    0 \n    0.375 \n    NA \n    NA \n    -0.188 \n    -1.0 \n  \n  \n    BE \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    0.438 \n    -1.0 \n  \n  \n    BFXZ \n    1 \n    Orthogonal \n    0 \n    -0.250 \n    NA \n    NA \n    0.875 \n    -1.0 \n  \n  \n    BH \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    0.438 \n    -1.0 \n  \n  \n    BLM \n    1 \n    both tri + orth \n    0 \n    0.938 \n    NA \n    NA \n    0.375 \n    0.5 \n  \n  \n     \n    5 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACDGHKLMNOPXZ \n    1 \n    frenzy \n    0 \n    0.312 \n    NA \n    NA \n    -0.812 \n    -0.5 \n  \n  \n    DHLMNOXZ \n    1 \n    frenzy \n    0 \n    0.625 \n    NA \n    NA \n    -0.500 \n    -0.5 \n  \n  \n    FGHIJKLN \n    1 \n    frenzy \n    0 \n    0.062 \n    NA \n    NA \n    0.062 \n    -0.5 \n  \n  \n    O \n    5 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    K \n    4 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    3 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    CG \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    GK \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    GN \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    JKX \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 9) %>%\n#   pack_rows(\"Other\", 10, 12) %>%\n#   pack_rows(\"Unknown\", 13, 17)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 11)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 11)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #12\n\n\n\nFigure 14.10: Q12-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==12)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    GZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #12\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 12) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #12\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    61 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    FG \n    4 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    13 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    BXZ \n    1 \n    Tversky \n    0 \n    -0.188 \n    0.875 \n    NA \n    0.875 \n    0.5 \n  \n  \n    GP \n    1 \n    Tversky \n    0 \n    0.938 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    B \n    340 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    9 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    2 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    3 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    CEGIO \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    EFGHILMOX \n    1 \n    frenzy \n    0 \n    0.562 \n    0.562 \n    NA \n    -0.500 \n    -0.5 \n  \n  \n    E \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    FK \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    HL \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IK \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Lines-Connect\", 4, 6) %>%\n#   pack_rows(\"Orthogonal\", 7, 8) %>%\n#   pack_rows(\"Other\", 9, 10) %>%\n#   pack_rows(\"Unknown\", 11, 14)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #13\n\n\n\nFigure 14.11: Q13-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==13)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts end when Z begins?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EF \n     \n  \n  \n    Orthgonal \n    FX \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #13\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 13) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #13\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EF \n    66 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    0.433 \n    1.0 \n  \n  \n    E \n    1 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.067 \n    1.0 \n  \n  \n    FX \n    257 \n    Orthogonal \n    0 \n    0.433 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    X \n    11 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    KX \n    4 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    OX \n    4 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    BX \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    JX \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    AX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    CX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    MX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    Z \n    3 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    13 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    AEFIJKLPX \n    1 \n    frenzy \n    0 \n    0.533 \n    NA \n    NA \n    0.533 \n    -0.5 \n  \n  \n    BDIJMNOX \n    1 \n    frenzy \n    0 \n    -0.533 \n    NA \n    NA \n    0.033 \n    -0.5 \n  \n  \n    CEGOX \n    1 \n    frenzy \n    0 \n    0.233 \n    NA \n    NA \n    0.233 \n    -0.5 \n  \n  \n    BF \n    10 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    DN \n    9 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    F \n    9 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    HL \n    8 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    EX \n    4 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    H \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    HK \n    3 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HO \n    3 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    I \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    C \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CO \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HLP \n    2 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    HN \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    IJ \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    BIO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    BM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CG \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DL \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DNP \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    EO \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FI \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    GK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HI \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    JN \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    KO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    LP \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    MN \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    NO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Orthogonal\", 4, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 36)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 13)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 13)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #14\n\n\n\nFigure 14.12: Q14-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==14)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at 3pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    X \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XJND \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    JND \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #14\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 14) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #14\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    X \n    75 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.059 \n    1.0 \n  \n  \n    OX \n    2 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    CX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    EFX \n    1 \n    Tversky \n    0 \n    0.882 \n    0.882 \n    NA \n    -0.176 \n    0.5 \n  \n  \n    FX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    JN \n    1 \n    Tversky \n    0 \n    -0.118 \n    0.667 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    B \n    265 \n    Orthogonal \n    0 \n    -0.059 \n    -0.059 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    12 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BIO \n    3 \n    Orthogonal \n    0 \n    -0.176 \n    -0.176 \n    NA \n    0.882 \n    -1.0 \n  \n  \n    BE \n    2 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BIJM \n    1 \n    Orthogonal \n    0 \n    -0.235 \n    0.133 \n    NA \n    0.824 \n    -1.0 \n  \n  \n    BO \n    1 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BX \n    6 \n    both tri + orth \n    0 \n    0.941 \n    0.941 \n    NA \n    0.941 \n    0.5 \n  \n  \n     \n    31 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    DJMNX \n    1 \n    frenzy \n    0 \n    0.765 \n    0.929 \n    NA \n    -0.294 \n    -0.5 \n  \n  \n    O \n    12 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    F \n    5 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    K \n    5 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    Z \n    4 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    E \n    3 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    HLP \n    3 \n    ? \n    0 \n    -0.176 \n    -0.176 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    L \n    3 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    CM \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    DI \n    1 \n    ? \n    0 \n    -0.118 \n    0.267 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    HP \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    ILOX \n    1 \n    ? \n    0 \n    0.824 \n    0.824 \n    NA \n    -0.235 \n    -0.5 \n  \n  \n    JO \n    1 \n    ? \n    0 \n    -0.118 \n    0.267 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.059 \n    0.333 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 7) %>%\n#   pack_rows(\"Other\", 8, 9) %>%\n#   pack_rows(\"Unknown\", 10, 22)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 14)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 14)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #15\n\n\n\nFigure 14.13: Q15-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==15)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Coffee breaks happen halfway through a shift. Which shifts share a break at 2pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    XK \n     \n  \n  \n    Orthgonal \n    EF \n    B \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XKZ \n     \n  \n  \n    Tversky [start diagonal] \n    Z \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #15\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 15) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #15\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    KX \n    76 \n    Triangular \n    1 \n    1.000 \n    0.667 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    X \n    10 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    K \n    4 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    CX \n    1 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    KO \n    1 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    Z \n    4 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    OX \n    3 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    DJNX \n    2 \n    Tversky \n    0 \n    0.312 \n    0.133 \n    NA \n    -0.267 \n    0.5 \n  \n  \n    FZ \n    2 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    0.433 \n    0.5 \n  \n  \n    DKL \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    DNX \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    EF \n    196 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    40 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BF \n    27 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    E \n    10 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BE \n    8 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BEF \n    3 \n    Orthogonal \n    0 \n    -0.188 \n    -0.176 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EI \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EL \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FM \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    11 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    FIJKNO \n    1 \n    frenzy \n    0 \n    0.188 \n    0.000 \n    NA \n    0.167 \n    -0.5 \n  \n  \n    FILOX \n    1 \n    frenzy \n    0 \n    0.250 \n    0.067 \n    NA \n    0.233 \n    -0.5 \n  \n  \n    H \n    10 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    B \n    5 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    C \n    5 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    FX \n    3 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    0.433 \n    -0.5 \n  \n  \n    I \n    3 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AG \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    IJ \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    J \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    BEX \n    1 \n    ? \n    0 \n    0.375 \n    0.200 \n    NA \n    0.433 \n    -0.5 \n  \n  \n    BJ \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    BK \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    BM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    GK \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HK \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HL \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    JX \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Lines-Connect\", 11, 13) %>%\n#   pack_rows(\"Orthogonal\", 14, 22) %>%\n#   pack_rows(\"Other\", 23, 23) %>%\n#   pack_rows(\"Unknown\", 24, 44)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 15)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 15)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nNON-DISCRIMINANT QUESTIONS\n\nQuestion #6 NONDISCRIM\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 14.14: Q6-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==6)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) are six hours long?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EG \n     \n  \n  \n    Orthgonal \n    EG \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\nTODO discuss non discriminant\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #6\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 6) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #6\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EG \n    434 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BEHKNZ \n    1 \n    frenzy \n    0 \n    0.188 \n    NA \n    NA \n    0.188 \n    -0.5 \n  \n  \n    N \n    3 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    GN \n    2 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    0.438 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    EF \n    1 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    0.438 \n    -0.5 \n  \n  \n    GI \n    1 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    0.438 \n    -0.5 \n  \n  \n    GX \n    1 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    0.438 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    KX \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\n\n\nQuestion #9 NONDISCRIM\n\n\n\nFigure 14.15: Q9-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==9)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) begins before J begins and ends during B?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    I \n     \n  \n  \n    Orthgonal \n    I \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #9\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q ==9) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #9\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    I \n    349 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    23 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BEFHIJLMOZ \n    1 \n    frenzy \n    0 \n    0.533 \n    NA \n    NA \n    0.533 \n    -0.5 \n  \n  \n    BEHKNZ \n    1 \n    frenzy \n    0 \n    -0.333 \n    NA \n    NA \n    -0.333 \n    -0.5 \n  \n  \n    E \n    27 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    7 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    FI \n    5 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    F \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    J \n    4 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    N \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    L \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    X \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    C \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    Z \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FJ \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    FK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FMZ \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    GN \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HKZ \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    IM \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    KL \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Other\", 1, 2) %>%\n#   pack_rows(\"Unknown\", 3, 19)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4A/2_sgc4A_scoring.html#export",
    "href": "analysis/SGC4A/2_sgc4A_scoring.html#export",
    "title": "14  Response Scoring",
    "section": "EXPORT",
    "text": "EXPORT\n\n\nCODE\ntable(df_subjects$mode, df_subjects$pretty_condition) %>% addmargins()\n\n\n           \n            Orth-Full Orth-Sparse Orth-Grid Sum\n  lab-synch        62           0         0  62\n  asynch           88         151       152 391\n  Sum             150         151       152 453\n\n\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4A/data/2-scored-data/sgc4a_scored_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4A/data/2-scored-data/sgc4a_scored_items.csv\", row.names = FALSE)\nwrite.csv(df_absolute_progress,\"analysis/SGC4A/data/2-scored-data/sgc4a_absolute_progress.csv\", row.names = FALSE)\nwrite.csv(df_scaled_progress,\"analysis/SGC4A/data/2-scored-data/sgc4a_scaled_progress.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4A/data/2-scored-data/sgc4a_scored_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4A/data/2-scored-data/sgc4a_scored_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC4A/3_sgc4A_description.html",
    "href": "analysis/SGC4A/3_sgc4A_description.html",
    "title": "15  Description",
    "section": "",
    "text": "TODO check term cell counts and decide if data is pilot or included ? The purpose of this notebook is describe the distributions of dependent variables for Study SGC4A.\nTEMP REMOVE IN PERSON DATA ::: {.cell}\n:::"
  },
  {
    "objectID": "analysis/SGC4A/3_sgc4A_description.html#sample",
    "href": "analysis/SGC4A/3_sgc4A_description.html#sample",
    "title": "15  Description",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\nData were collected online in Winter 2022.\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Orth-Full\", \"Orth-Sparse\",\"Orth-Grid\", \"Tri-Sparse\",\"Total for Period\")\ncont <- table(df_subjects$term, df_subjects$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n      \n    Orth-Full \n    Orth-Sparse \n    Orth-Grid \n    Tri-Sparse \n    Total for Period \n  \n \n\n  \n    winter22 \n    88 \n    86 \n    88 \n    98 \n    360 \n  \n  \n    summer22 \n    0 \n    8 \n    47 \n    45 \n    100 \n  \n  \n    Sum \n    88 \n    94 \n    135 \n    143 \n    460 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.female <- df_subjects %>% filter(gender==\"Female\") %>% count() %>% unlist()/nrow(df_subjects)\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.female \n  \n \n\n  \n     \n    18 \n    19 \n    20 \n    21 \n    38 \n    20.7 \n    2.65 \n    460 \n    0 \n    0.724 \n  \n\n\nNote:   Age in Years\n\n\n\n\n460 participants (72 % female ) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 38 years)."
  },
  {
    "objectID": "analysis/SGC4A/3_sgc4A_description.html#response-accuracy",
    "href": "analysis/SGC4A/3_sgc4A_description.html#response-accuracy",
    "title": "15  Description",
    "section": "RESPONSE ACCURACY",
    "text": "RESPONSE ACCURACY\n\nSubject Level Scores\nSubject level scores summarize the the response accuracy by a particular participant across all discriminant items in the graph comprehension task.\n\nTask Absolute Score\nRecall from Section 3.1.2.1 that the absolute score (following the dichotomous scoring approach) s_NABS indicates if the subject’s response for a particular item was perfectly correct: whether they selected all correct answer options and no others (excluding certain allowed exceptions, such as also selecting the data point referenced in the question). Across the entire task, there ae 13 strategy discriminating questions.\n\n\nCODE\ntitle = \"Descriptive Statistics of Task Response Accuracy (Total Absolute Score)\"\nabs.stats <- df_subjects %>% dplyr::select(s_NABS) %>% unlist() %>% favstats()\nabs.stats %>% kbl (caption = title) %>% kable_classic() %>% \n  footnote(general = \"# questions correct [0,13]\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Task Response Accuracy (Total Absolute Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0 \n    0 \n    0 \n    2 \n    13 \n    2.17 \n    3.96 \n    460 \n    0 \n  \n\n\nNote:   # questions correct [0,13]\n\n\n\n\nWhen combined overall, total absolute accuracy scores in the TEST phase (n = 460) range from 0 to 13 with a slightly lower mean score of (M = 2.17, SD = 3.96).\n\n\nCODE\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL ABSOLUTE\n  gf_props(~s_NABS, data = df_subjects) + \n  labs(x = \"number of correct responses\",\n       y = \"% of subjects\",\n       title = \"Distribution of Task Absolute Score \",\n       subtitle = \"\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"s_NABS\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of Task Absolute Score\",\n        subtitle =\"\",\n        x = \"Total Absolute Score\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = s_NABS,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_NABS),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_NABS, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Task Absolute Score \",\n    x = \"Condition\", y = \"Total Absolute Score \") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\nCODE\n#STATSPLOT\nggbetweenstats(y = s_NABS, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n\n\n\n\n\nCODE\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(s_NABS)) + \n  stat_ecdf(geom = \"step\") +\n  facet_grid(pretty_condition~pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function — Task Absolute Score \",\n        x = \"Total Absolute Score [0,13]\", \n        y = \"Cumulative Probability\")\n\n\n\n\n\nVisual inspection of this distribution suggests it is not normal, and perhaps bimodal. We verify this via an excess mass test (Ameijeiras-Alsonso et. al 2018).\n\n\nCODE\nmultimode::modetest(df_subjects$s_NABS)\n\n\nWarning in multimode::modetest(df_subjects$s_NABS): A modification of the data\nwas made in order to compute the excess mass or the dip statistic\n\n\n\n    Ameijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df_subjects$s_NABS\nExcess mass = 0.05, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n\n\nCODE\n# n_modes = multimode::nmodes(df_subjects$s_NABS, bw=2) #bw = 2questions/15 = 0.15%\n# l_modes = multimode::locmodes(df_subjects$s_NABS,mod0 =  n_modes, display = TRUE)\n\n\nThe excess mass test for multimodality suggests there is not enough mass at the positive end of the score distribution to be considered multimodal.\n\n\nTask Scaled Scores\nThe total scaled score s_SCALED summarizes the scaled score on the 13 strategy-discriminant questions, for each subject. This score ranges from from -13 (all orthogonal) to 13 (all triangular). Recall that the s_SCALED score for an item is a numeric representation of the strategy-consistent response, scaled from -1 to +1 (see Section 5.1.5)\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy\"\nscaled.stats <- df_subjects %>% dplyr::select(s_SCALED) %>% unlist() %>% favstats()\nscaled.stats %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    -13 \n    -12.5 \n    -10.5 \n    -5 \n    13 \n    -6.68 \n    8.09 \n    460 \n    0 \n  \n\n\n\n\n\nOverall, task scaled scores (n = 460) range from -13 to 13 with a slightly lower mean score of (M = -6.68, SD = 8.09).\n\n\nCODE\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL SCALED\ngf_props(~item_test_SCALED, data = df_subjects) +\n  labs(x = \"total scaled score\",\n       y = \"% of subjects\",\n       title = \"Distribution of Scaled Score \",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"s_SCALED\",binwidth=1,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\")) + \n  labs( title = \"Distribution of Scaled Score\",\n        subtitle =\"\",\n        x = \"total scaled score\", y = \"number of participants\") + \n theme_minimal() + theme(legend.position = \"blank\") \n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = s_SCALED,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_SCALED),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_SCALED, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Task Scaled Score\",\n    x = \"Condition\", y = \"Total Scaled \") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\nCODE\n#STATSPLOT\nggbetweenstats(y = s_SCALED, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n\n\n\n\n\nCODE\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(s_SCALED)) + \n  stat_ecdf(geom = \"step\") + \n  facet_grid(pretty_condition ~ pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function — Task Scaled Score\",\n        x = \"Test Phase Scaled Score [-13,13]\", \n        y = \"Cumulative Probability\") \n\n\n\n\n\nVisual inspection of this distribution suggests it is not normal, and perhaps perhaps bimodal. We verify this via an excess mass test (Ameijeiras-Alsonso et. al 2018).\n\n\nCODE\nmultimode::modetest(df_subjects$s_SCALED)\n\n\nWarning in multimode::modetest(df_subjects$s_SCALED): A modification of the data\nwas made in order to compute the excess mass or the dip statistic\n\n\n\n    Ameijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df_subjects$s_SCALED\nExcess mass = 0.06, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n\n\nCODE\n# n_modes = multimode::nmodes(df_subjects$s_SCALED, bw=2) #bw = 2questions/15 = 0.15%\n# l_modes = multimode::locmodes(df_subjects$s_SCALED,mod0 =  n_modes, display = TRUE)\n\n\nThe excess mass test for multimodality suggests there is not enough mass at the positive end of the score distribution to be considered multimodal.\n\n\n\nFirst Item Scores\nNext we consider the response accuracy on just the first question of the graph comprehension task: a subject’s first exposure to the TM graph.\n\nFirst Item Absolute Score\n\n\nCODE\ntitle = \"Proportion of Correct Response on First Item (Combined)\"\nitem.contingency <- df_subjects %>%  dplyr::select(item_q1_NABS, pretty_condition) %>% table() %>%  addmargins(2) %>% prop.table(margin=2) %>% addmargins(1)\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Correct Response on First Item (Combined)\n \n  \n      \n    Orth-Full \n    Orth-Sparse \n    Orth-Grid \n    Tri-Sparse \n    Sum \n  \n \n\n  \n    0 \n    0.943 \n    0.896 \n    0.958 \n    0.84 \n    0.913 \n  \n  \n    1 \n    0.057 \n    0.104 \n    0.042 \n    0.16 \n    0.087 \n  \n  \n    Sum \n    1.000 \n    1.000 \n    1.000 \n    1.00 \n    1.000 \n  \n\n\n\n\n\nAcross data collection sessions, first-item accuracy is consistent across experimental conditions. Incorrect answers are far more frequent (91%) than correct answers (9%). Highest accuracy is achieved in the Triangular gridlines condition, with roughly 14% correct response rate, compared to only 6% in the orthogonal axis control.\n\n\nCODE\n#PROPORTIONAL BAR CHART\ngf_props(~item_q1_NABS, data = df_subjects) +\n  labs(x = \"response accuracy\",\n       y = \"% subjects\",\n       title = \"Proportion of Correct Responses on First Item\",\n       subtitle=\"\")+\n  theme(legend.position = \"none\")+theme_ggdist()\n\n\n\n\n\nCODE\n#STACKED BAR CHART\ndf_subjects %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(item_q1_NABS))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  labs(x = \"response accuracy\",\n       title = \"Proportion of Correct Responses on First Item\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#MOSAIC PLOT\nvcd::mosaic(main=\"Proportion of Correct Responses on First Item\",\n            data = df_subjects, item_q1_NABS ~ pretty_condition, rot_labels=c(0,90,0,0), \n            offset_varnames = c(left = 4.5), offset_labels = c(left = -0.5),just_labels = \"right\",\n            spacing = spacing_dimequal(unit(1:2, \"lines\"))) \n\n\n\n\n\nCODE\n#STATSPLOT\nggbarstats(\n  x = item_q1_NABS,\n  y = pretty_condition, \n  data = df_subjects\n)\n\n\n\n\n\n\n\nFirst Item Scaled Score\nAt the item level, the scaled score gives us a numeric measure of correctness of interpretation, ranging from -1 to 1. (note: we evaluate scaled_score on the first item rather than interpretation, because no orthogonal interpretation is available in the impasse condition)\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (First Item Scaled Score)\"\nfirstscaled.stats <- df_subjects %>% dplyr::select(item_q1_SCALED) %>% unlist() %>% favstats()\nfirstscaled.stats %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (First Item Scaled Score)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    -1 \n    -1 \n    -1 \n    -1 \n    1 \n    -0.749 \n    0.623 \n    460 \n    0 \n  \n\n\n\n\n\nWhen combined overall, first item scaled scores (n = 460) range from -1 to 1 with a slightly lower mean score of (M = -0.75, SD = 0.62).\n\n\nCODE\n#GGFORMULA | PROPORTIONAL HISTOGRAM SUBJECT FIRST SCALED\ngf_props(~item_q1_SCALED, data = df_subjects) +\n  labs(x = \"scaled score (first item)\",\n       y = \"% of subjects\",\n       title = \"Distribution of First Item Scaled Score\",\n       subtitle = \"\") \n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_q1_SCALED\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\")) + \n  labs( title = \"Distribution of First Item Scaled Score (by Mode and Condition)\",\n        subtitle =\"\",\n        x = \"scaled score (firt item) \", y = \"number of participants\") + \n  theme_minimal() + theme(legend.position = \"blank\") \n\n\n\n\n\nCODE\n#STACKED BAR CHART\ndf_subjects %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(item_q1_SCALED))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  labs(x = \"response accuracy\",\n       title = \"Type of Responses on First Item (by Modality and Condition)\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#STATSPLOT\nggbarstats(\n  x = item_q1_SCALED,\n  y = pretty_condition, \n  data = df_subjects\n)\n\n\n\n\n\n\n\n\nInterpretation Scores\nNext we consider the the interpretations assigned to each response. For each response given by a participant to a question, we assign an interpretation label based on the interpretation the response most closely matches (see Section 3.2.3).\n\n\nCODE\ntitle = \"Proportion of Interpretations Across Items Items By Condition\"\nitem.contingency <- df_items %>%  dplyr::select(interpretation, pretty_condition) %>% table() %>%  addmargins(2) %>% prop.table(margin=2) %>% addmargins(1)\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n\n\n\nProportion of Interpretations Across Items Items By Condition\n \n  \n      \n    Orth-Full \n    Orth-Sparse \n    Orth-Grid \n    Tri-Sparse \n    Sum \n  \n \n\n  \n    Orthogonal \n    0.567 \n    0.564 \n    0.614 \n    0.465 \n    0.560 \n  \n  \n    frenzy \n    0.005 \n    0.006 \n    0.007 \n    0.004 \n    0.006 \n  \n  \n    ? \n    0.114 \n    0.094 \n    0.103 \n    0.109 \n    0.104 \n  \n  \n    reference \n    0.000 \n    0.001 \n    0.003 \n    0.001 \n    0.002 \n  \n  \n    blank \n    0.018 \n    0.024 \n    0.035 \n    0.026 \n    0.027 \n  \n  \n    both tri + orth \n    0.126 \n    0.122 \n    0.122 \n    0.116 \n    0.121 \n  \n  \n    Tversky \n    0.039 \n    0.031 \n    0.028 \n    0.050 \n    0.035 \n  \n  \n    Triangular \n    0.131 \n    0.156 \n    0.087 \n    0.230 \n    0.145 \n  \n  \n    Sum \n    1.000 \n    1.000 \n    1.000 \n    1.000 \n    1.000 \n  \n\n\n\n\n\n\n\nCODE\n#PROPORTIONAL BAR CHART\ngf_propsh(~interpretation, data = df_items, fill = ~pretty_condition) %>% \n  gf_facet_grid(pretty_condition~pretty_mode) +\n  labs(x = \"% of items\",\n       title = \"Proportion of Interpretations Across Items\",\n       subtitle=\"\")+\n  theme(legend.position = \"none\")\n\n\n\n\n\nCODE\n#STACKED BAR CHART\ndf_items %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(interpretation))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  labs(x = \"response accuracy\",\n       title = \"Response Types on All Items (by Condition)\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#MOSAIC PLOT\n# vcd::mosaic(main=\"Proportion of Interpretations across Conditions\",\n#             data = df_items, pretty_condition ~ interpretation, rot_labels=c(0,90,0,0), \n#             offset_varnames = c(left = 4.5), offset_labels = c(left = -0.5),just_labels = \"right\",\n#             spacing = spacing_dimequal(unit(1:2, \"lines\"))) \n\n#STATSPLOT\nggbarstats(\n  x = interpretation,\n  y = pretty_condition, \n  data = df_items\n)\n\n\n\n\n\n\n\nCumulative Task Performance\n\n\nCODE\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4A/3_sgc4A_description.html#response-latency",
    "href": "analysis/SGC4A/3_sgc4A_description.html#response-latency",
    "title": "15  Description",
    "section": "RESPONSE LATENCY",
    "text": "RESPONSE LATENCY\n\nTime on First Item\nHere we consider the time spent on just the first individual item (first exposure to graph).\n\n\nCODE\n#DESCRIBE distribution of response time\ntime.stats <- df_subjects %>% dplyr::select(item_q1_rt) %>% unlist() %>% favstats()\ntitle = \"Descriptive Statistics of First Response Time (seconds)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of First Response Time (seconds)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    5.6 \n    14.3 \n    21.7 \n    35.3 \n    536 \n    30.4 \n    35.8 \n    460 \n    0 \n  \n\n\n\n\n\nResponse time on the first item for subjects (n = 460) ranged from 5.6 to 536.39 minutes with a mean duration of (M = 30.42, SD = 35.76).\n\n\nCODE\n#HISTOGRAM\ngf_dhistogram(~item_q1_rt, data = df_subjects) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of First Item Response Time (seconds)\", subtitle = \"fit by gamma distribution\", x = \"First Item Response Time (seconds)\", y = \"% items\")\n\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\n\nWarning: Removed 460 rows containing missing values (geom_vline).\n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_q1_rt\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of First Item Response Time (seconds)\",\n        subtitle =\"\",\n        x = \"First Item Response Time (seconds)\", y = \"number of items\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#recode as boolean correct\ndf_subjects <- df_subjects %>% mutate(\n  item_q1_NABS = as.logical(item_q1_NABS)\n)\n\n##RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = item_q1_rt, color = item_q1_NABS) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .1\n  )) + \n  labs( title = \"Distribution of First Item Response Time (seconds)\",\n        subtitle =\"\",\n        y = \"First Item Response Time (s)\", x = \"Condition\") +\n  theme_ggdist() \n\n\n\n\n\nCODE\n# + theme(legend.position = \"blank\")\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n\n\n#TEMP REMOVE OUTLIERS\ndf <- df_subjects %>% filter(item_q1_rt < 300)\n\n#STATSPLOT\nggbetweenstats(y = item_q1_rt, x = pretty_condition, data = df,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n\n\n\n\n\n\n\nTime on Item\nHere we consider the time spent on an individual item (across all items).\n\n\nCODE\n#DESCRIBE distribution of response time\ntime.stats <- df_items %>%   dplyr::select(rt_s) %>% unlist() %>% favstats()\ntitle = \"Descriptive Statistics of Item Response Latency (seconds)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Item Response Latency (seconds)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0.326 \n    12.1 \n    21.7 \n    40.5 \n    631 \n    33.1 \n    37 \n    6900 \n    0 \n  \n\n\n\n\n\nTime on an individual item for subjects (n = 6900) ranged from 0.33 to 630.95 minutes with a mean duration of (M = 33.07, SD = 36.96).\n\n\nCODE\n#HISTOGRAM\ngf_dhistogram(~rt_s, data = df_items) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of Item Response Time (seconds)\", \n       subtitle = \"fit by gamma distribution\", x = \"Item Response Time (seconds)\", y = \"% items\") \n\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\n\nWarning: Removed 6900 rows containing missing values (geom_vline).\n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_items, x = \"rt_s\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of Item Response Time (seconds)\",\n        subtitle =\"\",\n        x = \"Item Response Time (seconds)\", y = \"number of items\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#recode as boolean correct\ndf_items <- df_items %>% mutate(\n  score_niceABS = as.logical(score_niceABS)\n)\n\n##RAINCLOUD USING GGDISTR\nggplot(df_items, aes(x = pretty_condition, y = rt_s, color = score_niceABS) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    # position = position_dodgejust(),\n    justification = 1.5, \n    # adjust = .5, \n    width = .5, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA,\n    position = position_dodge2()\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitterdodge(\n      # seed = 1,\n      dodge.width = 0.5,\n      jitter.width = 0.075\n  )) +\n  labs( title = \"Distribution of Item Response Time (seconds)\",\n        subtitle =\"\",\n        y = \"Item Response Time (s)\", x = \"Condition\") +\n  theme_ggdist() \n\n\n\n\n\nCODE\n# + theme(legend.position = \"blank\")\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n                \n#STATSPLOT\nggbetweenstats(y = rt_s, x = pretty_condition, data = df_items,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n\n\n\n\n\n\n\nTime on Task\nHere we consider the time spent on the entire experimental task.\n\n\nCODE\n#DESCRIBE distribution of response time\ntime.stats <- df_subjects %>% dplyr::select(rt_m) %>% unlist() %>% favstats()\ntitle = \"Descriptive Statistics of Total Task Response Latency (minutes)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Total Task Response Latency (minutes)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    1.19 \n    5.05 \n    6.77 \n    9.23 \n    27.3 \n    7.48 \n    3.62 \n    460 \n    0 \n  \n\n\n\n\n\nTotal time on task for subjects (n = 460) ranged from 1.19 to 27.25 minutes with a mean duration of (M = 7.48, SD = 3.61).\n\n\nCODE\n#HISTOGRAM\ngf_dhistogram(~rt_m, data = df_subjects) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of Total Response Time (minutes)\", subtitle = \"fit by gamma distribution\", x = \"Total Response Time (minutes)\", y = \"% subjects\") \n\n\nWarning: Removed 460 rows containing missing values (geom_vline).\n\n\n\n\n\nCODE\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"rt_m\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of Total Response Time (minutes)\",\n        subtitle =\"\",\n        x = \"Scaffold Phase Time (minutes)\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = rt_m, fill = pretty_condition)) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = rt_m),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = rt_m, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  ))+ labs( title = \"Distribution of Total Response Time (minutes)\",\n        subtitle =\"\",\n        y = \"Total Response Time (minutes)\", x = \"Condition\") +\n  theme_ggdist() + theme(legend.position = \"blank\") #+\n\n\n\n\n\nCODE\n  # coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n#STATSPLOT\nggbetweenstats(y = rt_m, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )"
  },
  {
    "objectID": "analysis/SGC4A/3_sgc4A_description.html#exploring-relationships",
    "href": "analysis/SGC4A/3_sgc4A_description.html#exploring-relationships",
    "title": "15  Description",
    "section": "EXPLORING RELATIONSHIPS",
    "text": "EXPLORING RELATIONSHIPS\n\nACCURACY (VS) LATENCY\n\nTotal Task\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ rt_m, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by TOTAL Item Response Time\",\n    subtitle = \"\", \n    x = \"Total Item Response Time (minutes)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_avg_rt, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by MEAN Item Response Time\",\n    subtitle = \"\", \n    x = \"Average Item Response Time (seconds)\", y = \"Total Scaled Score\"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_max_rt, data = df_subjects %>% filter(item_max_rt < 400), alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by MAX Item Response Time\",\n    subtitle = \"\", \n    x = \"MAX Item Response Time (s)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#NOTE: LOG transforms of the RT do not yield linear relationships\n\n\n\n\nAverage Item RT by Accuracy\n\n\nCODE\nq.stats <- df_items %>% filter(q != 6) %>% dplyr::group_by(q, pretty_condition, score_niceABS) %>% dplyr::summarise(\n  m = mean(rt_s),\n  sd = sd(rt_s),\n  sd = tidyr::replace_na(sd,0),\n  lo = m-sd/2,\n  hi = m+sd/2,\n  group = paste(pretty_condition,\"-\",score_niceABS)\n)\n\ngf_line( m ~ q, group = ~group,  color = ~as.factor(score_niceABS),data = q.stats) %>% \n  gf_point() %>% \n  gf_ribbon(lo+hi~q) %>% \n  gf_facet_wrap(~pretty_condition) + scale_color_manual(values=c(\"red\",\"green\")) + \n  labs(title = \"Average Item Response Time by Absolute Score\",\n       subtitle = \"Correct responses are generally faster [computational efficiency] except on Q1 [learning]\",\n       x = \"Question\", y = \"Averate Item Response Time\", color=\"Correct Response\")\n\n\n\n\n\nCODE\n#GGDIST LINERIBBON\n# df_items %>%\n#   ggplot(aes(y = rt_s, x = q,  fill = pretty_condition)) +\n#   stat_lineribbon(alpha = 1/4, point_interval = \"mean_qi\") + facet_wrap(~pretty_condition)\n\n\n\n\nCODE\nq.stats <- df_items %>% filter(q %nin% c(6,9)) %>% dplyr::group_by(q, pretty_condition, interpretation) %>% dplyr::summarise(\n  m = mean(rt_s),\n  sd = sd(rt_s),\n  sd = tidyr::replace_na(sd,0),\n  lo = m-sd/2,\n  hi = m+sd/2,\n  group = paste(pretty_condition,\"-\",score_SCALED)\n)\n\ngf_line( m ~ as.factor(q), group = ~group,  color = ~interpretation,data = q.stats) %>% \n  gf_point() %>% \n  gf_ribbon(lo+hi~as.factor(q)) %>% \n  gf_facet_grid(interpretation~pretty_condition) + #+ scale_color_manual(values=c(\"red\",\"green\")) + \n  labs(title = \"Average Item Response Time by Interpretation\",\n       subtitle = \"Correct responses are generally faster [computational efficiency] except on Q1 [learning]\",\n       caption=\"NOTE: Points with no ribbon indicate singular response\",\n       x = \"Question\", y = \"Averate Item Response Time\", color=\"Interpretation\")\n\n\n\n\n\nCODE\n#GGDIST LINERIBBON\ndf_items %>% filter(q %nin% c(6,9)) %>% mutate( interpretation = recode(interpretation, \"reference\" = \"blank\", \"frenzy\" = \"?\")) %>% \n  ggplot(aes(y = rt_s, x = q,  fill = interpretation)) +\n  stat_lineribbon(alpha = 1/4, point_interval = \"mean_qi\") + \n  facet_grid(interpretation ~ pretty_condition) + \n  labs( title = \"Average Response Time by Question Interpretation\", x = \"Question\", y=\"Averate Item Response Time (s)\")"
  },
  {
    "objectID": "analysis/SGC4A/3_sgc4A_description.html#resources",
    "href": "analysis/SGC4A/3_sgc4A_description.html#resources",
    "title": "15  Description",
    "section": "RESOURCES",
    "text": "RESOURCES\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] forcats_0.5.1      stringr_1.4.0      purrr_0.3.4        readr_2.1.2       \n [5] tidyr_1.2.0        tibble_3.1.7       tidyverse_1.3.1    performance_0.9.1 \n [9] fitdistrplus_1.1-8 MASS_7.3-57        multimode_1.5      ggeasy_0.1.3      \n[13] ggstatsplot_0.9.3  ggdist_3.1.1       ggpubr_0.4.0       vcd_1.4-10        \n[17] kableExtra_1.3.4   mosaic_1.8.3       ggridges_0.5.3     mosaicData_0.20.2 \n[21] ggformula_0.10.1   ggstance_0.3.5     dplyr_1.0.9        Matrix_1.4-1      \n[25] Hmisc_4.7-0        ggplot2_3.3.6      Formula_1.2-4      survival_3.3-1    \n[29] lattice_0.20-45   \n\nloaded via a namespace (and not attached):\n  [1] utf8_1.2.2             ks_1.13.5              tidyselect_1.1.2      \n  [4] htmlwidgets_1.5.4      gmp_0.6-5              munsell_0.5.0         \n  [7] codetools_0.2-18       effectsize_0.7.0       withr_2.5.0           \n [10] colorspace_2.0-3       highr_0.9              knitr_1.39            \n [13] rstudioapi_0.13        ggsignif_0.6.3         labeling_0.4.2        \n [16] emmeans_1.7.5          polyclip_1.10-0        bit64_4.0.5           \n [19] farver_2.1.0           datawizard_0.4.1       coda_0.19-4           \n [22] vctrs_0.4.1            generics_0.1.2         TH.data_1.1-1         \n [25] xfun_0.31              BWStest_0.2.2          diptest_0.76-0        \n [28] R6_2.5.1               BayesFactor_0.9.12-4.4 cachem_1.0.6          \n [31] assertthat_0.2.1       scales_1.2.0           vroom_1.5.7           \n [34] multcomp_1.4-19        nnet_7.3-17            rootSolve_1.8.2.3     \n [37] gtable_0.3.0           multcompView_0.1-8     sandwich_3.0-2        \n [40] MatrixModels_0.5-0     rlang_1.0.3            zeallot_0.1.0         \n [43] systemfonts_1.0.4      PMCMRplus_1.9.5        splines_4.2.1         \n [46] rstatix_0.7.0          broom_0.8.0            prismatic_1.1.0       \n [49] mosaicCore_0.9.0       checkmate_2.1.0        yaml_2.3.5            \n [52] abind_1.4-5            modelr_0.1.8           crosstalk_1.2.0       \n [55] backports_1.4.1        tools_4.2.1            ellipsis_0.3.2        \n [58] RColorBrewer_1.1-3     ggdendro_0.1.23        Rcpp_1.0.8.3          \n [61] plyr_1.8.7             base64enc_0.1-3        rpart_4.1.16          \n [64] pbapply_1.5-0          correlation_0.8.1      zoo_1.8-10            \n [67] haven_2.5.0            ggrepel_0.9.1          cluster_2.1.3         \n [70] fs_1.5.2               magrittr_2.0.3         data.table_1.14.2     \n [73] lmtest_0.9-40          reprex_2.0.1           mvtnorm_1.1-3         \n [76] hms_1.1.1              patchwork_1.1.1        evaluate_0.15         \n [79] xtable_1.8-4           leaflet_2.1.1          jpeg_0.1-9            \n [82] mclust_5.4.10          readxl_1.4.0           gridExtra_2.3         \n [85] compiler_4.2.1         KernSmooth_2.23-20     crayon_1.5.1          \n [88] htmltools_0.5.2        tzdb_0.3.0             lubridate_1.8.0       \n [91] DBI_1.1.3              SuppDists_1.1-9.7      kSamples_1.2-9        \n [94] tweenr_1.0.2           dbplyr_2.2.1           boot_1.3-28           \n [97] car_3.1-0              cli_3.3.0              parallel_4.2.1        \n[100] insight_0.18.0         pkgconfig_2.0.3        statsExpressions_1.3.2\n[103] foreign_0.8-82         xml2_1.3.3             paletteer_1.4.0       \n[106] svglite_2.1.0          webshot_0.5.3          estimability_1.4      \n[109] rvest_1.0.2            distributional_0.3.0   digest_0.6.29         \n[112] parameters_0.18.1      pracma_2.3.8           rmarkdown_2.14        \n[115] cellranger_1.1.0       htmlTable_2.4.0        lifecycle_1.0.1       \n[118] jsonlite_1.8.0         carData_3.0-5          viridisLite_0.4.0     \n[121] fansi_1.0.3            labelled_2.9.1         pillar_1.7.0          \n[124] fastmap_1.1.0          httr_1.4.3             glue_1.6.2            \n[127] bayestestR_0.12.1      png_0.1-7              bit_4.0.4             \n[130] ggforce_0.3.3          stringi_1.7.6          rematch2_2.1.2        \n[133] latticeExtra_0.6-29    memoise_2.0.1          Rmpfr_0.8-9"
  },
  {
    "objectID": "analysis/SGC4B/1_sgc4B_introduction.html",
    "href": "analysis/SGC4B/1_sgc4B_introduction.html",
    "title": "16  Introduction",
    "section": "",
    "text": "In Study 4B we explore the extent to which the design of the marks indicating data points influence how a reader interprets its underlying coordinate system."
  },
  {
    "objectID": "analysis/SGC4B/1_sgc4B_introduction.html#methods",
    "href": "analysis/SGC4B/1_sgc4B_introduction.html#methods",
    "title": "16  Introduction",
    "section": "METHODS",
    "text": "METHODS\n\nDesign\nWe employed a mixed design with 1 between-subjects factor with 3 levels (Mark: POINT, CROSS, ARROW) and 15 items (within-subjects factor).\nIndependent Variables:\n\nB-S (Mark Design: Point, Arrow, Cross )\nW-S (Item x 15)\n\nDependent Variables:\n\nResponse Accuracy : Is the response triangular-correct?\nResponse Interpretation : (derived) With which interpretation of the graph is the subject’s response on an individual question consistent?\nResponse Latency : Time from stimulus onset to clicking ‘Submit’ button: time in (s)\n\n\n\nMaterials\nStimuli consisted of a series of 15 graph comprehension questions, each testing a different combination of time interval relations, to be read from a Triangular-Model graph. Figure 21.1. The list of questions can be found here.\n\n\n\nFigure 16.1: Sample Question (Q=1) for Graph Comprehension Task\n\n\nIn each experimental\n\n\nProcedure\nParticipants completed the study via a web-browser.\n(1) Upon starting, they submitted informed consent, before reading task instructions.\n(2) Participants were introduced to a scenario in which they were to play the role of a project manager, scheduling shifts for a group of employees. The schedule of the employees was presented in a Triangular Model (TM) graph, and they would be answering question about the schedule.\n(3) Then participants completed an experimental block of 15 items: The Graph Comprehension Task.\n(4) Following the experimental block, participants answered a free-response question about their strategy for reading the graph, followed by a demographic questionnaire and debrief.\n\n\nSample\nData were collected by convenience sample of a university subject pool during the winter of 2022. Participants accessed the study via a web browser (asynchronously). The stimulus application required the participant stay in full-screen mode for the entirety of the study."
  },
  {
    "objectID": "analysis/SGC4B/1_sgc4B_introduction.html#analysis",
    "href": "analysis/SGC4B/1_sgc4B_introduction.html#analysis",
    "title": "16  Introduction",
    "section": "ANALYSIS",
    "text": "ANALYSIS\n\nData Preparation\nData were collected via a custom web application and stored in a NoSQL database. The following exclusion criteria were applied during data cleaning:\n\ncompletion status : “success” ; subject must have finished all parts of the study, including demographic questionnaire\nsession ID: [in list] ; subject must have been assigned to valid data collection session (discard testing and piloting data)\nbrowser interaction violations < 3; subject must have fewer than 3 violations of non-allowed browser interactions (i.e. resizing window, leaving browser tab or leaving fullscreen mode)\nself-rated effort > 2; subjects who reported, “not trying hard/rushing through questions” or “started out trying hard but giving up at some point” were excluded from analysis.\nattention check ==TRUE ; subjects who failed to answer a mid-study attention check question (Graph Comprehension Task Question #6) are excluded\n\n\n\n\nPre-Requisite\nFollowed By\n\n\n\n\nwinter2022_clean_sgc4b.Rmd\n2_sgc4B_scoring.qmd\n\n\n\nThe underlying data structure of the stimulus web application changed across the data collection period, resulting in slightly different data files (i.e. columns are not named consistently). In this section, we combine the files from each data collection period into a single harmonized data file for analysis (one for participants, one for items).\n\nParticipants\nFirst we import participant-level data, selecting only the columns relevant for analysis. The result is a single data frame df_subjects containing one row for each subject (across all periods). Note that we are not discarding any response data. Rather, we discard columns that are automatically recorded by the stimulus web application and help the application run.\nNote that we discard some columns representing scores calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. No raw data (responses and response times) are discarded, only algorithmically-derived scores for the responses.\n\n\nCODE\n#IMPORT PARTICIPANT DATA\n\n# HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#import file\ndf_subjects <- read_rds(\"analysis/SGC4B/data/0-session-level/sgc4b_participants.rds\") #use RDS file as it contains metadata\n\n#NO EXPLANATION COLUMN IN SGC4B DATASET; TRIAL NOT COLLECTED \n#save 'explanation' columns from winter22, which is actually a response to a free response item (Q16); was recorded with item_level data in old webapp\n# df_q16 <- df_subjects %>% \n#   select(subject, condition, term , mode, explanation) %>% \n#   mutate(\n#     q = 16,\n#     response = explanation\n#   ) %>% select(-explanation)\n\n#reduce data collected using NEW webapp to useful columns\n#drop absolute score because we rescore in 2_scoring\ndf_subjects <- df_subjects %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, pretty_condition, study, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m,\n                 #exploratory factors\n                 violations, browser, width, height\n                 )\n\n\neffort_labels <- c(\"I tried my best on each question\", \"I tried my best on most questions\")\n\n#set factors\ndf_subjects <- df_subjects %>% \n  #refactor factors\n  mutate (\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term),\n    mode = factor(mode),\n    gender = factor(gender),\n    schoolyear = factor(schoolyear, levels=c(\"First\",\"Second\",\"Third\",\"Fourth\",\"Fifth\",\"Other\"))\n  )\n\n\n\n\nItems\nNext we import item-level data from each data collection period, selecting only the columns relevant for analysis. The result is a single data frame df_items containing one row for each graph comprehension task question (qs=15) (across all periods). A second data frame df_freeresponse contains one row for each free response strategy question (last question posed to participants in Winter2022) Note that we do not discard any response data. Rather, we do discard several columns representing accuracy scores for responses that were calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. Original response data are always preserved.\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#read datafiles\ndf_items <- read_rds(\"analysis/SGC4B/data/0-session-level/sgc4b_items.rds\") #use RDS file as it contains metadata\n\n#reduce data collected using new webapp\ndf_items <- df_items %>% \n  select(subject, condition, pretty_condition, study, term, mode, question, q, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  ) %>% \n  mutate(\n    response = str_remove_all(as.character(answer), \",\"),\n    num_o = str_length(response)\n  )%>% \n  # handle NA values (why are some empty responses blank and others NA?) \n  mutate(\n    response = replace_na(response, \"\"),\n    num_o = replace_na(num_o, 0)\n  )\n\n\n\n\nValidation\nNext, we validate that we have the complete number of item-level records based on the number of subject-level records\n\n\nCODE\n#the number of items should be equal to 15 x the number of subjects\nnrow(df_items) == 15* nrow(df_subjects) #TRUE\n\n\n[1] TRUE\n\n\nCODE\n#each subject should have 15 items\ndf_items %>% group_by(subject) %>% summarise(n = n()) %>% filter(n != 15) %>% nrow() == 0\n\n\n[1] TRUE\n\n\nCODE\ntable(df_subjects$condition)\n\n\n\n11111  1112  1113 \n   99   106    96 \n\n\n\n\nExport\nFinally, we export the (session-harmonized) data for analysis, as CSVs, and .RDS (includes metadata)\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4B/data/1-study-level/sgc4b_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4B/data/1-study-level/sgc4b_items.csv\", row.names = FALSE)\n\n#SAVE R Data Structures \n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4B/data/1-study-level/sgc4b_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4B/data/1-study-level/sgc4b_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC4B/1_sgc4B_introduction.html#resources",
    "href": "analysis/SGC4B/1_sgc4B_introduction.html#resources",
    "title": "16  Introduction",
    "section": "RESOURCES",
    "text": "RESOURCES\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] kableExtra_1.3.4 forcats_0.5.1    stringr_1.4.0    dplyr_1.0.9     \n [5] purrr_0.3.4      readr_2.1.2      tidyr_1.2.0      tibble_3.1.7    \n [9] ggplot2_3.3.6    tidyverse_1.3.1  codebook_0.9.2  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.8.3      svglite_2.1.0     lubridate_1.8.0   assertthat_0.2.1 \n [5] digest_0.6.29     utf8_1.2.2        R6_2.5.1          cellranger_1.1.0 \n [9] backports_1.4.1   reprex_2.0.1      labelled_2.9.1    evaluate_0.15    \n[13] highr_0.9         httr_1.4.3        pillar_1.7.0      rlang_1.0.3      \n[17] curl_4.3.2        readxl_1.4.0      data.table_1.14.2 rstudioapi_0.13  \n[21] rmarkdown_2.14    webshot_0.5.3     foreign_0.8-82    htmlwidgets_1.5.4\n[25] munsell_0.5.0     broom_0.8.0       compiler_4.2.1    modelr_0.1.8     \n[29] xfun_0.31         pkgconfig_2.0.3   systemfonts_1.0.4 htmltools_0.5.2  \n[33] tidyselect_1.1.2  rio_0.5.29        fansi_1.0.3       viridisLite_0.4.0\n[37] crayon_1.5.1      tzdb_0.3.0        dbplyr_2.2.1      withr_2.5.0      \n[41] grid_4.2.1        jsonlite_1.8.0    gtable_0.3.0      lifecycle_1.0.1  \n[45] DBI_1.1.3         magrittr_2.0.3    scales_1.2.0      zip_2.2.0        \n[49] cli_3.3.0         stringi_1.7.6     fs_1.5.2          xml2_1.3.3       \n[53] ellipsis_0.3.2    generics_0.1.2    vctrs_0.4.1       openxlsx_4.2.5   \n[57] tools_4.2.1       glue_1.6.2        hms_1.1.1         fastmap_1.1.0    \n[61] yaml_2.3.5        colorspace_2.0-3  rvest_1.0.2       knitr_1.39       \n[65] haven_2.5.0"
  },
  {
    "objectID": "analysis/SGC4B/2_sgc4B_scoring.html#score-sgc-data",
    "href": "analysis/SGC4B/2_sgc4B_scoring.html#score-sgc-data",
    "title": "17  Response Scoring",
    "section": "SCORE SGC DATA",
    "text": "SCORE SGC DATA\nTo review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3.\nIn SGC we are fundamentally interested in understanding how a participant interprets the presented graph (stimulus). The graph comprehension task asks them to select the data points in the graph that meet the criteria posed in the question. To assess a participant’s performance, for each question (q=15) we will calculate the following scores:\nAn overall, strict score:\n1. Absolute Score : using dichotomous scoring referencing true (Triangular) answer. (see 1.2)\nSub-scores, for each alternative graph interpretation\n2. Triangular Score : using partial scoring [-1/q, +1/p] referencing true (Triangular) answer key.\n3. Orthogonal Score : using partial scoring [-1/q, +1/p] referencing (incorrect Orthogonal) answer key.\nBased on prior observational studies where we observed emergence of other alternative interpretations (i.e. transitional interpretations) we also calculate subscores for these alternatives.\n4. Tversky Score : using partial scoring [-1/q, +1/p] referencing (incorrect connecting-lines strategy) answer key. 5. Satisficing Score : using partial scoring [-1/q, +1/p] referencing (incorrect satisficing strategy) answer key.\n\nPrepare Answer Keys\nWe start by importing three answer keys: (1) Q1 - Q5 [control condition], (2) Q1-Q5 [impasse condition], (3) Q6-15. Separate answer keys by condition are required for Q1-Q5 because the stimuli for each condition visualize a different underlying dataset (i.e. the graphs show datapoints in different positions). Q6-Q15 are identical across conditions. Each answer key includes a row for each question, and a column defining the subset of response options that correspond to different graph interpretations.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#SAVE KEYS FOR FUTURE USE\nkeys_raw <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_raw\")\nkeys_orth <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_orth\")\nkeys_tri <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tri\")\nkeys_both <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_both\")\nkeys_satisfice_left <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_left\")\nkeys_satisfice_right <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_right\")\nkeys_tversky_duration <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_duration\")\nkeys_tversky_end <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_end\")\nkeys_tversky_max <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_max\")\nkeys_tversky_start <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_start\")\n\n\n\n\nCalculate Subscores\nNext, we import the item-level response data. For each row in the item level dataset (indicating the response to a single question-item for a single subject), we compare the raw response df_items$response with the answer keys in each interpretation (e.g. keys_orth, keys_tri, etc…), then using those sets, determine the number of correctly selected items(p) and incorrectly selected items (q), which in turn are used to calculate partial[-1/q, +1/p] scores for each interpretation. The resulting scores are then stored on each item in df_items, and can be used to determine which graph interpretation the subject held.\nSpecifically, the following scores are calculated for each item:\nInterpretation Subscores\n\nscore_TRI How consistent is the response with the triangularinterpretation?\nscore_ORTH How consistent is the response with the orthogonalinterpretation?\nscore_BOTH How consistent is the response with both the orthogonal and triangular interpretations?\nscore_SATISFICE is calculated by taking the maximum value of :\n\nscore_SAT_left How consistent is the response with the (left side) Satisficing interpretation?\nscore_SAT_right How consistent is the response with the (right side) Satisficing interpretation\n\nscore_TVERSKY is calculated by taking the maximum value of:\n\nscore_TV_max How consistent is the response with the (maximal) Tversky interpretation?\nscore_TV_start How consistent is the response with the (start-time) Tversky interpretation?\nscore_TV_end How consistent is the response with the (end-time) Tversky interpretation?\nscore_TV_duration How consistent is the response with the (duration) Tversky interpretation?\n\nscore_REF Did the response select only the reference point?\n\nAbsolute Scores\n\nscore_ABS Is the response strictly correct? (triangular interpretation)\nscore_niceABS Is the response strictly correct? (triangular interpretation, not penalizing ref points). This is a more generous version of the Absolute score that does not penalize the participant if in addition to the correct answer in addition to they also select the data point referenced in the question.\n\n\n\nCODE\n#HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#backup <- read_rds('analysis/SGC4B/data/1-study-level/sgc4b_items.rds') #for troubleshooting only\ndf_items <- read_rds('analysis/SGC4B/data/1-study-level/sgc4b_items.rds')\n\n#ADD TEMP IMPASSE COLUMN\ndf_items <- df_items %>% mutate(\n  IMPASSE = substr(condition,2,2),\n  IMPASSE = recode_factor(IMPASSE, \"1\"=\"none\", \"2\"=\"IMPASSE\")\n)\n\n\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\nsource(\"analysis/utils/scoring.R\")\n\n\nnote: this cell takes approximately 30 minutes to run on the full df_items dataframe with 4950 records\n\n\nCODE\n#RUN THIS <OR> THE CALCULATE-SCORES-FORLOOP [not both]\n\n#TROUBLESHOOTING\n# backup <- df_items\n# df_items <- backup %>% sample_n(20)\n\n#ALPHEBETIZE RESPONSE\ndf_items$response = pbmapply(reorder_inplace, df_items$response)\n\n#STRATEGY PARTIAL-SUBSCORES\ndf_items$score_TRI = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tri))\n\ndf_items$score_ORTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_orth))\n\ndf_items$score_BOTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_both))\n\ndf_items$score_SAT_left = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_left))\ndf_items$score_SAT_right = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_right))\n\ndf_items$score_TV_max = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_max))\ndf_items$score_TV_start = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_start))\ndf_items$score_TV_end = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_end))\ndf_items$score_TV_duration = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_duration))\n\n#SPECIAL ABSOLUTE SUBSCORES\ndf_items$score_REF = pbmapply(calc_refscore, df_items$q, df_items$response)\n\n#OLD score_BOTH... new one is above (explicitly in key)\n# df_items$score_BOTH = as.integer((df_items$score_TRI == 1) & (df_items$score_ORTH ==1))\n\n#ABSOLUTE SCORES\ndf_items$score_ABS = as.integer(df_items$correct) \ndf_items$score_niceABS  <- as.integer((df_items$score_TRI == 1)) #tri doesn't penalize ref or ve-area\n\n\n\n\nDerive Interpretation\nFinally, we use the interpretation subscores to classify the response as a particular interpretation. This classification algorithm : (1) First decides if the response matches one or more ‘special’ situations (blank response, reference point response, both ORTH and TRI) (2) If response doesn’t match a special situation, it compares the individual subscores, and subscores and decides if they are discriminant (i.e. are the scores different enough to make a prediction). A discriminant threshold of 0.5pts (on a scale from -1 to +1 is used) (2) If the variance in subscores surpasses the threshold, the interpretation is classified based on the highest subscore (TRIANGULAR, ORTHOGONAL, TVERSKY, SATISFICE) (3) If the variance does not surpass the threshold, the interpretation is labelled as “?”, indicating it cannot be classified, and is of an unknown interpretation.\nThe final output is called interpretation.\n\n\nCODE\n#stoopid extra copying for troubleshooting safety\ntemp <- df_items #%>% head(16) %>% tail(1)\ntemp <- derive_interpretation(temp)\n\n\n[1] \"DERIVING INTERPRETATION\"\n\n\nCODE\ndf_items <- temp\n\n\n\n\n? SPECIAL EXCEPTIONS\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nALSO reconciles issues when interpetation == triangular but scoreniceabs = 0 ::: {.cell}\n\nCODE\n# #temp setup for protection\n# backup <- df_items\ntemp <- df_items %>% mutate(\n  override = \"\"\n)\n\n## CONTROL. Q==1. \"FK\" derives as 'TRI', should be tversky start\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==1) & (IMPASSE ==\"none\") & (response == \"FK\"),\n  tv_type = \"score_TV_start\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"TRI\"\n)\n\n## CONTROL. Q==1. TRI --> OTHER\ntemp <- temp %>% mutate_when(\n  (q==1) & (IMPASSE ==\"none\") & (response == \"FHK\"),\n  # tv_type = \"score_TV_start\",\n  int2 = \"?\", #override from ?\n  interpretation = \"?\", #override from ?\n  high_interpretation = \"neg.trans\",\n  override = \"TRI\"\n)\n\n## IMPASS Q==2. \"EK\" derives as 'TRI', should be tversky MAX\ntemp <- temp %>% mutate_when(\n  (q==2) & (IMPASSE ==\"IMPASSE\") & (response == \"EK\"),\n  tv_type = \"score_TV_max\",\n  int2 = \"Tversky\", #override from TRI\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n## IMPASS Q==2. TRI --> ?\ntemp <- temp %>% mutate_when(\n  (q==2) & (IMPASSE ==\"none\") & (response == \"HKU\"),\n  # tv_type = \"score_TV_max\",\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\",\n  override = \"TRI\"\n)\n\n## CONTROL. Q==3. \"A\" derives as 'unknown', should be tversky duration\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"A\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n\n## CONTROL  Q==3 \"AF\" derives as TRI. hardcode as \"both\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"AF\"),\n  int2 = \"both tri + orth\", #override from TRI\n  interpretation = \"both tri + orth\", #override from TRI\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## CONTROL  Q==3 derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response %in% c(\"EFK\",\"FO\", \"FU\",\"FIUX\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL  Q==3 \"FG\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"FG\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASS  Q==3 \"AF\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE  Q==3 \"AFG\" derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AFG\", \"DF\", \"EFU\", \"DEF\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE  Q==3 \"AH\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n## IMPASSE  Q==3 \"AO\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE  Q==3 \"AOU\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AOU\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## CONTROL Q==4 AH Derives as TRI RECODE as TVERSKY\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"AH\",\"HK\")),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n## CONTROL Q==4  DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"HJ\",\"HJK\",\"EFH\") ),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==4 DEU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DEOU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEOU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 KU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"KU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==4 BD Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BD\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 BDEG Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BDEG\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 AFG Derives as SATISFICE RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"?\", #override from Satisfice\n  interpretation = \"?\", #override from Satisfice\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE Q==4 DH Derives as TRI RECODE as BOTH\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"DH\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AU Derives as TRI RECODE as satisfice\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AU\"),\n  int2 = \"Satisfice\", #override from Triangular\n  interpretation = \"Satisfice\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AZ Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AZ\", \"AX\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AFG Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AF Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AO Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"FO\",\"JO\") ),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"HO\",\"FO\",\"DJO\",\"FGKO\", \"HJO\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==5 KO Derives as TRI RECODE as tversky_duration\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response == \"KO\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==7 HOX, OX Derives as TRI but incorrect\n#includes H which is at rather than under 5 hours.\n#give credit \ntemp <- temp %>% mutate_when(\n  (q==7)  & (response %in% c(\"HOX\", \"OX\")),\n  score_niceABS = 1\n)\n\n##  Q==7 Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MO\",\"AX\",\"FJOX\",\"IO\",\"IJOX\")) ,\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==7 Derives as TRI RECODE as tversky\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MOX\", \"MX\", \"DX\",\"O\",\"X\",\"JX\",\"CO\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==8 Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==8)  & (response %in% c(\"FG\",\"CG\",\"CFG\",\"CGM\",\"CM\",\"ACGP\",\"GM\",\n                             \"AGK\", \"ACG\",\"AFGK\",\"GK\", \"AG\", \"CFGO\",\n                             \"BFG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==10 Derives as TRI -->\ntemp <- temp %>% mutate_when(\n  (q==10)  & (response %in% c(\"BEH\",\"BE\",\"BEF\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n\n##  Q==11 M Derives as TRI MISSING RESPONSE\n##LEAVE AS TRI + OVERRIDE SCORENABS\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"M\",\"L\") ),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==11 BLM Derives as TRI set at both\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response == \"BLM\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at ORTH\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"AGM\")),\n  int2 = \"Orthogonal\",\n  interpretation = \"Orthogonal\", \n  high_interpretation = \"orthogonal\", \n  override = \"Triangular\"\n)\n\n##  Q==11  Derives as TRI set at other\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"EKM\",\"JM\")),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"KL\",\"MOX\",\"CLMP\",\"DKL\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==12 Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==12)  & (response %in% c(\"GP\", \"EG\",\"GLM\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13 E Derives as TRI but incorrect\n##LEAVE AS TRI + OVERRIDE SCORENABS\n##one of two correct answers\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response == \"E\"),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==13 CE Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"CE\",\"EH\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13  Derives as TRI set at ?\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"EO\",\"EK\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"FX\",\"CX\",\"EFX\", \"OX\", \"JX\", \"EX\",\"HX\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"AX\", \"ILOX\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\",\n  override = \"Triangular\"\n)\n\n\n##  Q==15 CX Derives as TRI but incorrect \n#within visual margin... give credit\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"CX\",\"KO\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n#  Q==15  Derives as TRI but incorrect \n#missing 1 right answer or within 0.5hr visual error \ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"X\",\"CK\",\"K\",\"GKX\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"DJNX\", \"OX\", \"AK\",\"DNX\", \"AX\",\"ACX\",\n                              \"AGX\",\"CGX\",\"CKX\",\"DKL\",\"GX\",\"GX\",\"HOX\",\n                              \"HX\",\"JNX\",\"NX\")),\n  # tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"AKPX\",\"GK\",\"JX\",\"LX\",\"BK\",\"HK\",\"HNX\",\n                              \"KP\",\"BX\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n#SET BACK\ndf_items <- temp\n\n:::\n\n\nDerive Scaled Score\nThe interpretation response variable gives us the finest grain indication of the reader’s understanding of the graph for a particular question. However, it is a categorical variable, which poses a challenge for analyzing cumulative performance at the subject level. To address this challenge, we derive a scaled_score that converts each possible interpretation to a numeric value on a scale from -1 to +1. This scaling takes advantage of the observation that each interpretation can be positioned along a spectrum of understanding from completely incorrect (orthogonal) to completely correct (triangular). Alternative interpretations lay somewhere between.\nSpecifically, we assign the following values to each interpretation:\n\n(-1) : ORTHOGONAL, SATISFICE (satisfice represents an attempt at an orthogonal answer when none is available)\n(-0.5): ? (some alternative that cannot be identified; but meaningful that it is not orthogonal)\n(0): REFERENCE POINT, BLANK (indicates the individual thinks there is no answer, recognizes that ORTHOGONAL cannot be correct, but does not conceive of triangular)\n(+0.5) TVERSKY, BOTH TRI + ORTH (indicates that they “see” a triangular response, but lack certainty and also select the ORTHOGONAL response)\n(+1) TRIANGULAR +1\n\n\n\nCODE\ndf_items$score_SCALED <- calc_scaled(df_items$interpretation)\n\n\n\n\nDerive State Score\nThe scaled score represents a 5-category ordering of understanding. We also derive a 3-category ordering that gives higher grained access to “orthogonal-like” vs “uncertain” vs “triangle-like” responses.\nSpecifically, we assign the following values to each interpretation:\n\n(orth-like) : orthogonal, satisfice\n(unknown) : unidentified alternatives, blank, both tri&orth, and reference point responses\n(tri-like) : Tverskian and triangular responses\n\n\n\nCODE\ndf_items <- df_items %>% mutate (\n  score_STATE = recode_factor(df_items$score_SCALED,\n                         \"-1\" = \"orth-like\",\n                         \"-0.5\" = \"unknown\",\n                         \"0\" = \"unknown\",\n                         \"0.5\" = \"tri-like\",\n                         \"1\" = \"tri-like\"),\n  score_STATE = as.ordered(score_STATE))"
  },
  {
    "objectID": "analysis/SGC4B/2_sgc4B_scoring.html#summarize-by-subject",
    "href": "analysis/SGC4B/2_sgc4B_scoring.html#summarize-by-subject",
    "title": "17  Response Scoring",
    "section": "SUMMARIZE BY SUBJECT",
    "text": "SUMMARIZE BY SUBJECT\nNext, we summarize the item level scores by subject in order to calculate cummulative subscores to be stored on the subject record.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#import subjects\ndf_subjects <- read_rds('analysis/SGC4B/data/1-study-level/sgc4b_participants.rds') %>% mutate(subject = as.character(subject)) %>% arrange(subject)\n\n#make temporary copies for testing safety\ns = df_subjects\ni = df_items \n\n#summarize\ntest_subs <- summarise_bySubject(s,i)\n\n\n`summarise()` has grouped output by 'subject'. You can override using the\n`.groups` argument.\n\n\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n\n\nCODE\ndf_subjects <- test_subs\n\n\nWe also summarize absolute and scaled score progress at each question in the task, to explore cumulative performance over the task.\n\n\nCODE\n#GET ABSOLUTE PROGRESS \ndf_absolute_progress <- progress_Absolute(df_items)\n\n#GET SCALED PROGRESS\ndf_scaled_progress <- progress_Scaled(df_items)"
  },
  {
    "objectID": "analysis/SGC4B/2_sgc4B_scoring.html#explore-distributions",
    "href": "analysis/SGC4B/2_sgc4B_scoring.html#explore-distributions",
    "title": "17  Response Scoring",
    "section": "EXPLORE DISTRIBUTIONS",
    "text": "EXPLORE DISTRIBUTIONS\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#create temp data frame for visualizations\ndf = df_items %>% filter (q %nin% c(6,9)) %>% mutate(\n  score_niceABS = as.factor(score_niceABS),\n  pretty_interpretation = factor(interpretation,\n    levels = c(\"Orthogonal\", \"Satisfice\", \n               \"frenzy\",\"?\",\n                \"reference\",\"blank\",\n                \"Tversky\", \"both tri + orth\",\n               \"Triangular\" ))\n  )\n\n\n\nAbsolute Score\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE FULL TASK\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (all Items)\",\n        subtitle = paste(\"Impasse Condition (blue) yields more correct responses across the entire task\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY ITEM\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(pretty_condition~q) + \n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields more correct responses on each item\",\n        y = \"Proprition of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY SUBJECT\ngf_props(~s_NABS, fill = ~pretty_condition, position = position_dodge(), data = df_subjects) %>%\ngf_facet_wrap(~pretty_condition)+\n  labs( x = \"Total Absolute Score\",\n        title = \"Distribution of Total Absolute Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher total absolute scores\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE TEST PHASE\ngf_props(~item_test_NABS, fill = ~pretty_condition, \n             data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + \n  labs( x = \"Absolute Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Absolute Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nScaled Score\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#DISTRIBUTION SCALED SCORE FULL TASK\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (all Items)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores across the entire task\",\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY ITEM\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(q~pretty_condition) + \n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores on each item\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  scale_y_continuous(breaks=c(0,0.5)) + \n  theme_minimal() + theme(legend.position=\"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY SUBJECT\ngf_props(~s_SCALED, fill = ~pretty_condition, data = df_subjects)  %>% \n  gf_facet_grid(pretty_condition ~. )+\n  labs( x = \"Total Scaled Score\", \n        title = \"Distribution of Total Scaled Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher cumulative scaled scores\",\n        y = \"Number of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nInterpretations\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION\ngf_props(~pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition ~ ., labeller = label_both) + \n  labs( title = \"Distribution of Interpretations (across Task)\",\n        x = \"Graph Interpretation\",\n        y = \"Proportion of Responses\",\n        subtitle = \"Impasse condition (blue) yields fewer Orthogonal and more Triangular responses\") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION ACROSS ITEMS\ngf_propsh(~ pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more Triangular responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION TYPE ACROSS ITEMS\ngf_propsh(~ high_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more positive trending responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\nggbarstats( data = df, x = score_STATE, y = pretty_condition)\n\n\n\n\n\nCODE\nggbarstats( data = df, x = high_interpretation, y = pretty_condition)\n\n\n\n\n\n\n\nProgress over Task\n\n\nCODE\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(~pretty_condition) + \n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(~pretty_condition) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nInterpretation Subscores\n\n\nCODE\ngf_density(~ s_TRI, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Triangular Score\",\n        subtitle = \"Impasse shifts density toward higher Triagular scores\",\n        x = \"Item Triangular Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_ORTH, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Orthogonal Score\",\n        subtitle = \"Impasse shifts density toward lower Orthogonal scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_TVERSKY, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Tversky Score\",\n        subtitle = \"Impasse shifts density toward higher Tversky scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_histogram(~ s_SATISFICE, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Satisfice Score\",\n        subtitle = \"Satisficing only occurs in impasse, when no orthogonal response is available\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4B/2_sgc4B_scoring.html#explore-responses",
    "href": "analysis/SGC4B/2_sgc4B_scoring.html#explore-responses",
    "title": "17  Response Scoring",
    "section": "EXPLORE RESPONSES",
    "text": "EXPLORE RESPONSES\nIn this section we explore responses given by participants to each particular item in the graph comprehension task, indicate how each response was scored, and what interpretation of the graph is indicated by different responses.\n\n\nCODE\ngf_props(~ score_niceABS, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Item Absolute Score\", title = \"Distribution of Accuracy  | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nSCAFFOLD PHASE\nThe first five questions constitute the ‘scaffold’ (or learning) phase, where participants see a different version of the stimulus (specifically a different dataset is visualized) invoking a different experimental condition.\n\nQuestion #1\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nWe start by exploring the range of response options checked by participants on Question 1.\n\n\n\nFigure 17.1: Question 1 — Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==1)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q1 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q1 Control Condition :  Which shift(s) start at 11 am?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    A \n    OI \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    CF \n    Z \n  \n  \n    Tversky [start diagonal] \n    F \n    Z \n  \n  \n    Tversky [end diagonal] \n    C \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nHere we summarize the distinct response options given by participants on this item. Each letter in response indicates a checkbox selected by the participant (See Figure 22.1 ). n indicates the number of participants who gave this response, while interpretation indicates the graph interpretation most consistent with that response. At the right of this table are the Absolute, followed by Partial Credit subscores for each response. NA indicates that there is no score calculated (occurs when there is no subset of response options that accord with that interpretation for this question).\nNotice that for this Question, the Triangular answer is the same as the Tversky [start diagonal] answer. In fact, for most questions, one of the Tversky sub-types will match the correct response.\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #1 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 1) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 1) %>% \n  # pack_rows(\"Lines-Connect\", 2, 2) %>% \n  # pack_rows(\"Orthogonal\", 3, 3) %>% \n  # pack_rows(\"Other\", 4, 4)  %>% \n  # pack_rows(\"Unknown\", 5, 7)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #1 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    33 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    CF \n    3 \n    Tversky \n    0 \n    0.923 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    C \n    1 \n    Tversky \n    0 \n    -0.077 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    A \n    256 \n    Orthogonal \n    0 \n    -0.077 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AI \n    1 \n    Orthogonal \n    0 \n    -0.154 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AIO \n    1 \n    Orthogonal \n    0 \n    -0.231 \n    -0.214 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AF \n    2 \n    both tri + orth \n    0 \n    0.923 \n    0.923 \n    NA \n    0.917 \n    0.5 \n  \n  \n     \n    3 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACF \n    1 \n    ? \n    0 \n    0.846 \n    0.917 \n    NA \n    0.833 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQuestion #2\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 17.2: Q2—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==2)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q2 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q2 Control Condition :  Which shift(s) start at the same time as D?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    K \n    Z \n  \n  \n    Orthgonal \n    E \n    G \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AKJX \n    Z \n  \n  \n    Tversky [start diagonal] \n    AK \n    Z \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    J \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #2 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 2) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 2) %>%\n  # pack_rows(\"Lines-Connect\", 3, 4) %>% \n  # pack_rows(\"Orthogonal\", 5, 7) %>%\n  # pack_rows(\"Other\", 8, 8)  %>% \n  # pack_rows(\"Unknown\", 9, 10)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #2 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    K \n    40 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    DK \n    2 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    KZ \n    1 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.167 \n    1.0 \n  \n  \n    J \n    8 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AB \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.409 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    AK \n    1 \n    Tversky \n    0 \n    0.917 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    EIJ \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.846 \n    NA \n    0.833 \n    0.5 \n  \n  \n    X \n    1 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    E \n    232 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    DE \n    5 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EG \n    2 \n    Orthogonal \n    0 \n    -0.167 \n    -0.154 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    D \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQuestion #3\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 17.3: Q3—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==3)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q3 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q3 Control Condition :  Which shift(s) begin when C ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    Z \n    FIO \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AUBFOJ \n     \n  \n  \n    Tversky [start diagonal] \n    OJ \n     \n  \n  \n    Tversky [end diagonal] \n    F \n    Z \n  \n  \n    Tversky [duration line] \n    AUB \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #3 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 3 ) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #3 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    46 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    0.0 \n    1.0 \n  \n  \n    A \n    44 \n    Tversky \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    O \n    5 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    0.0 \n    0.5 \n  \n  \n    ABU \n    2 \n    Tversky \n    0 \n    -0.250 \n    1.000 \n    NA \n    -0.3 \n    0.5 \n  \n  \n    FG \n    2 \n    Tversky \n    0 \n    0.917 \n    0.917 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    IO \n    2 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    0.0 \n    0.5 \n  \n  \n    JO \n    2 \n    Tversky \n    0 \n    -0.167 \n    1.000 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    ABCU \n    1 \n    Tversky \n    0 \n    -0.250 \n    1.000 \n    NA \n    -0.3 \n    0.5 \n  \n  \n    Z \n    168 \n    Orthogonal \n    0 \n    0.000 \n    0.000 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    AZ \n    1 \n    Orthogonal \n    0 \n    -0.083 \n    0.242 \n    NA \n    0.9 \n    -1.0 \n  \n  \n    FZ \n    1 \n    both tri + orth \n    1 \n    1.000 \n    1.000 \n    NA \n    1.0 \n    0.5 \n  \n  \n     \n    11 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    0.0 \n  \n  \n    BDEFGKU \n    1 \n    frenzy \n    0 \n    0.500 \n    0.500 \n    NA \n    -0.6 \n    -0.5 \n  \n  \n    U \n    4 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    AH \n    2 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    AFZ \n    1 \n    ? \n    0 \n    0.917 \n    0.917 \n    NA \n    0.9 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    EU \n    1 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    FU \n    1 \n    ? \n    0 \n    0.917 \n    0.917 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    HUX \n    1 \n    ? \n    0 \n    -0.250 \n    0.152 \n    NA \n    -0.3 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    0.0 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 17)  \n\n\n\n\nQuestion #4\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 17.4: Q4—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==4)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q4 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q4 Control Condition :  Which shift(s) end at 4 pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    H \n     \n  \n  \n    Orthgonal \n    U \n    OF \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    BH \n     \n  \n  \n    Tversky [start diagonal] \n    B \n     \n  \n  \n    Tversky [end diagonal] \n    H \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #4 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 4) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #4 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    H \n    57 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    B \n    2 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    BCI \n    1 \n    Tversky \n    0 \n    -0.214 \n    0.857 \n    NA \n    -0.250 \n    0.5 \n  \n  \n    BH \n    1 \n    Tversky \n    0 \n    0.929 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    U \n    140 \n    Orthogonal \n    0 \n    -0.071 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    6 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FOU \n    2 \n    Orthogonal \n    0 \n    -0.214 \n    -0.214 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    OU \n    2 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    UX \n    2 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.917 \n    -1.0 \n  \n  \n    EFU \n    1 \n    Orthogonal \n    0 \n    -0.214 \n    -0.214 \n    NA \n    0.917 \n    -1.0 \n  \n  \n    IOU \n    1 \n    Orthogonal \n    0 \n    -0.214 \n    -0.214 \n    NA \n    0.917 \n    -1.0 \n  \n  \n     \n    6 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACFHIJKOUZ \n    1 \n    frenzy \n    0 \n    0.357 \n    0.357 \n    NA \n    0.417 \n    -0.5 \n  \n  \n    DE \n    50 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    E \n    6 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    F \n    5 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    G \n    3 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    K \n    3 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    D \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DEU \n    2 \n    ? \n    0 \n    -0.214 \n    -0.214 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    FG \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    HJU \n    1 \n    ? \n    0 \n    0.857 \n    0.857 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    KU \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.917 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 3) %>% \n#   pack_rows(\"Orthogonal\", 4, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 16) \n\n\n\n\nQuestion #5\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 17.5: Q5—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==5)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q5 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q5 Control Condition :  Coffee breaks happen halfway through a shift. Which shift(s) share a break with I?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    O \n    AZ \n  \n  \n    Orthgonal \n    U \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    UGX \n    AZKD \n  \n  \n    Tversky [start diagonal] \n    X \n     \n  \n  \n    Tversky [end diagonal] \n    UG \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #5 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 5) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #5 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    O \n    112 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    AO \n    3 \n    Triangular \n    1 \n    1.000 \n    -0.143 \n    NA \n    -0.154 \n    1.0 \n  \n  \n    IO \n    3 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    FG \n    1 \n    Tversky \n    0 \n    -0.182 \n    0.417 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    U \n    75 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    5 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    HU \n    3 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    IU \n    3 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AJU \n    1 \n    Orthogonal \n    0 \n    -0.182 \n    0.333 \n    NA \n    0.846 \n    -1.0 \n  \n  \n    CHJU \n    1 \n    Orthogonal \n    0 \n    -0.364 \n    0.250 \n    NA \n    0.769 \n    -1.0 \n  \n  \n    I \n    3 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    OU \n    1 \n    both tri + orth \n    0 \n    0.909 \n    0.417 \n    NA \n    0.923 \n    0.5 \n  \n  \n     \n    16 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    BDEFGHJKOUX \n    1 \n    frenzy \n    0 \n    0.091 \n    0.250 \n    NA \n    0.231 \n    -0.5 \n  \n  \n    DEHJUX \n    1 \n    frenzy \n    0 \n    -0.545 \n    0.615 \n    NA \n    0.615 \n    -0.5 \n  \n  \n    FHIJKOUX \n    1 \n    frenzy \n    0 \n    0.455 \n    0.538 \n    NA \n    0.538 \n    -0.5 \n  \n  \n    FHJKOUZ \n    1 \n    frenzy \n    0 \n    0.545 \n    0.000 \n    NA \n    0.538 \n    -0.5 \n  \n  \n    FHKOXZ \n    1 \n    frenzy \n    0 \n    0.636 \n    0.615 \n    NA \n    -0.462 \n    -0.5 \n  \n  \n    F \n    15 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    H \n    9 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    K \n    9 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    DJ \n    5 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    J \n    5 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    C \n    3 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    HJ \n    3 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    Z \n    3 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    A \n    2 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    E \n    2 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    FZ \n    2 \n    ? \n    0 \n    -0.091 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HK \n    2 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    AC \n    1 \n    ? \n    0 \n    -0.091 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    AZ \n    1 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    BHK \n    1 \n    ? \n    0 \n    -0.273 \n    -0.231 \n    NA \n    -0.231 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    DE \n    1 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    EK \n    1 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HJO \n    1 \n    ? \n    0 \n    0.818 \n    -0.231 \n    NA \n    -0.231 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>% \n#   pack_rows(\"Lines-Connect\", 5, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 9) %>% \n#   pack_rows(\"Other\", 10, 11) %>% \n#   pack_rows(\"Unknown\", 12, 22) \n\n\nTODO note the compelling cases of internal inconsistency (HJDE)\n\n\nQuestion #7\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 17.6: Q7-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==7)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts less than 5 hours long start at the same time?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    OX \n     \n  \n  \n    Orthgonal \n    BF \n    M \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    IJZNCHOX \n     \n  \n  \n    Tversky [start diagonal] \n    OX \n     \n  \n  \n    Tversky [end diagonal] \n    IJZN \n     \n  \n  \n    Tversky [duration line] \n    CH \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #7\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 7) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #7\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    OX \n    52 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    CDIN \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.357 \n    NA \n    -0.267 \n    0.5 \n  \n  \n    CG \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    CH \n    1 \n    Tversky \n    0 \n    -0.125 \n    1.000 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    HL \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    MX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    BF \n    215 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FZ \n    14 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    B \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    F \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BDFIJMNOX \n    1 \n    frenzy \n    0 \n    0.562 \n    0.562 \n    NA \n    0.600 \n    -0.5 \n  \n  \n    BDFIJMNOXZ \n    1 \n    frenzy \n    0 \n    0.500 \n    0.571 \n    NA \n    0.533 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.062 \n    0.250 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DN \n    1 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    IJOX \n    1 \n    ? \n    0 \n    0.875 \n    0.875 \n    NA \n    -0.267 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    KN \n    1 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    LP \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.133 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 5) %>%\n#   pack_rows(\"Lines-Connect\", 6, 9) %>%\n#   pack_rows(\"Orthogonal\", 10, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 17)\n\n\n\n\nQuestion #8\n\n\n\nFigure 17.7: Q8-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==8)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q: \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q:  Which shift(s) under 7 hours long starts before B starts, and ends after X ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    E \n    F \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #8\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 8) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #8\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    44 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.071 \n    1.0 \n  \n  \n    CGM \n    4 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    AG \n    1 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    AGK \n    1 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CG \n    1 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    FG \n    1 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.071 \n    0.5 \n  \n  \n    E \n    152 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EI \n    5 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EIJ \n    3 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EJ \n    3 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EF \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EG \n    1 \n    both tri + orth \n    0 \n    0.933 \n    NA \n    NA \n    0.929 \n    0.5 \n  \n  \n     \n    8 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    DEHIJNOZ \n    2 \n    frenzy \n    0 \n    -0.533 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    CDGHNZ \n    1 \n    frenzy \n    0 \n    0.667 \n    NA \n    NA \n    -0.429 \n    -0.5 \n  \n  \n    CDGLNXZ \n    1 \n    frenzy \n    0 \n    0.667 \n    NA \n    NA \n    -0.429 \n    -0.5 \n  \n  \n    CEGHOZ \n    1 \n    frenzy \n    0 \n    0.667 \n    NA \n    NA \n    0.643 \n    -0.5 \n  \n  \n    DEHIJNZ \n    1 \n    frenzy \n    0 \n    -0.467 \n    NA \n    NA \n    0.571 \n    -0.5 \n  \n  \n    DHNOZ \n    1 \n    frenzy \n    0 \n    -0.333 \n    NA \n    NA \n    -0.357 \n    -0.5 \n  \n  \n    DIJMN \n    1 \n    frenzy \n    0 \n    -0.333 \n    NA \n    NA \n    -0.357 \n    -0.5 \n  \n  \n    DIJNO \n    1 \n    frenzy \n    0 \n    -0.333 \n    NA \n    NA \n    -0.357 \n    -0.5 \n  \n  \n    IJ \n    18 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    J \n    7 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    I \n    6 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    F \n    5 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    M \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    O \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    A \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    C \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    HOZ \n    2 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    Z \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    AK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    AX \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    BKLM \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    DIJN \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    DJN \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    DNOZ \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    HL \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    IJM \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    LX \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    OX \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Orthogonal\", 11, 16) %>%\n#   pack_rows(\"Other\", 17, 21) %>%\n#   pack_rows(\"Unknown\", 22, 45)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #10\n\n\n\nFigure 17.8: Q10-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==10)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    E \n     \n  \n  \n    Orthgonal \n    X \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    EGZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n    E \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #10\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 10) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #10\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    E \n    67 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    21 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    G \n    2 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    GJ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    HZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    X \n    134 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FX \n    9 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BX \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    0.938 \n    -1.0 \n  \n  \n    F \n    5 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    EX \n    4 \n    both tri + orth \n    0 \n    0.938 \n    0.938 \n    NA \n    0.938 \n    0.5 \n  \n  \n     \n    4 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    B \n    32 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    8 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    I \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    BE \n    1 \n    ? \n    0 \n    0.938 \n    0.938 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    BEF \n    1 \n    ? \n    0 \n    0.938 \n    0.938 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    LO \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>%\n#   pack_rows(\"Lines-Connect\", 3, 7) %>%\n#   pack_rows(\"Orthogonal\", 8, 11) %>%\n#   pack_rows(\"Other\", 12, 14) %>%\n#   pack_rows(\"Unknown\", 15, 27)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #11\n\n\n\nFigure 17.9: Q11-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==11)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at 12pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    ML \n     \n  \n  \n    Orthgonal \n    FB \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #11\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 11) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #11\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    LM \n    60 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.125 \n    1.0 \n  \n  \n    M \n    4 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    L \n    1 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    BF \n    218 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    ABF \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    NA \n    NA \n    0.938 \n    -1.0 \n  \n  \n    AGM \n    1 \n    Orthogonal \n    0 \n    0.375 \n    NA \n    NA \n    -0.188 \n    -1.0 \n  \n  \n    B \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    EF \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    0.438 \n    -1.0 \n  \n  \n     \n    4 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABCEFGIJKP \n    1 \n    frenzy \n    0 \n    -0.625 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    J \n    2 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    ACN \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    EIJ \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IX \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 9) %>%\n#   pack_rows(\"Other\", 10, 12) %>%\n#   pack_rows(\"Unknown\", 13, 17)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 11)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 11)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #12\n\n\n\nFigure 17.10: Q12-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==12)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    GZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #12\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 12) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #12\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    56 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    FG \n    3 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    4 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    GLM \n    1 \n    Tversky \n    0 \n    0.875 \n    0.875 \n    NA \n    -0.188 \n    0.5 \n  \n  \n    GP \n    1 \n    Tversky \n    0 \n    0.938 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    KZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    NZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    B \n    213 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    9 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    2 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    4 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    BFG \n    1 \n    ? \n    0 \n    0.938 \n    0.938 \n    NA \n    0.938 \n    -0.5 \n  \n  \n    BGL \n    1 \n    ? \n    0 \n    0.875 \n    0.875 \n    NA \n    0.875 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Lines-Connect\", 4, 6) %>%\n#   pack_rows(\"Orthogonal\", 7, 8) %>%\n#   pack_rows(\"Other\", 9, 10) %>%\n#   pack_rows(\"Unknown\", 11, 14)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #13\n\n\n\nFigure 17.11: Q13-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==13)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts end when Z begins?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EF \n     \n  \n  \n    Orthgonal \n    FX \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #13\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 13) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #13\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EF \n    58 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    0.433 \n    1.0 \n  \n  \n    FX \n    150 \n    Orthogonal \n    0 \n    0.433 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    X \n    9 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    OX \n    5 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    KX \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    BFX \n    1 \n    Orthogonal \n    0 \n    0.367 \n    NA \n    NA \n    0.933 \n    -1.0 \n  \n  \n    BX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    Z \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    8 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    F \n    9 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    HL \n    7 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BF \n    6 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    HLP \n    5 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    CH \n    4 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DN \n    4 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HN \n    4 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    EX \n    3 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    GO \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    ACK \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    AF \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    BIJM \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.267 \n    -0.5 \n  \n  \n    CG \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CGO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    CO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FO \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    HI \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HJ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    KN \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    KZ \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    LP \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Orthogonal\", 4, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 36)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 13)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 13)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #14\n\n\n\nFigure 17.12: Q14-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==14)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at 3pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    X \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XJND \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    JND \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #14\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 14) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #14\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    X \n    71 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.059 \n    1.0 \n  \n  \n    OX \n    2 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    FX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    HX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    B \n    157 \n    Orthogonal \n    0 \n    -0.059 \n    -0.059 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    4 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BIO \n    3 \n    Orthogonal \n    0 \n    -0.176 \n    -0.176 \n    NA \n    0.882 \n    -1.0 \n  \n  \n    BO \n    1 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BX \n    3 \n    both tri + orth \n    0 \n    0.941 \n    0.941 \n    NA \n    0.941 \n    0.5 \n  \n  \n     \n    28 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    O \n    10 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    Z \n    3 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    HLP \n    2 \n    ? \n    0 \n    -0.176 \n    -0.176 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    AEO \n    1 \n    ? \n    0 \n    -0.176 \n    -0.176 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.059 \n    0.333 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    F \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    FG \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    FK \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    IJM \n    1 \n    ? \n    0 \n    -0.176 \n    0.200 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    NO \n    1 \n    ? \n    0 \n    -0.118 \n    0.267 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 7) %>%\n#   pack_rows(\"Other\", 8, 9) %>%\n#   pack_rows(\"Unknown\", 10, 22)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 14)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 14)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #15\n\n\n\nFigure 17.13: Q15-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==15)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Coffee breaks happen halfway through a shift. Which shifts share a break at 2pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    XK \n     \n  \n  \n    Orthgonal \n    EF \n    B \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XKZ \n     \n  \n  \n    Tversky [start diagonal] \n    Z \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #15\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 15) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #15\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    KX \n    75 \n    Triangular \n    1 \n    1.000 \n    0.667 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    X \n    10 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    K \n    5 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    FZ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    0.433 \n    0.5 \n  \n  \n    Z \n    2 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    DJNX \n    1 \n    Tversky \n    0 \n    0.312 \n    0.133 \n    NA \n    -0.267 \n    0.5 \n  \n  \n    GZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    HLZ \n    1 \n    Tversky \n    0 \n    -0.188 \n    0.882 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    NX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    NZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    OX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    EF \n    118 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    22 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BF \n    8 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BEF \n    5 \n    Orthogonal \n    0 \n    -0.188 \n    -0.176 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    E \n    3 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BE \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    CF \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FI \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    AEIM \n    1 \n    Orthogonal \n    0 \n    -0.250 \n    -0.235 \n    NA \n    0.300 \n    -1.0 \n  \n  \n    CE \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EFL \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    -0.176 \n    NA \n    0.933 \n    -1.0 \n  \n  \n    EG \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EI \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EM \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FJ \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FO \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    7 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    I \n    3 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    B \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    L \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AG \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BCJ \n    1 \n    ? \n    0 \n    -0.188 \n    -0.176 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BG \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    FNX \n    1 \n    ? \n    0 \n    0.375 \n    0.200 \n    NA \n    0.367 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    GK \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HJ \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HK \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HN \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    IJM \n    1 \n    ? \n    0 \n    -0.188 \n    -0.176 \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    NO \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Lines-Connect\", 11, 13) %>%\n#   pack_rows(\"Orthogonal\", 14, 22) %>%\n#   pack_rows(\"Other\", 23, 23) %>%\n#   pack_rows(\"Unknown\", 24, 44)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 15)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 15)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nNON-DISCRIMINANT QUESTIONS\n\nQuestion #6 NONDISCRIM\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 17.14: Q6-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==6)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) are six hours long?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EG \n     \n  \n  \n    Orthgonal \n    EG \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\nTODO discuss non discriminant\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #6\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 6) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #6\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EG \n    287 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    JM \n    3 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    ACI \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    AJ \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    CDEO \n    1 \n    ? \n    0 \n    0.312 \n    NA \n    NA \n    0.312 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    EF \n    1 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    0.438 \n    -0.5 \n  \n  \n    F \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\n\n\nQuestion #9 NONDISCRIM\n\n\n\nFigure 17.15: Q9-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==9)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) begins before J begins and ends during B?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    I \n     \n  \n  \n    Orthgonal \n    I \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #9\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q ==9) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #9\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    I \n    231 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    20 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    E \n    17 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    5 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    EI \n    3 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    F \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    FI \n    3 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    J \n    3 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    X \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    BEIN \n    1 \n    ? \n    0 \n    0.867 \n    NA \n    NA \n    0.867 \n    -0.5 \n  \n  \n    FG \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HKM \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    HX \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    IMO \n    1 \n    ? \n    0 \n    0.867 \n    NA \n    NA \n    0.867 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Other\", 1, 2) %>%\n#   pack_rows(\"Unknown\", 3, 19)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4B/2_sgc4B_scoring.html#export",
    "href": "analysis/SGC4B/2_sgc4B_scoring.html#export",
    "title": "17  Response Scoring",
    "section": "EXPORT",
    "text": "EXPORT\n\n\nCODE\ntable(df_subjects$mode, df_subjects$pretty_condition) %>% addmargins()\n\n\n        \n         point cross arrow Sum\n  asynch    99    96   106 301\n  Sum       99    96   106 301\n\n\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4B/data/2-scored-data/sgc4b_scored_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4B/data/2-scored-data/sgc4b_scored_items.csv\", row.names = FALSE)\nwrite.csv(df_absolute_progress,\"analysis/SGC4B/data/2-scored-data/sgc4b_absolute_progress.csv\", row.names = FALSE)\nwrite.csv(df_scaled_progress,\"analysis/SGC4B/data/2-scored-data/sgc4b_scaled_progress.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4B/data/2-scored-data/sgc4b_scored_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4B/data/2-scored-data/sgc4b_scored_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC4C/1_sgc4C_introduction.html",
    "href": "analysis/SGC4C/1_sgc4C_introduction.html",
    "title": "18  Introduction",
    "section": "",
    "text": "In Study 4C we explore the extent to which the orientation of the axes in space influence how a reader interprets its underlying coordinate system."
  },
  {
    "objectID": "analysis/SGC4C/1_sgc4C_introduction.html#methods",
    "href": "analysis/SGC4C/1_sgc4C_introduction.html#methods",
    "title": "18  Introduction",
    "section": "METHODS",
    "text": "METHODS\n\nDesign\nWe employed a mixed design with 2 between-subjects factors (Shape: ORTHOGONAL, TRIANGULAR), (ROTATION: 0degrees, 45 degrees, 90 degrees) and 15 items (within-subjects factor).\nDependent Variables:\n\nResponse Accuracy : Is the response triangular-correct?\nResponse Interpretation : (derived) With which interpretation of the graph is the subject’s response on an individual question consistent?\nResponse Latency : Time from stimulus onset to clicking ‘Submit’ button: time in (s)\n\n\n\nMaterials\nStimuli consisted of a series of 15 graph comprehension questions, each testing a different combination of time interval relations, to be read from a Triangular-Model graph. Figure 21.1. The list of questions can be found here.\n\n\n\nFigure 18.1: Sample Question (Q=1) for Graph Comprehension Task\n\n\nIn each experimental\n\n\nProcedure\nParticipants completed the study via a web-browser.\n(1) Upon starting, they submitted informed consent, before reading task instructions.\n(2) Participants were introduced to a scenario in which they were to play the role of a project manager, scheduling shifts for a group of employees. The schedule of the employees was presented in a Triangular Model (TM) graph, and they would be answering question about the schedule.\n(3) Then participants completed an experimental block of 15 items: The Graph Comprehension Task.\n(4) Following the experimental block, participants answered a free-response question about their strategy for reading the graph, followed by a demographic questionnaire and debrief.\n\n\nSample\nData were collected by convenience sample of a university subject pool during the summer of 2022. Data for conditions 111 and 113 were joined from studies SGC3A online replication and SGC4D, along with rotation conditions collected specifically for SGC4C. Participants accessed the study via a web browser (asynchronously). The stimulus application required the participant stay in full-screen mode for the entirety of the study."
  },
  {
    "objectID": "analysis/SGC4C/1_sgc4C_introduction.html#analysis",
    "href": "analysis/SGC4C/1_sgc4C_introduction.html#analysis",
    "title": "18  Introduction",
    "section": "ANALYSIS",
    "text": "ANALYSIS\n\nData Preparation\nData were collected via a custom web application and stored in a NoSQL database. The following exclusion criteria were applied during data cleaning:\n\ncompletion status : “success” ; subject must have finished all parts of the study, including demographic questionnaire\nsession ID: [in list] ; subject must have been assigned to valid data collection session (discard testing and piloting data)\nbrowser interaction violations < 3; subject must have fewer than 3 violations of non-allowed browser interactions (i.e. resizing window, leaving browser tab or leaving fullscreen mode)\nself-rated effort > 2; subjects who reported, “not trying hard/rushing through questions” or “started out trying hard but giving up at some point” were excluded from analysis.\nattention check ==TRUE ; subjects who failed to answer a mid-study attention check question (Graph Comprehension Task Question #6) are excluded\n\n\n\n\n\n\n\n\n\nThe underlying data structure of the stimulus web application changed across the data collection period, resulting in slightly different data files (i.e. columns are not named consistently). In this section, we combine the files from each data collection period into a single harmonized data file for analysis (one for participants, one for items).\n\nParticipants\nFirst we import participant-level data, selecting only the columns relevant for analysis. The result is a single data frame df_subjects containing one row for each subject (across all periods). Note that we are not discarding any response data. Rather, we discard columns that are automatically recorded by the stimulus web application and help the application run.\nNote that we discard some columns representing scores calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. No raw data (responses and response times) are discarded, only algorithmically-derived scores for the responses.\n\n\nCODE\n#IMPORT PARTICIPANT DATA\n\n\n#import rotation participants\ndf_rotated <- read_rds(\"analysis/SGC4C/data/0-session-level/sgc4c_participants.rds\") #use RDS file as it contains metadata\n\n#import control participants 111 from fall 21  (only online)\ndf_control <- read_rds(\"analysis/SGC3A/data/1-study-level/sgc3a_participants.rds\") %>% \n  filter(condition==111) %>% filter(term == \"fall21\") %>% \n dplyr::select(-pretty_mode) %>% droplevels() %>% mutate(\n  study = \"SGC3A\"\n)\n\n#import triangular participants 113 (online online)\ndf_tri <- read_rds(\"analysis/SGC4A/data/1-study-level/sgc4a_participants.rds\") %>% \n  filter(condition==113) %>% filter(term==\"winter22\") %>% \n  dplyr::select(-pretty_mode) %>% droplevels() %>% mutate(\n  study = \"SGC4D\"\n)\n\n#reduce data collected using NEW webapp to useful columns\n#drop absolute score because we rescore in 2_scoring\ndf_rotated <- df_rotated %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, pretty_condition, study, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m,\n                 #exploratory factors\n                 violations, browser, width, height\n                 )\n\n\neffort_labels <- c(\"I tried my best on each question\", \"I tried my best on most questions\")\n\n\n\n# janitor::compare_df_cols(df_rotated, df_control)\n\n\ndf_subjects <- rbind(df_rotated, df_control, df_tri)\n\n#set factors\ndf_subjects <- df_subjects %>% \n  #refactor factors\n  mutate (\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term),\n    mode = factor(mode),\n    gender = factor(gender),\n    schoolyear = factor(schoolyear, levels=c(\"First\",\"Second\",\"Third\",\"Fourth\",\"Fifth\",\"Other\")),\n    pretty_condition = recode_factor(pretty_condition,\n                                     \"control\" = \"ORTH-0\",\n                                     \"Tri-Sparse\" = \"TRI-0\",\n                                     \n                                     \"ORTH-rotate-45\" = \"ORTH-45\",\n                                     \"TRI-rotate-45\" =  \"TRI-45\",\n                                     \"ORTH-rotate-90\" = \"ORTH-90\",\n                                     \"TRI-rotate-90\" = \"TRI-90\"),\n    ROTATION = recode_factor(pretty_condition, \n                                     \"ORTH-0\" = \"0\",\n                                     \"TRI-0\" = \"0\",\n                                     \"ORTH-45\" = \"45\",\n                                     \"TRI-45\" = \"45\",\n                                     \"ORTH-90\" = \"90\",\n                                     \"TRI-90\" = \"90\"),\n    SHAPE = recode_factor(pretty_condition, \n                                   \"ORTH-0\" = \"ORTH\",\n                                   \"TRI-0\" = \"TRI\",\n                                   \"ORTH-45\" = \"ORTH\",\n                                   \"TRI-45\" = \"TRI\",\n                                   \"ORTH-90\" = \"ORTH\",\n                                   \"TRI-90\" = \"TRI\"))\n\n\n# table(df_subjects$condition)\nrm(df_control, df_rotated, df_tri)\n\n\n\n\nItems\nNext we import item-level data from each data collection period, selecting only the columns relevant for analysis. The result is a single data frame df_items containing one row for each graph comprehension task question (qs=15) (across all periods). A second data frame df_freeresponse contains one row for each free response strategy question (last question posed to participants in Winter2022) Note that we do not discard any response data. Rather, we do discard several columns representing accuracy scores for responses that were calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. Original response data are always preserved.\n\n\nCODE\n#read datafiles\ndf_rotated <- read_rds(\"analysis/SGC4C/data/0-session-level/sgc4c_items.rds\") #use RDS file as it contains metadata\n\n#import control participants 111 from fall 21  (only online)\ndf_control <- read_rds(\"analysis/SGC3A/data/1-study-level/sgc3a_items.rds\") %>% \n  filter(condition==111) %>% filter(term == \"fall21\") %>% \n dplyr::select(-pretty_mode) %>% droplevels() %>% mutate(\n  study = \"SGC3A\"\n)\n\n#import triangular participants 113 (online online)\ndf_tri <- read_rds(\"analysis/SGC4A/data/1-study-level/sgc4a_items.rds\") %>% \n  filter(condition==113) %>% filter(term==\"winter22\") %>% \n  dplyr::select(-pretty_mode) %>% droplevels() %>% mutate(\n  study = \"SGC4D\"\n)\n\n#reduce data collected using new webapp\ndf_rotated <- df_rotated %>% \n  select(subject, condition, pretty_condition, study, term, mode, q, question, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  ) %>% \n  mutate(\n    response = str_remove_all(as.character(answer), \",\"),\n    num_o = str_length(response)\n  )%>% \n  # handle NA values (why are some empty responses blank and others NA?) \n  mutate(\n    response = replace_na(response, \"\"),\n    num_o = replace_na(num_o, 0)\n  ) %>% dplyr::select(-answer)\n\n#JOIN \n# janitor::compare_df_cols(df_rotated, df_control)\ndf_items <- rbind(df_rotated, df_control, df_tri)\n\n#mutate condition names \ndf_items <- df_items %>% mutate(\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term),\n    mode = factor(mode),\n    pretty_condition = recode_factor(pretty_condition,\n                                     \"control\" = \"ORTH-0\",\n                                     \"Tri-Sparse\" = \"TRI-0\",\n                                     \"ORTH-rotate-45\" = \"ORTH-45\",\n                                     \"TRI-rotate-45\" =  \"TRI-45\",\n                                     \"ORTH-rotate-90\" = \"ORTH-90\",\n                                     \"TRI-rotate-90\" = \"TRI-90\"),\n    ROTATION = recode_factor(pretty_condition, \n                                     \"ORTH-0\" = \"0\",\n                                     \"TRI-0\" = \"0\",\n                                     \"ORTH-45\" = \"45\",\n                                     \"TRI-45\" = \"45\",\n                                     \"ORTH-90\" = \"90\",\n                                     \"TRI-90\" = \"90\"),\n    SHAPE = recode_factor(pretty_condition, \n                                   \"ORTH-0\" = \"ORTH\",\n                                   \"TRI-0\" = \"TRI\",\n                                   \"ORTH-45\" = \"ORTH\",\n                                   \"TRI-45\" = \"TRI\",\n                                   \"ORTH-90\" = \"ORTH\",\n                                   \"TRI-90\" = \"TRI\"\n))\n\n#cleanup\nrm(df_control, df_rotated, df_tri)\n\n\n\n\nValidation\nNext, we validate that we have the complete number of item-level records based on the number of subject-level records\n\n\nCODE\n#confirm only have items for subjects in subjects\nunique(df_items$subject %in% df_subjects$subject)\n\n\n[1] TRUE\n\n\nCODE\n#the number of items should be equal to 15 x the number of subjects\nnrow(df_items) == 15* nrow(df_subjects) #TRUE\n\n\n[1] TRUE\n\n\nCODE\n#each subject should have 15 items\ndf_items %>% group_by(subject) %>% summarise(n = n()) %>% filter(n != 15) %>% nrow() == 0\n\n\n[1] TRUE\n\n\n\n\nExport\nFinally, we export the (session-harmonized) data for analysis, as CSVs, and .RDS (includes metadata)\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4C/data/1-study-level/sgc4c_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4C/data/1-study-level/sgc4c_items.csv\", row.names = FALSE)\n\n#SAVE R Data Structures \n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4C/data/1-study-level/sgc4c_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4C/data/1-study-level/sgc4c_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC4C/2_sgc4C_scoring.html",
    "href": "analysis/SGC4C/2_sgc4C_scoring.html",
    "title": "19  Response Scoring",
    "section": "",
    "text": "TODO\nThe purpose of this notebook is to score (assign a measure of accuracy) to response data for the SGC4C study. This is required because the question type on the graph comprehension task used a ‘Multiple Response’ (MR) question design. Here, we evaluate different approaches to scoring multiple response questions, and transform raw item responses (e.g. boxes ABC are checked) to a measure of response accuracy. (Warning: this notebook takes several minutes to execute.) To review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3."
  },
  {
    "objectID": "analysis/SGC4C/2_sgc4C_scoring.html#score-sgc-data",
    "href": "analysis/SGC4C/2_sgc4C_scoring.html#score-sgc-data",
    "title": "19  Response Scoring",
    "section": "SCORE SGC DATA",
    "text": "SCORE SGC DATA\nTo review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3.\nIn SGC we are fundamentally interested in understanding how a participant interprets the presented graph (stimulus). The graph comprehension task asks them to select the data points in the graph that meet the criteria posed in the question. To assess a participant’s performance, for each question (q=15) we will calculate the following scores:\nAn overall, strict score:\n1. Absolute Score : using dichotomous scoring referencing true (Triangular) answer. (see 1.2)\nSub-scores, for each alternative graph interpretation\n2. Triangular Score : using partial scoring [-1/q, +1/p] referencing true (Triangular) answer key.\n3. Orthogonal Score : using partial scoring [-1/q, +1/p] referencing (incorrect Orthogonal) answer key.\nBased on prior observational studies where we observed emergence of other alternative interpretations (i.e. transitional interpretations) we also calculate subscores for these alternatives.\n4. Tversky Score : using partial scoring [-1/q, +1/p] referencing (incorrect connecting-lines strategy) answer key. 5. Satisficing Score : using partial scoring [-1/q, +1/p] referencing (incorrect satisficing strategy) answer key.\n\nPrepare Answer Keys\nWe start by importing three answer keys: (1) Q1 - Q5 [control condition], (2) Q1-Q5 [impasse condition], (3) Q6-15. Separate answer keys by condition are required for Q1-Q5 because the stimuli for each condition visualize a different underlying dataset (i.e. the graphs show datapoints in different positions). Q6-Q15 are identical across conditions. Each answer key includes a row for each question, and a column defining the subset of response options that correspond to different graph interpretations.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#SAVE KEYS FOR FUTURE USE\nkeys_raw <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_raw\")\nkeys_orth <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_orth\")\nkeys_tri <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tri\")\nkeys_both <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_both\")\nkeys_satisfice_left <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_left\")\nkeys_satisfice_right <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_right\")\nkeys_tversky_duration <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_duration\")\nkeys_tversky_end <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_end\")\nkeys_tversky_max <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_max\")\nkeys_tversky_start <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_start\")\n\n\n\n\nCalculate Subscores\nNext, we import the item-level response data. For each row in the item level dataset (indicating the response to a single question-item for a single subject), we compare the raw response df_items$response with the answer keys in each interpretation (e.g. keys_orth, keys_tri, etc…), then using those sets, determine the number of correctly selected items(p) and incorrectly selected items (q), which in turn are used to calculate partial[-1/q, +1/p] scores for each interpretation. The resulting scores are then stored on each item in df_items, and can be used to determine which graph interpretation the subject held.\nSpecifically, the following scores are calculated for each item:\nInterpretation Subscores\n\nscore_TRI How consistent is the response with the triangularinterpretation?\nscore_ORTH How consistent is the response with the orthogonalinterpretation?\nscore_BOTH How consistent is the response with both the orthogonal and triangular interpretations?\nscore_SATISFICE is calculated by taking the maximum value of :\n\nscore_SAT_left How consistent is the response with the (left side) Satisficing interpretation?\nscore_SAT_right How consistent is the response with the (right side) Satisficing interpretation\n\nscore_TVERSKY is calculated by taking the maximum value of:\n\nscore_TV_max How consistent is the response with the (maximal) Tversky interpretation?\nscore_TV_start How consistent is the response with the (start-time) Tversky interpretation?\nscore_TV_end How consistent is the response with the (end-time) Tversky interpretation?\nscore_TV_duration How consistent is the response with the (duration) Tversky interpretation?\n\nscore_REF Did the response select only the reference point?\n\nAbsolute Scores\n\nscore_ABS Is the response strictly correct? (triangular interpretation)\nscore_niceABS Is the response strictly correct? (triangular interpretation, not penalizing ref points). This is a more generous version of the Absolute score that does not penalize the participant if in addition to the correct answer in addition to they also select the data point referenced in the question.\n\n\n\nCODE\n#HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#backup <- read_rds('analysis/SGC4C/data/1-study-level/sgc4c_items.rds') #for troubleshooting only\ndf_items <- read_rds('analysis/SGC4C/data/1-study-level/sgc4c_items.rds')\n\n#ADD TEMP IMPASSE COLUMN\ndf_items <- df_items %>% mutate(\n  IMPASSE = substr(condition,2,2),\n  IMPASSE = recode_factor(IMPASSE, \"1\"=\"none\", \"2\"=\"IMPASSE\")\n)\n\n\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\nsource(\"analysis/utils/scoring.R\")\n\n\nnote: this cell takes approximately 30 minutes to run on the full df_items dataframe with 4950 records\n\n\nCODE\n#RUN THIS <OR> THE CALCULATE-SCORES-FORLOOP [not both]\n\n#TROUBLESHOOTING\n# backup <- df_items\n# df_items <- backup %>% sample_n(20)\n\n#ALPHEBETIZE RESPONSE\ndf_items$response = pbmapply(reorder_inplace, df_items$response)\n\n#STRATEGY PARTIAL-SUBSCORES\ndf_items$score_TRI = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tri))\n\ndf_items$score_ORTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_orth))\n\ndf_items$score_BOTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_both))\n\ndf_items$score_SAT_left = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_left))\ndf_items$score_SAT_right = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_right))\n\ndf_items$score_TV_max = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_max))\ndf_items$score_TV_start = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_start))\ndf_items$score_TV_end = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_end))\ndf_items$score_TV_duration = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_duration))\n\n#SPECIAL ABSOLUTE SUBSCORES\ndf_items$score_REF = pbmapply(calc_refscore, df_items$q, df_items$response)\n\n#OLD score_BOTH... new one is above (explicitly in key)\n# df_items$score_BOTH = as.integer((df_items$score_TRI == 1) & (df_items$score_ORTH ==1))\n\n#ABSOLUTE SCORES\ndf_items$score_ABS = as.integer(df_items$correct) \ndf_items$score_niceABS  <- as.integer((df_items$score_TRI == 1)) #tri doesn't penalize ref or ve-area\n\n\n\n\nDerive Interpretation\nFinally, we use the interpretation subscores to classify the response as a particular interpretation. This classification algorithm : (1) First decides if the response matches one or more ‘special’ situations (blank response, reference point response, both ORTH and TRI) (2) If response doesn’t match a special situation, it compares the individual subscores, and subscores and decides if they are discriminant (i.e. are the scores different enough to make a prediction). A discriminant threshold of 0.5pts (on a scale from -1 to +1 is used) (2) If the variance in subscores surpasses the threshold, the interpretation is classified based on the highest subscore (TRIANGULAR, ORTHOGONAL, TVERSKY, SATISFICE) (3) If the variance does not surpass the threshold, the interpretation is labelled as “?”, indicating it cannot be classified, and is of an unknown interpretation.\nThe final output is called interpretation.\n\n\nCODE\n#stoopid extra copying for troubleshooting safety\ntemp <- df_items #%>% head(16) %>% tail(1)\ntemp <- derive_interpretation(temp)\n\n\n[1] \"DERIVING INTERPRETATION\"\n\n\nCODE\ndf_items <- temp\n\n\n\n\n? SPECIAL EXCEPTIONS\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nALSO reconciles issues when interpetation == triangular but scoreniceabs = 0 ::: {.cell}\n\nCODE\n# #temp setup for protection\n# backup <- df_items\ntemp <- df_items %>% mutate(\n  override = \"\"\n)\n\n## CONTROL. Q==1. \"FK\" derives as 'TRI', should be tversky start\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==1) & (IMPASSE ==\"none\") & (response == \"FK\"),\n  tv_type = \"score_TV_start\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"TRI\"\n)\n\n## IMPASS Q==2. \"EK\" derives as 'TRI', should be tversky MAX\ntemp <- temp %>% mutate_when(\n  (q==2) & (IMPASSE ==\"IMPASSE\") & (response == \"EK\"),\n  tv_type = \"score_TV_max\",\n  int2 = \"Tversky\", #override from TRI\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n## CONTROL. Q==3. \"A\" derives as 'unknown', should be tversky duration\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"A\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n\n## CONTROL  Q==3 \"AF\" derives as TRI. hardcode as \"both\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"AF\"),\n  int2 = \"both tri + orth\", #override from TRI\n  interpretation = \"both tri + orth\", #override from TRI\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## CONTROL  Q==3 derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response %in% c(\"EFK\",\"FO\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL  Q==3 \"FG\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"FG\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASS  Q==3 \"AF\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE  Q==3 \"AFG\" derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AFG\", \"DF\", \"EFU\", \"DEF\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE  Q==3 \"AH\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n## IMPASSE  Q==3 \"AO\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE  Q==3 \"AOU\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AOU\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## CONTROL Q==4 AH Derives as TRI RECODE as TVERSKY\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"AH\",\"HK\")),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n## CONTROL Q==4  DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"HJ\",\"HJK\") ),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==4 DEU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DEOU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEOU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 KU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"KU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==4 BD Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BD\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 BDEG Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BDEG\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 AFG Derives as SATISFICE RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"?\", #override from Satisfice\n  interpretation = \"?\", #override from Satisfice\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE Q==4 DH Derives as TRI RECODE as BOTH\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"DH\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AU Derives as TRI RECODE as satisfice\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AU\"),\n  int2 = \"Satisfice\", #override from Triangular\n  interpretation = \"Satisfice\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AZ Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AZ\", \"AX\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AFG Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AF Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AO Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"FO\",\"JO\") ),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"HO\",\"FO\",\"DJO\",\"FGKO\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==5 KO Derives as TRI RECODE as tversky_duration\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response == \"KO\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==7 HOX, OX Derives as TRI but incorrect\n#includes H which is at rather than under 5 hours.\n#give credit \ntemp <- temp %>% mutate_when(\n  (q==7)  & (response %in% c(\"HOX\", \"OX\")),\n  score_niceABS = 1\n)\n\n##  Q==7 Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MO\",\"AX\",\"FJOX\",\"IO\")) ,\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==7 Derives as TRI RECODE as tversky\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MOX\", \"MX\", \"DX\",\"O\",\"X\",\"JX\",\"CO\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==8 Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==8)  & (response %in% c(\"FG\",\"CG\",\"CFG\",\"CGM\",\"CM\",\"ACGP\",\"GM\",\n                             \"AGK\", \"ACG\",\"AFGK\",\"GK\", \"AG\", \"CFGO\",\n                             \"BFG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==11 M Derives as TRI MISSING RESPONSE\n##LEAVE AS TRI + OVERRIDE SCORENABS\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"M\",\"L\") ),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==11 BLM Derives as TRI set at both\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response == \"BLM\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at ORTH\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"AGM\")),\n  int2 = \"Orthogonal\",\n  interpretation = \"Orthogonal\", \n  high_interpretation = \"orthogonal\", \n  override = \"Triangular\"\n)\n\n##  Q==11  Derives as TRI set at other\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"EKM\",\"JM\")),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"KL\",\"MOX\",\"CLMP\",\"DKL\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==12 Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==12)  & (response %in% c(\"GP\", \"EG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13 E Derives as TRI but incorrect\n##LEAVE AS TRI + OVERRIDE SCORENABS\n##one of two correct answers\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response == \"E\"),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==13 CE Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"CE\",\"EH\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13  Derives as TRI set at ?\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"EO\",\"EK\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"FX\",\"CX\",\"EFX\", \"OX\", \"JX\", \"EX\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"AX\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\",\n  override = \"Triangular\"\n)\n\n\n##  Q==15 CX Derives as TRI but incorrect \n#within visual margin... give credit\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"CX\",\"KO\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n#  Q==15  Derives as TRI but incorrect \n#missing 1 right answer or within 0.5hr visual error \ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"X\",\"CK\",\"K\",\"GKX\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"DJNX\", \"OX\", \"AK\",\"DNX\", \"AX\",\"ACX\",\n                              \"AGX\",\"CGX\",\"CKX\",\"DKL\",\"GX\",\"GX\",\"HOX\",\n                              \"HX\",\"JNX\")),\n  # tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"AKPX\",\"GK\",\"JX\",\"LX\",\"BK\",\"HK\",\"HNX\",\n                              \"KP\",\"BX\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n#SET BACK\ndf_items <- temp\n\n:::\n\n\nDerive Scaled Score\nThe interpretation response variable gives us the finest grain indication of the reader’s understanding of the graph for a particular question. However, it is a categorical variable, which poses a challenge for analyzing cumulative performance at the subject level. To address this challenge, we derive a scaled_score that converts each possible interpretation to a numeric value on a scale from -1 to +1. This scaling takes advantage of the observation that each interpretation can be positioned along a spectrum of understanding from completely incorrect (orthogonal) to completely correct (triangular). Alternative interpretations lay somewhere between.\nSpecifically, we assign the following values to each interpretation:\n\n(-1) : ORTHOGONAL, SATISFICE (satisfice represents an attempt at an orthogonal answer when none is available)\n(-0.5): ? (some alternative that cannot be identified; but meaningful that it is not orthogonal)\n(0): REFERENCE POINT, BLANK (indicates the individual thinks there is no answer, recognizes that ORTHOGONAL cannot be correct, but does not conceive of triangular)\n(+0.5) TVERSKY, BOTH TRI + ORTH (indicates that they “see” a triangular response, but lack certainty and also select the ORTHOGONAL response)\n(+1) TRIANGULAR +1\n\n\n\nCODE\ndf_items$score_SCALED <- calc_scaled(df_items$interpretation)\n\n\n\n\nDerive State Score\nThe scaled score represents a 5-category ordering of understanding. We also derive a 3-category ordering that gives higher grained access to “orthogonal-like” vs “uncertain” vs “triangle-like” responses.\nSpecifically, we assign the following values to each interpretation:\n\n(orth-like) : orthogonal, satisfice\n(unknown) : unidentified alternatives, blank, both tri&orth, and reference point responses\n(tri-like) : Tverskian and triangular responses\n\n\n\nCODE\ndf_items <- df_items %>% mutate (\n  score_STATE = recode_factor(df_items$score_SCALED,\n                         \"-1\" = \"orth-like\",\n                         \"-0.5\" = \"unknown\",\n                         \"0\" = \"unknown\",\n                         \"0.5\" = \"tri-like\",\n                         \"1\" = \"tri-like\"),\n  score_STATE = as.ordered(score_STATE))"
  },
  {
    "objectID": "analysis/SGC4C/2_sgc4C_scoring.html#summarize-by-subject",
    "href": "analysis/SGC4C/2_sgc4C_scoring.html#summarize-by-subject",
    "title": "19  Response Scoring",
    "section": "SUMMARIZE BY SUBJECT",
    "text": "SUMMARIZE BY SUBJECT\nNext, we summarize the item level scores by subject in order to calculate cummulative subscores to be stored on the subject record.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#import subjects\ndf_subjects <- read_rds('analysis/SGC4C/data/1-study-level/sgc4c_participants.rds') %>% mutate(subject = as.character(subject)) %>% arrange(subject)\n\n#make temporary copies for testing safety\ns = df_subjects\ni = df_items \n\n#summarize\ntest_subs <- summarise_bySubject(s,i)\n\n\n`summarise()` has grouped output by 'subject'. You can override using the\n`.groups` argument.\n\n\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n\n\nCODE\ndf_subjects <- test_subs\n\n\nWe also summarize absolute and scaled score progress at each question in the task, to explore cumulative performance over the task.\n\n\nCODE\n#GET ABSOLUTE PROGRESS \ndf_absolute_progress <- progress_Absolute(df_items)\n\n#GET SCALED PROGRESS\ndf_scaled_progress <- progress_Scaled(df_items)"
  },
  {
    "objectID": "analysis/SGC4C/2_sgc4C_scoring.html#explore-distributions",
    "href": "analysis/SGC4C/2_sgc4C_scoring.html#explore-distributions",
    "title": "19  Response Scoring",
    "section": "EXPLORE DISTRIBUTIONS",
    "text": "EXPLORE DISTRIBUTIONS\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#create temp data frame for visualizations\ndf = df_items %>% filter (q %nin% c(6,9)) %>% mutate(\n  score_niceABS = as.factor(score_niceABS),\n  pretty_interpretation = factor(interpretation,\n    levels = c(\"Orthogonal\", \"Satisfice\", \n               \"frenzy\",\"?\",\n                \"reference\",\"blank\",\n                \"Tversky\", \"both tri + orth\",\n               \"Triangular\" ))\n  )\n\n\n\nAbsolute Score\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE FULL TASK\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (all Items)\",\n        subtitle = paste(\"Impasse Condition (blue) yields more correct responses across the entire task\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY ITEM\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(pretty_condition~q) + \n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields more correct responses on each item\",\n        y = \"Proprition of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY SUBJECT\ngf_props(~s_NABS, fill = ~pretty_condition, position = position_dodge(), data = df_subjects) %>%\ngf_facet_wrap(~pretty_condition)+\n  labs( x = \"Total Absolute Score\",\n        title = \"Distribution of Total Absolute Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher total absolute scores\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE TEST PHASE\ngf_props(~item_test_NABS, fill = ~pretty_condition, \n             data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + \n  labs( x = \"Absolute Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Absolute Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nScaled Score\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#DISTRIBUTION SCALED SCORE FULL TASK\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (all Items)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores across the entire task\",\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY ITEM\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(q~pretty_condition) + \n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores on each item\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  scale_y_continuous(breaks=c(0,0.5)) + \n  theme_minimal() + theme(legend.position=\"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY SUBJECT\ngf_props(~s_SCALED, fill = ~pretty_condition, data = df_subjects)  %>% \n  gf_facet_grid(pretty_condition ~. )+\n  labs( x = \"Total Scaled Score\", \n        title = \"Distribution of Total Scaled Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher cumulative scaled scores\",\n        y = \"Number of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE TEST PHASE\ngf_histogram(~item_test_SCALED, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_grid(SHAPE~ROTATION) + \n  labs( x = \"Scaled Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Scaled Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nInterpretations\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION\ngf_props(~pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition ~ ., labeller = label_both) + \n  labs( title = \"Distribution of Interpretations (across Task)\",\n        x = \"Graph Interpretation\",\n        y = \"Proportion of Responses\",\n        subtitle = \"Impasse condition (blue) yields fewer Orthogonal and more Triangular responses\") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION ACROSS ITEMS\ngf_propsh(~ pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more Triangular responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION TYPE ACROSS ITEMS\ngf_propsh(~ high_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more positive trending responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\nggbarstats( data = df, x = score_STATE, y = pretty_condition)\n\n\n\n\n\nCODE\nggbarstats( data = df, x = high_interpretation, y = pretty_condition)\n\n\n\n\n\n\n\nProgress over Task\n\n\nCODE\ndf_absolute_progress <- df_absolute_progress %>%\n  mutate(\n   pretty_condition = recode_factor(pretty_condition,\n                                     \"control\" = \"ORTH-0\",\n                                     \"Tri-Sparse\" = \"TRI-0\",\n                                     \"ORTH-rotate-45\" = \"ORTH-45\",\n                                     \"TRI-rotate-45\" =  \"TRI-45\",\n                                     \"ORTH-rotate-90\" = \"ORTH-90\",\n                                     \"TRI-rotate-90\" = \"TRI-90\"),\n    ROTATION = recode_factor(pretty_condition,\n                                     \"ORTH-0\" = \"0\",\n                                     \"TRI-0\" = \"0\",\n                                     \"ORTH-45\" = \"45\",\n                                     \"TRI-45\" = \"45\",\n                                     \"ORTH-90\" = \"90\",\n                                     \"TRI-90\" = \"90\"),\n    SHAPE = recode_factor(pretty_condition,\n                                   \"ORTH-0\" = \"ORTH\",\n                                   \"TRI-0\" = \"TRI\",\n                                   \"ORTH-45\" = \"ORTH\",\n                                   \"TRI-45\" = \"TRI\",\n                                   \"ORTH-90\" = \"ORTH\",\n                                   \"TRI-90\" = \"TRI\"\n  ))\n\n\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(SHAPE~ROTATION) + \n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ndf_scaled_progress <- df_scaled_progress %>%\n  mutate(\n   pretty_condition = recode_factor(pretty_condition,\n                                     \"control\" = \"ORTH-0\",\n                                     \"Tri-Sparse\" = \"TRI-0\",\n                                     \"ORTH-rotate-45\" = \"ORTH-45\",\n                                     \"TRI-rotate-45\" =  \"TRI-45\",\n                                     \"ORTH-rotate-90\" = \"ORTH-90\",\n                                     \"TRI-rotate-90\" = \"TRI-90\"),\n    ROTATION = recode_factor(pretty_condition,\n                                     \"ORTH-0\" = \"0\",\n                                     \"TRI-0\" = \"0\",\n                                     \"ORTH-45\" = \"45\",\n                                     \"TRI-45\" = \"45\",\n                                     \"ORTH-90\" = \"90\",\n                                     \"TRI-90\" = \"90\"),\n    SHAPE = recode_factor(pretty_condition,\n                                   \"ORTH-0\" = \"ORTH\",\n                                   \"TRI-0\" = \"TRI\",\n                                   \"ORTH-45\" = \"ORTH\",\n                                   \"TRI-45\" = \"TRI\",\n                                   \"ORTH-90\" = \"ORTH\",\n                                   \"TRI-90\" = \"TRI\"\n  ))\n\n\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(SHAPE~ROTATION) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nInterpretation Subscores\n\n\nCODE\ngf_density(~ s_TRI, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Triangular Score\",\n        subtitle = \"Impasse shifts density toward higher Triagular scores\",\n        x = \"Item Triangular Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_ORTH, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Orthogonal Score\",\n        subtitle = \"Impasse shifts density toward lower Orthogonal scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_TVERSKY, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Tversky Score\",\n        subtitle = \"Impasse shifts density toward higher Tversky scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_histogram(~ s_SATISFICE, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Satisfice Score\",\n        subtitle = \"Satisficing only occurs in impasse, when no orthogonal response is available\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4C/2_sgc4C_scoring.html#peek",
    "href": "analysis/SGC4C/2_sgc4C_scoring.html#peek",
    "title": "19  Response Scoring",
    "section": "PEEK",
    "text": "PEEK\n\n\nCODE\ngrouped_ggbetweenstats( data = df_subjects,\n                x = ROTATION, y = s_NABS, grouping.var = SHAPE,\n                type = \"non-parametric\") \n\n\n\n\n\nCODE\ngrouped_ggbarstats( data = df_items,\n                x = score_niceABS, y = SHAPE, grouping.var = ROTATION,\n                type = \"non-parametric\")"
  },
  {
    "objectID": "analysis/SGC4C/2_sgc4C_scoring.html#explore-responses",
    "href": "analysis/SGC4C/2_sgc4C_scoring.html#explore-responses",
    "title": "19  Response Scoring",
    "section": "EXPLORE RESPONSES",
    "text": "EXPLORE RESPONSES\nIn this section we explore responses given by participants to each particular item in the graph comprehension task, indicate how each response was scored, and what interpretation of the graph is indicated by different responses.\n\n\nCODE\ngf_props(~ score_niceABS, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Item Absolute Score\", title = \"Distribution of Accuracy  | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nSCAFFOLD PHASE\nThe first five questions constitute the ‘scaffold’ (or learning) phase, where participants see a different version of the stimulus (specifically a different dataset is visualized) invoking a different experimental condition.\n\nQuestion #1\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nWe start by exploring the range of response options checked by participants on Question 1.\n\n\n\nFigure 19.1: Question 1 — Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==1)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q1 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q1 Control Condition :  Which shift(s) start at 11 am?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    A \n    OI \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    CF \n    Z \n  \n  \n    Tversky [start diagonal] \n    F \n    Z \n  \n  \n    Tversky [end diagonal] \n    C \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nHere we summarize the distinct response options given by participants on this item. Each letter in response indicates a checkbox selected by the participant (See Figure 22.1 ). n indicates the number of participants who gave this response, while interpretation indicates the graph interpretation most consistent with that response. At the right of this table are the Absolute, followed by Partial Credit subscores for each response. NA indicates that there is no score calculated (occurs when there is no subset of response options that accord with that interpretation for this question).\nNotice that for this Question, the Triangular answer is the same as the Tversky [start diagonal] answer. In fact, for most questions, one of the Tversky sub-types will match the correct response.\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #1 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 1) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 1) %>% \n  # pack_rows(\"Lines-Connect\", 2, 2) %>% \n  # pack_rows(\"Orthogonal\", 3, 3) %>% \n  # pack_rows(\"Other\", 4, 4)  %>% \n  # pack_rows(\"Unknown\", 5, 7)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #1 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    131 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    CF \n    21 \n    Tversky \n    0 \n    0.923 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    C \n    19 \n    Tversky \n    0 \n    -0.077 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    ACE \n    1 \n    Tversky \n    0 \n    -0.231 \n    0.857 \n    NA \n    0.833 \n    0.5 \n  \n  \n    CDF \n    1 \n    Tversky \n    0 \n    0.846 \n    0.917 \n    NA \n    -0.250 \n    0.5 \n  \n  \n    A \n    215 \n    Orthogonal \n    0 \n    -0.077 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AIO \n    4 \n    Orthogonal \n    0 \n    -0.231 \n    -0.214 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AD \n    1 \n    Orthogonal \n    0 \n    -0.154 \n    -0.143 \n    NA \n    0.917 \n    -1.0 \n  \n  \n    AO \n    1 \n    Orthogonal \n    0 \n    -0.154 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n     \n    7 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    X \n    2 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    ACF \n    1 \n    ? \n    0 \n    0.846 \n    0.917 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DE \n    1 \n    ? \n    0 \n    -0.154 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    DIJ \n    1 \n    ? \n    0 \n    -0.231 \n    -0.214 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    DX \n    1 \n    ? \n    0 \n    -0.154 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    -0.154 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    Z \n    1 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQuestion #2\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 19.2: Q2—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==2)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q2 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q2 Control Condition :  Which shift(s) start at the same time as D?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    K \n    Z \n  \n  \n    Orthgonal \n    E \n    G \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AKJX \n    Z \n  \n  \n    Tversky [start diagonal] \n    AK \n    Z \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    J \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #2 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 2) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 2) %>%\n  # pack_rows(\"Lines-Connect\", 3, 4) %>% \n  # pack_rows(\"Orthogonal\", 5, 7) %>%\n  # pack_rows(\"Other\", 8, 8)  %>% \n  # pack_rows(\"Unknown\", 9, 10)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #2 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    K \n    136 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    DK \n    4 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    KZ \n    1 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.167 \n    1.0 \n  \n  \n    J \n    25 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    X \n    18 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AK \n    9 \n    Tversky \n    0 \n    0.917 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    KX \n    3 \n    Tversky \n    0 \n    0.917 \n    0.923 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    CJ \n    2 \n    Tversky \n    0 \n    -0.167 \n    0.923 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    CFJ \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.846 \n    NA \n    -0.250 \n    0.5 \n  \n  \n    EJ \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.923 \n    NA \n    0.917 \n    0.5 \n  \n  \n    E \n    175 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    DE \n    3 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EG \n    2 \n    Orthogonal \n    0 \n    -0.167 \n    -0.154 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    D \n    2 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    12 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    DEHIJO \n    1 \n    frenzy \n    0 \n    -0.417 \n    0.692 \n    NA \n    0.667 \n    -0.5 \n  \n  \n    I \n    5 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    C \n    2 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    U \n    2 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    CD \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    CF \n    1 \n    ? \n    0 \n    -0.167 \n    -0.154 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    DG \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    F \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    UZ \n    1 \n    ? \n    0 \n    -0.083 \n    -0.091 \n    NA \n    -0.167 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQuestion #3\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 19.3: Q3—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==3)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q3 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q3 Control Condition :  Which shift(s) begin when C ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    Z \n    FIO \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AUBFOJ \n     \n  \n  \n    Tversky [start diagonal] \n    OJ \n     \n  \n  \n    Tversky [end diagonal] \n    F \n    Z \n  \n  \n    Tversky [duration line] \n    AUB \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #3 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 3 ) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #3 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    121 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    0.0 \n    1.0 \n  \n  \n    A \n    51 \n    Tversky \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    ABU \n    19 \n    Tversky \n    0 \n    -0.250 \n    1.000 \n    NA \n    -0.3 \n    0.5 \n  \n  \n    JO \n    12 \n    Tversky \n    0 \n    -0.167 \n    1.000 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    O \n    10 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    0.0 \n    0.5 \n  \n  \n    DJ \n    3 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    FG \n    2 \n    Tversky \n    0 \n    0.917 \n    0.917 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    HJ \n    2 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    BU \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.667 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    IO \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    0.0 \n    0.5 \n  \n  \n    J \n    1 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    KO \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    Z \n    134 \n    Orthogonal \n    0 \n    0.000 \n    0.000 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    DUZ \n    1 \n    Orthogonal \n    0 \n    -0.167 \n    0.152 \n    NA \n    0.8 \n    -1.0 \n  \n  \n    EZ \n    1 \n    Orthogonal \n    0 \n    -0.083 \n    -0.083 \n    NA \n    0.9 \n    -1.0 \n  \n  \n    IOZ \n    1 \n    Orthogonal \n    0 \n    -0.167 \n    0.333 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    IZ \n    1 \n    Orthogonal \n    0 \n    -0.083 \n    -0.083 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    JZ \n    1 \n    Orthogonal \n    0 \n    -0.083 \n    0.417 \n    NA \n    0.9 \n    -1.0 \n  \n  \n    OZ \n    1 \n    Orthogonal \n    0 \n    -0.083 \n    0.417 \n    NA \n    1.0 \n    -1.0 \n  \n  \n     \n    12 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    0.0 \n  \n  \n    ABCEGHJKOUXZ \n    1 \n    frenzy \n    0 \n    -0.833 \n    0.273 \n    NA \n    0.1 \n    -0.5 \n  \n  \n    ABDEFGHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    -0.5 \n  \n  \n    U \n    9 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    AH \n    5 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    FO \n    4 \n    ? \n    0 \n    0.917 \n    0.917 \n    NA \n    0.0 \n    -0.5 \n  \n  \n    B \n    3 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    DK \n    3 \n    ? \n    0 \n    -0.167 \n    -0.167 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    E \n    2 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    EU \n    2 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    ADK \n    1 \n    ? \n    0 \n    -0.250 \n    0.152 \n    NA \n    -0.3 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    DE \n    1 \n    ? \n    0 \n    -0.167 \n    -0.167 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    FHZ \n    1 \n    ? \n    0 \n    0.917 \n    0.917 \n    NA \n    0.9 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    0.0 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 17)  \n\n\n\n\nQuestion #4\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 19.4: Q4—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==4)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q4 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q4 Control Condition :  Which shift(s) end at 4 pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    H \n     \n  \n  \n    Orthgonal \n    U \n    OF \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    BH \n     \n  \n  \n    Tversky [start diagonal] \n    B \n     \n  \n  \n    Tversky [end diagonal] \n    H \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #4 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 4) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #4 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    H \n    122 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    B \n    38 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    BH \n    7 \n    Tversky \n    0 \n    0.929 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    ABCU \n    1 \n    Tversky \n    0 \n    -0.286 \n    0.786 \n    NA \n    0.750 \n    0.5 \n  \n  \n    BK \n    1 \n    Tversky \n    0 \n    -0.143 \n    0.929 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    U \n    117 \n    Orthogonal \n    0 \n    -0.071 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    6 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    OU \n    4 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    ACU \n    2 \n    Orthogonal \n    0 \n    -0.214 \n    -0.214 \n    NA \n    0.833 \n    -1.0 \n  \n  \n    FOU \n    2 \n    Orthogonal \n    0 \n    -0.214 \n    -0.214 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AU \n    1 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.917 \n    -1.0 \n  \n  \n    HU \n    2 \n    both tri + orth \n    0 \n    0.929 \n    0.929 \n    NA \n    0.917 \n    0.5 \n  \n  \n     \n    14 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACFHIJKOUXZ \n    1 \n    frenzy \n    0 \n    0.286 \n    0.286 \n    NA \n    0.333 \n    -0.5 \n  \n  \n    DE \n    50 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    D \n    8 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    E \n    8 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    A \n    5 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    K \n    5 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    G \n    3 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    I \n    3 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    F \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    Z \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DEU \n    1 \n    ? \n    0 \n    -0.214 \n    -0.214 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    HJ \n    1 \n    ? \n    0 \n    0.929 \n    0.929 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    HJK \n    1 \n    ? \n    0 \n    0.857 \n    0.857 \n    NA \n    -0.250 \n    -0.5 \n  \n  \n    KU \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    0.917 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 3) %>% \n#   pack_rows(\"Orthogonal\", 4, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 16) \n\n\n\n\nQuestion #5\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 19.5: Q5—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==5)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q5 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q5 Control Condition :  Coffee breaks happen halfway through a shift. Which shift(s) share a break with I?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    O \n    AZ \n  \n  \n    Orthgonal \n    U \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    UGX \n    AZKD \n  \n  \n    Tversky [start diagonal] \n    X \n     \n  \n  \n    Tversky [end diagonal] \n    UG \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #5 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 5) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #5 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    O \n    125 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    AO \n    9 \n    Triangular \n    1 \n    1.000 \n    -0.143 \n    NA \n    -0.154 \n    1.0 \n  \n  \n    IO \n    1 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    X \n    11 \n    Tversky \n    0 \n    -0.091 \n    1.000 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    G \n    6 \n    Tversky \n    0 \n    -0.091 \n    0.500 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    FG \n    3 \n    Tversky \n    0 \n    -0.182 \n    0.417 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    DJX \n    1 \n    Tversky \n    0 \n    -0.273 \n    0.846 \n    NA \n    -0.231 \n    0.5 \n  \n  \n    GU \n    1 \n    Tversky \n    0 \n    -0.182 \n    1.000 \n    NA \n    0.923 \n    0.5 \n  \n  \n    JO \n    1 \n    Tversky \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    U \n    98 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    2 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    HU \n    1 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    IU \n    1 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    KU \n    1 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    I \n    1 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    OU \n    1 \n    both tri + orth \n    0 \n    0.909 \n    0.417 \n    NA \n    0.923 \n    0.5 \n  \n  \n     \n    25 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABCDEFGHJKOUXZ \n    1 \n    frenzy \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    F \n    23 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    J \n    14 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    K \n    14 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    Z \n    14 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    H \n    12 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    A \n    8 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    HJ \n    5 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HK \n    5 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    C \n    4 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    DJ \n    4 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    D \n    3 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    FO \n    3 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    AH \n    2 \n    ? \n    0 \n    -0.091 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    E \n    2 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    AZ \n    1 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    DJK \n    1 \n    ? \n    0 \n    -0.273 \n    -0.143 \n    NA \n    -0.231 \n    -0.5 \n  \n  \n    DK \n    1 \n    ? \n    0 \n    -0.182 \n    0.000 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    EHJK \n    1 \n    ? \n    0 \n    -0.364 \n    -0.308 \n    NA \n    -0.308 \n    -0.5 \n  \n  \n    FGKO \n    1 \n    ? \n    0 \n    0.727 \n    0.250 \n    NA \n    -0.308 \n    -0.5 \n  \n  \n    FH \n    1 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    FZ \n    1 \n    ? \n    0 \n    -0.091 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>% \n#   pack_rows(\"Lines-Connect\", 5, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 9) %>% \n#   pack_rows(\"Other\", 10, 11) %>% \n#   pack_rows(\"Unknown\", 12, 22) \n\n\nTODO note the compelling cases of internal inconsistency (HJDE)\n\n\nQuestion #7\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 19.6: Q7-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==7)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts less than 5 hours long start at the same time?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    OX \n     \n  \n  \n    Orthgonal \n    BF \n    M \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    IJZNCHOX \n     \n  \n  \n    Tversky [start diagonal] \n    OX \n     \n  \n  \n    Tversky [end diagonal] \n    IJZN \n     \n  \n  \n    Tversky [duration line] \n    CH \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #7\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 7) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #7\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    OX \n    129 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    IJ \n    24 \n    Tversky \n    0 \n    -0.125 \n    0.500 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    CH \n    5 \n    Tversky \n    0 \n    -0.125 \n    1.000 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    NZ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.500 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    C \n    2 \n    Tversky \n    0 \n    -0.062 \n    0.500 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    IJNZ \n    2 \n    Tversky \n    0 \n    -0.250 \n    1.000 \n    NA \n    -0.267 \n    0.5 \n  \n  \n    CO \n    1 \n    Tversky \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    CP \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    DX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    HZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    O \n    1 \n    Tversky \n    0 \n    0.500 \n    0.500 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    X \n    1 \n    Tversky \n    0 \n    0.500 \n    0.500 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    BF \n    206 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FZ \n    20 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    BI \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    B \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BJ \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    F \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n     \n    3 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BDFIJMNOXZ \n    1 \n    frenzy \n    0 \n    0.500 \n    0.571 \n    NA \n    0.533 \n    -0.5 \n  \n  \n    BDFJMNOXZ \n    1 \n    frenzy \n    0 \n    0.562 \n    0.562 \n    NA \n    0.600 \n    -0.5 \n  \n  \n    AG \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    AK \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    AX \n    1 \n    ? \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BJO \n    1 \n    ? \n    0 \n    0.375 \n    0.375 \n    NA \n    0.367 \n    -0.5 \n  \n  \n    DN \n    1 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.133 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 5) %>%\n#   pack_rows(\"Lines-Connect\", 6, 9) %>%\n#   pack_rows(\"Orthogonal\", 10, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 17)\n\n\n\n\nQuestion #8\n\n\n\nFigure 19.7: Q8-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==8)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q: \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q:  Which shift(s) under 7 hours long starts before B starts, and ends after X ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    E \n    F \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #8\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 8) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #8\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    77 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.071 \n    1.0 \n  \n  \n    AGK \n    7 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    FG \n    5 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.071 \n    0.5 \n  \n  \n    CG \n    3 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    AG \n    2 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    ACG \n    1 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    AFGK \n    1 \n    Tversky \n    0 \n    0.800 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CFGO \n    1 \n    Tversky \n    0 \n    0.800 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CGM \n    1 \n    Tversky \n    0 \n    0.867 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    CM \n    1 \n    Tversky \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    GK \n    1 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    E \n    141 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EF \n    9 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EIJ \n    7 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EFIJ \n    2 \n    Orthogonal \n    0 \n    -0.267 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EI \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    AE \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    BEF \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EG \n    4 \n    both tri + orth \n    0 \n    0.933 \n    NA \n    NA \n    0.929 \n    0.5 \n  \n  \n     \n    10 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABFGK \n    1 \n    frenzy \n    0 \n    0.800 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    AEFGK \n    1 \n    frenzy \n    0 \n    0.733 \n    NA \n    NA \n    0.786 \n    -0.5 \n  \n  \n    AEFGP \n    1 \n    frenzy \n    0 \n    0.733 \n    NA \n    NA \n    0.786 \n    -0.5 \n  \n  \n    BCEGO \n    1 \n    frenzy \n    0 \n    0.800 \n    NA \n    NA \n    0.786 \n    -0.5 \n  \n  \n    CDGHLNOXZ \n    1 \n    frenzy \n    0 \n    0.533 \n    NA \n    NA \n    -0.571 \n    -0.5 \n  \n  \n    EFGIJ \n    1 \n    frenzy \n    0 \n    0.733 \n    NA \n    NA \n    0.786 \n    -0.5 \n  \n  \n    M \n    25 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    I \n    16 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    J \n    16 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    IJ \n    15 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    F \n    8 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    DN \n    6 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    O \n    6 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    AK \n    5 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    L \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    A \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    DJN \n    3 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    IJM \n    3 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    EFG \n    2 \n    ? \n    0 \n    0.867 \n    NA \n    NA \n    0.929 \n    -0.5 \n  \n  \n    JM \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    BEFG \n    1 \n    ? \n    0 \n    0.867 \n    NA \n    NA \n    0.929 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    DJNX \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    DLN \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    FJ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    HZ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    JN \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    JO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    KL \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    NZ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Orthogonal\", 11, 16) %>%\n#   pack_rows(\"Other\", 17, 21) %>%\n#   pack_rows(\"Unknown\", 22, 45)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #10\n\n\n\nFigure 19.8: Q10-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==10)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    E \n     \n  \n  \n    Orthgonal \n    X \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    EGZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n    E \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #10\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 10) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #10\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    E \n    132 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    EF \n    4 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    43 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    G \n    14 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    CZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    X \n    118 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FX \n    10 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BX \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    0.938 \n    -1.0 \n  \n  \n    F \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    12 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    B \n    38 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    6 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    A \n    5 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IJ \n    5 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    N \n    4 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    O \n    3 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    I \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    L \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    BF \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IL \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>%\n#   pack_rows(\"Lines-Connect\", 3, 7) %>%\n#   pack_rows(\"Orthogonal\", 8, 11) %>%\n#   pack_rows(\"Other\", 12, 14) %>%\n#   pack_rows(\"Unknown\", 15, 27)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #11\n\n\n\nFigure 19.9: Q11-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==11)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at 12pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    ML \n     \n  \n  \n    Orthgonal \n    FB \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #11\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 11) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #11\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    LM \n    160 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.125 \n    1.0 \n  \n  \n    M \n    24 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    L \n    1 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    CLMP \n    1 \n    Tversky \n    0 \n    0.875 \n    NA \n    NA \n    -0.250 \n    0.5 \n  \n  \n    DKL \n    1 \n    Tversky \n    0 \n    0.375 \n    NA \n    NA \n    -0.188 \n    0.5 \n  \n  \n    KL \n    1 \n    Tversky \n    0 \n    0.438 \n    NA \n    NA \n    -0.125 \n    0.5 \n  \n  \n    BF \n    195 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    B \n    7 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BFXZ \n    1 \n    Orthogonal \n    0 \n    -0.250 \n    NA \n    NA \n    0.875 \n    -1.0 \n  \n  \n    EF \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    0.438 \n    -1.0 \n  \n  \n    F \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n     \n    9 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACDGHKLMNOPXZ \n    1 \n    frenzy \n    0 \n    0.312 \n    NA \n    NA \n    -0.812 \n    -0.5 \n  \n  \n    DHLMNOXZ \n    1 \n    frenzy \n    0 \n    0.625 \n    NA \n    NA \n    -0.500 \n    -0.5 \n  \n  \n    DHNOXZ \n    1 \n    frenzy \n    0 \n    -0.375 \n    NA \n    NA \n    -0.375 \n    -0.5 \n  \n  \n    AG \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    CK \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    EIJ \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 9) %>%\n#   pack_rows(\"Other\", 10, 12) %>%\n#   pack_rows(\"Unknown\", 13, 17)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 11)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 11)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #12\n\n\n\nFigure 19.10: Q12-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==12)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    GZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #12\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 12) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #12\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    160 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    FG \n    6 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    11 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    EZ \n    2 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    B \n    208 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    6 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    E \n    14 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Lines-Connect\", 4, 6) %>%\n#   pack_rows(\"Orthogonal\", 7, 8) %>%\n#   pack_rows(\"Other\", 9, 10) %>%\n#   pack_rows(\"Unknown\", 11, 14)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #13\n\n\n\nFigure 19.11: Q13-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==13)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts end when Z begins?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EF \n     \n  \n  \n    Orthgonal \n    FX \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #13\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 13) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #13\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EF \n    123 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    0.433 \n    1.0 \n  \n  \n    E \n    4 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.067 \n    1.0 \n  \n  \n    FX \n    140 \n    Orthogonal \n    0 \n    0.433 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    OX \n    9 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    X \n    8 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BX \n    4 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    JX \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    CX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    KX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    NX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    Z \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    EFX \n    1 \n    both tri + orth \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    0.5 \n  \n  \n     \n    6 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    HN \n    19 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    F \n    17 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    DN \n    11 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BF \n    9 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    HL \n    7 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    N \n    5 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CH \n    4 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FO \n    3 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    BO \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CF \n    2 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    EX \n    2 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    FG \n    2 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    FH \n    2 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    HLP \n    2 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AC \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    AM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BFM \n    1 \n    ? \n    0 \n    0.367 \n    NA \n    NA \n    0.367 \n    -0.5 \n  \n  \n    BIJM \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.267 \n    -0.5 \n  \n  \n    BIO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    BM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CG \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    DI \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    EK \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FN \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    FNZ \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    GO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    LM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    LO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Orthogonal\", 4, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 36)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 13)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 13)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #14\n\n\n\nFigure 19.12: Q14-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==14)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at 3pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    X \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XJND \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    JND \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #14\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 14) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #14\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    X \n    163 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.059 \n    1.0 \n  \n  \n    FX \n    2 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    EX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    JX \n    1 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    B \n    158 \n    Orthogonal \n    0 \n    -0.059 \n    -0.059 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BIO \n    4 \n    Orthogonal \n    0 \n    -0.176 \n    -0.176 \n    NA \n    0.882 \n    -1.0 \n  \n  \n    BO \n    2 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BDI \n    1 \n    Orthogonal \n    0 \n    -0.176 \n    0.200 \n    NA \n    0.882 \n    -1.0 \n  \n  \n    BE \n    1 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BF \n    1 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n     \n    35 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    O \n    7 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    P \n    5 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    F \n    3 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    H \n    3 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    D \n    2 \n    ? \n    0 \n    -0.059 \n    0.333 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    FG \n    2 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    HLP \n    2 \n    ? \n    0 \n    -0.176 \n    -0.176 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    Z \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    AF \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    AX \n    1 \n    ? \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    CDO \n    1 \n    ? \n    0 \n    -0.176 \n    0.200 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    EG \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    GHMP \n    1 \n    ? \n    0 \n    -0.235 \n    -0.235 \n    NA \n    -0.235 \n    -0.5 \n  \n  \n    GK \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    HI \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    HL \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    HZ \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    0 \n    -0.118 \n    0.267 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    LP \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 7) %>%\n#   pack_rows(\"Other\", 8, 9) %>%\n#   pack_rows(\"Unknown\", 10, 22)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 14)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 14)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #15\n\n\n\nFigure 19.13: Q15-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==15)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Coffee breaks happen halfway through a shift. Which shifts share a break at 2pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    XK \n     \n  \n  \n    Orthgonal \n    EF \n    B \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XKZ \n     \n  \n  \n    Tversky [start diagonal] \n    Z \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #15\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 15) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #15\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    KX \n    103 \n    Triangular \n    1 \n    1.000 \n    0.667 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    X \n    17 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    CX \n    6 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    K \n    6 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    KO \n    1 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    FZ \n    8 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    0.433 \n    0.5 \n  \n  \n    OX \n    7 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    AX \n    2 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    Z \n    2 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    ACX \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    AGX \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    AK \n    1 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    CGX \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    CKX \n    1 \n    Tversky \n    0 \n    0.938 \n    0.600 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    DJNX \n    1 \n    Tversky \n    0 \n    0.312 \n    0.133 \n    NA \n    -0.267 \n    0.5 \n  \n  \n    DKL \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    GX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    HOX \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    HX \n    1 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    JNX \n    1 \n    Tversky \n    0 \n    0.375 \n    0.200 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    EF \n    109 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    24 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BF \n    11 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    E \n    11 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BE \n    5 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    FG \n    4 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EI \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    BEF \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    -0.176 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    CF \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EG \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FH \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FI \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    15 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABCFG \n    1 \n    frenzy \n    0 \n    -0.312 \n    -0.294 \n    NA \n    0.300 \n    -0.5 \n  \n  \n    C \n    6 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    B \n    5 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    FX \n    4 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    0.433 \n    -0.5 \n  \n  \n    GK \n    4 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BM \n    3 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CG \n    3 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DN \n    3 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    A \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AC \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    AG \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BX \n    2 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CO \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HL \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    IJ \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    J \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    JX \n    2 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    P \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    BC \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CI \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DJN \n    1 \n    ? \n    0 \n    -0.188 \n    -0.176 \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    EX \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    0.433 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    HN \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    KP \n    1 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Lines-Connect\", 11, 13) %>%\n#   pack_rows(\"Orthogonal\", 14, 22) %>%\n#   pack_rows(\"Other\", 23, 23) %>%\n#   pack_rows(\"Unknown\", 24, 44)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 15)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 15)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nNON-DISCRIMINANT QUESTIONS\n\nQuestion #6 NONDISCRIM\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 19.14: Q6-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==6)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) are six hours long?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EG \n     \n  \n  \n    Orthgonal \n    EG \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\nTODO discuss non discriminant\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #6\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 6) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #6\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EG \n    384 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BCDEFGIJMNOX \n    1 \n    frenzy \n    0 \n    0.375 \n    NA \n    NA \n    0.375 \n    -0.5 \n  \n  \n    EF \n    14 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    0.438 \n    -0.5 \n  \n  \n    E \n    4 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    CGO \n    1 \n    ? \n    0 \n    0.375 \n    NA \n    NA \n    0.375 \n    -0.5 \n  \n  \n    EJM \n    1 \n    ? \n    0 \n    0.375 \n    NA \n    NA \n    0.375 \n    -0.5 \n  \n  \n    F \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    JLM \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n\n\n\n\n\n\n\nQuestion #9 NONDISCRIM\n\n\n\nFigure 19.15: Q9-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==9)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) begins before J begins and ends during B?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    I \n     \n  \n  \n    Orthgonal \n    I \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #9\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q ==9) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #9\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    I \n    301 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    19 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    E \n    32 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    21 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    EI \n    7 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    F \n    6 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    J \n    5 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    B \n    4 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    K \n    4 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AK \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FN \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    MX \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Other\", 1, 2) %>%\n#   pack_rows(\"Unknown\", 3, 19)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4C/2_sgc4C_scoring.html#export",
    "href": "analysis/SGC4C/2_sgc4C_scoring.html#export",
    "title": "19  Response Scoring",
    "section": "EXPORT",
    "text": "EXPORT\n\n\nCODE\ntable(df_subjects$mode, df_subjects$pretty_condition) %>% addmargins()\n\n\n        \n         ORTH-0 TRI-0 ORTH-45 TRI-45 ORTH-90 TRI-90 Sum\n  asynch     68    86      69     61      61     67 412\n  Sum        68    86      69     61      61     67 412\n\n\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4C/data/2-scored-data/sgc4c_scored_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4C/data/2-scored-data/sgc4c_scored_items.csv\", row.names = FALSE)\nwrite.csv(df_absolute_progress,\"analysis/SGC4C/data/2-scored-data/sgc4c_absolute_progress.csv\", row.names = FALSE)\nwrite.csv(df_scaled_progress,\"analysis/SGC4C/data/2-scored-data/sgc4c_scaled_progress.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4C/data/2-scored-data/sgc4c_scored_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4C/data/2-scored-data/sgc4c_scored_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC4C/2_sgc4C_scoring.html#resources",
    "href": "analysis/SGC4C/2_sgc4C_scoring.html#resources",
    "title": "19  Response Scoring",
    "section": "RESOURCES",
    "text": "RESOURCES\nset operations\nhttps://stat.ethz.ch/R-manual/R-devel/library/base/html/sets.html\nkableExtra tables\nhttps://haozhu233.github.io/kableExtra/awesome_table_in_html.html#grouped_columns__rows\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] forcats_0.5.1          stringr_1.4.0          dplyr_1.0.9           \n [4] purrr_0.3.4            readr_2.1.2            tidyr_1.2.0           \n [7] tibble_3.1.7           tidyverse_1.3.1        tidyfst_1.6.5         \n[10] statsExpressions_1.3.2 ggstatsplot_0.9.3      Hmisc_4.7-0           \n[13] Formula_1.2-4          survival_3.3-1         lattice_0.20-45       \n[16] pbapply_1.5-0          ggformula_0.10.1       ggridges_0.5.3        \n[19] scales_1.2.0           ggstance_0.3.5         ggplot2_3.3.6         \n[22] kableExtra_1.3.4      \n\nloaded via a namespace (and not attached):\n  [1] readxl_1.4.0           backports_1.4.1        systemfonts_1.0.4     \n  [4] plyr_1.8.7             splines_4.2.1          gmp_0.6-5             \n  [7] kSamples_1.2-9         TH.data_1.1-1          SuppDists_1.1-9.7     \n [10] digest_0.6.29          htmltools_0.5.2        fansi_1.0.3           \n [13] magrittr_2.0.3         checkmate_2.1.0        memoise_2.0.1         \n [16] paletteer_1.4.0        cluster_2.1.3          openxlsx_4.2.5        \n [19] tzdb_0.3.0             mosaicCore_0.9.0       modelr_0.1.8          \n [22] vroom_1.5.7            sandwich_3.0-2         svglite_2.1.0         \n [25] jpeg_0.1-9             colorspace_2.0-3       rvest_1.0.2           \n [28] ggrepel_0.9.1          haven_2.5.0            xfun_0.31             \n [31] crayon_1.5.1           prismatic_1.1.0        jsonlite_1.8.0        \n [34] zeallot_0.1.0          zoo_1.8-10             glue_1.6.2            \n [37] polyclip_1.10-0        gtable_0.3.0           emmeans_1.7.5         \n [40] webshot_0.5.3          MatrixModels_0.5-0     Rmpfr_0.8-9           \n [43] mvtnorm_1.1-3          DBI_1.1.3              PMCMRplus_1.9.5       \n [46] Rcpp_1.0.8.3           viridisLite_0.4.0      xtable_1.8-4          \n [49] performance_0.9.1      htmlTable_2.4.0        foreign_0.8-82        \n [52] bit_4.0.4              datawizard_0.5.1       htmlwidgets_1.5.4     \n [55] httr_1.4.3             fstcore_0.9.12         RColorBrewer_1.1-3    \n [58] ellipsis_0.3.2         pkgconfig_2.0.3        farver_2.1.0          \n [61] multcompView_0.1-8     nnet_7.3-17            dbplyr_2.2.1          \n [64] utf8_1.2.2             tidyselect_1.1.2       labeling_0.4.2        \n [67] rlang_1.0.3            effectsize_0.7.0       munsell_0.5.0         \n [70] cellranger_1.1.0       tools_4.2.1            cachem_1.0.6          \n [73] cli_3.3.0              generics_0.1.2         broom_0.8.0           \n [76] evaluate_0.15          fastmap_1.1.0          BWStest_0.2.2         \n [79] yaml_2.3.5             rematch2_2.1.2         knitr_1.39            \n [82] bit64_4.0.5            fs_1.5.2               zip_2.2.0             \n [85] xml2_1.3.3             correlation_0.8.1      compiler_4.2.1        \n [88] rstudioapi_0.13        curl_4.3.2             png_0.1-7             \n [91] ggsignif_0.6.3         reprex_2.0.1           tweenr_1.0.2          \n [94] stringi_1.7.6          highr_0.9              parameters_0.18.1     \n [97] Matrix_1.4-1           vctrs_0.4.1            pillar_1.7.0          \n[100] lifecycle_1.0.1        estimability_1.4       data.table_1.14.2     \n[103] insight_0.18.2         patchwork_1.1.1        R6_2.5.1              \n[106] latticeExtra_0.6-29    rio_0.5.29             gridExtra_2.3         \n[109] BayesFactor_0.9.12-4.4 codetools_0.2-18       boot_1.3-28           \n[112] MASS_7.3-57            assertthat_0.2.1       withr_2.5.0           \n[115] multcomp_1.4-19        bayestestR_0.12.1      parallel_4.2.1        \n[118] hms_1.1.1              fst_0.9.8              grid_4.2.1            \n[121] rpart_4.1.16           labelled_2.9.1         coda_0.19-4           \n[124] rmarkdown_2.14         ggforce_0.3.3          lubridate_1.8.0       \n[127] base64enc_0.1-3"
  },
  {
    "objectID": "analysis/SGC4C/4_sgc4C_hypotesting.html",
    "href": "analysis/SGC4C/4_sgc4C_hypotesting.html",
    "title": "20  Hypothesis Testing",
    "section": "",
    "text": "The purpose of this notebook is test the hypotheses that determined the design of the SGC4C study.\nIn SGC4C we set out to answer the following question: Does ROTATING the TM graph improve performance on the interval graph comprehension task? We test this hypothesis on both the orthogonal and triangular axes versions of the graph."
  },
  {
    "objectID": "analysis/SGC4C/4_sgc4C_hypotesting.html#sample",
    "href": "analysis/SGC4C/4_sgc4C_hypotesting.html#sample",
    "title": "20  Hypothesis Testing",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\nData was collected (online, via PROLIFIC) in Summer 2022. Data from the rotation (45, 90) conditions were joined with previously collected (online) data for for non-rotation conditions.\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Condition\",\"Total for Period\")\ncont <- table(df_subjects$pretty_condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols ) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n    Condition \n    Total for Period \n  \n \n\n  \n    ORTH-0 \n    68 \n  \n  \n    TRI-0 \n    86 \n  \n  \n    ORTH-45 \n    69 \n  \n  \n    TRI-45 \n    61 \n  \n  \n    ORTH-90 \n    61 \n  \n  \n    TRI-90 \n    67 \n  \n  \n    Sum \n    412 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.male <- ((df_subjects %>% filter(gender==\"Male\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.female <- ((df_subjects %>% filter(gender==\"Female\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.other <- ((df_subjects %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())/count(df_subjects))$n\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n     \n    18 \n    20 \n    24 \n    37 \n    79 \n    30.3 \n    13.9 \n    412 \n    0 \n    0.408 \n    0.563 \n    0.029 \n  \n\n\nNote:   Age in Years\n\n\n\n\nTODO\nOverall 412 participants (41 % male, 56 % female, 3 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 79 years)."
  },
  {
    "objectID": "analysis/SGC4C/4_sgc4C_hypotesting.html#overall-accuracy",
    "href": "analysis/SGC4C/4_sgc4C_hypotesting.html#overall-accuracy",
    "title": "20  Hypothesis Testing",
    "section": "OVERALL ACCURACY",
    "text": "OVERALL ACCURACY\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% \n  dplyr::select(pretty_condition, accuracy, subject, q, SHAPE, ROTATION )\n\ndf_s <- df_subjects %>% \n  dplyr::select(pretty_condition, task_percent, SHAPE, ROTATION)\n\n\n\n\nVisualize\n\nExplore\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap( q ~ SHAPE) +\n   labs(title = \"Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Q6 and Q9 are non-discriminative\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\ngf_props(~task_percent,\n         fill = ~pretty_condition, data = df_s) %>%\n  gf_facet_grid(SHAPE ~ ROTATION) +\n  labs(x = \"% Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score (% Correct)\",\n       subtitle = \"\") + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nPresent\n\n\nCODE\np <- grouped_ggbetweenstats(data = df_s,\n                       y = task_percent, x = SHAPE, grouping.var = ROTATION,\n               plot.type = \"box\", type = \"nonparametric\", var.equal = FALSE,\n               centrality.type = \"parametric\",\n               results.subtitle = FALSE,\n               centrality.point.args = list(color=\"black\", size = 3, shape = 1),\n               # point.args = list(alpha=0), #suppress points\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  labs(y = \"Percentage of correct responses across task\", x = \"\"),\n                  # aes(color = pretty_condition, fill = pretty_condition),\n                  scale_fill_grey(), scale_color_grey()\n                  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  # scale_fill_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3))\n                  # theme(axis.text.x = element_text(angle = 90)\n                )) \n\np1 <- p[[1]] + coord_flip() + theme_clean() +\n   ggeasy::easy_remove_legend()\n\np2 <- p[[2]] + coord_flip() + theme_clean() +\n   ggeasy::easy_remove_legend()\n\np3 <- p[[3]] + coord_flip() + \n  labs(\n       subtitle = \"Across both Graph Shapes, Partial Rotation improves performance\") + \n  theme_clean() + ggeasy::easy_remove_axes(which = \"x\") + ggeasy::easy_remove_legend()\n\n\npg <- plot_grid(p3, p2, p1, ncol=1)\npg\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = SHAPE,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\", width = 0.75 ) + #,color = \"black\") +\n  scale_fill_foxy(discrete = TRUE, \"accuracy\")  +\n  # scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))+\n  facet_wrap(~ROTATION)+\n  theme(legend.position=\"bottom\")+\n   labs(title = \"DISTRIBUTION | Question Accuracy\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"Across both Graph Shapes, Partial Rotation improves performance\")\n\n\n\n\n\nCODE\n#:::::::: LABELLED \n# \n# temp <- df_i %>% mutate(\n#   accuracy = fct_rev(accuracy)\n# )  \n# \n# #CREATE PLOT WITH LABELS\n# p <- grouped_ggbarstats(data = temp, x = accuracy, y = pretty_condition,\n#                grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                ))  + theme_clean() \n# \n# #FIX LABELS\n# p1 <- p[[1]] +  labs(\n#   subtitle = \"Impasse is particularly effective for subjects with high-working memory\",\n#     x = \"Condition\", y = \"Probability of Response\"\n#   ) + theme_clean() + theme(legend.position = \"blank\") \n#  \n# p2 <-   p[[2]] + labs(\n#     x = \"Condition\", y = \"Probability of Response\",\n#     subtitle = \"   \"\n#   ) + theme_clean() + theme(legend.position = \"blank\") +\n#   ggeasy::easy_remove_axes(which=\"y\", what=c(\"text\",\"title\"))\n#   # ggeasy::easy_remove_axes(which=\"y\", what= \"\"))\n# \n# #CREATE ROW\n# \n# plot_row <- plot_grid(p1,p2, rel_widths = c(1,0.85))\n# \n# title <- ggdraw() + \n#   draw_label(\n#     \"DISTRIBUTION | Question Accuracy\",\n#     fontface = 'bold',\n#     x = 0,\n#     hjust = 0\n#   ) +\n#   theme(\n#     # add margin on the left of the drawing canvas,\n#     # so title is aligned with left edge of first plot\n#     plot.margin = margin(0, 0, 0, 7)\n#   )\n# \n# \n# pg <- plot_grid(\n#   title,\n#   plot_row,\n#   ncol = 1,\n#   # rel_heights values control vertical title margins\n#   rel_heights = c(0.1, 1)\n# ) + theme_clean()\n#   \n# pg\n# ggsave(pg, filename = \"figures/SGC4C_OSPAN_Accuracy.png\", width = 6, height =4)\n\n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct)\"\ntbl1 <- mosaic::favstats(~task_percent, data = df_s) \ntbl1 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0 \n    0 \n    0.154 \n    0.692 \n    1 \n    0.33 \n    0.368 \n    412 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\"\ntbl2 <- mosaic::favstats(task_percent ~ pretty_condition, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\n \n  \n    pretty_condition \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    ORTH-0 \n    0 \n    0.000 \n    0.000 \n    0.154 \n    1 \n    0.163 \n    0.315 \n    68 \n    0 \n  \n  \n    TRI-0 \n    0 \n    0.000 \n    0.077 \n    0.596 \n    1 \n    0.257 \n    0.355 \n    86 \n    0 \n  \n  \n    ORTH-45 \n    0 \n    0.231 \n    0.538 \n    0.846 \n    1 \n    0.507 \n    0.348 \n    69 \n    0 \n  \n  \n    TRI-45 \n    0 \n    0.462 \n    0.692 \n    0.846 \n    1 \n    0.644 \n    0.297 \n    61 \n    0 \n  \n  \n    ORTH-90 \n    0 \n    0.000 \n    0.000 \n    0.154 \n    1 \n    0.173 \n    0.298 \n    61 \n    0 \n  \n  \n    TRI-90 \n    0 \n    0.000 \n    0.077 \n    0.500 \n    1 \n    0.266 \n    0.327 \n    67 \n    0 \n  \n\n\n\n\n\nTODO\nAcross both conditions, overall accuracy on the task ranges from 0 to 100 with a mean of 32.972.\nTask level accuracy on the graph comprehension task follows the same pattern of behaviour observed in Study 4C: the distribution is bimodal. Total scores were higher in the impasse condition (M = 35%, SD = 41%, n = 65) than control condition (M = 15%, SD = 30%, n = 68), implying a likely main effect of scaffold condition. Comparing total scores across the median split on the OSPAN task (high working memory (vs) low working memory), we see readers with high working memory (M = 31 %, SD = 41%, n = 66) performed better than readers with low working memory (M = 19 %, SD = 31%, n = 67). In Figure \\(\\ref{fig_3C_ospan_raw_accuracy}\\) we see that while readers in the impasse condition performed consistently better than those in the control condition, the effect is particularly pronounced for readers with high-working memory, implying a potential interaction between condition and working memory.\n\nTESTS\n\nAligned Ranks Transformation\n\n\n\nCODE\nlibrary(ARTool)\nm.art = art(task_percent ~ SHAPE*ROTATION, data = df_s)\nanova(m.art)\n\n\nAnalysis of Variance of Aligned Rank Transformed Data\n\nTable Type: Anova Table (Type III tests) \nModel: No Repeated Measures (lm)\nResponse: art(task_percent)\n\n                 Df Df.res F value Pr(>F)    \n1 SHAPE           1    406  4.0864   0.04   *\n2 ROTATION        2    406 57.6235 <2e-16 ***\n3 SHAPE:ROTATION  2    406  3.7072   0.03   *\n---\nSignif. codes:   0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n\n\n\n\nKruskal Wallis Test\n\n\nCODE\n(k <- kruskal.test(df_s$task_percent ~ df_s$pretty_condition))\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  df_s$task_percent by df_s$pretty_condition\nKruskal-Wallis chi-squared = 95, df = 5, p-value <2e-16\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STATSPLOT | VIOLIN\ngrouped_ggbetweenstats(y = task_percent, x = SHAPE, grouping.var = ROTATION,  \n               data = df_s, type = \"nonparametric\")\n\n\n\n\n\nCODE\ngrouped_ggbetweenstats(y = task_percent, x = ROTATION, grouping.var = SHAPE,  \n               data = df_s, type = \"nonparametric\")\n\n\n\n\n\n\n\n\nMIXED LOGISTIC REGRESSION\nFit a mixed logistic regression (at the item level), predicting accuracy (absolute score) on all discriminating questions by condition; accounting for random effects of subject and item.\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 13\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy) && is.factor(df_i$ROTATION) && is.factor(df_i$SHAPE)\n\n\n[1] TRUE\n\n\nCODE\n## 1 | SETUP RANDOM EFFECTS\n\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n## 0 | SIMPLE FLAT CONDITION MODEL\n\nprint(\"FIXED Condition + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.CrSQ <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n#summary(mm.CrSQ)\n# car::Anova(mm.CrSQ)\n\n## 2 | ADD MAIN EFFECTS  SHAPE\n\nprint(\"FIXED Rotation + FIXED Shape + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Rotation + FIXED Shape + Subject & Item random intercepts\"\n\n\nCODE\nmm.R.S.rSQ <- glmer(accuracy ~ ROTATION + SHAPE + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n#summary(mm.R.S.rSQ)\n# car::Anova(mm.R.S.rSQ)\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.R.S.rSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.R.S.rSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName       |    Model | df | df_diff |   Chi2 |      p\n------------------------------------------------------\nmm.rSQ     | glmerMod |  3 |         |        |       \nmm.R.S.rSQ | glmerMod |  6 |       3 | 105.93 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rSQ,mm.R.S.rSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  8.24713063077672e-23\"\n\n\nCODE\n#adding shape predictor improves fit\n\n## 3 | ADD INTERACTION TERM,\n\nprint(\"FIXED Rotation * Shape + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Rotation * Shape + Subject & Item random intercepts\"\n\n\nCODE\nmm.RSrSQ <- glmer(accuracy ~ ROTATION * SHAPE  + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# summary(mm.RSrSQ)\n# car::Anova(mm.RSrSQ)\n#INTERACTION TERM IS NOT SIGNIFICANT. \n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.R.S.rSQ)) > AIC(logLik(mm.RSrSQ)) )\n\n\n[1] \"AIC decreases w/ new model FALSE\"\n\n\nCODE\ntest_lrt(mm.R.S.rSQ,mm.RSrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName       |    Model | df | df_diff | Chi2 |     p\n---------------------------------------------------\nmm.R.S.rSQ | glmerMod |  6 |         |      |      \nmm.RSrSQ   | glmerMod |  8 |       2 | 0.18 | 0.914\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.R.S.rSQ,mm.RSrSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.913980259095259\"\n\n\nCODE\npaste(\"Likelihood ratio and AIC indicate that adding interaction term is not justified\")\n\n\n[1] \"Likelihood ratio and AIC indicate that adding interaction term is not justified\"\n\n\nCODE\npaste(\"Model Performance\")\n\n\n[1] \"Model Performance\"\n\n\nCODE\nperformance(mm.R.S.rSQ)\n\n\n# Indices of model performance\n\nAIC      |     AICc |      BIC | R2 (cond.) | R2 (marg.) |   ICC |  RMSE | Sigma | Log_loss | Score_log | Score_spherical\n-------------------------------------------------------------------------------------------------------------------------\n3867.070 | 3867.086 | 3906.586 |      0.796 |      0.195 | 0.746 | 0.280 | 1.000 |    0.253 |      -Inf |           0.002\n\n\nADD TO DISSERTATION\nTo explore the effect of working memory capacity on ACCURACY, we fit a mixed effects logistic regression model with random intercepts for subjects and questions, with SHAPE AND ROTATION as fixed effects A likelihood ratio test indicates that a model including these main effects explains significantly more variance in the data than an intercepts-only baseline model (\\(\\chi^2 (3,6) = 105.93, p < 0.001\\)). We also fit a model including an interaction term between SHAPE and ROTATION, however a likelihood ratio test indicated that adding the interaction term did not improve model fit (\\(\\chi^2 (6,8) = 0.18, p = 0.91\\)) Therefore we chose the simple main effects model (with random intercepts) as the final model.\nThe explanatory power of the entire model is substantial (\\(conditional \\ R^2 = 0.80\\)) and the part related to the fixed effects SHAPE and ROTATION (\\(marginal \\ R^2\\)) explains 20% of variance.\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.R.S.rSQ #MAIN EFFECTS MODEL\nm %>% write_rds(file = \"analysis/SGC4C/models/sgc4c_glmer_acc_mm.R.S.rSQ.rds\")\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ ROTATION + SHAPE + (1 | subject) + (1 | q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n    3867     3907    -1928     3855     5350 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-4.947 -0.252 -0.100  0.281  4.443 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 9.25     3.04    \n q       (Intercept) 0.41     0.64    \nNumber of obs: 5356, groups:  subject, 412; q, 13\n\nFixed effects:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   -4.004      0.431   -9.29   <2e-16 ***\nROTATION45     3.900      0.435    8.97   <2e-16 ***\nROTATION90     0.504      0.436    1.16    0.248    \nSHAPETRI       1.145      0.349    3.28    0.001 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n           (Intr) ROTATION4 ROTATION9\nROTATION45 -0.629                    \nROTATION90 -0.517  0.497             \nSHAPETRI   -0.511  0.124     0.040   \n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=2) #TYPE 3 SS FOR main effects\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n         Chisq Df Pr(>Chisq)    \nROTATION  94.9  2     <2e-16 ***\nSHAPE     10.8  1      0.001 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n# se <- sqrt(diag(stats::vcov(m)))\n# (tab <- cbind(Est = fixef(m),\n#               LL = fixef(m) - 1.96 * se,\n#               UL = fixef(m) + 1.96 * se))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 6 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…   -4.00      0.431     -9.29  1.49e-20   -4.85      -3.16\n2 fixed    <NA>  ROTA…    3.90      0.435      8.97  3.04e-19    3.05       4.75\n3 fixed    <NA>  ROTA…    0.504     0.436      1.16  2.48e- 1   -0.350      1.36\n4 fixed    <NA>  SHAP…    1.15      0.349      3.28  1.02e- 3    0.462      1.83\n5 ran_pars subj… sd__…    3.04     NA         NA    NA          NA         NA   \n6 ran_pars q     sd__…    0.640    NA         NA    NA          NA         NA   \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n# (e <- exp(tab))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 6 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…   0.0182   0.00786     -9.29  1.49e-20  0.00784    0.0424\n2 fixed    <NA>  ROTA…  49.4     21.5          8.97  3.04e-19 21.1      116.    \n3 fixed    <NA>  ROTA…   1.66     0.722        1.16  2.48e- 1  0.704      3.89  \n4 fixed    <NA>  SHAP…   3.14     1.10         3.28  1.02e- 3  1.59       6.22  \n5 ran_pars subj… sd__…   3.04    NA           NA    NA        NA         NA     \n6 ran_pars q     sd__…   0.640   NA           NA    NA        NA         NA     \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#sanity check\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\n# newdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n# preds <- predict(m, newdata = newdata, type = \"response\")\n# preds <- cbind(newdata, preds)\n# p <- preds %>% \n#   dplyr::select(pretty_condition, preds) %>% \n#   group_by(pretty_condition) %>% \n#   summarise(\n#     median = median(preds),\n#     se = sd(preds)/sqrt(n()),\n#     lwr = median - 1.96*se,\n#     upr = median + 1.96*se)\n    \n  \n#FROM merTools\nnewdata <- df_i %>% dplyr::select(ROTATION, SHAPE, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning: executing %dopar% sequentially: no parallel backend registered\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(ROTATION, SHAPE, fit, lwr, upr) %>% \n  group_by(ROTATION, SHAPE) %>% \n  summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 6 × 5\n# Groups:   ROTATION [3]\n  ROTATION SHAPE median   lower  upper\n  <fct>    <fct>  <dbl>   <dbl>  <dbl>\n1 0        ORTH  0.0177 0.00450 0.0672\n2 0        TRI   0.0544 0.0145  0.185 \n3 45       ORTH  0.473  0.187   0.780 \n4 45       TRI   0.743  0.423   0.918 \n5 90       ORTH  0.0293 0.00748 0.108 \n6 90       TRI   0.0877 0.0237  0.275 \n\n\n\n\nINFERENCE\nADD TO DISSERTATION\nAlthough Wald Chi-Square tests revealed significant main effects of both SHAPE (\\(\\chi^2 (1) = 10.8, p < 0.001\\)) and ROTATION (\\(\\chi^2 (1) = 94.9, p < 0.001\\)).\nThe model predicts that, for ORTHOGONAL shaped graphs, rotating the graph from 0 to 45 degrees increases the probability of a correct response from 1% to 47%. Further rotating the graph to 90 degrees however, results in a probability of only 3%. Posthoc comparisons indicate that the difference between 0 and 90 degree rotation is not significant (OR = 0.60, SE = 0.26 , p = 0.24)\nThe model predicts that, for TRIANGULAR shaped graphs, rotating the graph from 0 to 45 degrees increases the probability of a correct response from 5% to 74%. Further rotating the graph to 90 degrees however, results in a probability of only 9%. Posthoc comparisons indicate that the difference between 0 and 90 degree rotation is not significant (OR = 0.60, SE = 0.26 = 0.25).\nAcross both graph shapes, rotating the graph from 0 to 90 degrees results in a minor improvement in accuracy, while rotating the graph halfway between results in a substantial improvement in accuracy. Posthoc comparisons also reveal that across all levels of rotation, the triangular shape was significantly better than the orthogonal shape.\n\n\nMarginal Effects\n\n\nCODE\n# https://cran.r-project.org/web/packages/emmeans/vignettes/interactions.html#simple\n# https://stats.oarc.ucla.edu/stata/faq/how-can-i-understand-a-categorical-by-categorical-interaction-in-logistic-regression-stata-12/\n# https://stats.oarc.ucla.edu/stata/seminars/deciphering-interactions-in-logistic-regression/\n  \nlibrary(emmeans)\n\n#sanity check reference grid\nref_grid(m)\n\n\n'emmGrid' object with variables:\n    ROTATION = 0, 45, 90\n    SHAPE = ORTH, TRI\nTransformation: \"logit\" \n\n\nCODE\n#PRINT ESTIMATED MARGINAL MEANS\n#should be same as summ_preds\nemmeans(m,  ~ ROTATION + SHAPE, type = \"response\")\n\n\n ROTATION SHAPE  prob     SE  df asymp.LCL asymp.UCL\n 0        ORTH  0.018 0.0076 Inf     0.008     0.041\n 45       ORTH  0.474 0.0930 Inf     0.302     0.652\n 90       ORTH  0.029 0.0121 Inf     0.013     0.065\n 0        TRI   0.054 0.0201 Inf     0.026     0.110\n 45       TRI   0.739 0.0734 Inf     0.573     0.857\n 90       TRI   0.087 0.0318 Inf     0.041     0.173\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n\nCODE\n##POST-HOC COMPARISONS\nprint(\"POSTHOC COMPARISONS\")\n\n\n[1] \"POSTHOC COMPARISONS\"\n\n\nCODE\nemmeans(m,  pairwise ~ ROTATION + SHAPE, \n        type = \"response\" , adjust = \"none\") #sidak, tukey\n\n\n$emmeans\n ROTATION SHAPE  prob     SE  df asymp.LCL asymp.UCL\n 0        ORTH  0.018 0.0076 Inf     0.008     0.041\n 45       ORTH  0.474 0.0930 Inf     0.302     0.652\n 90       ORTH  0.029 0.0121 Inf     0.013     0.065\n 0        TRI   0.054 0.0201 Inf     0.026     0.110\n 45       TRI   0.739 0.0734 Inf     0.573     0.857\n 90       TRI   0.087 0.0318 Inf     0.041     0.173\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast                          odds.ratio    SE  df null z.ratio p.value\n ROTATION0 ORTH / ROTATION45 ORTH        0.02  0.01 Inf    1  -8.970  <.0001\n ROTATION0 ORTH / ROTATION90 ORTH        0.60  0.26 Inf    1  -1.160  0.2475\n ROTATION0 ORTH / ROTATION0 TRI          0.32  0.11 Inf    1  -3.280  0.0010\n ROTATION0 ORTH / ROTATION45 TRI         0.01  0.00 Inf    1  -8.550  <.0001\n ROTATION0 ORTH / ROTATION90 TRI         0.19  0.11 Inf    1  -2.900  0.0038\n ROTATION45 ORTH / ROTATION90 ORTH      29.83 13.03 Inf    1   7.780  <.0001\n ROTATION45 ORTH / ROTATION0 TRI        15.71  8.21 Inf    1   5.270  <.0001\n ROTATION45 ORTH / ROTATION45 TRI        0.32  0.11 Inf    1  -3.280  0.0010\n ROTATION45 ORTH / ROTATION90 TRI        9.49  5.08 Inf    1   4.200  <.0001\n ROTATION90 ORTH / ROTATION0 TRI         0.53  0.29 Inf    1  -1.170  0.2413\n ROTATION90 ORTH / ROTATION45 TRI        0.01  0.01 Inf    1  -7.820  <.0001\n ROTATION90 ORTH / ROTATION90 TRI        0.32  0.11 Inf    1  -3.280  0.0010\n ROTATION0 TRI / ROTATION45 TRI          0.02  0.01 Inf    1  -8.970  <.0001\n ROTATION0 TRI / ROTATION90 TRI          0.60  0.26 Inf    1  -1.160  0.2475\n ROTATION45 TRI / ROTATION90 TRI        29.83 13.03 Inf    1   7.780  <.0001\n\nTests are performed on the log odds ratio scale \n\n\nCODE\n##PLOT INTERACTION\n#equivalent to plot_model, type = \"int\"\n# emmip(m, SHAPE * ROTATION ,\n#       type = \"response\",\n#       CIs = TRUE,\n#       linearg = list(linetype = \"dashed\"),\n#       engine = \"ggplot\")\n\n\n##PLOT PROBABILITY\nplot(ref_grid(m), by = \"SHAPE\", type = \"response\")\n\n\n\n\n\n\n\nTODO Print\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# title = \"Study 4C | Question Accuracy | Mixed Logistic Regression\"\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              paste(\"n = \",n_obs(m), \"R^2(Conditional) =\", round(r2(m)[[1]],2),\n#                    \"R^2(Marginal) =\", round(r2(m)[[2]],2)),\n#              \"Accuracy  ~ Condition * OSPAN +  (1 | subject) + (1 | q)\")\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = title,\n#              notes = notes,\n#              output = \"tables/SGC3C_OSPAN_GLMER_OverallAccuracy.tex\")\n#              # coef_omit = \"Intercept\",\n\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n# #SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\", terms = c(\"SHAPE\", \"ROTATION\"))  \n\n\n\n\n\nCODE\nplot_model(m, type = \"eff\",  terms = c(\"SHAPE\", \"ROTATION\"))  \n\n\n\n\n\nCODE\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n#GGDIST | MODEL | PREDICTED PROBABILITIES\n# preds %>% \n#   ggplot(aes( x = fit, y = ROTATION, fill = SHAPE)) + \n#   stat_halfeye(alpha = 0.5, normalize = \"panels\") + \n#   xlim(0,0.3) + theme_clean() + labs(\n#     title = \"Model PREDICTION | Probability of Accurate Response\",\n#     subtitle = \"TODO check preds to see if fixed or includes random\"\n#   )\n\n\n\n\nCODE\n## PLOT INTERACTION\nlibrary(ggeffects)\n\n\n\nAttaching package: 'ggeffects'\n\n\nThe following object is masked from 'package:cowplot':\n\n    get_title\n\n\nThe following object is masked from 'package:modelr':\n\n    data_grid\n\n\nCODE\nggpredict(m, terms = c(\"ROTATION\",\"SHAPE\")) %>% \n  plot(connect.lines = TRUE) + \n  scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 2)) + \n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"ROTATION\"\n) + theme(legend.position=\"bottom\")\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC4C/4_sgc4C_hypotesting.html#overall-interpretation-state",
    "href": "analysis/SGC4C/4_sgc4C_hypotesting.html#overall-interpretation-state",
    "title": "20  Hypothesis Testing",
    "section": "OVERALL INTERPRETATION STATE",
    "text": "OVERALL INTERPRETATION STATE\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular => indicates a correct triangular coordinate understanding\n\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% dplyr::select(q,subject,state,pretty_condition, ROTATION, SHAPE) %>% droplevels()\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = ROTATION,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  facet_wrap(~SHAPE) +\n   labs(title = \"Interpretation across all Questions\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = ROTATION,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  # scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(q ~ SHAPE) +\n   labs(title = \"Interpretation by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\n\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = ROTATION,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_foxy(discrete = TRUE, \"state\")  +\n  facet_wrap(~SHAPE) +\n  labs(title = \"DISTRIBUTION | Interpretation\",\n       x = \"Condition\", y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"\") + theme_clean()\n\n\n\n\n\n\n\nCODE\n#:::::::: LABELLED \n\n# temp <- df_i %>% mutate(\n#   state = fct_rev(state)\n# )  \n# \n# p <-   grouped_ggbarstats(data = temp, x = state, y = pretty_condition,\n#                           grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                ))  + theme_clean() + theme(legend.position = \"bottom\")\n# \n# p <- p + labs(title = \"DISTRIBUTION | Question Accuracy\",\n#          y = \"Proportion of Questions\", x = \"Condition\",\n#          subtitle = \"Impasse condition yields more correct responses\")\n# \n# p\n# # ggsave(p, filename = \"figures/SGC4C_LAB_Accuracy.png\", width = 6, height =4)\n\n\n#:::::::: LABELLED \n# \n# temp <- df_i \n# # %>% mutate(\n# #   accuracy = fct_rev(accuracy)\n# # )\n# \n# #CREATE PLOT WITH LABELS\n# p <- grouped_ggbarstats(data = temp, x = state, y = pretty_condition,\n#                grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                )) \n# \n# #FIX LABELS\n# p1 <- p[[1]] +  labs(\n#   subtitle = \"Impasse is particularly effective for subjects with high-working memory\",\n#     x = \"Condition\", y = \"Probability of Response\"\n#   ) + theme_clean() + theme(legend.position = \"blank\") \n#  \n# p2 <-   p[[2]] + labs(\n#     x = \"Condition\", y = \"Probability of Response\",\n#     subtitle = \"   \"\n#   ) + theme_clean() + theme(legend.position = \"blank\") +\n#   ggeasy::easy_remove_axes(which=\"y\", what=c(\"text\",\"title\"))\n#   # ggeasy::easy_remove_axes(which=\"y\", what= \"\"))\n# \n# #CREATE ROW\n# \n# plot_row <- plot_grid(p1,p2, rel_widths = c(1,0.85))\n# \n# title <- ggdraw() + \n#   draw_label(\n#     \"DISTRIBUTION | Question Accuracy\",\n#     fontface = 'bold',\n#     x = 0,\n#     hjust = 0\n#   ) +\n#   theme(\n#     # add margin on the left of the drawing canvas,\n#     # so title is aligned with left edge of first plot\n#     plot.margin = margin(0, 0, 0, 7)\n#   )\n# \n# \n# pg <- plot_grid(\n#   title,\n#   plot_row,\n#   ncol = 1,\n#   # rel_heights values control vertical title margins\n#   rel_heights = c(0.1, 1)\n# ) + theme_clean()\n#   \n# \n# update_geom_defaults(\"text\", list(colour = \"grey20\", family = theme_get()$text$family))\n# \n# \n# pg\n\n\n# ggsave(pg, filename = \"figures/SGC4C_OSPAN_Accuracy.png\", width = 6, height =4)\n\n\n\n\nDescribe\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             ORTH-0  TRI-0 ORTH-45 TRI-45 ORTH-90 TRI-90    Sum\n  orthogonal 0.6640 0.5572  0.2274 0.0908  0.5195 0.3720 0.4149\n  other      0.1324 0.1351  0.1605 0.1639  0.2106 0.2342 0.1705\n  angular    0.0407 0.0510  0.1048 0.1009  0.0971 0.1274 0.0850\n  triangular 0.1629 0.2567  0.5072 0.6444  0.1728 0.2664 0.3297\n  Sum        1.0000 1.0000  1.0000 1.0000  1.0000 1.0000 1.0000\n\n\nCODE\n(t <- table(df_i$state, df_i$ROTATION, df_i$SHAPE) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n, ,  = ORTH\n\n            \n                0   45   90  Sum\n  orthogonal  587  204  412 1203\n  other       117  144  167  428\n  angular      36   94   77  207\n  triangular  144  455  137  736\n  Sum         884  897  793 2574\n\n, ,  = TRI\n\n            \n                0   45   90  Sum\n  orthogonal  623   72  324 1019\n  other       151  130  204  485\n  angular      57   80  111  248\n  triangular  287  511  232 1030\n  Sum        1118  793  871 2782\n\n\n\n\nMIXED MULTINOMIAL REGRESSION\nDoes condition affect the response state of of items across the task?\nFit a MIXED logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\nFit Model [brms]\n\n\nCODE\n##1. In order to set priors, first fit default priors model, then get prior description\n## in order to get class and dpar names \n\n# FLAT MODEL\n# flat <- brm( state ~ ROTATION+SHAPE + (1|subject) + (1|q),\n#                  data = df_i,\n#                  family = \"categorical\",\n#                  chains = 4, iter = 2000, warmup = 1000,\n#                  cores = 4, seed = 1234,\n#                  save_pars = save_pars(all = TRUE),\n# control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n#                  backend = \"cmdstanr\")\n                 \n# prior_summary(flat)\n\ninf_priors_maineffects <- c(\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  #coefficient level rotation 45\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45\", dpar = \"mutriangular\"),\n  # coefficient level rotation 90\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90\", dpar = \"mutriangular\"),\n  #coeficient level shape tri\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"mutriangular\")\n)\n\n\ninf_priors_ixn <- c(\n  #prior on INTERCEPTS\n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on CONDITION COEFFICIENT\n   #coefficient level rotation 45\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45\", dpar = \"mutriangular\"),\n  # coefficient level rotation 90\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90\", dpar = \"mutriangular\"),\n  #coeficient level shape tri\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"mutriangular\"),\n  #prior on IXN COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45:SHAPETRI\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45:SHAPETRI\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION45:SHAPETRI\", dpar = \"mutriangular\"),\n  \n  #prior on IXN COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90:SHAPETRI\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90:SHAPETRI\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"ROTATION90:SHAPETRI\", dpar = \"mutriangular\")\n)\n\n\n#BAYESIAN RANDOM ONLY\nBmm.cat.rSQ <- brm( state ~ 1 + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC4C/models/sgc4c_brms_state_Bmm.cat.rSQ.rds\")\n\n\n# MAIN EFFECTSONLY MODEL\nBmm.cat.R.SrSQ <- brm( state ~ ROTATION + SHAPE + (1|subject) + (1|q), \n                 data = df_i, \n                 prior = inf_priors_maineffects,\n                 family = \"categorical\",\n                 chains = 4, iter = 4000, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 backend = \"cmdstanr\",\n                 file =\"analysis/SGC4C/models/sgc4c_brms_state_Bmm.cat.R.S.rSQ.rds\")\n\n\n##MODEL COMPARISON\n# print(\"MODEL COMPARISON: random effects (vs) CONDITION\")\n(bf1 <-  bayesfactor(Bmm.cat.rSQ, Bmm.cat.R.SrSQ))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nRecompiling the model with 'rstan'\n\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -mmacosx-version-min=10.13 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include   -fPIC  -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n\n\nRecompilation done\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nBayes Factors for Model Comparison\n\n    Model                                            BF\n[2] ROTATION + SHAPE + (1 | subject) + (1 | q) 2.96e+55\n\n* Against Denominator: [1] 1 + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\n#substantial evidence in favor of conditon model over random only BF 1.64e+16\n\n\n# # INTERACTION MODEL\nBmm.cat.RSrSQ <- brm( state ~ ROTATION*SHAPE + (1|subject) + (1|q),\n                 data = df_i,\n                 prior = inf_priors_ixn,\n                 family = \"categorical\",\n                 chains = 4, iter = 4000, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC4C/models/sgc4c_brms_state_Bmm.cat.RSrSQ.rds\")\n# describe_posterior(Bmm.cat.RSrSQ)\n\n\n##MODEL COMPARISON\nprint(\"IS FACTORIAL better than MAIN EFFECTS model?\")\n\n\n[1] \"IS FACTORIAL better than MAIN EFFECTS model?\"\n\n\nCODE\n(bf2 <- bayesfactor(Bmm.cat.R.SrSQ, Bmm.cat.RSrSQ))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\n\n\nRecompiling the model with 'rstan'\n\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -mmacosx-version-min=10.13 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include   -fPIC  -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n\n\nRecompilation done\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nBayes Factors for Model Comparison\n\n    Model                                            BF\n[2] ROTATION * SHAPE + (1 | subject) + (1 | q) 5.19e-18\n\n* Against Denominator: [1] ROTATION + SHAPE + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\ncompare_models(Bmm.cat.R.SrSQ, Bmm.cat.RSrSQ)\n\n\nPossible multicollinearity between b_muother_ROTATION90:SHAPETRI and b_muother_ROTATION90 (r = 0.71), b_muangular_ROTATION90:SHAPETRI and b_muangular_ROTATION90 (r = 0.72). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nParameter                        |       Bmm.cat.R.SrSQ |        Bmm.cat.RSrSQ\n------------------------------------------------------------------------------\nmuother_Intercept                | -2.61 (-3.51, -1.71) | -2.40 (-3.30, -1.49)\nmuangular_Intercept              | -4.18 (-5.23, -3.14) | -4.06 (-5.18, -2.96)\nmutriangular_Intercept           | -3.72 (-4.66, -2.84) | -3.56 (-4.63, -2.57)\nmuother_ROTATION45               |  2.15 ( 1.71,  2.61) |  1.73 ( 1.13,  2.34)\nmuother_ROTATION90               |  1.23 ( 0.83,  1.65) |  0.95 ( 0.38,  1.55)\nmuother_SHAPETRI                 |  0.66 ( 0.32,  1.01) |  0.26 (-0.31,  0.81)\nmuangular_ROTATION45             |  2.99 ( 2.40,  3.60) |  2.73 ( 1.92,  3.59)\nmuangular_ROTATION90             |  1.58 ( 1.02,  2.16) |  1.40 ( 0.57,  2.25)\nmuangular_SHAPETRI               |  0.92 ( 0.45,  1.41) |  0.67 (-0.13,  1.47)\nmutriangular_ROTATION45          |  4.85 ( 3.95,  5.79) |  4.56 ( 3.33,  5.86)\nmutriangular_ROTATION90          |  0.84 (-0.09,  1.76) |  0.66 (-0.61,  1.97)\nmutriangular_SHAPETRI            |  1.49 ( 0.69,  2.28) |  1.18 (-0.02,  2.35)\nmuangular_ROTATION90:SHAPETRI    |                      |  0.34 (-0.75,  1.45)\nmutriangular_ROTATION90:SHAPETRI |                      |  0.39 (-1.30,  2.05)\nmuother_ROTATION45:SHAPETRI      |                      |  0.94 ( 0.05,  1.84)\nmuother_ROTATION90:SHAPETRI      |                      |  0.53 (-0.28,  1.32)\nmutriangular_ROTATION45:SHAPETRI |                      |  0.76 (-0.95,  2.41)\nmuangular_ROTATION45:SHAPETRI    |                      |  0.59 (-0.56,  1.75)\n------------------------------------------------------------------------------\nObservations                     |                 5356 |                 5356\n\n\nTODO\nTo quantify the effect of working memory capacity on INTERPRETATION, we fit a (bayesian) mixed multinomial regression model with random intercepts for subjects and questions.\nA Bayes Factor model comparison (against a random intercepts only model) indicates extreme evidence for the final model including fixed (main) effects of ROTATION, SHAPE (BF = 1.99e+54). A Bayes Factor model comparison (against a model including an interaction term) indicates extreme evidence in favor of the final model including main effects only (BF = 2.10e-24).\n(note, the BF may change as it is estimated via simulation each time)\n\n\nDescribe\n\n\nCODE\n# best model\nm <- Bmm.cat.R.SrSQ #main effects model\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n Family: categorical \n  Links: muother = logit; muangular = logit; mutriangular = logit \nFormula: state ~ ROTATION + SHAPE + (1 | subject) + (1 | q) \n   Data: df_i (Number of observations: 5356) \n  Draws: 4 chains, each with iter = 4000; warmup = 1000; thin = 1;\n         total post-warmup draws = 12000\n\nGroup-Level Effects: \n~q (Number of levels: 13) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.50      0.35     0.99     2.32 1.00     3402\nsd(muangular_Intercept)        1.66      0.41     1.05     2.63 1.00     4270\nsd(mutriangular_Intercept)     0.72      0.18     0.45     1.16 1.00     4157\n                           Tail_ESS\nsd(muother_Intercept)          6170\nsd(muangular_Intercept)        6662\nsd(mutriangular_Intercept)     6629\n\n~subject (Number of levels: 412) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.39      0.09     1.21     1.58 1.00     4720\nsd(muangular_Intercept)        1.83      0.14     1.57     2.12 1.00     4015\nsd(mutriangular_Intercept)     3.49      0.20     3.12     3.91 1.00     3756\n                           Tail_ESS\nsd(muother_Intercept)          7878\nsd(muangular_Intercept)        7252\nsd(mutriangular_Intercept)     6881\n\nPopulation-Level Effects: \n                        Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nmuother_Intercept          -2.61      0.45    -3.51    -1.71 1.00     2074\nmuangular_Intercept        -4.18      0.53    -5.23    -3.14 1.00     2924\nmutriangular_Intercept     -3.73      0.46    -4.66    -2.84 1.00     2581\nmuother_ROTATION45          2.15      0.23     1.71     2.61 1.00     6650\nmuother_ROTATION90          1.23      0.21     0.83     1.65 1.00     5407\nmuother_SHAPETRI            0.67      0.18     0.32     1.01 1.00     6596\nmuangular_ROTATION45        2.99      0.31     2.40     3.60 1.00     6161\nmuangular_ROTATION90        1.58      0.29     1.02     2.16 1.00     6286\nmuangular_SHAPETRI          0.93      0.24     0.45     1.41 1.00     6395\nmutriangular_ROTATION45     4.85      0.47     3.95     5.79 1.00     2285\nmutriangular_ROTATION90     0.84      0.48    -0.09     1.76 1.00     2432\nmutriangular_SHAPETRI       1.49      0.40     0.69     2.28 1.00     2012\n                        Tail_ESS\nmuother_Intercept           4022\nmuangular_Intercept         4812\nmutriangular_Intercept      4958\nmuother_ROTATION45          8893\nmuother_ROTATION90          8250\nmuother_SHAPETRI            8720\nmuangular_ROTATION45        8189\nmuangular_ROTATION90        8377\nmuangular_SHAPETRI          8544\nmutriangular_ROTATION45     4547\nmutriangular_ROTATION90     4222\nmutriangular_SHAPETRI       3853\n\nDraws were sampled using sample(hmc). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCODE\n(d <- describe_posterior(ci=.95, m))\n\n\nSummary of Posterior Distribution\n\nParameter               | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------\nmuother_Intercept       |  -2.61 | [-3.51, -1.71] |   100% | [-0.18, 0.18] |        0% | 1.003 | 2036.00\nmuangular_Intercept     |  -4.18 | [-5.23, -3.14] |   100% | [-0.18, 0.18] |        0% | 1.000 | 2922.00\nmutriangular_Intercept  |  -3.72 | [-4.66, -2.84] |   100% | [-0.18, 0.18] |        0% | 1.003 | 2578.00\nmuother_ROTATION45      |   2.15 | [ 1.71,  2.61] |   100% | [-0.18, 0.18] |        0% | 1.001 | 6637.00\nmuother_ROTATION90      |   1.23 | [ 0.83,  1.65] |   100% | [-0.18, 0.18] |        0% | 1.001 | 5393.00\nmuother_SHAPETRI        |   0.66 | [ 0.32,  1.01] | 99.98% | [-0.18, 0.18] |        0% | 1.000 | 6588.00\nmuangular_ROTATION45    |   2.99 | [ 2.40,  3.60] |   100% | [-0.18, 0.18] |        0% | 1.000 | 6152.00\nmuangular_ROTATION90    |   1.58 | [ 1.02,  2.16] |   100% | [-0.18, 0.18] |        0% | 1.000 | 6263.00\nmuangular_SHAPETRI      |   0.92 | [ 0.45,  1.41] | 99.99% | [-0.18, 0.18] |        0% | 1.000 | 6382.00\nmutriangular_ROTATION45 |   4.85 | [ 3.95,  5.79] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2276.00\nmutriangular_ROTATION90 |   0.84 | [-0.09,  1.76] | 96.17% | [-0.18, 0.18] |     6.10% | 1.002 | 2427.00\nmutriangular_SHAPETRI   |   1.49 | [ 0.69,  2.28] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2000.00\n\n\nCODE\nprint(\"BAYES FACTOR [comparison to RANDOM ONLY model]\")\n\n\n[1] \"BAYES FACTOR [comparison to RANDOM ONLY model]\"\n\n\nCODE\n#think of this like the anova(model) to get p values for each predictor\n#has to recompile the models with rstan. total drag\n#already calculated bayes factor above, this just interprets it\neffectsize::interpret_bf(exp(bf1$log_BF), include_value = TRUE)\n\n\n[1] \"no evidence (BF = 1.00) against or in favour of\"\n[2] \"extreme evidence (BF = 2.96e+55) in favour of\"  \n(Rules: jeffreys1961)\n\n\nCODE\nprint(\"DESCRIBE POSTERIOR\")\n\n\n[1] \"DESCRIBE POSTERIOR\"\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n(l <- describe_posterior(m))\n\n\nSummary of Posterior Distribution\n\nParameter               | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------\nmuother_Intercept       |  -2.61 | [-3.51, -1.71] |   100% | [-0.18, 0.18] |        0% | 1.003 | 2036.00\nmuangular_Intercept     |  -4.18 | [-5.23, -3.14] |   100% | [-0.18, 0.18] |        0% | 1.000 | 2922.00\nmutriangular_Intercept  |  -3.72 | [-4.66, -2.84] |   100% | [-0.18, 0.18] |        0% | 1.003 | 2578.00\nmuother_ROTATION45      |   2.15 | [ 1.71,  2.61] |   100% | [-0.18, 0.18] |        0% | 1.001 | 6637.00\nmuother_ROTATION90      |   1.23 | [ 0.83,  1.65] |   100% | [-0.18, 0.18] |        0% | 1.001 | 5393.00\nmuother_SHAPETRI        |   0.66 | [ 0.32,  1.01] | 99.98% | [-0.18, 0.18] |        0% | 1.000 | 6588.00\nmuangular_ROTATION45    |   2.99 | [ 2.40,  3.60] |   100% | [-0.18, 0.18] |        0% | 1.000 | 6152.00\nmuangular_ROTATION90    |   1.58 | [ 1.02,  2.16] |   100% | [-0.18, 0.18] |        0% | 1.000 | 6263.00\nmuangular_SHAPETRI      |   0.92 | [ 0.45,  1.41] | 99.99% | [-0.18, 0.18] |        0% | 1.000 | 6382.00\nmutriangular_ROTATION45 |   4.85 | [ 3.95,  5.79] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2276.00\nmutriangular_ROTATION90 |   0.84 | [-0.09,  1.76] | 96.17% | [-0.18, 0.18] |     6.10% | 1.002 | 2427.00\nmutriangular_SHAPETRI   |   1.49 | [ 0.69,  2.28] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2000.00\n\n\nCODE\n# (tm <- tidy(m,   conf.int = TRUE))\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nParameter               | Median |          95% CI |     pd | % in ROPE |  Rhat |     ESS\n-----------------------------------------------------------------------------------------\nmuother_Intercept       |   0.07 | [ 0.03,   0.18] |   100% |        0% | 1.003 | 2036.00\nmuangular_Intercept     |   0.02 | [ 0.01,   0.04] |   100% |        0% | 1.000 | 2922.00\nmutriangular_Intercept  |   0.02 | [ 0.01,   0.06] |   100% |        0% | 1.003 | 2578.00\nmuother_ROTATION45      |   8.59 | [ 5.51,  13.54] |   100% |        0% | 1.001 | 6637.00\nmuother_ROTATION90      |   3.43 | [ 2.28,   5.23] |   100% |        0% | 1.001 | 5393.00\nmuother_SHAPETRI        |   1.94 | [ 1.37,   2.75] | 99.98% |        0% | 1.000 | 6588.00\nmuangular_ROTATION45    |  19.84 | [10.99,  36.70] |   100% |        0% | 1.000 | 6152.00\nmuangular_ROTATION90    |   4.88 | [ 2.77,   8.66] |   100% |        0% | 1.000 | 6263.00\nmuangular_SHAPETRI      |   2.52 | [ 1.57,   4.10] | 99.99% |        0% | 1.000 | 6382.00\nmutriangular_ROTATION45 | 127.28 | [51.81, 326.93] |   100% |        0% | 1.002 | 2276.00\nmutriangular_ROTATION90 |   2.33 | [ 0.91,   5.78] | 96.17% |     6.10% | 1.002 | 2427.00\nmutriangular_SHAPETRI   |   4.42 | [ 1.99,   9.77] |   100% |        0% | 1.002 | 2000.00\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#PREDICT METHOD\nnewdata <- df_i %>% dplyr::select(ROTATION, SHAPE, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n# lengthen data frame to handle multinomial\npreds <- preds %>%\n  dplyr::select(-subject, -q) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = !ROTATION & !SHAPE,\n  values_to = \"preds\",\n  names_to = \"state\",\n)\n\n(p <- preds %>%\n  group_by(ROTATION, SHAPE, state ) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 24 × 7\n# Groups:   ROTATION, SHAPE [6]\n   ROTATION SHAPE state             median      se       lwr    upr\n   <fct>    <fct> <chr>              <dbl>   <dbl>     <dbl>  <dbl>\n 1 0        ORTH  P(Y = angular)    0.0160 0.00219  0.0117   0.0202\n 2 0        ORTH  P(Y = orthogonal) 0.783  0.00995  0.763    0.802 \n 3 0        ORTH  P(Y = other)      0.0741 0.00486  0.0646   0.0836\n 4 0        ORTH  P(Y = triangular) 0.0193 0.00997 -0.000204 0.0389\n 5 0        TRI   P(Y = angular)    0.0237 0.00214  0.0195   0.0279\n 6 0        TRI   P(Y = orthogonal) 0.654  0.00976  0.635    0.673 \n 7 0        TRI   P(Y = other)      0.0820 0.00469  0.0729   0.0912\n 8 0        TRI   P(Y = triangular) 0.0383 0.0101   0.0184   0.0581\n 9 45       ORTH  P(Y = angular)    0.0452 0.00455  0.0363   0.0542\n10 45       ORTH  P(Y = orthogonal) 0.113  0.00853  0.0962   0.130 \n# … with 14 more rows\n\n\nCODE\n##DRAWS METHOD\n# GENERATE draws from model\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC4C/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC4C/models/draws/draws_BB.catCrSQ.rds\")\n# \n# # SUMMARIZE draws from model\n# (k <- kable(draws %>%\n#   dplyr::select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 4, col.names =\n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>%\n#   kable_styling())\n\n\n\n\nTODO INFERENCE\n\n\nBayes Factor\n\nhttps://easystats.github.io/bayestestR/articles/bayes_factors.html\n\nCompute bayes factor for model parameters\n\n\nCODE\n#define null on the log odds scale as the range from -0.4 to 0.4, a 1.5X increase or decrease in odds \n(coef_bf <- bayesfactor(m, null = c(-0.4, 0.4)))\n\n\nSampling priors, please wait...\n\n\nBayes Factor (Null-Interval)\n\nParameter               |       BF\n----------------------------------\nmuother_Intercept       | 3.27e+03\nmuangular_Intercept     | 3.34e+05\nmutriangular_Intercept  | 1.68e+07\nmuother_ROTATION45      | 3.85e+07\nmuother_ROTATION90      | 1.56e+03\nmuother_SHAPETRI        |     2.04\nmuangular_ROTATION45    | 7.83e+09\nmuangular_ROTATION90    | 1.71e+03\nmuangular_SHAPETRI      |     9.60\nmutriangular_ROTATION45 | 1.65e+10\nmutriangular_ROTATION90 |    0.719\nmutriangular_SHAPETRI   |    40.73\n\n* Evidence Against The Null: [-0.400, 0.400]\n\n\nCODE\n#plot bayes factors\nplot(coef_bf)\n\n\n\n\n\nCODE\n#interpretation guidelines\neffectsize::interpret_bf(exp(coef_bf$log_BF), include_value = TRUE)\n\n\n [1] \"extreme evidence (BF = 3.27e+03) in favour of\" \n [2] \"extreme evidence (BF = 3.34e+05) in favour of\" \n [3] \"extreme evidence (BF = 1.68e+07) in favour of\" \n [4] \"extreme evidence (BF = 3.85e+07) in favour of\" \n [5] \"extreme evidence (BF = 1.56e+03) in favour of\" \n [6] \"anecdotal evidence (BF = 2.04) in favour of\"   \n [7] \"extreme evidence (BF = 7.83e+09) in favour of\" \n [8] \"extreme evidence (BF = 1.71e+03) in favour of\" \n [9] \"moderate evidence (BF = 9.60) in favour of\"    \n[10] \"extreme evidence (BF = 1.65e+10) in favour of\" \n[11] \"anecdotal evidence (BF = 1/1.39) against\"      \n[12] \"very strong evidence (BF = 40.73) in favour of\"\n(Rules: jeffreys1961)\n\n\nTODO\nThe model predicts similar probabilities for orthogonal, other, and angular interpretations by high vs. low working memory participants. It is only the (correct) triangular interpretation in which we have evidence for a reliable interaction between OSPAN and CONDITION.\nIt is only the (correct) triangular interpretation in which we have moderate evidence for a reliable interaction between OSPAN and CONDITION ($e^{_{interaction}} = 15.73,   95 %  CI   [0.89, 249.91],  pd = 97.3%, BF = 3.86 $)\nMuch like the pattern of results for accuracy, it is high working memory participants with higher probability of triangular responses, but only in impasse condition.\n\n\nInteractions\n\n\nCODE\n#EMMEANS doesn't support multinomial brms models. BUMMER\n#BUT brms has some built in stuffs. \n\n# FOR MAIN EFFECTS PLOTS \nprint(\"MAIN EFFECTS\")\n\n\n[1] \"MAIN EFFECTS\"\n\n\nCODE\nconditional_effects(m, categorical = TRUE)\n\n\n\n\n\n\n\n\nCODE\nprint(\"INTERACTION PLOT\")\n\n\n[1] \"INTERACTION PLOT\"\n\n\nCODE\nconditions <- make_conditions(m, vars = c(\"SHAPE\"))\nconditional_effects(m, \"ROTATION\", conditions = conditions,\n                    categorical = TRUE)\n\n\n\n\n\nCODE\n# print(\"INTERACTION PLOT\")\n# plot_model(m, type=\"int\")\n\n## MARGINAL EFFECTS\n\n# from easystats \n# library(modelbased)\n# uses emmeans, doesn't support brms categorical \n# estimate_contrasts(m, test = \"bf\", bf_prior = m)\n\n# library(marginaleffects)\n# https://vincentarelbundock.github.io/marginaleffects/articles/brms.html\n## takes a really long time... maybe hangs machine??\n# (mfx <- marginaleffects::marginaleffects(m))\n# summary(mfx)\n\n\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n#model summary doesn't work for brms multinomial\n\n# DOESN'T WORK FOR BRMS\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n# \n# \n# #GET MODEL ESTIMATES\n# t <- as.data.frame(model_parameters(m, exponentiate = TRUE))\n# # \n# # #REFORMAT\n# x <- t %>%\n#   mutate(\n#     Parameter = str_remove_all(Parameter,\"_pretty\"),\n#     Parameter = str_remove_all(Parameter,\"b_mu\"),\n#     Interpretation = word(Parameter, 1, sep = \"_\"),\n#     Interpretation = fct_relevel(Interpretation, levels = c(\"other\",\"angular\",\"triangular\")),\n#     Factor = word(Parameter, 2, sep = \"_\"),\n#     Factor = recode_factor(Factor,\n#                          \"Intercept\" = \"(Intercept)\",\n#                          \"conditionimpasse\" = \"Condition[impasse]\",\n#                          \"ospan\" = \"OSPAN[high-memory]\",\n#                          \"conditionimpasse:ospan\" = \"Condition:OSPAN\"),\n#     Median = round(Median,2),\n#     CI_low = round(CI_low,2),\n#     CI_high = round(CI_high,2),\n#     pd = round(pd,2),\n#     ROPE_Percentage = round(ROPE_Percentage,2)) %>%\n#   arrange(Interpretation) %>%\n#   dplyr::select(-CI, -Rhat, -ESS) %>%\n#   rename( \"%_in_ROPE\"=\"ROPE_Percentage\",\n#   \"(Odds Ratio)\" = \"Median\") %>%\n#   dplyr::select(Interpretation, Factor, `(Odds Ratio)`, CI_low, CI_high, pd, `%_in_ROPE`)\n# \n# # #KNIT\n# title = \"Study 3C (OSPAN) | Question Interpretation | Mixed Multinomial Regression\"\n# tab <- kbl(x, format = \"latex\", caption = title,\n#            booktabs = FALSE) %>% kable_classic() %>%\n# footnote(general = paste(\"Model Interpretation ~ \",b$Model[2], \"Bayes Factor \", format( exp(b$log_BF[2]), digits =2 ) ), footnote_as_chunk = T, general_title = \"\")\n# writeLines(tab, \"tables/SGC3C_OSPAN_BRMS_state.tex\")\n\n\n\n\nVisualize\n\n\nCODE\n## PLOT INTERACTION\nlibrary(ggeffects)\nggpredict(m, terms = c(\"ROTATION\",\"SHAPE\")) %>% \n  plot(connect.lines = TRUE) + \n  scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 2)) + \n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"Condition\"\n) + theme(legend.position=\"bottom\")\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\n\n\n\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, vline.color = \"red\", \n#            show.intercept = TRUE, \n#            show.values = TRUE,\n#            p.threshold = 0.1, #manually adjust to account for directional test\n#            ci.lvl = 0.90 ) + #manually adjusted for directional test   \n#   labs(title = \"Model Estimate | Odds Ratio\",\n#        subtitle = \"\",\n#        x = \"Condition\")\n\n\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(m, exponentiate = TRUE, component = \"all\")\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n# + theme_clean()\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\nPicking joint bandwidth of 0.0392\n\n\nWarning: Removed 14400 rows containing non-finite values (stat_density_ridges).\n\n\n\n\n\nCODE\nresult <- rope(m)\nplot(result)\n\n\n\n\n\nCODE\n##TODO see documentation for removing, reorganizing parameters\nresult <- pd(m, effects = \"fixed\", component = \"all\")\nplot(result, show_intercept = FALSE,\n     n_columns = 3)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n##WORKING\n# https://mjskay.github.io/ggdist/reference/stat_slab.html\n## VIS probability of correct response\n#TAKES A REALLY LONG TIME\n\n#1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, ospan_split, subject, q) %>%\n#   add_epred_draws(m,\n#                    # ndraws = 100, # n = 100,\n#                    # dpar = TRUE,\n#                    transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n\n\n# draws %>% write_rds(file = \"analysis/SGC4C/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n\n#OR load from file\n# draws <- read_rds(file = \"analysis/SGC4C/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n\n#2| VISUALIZE PREDICTIONS | GGDIST\n##TODO figure out height normalization.\n##do it with much smaller number of draws \n#TODO adjust bandwidth/smoothing? + put on same line + \n#TAKES A REAAALY LONG TIME\n# d <- \n\n# d <- draws %>% sample_n(10) %>% \n#   ggplot(aes(x = .epred,  y = pretty_condition, fill = ospan_split)) +\n#   stat_slab(width = c(.95), alpha = 0.5, normalize=\"xy\") +\n#   facet_wrap(~.category) +\n#   #   #normalize = all, panels, xy, groups, none\n#   xlim(0,1) + labs(\n#     title = \"Model Predicted Probability of Correct Response\",\n#     x = \"probability of correct response\",\n#     y = \"Interpretation\"\n#   ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()\n# # \n# # ggsave(d, filename = \"figures/sgc4c_BBm.cat.CrSQ_lab_posterior.svg\", width = 6, height =4)\nd\n\n\nSummary of Posterior Distribution\n\nParameter               | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------\nmuother_Intercept       |  -2.61 | [-3.51, -1.71] |   100% | [-0.18, 0.18] |        0% | 1.003 | 2036.00\nmuangular_Intercept     |  -4.18 | [-5.23, -3.14] |   100% | [-0.18, 0.18] |        0% | 1.000 | 2922.00\nmutriangular_Intercept  |  -3.72 | [-4.66, -2.84] |   100% | [-0.18, 0.18] |        0% | 1.003 | 2578.00\nmuother_ROTATION45      |   2.15 | [ 1.71,  2.61] |   100% | [-0.18, 0.18] |        0% | 1.001 | 6637.00\nmuother_ROTATION90      |   1.23 | [ 0.83,  1.65] |   100% | [-0.18, 0.18] |        0% | 1.001 | 5393.00\nmuother_SHAPETRI        |   0.66 | [ 0.32,  1.01] | 99.98% | [-0.18, 0.18] |        0% | 1.000 | 6588.00\nmuangular_ROTATION45    |   2.99 | [ 2.40,  3.60] |   100% | [-0.18, 0.18] |        0% | 1.000 | 6152.00\nmuangular_ROTATION90    |   1.58 | [ 1.02,  2.16] |   100% | [-0.18, 0.18] |        0% | 1.000 | 6263.00\nmuangular_SHAPETRI      |   0.92 | [ 0.45,  1.41] | 99.99% | [-0.18, 0.18] |        0% | 1.000 | 6382.00\nmutriangular_ROTATION45 |   4.85 | [ 3.95,  5.79] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2276.00\nmutriangular_ROTATION90 |   0.84 | [-0.09,  1.76] | 96.17% | [-0.18, 0.18] |     6.10% | 1.002 | 2427.00\nmutriangular_SHAPETRI   |   1.49 | [ 0.69,  2.28] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2000.00\n\n\n\n\nCODE\n###VISUALIZE\n#make predictions\npred <- predictions(m)\n\n#get draws\ndraws <- posteriordraws(pred)\n\n#plot draws\n\n##PLOT ANGULAR\nggplot(draws %>% sample_n(1000), aes(x = draw, fill = group)) +\n    geom_density(alpha = 0.8, color = \"white\", trim = TRUE) +\n    facet_grid(SHAPE ~ ROTATION) +\n    labs(x = \"Predicted probability\",\n         y = \"Density\",\n         fill = \"INTERPRETATION\")\n\n\n\n\n\nCODE\n## AS DENSITY RIDGES\nggplot(draws %>% sample(100000), aes(x = draw, y = ROTATION, fill = SHAPE)) +\n    geom_density_ridges(alpha = 0.5, rel_min_height = 0.01) +\n    facet_grid(group ~ .) +\n    labs(x = \"Predicted probability\",\n         y = \"Density\")\n\n\nPicking joint bandwidth of 0.0136\n\n\nPicking joint bandwidth of 0.0448\n\n\nPicking joint bandwidth of 0.0296\n\n\nPicking joint bandwidth of 0.0451\n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n#CHECK Fit of posterior predictive to data\npp_check(m, ndraws=1000)\n\n\n\n\n\nCODE\n#CHECK posterior vs. priors\nresult <- estimate_density(m)\nplot(result, stack = FALSE, priors= TRUE)\n\n\n\n\n\nCODE\n#CHECK model\nplot(m)"
  },
  {
    "objectID": "analysis/SGC4C/4_sgc4C_hypotesting.html#cumulative-progress",
    "href": "analysis/SGC4C/4_sgc4C_hypotesting.html#cumulative-progress",
    "title": "20  Hypothesis Testing",
    "section": "CUMULATIVE PROGRESS",
    "text": "CUMULATIVE PROGRESS\n\n\nCODE\n#SETUP\ndf_scaled <- read_csv('analysis/SGC4C/data/2-scored-data/sgc4c_scaled_progress.csv')\n\n\nRows: 5356 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): subject, mode, pretty_condition, SHAPE\ndbl (3): question, score, ROTATION\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCODE\ndf_absolute <- read_csv('analysis/SGC4C/data/2-scored-data/sgc4c_absolute_progress.csv')\n\n\nRows: 5356 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): subject, mode, pretty_condition, SHAPE\ndbl (3): question, score, ROTATION\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nVisualize Progress over Task\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.10, h=0.0), size=0.25) +\n # geom_line( size=1) +\n facet_wrap(SHAPE ~ ROTATION) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n # scale_y_continuous(lim=c(-13,13))+\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_absolute, aes(x = question, y = score, group = subject, alpha = 0.1, color = pretty_condition)) + \n # geom_line(position=position_jitter(w=0.15, h=0.15), size=0.5) +\n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.25) +\n # geom_line( size=1) +\n facet_wrap(SHAPE ~ ROTATION) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n # scale_y_continuous(lim=c(0,13))+\n theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4C/4_sgc4C_hypotesting.html#explore-specific-question-e.g.-q-10",
    "href": "analysis/SGC4C/4_sgc4C_hypotesting.html#explore-specific-question-e.g.-q-10",
    "title": "20  Hypothesis Testing",
    "section": "EXPLORE specific question (e.g. Q 10)",
    "text": "EXPLORE specific question (e.g. Q 10)\n\n\nCODE\ndf <- df_items %>% filter(q==10)\n\ngrouped_ggbarstats( data = df, x = accuracy, y = SHAPE, grouping.var = ROTATION)\n\n\n\n\n\nCODE\ngrouped_ggbarstats( data = df, x = state, y = SHAPE, grouping.var = ROTATION)"
  },
  {
    "objectID": "analysis/SGC4D/1_sgc4D_introduction.html",
    "href": "analysis/SGC4D/1_sgc4D_introduction.html",
    "title": "21  Introduction",
    "section": "",
    "text": "In Study 4D we explore the extent to which the SHAPE and SCALE of the graphical framework of the triangular interval graph influence how a reader interprets its underlying coordinate system.\nNOTE far more triangular isosceles records were collected. We will randomly sample from them in order to level the cells."
  },
  {
    "objectID": "analysis/SGC4D/1_sgc4D_introduction.html#methods",
    "href": "analysis/SGC4D/1_sgc4D_introduction.html#methods",
    "title": "21  Introduction",
    "section": "METHODS",
    "text": "METHODS\n\nDesign\nWe employed a mixed design with 2 between-subjects factors\nSHAPE: orthogonal, triangular\nSCALE: isosceles, equilateral\nRandom Variables:\n\nW-S (Item x 15)\n\nDependent Variables:\n\nResponse Accuracy : Is the response triangular-correct?\nResponse Interpretation : (derived) With which interpretation of the graph is the subject’s response on an individual question consistent?\nResponse Latency : Time from stimulus onset to clicking ‘Submit’ button: time in (s)\n\n\n\nMaterials\nStimuli consisted of a series of 15 graph comprehension questions, each testing a different combination of time interval relations, to be read from a Triangular-Model graph. Figure 21.1. The list of questions can be found here.\n\n\n\nFigure 21.1: Sample Question (Q=1) for Graph Comprehension Task\n\n\n\n\nProcedure\nParticipants completed the study via a web-browser.\n(1) Upon starting, they submitted informed consent, before reading task instructions.\n(2) Participants were introduced to a scenario in which they were to play the role of a project manager, scheduling shifts for a group of employees. The schedule of the employees was presented in a TriangularModel (TM) graph, and they would be answering question about the schedule.\n(3) Then participants completed an experimental block of 15 items : the Graph Comprehension Task\n(4) Following the experimental block, participants answered a free-response question about their strategy for reading the graph, followed by a demographic questionnaire and debrief.\n\n\nSample\nData were collected by convenience sample of a university subject pool during the winter of 2022, and Summer 2022. Participants accessed the study via a web browser (asynchronously). The stimulus application required the participant stay in full-screen mode for the entirety of the study."
  },
  {
    "objectID": "analysis/SGC4D/1_sgc4D_introduction.html#analysis",
    "href": "analysis/SGC4D/1_sgc4D_introduction.html#analysis",
    "title": "21  Introduction",
    "section": "ANALYSIS",
    "text": "ANALYSIS\n\nData Preparation\nData were collected via a custom web application and stored in a NoSQL database. The following exclusion criteria were applied during data cleaning:\n\ncompletion status : “success” ; subject must have finished all parts of the study, including demographic questionnaire\nsession ID: [in list] ; subject must have been assigned to valid data collection session (discard testing and piloting data)\nbrowser interaction violations < 3; subject must have fewer than 3 violations of non-allowed browser interactions (i.e. resizing window, leaving browser tab or leaving fullscreen mode)\nself-rated effort > 2; subjects who reported, “not trying hard/rushing through questions” or “started out trying hard but giving up at some point” were excluded from analysis.\nattention check ==TRUE ; subjects who failed to answer a mid-study attention check question (Graph Comprehension Task Question #6) are excluded\n\nThe underlying data structure of the stimulus web application changed across the data collection period, resulting in slightly different data files (i.e. columns are not named consistently). In this section, we combine the files from each data collection period into a single harmonized data file for analysis (one for participants, one for items).\n\nParticipants\nFirst we import participant-level data, selecting only the columns relevant for analysis. The result is a single data frame df_subjects containing one row for each subject (across all periods). Note that we are not discarding any response data. Rather, we discard columns that are automatically recorded by the stimulus web application and help the application run.\nNote that we discard some columns representing scores calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. No raw data (responses and response times) are discarded, only algorithmically-derived scores for the responses.\nNOTE: Data collected for equilateral conditions are joined with data collected for SGC3A (orth-isosceles, non-impasse) and triangular-isosceles collected under the study code SGC4A (study naming scheme was subsequently changed).\n\n\nCODE\n#IMPORT PARTICIPANT DATA FOR CONDITIONS 111 AND 113 \n\n#set datafiles\nfall17 <- \"analysis/SGC4A/data/0-session-level/fall17_sgc4a_participants.csv\"\nspring18 <- \"analysis/SGC4A/data/0-session-level/spring18_sgc4a_participants.csv\"\nwinter22 <- \"analysis/SGC4A/data/0-session-level/winter22_sgc4a_participants.rds\"\nsummer22 <- \"analysis/SGC4A/data/0-session-level/su22_sgc4a_participants.rds\"\nsummer4d <- \"analysis/SGC4D/data/0-session-level/sgc4d_participants.rds\"\n\n#LOAD DATAFILES\n#read datafiles, set mode and term\ndf_subjects_fall17 <- read_csv(fall17) %>% mutate(mode = \"lab-synch\", term = \"fall17\") %>% filter(condition %in% c(111,113))\ndf_subjects_spring18 <- read_csv(spring18) %>% mutate(mode = \"lab-synch\", term = \"spring18\") %>% filter(condition %in% c(111,113))\ndf_subjects_winter22 <- read_rds(winter22) %>% filter(condition %in% c(111,113))#use RDS file as it contains metadata\ndf_subjects_summer22 <- read_rds(summer22) %>% filter(condition %in% c(111,113))#use RDS file as it contains metadata\ndf_subjects_summer4d <- read_rds(summer4d) \n\n#SAVE METADATA FROM WINTER AS TEMPLATE, but no rows \ndf_subjects <- df_subjects_summer22 %>% filter(condition=='X') %>% \n  dplyr::select(\n  subject,condition,pretty_condition, term,mode,\n  gender,age,language, schoolyear, country, disability,\n  effort, difficulty, confidence, enjoyment,other,\n  totaltime_m, \n  # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n  #exploratory factors\n  violations, browser, width, height\n)\n\n#reduce data collected using OLD webapp to useful columns\ndf_subjects_before <- rbind(df_subjects_fall17, df_subjects_spring18) %>% \n  #rename and summarize some columns\n  mutate(\n    totaltime_m = totalTime / 1000 / 60,  \n    absolute_score = triangular_score,\n    language = native_language,\n    gender = sex,\n    schoolyear = year) %>% \n  #create placeholders for cols not collected until NEW webapp [for later rbind]\n  mutate(\n    condition = as.factor(condition),\n    pretty_condition = \"NULL\",\n    effort = \"NULL\",\n    difficulty = \"NULL\",\n    confidence = \"NULL\",\n    enjoyment = \"NULL\",\n    other = \"NULL\",\n    disability = \"NULL\",\n    violations = \"NULL\",\n    browser = \"NULL\",\n    width = \"NULL\",\n    height = \"NULL\"\n  ) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select(subject, condition, pretty_condition, term, mode, \n                #demographics\n                gender, age, language, schoolyear, country,\n                #placeholder effort survey\n                effort, difficulty, confidence, enjoyment, \n                #placeholder misc \n                other, disability,\n                #response characteristics\n                totaltime_m, \n                # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                #exploratory factors\n                violations, browser, width, height)\n\n\n\n#save 'explanation' columns from winter22, which is actually a response to a free response item (Q16); was recorded with item_level data in old webapp\ndf_winter22_q16 <- df_subjects_winter22 %>% \n  dplyr::select(subject, condition, pretty_condition, term , mode, explanation) %>% \n  mutate(\n    q = 16,\n    response = explanation\n  ) %>% dplyr::select(-explanation)\n\n#reduce data collected using NEW webapp to useful columns\ndf_subjects_winter22 <- df_subjects_winter22 %>% \n  mutate(score = absolute_score) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, pretty_condition, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m, \n                 # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                 #exploratory factors \n                 violations, browser, width, height)\n\n#reduce data collected using NEW webapp to useful columns\ndf_subjects_summer22 <- df_subjects_summer22 %>% \n  mutate(score = absolute_score) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, pretty_condition, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m, \n                 # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                 #exploratory factors \n                 violations, browser, width, height)\n\n#reduce data collected using NEW webapp to useful columns\ndf_subjects_summer4d <- df_subjects_summer4d %>% \n  mutate(score = absolute_score) %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, pretty_condition, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m, \n                 # absolute_score, #drop absolute score as this is re-scored [though should be the same]\n                 #exploratory factors \n                 violations, browser, width, height)\n\neffort_labels <- c(\"I tried my best on each question\", \"I tried my best on most questions\")\n\n#compare dataframe columns\n# janitor::compare_df_cols(df_subjects, df_subjects_winter22, df_subjects_before)\n\n#combine ADD DATAFRAMES\ndf_subjects <- rbind(df_subjects, df_subjects_winter22, df_subjects_summer22, df_subjects_before, df_subjects_summer4d) %>% \n  #refactor factors\n  mutate (\n    subject = factor(subject),\n    condition = factor(condition),\n    pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\"),\n    term = factor(term, levels= c(\"fall17\",\"spring18\",\"fall21\",\"winter22\",\"summer22\")),\n    mode = factor(mode, levels=c(\"lab-synch\",\"asynch\")),\n    gender = factor(gender),\n    schoolyear = factor(schoolyear, levels=c(\"First\",\"Second\",\"Third\",\"Fourth\",\"Fifth\",\"Other\"))\n  )\n\n#FIX METADATA\n#Add metadata for columns that lost it [factors, for some reason!]\nvar_label(df_subjects$subject) <- \"ID of subject (randomly assigned in stimulus app).\"\nvar_label(df_subjects$condition) <- \"ID indicates randomly assigned condition (111 -> control, 121 -> impasse).\"\nvar_label(df_subjects$term) <- \"indicates if session was run with experimenter present or asynchronously\"\nvar_label(df_subjects$mode) <- \"indicates mode in which the participant completed the study\"\nvar_label(df_subjects$gender) <- \"What is your gender identity?\"\nvar_label(df_subjects$schoolyear) <- \"What is your year in school?\"\n\n#REFACTOR CONDITIONS\ndf_subjects <- df_subjects %>% mutate(\n  pretty_condition = recode_factor(condition,\n                                   \"111\" = \"Orth-Isosceles\",\n                                   \"113\" = \"Tri-Isosceles\",\n                                   \"11111112\" = \"Orth-Equilateral\",\n                                   \"11311112\" = \"Tri-Equilateral\"\n    ),\n  SHAPE = recode_factor(condition, \n            \"111\"=\"ORTH\",\n            \"113\"=\"TRI\",\n            \"11111112\" = \"ORTH\",\n            \"11311112\" = \"TRI\"\n            ),\n  SCALE = recode_factor(condition,\n            \"111\"=\"isosceles\",\n            \"113\"=\"isosceles\",\n            \"11111112\" = \"equilateral\",\n            \"11311112\" = \"equilateral\"\n            ),\n    pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\")\n) \n\n#CLEANUP\nrm(df_subjects_fall17, df_subjects_spring18, df_subjects_winter22,df_subjects_before, df_subjects_summer22, df_subjects_summer4d)\nrm(fall17,spring18,winter22, summer22, summer4d)\n\n\n\n### Power\n# \n# library(lme4)\n# library(simr)\n# \n# table(df_subjects$condition)\n# table(df_items$condition)\n# \n# winter <- df_subjects %>% filter(term==\"winter22\")\n# table(winter$condition)\n# \n# other <- df_subjects %>% filter(condition != \"113\")\n# test <- rbind(other,winter)\n# table(test$condition)\n# \n# df_i <- df_items %>% filter( subject %in% test$subject) %>% mutate(\n#   subject =as.factor(subject),\n#   q = as.factor(q),\n#   AXES = recode_factor(condition, \n#             \"111\"=\"orth\", \n#             \"113\"=\"tri\",\n#             \"11111112\" = \"orth\",\n#             \"11311112\" = \"tri\"\n#             ),\n#   SHAPE = recode_factor(condition, \n#             \"111\"=\"iso\", \n#             \"113\"=\"iso\",\n#             \"11111112\" = \"equal\",\n#             \"11311112\" = \"equal\"\n#             )\n# )\n\n\n\n\nItems\nNext we import item-level data from each data collection period, selecting only the columns relevant for analysis. The result is a single data frame df_items containing one row for each graph comprehension task question (qs=15) (across all periods). A second data frame df_freeresponse contains one row for each free response strategy question (last question posed to participants in Winter2022) Note that we do not discard any response data. Rather, we do discard several columns representing accuracy scores for responses that were calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. Original response data are always preserved.\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # #mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#set datafiles\nfall17 <- \"analysis/SGC4D/data/0-session-level/fall17_sgc4a_blocks.csv\"\nspring18 <- \"analysis/SGC4D/data/0-session-level/spring18_sgc4a_blocks.csv\"\nwinter22 <- \"analysis/SGC4D/data/0-session-level/winter22_sgc4a_items.rds\"\nsummer22 <- \"analysis/SGC4D/data/0-session-level/su22_sgc4a_items.rds\"\nsummer4d <- \"analysis/SGC4D/data/0-session-level/sgc4d_items.rds\"\n\n#read datafiles, set mode and term\ndf_items_fall17 <- read_csv(fall17) %>% mutate(mode = \"lab-synch\", term = \"fall17\") %>% filter(condition %in% c(111,113))\ndf_items_spring18 <- read_csv(spring18) %>% mutate(mode = \"lab-synch\", term = \"spring18\")%>% filter(condition %in% c(111,113))\ndf_items_winter22 <- read_rds(winter22) %>% filter(condition %in% c(111,113))#use RDS file as it contains metadata\ndf_items_summer22 <- read_rds(summer22)%>% filter(condition %in% c(111,113)) #use RDS file as it contains metadata\ndf_items_summer4d <- read_rds(summer4d) #use RDS file as it contains metadata\n\n#get mapping being question # and interval relation the question tests, that is encoded only in the winter22 data files\nmap_relations <- df_items_winter22 %>% group_by(q) %>% dplyr::select(q,relation) %>% unique()\n\n#SAVE METADATA FROM WINTER, but no rows \ndf_items <- df_items_winter22 %>% filter(condition=='X') %>% dplyr::select(\n  subject,condition,term,mode,\n  question, q, answer, correct, rt_s\n) \n\n#reduce data collected using old webapp\ndf_items_before <- rbind(df_items_fall17, df_items_spring18) %>% \n  mutate(rt_s = rt / 1000, correct = as.logical(correct)) %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) \n  \n#reduce data collected using new webapp\ndf_items_winter22 <- df_items_winter22 %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  )\n\ndf_items_summer22 <- df_items_summer22 %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  )\n\ndf_items_summer4d <- df_items_summer4d %>% \n  dplyr::select(subject, condition, term, mode, question, q, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  )\n\n\n#combine dataframes from old and new webapps\ndf_items <- rbind(df_items, df_items_winter22, df_items_summer22, df_items_before, df_items_summer4d) %>% \n  #refactorize columns\n  mutate(\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term, levels= c(\"fall17\",\"spring18\",\"fall21\",\"winter22\",\"summer22\")),\n    mode = factor(mode, levels=c(\"lab-synch\",\"asynch\")),\n    q = as.integer(q)) %>% \n  #rename answer column to RESPONSE \n  rename(response = answer) %>% \n  #remove all commas and make as character string\n  mutate(\n    response = str_remove_all(as.character(response), \",\"),\n    num_o = str_length(response)\n  ) %>% \n  # handle NA values (why are some empty responses blank and others NA?) \n  mutate(\n    response = replace_na(response, \"\"),\n    num_o = replace_na(num_o, 0)\n  )\n\n\n#FIX METADATA\n#Add metadata for columns that lost it [factors, for some reason!]\nvar_label(df_items$subject) <- \"ID of subject (randomly assigned in stimulus app).\"\nvar_label(df_items$condition) <- \"ID indicates randomly assigned condition (111 -> control, 121 -> impasse).\"\nvar_label(df_items$term) <- \"indicates if session was run with experimenter present or asynchronously\"\nvar_label(df_items$mode) <- \"indicates mode in which the participant completed the study\"\nvar_label(df_items$q) <- \"Question Number (in order)\"\nvar_label(df_items$correct) <- \"Is the response (strictly) correct? [dichotomous scoring]\"\nvar_label(df_items$response) <- \"options (datapoints) selected by the subject\"\nvar_label(df_items$num_o) <- \"number of options selected by the subject\"\n\n#HANDLE FREE RESPONSE QUESTION #16 \n#save `free response` Q#16 in its own dataframe\ndf_freeresponse <- df_items %>% filter(q == 16) %>% dplyr::select(-question,-correct,-rt_s,-num_o)\n#add data from wi22 [stored on subject data]\ndf_winter22_q16 <- df_winter22_q16 %>% dplyr::select(-pretty_condition)\ndf_freeresponse <- rbind(df_freeresponse, df_winter22_q16)\n#add question description\ndf_freeresponse <- df_freeresponse %>% mutate(\n    question = \"Please describe how to determine what event(s) start at 12pm?\",\n    response = as.character(response) #doesn't need to be factor\n  ) \n#remove 'free response' Q#16 from df_items\ndf_items <- df_items %>% filter (q != 16)\n\n#REFACTOR CONDITIONS\ndf_items <- df_items %>% mutate(\n  pretty_condition = recode_factor(condition,\n                                   \"111\" = \"Orth-Isosceles\",\n                                   \"113\" = \"Tri-Isosceles\",\n                                   \"11111112\" = \"Orth-Equilateral\",\n                                   \"11311112\" = \"Tri-Equilateral\"\n    ),\n    SHAPE = recode_factor(condition, \n            \"111\"=\"ORTH\",\n            \"113\"=\"TRI\",\n            \"11111112\" = \"ORTH\",\n            \"11311112\" = \"TRI\"\n            ),\n    SCALE = recode_factor(condition,\n            \"111\"=\"isosceles\",\n            \"113\"=\"isosceles\",\n            \"11111112\" = \"equilateral\",\n            \"11311112\" = \"equilateral\"\n            ),\n    pretty_mode = recode_factor(mode, \"lab-synch\" = \"laboratory\", \"asynch\" =  \"online-replication\")\n) \n\n#CLEANUP\nrm(df_items_fall17, df_items_spring18, df_items_winter22, df_items_before, df_winter22_q16, df_items_summer22, df_items_summer4d)\nrm(fall17,spring18,winter22, map_relations, summer22, summer4d)\n\n\n\n\nValidation\nNext, we validate that we have the complete number of item-level records based on the number of subject-level records\n\n\nCODE\n#the number of items should be equal to 15 x the number of subjects\nnrow(df_items) == 15* nrow(df_subjects) #TRUE\n\n\n[1] TRUE\n\n\nCODE\n#each subject should have 15 items\ndf_items %>% group_by(subject) %>% summarise(n = n()) %>% filter(n != 15) %>% nrow() == 0\n\n\n[1] TRUE\n\n\n\n\nExport\nFinally, we export the (session-harmonized) data for analysis, as CSVs, and .RDS (includes metadata)\n\n\nCODE\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4D/data/1-study-level/sgc4d_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4D/data/1-study-level/sgc4d_items.csv\", row.names = FALSE)\nwrite.csv(df_freeresponse,\"analysis/SGC4D/data/1-study-level/sgc4d_freeresponse.csv\", row.names = FALSE)\n\n#SAVE R Data Structures \n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4D/data/1-study-level/sgc4d_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4D/data/1-study-level/sgc4d_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC4D/2_sgc4D_scoring.html",
    "href": "analysis/SGC4D/2_sgc4D_scoring.html",
    "title": "22  Response Scoring",
    "section": "",
    "text": "The purpose of this notebook is to score (assign a measure of accuracy) to response data for the SGC4D study. This is required because the question type on the graph comprehension task used a ‘Multiple Response’ (MR) question design. Here, we evaluate different approaches to scoring multiple response questions, and transform raw item responses (e.g. boxes ABC are checked) to a measure of response accuracy. (Warning: this notebook takes several minutes to execute.) To review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3."
  },
  {
    "objectID": "analysis/SGC4D/2_sgc4D_scoring.html#score-sgc-data",
    "href": "analysis/SGC4D/2_sgc4D_scoring.html#score-sgc-data",
    "title": "22  Response Scoring",
    "section": "SCORE SGC DATA",
    "text": "SCORE SGC DATA\nTo review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3.\nIn SGC we are fundamentally interested in understanding how a participant interprets the presented graph (stimulus). The graph comprehension task asks them to select the data points in the graph that meet the criteria posed in the question. To assess a participant’s performance, for each question (q=15) we will calculate the following scores:\nAn overall, strict score:\n1. Absolute Score : using dichotomous scoring referencing true (Triangular) answer. (see 1.2)\nSub-scores, for each alternative graph interpretation\n2. Triangular Score : using partial scoring [-1/q, +1/p] referencing true (Triangular) answer key.\n3. Orthogonal Score : using partial scoring [-1/q, +1/p] referencing (incorrect Orthogonal) answer key.\nBased on prior observational studies where we observed emergence of other alternative interpretations (i.e. transitional interpretations) we also calculate subscores for these alternatives.\n4. Tversky Score : using partial scoring [-1/q, +1/p] referencing (incorrect connecting-lines strategy) answer key. 5. Satisficing Score : using partial scoring [-1/q, +1/p] referencing (incorrect satisficing strategy) answer key.\n\nPrepare Answer Keys\nWe start by importing three answer keys: (1) Q1 - Q5 [control condition], (2) Q1-Q5 [impasse condition], (3) Q6-15. Separate answer keys by condition are required for Q1-Q5 because the stimuli for each condition visualize a different underlying dataset (i.e. the graphs show datapoints in different positions). Q6-Q15 are identical across conditions. Each answer key includes a row for each question, and a column defining the subset of response options that correspond to different graph interpretations.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n#setwd(imac)\n\n#SAVE KEYS FOR FUTURE USE\nkeys_raw <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_raw\")\nkeys_orth <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_orth\")\nkeys_tri <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tri\")\nkeys_both <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_both\")\nkeys_satisfice_left <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_left\")\nkeys_satisfice_right <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_satisfice_right\")\nkeys_tversky_duration <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_duration\")\nkeys_tversky_end <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_end\")\nkeys_tversky_max <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_max\")\nkeys_tversky_start <-  read_csv(\"analysis/utils/keys/parsed_keys/keys_tversky_start\")\n\n\n\n\nCalculate Subscores\nNext, we import the item-level response data. For each row in the item level dataset (indicating the response to a single question-item for a single subject), we compare the raw response df_items$response with the answer keys in each interpretation (e.g. keys_orth, keys_tri, etc…), then using those sets, determine the number of correctly selected items(p) and incorrectly selected items (q), which in turn are used to calculate partial[-1/q, +1/p] scores for each interpretation. The resulting scores are then stored on each item in df_items, and can be used to determine which graph interpretation the subject held.\nSpecifically, the following scores are calculated for each item:\nInterpretation Subscores\n\nscore_TRI How consistent is the response with the triangularinterpretation?\nscore_ORTH How consistent is the response with the orthogonalinterpretation?\nscore_BOTH How consistent is the response with both the orthogonal and triangular interpretations?\nscore_SATISFICE is calculated by taking the maximum value of :\n\nscore_SAT_left How consistent is the response with the (left side) Satisficing interpretation?\nscore_SAT_right How consistent is the response with the (right side) Satisficing interpretation\n\nscore_TVERSKY is calculated by taking the maximum value of:\n\nscore_TV_max How consistent is the response with the (maximal) Tversky interpretation?\nscore_TV_start How consistent is the response with the (start-time) Tversky interpretation?\nscore_TV_end How consistent is the response with the (end-time) Tversky interpretation?\nscore_TV_duration How consistent is the response with the (duration) Tversky interpretation?\n\nscore_REF Did the response select only the reference point?\n\nAbsolute Scores\n\nscore_ABS Is the response strictly correct? (triangular interpretation)\nscore_niceABS Is the response strictly correct? (triangular interpretation, not penalizing ref points). This is a more generous version of the Absolute score that does not penalize the participant if in addition to the correct answer in addition to they also select the data point referenced in the question.\n\n\n\nCODE\n#HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#backup <- read_rds('analysis/SGC4D/data/1-study-level/sgc4d_items.rds') #for troubleshooting only\ndf_items <- read_rds('analysis/SGC4D/data/1-study-level/sgc4d_items.rds')\n\n#ADD TEMP IMPASSE COLUMN BECAUSE IMPASSE USES DIFFERENT KEYS\ndf_items <- df_items %>% mutate(\n  IMPASSE = substr(condition,2,2),\n  IMPASSE = recode_factor(IMPASSE, \"1\"=\"none\", \"2\"=\"IMPASSE\")\n)\n\n\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\nsource(\"analysis/utils/scoring.R\")\n\n\nnote: this cell takes approximately 30 minutes to run on the full df_items dataframe with 4950 records\n\n\nCODE\n#RUN THIS <OR> THE CALCULATE-SCORES-FORLOOP [not both]\n\n#TROUBLESHOOTING\n# backup <- df_items\n# df_items <- backup %>% sample_n(20)\n\n#ALPHEBETIZE RESPONSE\ndf_items$response = pbmapply(reorder_inplace, df_items$response)\n\n#STRATEGY PARTIAL-SUBSCORES\ndf_items$score_TRI = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tri))\n\ndf_items$score_ORTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_orth))\n\ndf_items$score_BOTH = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_both))\n\ndf_items$score_SAT_left = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_left))\ndf_items$score_SAT_right = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_satisfice_right))\n\ndf_items$score_TV_max = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_max))\ndf_items$score_TV_start = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_start))\ndf_items$score_TV_end = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_end))\ndf_items$score_TV_duration = pbmapply(calc_subscore, df_items$q, df_items$IMPASSE, df_items$response, MoreArgs = list(keyframe = keys_tversky_duration))\n\n#SPECIAL ABSOLUTE SUBSCORES\ndf_items$score_REF = pbmapply(calc_refscore, df_items$q, df_items$response)\n\n#OLD score_BOTH... new one is above (explicitly in key)\n# df_items$score_BOTH = as.integer((df_items$score_TRI == 1) & (df_items$score_ORTH ==1))\n\n#ABSOLUTE SCORES\ndf_items$score_ABS = as.integer(df_items$correct) \ndf_items$score_niceABS  <- as.integer((df_items$score_TRI == 1)) #tri doesn't penalize ref or ve-area\n\n\n\n\nDerive Interpretation\nFinally, we use the interpretation subscores to classify the response as a particular interpretation. This classification algorithm : (1) First decides if the response matches one or more ‘special’ situations (blank response, reference point response, both ORTH and TRI) (2) If response doesn’t match a special situation, it compares the individual subscores, and subscores and decides if they are discriminant (i.e. are the scores different enough to make a prediction). A discriminant threshold of 0.5pts (on a scale from -1 to +1 is used) (2) If the variance in subscores surpasses the threshold, the interpretation is classified based on the highest subscore (TRIANGULAR, ORTHOGONAL, TVERSKY, SATISFICE) (3) If the variance does not surpass the threshold, the interpretation is labelled as “?”, indicating it cannot be classified, and is of an unknown interpretation.\nThe final output is called interpretation.\n\n\nCODE\n#stoopid extra copying for troubleshooting safety\ntemp <- df_items #%>% head(16) %>% tail(1)\ntemp <- derive_interpretation(temp)\n\n\n[1] \"DERIVING INTERPRETATION\"\n\n\nCODE\ndf_items <- temp\n\n\n\n\n? SPECIAL EXCEPTIONS\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nLook for special exceptions (essentially pass through cases) that are missed by the threshold partial p calculations, but fit particular interpretations. (ie. a clearly tversky interpretation that only includes 1 or 2 of the 3 possible options)\nALSO reconciles issues when interpetation == triangular but scoreniceabs = 0 ::: {.cell}\n\nCODE\n# #temp setup for protection\n# backup <- df_items\ntemp <- df_items %>% mutate(\n  override = \"\"\n)\n\n## CONTROL. Q==1. \"FK\" derives as 'TRI', should be tversky start\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==1) & (IMPASSE ==\"none\") & (response == \"FK\"),\n  tv_type = \"score_TV_start\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"TRI\"\n)\n\n## IMPASS Q==2. \"EK\" derives as 'TRI', should be tversky MAX\ntemp <- temp %>% mutate_when(\n  (q==2) & (IMPASSE ==\"IMPASSE\") & (response == \"EK\"),\n  tv_type = \"score_TV_max\",\n  int2 = \"Tversky\", #override from TRI\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n## CONTROL. Q==3. \"A\" derives as 'unknown', should be tversky duration\n#codes as unknown bc there are 2 other along that line, but A is the closest (shortcut)\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"A\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from ?\n  interpretation = \"Tversky\", #override from ?\n  high_interpretation = \"pos.trans\",\n  override = \"?\"\n)\n\n\n## CONTROL  Q==3 \"AF\" derives as TRI. hardcode as \"both\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"AF\"),\n  int2 = \"both tri + orth\", #override from TRI\n  interpretation = \"both tri + orth\", #override from TRI\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## CONTROL  Q==3 derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response %in% c(\"EFK\",\"FO\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL  Q==3 \"FG\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"none\") & (response == \"FG\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASS  Q==3 \"AF\" derives as TRI. hardcode as \"TVERSKY-DURATION\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE  Q==3 \"AFG\" derives as TRI. hardcode as \"unknown\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AFG\", \"DF\", \"EFU\", \"DEF\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE  Q==3 \"AH\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n## IMPASSE  Q==3 \"AO\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE  Q==3 \"AOU\" derives as SATISFICE hardcode as \"angular\"\ntemp <- temp %>% mutate_when(\n  (q==3) & (IMPASSE ==\"IMPASSE\") & (response == \"AOU\"),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## CONTROL Q==4 AH Derives as TRI RECODE as TVERSKY\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"AH\",\"HK\")),\n  int2 = \"Tversky\", #override from Satisfice\n  interpretation = \"Tversky\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n## CONTROL Q==4  DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response %in% c(\"HJ\",\"HJK\") ),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==4 DEU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DEOU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"DEOU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 KU DERIVES as ORTH Recode as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"none\") & (response == \"KU\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Orthogonal\"\n)\n\n## CONTROL Q==4 DERIVES as TRI Recode as ?\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AH\"),\n  int2 = \"?\", #override from Orthogonal\n  interpretation = \"?\", #override from Orthogonal\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==4 BD Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BD\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 BDEG Derives as TVERSKY RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"BDEG\"),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Tversky\"\n)\n\n## IMPASSE Q==4 AFG Derives as SATISFICE RECODE as OTHER\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"?\", #override from Satisfice\n  interpretation = \"?\", #override from Satisfice\n  high_interpretation = \"neg.trans\", #override from orthogonal\n  override = \"Satisfice\"\n)\n\n\n## IMPASSE Q==4 DH Derives as TRI RECODE as BOTH\ntemp <- temp %>% mutate_when(\n  (q==4) & (IMPASSE ==\"IMPASSE\") & (response == \"DH\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AU Derives as TRI RECODE as satisfice\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AU\"),\n  int2 = \"Satisfice\", #override from Triangular\n  interpretation = \"Satisfice\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AZ Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response %in% c(\"AZ\", \"AX\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n## IMPASSE Q==5 AFG Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AFG\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AF Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AF\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## IMPASSE Q==5 AO Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"IMPASSE\") & (response == \"AO\"),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"FO\",\"JO\") ),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n## CONTROL Q==5  Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response %in% c(\"HO\",\"FO\",\"DJO\",\"FGKO\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n## CONTROL Q==5 KO Derives as TRI RECODE as tversky_duration\ntemp <- temp %>% mutate_when(\n  (q==5) & (IMPASSE ==\"none\") & (response == \"KO\"),\n  tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==7 HOX, OX Derives as TRI but incorrect\n#includes H which is at rather than under 5 hours.\n#give credit \ntemp <- temp %>% mutate_when(\n  (q==7)  & (response %in% c(\"HOX\", \"OX\")),\n  score_niceABS = 1\n)\n\n##  Q==7 Derives as TRI RECODE as other\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MO\",\"AX\",\"FJOX\",\"IO\")) ,\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==7 Derives as TRI RECODE as tversky\ntemp <- temp %>% mutate_when(\n  (q==7 & response %in% c(\"MOX\", \"MX\", \"DX\",\"O\",\"X\",\"JX\",\"CO\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n\n##  Q==8 Derives as TRI RECODE as angular\ntemp <- temp %>% mutate_when(\n  (q==8)  & (response %in% c(\"FG\",\"CG\",\"CFG\",\"CGM\",\"CM\",\"ACGP\",\"GM\",\n                             \"AGK\", \"ACG\",\"AFGK\",\"GK\", \"AG\", \"CFGO\",\n                             \"BFG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==11 M Derives as TRI MISSING RESPONSE\n##LEAVE AS TRI + OVERRIDE SCORENABS\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"M\",\"L\") ),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==11 BLM Derives as TRI set at both\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response == \"BLM\"),\n  int2 = \"both tri + orth\", #override from Satisfice\n  interpretation = \"both tri + orth\", #override from Satisfice\n  high_interpretation = \"pos.trans\", #override from orthogonal\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at ORTH\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"AGM\")),\n  int2 = \"Orthogonal\",\n  interpretation = \"Orthogonal\", \n  high_interpretation = \"orthogonal\", \n  override = \"Triangular\"\n)\n\n##  Q==11  Derives as TRI set at other\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"EKM\",\"JM\")),\n  int2 = \"?\", #override from Tversky\n  interpretation = \"?\", #override from Tversky\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n##  Q==11 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==11)  & (response %in% c(\"KL\",\"MOX\",\"CLMP\",\"DKL\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==12 Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==12)  & (response %in% c(\"GP\", \"EG\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13 E Derives as TRI but incorrect\n##LEAVE AS TRI + OVERRIDE SCORENABS\n##one of two correct answers\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response == \"E\"),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==13 CE Derives as TRI set at Tversky\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"CE\",\"EH\")),\n  int2 = \"?\", #override from Triangular\n  interpretation = \"?\", #override from Triangular\n  high_interpretation = \"neg.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==13  Derives as TRI set at ?\ntemp <- temp %>% mutate_when(\n  (q==13)  & (response %in% c(\"EO\",\"EK\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\", \n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"FX\",\"CX\",\"EFX\", \"OX\", \"JX\", \"EX\")),\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==14  Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==14)  & (response %in% c(\"AX\")),\n  int2 = \"?\", \n  interpretation = \"?\", \n  high_interpretation = \"neg.trans\",\n  override = \"Triangular\"\n)\n\n\n##  Q==15 CX Derives as TRI but incorrect \n#within visual margin... give credit\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"CX\",\"KO\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n#  Q==15  Derives as TRI but incorrect \n#missing 1 right answer or within 0.5hr visual error \ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"X\",\"CK\",\"K\",\"GKX\")),\n  score_niceABS = 1\n  # int2 = \"Tversky\", #override from Triangular\n  # interpretation = \"Tversky\", #override from Triangular\n  # high_interpretation = \"pos.trans\", #override from triangular\n  # override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at Angular\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"DJNX\", \"OX\", \"AK\",\"DNX\", \"AX\",\"ACX\",\n                              \"AGX\",\"CGX\",\"CKX\",\"DKL\",\"GX\",\"GX\",\"HOX\",\n                              \"HX\",\"JNX\")),\n  # tv_type = \"score_TV_duration\",\n  int2 = \"Tversky\", #override from Triangular\n  interpretation = \"Tversky\", #override from Triangular\n  high_interpretation = \"pos.trans\", #override from triangular\n  override = \"Triangular\"\n)\n\n##  Q==15 Derives as TRI set at OTHER\ntemp <- temp %>% mutate_when(\n  (q==15)  & (response %in% c(\"AKPX\",\"GK\",\"JX\",\"LX\",\"BK\",\"HK\",\"HNX\",\n                              \"KP\",\"BX\")),\n  int2 = \"?\", #override from TRI\n  interpretation = \"?\", #override from TRI\n  high_interpretation = \"neg.trans\", #override from pos.trans\n  override = \"Triangular\"\n)\n\n#SET BACK\ndf_items <- temp\n\n:::\n\n\nDerive Scaled Score\nThe interpretation response variable gives us the finest grain indication of the reader’s understanding of the graph for a particular question. However, it is a categorical variable, which poses a challenge for analyzing cumulative performance at the subject level. To address this challenge, we derive a scaled_score that converts each possible interpretation to a numeric value on a scale from -1 to +1. This scaling takes advantage of the observation that each interpretation can be positioned along a spectrum of understanding from completely incorrect (orthogonal) to completely correct (triangular). Alternative interpretations lay somewhere between.\nSpecifically, we assign the following values to each interpretation:\n\n(-1) : ORTHOGONAL, SATISFICE (satisfice represents an attempt at an orthogonal answer when none is available)\n(-0.5): ? (some alternative that cannot be identified; but meaningful that it is not orthogonal)\n(0): REFERENCE POINT, BLANK (indicates the individual thinks there is no answer, recognizes that ORTHOGONAL cannot be correct, but does not conceive of triangular)\n(+0.5) TVERSKY, BOTH TRI + ORTH (indicates that they “see” a triangular response, but lack certainty and also select the ORTHOGONAL response)\n(+1) TRIANGULAR +1\n\n\n\nCODE\ndf_items$score_SCALED <- calc_scaled(df_items$interpretation)\n\n\n\n\nDerive State Score\nThe scaled score represents a 5-category ordering of understanding. We also derive a 3-category ordering that gives higher grained access to “orthogonal-like” vs “uncertain” vs “triangle-like” responses.\nSpecifically, we assign the following values to each interpretation:\n\n(orth-like) : orthogonal, satisfice\n(unknown) : unidentified alternatives, blank, both tri&orth, and reference point responses\n(tri-like) : Tverskian and triangular responses\n\n\n\nCODE\ndf_items <- df_items %>% mutate (\n  score_STATE = recode_factor(df_items$score_SCALED,\n                         \"-1\" = \"orth-like\",\n                         \"-0.5\" = \"unknown\",\n                         \"0\" = \"unknown\",\n                         \"0.5\" = \"tri-like\",\n                         \"1\" = \"tri-like\"),\n  score_STATE = as.ordered(score_STATE))"
  },
  {
    "objectID": "analysis/SGC4D/2_sgc4D_scoring.html#summarize-by-subject",
    "href": "analysis/SGC4D/2_sgc4D_scoring.html#summarize-by-subject",
    "title": "22  Response Scoring",
    "section": "SUMMARIZE BY SUBJECT",
    "text": "SUMMARIZE BY SUBJECT\nNext, we summarize the item level scores by subject in order to calculate cummulative subscores to be stored on the subject record.\n\n\nCODE\n# #HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n\n#import subjects\ndf_subjects <- read_rds('analysis/SGC4D/data/1-study-level/sgc4d_participants.rds') %>% mutate(subject = as.character(subject)) %>% arrange(subject)\n\n#make temporary copies for testing safety\ns = df_subjects\ni = df_items \n\n#summarize\ntest_subs <- summarise_bySubject(s,i)\n\n\n`summarise()` has grouped output by 'subject'. You can override using the\n`.groups` argument.\n\n\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n[1] TRUE\n\n\nCODE\ndf_subjects <- test_subs\n\n\nWe also summarize absolute and scaled score progress at each question in the task, to explore cumulative performance over the task.\n\n\nCODE\n#GET ABSOLUTE PROGRESS \ndf_absolute_progress <- progress_Absolute(df_items)\n\n#GET SCALED PROGRESS\ndf_scaled_progress <- progress_Scaled(df_items)"
  },
  {
    "objectID": "analysis/SGC4D/2_sgc4D_scoring.html#explore-distributions",
    "href": "analysis/SGC4D/2_sgc4D_scoring.html#explore-distributions",
    "title": "22  Response Scoring",
    "section": "EXPLORE DISTRIBUTIONS",
    "text": "EXPLORE DISTRIBUTIONS\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#create temp data frame for visualizations\ndf = df_items %>% filter (q %nin% c(6,9)) %>% mutate(\n  score_niceABS = as.factor(score_niceABS),\n  pretty_interpretation = factor(interpretation,\n    levels = c(\"Orthogonal\", \"Satisfice\", \n               \"frenzy\",\"?\",\n                \"reference\",\"blank\",\n                \"Tversky\", \"both tri + orth\",\n               \"Triangular\" ))\n  )\n\n\n\nAbsolute Score\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE FULL TASK\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (all Items)\",\n        subtitle = paste(\"Impasse Condition (blue) yields more correct responses across the entire task\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY ITEM\ngf_props(~score_niceABS, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(pretty_condition~q) + \n  labs( x = \"Absolute Score\", \n        title = \"Distribution of Absolute Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields more correct responses on each item\",\n        y = \"Proprition of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE BY SUBJECT\ngf_props(~s_NABS, fill = ~pretty_condition, position = position_dodge(), data = df_subjects) %>%\ngf_facet_wrap(~pretty_condition)+\n  labs( x = \"Total Absolute Score\",\n        title = \"Distribution of Total Absolute Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher total absolute scores\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION ABSOLUTE SCORE TEST PHASE\ngf_props(~item_test_NABS, fill = ~pretty_condition, \n             data = df_subjects) %>% \n  gf_facet_wrap(~pretty_condition) + \n  labs( x = \"Absolute Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Absolute Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nScaled Score\n\n\nCODE\noptions(repr.plot.width =9, repr.plot.height =12)\n\n#DISTRIBUTION SCALED SCORE FULL TASK\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df) +\n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (all Items)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores across the entire task\",\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY ITEM\ngf_props(~score_SCALED, fill = ~pretty_condition, position = position_dodge(), data = df)  %>% \n  gf_facet_grid(q~pretty_condition) + \n  labs( x = \"Scaled Score\", \n        title = \"Distribution of Scaled Score (by Item)\",\n        subtitle = \"Impasse Condition (blue) yields higher scaled scores on each item\",\n        y = \"Proportion of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  scale_y_continuous(breaks=c(0,0.5)) + \n  theme_minimal() + theme(legend.position=\"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE BY SUBJECT\ngf_props(~s_SCALED, fill = ~pretty_condition, data = df_subjects)  %>% \n  gf_facet_grid(pretty_condition ~. )+\n  labs( x = \"Total Scaled Score\", \n        title = \"Distribution of Total Scaled Score (by Subject)\",\n        subtitle = \"Impasse Condition (blue) yields higher cumulative scaled scores\",\n        y = \"Number of Subjects\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\nCODE\n#DISTRIBUTION SCALED SCORE TEST PHASE\ngf_histogram(~item_test_SCALED, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_grid(SHAPE~SCALE) + \n  labs( x = \"Scaled Score in TEST Phase\", \n        title = \"Distribution of TEST PHASE Scaled Score (all Items)\",\n        subtitle = paste(\"\"),\n        y = \"Proportion of Items\") +\n  scale_fill_discrete(name = \"Condition\") +  \n  theme_minimal()\n\n\n\n\n\n\n\nInterpretations\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION\ngf_props(~pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition ~ ., labeller = label_both) + \n  labs( title = \"Distribution of Interpretations (across Task)\",\n        x = \"Graph Interpretation\",\n        y = \"Proportion of Responses\",\n        subtitle = \"Impasse condition (blue) yields fewer Orthogonal and more Triangular responses\") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION ACROSS ITEMS\ngf_propsh(~ pretty_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more Triangular responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#DISTRIBUTION OF INTERPRETATION TYPE ACROSS ITEMS\ngf_propsh(~ high_interpretation, fill = ~pretty_condition, data = df) %>% \n  gf_facet_grid( pretty_condition~q) + \n  labs( title = \"Distribution of Interpretations (by Item)\",\n        subtitle = \"Impasse condition (blue) yields more positive trending responses on each question\",\n        y = \"Interpretation\", x = \"Proportion of Subjects\") + theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\nggbarstats( data = df, x = score_STATE, y = pretty_condition)\n\n\n\n\n\nCODE\nggbarstats( data = df, x = high_interpretation, y = pretty_condition)\n\n\n\n\n\n\n\nProgress over Task\n\n\nCODE\ndf_absolute_progress <- df_absolute_progress %>%\n  mutate(\n  SHAPE = dplyr::recode_factor(pretty_condition, \n            \"Orth-Isosceles\"=\"ORTH\",\n            \"Tri-Isosceles\"=\"TRI\",\n            \"Orth-Equilateral\" = \"ORTH\",\n            \"Tri-Equilateral\" = \"TRI\"\n            ),\n  SCALE = dplyr::recode_factor(pretty_condition,\n            \"Orth-Isosceles\"=\"isosceles\",\n            \"Tri-Isosceles\"=\"isosceles\",\n            \"Orth-Equilateral\" = \"equilateral\",\n            \"Tri-Equilateral\" = \"equilateral\"\n  ))\n\n\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(SHAPE~SCALE) + \n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ndf_scaled_progress <- df_scaled_progress %>%\n  mutate(\n  SHAPE = dplyr::recode_factor(pretty_condition, \n            \"Orth-Isosceles\"=\"ORTH\",\n            \"Tri-Isosceles\"=\"TRI\",\n            \"Orth-Equilateral\" = \"ORTH\",\n            \"Tri-Equilateral\" = \"TRI\"\n            ),\n  SCALE = dplyr::recode_factor(pretty_condition,\n            \"Orth-Isosceles\"=\"isosceles\",\n            \"Tri-Isosceles\"=\"isosceles\",\n            \"Orth-Equilateral\" = \"equilateral\",\n            \"Tri-Equilateral\" = \"equilateral\"\n  ))\n\n\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_grid(SHAPE~SCALE) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nInterpretation Subscores\n\n\nCODE\ngf_density(~ s_TRI, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Triangular Score\",\n        subtitle = \"Impasse shifts density toward higher Triagular scores\",\n        x = \"Item Triangular Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_ORTH, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Orthogonal Score\",\n        subtitle = \"Impasse shifts density toward lower Orthogonal scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_density(~ s_TVERSKY, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Tversky Score\",\n        subtitle = \"Impasse shifts density toward higher Tversky scores\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_histogram(~ s_SATISFICE, fill = ~pretty_condition, data = df_subjects) %>% \n  gf_facet_wrap( ~ pretty_condition) + \n  labs( title = \"Distribution of Total Satisfice Score\",\n        subtitle = \"Satisficing only occurs in impasse, when no orthogonal response is available\",\n        x = \"Item Orthogonal Score\", y = \"Proportion of Subjects\") + \n        theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4D/2_sgc4D_scoring.html#peek",
    "href": "analysis/SGC4D/2_sgc4D_scoring.html#peek",
    "title": "22  Response Scoring",
    "section": "PEEK",
    "text": "PEEK\n\n\nCODE\ngrouped_ggbetweenstats( data = df_subjects,\n                x = SCALE, y = s_NABS, grouping.var = SHAPE,\n                type = \"non-parametric\") \n\n\n\n\n\nCODE\ngrouped_ggbarstats( data = df_items,\n                x = score_niceABS, y = SHAPE, grouping.var = SCALE,\n                type = \"non-parametric\")"
  },
  {
    "objectID": "analysis/SGC4D/2_sgc4D_scoring.html#explore-responses",
    "href": "analysis/SGC4D/2_sgc4D_scoring.html#explore-responses",
    "title": "22  Response Scoring",
    "section": "EXPLORE RESPONSES",
    "text": "EXPLORE RESPONSES\nIn this section we explore responses given by participants to each particular item in the graph comprehension task, indicate how each response was scored, and what interpretation of the graph is indicated by different responses.\n\n\nCODE\ngf_props(~ score_niceABS, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Item Absolute Score\", title = \"Distribution of Accuracy  | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items ) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | ALL ITEMS \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\nSCAFFOLD PHASE\nThe first five questions constitute the ‘scaffold’ (or learning) phase, where participants see a different version of the stimulus (specifically a different dataset is visualized) invoking a different experimental condition.\n\nQuestion #1\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==1)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q1 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nWe start by exploring the range of response options checked by participants on Question 1.\n\n\n\nFigure 22.1: Question 1 — Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==1)\nignore <- q %>% dplyr::select(\"REF_POINT\")\nanswers <- q %>% dplyr::select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% dplyr::select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% dplyr::select(\"OPTIONS\")\nquestion = q %>%  dplyr::select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q1 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q1 Control Condition :  Which shift(s) start at 11 am?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    A \n    OI \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    CF \n    Z \n  \n  \n    Tversky [start diagonal] \n    F \n    Z \n  \n  \n    Tversky [end diagonal] \n    C \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\nHere we summarize the distinct response options given by participants on this item. Each letter in response indicates a checkbox selected by the participant (See Figure 22.1 ). n indicates the number of participants who gave this response, while interpretation indicates the graph interpretation most consistent with that response. At the right of this table are the Absolute, followed by Partial Credit subscores for each response. NA indicates that there is no score calculated (occurs when there is no subset of response options that accord with that interpretation for this question).\nNotice that for this Question, the Triangular answer is the same as the Tversky [start diagonal] answer. In fact, for most questions, one of the Tversky sub-types will match the correct response.\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #1 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 1) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 1) %>% \n  # pack_rows(\"Lines-Connect\", 2, 2) %>% \n  # pack_rows(\"Orthogonal\", 3, 3) %>% \n  # pack_rows(\"Other\", 4, 4)  %>% \n  # pack_rows(\"Unknown\", 5, 7)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #1 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    46 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    CF \n    12 \n    Tversky \n    0 \n    0.923 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    C \n    3 \n    Tversky \n    0 \n    -0.077 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    ABCU \n    1 \n    Tversky \n    0 \n    -0.308 \n    0.786 \n    NA \n    0.750 \n    0.5 \n  \n  \n    ACE \n    1 \n    Tversky \n    0 \n    -0.231 \n    0.857 \n    NA \n    0.833 \n    0.5 \n  \n  \n    A \n    257 \n    Orthogonal \n    0 \n    -0.077 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AIO \n    3 \n    Orthogonal \n    0 \n    -0.231 \n    -0.214 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AF \n    1 \n    both tri + orth \n    0 \n    0.923 \n    0.923 \n    NA \n    0.917 \n    0.5 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABCDEHIJKOU \n    1 \n    frenzy \n    0 \n    -0.846 \n    0.286 \n    NA \n    0.333 \n    -0.5 \n  \n  \n    ACF \n    1 \n    ? \n    0 \n    0.846 \n    0.917 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    DX \n    1 \n    ? \n    0 \n    -0.154 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    -0.154 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.077 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQuestion #2\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==2)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q2 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 22.2: Q2—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==2)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q2 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q2 Control Condition :  Which shift(s) start at the same time as D?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    K \n    Z \n  \n  \n    Orthgonal \n    E \n    G \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AKJX \n    Z \n  \n  \n    Tversky [start diagonal] \n    AK \n    Z \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    J \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #2 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 2) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) %>%\n  # pack_rows(\"Triangular\", 1, 2) %>%\n  # pack_rows(\"Lines-Connect\", 3, 4) %>% \n  # pack_rows(\"Orthogonal\", 5, 7) %>%\n  # pack_rows(\"Other\", 8, 8)  %>% \n  # pack_rows(\"Unknown\", 9, 10)  %>% \n  footnote(general = \"n = number of responses in sample\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nFrequency of Selected Response Options for Question #2 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    K \n    54 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    DK \n    2 \n    Triangular \n    1 \n    1.000 \n    0.500 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    J \n    15 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AK \n    6 \n    Tversky \n    0 \n    0.917 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    X \n    3 \n    Tversky \n    0 \n    -0.083 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    JK \n    2 \n    Tversky \n    0 \n    0.917 \n    0.923 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    A \n    1 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    EJ \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.923 \n    NA \n    0.917 \n    0.5 \n  \n  \n    E \n    225 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    DE \n    7 \n    Orthogonal \n    0 \n    -0.083 \n    -0.077 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EG \n    2 \n    Orthogonal \n    0 \n    -0.167 \n    -0.154 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    D \n    5 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    DEHIJO \n    1 \n    frenzy \n    0 \n    -0.417 \n    0.692 \n    NA \n    0.667 \n    -0.5 \n  \n  \n    Z \n    3 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    B \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    CD \n    1 \n    ? \n    0 \n    -0.083 \n    -0.077 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    UZ \n    1 \n    ? \n    0 \n    -0.083 \n    -0.091 \n    NA \n    -0.167 \n    -0.5 \n  \n\n\nNote:   n = number of responses in sample\n\n\n\n\n\n\nQuestion #3\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==3)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q3 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 22.3: Q3—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==3)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q3 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q3 Control Condition :  Which shift(s) begin when C ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    F \n    Z \n  \n  \n    Orthgonal \n    Z \n    FIO \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    AUBFOJ \n     \n  \n  \n    Tversky [start diagonal] \n    OJ \n     \n  \n  \n    Tversky [end diagonal] \n    F \n    Z \n  \n  \n    Tversky [duration line] \n    AUB \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #3 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 3 ) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #3 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    F \n    50 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    0.0 \n    1.0 \n  \n  \n    A \n    50 \n    Tversky \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    JO \n    7 \n    Tversky \n    0 \n    -0.167 \n    1.000 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    ABU \n    5 \n    Tversky \n    0 \n    -0.250 \n    1.000 \n    NA \n    -0.3 \n    0.5 \n  \n  \n    FG \n    2 \n    Tversky \n    0 \n    0.917 \n    0.917 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    O \n    2 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    0.0 \n    0.5 \n  \n  \n    DJ \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    DJO \n    1 \n    Tversky \n    0 \n    -0.250 \n    0.917 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    HJ \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    -0.2 \n    0.5 \n  \n  \n    IO \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    0.0 \n    0.5 \n  \n  \n    J \n    1 \n    Tversky \n    0 \n    -0.083 \n    0.500 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    KO \n    1 \n    Tversky \n    0 \n    -0.167 \n    0.417 \n    NA \n    -0.1 \n    0.5 \n  \n  \n    Z \n    176 \n    Orthogonal \n    0 \n    0.000 \n    0.000 \n    NA \n    1.0 \n    -1.0 \n  \n  \n    DUZ \n    1 \n    Orthogonal \n    0 \n    -0.167 \n    0.152 \n    NA \n    0.8 \n    -1.0 \n  \n  \n    EZ \n    1 \n    Orthogonal \n    0 \n    -0.083 \n    -0.083 \n    NA \n    0.9 \n    -1.0 \n  \n  \n    C \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    0.0 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.0 \n    0.0 \n  \n  \n    ABJOU \n    1 \n    frenzy \n    0 \n    -0.417 \n    0.833 \n    NA \n    -0.4 \n    -0.5 \n  \n  \n    U \n    9 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    AH \n    4 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    B \n    4 \n    ? \n    0 \n    -0.083 \n    0.333 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    K \n    4 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n  \n    EU \n    3 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    EFK \n    1 \n    ? \n    0 \n    0.833 \n    0.833 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    UX \n    1 \n    ? \n    0 \n    -0.167 \n    0.242 \n    NA \n    -0.2 \n    -0.5 \n  \n  \n    X \n    1 \n    ? \n    0 \n    -0.083 \n    -0.083 \n    NA \n    -0.1 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 17)  \n\n\n\n\nQuestion #4\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==4)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q4 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 22.4: Q4—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==4)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q4 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q4 Control Condition :  Which shift(s) end at 4 pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    H \n     \n  \n  \n    Orthgonal \n    U \n    OF \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    BH \n     \n  \n  \n    Tversky [start diagonal] \n    B \n     \n  \n  \n    Tversky [end diagonal] \n    H \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #4 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 4) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #4 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    H \n    71 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.083 \n    1.0 \n  \n  \n    B \n    14 \n    Tversky \n    0 \n    -0.071 \n    1.000 \n    NA \n    -0.083 \n    0.5 \n  \n  \n    AH \n    1 \n    Tversky \n    0 \n    0.929 \n    0.929 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    BDEG \n    1 \n    Tversky \n    0 \n    -0.286 \n    0.786 \n    NA \n    -0.333 \n    0.5 \n  \n  \n    BH \n    1 \n    Tversky \n    0 \n    0.929 \n    1.000 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    HK \n    1 \n    Tversky \n    0 \n    0.929 \n    0.929 \n    NA \n    -0.167 \n    0.5 \n  \n  \n    U \n    153 \n    Orthogonal \n    0 \n    -0.071 \n    -0.071 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    8 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    OU \n    4 \n    Orthogonal \n    0 \n    -0.143 \n    -0.143 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FOU \n    2 \n    Orthogonal \n    0 \n    -0.214 \n    -0.214 \n    NA \n    1.000 \n    -1.0 \n  \n  \n     \n    8 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    DE \n    41 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    E \n    7 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    K \n    4 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    F \n    3 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    HJ \n    3 \n    ? \n    0 \n    0.929 \n    0.929 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    D \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    X \n    2 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    DEOU \n    1 \n    ? \n    0 \n    -0.286 \n    -0.286 \n    NA \n    0.833 \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    EK \n    1 \n    ? \n    0 \n    -0.143 \n    -0.143 \n    NA \n    -0.167 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    -0.083 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.071 \n    -0.071 \n    NA \n    0.000 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>% \n#   pack_rows(\"Lines-Connect\", 3, 3) %>% \n#   pack_rows(\"Orthogonal\", 4, 8) %>% \n#   pack_rows(\"Other\", 9, 10) %>% \n#   pack_rows(\"Unknown\", 11, 16) \n\n\n\n\nQuestion #5\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==5)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q5 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 22.5: Q5—Control Condition\n\n\n\n\nCODE\nq <- keys_raw %>% filter(condition == \"DEFAULT\") %>% filter(Q==5)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist() \noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\", \n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q5 Control Condition : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>% \n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nAnswer Key | Q5 Control Condition :  Coffee breaks happen halfway through a shift. Which shift(s) share a break with I?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    O \n    AZ \n  \n  \n    Orthgonal \n    U \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    UGX \n    AZKD \n  \n  \n    Tversky [start diagonal] \n    X \n     \n  \n  \n    Tversky [end diagonal] \n    UG \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  AIKGXJDBCHUZOFE\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #5 (Control Condition)\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 5) %>% group_by(response) %>% \n  dplyr::summarise( count = n(), \n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI), \n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>% \n  arrange(interpretation, desc(count)) %>% \n  dplyr::select(response, count, interpretation, nice, \n         triangular, tversky, satisficing, orthogonal, scaled) %>% \n  kbl(caption = title, col.names = names) %>%  kable_classic() %>% \n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #5 (Control Condition)\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    O \n    97 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    AO \n    1 \n    Triangular \n    1 \n    1.000 \n    -0.143 \n    NA \n    -0.154 \n    1.0 \n  \n  \n    IO \n    1 \n    Triangular \n    1 \n    1.000 \n    -0.077 \n    NA \n    -0.077 \n    1.0 \n  \n  \n    OZ \n    1 \n    Triangular \n    1 \n    1.000 \n    -0.143 \n    NA \n    -0.154 \n    1.0 \n  \n  \n    X \n    5 \n    Tversky \n    0 \n    -0.091 \n    1.000 \n    NA \n    -0.077 \n    0.5 \n  \n  \n    UX \n    2 \n    Tversky \n    0 \n    -0.182 \n    0.923 \n    NA \n    0.923 \n    0.5 \n  \n  \n    BDFG \n    1 \n    Tversky \n    0 \n    -0.364 \n    0.250 \n    NA \n    -0.308 \n    0.5 \n  \n  \n    BG \n    1 \n    Tversky \n    0 \n    -0.182 \n    0.417 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    DJX \n    1 \n    Tversky \n    0 \n    -0.273 \n    0.846 \n    NA \n    -0.231 \n    0.5 \n  \n  \n    HJOX \n    1 \n    Tversky \n    0 \n    0.727 \n    0.769 \n    NA \n    -0.308 \n    0.5 \n  \n  \n    JO \n    1 \n    Tversky \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    KO \n    1 \n    Tversky \n    0 \n    0.909 \n    -0.143 \n    NA \n    -0.154 \n    0.5 \n  \n  \n    U \n    115 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    HU \n    2 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    IU \n    2 \n    Orthogonal \n    0 \n    -0.091 \n    0.500 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FU \n    1 \n    Orthogonal \n    0 \n    -0.182 \n    0.417 \n    NA \n    0.923 \n    -1.0 \n  \n  \n    I \n    2 \n    reference \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    OU \n    1 \n    both tri + orth \n    0 \n    0.909 \n    0.417 \n    NA \n    0.923 \n    0.5 \n  \n  \n     \n    15 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABCDEFGHJKOUXZ \n    1 \n    frenzy \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    F \n    27 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    H \n    8 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    K \n    8 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    J \n    6 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    FO \n    4 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    Z \n    4 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    A \n    3 \n    ? \n    0 \n    0.000 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    B \n    3 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    D \n    2 \n    ? \n    0 \n    -0.091 \n    0.000 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    EH \n    2 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HJ \n    2 \n    ? \n    0 \n    -0.182 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HK \n    2 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    AF \n    1 \n    ? \n    0 \n    -0.091 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    DEHJ \n    1 \n    ? \n    0 \n    -0.364 \n    -0.308 \n    NA \n    -0.308 \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.182 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    DJO \n    1 \n    ? \n    0 \n    0.818 \n    -0.231 \n    NA \n    -0.231 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.091 \n    -0.077 \n    NA \n    -0.077 \n    -0.5 \n  \n  \n    EHJK \n    1 \n    ? \n    0 \n    -0.364 \n    -0.308 \n    NA \n    -0.308 \n    -0.5 \n  \n  \n    FZ \n    1 \n    ? \n    0 \n    -0.091 \n    -0.143 \n    NA \n    -0.154 \n    -0.5 \n  \n  \n    HO \n    1 \n    ? \n    0 \n    0.909 \n    -0.154 \n    NA \n    -0.154 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>% \n#   pack_rows(\"Lines-Connect\", 5, 7) %>% \n#   pack_rows(\"Orthogonal\", 8, 9) %>% \n#   pack_rows(\"Other\", 10, 11) %>% \n#   pack_rows(\"Unknown\", 12, 22) \n\n\nTODO note the compelling cases of internal inconsistency (HJDE)\n\n\nQuestion #7\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 7)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q7 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 22.6: Q7-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==7)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts less than 5 hours long start at the same time?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    OX \n     \n  \n  \n    Orthgonal \n    BF \n    M \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    IJZNCHOX \n     \n  \n  \n    Tversky [start diagonal] \n    OX \n     \n  \n  \n    Tversky [end diagonal] \n    IJZN \n     \n  \n  \n    Tversky [duration line] \n    CH \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #7\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 7) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #7\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    OX \n    62 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    IJ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.500 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    CH \n    2 \n    Tversky \n    0 \n    -0.125 \n    1.000 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    O \n    2 \n    Tversky \n    0 \n    0.500 \n    0.500 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    DNZ \n    1 \n    Tversky \n    0 \n    -0.188 \n    0.429 \n    NA \n    -0.200 \n    0.5 \n  \n  \n    HL \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.438 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    X \n    1 \n    Tversky \n    0 \n    0.500 \n    0.500 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    BF \n    230 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FZ \n    10 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    B \n    2 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BI \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    BJ \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    0.179 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    EF \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    1 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    BDFIJMNOXZ \n    2 \n    frenzy \n    0 \n    0.500 \n    0.571 \n    NA \n    0.533 \n    -0.5 \n  \n  \n    BDFJMNOXZ \n    1 \n    frenzy \n    0 \n    0.562 \n    0.562 \n    NA \n    0.600 \n    -0.5 \n  \n  \n    IJNOXZ \n    1 \n    frenzy \n    0 \n    0.750 \n    0.857 \n    NA \n    -0.400 \n    -0.5 \n  \n  \n    AG \n    2 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DN \n    2 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BO \n    1 \n    ? \n    0 \n    0.438 \n    0.438 \n    NA \n    0.433 \n    -0.5 \n  \n  \n    EI \n    1 \n    ? \n    0 \n    -0.125 \n    0.179 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    0.438 \n    0.438 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.062 \n    0.250 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 5) %>%\n#   pack_rows(\"Lines-Connect\", 6, 9) %>%\n#   pack_rows(\"Orthogonal\", 10, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 17)\n\n\n\n\nQuestion #8\n\n\n\nFigure 22.7: Q8-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==8)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q: \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q:  Which shift(s) under 7 hours long starts before B starts, and ends after X ends?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    E \n    F \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #8\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 8) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #8\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    53 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.071 \n    1.0 \n  \n  \n    CG \n    3 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    CFGO \n    2 \n    Tversky \n    0 \n    0.800 \n    NA \n    NA \n    -0.214 \n    0.5 \n  \n  \n    AG \n    1 \n    Tversky \n    0 \n    0.933 \n    NA \n    NA \n    -0.143 \n    0.5 \n  \n  \n    E \n    179 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    EIJ \n    7 \n    Orthogonal \n    0 \n    -0.200 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EI \n    4 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EF \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    AE \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.929 \n    -1.0 \n  \n  \n    EFIJ \n    1 \n    Orthogonal \n    0 \n    -0.267 \n    NA \n    NA \n    0.857 \n    -1.0 \n  \n  \n    EG \n    3 \n    both tri + orth \n    0 \n    0.933 \n    NA \n    NA \n    0.929 \n    0.5 \n  \n  \n     \n    11 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABFGK \n    1 \n    frenzy \n    0 \n    0.800 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    CDEGHIJNZ \n    1 \n    frenzy \n    0 \n    0.467 \n    NA \n    NA \n    0.429 \n    -0.5 \n  \n  \n    DEHIJNOZ \n    1 \n    frenzy \n    0 \n    -0.533 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    DHNOZ \n    1 \n    frenzy \n    0 \n    -0.333 \n    NA \n    NA \n    -0.357 \n    -0.5 \n  \n  \n    EFIJM \n    1 \n    frenzy \n    0 \n    -0.333 \n    NA \n    NA \n    0.786 \n    -0.5 \n  \n  \n    IJ \n    9 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    I \n    8 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    M \n    7 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    O \n    5 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    AK \n    3 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    DN \n    3 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    F \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    IJM \n    3 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    J \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    L \n    3 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    CEG \n    2 \n    ? \n    0 \n    0.867 \n    NA \n    NA \n    0.857 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    AKO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    D \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.071 \n    -0.5 \n  \n  \n    DJMN \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.286 \n    -0.5 \n  \n  \n    DJN \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.214 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n  \n    NZ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.143 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Orthogonal\", 11, 16) %>%\n#   pack_rows(\"Other\", 17, 21) %>%\n#   pack_rows(\"Unknown\", 22, 45)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 8)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q8 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #10\n\n\n\nFigure 22.8: Q10-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==10)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    E \n     \n  \n  \n    Orthgonal \n    X \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    EGZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n    E \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #10\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 10) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #10\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    E \n    80 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    EF \n    1 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    21 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    G \n    5 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    XZ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    0.938 \n    0.5 \n  \n  \n    PZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    X \n    139 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FX \n    14 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BX \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.125 \n    NA \n    0.938 \n    -1.0 \n  \n  \n    F \n    3 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    5 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    CEGIO \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    B \n    35 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    IJ \n    5 \n    ? \n    0 \n    -0.125 \n    -0.125 \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    J \n    4 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    A \n    3 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    I \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    K \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    P \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 2) %>%\n#   pack_rows(\"Lines-Connect\", 3, 7) %>%\n#   pack_rows(\"Orthogonal\", 8, 11) %>%\n#   pack_rows(\"Other\", 12, 14) %>%\n#   pack_rows(\"Unknown\", 15, 27)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 10)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q10 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #11\n\n\n\nFigure 22.9: Q11-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==11)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at 12pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    ML \n     \n  \n  \n    Orthgonal \n    FB \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #11\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 11) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #11\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    LM \n    71 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    -0.125 \n    1.0 \n  \n  \n    M \n    9 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    L \n    2 \n    Triangular \n    1 \n    0.500 \n    NA \n    NA \n    -0.062 \n    1.0 \n  \n  \n    KL \n    1 \n    Tversky \n    0 \n    0.438 \n    NA \n    NA \n    -0.125 \n    0.5 \n  \n  \n    BF \n    233 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    B \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    DF \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    NA \n    NA \n    0.438 \n    -1.0 \n  \n  \n    F \n    1 \n    Orthogonal \n    0 \n    -0.062 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BLM \n    1 \n    both tri + orth \n    0 \n    0.938 \n    NA \n    NA \n    0.375 \n    0.5 \n  \n  \n     \n    3 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    ACDGHKLMNOPXZ \n    2 \n    frenzy \n    0 \n    0.312 \n    NA \n    NA \n    -0.812 \n    -0.5 \n  \n  \n    DHLMNOXZ \n    1 \n    frenzy \n    0 \n    0.625 \n    NA \n    NA \n    -0.500 \n    -0.5 \n  \n  \n    K \n    3 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    EIJ \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    KX \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 9) %>%\n#   pack_rows(\"Other\", 10, 12) %>%\n#   pack_rows(\"Unknown\", 13, 17)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 11)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 11)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q11 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #12\n\n\n\nFigure 22.10: Q12-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==12)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) start at the same time as F?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    G \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    GZ \n     \n  \n  \n    Tversky [start diagonal] \n    G \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n    Z \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #12\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 12) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #12\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    G \n    70 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    FG \n    4 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.062 \n    1.0 \n  \n  \n    Z \n    3 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.062 \n    0.5 \n  \n  \n    BJZ \n    1 \n    Tversky \n    0 \n    -0.188 \n    0.875 \n    NA \n    0.875 \n    0.5 \n  \n  \n    EG \n    1 \n    Tversky \n    0 \n    0.938 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    EZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.938 \n    NA \n    -0.125 \n    0.5 \n  \n  \n    B \n    236 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    7 \n    Orthogonal \n    0 \n    -0.062 \n    -0.062 \n    NA \n    1.000 \n    -1.0 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    CEGIO \n    1 \n    frenzy \n    0 \n    0.750 \n    0.750 \n    NA \n    -0.312 \n    -0.5 \n  \n  \n    X \n    3 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.062 \n    -0.062 \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Lines-Connect\", 4, 6) %>%\n#   pack_rows(\"Orthogonal\", 7, 8) %>%\n#   pack_rows(\"Other\", 9, 10) %>%\n#   pack_rows(\"Unknown\", 11, 14)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 12)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q12 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #13\n\n\n\nFigure 22.11: Q13-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==13)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which 2 shifts end when Z begins?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EF \n     \n  \n  \n    Orthgonal \n    FX \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #13\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 13) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #13\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EF \n    67 \n    Triangular \n    1 \n    1.000 \n    NA \n    NA \n    0.433 \n    1.0 \n  \n  \n    FX \n    170 \n    Orthogonal \n    0 \n    0.433 \n    NA \n    NA \n    1.000 \n    -1.0 \n  \n  \n    X \n    9 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BX \n    3 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    OX \n    2 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    JX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    MX \n    1 \n    Orthogonal \n    0 \n    -0.133 \n    NA \n    NA \n    0.433 \n    -1.0 \n  \n  \n    XZ \n    1 \n    Orthogonal \n    0 \n    -0.067 \n    NA \n    NA \n    0.500 \n    -1.0 \n  \n  \n    Z \n    1 \n    reference \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n     \n    5 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    F \n    14 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    BF \n    7 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    HL \n    7 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    DN \n    6 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HN \n    6 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    LP \n    6 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CO \n    2 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    EX \n    2 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    HLP \n    2 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    N \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AF \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    AG \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BFM \n    1 \n    ? \n    0 \n    0.367 \n    NA \n    NA \n    0.367 \n    -0.5 \n  \n  \n    BIJM \n    1 \n    ? \n    0 \n    -0.267 \n    NA \n    NA \n    -0.267 \n    -0.5 \n  \n  \n    BM \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    C \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CG \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    CGO \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    DJ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FG \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    FH \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    FNZ \n    1 \n    ? \n    0 \n    0.433 \n    NA \n    NA \n    0.433 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    NO \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 3) %>%\n#   pack_rows(\"Orthogonal\", 4, 13) %>%\n#   pack_rows(\"Other\", 14, 14) %>%\n#   pack_rows(\"Unknown\", 15, 36)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 13)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 13)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q13 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #14\n\n\n\nFigure 22.12: Q14-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==14)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) end at 3pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    X \n     \n  \n  \n    Orthgonal \n    B \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XJND \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n    X \n     \n  \n  \n    Tversky [duration line] \n    JND \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #14\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 14) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #14\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    X \n    80 \n    Triangular \n    1 \n    1.000 \n    1.000 \n    NA \n    -0.059 \n    1.0 \n  \n  \n    FX \n    2 \n    Tversky \n    0 \n    0.941 \n    0.941 \n    NA \n    -0.118 \n    0.5 \n  \n  \n    B \n    179 \n    Orthogonal \n    0 \n    -0.059 \n    -0.059 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    BF \n    7 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BI \n    1 \n    Orthogonal \n    0 \n    -0.118 \n    -0.118 \n    NA \n    0.941 \n    -1.0 \n  \n  \n    BIO \n    1 \n    Orthogonal \n    0 \n    -0.176 \n    -0.176 \n    NA \n    0.882 \n    -1.0 \n  \n  \n    BX \n    1 \n    both tri + orth \n    0 \n    0.941 \n    0.941 \n    NA \n    0.941 \n    0.5 \n  \n  \n     \n    24 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    DHLNPZ \n    1 \n    frenzy \n    0 \n    -0.353 \n    0.400 \n    NA \n    -0.353 \n    -0.5 \n  \n  \n    O \n    8 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    K \n    5 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    KO \n    3 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    F \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    G \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    HLP \n    2 \n    ? \n    0 \n    -0.176 \n    -0.176 \n    NA \n    -0.176 \n    -0.5 \n  \n  \n    I \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    M \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    Z \n    2 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    AF \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    E \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    FG \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    HI \n    1 \n    ? \n    0 \n    -0.118 \n    -0.118 \n    NA \n    -0.118 \n    -0.5 \n  \n  \n    L \n    1 \n    ? \n    0 \n    -0.059 \n    -0.059 \n    NA \n    -0.059 \n    -0.5 \n  \n  \n    NO \n    1 \n    ? \n    0 \n    -0.118 \n    0.267 \n    NA \n    -0.118 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 4) %>%\n#   pack_rows(\"Orthogonal\", 5, 7) %>%\n#   pack_rows(\"Other\", 8, 9) %>%\n#   pack_rows(\"Unknown\", 10, 22)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 14)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 14)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q14 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nQuestion #15\n\n\n\nFigure 22.13: Q15-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==15)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Coffee breaks happen halfway through a shift. Which shifts share a break at 2pm?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    XK \n     \n  \n  \n    Orthgonal \n    EF \n    B \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n    XKZ \n     \n  \n  \n    Tversky [start diagonal] \n    Z \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #15\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 15) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1))\n\n\n\nFrequency of Selected Response Options for Question #15\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    KX \n    79 \n    Triangular \n    1 \n    1.000 \n    0.667 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    X \n    4 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    CX \n    2 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    KO \n    2 \n    Triangular \n    1 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    1.0 \n  \n  \n    K \n    1 \n    Triangular \n    1 \n    0.500 \n    0.333 \n    NA \n    -0.067 \n    1.0 \n  \n  \n    FZ \n    3 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    0.433 \n    0.5 \n  \n  \n    AK \n    2 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    OX \n    2 \n    Tversky \n    0 \n    0.438 \n    0.267 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    HZ \n    1 \n    Tversky \n    0 \n    -0.125 \n    0.941 \n    NA \n    -0.133 \n    0.5 \n  \n  \n    Z \n    1 \n    Tversky \n    0 \n    -0.062 \n    1.000 \n    NA \n    -0.067 \n    0.5 \n  \n  \n    EF \n    127 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    F \n    30 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BF \n    24 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    E \n    9 \n    Orthogonal \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    BE \n    5 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.500 \n    -1.0 \n  \n  \n    CF \n    2 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    BEF \n    1 \n    Orthogonal \n    0 \n    -0.188 \n    -0.176 \n    NA \n    1.000 \n    -1.0 \n  \n  \n    FG \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FJ \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n    FN \n    1 \n    Orthogonal \n    0 \n    -0.125 \n    -0.118 \n    NA \n    0.433 \n    -1.0 \n  \n  \n     \n    9 \n    blank \n    0 \n    0.000 \n    0.000 \n    NA \n    0.000 \n    0.0 \n  \n  \n    ABCFG \n    1 \n    frenzy \n    0 \n    -0.312 \n    -0.294 \n    NA \n    0.300 \n    -0.5 \n  \n  \n    B \n    5 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    0.000 \n    -0.5 \n  \n  \n    BM \n    2 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    C \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    FX \n    2 \n    ? \n    0 \n    0.438 \n    0.267 \n    NA \n    0.433 \n    -0.5 \n  \n  \n    H \n    2 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    A \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AG \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    BC \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    CO \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    GM \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    HL \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    0 \n    -0.125 \n    -0.118 \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    O \n    1 \n    ? \n    0 \n    -0.062 \n    -0.059 \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Triangular\", 1, 10) %>%\n#   pack_rows(\"Lines-Connect\", 11, 13) %>%\n#   pack_rows(\"Orthogonal\", 14, 22) %>%\n#   pack_rows(\"Other\", 23, 23) %>%\n#   pack_rows(\"Unknown\", 24, 44)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 15)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 15)) %>%\n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q15 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nNON-DISCRIMINANT QUESTIONS\n\nQuestion #6 NONDISCRIM\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q ==6)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q6 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\n\nFigure 22.14: Q6-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==6)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) are six hours long?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    EG \n     \n  \n  \n    Orthgonal \n    EG \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\nTODO discuss non discriminant\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #6\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q == 6) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #6\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    EG \n    313 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    2 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    DHKLNOPXZ \n    1 \n    frenzy \n    0 \n    -0.562 \n    NA \n    NA \n    -0.562 \n    -0.5 \n  \n  \n    DHLNPZ \n    1 \n    frenzy \n    0 \n    -0.375 \n    NA \n    NA \n    -0.375 \n    -0.5 \n  \n  \n    E \n    3 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    O \n    2 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    CFI \n    1 \n    ? \n    0 \n    -0.188 \n    NA \n    NA \n    -0.188 \n    -0.5 \n  \n  \n    CH \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    EF \n    1 \n    ? \n    0 \n    0.438 \n    NA \n    NA \n    0.438 \n    -0.5 \n  \n  \n    EGH \n    1 \n    ? \n    0 \n    0.938 \n    NA \n    NA \n    0.938 \n    -0.5 \n  \n  \n    G \n    1 \n    ? \n    0 \n    0.500 \n    NA \n    NA \n    0.500 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    J \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n  \n    JM \n    1 \n    ? \n    0 \n    -0.125 \n    NA \n    NA \n    -0.125 \n    -0.5 \n  \n  \n    M \n    1 \n    ? \n    0 \n    -0.062 \n    NA \n    NA \n    -0.062 \n    -0.5 \n  \n\n\n\n\n\n\n\nQuestion #9 NONDISCRIM\n\n\n\nFigure 22.15: Q9-Question\n\n\n\n\nCODE\nq <- keys_raw %>% filter(Q==9)\nignore <- q %>% select(\"REF_POINT\")\nanswers <- q %>% select(\"TRIANGULAR\", \"ORTHOGONAL\", \"SATISFICE_left\", \"SATISFICE_right\",\"TV_max\",\"TV_start\", \"TV_end\", \"TV_dur\") %>% unlist()\nves <- q %>% mutate(\n  SATISFICE_left_allow = \"\",\n  SATISFICE_right_allow = \"\"\n) %>% select(\"TRI_allow\", \"ORTH_allow\", \"SATISFICE_left_allow\",\"SATISFICE_right_allow\", \"TV_max_allow\",\"TV_start_allow\",\"TV_end_allow\", \"TV_dur_allow\")%>% unlist()\noptions <- q %>% select(\"OPTIONS\")\nquestion = q %>%  select(\"TEXT\")\nscores <- c(\"Triangular\", \"Orthgonal\", \"Satisficing [left]\", \"Satisficing [right]\", \"Tversky [maximal]\", \"Tversky [start diagonal]\",\n            \"Tversky [end diagonal]\", \"Tversky [duration line]\")\nd = tibble(interpretation = scores, answer = answers, allowed=ves)\nd$answer <- replace_na(d$answer, \"\")\nd$allowed <- replace_na(d$allowed, \"\")\n\ntitle = paste(\"Answer Key | Q : \", question)\ncols = c(\"interpretation\", \"answer\",\"not penalized\")\n\nd %>% kbl(caption = title, col.names = cols) %>% kable_classic() %>%\n  footnote(general = paste(\"15 response options: \", options), general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nAnswer Key | Q :  Which shift(s) begins before J begins and ends during B?\n \n  \n    interpretation \n    answer \n    not penalized \n  \n \n\n  \n    Triangular \n    I \n     \n  \n  \n    Orthgonal \n    I \n     \n  \n  \n    Satisficing [left] \n     \n     \n  \n  \n    Satisficing [right] \n     \n     \n  \n  \n    Tversky [maximal] \n     \n     \n  \n  \n    Tversky [start diagonal] \n     \n     \n  \n  \n    Tversky [end diagonal] \n     \n     \n  \n  \n    Tversky [duration line] \n     \n     \n  \n\n\nNote:   15 response options:  ABCDEFGHIJKLMNOPZX\n\n\n\n\n\n\nCODE\ntitle <- \"Frequency of Selected Response Options for Question #9\"\nnames = c(\"response\",\"n\",\"interpretation\",\"absolute\",\"tri\",\"tversky\",\"satisfice\",\"orthogonal\", \"scaled score\")\n\ndf_items %>% filter(q ==9) %>% group_by(response) %>%\n  dplyr::summarise( count = n(),\n                    nice = unique(score_niceABS),\n                    triangular = unique(score_TRI),\n                    orthogonal =  unique(score_ORTH),\n                    satisficing =  unique(score_SATISFICE),\n                    tversky = unique(score_TVERSKY),\n                    interpretation = unique(int2),\n                    scaled = unique(score_SCALED)) %>%\n  arrange(interpretation, desc(count)) %>%\n  dplyr::select(response, count, interpretation, nice,\n         triangular, tversky, satisficing, orthogonal, scaled) %>%\n  kbl(caption = title, col.names = names) %>%  kable_classic() %>%\n  add_header_above(c(\" \" = 3, \"Strict Score\" = 1, \"Interpretation Scores\"=4, \"Discriminant\"=1)) \n\n\n\nFrequency of Selected Response Options for Question #9\n \n\n\nStrict Score\nInterpretation Scores\nDiscriminant\n\n  \n    response \n    n \n    interpretation \n    absolute \n    tri \n    tversky \n    satisfice \n    orthogonal \n    scaled score \n  \n \n\n  \n    I \n    258 \n    both tri + orth \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    0.5 \n  \n  \n     \n    17 \n    blank \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    0.0 \n  \n  \n    E \n    29 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    M \n    6 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    IM \n    3 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    J \n    3 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    B \n    2 \n    ? \n    0 \n    0.000 \n    NA \n    NA \n    0.000 \n    -0.5 \n  \n  \n    EI \n    2 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    F \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    K \n    2 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    AKP \n    1 \n    ? \n    0 \n    -0.200 \n    NA \n    NA \n    -0.200 \n    -0.5 \n  \n  \n    EH \n    1 \n    ? \n    0 \n    -0.133 \n    NA \n    NA \n    -0.133 \n    -0.5 \n  \n  \n    FI \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    H \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n  \n    IJ \n    1 \n    ? \n    1 \n    1.000 \n    NA \n    NA \n    1.000 \n    -0.5 \n  \n  \n    IO \n    1 \n    ? \n    0 \n    0.933 \n    NA \n    NA \n    0.933 \n    -0.5 \n  \n  \n    N \n    1 \n    ? \n    0 \n    -0.067 \n    NA \n    NA \n    -0.067 \n    -0.5 \n  \n\n\n\n\n\nCODE\n# %>%\n#   pack_rows(\"Other\", 1, 2) %>%\n#   pack_rows(\"Unknown\", 3, 19)\n\n\n\n\nCODE\ngf_dhistogram(~ score_niceABS, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Scaled Item Score\", title = \"Distribution of Scaled Scores | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\ngf_props(~interpretation, fill = ~condition, data = df_items %>% filter(q == 9)) %>% \n  gf_facet_grid( condition ~ ., labeller = label_both) + \n  labs( x = \"Interpretation\", title = \"Distribution of Interpretations | Q9 \") + \n  theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "analysis/SGC4D/2_sgc4D_scoring.html#export",
    "href": "analysis/SGC4D/2_sgc4D_scoring.html#export",
    "title": "22  Response Scoring",
    "section": "EXPORT",
    "text": "EXPORT\n\n\nCODE\ntable(df_subjects$mode, df_subjects$pretty_condition) %>% addmargins()\n\n\n           \n            Orth-Isosceles Tri-Isosceles Orth-Equilateral Tri-Equilateral Sum\n  lab-synch             62            58                0               0 120\n  asynch                 0            94               57              60 211\n  Sum                   62           152               57              60 331\n\n\n\n\nCODE\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4D/data/2-scored-data/sgc4d_scored_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4D/data/2-scored-data/sgc4d_scored_items.csv\", row.names = FALSE)\nwrite.csv(df_absolute_progress,\"analysis/SGC4D/data/2-scored-data/sgc4d_absolute_progress.csv\", row.names = FALSE)\nwrite.csv(df_scaled_progress,\"analysis/SGC4D/data/2-scored-data/sgc4d_scaled_progress.csv\", row.names = FALSE)\n\n#SAVE R Data Structures\n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4D/data/2-scored-data/sgc4d_scored_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4D/data/2-scored-data/sgc4d_scored_items.rds\") # to R data structure file"
  },
  {
    "objectID": "analysis/SGC4D/2_sgc4D_scoring.html#resources",
    "href": "analysis/SGC4D/2_sgc4D_scoring.html#resources",
    "title": "22  Response Scoring",
    "section": "RESOURCES",
    "text": "RESOURCES\nset operations\nhttps://stat.ethz.ch/R-manual/R-devel/library/base/html/sets.html\nkableExtra tables\nhttps://haozhu233.github.io/kableExtra/awesome_table_in_html.html#grouped_columns__rows\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] forcats_0.5.1          stringr_1.4.0          dplyr_1.0.9           \n [4] purrr_0.3.4            readr_2.1.2            tidyr_1.2.0           \n [7] tibble_3.1.7           tidyverse_1.3.1        tidyfst_1.6.5         \n[10] statsExpressions_1.3.2 ggstatsplot_0.9.3      Hmisc_4.7-0           \n[13] Formula_1.2-4          survival_3.3-1         lattice_0.20-45       \n[16] pbapply_1.5-0          ggformula_0.10.1       ggridges_0.5.3        \n[19] scales_1.2.0           ggstance_0.3.5         ggplot2_3.3.6         \n[22] kableExtra_1.3.4      \n\nloaded via a namespace (and not attached):\n  [1] TH.data_1.1-1          colorspace_2.0-3       rio_0.5.29            \n  [4] ellipsis_0.3.2         estimability_1.4       htmlTable_2.4.0       \n  [7] fs_1.5.2               parameters_0.18.1      base64enc_0.1-3       \n [10] rstudioapi_0.13        farver_2.1.0           MatrixModels_0.5-0    \n [13] ggrepel_0.9.1          bit64_4.0.5            fansi_1.0.3           \n [16] mvtnorm_1.1-3          lubridate_1.8.0        xml2_1.3.3            \n [19] codetools_0.2-18       splines_4.2.1          knitr_1.39            \n [22] polyclip_1.10-0        zeallot_0.1.0          jsonlite_1.8.0        \n [25] broom_0.8.0            cluster_2.1.3          dbplyr_2.2.1          \n [28] png_0.1-7              effectsize_0.7.0       ggforce_0.3.3         \n [31] compiler_4.2.1         httr_1.4.3             emmeans_1.7.5         \n [34] backports_1.4.1        assertthat_0.2.1       Matrix_1.4-1          \n [37] fastmap_1.1.0          cli_3.3.0              tweenr_1.0.2          \n [40] htmltools_0.5.2        tools_4.2.1            coda_0.19-4           \n [43] gtable_0.3.0           glue_1.6.2             Rcpp_1.0.8.3          \n [46] cellranger_1.1.0       vctrs_0.4.1            svglite_2.1.0         \n [49] insight_0.18.2         xfun_0.31              openxlsx_4.2.5        \n [52] rvest_1.0.2            lifecycle_1.0.1        mosaicCore_0.9.0      \n [55] MASS_7.3-57            zoo_1.8-10             vroom_1.5.7           \n [58] BayesFactor_0.9.12-4.4 hms_1.1.1              parallel_4.2.1        \n [61] sandwich_3.0-2         rematch2_2.1.2         RColorBrewer_1.1-3    \n [64] prismatic_1.1.0        curl_4.3.2             yaml_2.3.5            \n [67] gridExtra_2.3          labelled_2.9.1         rpart_4.1.16          \n [70] latticeExtra_0.6-29    stringi_1.7.6          highr_0.9             \n [73] paletteer_1.4.0        bayestestR_0.12.1      checkmate_2.1.0       \n [76] zip_2.2.0              boot_1.3-28            fstcore_0.9.12        \n [79] rlang_1.0.3            pkgconfig_2.0.3        systemfonts_1.0.4     \n [82] evaluate_0.15          labeling_0.4.2         patchwork_1.1.1       \n [85] htmlwidgets_1.5.4      bit_4.0.4              tidyselect_1.1.2      \n [88] plyr_1.8.7             magrittr_2.0.3         R6_2.5.1              \n [91] generics_0.1.2         multcomp_1.4-19        DBI_1.1.3             \n [94] pillar_1.7.0           haven_2.5.0            foreign_0.8-82        \n [97] withr_2.5.0            datawizard_0.5.1       nnet_7.3-17           \n[100] performance_0.9.1      modelr_0.1.8           crayon_1.5.1          \n[103] utf8_1.2.2             tzdb_0.3.0             correlation_0.8.1     \n[106] rmarkdown_2.14         jpeg_0.1-9             readxl_1.4.0          \n[109] grid_4.2.1             data.table_1.14.2      reprex_2.0.1          \n[112] digest_0.6.29          webshot_0.5.3          xtable_1.8-4          \n[115] munsell_0.5.0          fst_0.9.8              viridisLite_0.4.0"
  },
  {
    "objectID": "analysis/SGC4D/4_sgc4D_hypotesting.html",
    "href": "analysis/SGC4D/4_sgc4D_hypotesting.html",
    "title": "23  Hypothesis Testing",
    "section": "",
    "text": "The purpose of this notebook is test the hypotheses that determined the design of the SGC4D study.\nIn SGC4D we set out to answer the following question: Does altering the SHAPE (from square/orthogonal to triangular) or SCALE (from isosceles to equilateral) improve performance on the interval graph comprehension task?"
  },
  {
    "objectID": "analysis/SGC4D/4_sgc4D_hypotesting.html#sample",
    "href": "analysis/SGC4D/4_sgc4D_hypotesting.html#sample",
    "title": "23  Hypothesis Testing",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\nData was collected (online, via PROLIFIC) in Summer 2022. Data from equilateral conditions were joined with previously collected (online) data for for isosceles conditions.\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Condition\",\"Total for Period\")\ncont <- table(df_subjects$pretty_condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols ) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n    Condition \n    Total for Period \n  \n \n\n  \n    Orth-Isosceles \n    62 \n  \n  \n    Tri-Isosceles \n    60 \n  \n  \n    Orth-Equilateral \n    57 \n  \n  \n    Tri-Equilateral \n    60 \n  \n  \n    Sum \n    239 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.male <- ((df_subjects %>% filter(gender==\"Male\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.female <- ((df_subjects %>% filter(gender==\"Female\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.other <- ((df_subjects %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())/count(df_subjects))$n\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n     \n    18 \n    20 \n    22 \n    32 \n    71 \n    27.4 \n    11.1 \n    239 \n    0 \n    0.423 \n    0.548 \n    0.029 \n  \n\n\nNote:   Age in Years\n\n\n\n\nTODO\nOverall 239 participants (42 % male, 55 % female, 3 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 71 years)."
  },
  {
    "objectID": "analysis/SGC4D/4_sgc4D_hypotesting.html#overall-accuracy",
    "href": "analysis/SGC4D/4_sgc4D_hypotesting.html#overall-accuracy",
    "title": "23  Hypothesis Testing",
    "section": "OVERALL ACCURACY",
    "text": "OVERALL ACCURACY\n\nSetup\n\n\nCODE\ndf_s <- df_subjects %>%\n  dplyr::select(pretty_condition, task_percent, SHAPE, SCALE)\n\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% \n  dplyr::select(pretty_condition, accuracy, subject, q, SHAPE, SCALE )\n\n#validate\nnrow(df_i) /nrow(df_s) ==13\n\n\n[1] TRUE\n\n\n\n\nVisualize\n\nExplore\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap( ~ q ) +\n   labs(title = \"Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Q6 and Q9 are non-discriminative\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\ngf_props(~task_percent,\n         fill = ~pretty_condition, data = df_s) %>%\n  gf_facet_grid(SHAPE ~ SCALE) +\n  labs(x = \"% Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score (% Correct)\",\n       subtitle = \"\") + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nPresent\n\n\nCODE\np <- grouped_ggbetweenstats(data = df_s,\n                       y = task_percent, x = SHAPE, grouping.var = SCALE,\n               plot.type = \"box\", type = \"nonparametric\", var.equal = FALSE,\n               centrality.type = \"parametric\",\n               results.subtitle = FALSE,\n               centrality.point.args = list(color=\"black\", size = 3, shape = 1),\n               # point.args = list(alpha=0), #suppress points\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  labs(y = \"Percentage of correct responses across task\", x = \"\"),\n                  # aes(color = pretty_condition, fill = pretty_condition),\n                  scale_fill_grey(), scale_color_grey()\n                  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  # scale_fill_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3))\n                  # theme(axis.text.x = element_text(angle = 90)\n                )) \n\np1 <- p[[1]] + coord_flip() + theme_clean() +\n   ggeasy::easy_remove_legend()\n\np2 <- p[[2]] + coord_flip() + theme_clean() +\n  ggeasy::easy_remove_legend() + \n  labs(\n       subtitle = \"TODO\") + \n  theme_clean() + ggeasy::easy_remove_axes(which = \"x\") + ggeasy::easy_remove_legend()\n\n\npg <- plot_grid(p2, p1, ncol=1)\npg\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = SHAPE,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\", width = 0.75 ) + #,color = \"black\") +\n  scale_fill_foxy(discrete = TRUE, \"accuracy\")  +\n  # scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))+\n  facet_wrap(~SCALE)+\n  theme(legend.position=\"bottom\")+\n   labs(title = \"DISTRIBUTION | Question Accuracy\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: LABELLED \n# \n# temp <- df_i %>% mutate(\n#   accuracy = fct_rev(accuracy)\n# )  \n# \n# #CREATE PLOT WITH LABELS\n# p <- grouped_ggbarstats(data = temp, x = accuracy, y = pretty_condition,\n#                grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                ))  + theme_clean() \n# \n# #FIX LABELS\n# p1 <- p[[1]] +  labs(\n#   subtitle = \"Impasse is particularly effective for subjects with high-working memory\",\n#     x = \"Condition\", y = \"Probability of Response\"\n#   ) + theme_clean() + theme(legend.position = \"blank\") \n#  \n# p2 <-   p[[2]] + labs(\n#     x = \"Condition\", y = \"Probability of Response\",\n#     subtitle = \"   \"\n#   ) + theme_clean() + theme(legend.position = \"blank\") +\n#   ggeasy::easy_remove_axes(which=\"y\", what=c(\"text\",\"title\"))\n#   # ggeasy::easy_remove_axes(which=\"y\", what= \"\"))\n# \n# #CREATE ROW\n# \n# plot_row <- plot_grid(p1,p2, rel_widths = c(1,0.85))\n# \n# title <- ggdraw() + \n#   draw_label(\n#     \"DISTRIBUTION | Question Accuracy\",\n#     fontface = 'bold',\n#     x = 0,\n#     hjust = 0\n#   ) +\n#   theme(\n#     # add margin on the left of the drawing canvas,\n#     # so title is aligned with left edge of first plot\n#     plot.margin = margin(0, 0, 0, 7)\n#   )\n# \n# \n# pg <- plot_grid(\n#   title,\n#   plot_row,\n#   ncol = 1,\n#   # rel_heights values control vertical title margins\n#   rel_heights = c(0.1, 1)\n# ) + theme_clean()\n#   \n# pg\n# ggsave(pg, filename = \"figures/SGC4D_OSPAN_Accuracy.png\", width = 6, height =4)\n\n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct)\"\ntbl1 <- mosaic::favstats(~task_percent, data = df_s) \ntbl1 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0 \n    0 \n    0 \n    0.154 \n    1 \n    0.203 \n    0.34 \n    239 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\"\ntbl2 <- mosaic::favstats(task_percent ~ pretty_condition, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\n \n  \n    pretty_condition \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    Orth-Isosceles \n    0 \n    0 \n    0.000 \n    0.154 \n    1 \n    0.211 \n    0.370 \n    62 \n    0 \n  \n  \n    Tri-Isosceles \n    0 \n    0 \n    0.077 \n    0.692 \n    1 \n    0.287 \n    0.384 \n    60 \n    0 \n  \n  \n    Orth-Equilateral \n    0 \n    0 \n    0.000 \n    0.077 \n    1 \n    0.119 \n    0.255 \n    57 \n    0 \n  \n  \n    Tri-Equilateral \n    0 \n    0 \n    0.077 \n    0.154 \n    1 \n    0.191 \n    0.317 \n    60 \n    0 \n  \n\n\n\n\n\nTODO\nAcross both conditions, overall accuracy on the task ranges from 0 to 100 with a mean of 20.309. We see that the distribution of this outcome variable is clearly bimodal: with modes near the floor (0% correct) and ceiling (100% correct) of the scale. This bimodality is sensical considering the nature of the task, where each item in the task indexes a different information extraction operation over the same coordinate system.\nTask level accuracy on the graph comprehension task follows the same pattern of behaviour observed in Study 4D: the distribution is bimodal. Total scores were higher in the impasse condition (M = 35%, SD = 41%, n = 65) than control condition (M = 15%, SD = 30%, n = 68), implying a likely main effect of scaffold condition. Comparing total scores across the median split on the OSPAN task (high working memory (vs) low working memory), we see readers with high working memory (M = 31 %, SD = 41%, n = 66) performed better than readers with low working memory (M = 19 %, SD = 31%, n = 67). In Figure \\(\\ref{fig_3C_ospan_raw_accuracy}\\) we see that while readers in the impasse condition performed consistently better than those in the control condition, the effect is particularly pronounced for readers with high-working memory, implying a potential interaction between condition and working memory.\n\nTESTS\n\nAligned Ranks Transformation\n\n\n\nCODE\nlibrary(ARTool)\nm.art = art(task_percent ~ SHAPE*SCALE, data = df_s)\nanova(m.art)\n\n\nAnalysis of Variance of Aligned Rank Transformed Data\n\nTable Type: Anova Table (Type III tests) \nModel: No Repeated Measures (lm)\nResponse: art(task_percent)\n\n              Df Df.res F value Pr(>F)  \n1 SHAPE        1    235  3.8475   0.05 .\n2 SCALE        1    235  1.5633   0.21  \n3 SHAPE:SCALE  1    235  0.4873   0.49  \n---\nSignif. codes:   0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n\n\n\n\nKruskal Wallis Test\n\n\nCODE\n(k <- kruskal.test(df_s$task_percent ~ df_s$pretty_condition))\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  df_s$task_percent by df_s$pretty_condition\nKruskal-Wallis chi-squared = 5, df = 3, p-value = 0.1\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STATSPLOT | VIOLIN\ngrouped_ggbetweenstats(y = task_percent, x = SHAPE, grouping.var = SCALE,  \n               data = df_s, type = \"nonparametric\")\n\n\n\n\n\nCODE\ngrouped_ggbetweenstats(y = task_percent, x = SCALE, grouping.var = SHAPE,  \n               data = df_s, type = \"nonparametric\")\n\n\n\n\n\n\n\n\nMIXED LOGISTIC REGRESSION\nFit a mixed logistic regression (at the item level), predicting accuracy (absolute score) on all discriminating questions by condition; accounting for random effects of subject and item.\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 13\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy) && is.factor(df_i$SCALE) && is.factor(df_i$SHAPE)\n\n\n[1] TRUE\n\n\nCODE\n## 1 | SETUP RANDOM EFFECTS\n\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n## 0 | SIMPLE FLAT CONDITION MODEL\n\nprint(\"FIXED Condition + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.CrSQ <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n\n\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.192238 (tol = 0.002, component 1)\n\n\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : Model is nearly unidentifiable: very large eigenvalue\n - Rescale variables?\n\n\nCODE\n#summary(mm.CrSQ)\n# car::Anova(mm.CrSQ)\n\n## 2 | ADD MAIN EFFECTS  SHAPE\n\nprint(\"FIXED Scale + FIXED Shape + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Scale + FIXED Shape + Subject & Item random intercepts\"\n\n\nCODE\nmm.R.S.rSQ <- glmer(accuracy ~ SCALE + SHAPE + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n#summary(mm.R.S.rSQ)\n# car::Anova(mm.R.S.rSQ, type = 2)\n# shape term shape significant with directional test (p/2)\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.R.S.rSQ)) )\n\n\n[1] \"AIC decreases w/ new model FALSE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.R.S.rSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName       |    Model | df | df_diff | Chi2 |     p\n---------------------------------------------------\nmm.rSQ     | glmerMod |  3 |         |      |      \nmm.R.S.rSQ | glmerMod |  5 |       2 | 3.41 | 0.182\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rSQ,mm.R.S.rSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.182050590038501\"\n\n\nCODE\n#adding shape predictor improves fit\n# predictor model is not a significantly better fit than random only. but we proceed with it\n# for the purpose of quantifying the size of the small effect\n\n## 3 | ADD INTERACTION TERM,\n\nprint(\"FIXED Scale * Shape + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Scale * Shape + Subject & Item random intercepts\"\n\n\nCODE\nmm.RSrSQ <- glmer(accuracy ~ SCALE * SHAPE  + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# summary(mm.RSrSQ)\n# car::Anova(mm.RSrSQ, type = 3)\n# adding interaction term makes shape significant\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.R.S.rSQ)) > AIC(logLik(mm.RSrSQ)) )\n\n\n[1] \"AIC decreases w/ new model FALSE\"\n\n\nCODE\ntest_lrt(mm.R.S.rSQ,mm.RSrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName       |    Model | df | df_diff | Chi2 |     p\n---------------------------------------------------\nmm.R.S.rSQ | glmerMod |  5 |         |      |      \nmm.RSrSQ   | glmerMod |  6 |       1 | 0.51 | 0.475\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.R.S.rSQ,mm.RSrSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.474967062052183\"\n\n\nCODE\npaste(\"Model Performance\")\n\n\n[1] \"Model Performance\"\n\n\nCODE\nperformance(mm.R.S.rSQ)\n\n\n# Indices of model performance\n\nAIC      |     AICc |      BIC | R2 (cond.) | R2 (marg.) |   ICC |  RMSE | Sigma | Log_loss | Score_log | Score_spherical\n-------------------------------------------------------------------------------------------------------------------------\n1462.536 | 1462.556 | 1492.743 |      0.932 |      0.024 | 0.930 | 0.199 | 1.000 |    0.131 |      -Inf |           0.012\n\n\nTOOD\nTo explore the effect of working memory capacity on ACCURACY, we fit a mixed effects logistic regression model with random intercepts for subjects and questions, with SHAPE AND SCALE as fixed effects A likelihood ratio test indicates that a model including these main effects explains significantly more variance in the data than an intercepts-only baseline model (\\(\\chi^2 (3,6) = 105.93, p < 0.001\\)). We also fit a model including an interaction term between SHAPE and SCALE, however a likelihood ratio test indicated that adding the interaction term did not improve model fit (\\(\\chi^2 (6,8) = 0.18, p = 0.91\\)) Therefore we chose the simple main effects model (with random intercepts) as the final model.\nThe explanatory power of the entire model is substantial (\\(conditional \\ R^2 = 0.80\\)) and the part related to the fixed effects SHAPE and SCALE (\\(marginal \\ R^2\\)) explains 20% of variance.\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.R.S.rSQ #MAIN EFFECTS MODEL\nm %>% write_rds(file = \"analysis/SGC4D/models/sgc4d_glmer_acc_mm.R.S.rSQ.rds\")\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ SCALE + SHAPE + (1 | subject) + (1 | q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n    1462     1493     -726     1452     3102 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-8.846 -0.100 -0.028 -0.012  6.446 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 43.175   6.571   \n q       (Intercept)  0.634   0.797   \nNumber of obs: 3107, groups:  subject, 239; q, 13\n\nFixed effects:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)        -7.443      1.988   -3.74  0.00018 ***\nSCALEequilateral   -0.751      0.948   -0.79  0.42819    \nSHAPETRI            2.050      1.152    1.78  0.07516 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) SCALEq\nSCALEeqltrl -0.555       \nSHAPETRI     0.414 -0.213\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=2) #TYPE 3 SS FOR main effects\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n      Chisq Df Pr(>Chisq)  \nSCALE  0.63  1      0.428  \nSHAPE  3.17  1      0.075 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n# se <- sqrt(diag(stats::vcov(m)))\n# (tab <- cbind(Est = fixef(m),\n#               LL = fixef(m) - 1.96 * se,\n#               UL = fixef(m) + 1.96 * se))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 5 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…   -7.44      1.99     -3.74   1.81e-4  -11.3       -3.55\n2 fixed    <NA>   SCAL…   -0.751     0.948    -0.792  4.28e-1   -2.61       1.11\n3 fixed    <NA>   SHAP…    2.05      1.15      1.78   7.52e-2   -0.208      4.31\n4 ran_pars subje… sd__…    6.57     NA        NA     NA         NA         NA   \n5 ran_pars q      sd__…    0.797    NA        NA     NA         NA         NA   \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n# (e <- exp(tab))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 5 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int… 0.000585   0.00116    -3.74   1.81e-4  1.19e-5    0.0288\n2 fixed    <NA>   SCAL… 0.472      0.447      -0.792  4.28e-1  7.36e-2    3.03  \n3 fixed    <NA>   SHAP… 7.77       8.95        1.78   7.52e-2  8.12e-1   74.4   \n4 ran_pars subje… sd__… 6.57      NA          NA     NA       NA         NA     \n5 ran_pars q      sd__… 0.797     NA          NA     NA       NA         NA     \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#sanity check\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\n# newdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n# preds <- predict(m, newdata = newdata, type = \"response\")\n# preds <- cbind(newdata, preds)\n# p <- preds %>% \n#   dplyr::select(pretty_condition, preds) %>% \n#   group_by(pretty_condition) %>% \n#   summarise(\n#     median = median(preds),\n#     se = sd(preds)/sqrt(n()),\n#     lwr = median - 1.96*se,\n#     upr = median + 1.96*se)\n    \n  \n#FROM merTools\nnewdata <- df_i %>% dplyr::select(SCALE, SHAPE, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning: executing %dopar% sequentially: no parallel backend registered\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(SCALE, SHAPE, fit, lwr, upr) %>% \n  group_by(SCALE, SHAPE) %>% \n  summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 4 × 5\n# Groups:   SCALE [2]\n  SCALE       SHAPE   median     lower   upper\n  <fct>       <fct>    <dbl>     <dbl>   <dbl>\n1 isosceles   ORTH  0.000555 0.0000327 0.00806\n2 isosceles   TRI   0.00427  0.000117  0.123  \n3 equilateral ORTH  0.000261 0.0000224 0.00280\n4 equilateral TRI   0.00196  0.0000797 0.0469 \n\n\n\n\nINFERENCE\nTODO\nAlthough Wald Chi-Square tests revealed significant main effects of both SHAPE (\\(\\chi^2 (1) = 10.8, p < 0.001\\)) and SCALE (\\(\\chi^2 (1) = 94.9, p < 0.001\\)).\nThe model predicts that, for ORTHOGONAL shaped graphs, rotating the graph from 0 to 45 degrees increases the probability of a correct response from 1% to 47%. Further rotating the graph to 90 degrees however, results in a probability of only 3%. Posthoc comparisons indicate that the difference between 0 and 90 degree rotation is not significant (OR = 0.60, SE = 0.26 , p = 0.24)\nThe model predicts that, for TRIANGULAR shaped graphs, rotating the graph from 0 to 45 degrees increases the probability of a correct response from 5% to 74%. Further rotating the graph to 90 degrees however, results in a probability of only 9%. Posthoc comparisons indicate that the difference between 0 and 90 degree rotation is not significant (OR = 0.60, SE = 0.26 = 0.25).\nAcross both graph shapes, rotating the graph from 0 to 90 degrees results in a minor improvement in accuracy, while rotating the graph halfway between results in a substantial improvement in accuracy. Posthoc comparisons also reveal that across all levels of rotation, the triangular shape was significantly better than the orthogonal shape.\n\n\nMarginal Effects\n\n\nCODE\n# https://cran.r-project.org/web/packages/emmeans/vignettes/interactions.html#simple\n# https://stats.oarc.ucla.edu/stata/faq/how-can-i-understand-a-categorical-by-categorical-interaction-in-logistic-regression-stata-12/\n# https://stats.oarc.ucla.edu/stata/seminars/deciphering-interactions-in-logistic-regression/\n  \nlibrary(emmeans)\n\n#sanity check reference grid\nref_grid(m)\n\n\n'emmGrid' object with variables:\n    SCALE = isosceles, equilateral\n    SHAPE = ORTH, TRI\nTransformation: \"logit\" \n\n\nCODE\n#PRINT ESTIMATED MARGINAL MEANS\n#should be same as summ_preds\nemmeans(m,  ~ SCALE * SHAPE, type = \"response\")\n\n\n SCALE       SHAPE    prob      SE  df asymp.LCL asymp.UCL\n isosceles   ORTH  0.00058 0.00116 Inf 0.0000119     0.028\n equilateral ORTH  0.00028 0.00046 Inf 0.0000106     0.007\n isosceles   TRI   0.00453 0.01207 Inf 0.0000239     0.464\n equilateral TRI   0.00214 0.00502 Inf 0.0000215     0.177\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n\nCODE\n##POST-HOC COMPARISONS\nprint(\"POSTHOC COMPARISONS\")\n\n\n[1] \"POSTHOC COMPARISONS\"\n\n\nCODE\nemmeans(m,  pairwise ~ SCALE * SHAPE, \n        type = \"response\" , adjust = \"none\") #sidak, tukey\n\n\n$emmeans\n SCALE       SHAPE    prob      SE  df asymp.LCL asymp.UCL\n isosceles   ORTH  0.00058 0.00116 Inf 0.0000119     0.028\n equilateral ORTH  0.00028 0.00046 Inf 0.0000106     0.007\n isosceles   TRI   0.00453 0.01207 Inf 0.0000239     0.464\n equilateral TRI   0.00214 0.00502 Inf 0.0000215     0.177\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast                           odds.ratio    SE  df null z.ratio p.value\n isosceles ORTH / equilateral ORTH       2.119 2.009 Inf    1   0.792  0.4280\n isosceles ORTH / isosceles TRI          0.129 0.148 Inf    1  -1.779  0.0750\n isosceles ORTH / equilateral TRI        0.273 0.362 Inf    1  -0.979  0.3280\n equilateral ORTH / isosceles TRI        0.061 0.100 Inf    1  -1.708  0.0880\n equilateral ORTH / equilateral TRI      0.129 0.148 Inf    1  -1.779  0.0750\n isosceles TRI / equilateral TRI         2.119 2.009 Inf    1   0.792  0.4280\n\nTests are performed on the log odds ratio scale \n\n\nCODE\n##PLOT INTERACTION\n#equivalent to plot_model, type = \"int\"\n# emmip(m, SHAPE * SCALE ,\n#       type = \"response\",\n#       CIs = TRUE,\n#       linearg = list(linetype = \"dashed\"),\n#       engine = \"ggplot\")\n\n\n##PLOT PROBABILITY\nplot(ref_grid(m), by = \"SHAPE\", type = \"response\")\n\n\n\n\n\n\n\nTODO Print\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# title = \"Study 4D | Question Accuracy | Mixed Logistic Regression\"\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              paste(\"n = \",n_obs(m), \"R^2(Conditional) =\", round(r2(m)[[1]],2),\n#                    \"R^2(Marginal) =\", round(r2(m)[[2]],2)),\n#              \"Accuracy  ~ Condition * OSPAN +  (1 | subject) + (1 | q)\")\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = title,\n#              notes = notes,\n#              output = \"tables/SGC3C_OSPAN_GLMER_OverallAccuracy.tex\")\n#              # coef_omit = \"Intercept\",\n\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n# #SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\", terms = c(\"SHAPE\", \"SCALE\"))  \n\n\n\n\n\nCODE\nplot_model(m, type = \"eff\",  terms = c(\"SHAPE\", \"SCALE\"))  \n\n\n\n\n\nCODE\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n#GGDIST | MODEL | PREDICTED PROBABILITIES\n# preds %>% \n#   ggplot(aes( x = fit, y = SCALE, fill = SHAPE)) + \n#   stat_halfeye(alpha = 0.5, normalize = \"panels\") + \n#   xlim(0,0.3) + theme_clean() + labs(\n#     title = \"Model PREDICTION | Probability of Accurate Response\",\n#     subtitle = \"TODO check preds to see if fixed or includes random\"\n#   )\n\n\n\n\nCODE\n## PLOT INTERACTION\nlibrary(ggeffects)\n\n\n\nAttaching package: 'ggeffects'\n\n\nThe following object is masked from 'package:cowplot':\n\n    get_title\n\n\nThe following object is masked from 'package:modelr':\n\n    data_grid\n\n\nCODE\nggpredict(m, terms = c(\"SCALE\",\"SHAPE\")) %>% \n  plot(connect.lines = TRUE) + \n  scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 2)) + \n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"SCALE\"\n) + theme(legend.position=\"bottom\")\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC4D/4_sgc4D_hypotesting.html#overall-interpretation-state",
    "href": "analysis/SGC4D/4_sgc4D_hypotesting.html#overall-interpretation-state",
    "title": "23  Hypothesis Testing",
    "section": "OVERALL INTERPRETATION STATE",
    "text": "OVERALL INTERPRETATION STATE\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular => indicates a correct triangular coordinate understanding\n\n\nSetup\n\n\nCODE\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% dplyr::select(q,subject,state,pretty_condition, SCALE, SHAPE) %>% droplevels()\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = SCALE,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  facet_wrap(~SHAPE) +\n   labs(title = \"Interpretation across all Questions\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = SCALE,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))+\n  # scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(q ~ SHAPE) +\n   labs(title = \"Interpretation by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\n\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = SCALE,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_foxy(discrete = TRUE, \"state\")  +\n  facet_wrap(~SHAPE) +\n  labs(title = \"DISTRIBUTION | Interpretation\",\n       x = \"Condition\", y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"\") + theme_clean()\n\n\n\n\n\n\n\nCODE\n#:::::::: LABELLED \n\n# temp <- df_i %>% mutate(\n#   state = fct_rev(state)\n# )  \n# \n# p <-   grouped_ggbarstats(data = temp, x = state, y = pretty_condition,\n#                           grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                ))  + theme_clean() + theme(legend.position = \"bottom\")\n# \n# p <- p + labs(title = \"DISTRIBUTION | Question Accuracy\",\n#          y = \"Proportion of Questions\", x = \"Condition\",\n#          subtitle = \"Impasse condition yields more correct responses\")\n# \n# p\n# # ggsave(p, filename = \"figures/SGC4D_LAB_Accuracy.png\", width = 6, height =4)\n\n\n#:::::::: LABELLED \n# \n# temp <- df_i \n# # %>% mutate(\n# #   accuracy = fct_rev(accuracy)\n# # )\n# \n# #CREATE PLOT WITH LABELS\n# p <- grouped_ggbarstats(data = temp, x = state, y = pretty_condition,\n#                grouping.var = ospan_split,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_manual(values = paletteer::paletteer_d(\"ggthemes::calc\", 4))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                )) \n# \n# #FIX LABELS\n# p1 <- p[[1]] +  labs(\n#   subtitle = \"Impasse is particularly effective for subjects with high-working memory\",\n#     x = \"Condition\", y = \"Probability of Response\"\n#   ) + theme_clean() + theme(legend.position = \"blank\") \n#  \n# p2 <-   p[[2]] + labs(\n#     x = \"Condition\", y = \"Probability of Response\",\n#     subtitle = \"   \"\n#   ) + theme_clean() + theme(legend.position = \"blank\") +\n#   ggeasy::easy_remove_axes(which=\"y\", what=c(\"text\",\"title\"))\n#   # ggeasy::easy_remove_axes(which=\"y\", what= \"\"))\n# \n# #CREATE ROW\n# \n# plot_row <- plot_grid(p1,p2, rel_widths = c(1,0.85))\n# \n# title <- ggdraw() + \n#   draw_label(\n#     \"DISTRIBUTION | Question Accuracy\",\n#     fontface = 'bold',\n#     x = 0,\n#     hjust = 0\n#   ) +\n#   theme(\n#     # add margin on the left of the drawing canvas,\n#     # so title is aligned with left edge of first plot\n#     plot.margin = margin(0, 0, 0, 7)\n#   )\n# \n# \n# pg <- plot_grid(\n#   title,\n#   plot_row,\n#   ncol = 1,\n#   # rel_heights values control vertical title margins\n#   rel_heights = c(0.1, 1)\n# ) + theme_clean()\n#   \n# \n# update_geom_defaults(\"text\", list(colour = \"grey20\", family = theme_get()$text$family))\n# \n# \n# pg\n\n\n# ggsave(pg, filename = \"figures/SGC4D_OSPAN_Accuracy.png\", width = 6, height =4)\n\n\n\n\nDescribe\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n             Orth-Isosceles Tri-Isosceles Orth-Equilateral Tri-Equilateral\n  orthogonal         0.6960        0.5423           0.6694          0.5705\n  other              0.0682        0.1179           0.1498          0.1846\n  angular            0.0248        0.0526           0.0621          0.0538\n  triangular         0.2109        0.2872           0.1188          0.1910\n  Sum                1.0000        1.0000           1.0000          1.0000\n            \n                Sum\n  orthogonal 0.6196\n  other      0.1294\n  angular    0.0480\n  triangular 0.2031\n  Sum        1.0000\n\n\nCODE\n(t <- table(df_i$state, df_i$SCALE, df_i$SHAPE) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n, ,  = ORTH\n\n            \n             isosceles equilateral  Sum\n  orthogonal       561         496 1057\n  other             55         111  166\n  angular           20          46   66\n  triangular       170          88  258\n  Sum              806         741 1547\n\n, ,  = TRI\n\n            \n             isosceles equilateral  Sum\n  orthogonal       423         445  868\n  other             92         144  236\n  angular           41          42   83\n  triangular       224         149  373\n  Sum              780         780 1560\n\n\n\n\nMIXED MULTINOMIAL REGRESSION\nDoes condition affect the response state of of items across the task?\nFit a MIXED logistic regression predicting interpretation state (k=3) by condition(k = 2).\n\nFit Model [brms]\n\n\nCODE\n##1. In order to set priors, first fit default priors model, then get prior description\n## in order to get class and dpar names \n\n# FLAT MODEL\n# flat <- brm( state ~ SCALE + SHAPE + (1|subject) + (1|q),\n#                  data = df_i,\n#                  family = \"categorical\",\n#                  chains = 4, iter = 2000, warmup = 1000,\n#                  cores = 4, seed = 1234,\n#                  save_pars = save_pars(all = TRUE),\n#                  control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n#                  backend = \"cmdstanr\")\n#                  \n# prior_summary(flat)\n\ninf_priors_maineffects <- c(\n  #prior on INTERCEPTS \n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  # coefficient level scale equilateral \n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral\", dpar = \"mutriangular\"),\n  #coeficient level shape tri\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"mutriangular\")\n)\n\n\ninf_priors_ixn <- c(\n  #prior on INTERCEPTS\n  #25% chance of each answer in control, scale = from 0.01 to 62%\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n  prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n  #prior on CONDITION COEFFICIENT\n   # coefficient level scale equilateral \n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral\", dpar = \"mutriangular\"),\n  #coeficient level shape tri\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"SHAPETRI\", dpar = \"mutriangular\"),\n  #prior on IXN COEFFICIENT\n  #likely to change odds between 0 and 2.4\n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral:SHAPETRI\", dpar = \"muangular\"),\n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral:SHAPETRI\", dpar = \"muother\"),\n  prior(normal(0, 2.42), class = b, coef=\"SCALEequilateral:SHAPETRI\", dpar = \"mutriangular\")\n)\n\n\n#BAYESIAN RANDOM ONLY\nBmm.cat.rSQ <- brm( state ~ 1 + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 backend = \"cmdstanr\",\n                 file =\"analysis/SGC4D/models/sgc4d_brms_state_Bmm.cat.rSQ.rds\")\n\n\n# MAIN EFFECTSONLY MODEL\nBmm.cat.R.SrSQ <- brm( state ~ SCALE + SHAPE + (1|subject) + (1|q), \n                 data = df_i, \n                 prior = inf_priors_maineffects,\n                 family = \"categorical\",\n                 chains = 4, iter = 4000, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 backend = \"cmdstanr\",\n                 file =\"analysis/SGC4D/models/sgc4d_brms_state_Bmm.cat.R.SrSQ.rds\")\n\n\n##MODEL COMPARISON\n# print(\"MODEL COMPARISON: random effects (vs) CONDITION\")\n(bf1 <-  bayesfactor(Bmm.cat.R.SrSQ,Bmm.cat.rSQ))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\n\n\nRecompiling the model with 'rstan'\n\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -mmacosx-version-min=10.13 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include   -fPIC  -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n\n\nRecompilation done\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nRecompiling the model with 'rstan'\n\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -mmacosx-version-min=10.13 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include   -fPIC  -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n\n\nRecompilation done\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nBayes Factors for Model Comparison\n\n    Model                             BF\n[2] 1 + (1 | subject) + (1 | q) 1.71e+07\n\n* Against Denominator: [1] SCALE + SHAPE + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\n#substantial evidence in favor of conditon model over random only BF 1.64e+16\n\n\n# # INTERACTION MODEL\nBmm.cat.RSrSQ <- brm( state ~ SCALE*SHAPE + (1|subject) + (1|q),\n                 data = df_i,\n                 prior = inf_priors_ixn,\n                 family = \"categorical\",\n                 chains = 4, iter = 4000, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 backend = \"cmdstanr\",\n                 file =\"analysis/SGC4D/models/sgc4d_brms_state_Bmm.cat.RSrSQ.rds\")\n#describe_posterior(Bmm.cat.RSrSQ)\n\n\n##MODEL COMPARISON\nprint(\"IS FACTORIAL better than MAIN EFFECTS model?\")\n\n\n[1] \"IS FACTORIAL better than MAIN EFFECTS model?\"\n\n\nCODE\n(bf2 <- bayesfactor(Bmm.cat.R.SrSQ, Bmm.cat.RSrSQ))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\nRecompiling the model with 'rstan'\n\n\nRecompilation done\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nRecompiling the model with 'rstan'\n\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -mmacosx-version-min=10.13 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include   -fPIC  -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n\n\nRecompilation done\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nBayes Factors for Model Comparison\n\n    Model                                         BF\n[2] SCALE * SHAPE + (1 | subject) + (1 | q) 8.75e+04\n\n* Against Denominator: [1] SCALE + SHAPE + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\ncompare_models(Bmm.cat.R.SrSQ, Bmm.cat.RSrSQ)\n\n\nPossible multicollinearity between b_muother_SCALEequilateral:SHAPETRI and b_muother_SCALEequilateral (r = 0.71), b_muother_SCALEequilateral:SHAPETRI and b_muother_SHAPETRI (r = 0.71), b_muangular_SCALEequilateral:SHAPETRI and b_muangular_SCALEequilateral (r = 0.71), b_muangular_SCALEequilateral:SHAPETRI and b_muangular_SHAPETRI (r = 0.7). This might lead to inappropriate results. See 'Details' in '?rope'.\n\n\nParameter                              |       Bmm.cat.R.SrSQ |        Bmm.cat.RSrSQ\n------------------------------------------------------------------------------------\nmuother_Intercept                      | -3.46 (-4.51, -2.36) | -3.55 (-4.66, -2.42)\nmuangular_Intercept                    | -4.53 (-5.73, -3.37) | -4.86 (-6.15, -3.62)\nmutriangular_Intercept                 | -4.25 (-5.91, -2.70) | -4.32 (-5.97, -2.69)\nmuother_SCALEequilateral               |  0.88 ( 0.32,  1.46) |  1.06 ( 0.25,  1.89)\nmuother_SHAPETRI                       |  1.02 ( 0.44,  1.62) |  1.20 ( 0.39,  2.05)\nmuangular_SCALEequilateral             |  0.51 (-0.24,  1.28) |  1.13 ( 0.06,  2.21)\nmuangular_SHAPETRI                     |  0.95 ( 0.22,  1.74) |  1.56 ( 0.50,  2.67)\nmutriangular_SCALEequilateral          | -0.72 (-2.24,  0.79) | -0.71 (-2.67,  1.25)\nmutriangular_SHAPETRI                  |  1.64 ( 0.18,  3.26) |  1.71 (-0.14,  3.57)\nmuangular_SCALEequilateral:SHAPETRI    |                      | -1.16 (-2.63,  0.26)\nmuother_SCALEequilateral:SHAPETRI      |                      | -0.34 (-1.47,  0.77)\nmutriangular_SCALEequilateral:SHAPETRI |                      | -0.08 (-2.53,  2.46)\n------------------------------------------------------------------------------------\nObservations                           |                 3107 |                 3107\n\n\nTODO\nTo quantify the effect of working memory capacity on INTERPRETATION, we fit a (bayesian) mixed multinomial regression model with random intercepts for subjects and questions.\nA Bayes Factor model comparison (against a random intercepts only model) indicates extreme evidence for the final model including fixed effects of CONDITION, OSPAN and their interaction term (BF = 1.69e+13)\n(note, the BF may change as it is estimated via simulation each time)\n\n\nDescribe\n\n\nCODE\n# best model? can't tell if main effects or interaction\nm <- Bmm.cat.R.SrSQ  #or Bmm.cat.R.SrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n Family: categorical \n  Links: muother = logit; muangular = logit; mutriangular = logit \nFormula: state ~ SCALE + SHAPE + (1 | subject) + (1 | q) \n   Data: df_i (Number of observations: 3107) \n  Draws: 4 chains, each with iter = 4000; warmup = 1000; thin = 1;\n         total post-warmup draws = 12000\n\nGroup-Level Effects: \n~q (Number of levels: 13) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.74      0.40     1.14     2.73 1.00     3297\nsd(muangular_Intercept)        1.59      0.44     0.95     2.67 1.00     3835\nsd(mutriangular_Intercept)     1.46      0.37     0.93     2.34 1.00     3890\n                           Tail_ESS\nsd(muother_Intercept)          5695\nsd(muangular_Intercept)        6055\nsd(mutriangular_Intercept)     5911\n\n~subject (Number of levels: 239) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.79      0.16     1.50     2.11 1.00     3907\nsd(muangular_Intercept)        2.16      0.25     1.71     2.68 1.00     3306\nsd(mutriangular_Intercept)     5.40      0.50     4.51     6.45 1.00     3009\n                           Tail_ESS\nsd(muother_Intercept)          7221\nsd(muangular_Intercept)        5898\nsd(mutriangular_Intercept)     4655\n\nPopulation-Level Effects: \n                              Estimate Est.Error l-95% CI u-95% CI Rhat\nmuother_Intercept                -3.45      0.55    -4.51    -2.36 1.00\nmuangular_Intercept              -4.54      0.60    -5.73    -3.37 1.00\nmutriangular_Intercept           -4.26      0.82    -5.91    -2.70 1.00\nmuother_SCALEequilateral          0.89      0.29     0.32     1.46 1.00\nmuother_SHAPETRI                  1.02      0.30     0.44     1.62 1.00\nmuangular_SCALEequilateral        0.51      0.39    -0.24     1.28 1.00\nmuangular_SHAPETRI                0.96      0.39     0.22     1.74 1.00\nmutriangular_SCALEequilateral    -0.72      0.77    -2.24     0.79 1.00\nmutriangular_SHAPETRI             1.66      0.78     0.18     3.26 1.00\n                              Bulk_ESS Tail_ESS\nmuother_Intercept                 2379     4427\nmuangular_Intercept               3453     5785\nmutriangular_Intercept            2125     3595\nmuother_SCALEequilateral          4004     5614\nmuother_SHAPETRI                  3664     5547\nmuangular_SCALEequilateral        5633     7571\nmuangular_SHAPETRI                5214     7007\nmutriangular_SCALEequilateral     1725     3508\nmutriangular_SHAPETRI             1617     2690\n\nDraws were sampled using sample(hmc). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCODE\n(d <- describe_posterior(ci=.95, m))\n\n\nSummary of Posterior Distribution\n\nParameter                     | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------------\nmuother_Intercept             |  -3.46 | [-4.51, -2.36] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2385.00\nmuangular_Intercept           |  -4.53 | [-5.73, -3.37] |   100% | [-0.18, 0.18] |        0% | 1.000 | 3400.00\nmutriangular_Intercept        |  -4.25 | [-5.91, -2.70] | 99.99% | [-0.18, 0.18] |        0% | 1.002 | 2120.00\nmuother_SCALEequilateral      |   0.88 | [ 0.32,  1.46] | 99.90% | [-0.18, 0.18] |        0% | 1.001 | 3987.00\nmuother_SHAPETRI              |   1.02 | [ 0.44,  1.62] | 99.98% | [-0.18, 0.18] |        0% | 1.000 | 3651.00\nmuangular_SCALEequilateral    |   0.51 | [-0.24,  1.28] | 90.75% | [-0.18, 0.18] |    16.93% | 1.000 | 5631.00\nmuangular_SHAPETRI            |   0.95 | [ 0.22,  1.74] | 99.36% | [-0.18, 0.18] |        0% | 1.000 | 5179.00\nmutriangular_SCALEequilateral |  -0.72 | [-2.24,  0.79] | 82.62% | [-0.18, 0.18] |    12.77% | 1.001 | 1721.00\nmutriangular_SHAPETRI         |   1.64 | [ 0.18,  3.26] | 98.48% | [-0.18, 0.18] |        0% | 1.003 | 1640.00\n\n\nCODE\nprint(\"BAYES FACTOR [comparison to RANDOM ONLY model]\")\n\n\n[1] \"BAYES FACTOR [comparison to RANDOM ONLY model]\"\n\n\nCODE\n#think of this like the anova(model) to get p values for each predictor\n#has to recompile the models with rstan. total drag\n#already calculated bayes factor above, this just interprets it\neffectsize::interpret_bf(exp(bf1$log_BF), include_value = TRUE)\n\n\n[1] \"no evidence (BF = 1.00) against or in favour of\"\n[2] \"extreme evidence (BF = 1.71e+07) in favour of\"  \n(Rules: jeffreys1961)\n\n\nCODE\nprint(\"DESCRIBE POSTERIOR\")\n\n\n[1] \"DESCRIBE POSTERIOR\"\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n(l <- describe_posterior(m))\n\n\nSummary of Posterior Distribution\n\nParameter                     | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------------\nmuother_Intercept             |  -3.46 | [-4.51, -2.36] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2385.00\nmuangular_Intercept           |  -4.53 | [-5.73, -3.37] |   100% | [-0.18, 0.18] |        0% | 1.000 | 3400.00\nmutriangular_Intercept        |  -4.25 | [-5.91, -2.70] | 99.99% | [-0.18, 0.18] |        0% | 1.002 | 2120.00\nmuother_SCALEequilateral      |   0.88 | [ 0.32,  1.46] | 99.90% | [-0.18, 0.18] |        0% | 1.001 | 3987.00\nmuother_SHAPETRI              |   1.02 | [ 0.44,  1.62] | 99.98% | [-0.18, 0.18] |        0% | 1.000 | 3651.00\nmuangular_SCALEequilateral    |   0.51 | [-0.24,  1.28] | 90.75% | [-0.18, 0.18] |    16.93% | 1.000 | 5631.00\nmuangular_SHAPETRI            |   0.95 | [ 0.22,  1.74] | 99.36% | [-0.18, 0.18] |        0% | 1.000 | 5179.00\nmutriangular_SCALEequilateral |  -0.72 | [-2.24,  0.79] | 82.62% | [-0.18, 0.18] |    12.77% | 1.001 | 1721.00\nmutriangular_SHAPETRI         |   1.64 | [ 0.18,  3.26] | 98.48% | [-0.18, 0.18] |        0% | 1.003 | 1640.00\n\n\nCODE\n# (tm <- tidy(m,   conf.int = TRUE))\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nParameter                     | Median |        95% CI |     pd | % in ROPE |  Rhat |     ESS\n---------------------------------------------------------------------------------------------\nmuother_Intercept             |   0.03 | [0.01,  0.09] |   100% |        0% | 1.002 | 2385.00\nmuangular_Intercept           |   0.01 | [0.00,  0.03] |   100% |        0% | 1.000 | 3400.00\nmutriangular_Intercept        |   0.01 | [0.00,  0.07] | 99.99% |        0% | 1.002 | 2120.00\nmuother_SCALEequilateral      |   2.42 | [1.38,  4.32] | 99.90% |        0% | 1.001 | 3987.00\nmuother_SHAPETRI              |   2.77 | [1.55,  5.08] | 99.98% |        0% | 1.000 | 3651.00\nmuangular_SCALEequilateral    |   1.66 | [0.79,  3.59] | 90.75% |    16.93% | 1.000 | 5631.00\nmuangular_SHAPETRI            |   2.58 | [1.25,  5.71] | 99.36% |        0% | 1.000 | 5179.00\nmutriangular_SCALEequilateral |   0.49 | [0.11,  2.19] | 82.62% |    12.77% | 1.001 | 1721.00\nmutriangular_SHAPETRI         |   5.17 | [1.20, 25.93] | 98.48% |        0% | 1.003 | 1640.00\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#PREDICT METHOD\nnewdata <- df_i %>% dplyr::select(SCALE, SHAPE, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n# lengthen data frame to handle multinomial\npreds <- preds %>%\n  dplyr::select(-subject, -q) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = !SCALE & !SHAPE,\n  values_to = \"preds\",\n  names_to = \"state\",\n)\n\n(p <- preds %>%\n  group_by(SCALE, SHAPE, state ) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 16 × 7\n# Groups:   SCALE, SHAPE [4]\n   SCALE       SHAPE state             median      se      lwr    upr\n   <fct>       <fct> <chr>              <dbl>   <dbl>    <dbl>  <dbl>\n 1 isosceles   ORTH  P(Y = angular)    0.008  0.00204  0.00400 0.0120\n 2 isosceles   ORTH  P(Y = orthogonal) 0.879  0.0127   0.854   0.903 \n 3 isosceles   ORTH  P(Y = other)      0.0217 0.00414  0.0136  0.0298\n 4 isosceles   ORTH  P(Y = triangular) 0.0132 0.0127  -0.0117  0.0380\n 5 isosceles   TRI   P(Y = angular)    0.0186 0.00313  0.0124  0.0247\n 6 isosceles   TRI   P(Y = orthogonal) 0.644  0.0128   0.619   0.670 \n 7 isosceles   TRI   P(Y = other)      0.0478 0.00564  0.0367  0.0588\n 8 isosceles   TRI   P(Y = triangular) 0.0455 0.0136   0.0189  0.0721\n 9 equilateral ORTH  P(Y = angular)    0.0196 0.00384  0.0121  0.0271\n10 equilateral ORTH  P(Y = orthogonal) 0.796  0.0114   0.774   0.818 \n11 equilateral ORTH  P(Y = other)      0.0705 0.00696  0.0569  0.0841\n12 equilateral ORTH  P(Y = triangular) 0.0142 0.00921 -0.00388 0.0322\n13 equilateral TRI   P(Y = angular)    0.0244 0.00318  0.0181  0.0306\n14 equilateral TRI   P(Y = orthogonal) 0.644  0.0118   0.621   0.667 \n15 equilateral TRI   P(Y = other)      0.103  0.00748  0.0886  0.118 \n16 equilateral TRI   P(Y = triangular) 0.0288 0.0112   0.00689 0.0508\n\n\nCODE\n##DRAWS METHOD\n# GENERATE draws from model\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC4D/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC4D/models/draws/draws_BB.catCrSQ.rds\")\n# \n# # SUMMARIZE draws from model\n# (k <- kable(draws %>%\n#   dplyr::select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 4, col.names =\n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>%\n#   kable_styling())\n\n\n\n\nTODO\n\n\nBayes Factor\n\nhttps://easystats.github.io/bayestestR/articles/bayes_factors.html\n\nCompute bayes factor for model parameters\n\n\nCODE\n#define null on the log odds scale as the range from -0.4 to 0.4, a 1.5X increase or decrease in odds \n(coef_bf <- bayesfactor(m, null = c(-0.4, 0.4)))\n\n\nSampling priors, please wait...\n\n\nBayes Factor (Null-Interval)\n\nParameter                     |       BF\n----------------------------------------\nmuother_Intercept             | 6.56e+03\nmuangular_Intercept           | 1.82e+05\nmutriangular_Intercept        | 1.15e+03\nmuother_SCALEequilateral      |     3.21\nmuother_SHAPETRI              |     8.54\nmuangular_SCALEequilateral    |    0.243\nmuangular_SHAPETRI            |     2.06\nmutriangular_SCALEequilateral |    0.430\nmutriangular_SHAPETRI         |     3.22\n\n* Evidence Against The Null: [-0.400, 0.400]\n\n\nCODE\n#plot bayes factors\nplot(coef_bf)\n\n\n\n\n\nCODE\n#interpretation guidelines\neffectsize::interpret_bf(exp(coef_bf$log_BF), include_value = TRUE)\n\n\n[1] \"extreme evidence (BF = 6.56e+03) in favour of\"\n[2] \"extreme evidence (BF = 1.82e+05) in favour of\"\n[3] \"extreme evidence (BF = 1.15e+03) in favour of\"\n[4] \"moderate evidence (BF = 3.21) in favour of\"   \n[5] \"moderate evidence (BF = 8.54) in favour of\"   \n[6] \"moderate evidence (BF = 1/4.12) against\"      \n[7] \"anecdotal evidence (BF = 2.06) in favour of\"  \n[8] \"anecdotal evidence (BF = 1/2.32) against\"     \n[9] \"moderate evidence (BF = 3.22) in favour of\"   \n(Rules: jeffreys1961)\n\n\nTODO\nThe model predicts similar probabilities for orthogonal, other, and angular interpretations by high vs. low working memory participants. It is only the (correct) triangular interpretation in which we have evidence for a reliable interaction between OSPAN and CONDITION.\nIt is only the (correct) triangular interpretation in which we have moderate evidence for a reliable interaction between OSPAN and CONDITION ($e^{_{interaction}} = 15.73,   95 %  CI   [0.89, 249.91],  pd = 97.3%, BF = 3.86 $)\nMuch like the pattern of results for accuracy, it is high working memory participants with higher probability of triangular responses, but only in impasse condition.\n\n\nInteractions\n\n\nCODE\n#EMMEANS doesn't support multinomial brms models. BUMMER\n#BUT brms has some built in stuffs. \n\n# FOR MAIN EFFECTS PLOTS \nprint(\"MAIN EFFECTS\")\n\n\n[1] \"MAIN EFFECTS\"\n\n\nCODE\nconditional_effects(m, categorical = TRUE)\n\n\n\n\n\n\n\n\nCODE\nprint(\"INTERACTION PLOT\")\n\n\n[1] \"INTERACTION PLOT\"\n\n\nCODE\nconditions <- make_conditions(m, vars = c(\"SHAPE\"))\nconditional_effects(m, \"SCALE\", conditions = conditions,\n                    categorical = TRUE)\n\n\n\n\n\nCODE\nprint(\"INTERACTION PLOT\")\n\n\n[1] \"INTERACTION PLOT\"\n\n\nCODE\n# plot_model(m, type=\"int\")\n\n## MARGINAL EFFECTS\n\n# from easystats \n# library(modelbased)\n# uses emmeans, doesn't support brms categorical \n# estimate_contrasts(m, test = \"bf\", bf_prior = m)\n\n# library(marginaleffects)\n# https://vincentarelbundock.github.io/marginaleffects/articles/brms.html\n## takes a really long time... maybe hangs machine??\n# (mfx <- marginaleffects::marginaleffects(m))\n# summary(mfx)\n\n\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n#model summary doesn't work for brms multinomial\n\n# DOESN'T WORK FOR BRMS\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n# \n# \n# #GET MODEL ESTIMATES\n# t <- as.data.frame(model_parameters(m, exponentiate = TRUE))\n# # \n# # #REFORMAT\n# x <- t %>%\n#   mutate(\n#     Parameter = str_remove_all(Parameter,\"_pretty\"),\n#     Parameter = str_remove_all(Parameter,\"b_mu\"),\n#     Interpretation = word(Parameter, 1, sep = \"_\"),\n#     Interpretation = fct_relevel(Interpretation, levels = c(\"other\",\"angular\",\"triangular\")),\n#     Factor = word(Parameter, 2, sep = \"_\"),\n#     Factor = recode_factor(Factor,\n#                          \"Intercept\" = \"(Intercept)\",\n#                          \"conditionimpasse\" = \"Condition[impasse]\",\n#                          \"ospan\" = \"OSPAN[high-memory]\",\n#                          \"conditionimpasse:ospan\" = \"Condition:OSPAN\"),\n#     Median = round(Median,2),\n#     CI_low = round(CI_low,2),\n#     CI_high = round(CI_high,2),\n#     pd = round(pd,2),\n#     ROPE_Percentage = round(ROPE_Percentage,2)) %>%\n#   arrange(Interpretation) %>%\n#   dplyr::select(-CI, -Rhat, -ESS) %>%\n#   rename( \"%_in_ROPE\"=\"ROPE_Percentage\",\n#   \"(Odds Ratio)\" = \"Median\") %>%\n#   dplyr::select(Interpretation, Factor, `(Odds Ratio)`, CI_low, CI_high, pd, `%_in_ROPE`)\n# \n# # #KNIT\n# title = \"Study 3C (OSPAN) | Question Interpretation | Mixed Multinomial Regression\"\n# tab <- kbl(x, format = \"latex\", caption = title,\n#            booktabs = FALSE) %>% kable_classic() %>%\n# footnote(general = paste(\"Model Interpretation ~ \",b$Model[2], \"Bayes Factor \", format( exp(b$log_BF[2]), digits =2 ) ), footnote_as_chunk = T, general_title = \"\")\n# writeLines(tab, \"tables/SGC3C_OSPAN_BRMS_state.tex\")\n\n\n\n\nVisualize\n\n\nCODE\n## PLOT INTERACTION\nlibrary(ggeffects)\nggpredict(m, terms = c(\"SCALE\",\"SHAPE\")) %>% \n  plot(connect.lines = TRUE) + \n  scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 2)) + \n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"Condition\"\n) + theme(legend.position=\"bottom\")\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\n\n\n\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, vline.color = \"red\", \n#            show.intercept = TRUE, \n#            show.values = TRUE,\n#            p.threshold = 0.1, #manually adjust to account for directional test\n#            ci.lvl = 0.90 ) + #manually adjusted for directional test   \n#   labs(title = \"Model Estimate | Odds Ratio\",\n#        subtitle = \"\",\n#        x = \"Condition\")\n\n\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(m, exponentiate = TRUE, component = \"all\")\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n# + theme_clean()\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\nPicking joint bandwidth of 0.0596\n\n\nWarning: Removed 10800 rows containing non-finite values (stat_density_ridges).\n\n\n\n\n\nCODE\nresult <- rope(m)\nplot(result)\n\n\n\n\n\nCODE\n##TODO see documentation for removing, reorganizing parameters\nresult <- pd(m, effects = \"fixed\", component = \"all\")\nplot(result, show_intercept = FALSE,\n     n_columns = 3)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#::::: GGDIST POSTERIOR PROBABILITY OF RESPONSE\n##WORKING\n# https://mjskay.github.io/ggdist/reference/stat_slab.html\n## VIS probability of correct response\n#TAKES A REALLY LONG TIME\n\n#1 | get draws\n# draws <- df_i %>%\n#   data_grid(pretty_condition, ospan_split, subject, q) %>%\n#   add_epred_draws(m,\n#                    # ndraws = 100, # n = 100,\n#                    # dpar = TRUE,\n#                    transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n\n\n# draws %>% write_rds(file = \"analysis/SGC4D/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n\n#OR load from file\n# draws <- read_rds(file = \"analysis/SGC4D/models/draws/draws_Bmm.catCOrSQ_OPSAN.rds\")\n\n#2| VISUALIZE PREDICTIONS | GGDIST\n##TODO figure out height normalization.\n##do it with much smaller number of draws \n#TODO adjust bandwidth/smoothing? + put on same line + \n#TAKES A REAAALY LONG TIME\n# d <- \n\n# d <- draws %>% sample_n(10) %>% \n#   ggplot(aes(x = .epred,  y = pretty_condition, fill = ospan_split)) +\n#   stat_slab(width = c(.95), alpha = 0.5, normalize=\"xy\") +\n#   facet_wrap(~.category) +\n#   #   #normalize = all, panels, xy, groups, none\n#   xlim(0,1) + labs(\n#     title = \"Model Predicted Probability of Correct Response\",\n#     x = \"probability of correct response\",\n#     y = \"Interpretation\"\n#   ) +  theme_clean() #+ ggeasy::easy_remove_legend() + ggeasy::easy_remove_y_axis()\n# # #TO PLOT ON THE SAME LINE, INCLUDE Y = 0 in aes and ggeasy::remove_y_axis()\n# # \n# # ggsave(d, filename = \"figures/sgc4d_BBm.cat.CrSQ_lab_posterior.svg\", width = 6, height =4)\nd\n\n\nSummary of Posterior Distribution\n\nParameter                     | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n--------------------------------------------------------------------------------------------------------------\nmuother_Intercept             |  -3.46 | [-4.51, -2.36] |   100% | [-0.18, 0.18] |        0% | 1.002 | 2385.00\nmuangular_Intercept           |  -4.53 | [-5.73, -3.37] |   100% | [-0.18, 0.18] |        0% | 1.000 | 3400.00\nmutriangular_Intercept        |  -4.25 | [-5.91, -2.70] | 99.99% | [-0.18, 0.18] |        0% | 1.002 | 2120.00\nmuother_SCALEequilateral      |   0.88 | [ 0.32,  1.46] | 99.90% | [-0.18, 0.18] |        0% | 1.001 | 3987.00\nmuother_SHAPETRI              |   1.02 | [ 0.44,  1.62] | 99.98% | [-0.18, 0.18] |        0% | 1.000 | 3651.00\nmuangular_SCALEequilateral    |   0.51 | [-0.24,  1.28] | 90.75% | [-0.18, 0.18] |    16.93% | 1.000 | 5631.00\nmuangular_SHAPETRI            |   0.95 | [ 0.22,  1.74] | 99.36% | [-0.18, 0.18] |        0% | 1.000 | 5179.00\nmutriangular_SCALEequilateral |  -0.72 | [-2.24,  0.79] | 82.62% | [-0.18, 0.18] |    12.77% | 1.001 | 1721.00\nmutriangular_SHAPETRI         |   1.64 | [ 0.18,  3.26] | 98.48% | [-0.18, 0.18] |        0% | 1.003 | 1640.00\n\n\n\n\nCODE\n###VISUALIZE\n#make predictions\npred <- predictions(m)\n\n#get draws\ndraws <- posteriordraws(pred)\n\n#plot draws\n\n##PLOT ANGULAR\nggplot(draws %>% sample_n(1000), aes(x = draw, fill = group)) +\n    geom_density(alpha = 0.8, color = \"white\", trim = TRUE) +\n    facet_grid(SHAPE ~ SCALE) +\n    labs(x = \"Predicted probability\",\n         y = \"Density\",\n         fill = \"INTERPRETATION\")\n\n\n\n\n\nCODE\n## AS DENSITY RIDGES\nggplot(draws %>% sample(100000), aes(x = draw, y = SCALE, fill = SHAPE)) +\n    geom_density_ridges(alpha = 0.5, rel_min_height = 0.01) +\n    facet_grid(group ~ .) +\n    labs(x = \"Predicted probability\",\n         y = \"Density\")\n\n\nPicking joint bandwidth of 0.0046\n\n\nPicking joint bandwidth of 0.0554\n\n\nPicking joint bandwidth of 0.0191\n\n\nPicking joint bandwidth of 0.0274\n\n\n\n\n\n\n\nDiagnostics\n\n\nCODE\n#CHECK Fit of posterior predictive to data\npp_check(m, ndraws=1000)\n\n\n\n\n\nCODE\n#CHECK posterior vs. priors\nresult <- estimate_density(m)\nplot(result, stack = FALSE, priors= TRUE)\n\n\n\n\n\nCODE\n#CHECK model\nplot(m)"
  },
  {
    "objectID": "analysis/SGC4D/4_sgc4D_hypotesting.html#cumulative-progress",
    "href": "analysis/SGC4D/4_sgc4D_hypotesting.html#cumulative-progress",
    "title": "23  Hypothesis Testing",
    "section": "CUMULATIVE PROGRESS",
    "text": "CUMULATIVE PROGRESS\n\n\nCODE\n#SETUP\ndf_scaled <- read_csv('analysis/SGC4D/data/2-scored-data/sgc4d_scaled_progress.csv')\n\n\nRows: 4303 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): subject, mode, pretty_condition, SHAPE, SCALE\ndbl (2): question, score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCODE\ndf_absolute <- read_csv('analysis/SGC4D/data/2-scored-data/sgc4d_absolute_progress.csv')\n\n\nRows: 4303 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): subject, mode, pretty_condition, SHAPE, SCALE\ndbl (2): question, score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nVisualize Progress over Task\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.10, h=0.0), size=1) +\n # geom_line( size=1) +\n facet_wrap(SCALE ~ SHAPE) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n # scale_y_continuous(lim=c(-13,13))+\n theme_minimal() + theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#VISUALIZE progress over time SCALED score \nggplot(data = df_absolute, aes(x = question, y = score, group = subject, alpha = 0.1, color = pretty_condition)) + \n # geom_line(position=position_jitter(w=0.15, h=0.15), size=0.5) +\n geom_line(position=position_jitter(w=0.15, h=0.15), size=1.5) +\n # geom_line( size=1) +\n facet_wrap(SCALE ~ SHAPE) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n # scale_y_continuous(lim=c(0,13))+\n theme_minimal() + theme(legend.position = \"blank\")"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Schmidt, Dennis, Tobias Raupach, Annette Wiegand, Manfred Herrmann, and\nPhilipp Kanzow. 2021. “Relation Between Examinees’ True Knowledge\nand Examination Scores: Systematic Review and Exemplary Calculations on\nMultiple-True-False\nItems.” Educational Research Review 34 (November):\n100409. https://doi.org/10.1016/j.edurev.2021.100409."
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#h2-the-need-for-scaffolding-aka-linear-vs-triangular-in-control",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#h2-the-need-for-scaffolding-aka-linear-vs-triangular-in-control",
    "title": "3  Hypothesis Testing",
    "section": "H2 | The Need for Scaffolding (aka, Linear VS Triangular in CONTROL)",
    "text": "H2 | The Need for Scaffolding (aka, Linear VS Triangular in CONTROL)\nDoes ACCURACY differ between linear and triangular graphs in the control condition?\nHypothesis The TM graph is not discoverable and requires scaffolding for correct interpretation. We predict that learners without scaffolding (the control condition) will perform better with the LM than TM\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\n#only control condition \ndf_s <- df_subjects %>% filter(pretty_condition == \"control\")\n\ndf_long <- df_s %>% dplyr::select(subject,pretty_condition,order,lm_scenarios,tm_scenarios,linear_score, triangular_score) %>% pivot_longer(\n  cols = ends_with(\"score\"),\n  names_to = \"graph\",\n  values_to = \"score\"\n)\n\ndf_i <- df_items %>% filter(pretty_condition == \"control\") %>% filter(q %nin% c(3))\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(order~graph) + \n   labs(title = \"Accuracy by Graph and Order\",\n       x = \"Condition\",\n       subtitle=\"Across graph orders, Accuracy is higher on the LINEAR than TRIANGULAR graph.\")\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(scenario ~ graph) + \n   labs(title = \"Accuracy by Graph and Scenario\",\n       x = \"Condition\",\n       subtitle=\"Accuracy is higher on the LINEAR than TRIANGULAR graph; much lower for TM = AXIS scenario.\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = score)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap( graph ~ q) +\n   labs(title = \"Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\ngf_props(~score,\n         fill = ~graph, data = df_long) %>%\n  gf_facet_grid(order ~ graph) +\n  labs(x = \"# Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score by Graph and Order\",\n       subtitle = \"\") + \n  theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\ngf_props(~score,\n         fill = ~graph, data = df_long) %>%\n  gf_facet_grid(tm_scenarios ~ graph) +\n  labs(x = \"# Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score by Graph and TM Scenario\",\n       subtitle = \"TM Scores are different by Scenario\") + \n  theme(legend.position = \"blank\")\n\n\n\n\n\nCODE\n# ##VERTICAL RAINCLOUD USING GGDISTR\n# ggplot(df_long, aes(x = graph, y = score,\n#                         fill = graph) ) + \n#   ggdist::stat_halfeye(\n#     side = \"left\",\n#     justification = 1.1,\n#     width = 1, \n#     point_colour = NA\n#    ) + \n#   geom_boxplot(\n#     inherit.aes = FALSE, #supress fill\n#     mapping = aes(x=graph, y = score),\n#     width = .15, \n#     outlier.shape = NA\n#   ) + \n#   geom_point(\n#     inherit.aes = FALSE, #supress fill\n#     mapping = aes(x=graph, y = score, color = graph),\n#     size = 1.3,\n#     alpha = .3,\n#     position = position_jitter( \n#       seed = 1, width = .05\n#   )) + labs( \n#     title = \"Distribution of scores in CONTROL condition\", \n#     x = \"Condition\", y = \"Score (# correct)\") +\n#   theme(legend.position = \"blank\") + \n#   coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n#DISTRIBUTION OF SCORE\ngf_dhistogram(~score_diff, data = df_s) %>% \n  gf_facet_grid(tm_scenarios ~ order) +\n  xlim(-13,5) + \n  labs(title = \"Distribution of paired score differences in CONTROL condition\") + \n  easy_remove_legend() \n\n\nWarning: Removed 8 rows containing missing values (geom_bar).\n\n\n\n\n\nVisualizations indicate it is likely that scores in the LM are infact higher than the TM in the control condition.\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy by Block (CONTROL Condition)\"\nabs.stats <- rbind(\n  \"linear.block\"= df_s %>% dplyr::select(linear_score) %>% unlist() %>% favstats(),\n  \"triangular.block\" = df_s %>% dplyr::select(triangular_score) %>% unlist() %>% favstats(),\n  \"block.differences\" = df_s %>% dplyr::select(score_diff) %>% unlist() %>% favstats()\n)\n\nabs.stats %>% kbl (caption = title) %>% kable_classic() %>%\n  footnote(general = \"block # questions correct [0,15]; DIFF = triangular - linear\",\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nDescriptive Statistics of Response Accuracy by Block (CONTROL Condition)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    linear.block \n    2 \n    9 \n    11 \n    13 \n    15 \n    10.98 \n    2.33 \n    61 \n    0 \n  \n  \n    triangular.block \n    0 \n    2 \n    6 \n    11 \n    14 \n    6.90 \n    4.51 \n    61 \n    0 \n  \n  \n    block.differences \n    -13 \n    -8 \n    -4 \n    -1 \n    5 \n    -4.08 \n    4.51 \n    61 \n    0 \n  \n\n\nNote:   block # questions correct [0,15]; DIFF = triangular - linear\n\n\n\n\nFor participants in the CONTROL condition, total absolute scores for the LINEAR graph (n = 61) range from 2 to 15 with a mean score of (M = 10.98, SD = 2.33).\nFor participants in the CONTROL condition, total absolute scores for the TRIANGULAR graph (n = 61) range from 0 to 14 with a mean score of (M = 6.9, SD = 4.51).\nVisual inspection of the distribution of scores for each block reveal that scores in on the triangular task were more variant than those in the linear graph. On average, scores on the triangular block were lower than those on the linear block.\n\n\nTest\n\n\nCODE\n#PLOT PAIRED DATA\ng <- ggwithinstats(\n  data = df_long,\n  x    = graph,\n  y    = score, \n  type  = \"nonparametric\", \n  plot.type = \"box\",\n  title = \"Study 2 | Without scaffolding, higher accuracy with Linear Model\",\n  xlab = \"Graph\", ylab = \"Graph Reading Score (# questions correct)\",\n  centrality.point.args = list(fill=\"black\", size = 3)\n) + scale_color_manual(values = paletteer::paletteer_d(\"awtools::a_palette\", 2)) + \n  theme_clean() + theme(legend.position = \"none\")\n\n\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n\n\nCODE\ng\n\n\n\n\n\nCODE\n# ggsave(g, filename = \"figures/SGC2_graphdifference.png\", width = 6, height = 4)\n# ggsave(g, filename = \"figures/SGC2_graphdifference.svg\", width = 6, height = 4)\n\n\n\nWILCOXON RANK SUM (Mann-Whitney Test) Non parametric alternative to t-test; compares median rather than mean by ranking data\nDoes not assume normality\nDoes not assume equal variance of samples (homogeneity of variance)\n\n\n\nCODE\n#WILCOXON RANK SUM PAIRED T-TEST\nw <- wilcox.test(df_s$linear_score, df_s$triangular_score, \n            paired = TRUE)\n            # alternative = \"greater\", conf.int = TRUE)\nw\n\n\n\n    Wilcoxon signed rank test with continuity correction\n\ndata:  df_s$linear_score and df_s$triangular_score\nV = 1490, p-value = 1e-07\nalternative hypothesis: true location shift is not equal to 0\n\n\nCODE\nreport(w)\n\n\nEffect sizes were labelled following Funder's (2019) recommendations.\n\nThe Wilcoxon signed rank test with continuity correction testing the difference\nin ranks between df_s$linear_score and df_s$triangular_score suggests that the\neffect is positive, statistically significant, and very large (W = 1490.00, p <\n.001; r (rank biserial) = 0.80, 95% CI [0.67, 0.88])\n\n\n\n\nCODE\n#PLOT PAIRED DATA\ngrouped_ggwithinstats(\n  grouping.var = order,\n  data = df_long,\n  x    = graph,\n  y    = score, \n  annotation.args = list(title = \"Linear is better than Triangular regardless of Order\"),\n  type  = \"nonparametric\" #parametric, robust, bayes\n) \n\n\n\n\n\nCODE\n#PLOT PAIRED DATA\ngrouped_ggwithinstats(\n  grouping.var = tm_scenarios,\n  data = df_long,\n  x    = graph,\n  y    = score, \n  type  = \"nonparametric\", #parametric, robust, bayes\n  annotation.args = list(title = \"Linear is better than Triangular regardless of [triangle model] Scenario\"),\n)\n\n\n\n\n\nThe Wilcoxon signed rank test confirms that (for subjects in the control condition) scores on the triangle graph were significantly lower than those in the linear graph block. This provides evidence in support of our hypothesis that the Triangular model graph (though computationally efficient) is in fact unconventional and lacking in discoverablility. It needs to be augmented with scaffolding in order to be correctly interpreted by novice readers.\n\n\nMIXED EFFECTS LOGISTIC REGRESSION\nFit mixed effects logistic regression model to test effect of GRAPH, ORDER, and SCENARIO on probability of correct response [just in the control condition]\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 28 #removed nondiscrim Q3\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$graph) && is.factor(df_i$score) && is.factor(df_i$order) && is.factor(df_i$scenario)\n\n\n[1] TRUE\n\n\nCODE\n#RECODE TRIANGULAR AS REFERENCE LEVEL \ndf_i <- df_i %>% mutate(\n  graph = recode_factor(graph, \"triangular\"=\"triangular\",\"linear\"=\"linear\")\n) \n\n## 1 | SETUP RANDOM INTERCEPT SUBJECT\n\n#:: EMPTY MODEL (baseline, no random effect)\nprint(\"Empty fixed model\")\n\n\n[1] \"Empty fixed model\"\n\n\nCODE\nm0 = glm(accuracy ~ 1, family = \"binomial\", data = df_i) \n# summary(m0)\n\n#:: RANDOM INTERCEPT SUBJECT\nprint(\"Subject intercept random model\")\n\n\n[1] \"Subject intercept random model\"\n\n\nCODE\nmm.rS <- glmer(accuracy ~ (1|subject), data = df_i, family = \"binomial\")\n# summary(mm.rS)\n\n# :: TEST random effect\npaste(\"AIC decreases w/ new model?\", m0$aic > AIC(logLik(mm.rS)))\n\n\n[1] \"AIC decreases w/ new model? TRUE\"\n\n\nCODE\ntest_lrt(m0,mm.rS) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName  |    Model | df | df_diff |   Chi2 |      p\n-------------------------------------------------\nm0    |      glm |  1 |         |        |       \nmm.rS | glmerMod |  2 |       1 | 118.61 | < .001\n\n\nCODE\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n# :: TEST random effect\npaste(\"AIC decreases w/ new model?\", AIC(logLik(mm.rS)) > AIC(logLik(mm.rSQ)))\n\n\n[1] \"AIC decreases w/ new model? TRUE\"\n\n\nCODE\ntest_lrt(mm.rS, mm.rSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\nSome of the nested models seem to be identical and probably only vary in\n  their random effects.\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName   |    Model | df | df_diff | Chi2 |     p\n-----------------------------------------------\nmm.rS  | glmerMod |  2 |         |      |      \nmm.rSQ | glmerMod |  3 |       1 | 2.69 | 0.101\n\n\nCODE\n## 2 | ADD FIXED EFFECT GRAPH\n\nprint(\"FIXED Condition + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.GrSQ <- glmer(accuracy ~ graph + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# car::Anova(mm.GrSQ) #main effect graph\n\npaste(\"AIC decreases w/ new model\", AIC(logLik(mm.rSQ)) > AIC(logLik(mm.GrSQ)) )\n\n\n[1] \"AIC decreases w/ new model TRUE\"\n\n\nCODE\ntest_lrt(mm.rSQ,mm.GrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |   Chi2 |      p\n---------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |        |       \nmm.GrSQ | glmerMod |  4 |       1 | 178.38 | < .001\n\n\nCODE\n# NOT RELEVANT TO HYPOTHESIS \n# \n# ## 2 | ADD IXN GRAPH & ORDER EFFECT GRAPH ++ ORDER\n# \n# print(\"FIXED Graph + ORDER + Subject & Item random intercepts\")\n# mm.GOrSQ <- glmer(accuracy ~ graph * order + (1|subject) + (1|q) ,\n#                 data = df_i, family = \"binomial\")\n# # summary(mm.GOrSQ)\n# # car::Anova(mm.GOrSQ)\n# \n# paste(\"AIC decreases w/ new model\", AIC(logLik(mm.GrSQ)) > AIC(logLik(mm.GOrSQ)) )\n# test_lrt(mm.GrSQ,mm.GOrSQ) #same as anova(m0, m1, test = \"Chi\")\n# \n# \n# ## 2 | ADD FIXED EFFECT GRAPH + ORDER+ SCENARIO\n# \n# print(\"FIXED Graph * SCENARIO * ORDER + Subject & Item random intercepts\")\n# mm.GSOrSQ <- glmer(accuracy ~ graph*scenario*order + (1|subject) + (1|q) ,\n#                 data = df_i, family = \"binomial\",\n#                 control=glmerControl(optimizer=\"bobyqa\",\n#                                  optCtrl=list(maxfun=2e5)))\n# # summary(mm.GSOrSQ)\n# #car::Anova(mm.GSOrSQ)\n# \n# paste(\"AIC decreases w/ new model\", AIC(logLik(mm.GOrSQ)) > AIC(logLik(mm.GSOrSQ)) )\n# test_lrt(mm.GOrSQ,mm.GSOrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.GrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ graph + (1 | subject) + (1 | q)\n   Data: df_i\n\n     AIC      BIC   logLik deviance df.resid \n    2033     2055    -1013     2025     1704 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-3.523 -0.718  0.365  0.736  2.611 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 0.7934   0.891   \n q       (Intercept) 0.0439   0.209   \nNumber of obs: 1708, groups:  subject, 61; q, 14\n\nFixed effects:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   -0.318      0.148   -2.15    0.031 *  \ngraphlinear    1.468      0.115   12.76   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr)\ngraphlinear -0.343\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=2) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n      Chisq Df Pr(>Chisq)    \ngraph   163  1     <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 4 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…   -0.318     0.148     -2.15  3.14e- 2   -0.608   -0.0284\n2 fixed    <NA>  grap…    1.47      0.115     12.8   2.90e-37    1.24     1.69  \n3 ran_pars subj… sd__…    0.891    NA         NA    NA          NA       NA     \n4 ran_pars q     sd__…    0.209    NA         NA    NA          NA       NA     \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 4 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…    0.727     0.108     -2.15  3.14e- 2    0.544     0.972\n2 fixed    <NA>  grap…    4.34      0.500     12.8   2.90e-37    3.47      5.44 \n3 ran_pars subj… sd__…    0.891    NA         NA    NA          NA        NA    \n4 ran_pars q     sd__…    0.209    NA         NA    NA          NA        NA    \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\nnewdata <- df_i %>% dplyr::select(graph, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n(p <- preds %>%\n  dplyr::select(graph, preds) %>%\n  group_by(graph) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 2 × 5\n  graph      median      se   lwr   upr\n  <fct>       <dbl>   <dbl> <dbl> <dbl>\n1 triangular  0.398 0.00612 0.386 0.410\n2 linear      0.741 0.00483 0.732 0.751\n\n\nCODE\n# #FROM merTools\n# #setup df \n# newdata <- df_i %>% dplyr::select(graph, order, scenario, subject, q)\n# #make predictions\n# preds <- predictInterval(m, newdata = newdata,\n#                               which = \"fixed\", #full, fixed or random for those only\n#                               type = \"probability\", #linear.prediction\n#                               stat = \"median\",\n#                               n.sims = 1000,\n#                               level = 0.80) #width of prediction interval\n# #join predictions to the new dataframe\n# preds <- cbind(newdata, preds)\n# #summarize\n# (summ_preds <- preds %>% \n#   dplyr::select(graph, scenario, order, fit, lwr, upr) %>% \n#   group_by(graph, scenario, order) %>% \n#   dplyr::summarise(\n#     median = median(fit),\n#     lower = median(lwr),\n#     upper = median(upr)\n#   )) \n\n\n\n\nInference TODO UPDATE\nWe fit a mixed logistic regression model predicting question-level accuracy by graph for only participants in the control condition (n = 61). The model included random intercepts for subject and question, and a fixed effect of GRAPH. The model implies that (with no scaffolding; in the control condition) the odds of a correct response on a linear-graph question are more than 4 times higher than the triangle graph, (\\(e^\\beta_1 = 4.34, 95 \\% CI [3.47, 5.44], p < 0.001\\))\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.73\n0.54 – 0.97\n0.031\n\n\ngraph [linear]\n4.34\n3.47 – 5.44\n<0.001\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n0.79\n\n\nτ00 q\n0.04\n\n\nICC\n0.20\n\n\nN subject\n61\n\n\nN q\n14\n\nObservations\n1708\n\n\nMarginal R2 / Conditional R2\n0.116 / 0.295\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m1, \"(log odds)\" = m1)\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              '$sigma^{2}$ = 3.29\" N(subject) = 126 $\\tau_{00}$(subject) = 22.22 N(question) = 13 $\\tau_{00}$(question) = 0.31'\n#                )\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)', \n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_lab.tex\")\n# #              # coef_omit = \"Intercept\",\n# \n# \n# \n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n#ONLY FOR BAYESIAN VERSION\n# result <- rope(m)\n# plot(result)\n# \n# result <- pd(m)\n# plot(result)\n\n\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")  \n\n\n$graph\n\n\n\n\n\nCODE\nplot_model(m, type = \"eff\")  \n\n\n$graph\n\n\n\n\n\nCODE\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n#TODO EMMEANS for the estimated marginal means OR USE IXN PLOT\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.73\n0.54 – 0.97\n0.031\n\n\ngraph [linear]\n4.34\n3.47 – 5.44\n<0.001\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n0.79\n\n\nτ00 q\n0.04\n\n\nICC\n0.20\n\n\nN subject\n61\n\n\nN q\n14\n\nObservations\n1708\n\n\nMarginal R2 / Conditional R2\n0.116 / 0.295\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#h3-1-replication-hypothesis-difference-score",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#h3-1-replication-hypothesis-difference-score",
    "title": "3  Hypothesis Testing",
    "section": "H3-1 ( Replication Hypothesis — DIFFERENCE SCORE )",
    "text": "H3-1 ( Replication Hypothesis — DIFFERENCE SCORE )\nHypothesis Qiang et. al found that the TM graph was more computationally efficient than the LM graph. We expect that for learners that do correctly interpret the graph, they will have lower response times for the TM vs. LM graph.\n\nDIFFERENCE Score\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\ndf_s <- df_subjects %>% dplyr::select(total, triangular_score, score_diff, time_diff, subject, order, tm_scenarios, pretty_condition)\ndf_i <- df_items %>% filter(q %nin% c(3))\n\n\n\n\nVisualize\n\n\nCODE\n## Is score difference normally distributed?\ngf_histogram(~df_s$score_diff)\n\n\n\n\n\nCODE\n# Box plots\n# ++++++++++++++++++++\n# Plot weight by group and color by group\nlibrary(\"ggpubr\")\nggboxplot(df_s, x = \"pretty_condition\", y = \"score_diff\", \n          color = \"pretty_condition\", \n          # palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n          # order = c(\"ctrl\", \"trt1\", \"trt2\"),\n          title = \"DIFFERENCE IN GRAPH scores by Condition\",\n          ylab = \"TRI - LINEAR Score [-15,15]\", xlab = \"Condition\") +\n  geom_hline(yintercept = 0, color = \"black\") + \n  geom_jitter( aes(color = pretty_condition), width = 0.15, alpha = 0.5) +\n  ylim(-15,15) + \n  # facet_wrap(order~ tm_scenarios) +\n  easy_remove_legend() + theme_clean()\n\n\n\n\n\n\n\nCODE\nfavstats(score_diff ~ pretty_condition, data = df_s)\n\n\n  pretty_condition min Q1 median    Q3 max   mean   sd  n missing\n1          control -13 -8   -4.0 -1.00   5 -4.082 4.51 61       0\n2        text:what -12 -4   -2.0  0.00   4 -2.254 3.93 59       0\n3         text:how -11 -4   -2.0  1.00   4 -2.197 4.02 66       0\n4       img:static -11 -5   -1.0  0.75   4 -2.355 4.00 62       0\n5          img:ixv -12 -2    0.5  2.00   5 -0.221 3.23 68       0\n\n\nReported To test the hypothesis that any form of scaffolding will replicate the findings of Qiang et. al (significantly better accuracy on TM than LM graph), we calculated a performance increase (Triangular Accuracy - Linear Accuracy). Positive values indicate better performance with the TM than LM, with a range from -15 to +15. In all but interactive image condition, the median difference score were less than 0, indicating that only the interactive image condition yielded more accurate performance on the TM graph than the LM graph. However, the performance increase was very small; a one-sample t-test indicates that the average performance increase in the interactive image condition was not significantly different than 0 (\\(t(67) = -0.6, p = 0.6\\)).\n\n\nTest\n\n\nCODE\n#one sample t-test\nx <- df_s %>% filter(pretty_condition == \"img:ixv\")\nt_test(x$score_diff)\n\n\n\n    One Sample t-test\n\ndata:  x$score_diff\nt = -0.6, df = 67, p-value = 0.6\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n -1.002  0.561\nsample estimates:\nmean of x \n   -0.221 \n\n\n\n\nLINEAR REGRESSION [ SCORE diff ~ condition]\n\nFit Model\n\n\nCODE\n# empty model \nm0 <- lm( score_diff ~ 1, data = df_s)\n\n# FIXED EFFECTS model \nm.C.O.S <- lm( score_diff ~ pretty_condition + order + tm_scenarios, data = df_s)\ntest_lrt(m0,m.C.O.S)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName    | Model | df | df_diff |  Chi2 |      p\n-----------------------------------------------\nm0      |    lm |  2 |         |       |       \nm.C.O.S |    lm |  8 |       6 | 74.07 | < .001\n\n\nCODE\ncar::Anova(m.C.O.S) #main effects condition\n\n\nAnova Table (Type II tests)\n\nResponse: score_diff\n                 Sum Sq  Df F value  Pr(>F)    \npretty_condition    539   4    9.70 2.1e-07 ***\norder                58   1    4.16   0.042 *  \ntm_scenarios        483   1   34.73 9.9e-09 ***\nResiduals          4295 309                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#main effects of each \n\n# INTERACTION MODEL\nm.COS <- lm( score_diff ~ pretty_condition*order*tm_scenarios, data = df_s)\ntest_lrt(m.C.O.S,m.COS)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName    | Model | df | df_diff |  Chi2 |     p\n----------------------------------------------\nm.C.O.S |    lm |  8 |         |       |      \nm.COS   |    lm | 21 |      13 | 13.57 | 0.405\n\n\nCODE\ncar::Anova(m.COS, type = 3) \n\n\nAnova Table (Type III tests)\n\nResponse: score_diff\n                                    Sum Sq  Df F value  Pr(>F)    \n(Intercept)                            498   1   35.89 6.1e-09 ***\npretty_condition                       152   4    2.74   0.029 *  \norder                                    6   1    0.43   0.514    \ntm_scenarios                            79   1    5.68   0.018 *  \npretty_condition:order                 107   4    1.94   0.104    \npretty_condition:tm_scenarios           23   4    0.42   0.792    \norder:tm_scenarios                       1   1    0.10   0.754    \npretty_condition:order:tm_scenarios     17   4    0.30   0.877    \nResiduals                             4106 296                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#main effects condition, scenario\n\n\nThe best fitting model includes main effects CONDITION, ORDER and SCENARIO.\n\n\nDescribe\n\n\nCODE\n# best model\nm <- m.COS\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n\nCall:\nlm(formula = score_diff ~ pretty_condition * order * tm_scenarios, \n    data = df_s)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-10.091  -2.302   0.464   2.467  11.308 \n\nCoefficients:\n                                                              Estimate\n(Intercept)                                                    -5.4118\npretty_conditiontext:what                                       2.3451\npretty_conditiontext:how                                        0.5229\npretty_conditionimg:static                                      1.5368\npretty_conditionimg:ixv                                         3.5027\norderLM-First                                                  -0.8959\ntm_scenarioslongmire                                            3.1451\npretty_conditiontext:what:orderLM-First                         0.2626\npretty_conditiontext:how:orderLM-First                          4.3181\npretty_conditionimg:static:orderLM-First                        3.0209\npretty_conditionimg:ixv:orderLM-First                           1.8606\npretty_conditiontext:what:tm_scenarioslongmire                 -0.5400\npretty_conditiontext:how:tm_scenarioslongmire                   0.0216\npretty_conditionimg:static:tm_scenarioslongmire                -1.8951\npretty_conditionimg:ixv:tm_scenarioslongmire                    0.1807\norderLM-First:tm_scenarioslongmire                              0.6001\npretty_conditiontext:what:orderLM-First:tm_scenarioslongmire   -0.1416\npretty_conditiontext:how:orderLM-First:tm_scenarioslongmire    -2.5668\npretty_conditionimg:static:orderLM-First:tm_scenarioslongmire  -1.1001\npretty_conditionimg:ixv:orderLM-First:tm_scenarioslongmire     -1.2939\n                                                              Std. Error\n(Intercept)                                                       0.9034\npretty_conditiontext:what                                         1.3194\npretty_conditiontext:how                                          1.2597\npretty_conditionimg:static                                        1.2973\npretty_conditionimg:ixv                                           1.2028\norderLM-First                                                     1.3723\ntm_scenarioslongmire                                              1.3194\npretty_conditiontext:what:orderLM-First                           1.8713\npretty_conditiontext:how:orderLM-First                            1.8918\npretty_conditionimg:static:orderLM-First                          1.9019\npretty_conditionimg:ixv:orderLM-First                             1.8123\npretty_conditiontext:what:tm_scenarioslongmire                    1.9321\npretty_conditiontext:how:tm_scenarioslongmire                     1.8117\npretty_conditionimg:static:tm_scenarioslongmire                   1.8641\npretty_conditionimg:ixv:tm_scenarioslongmire                      1.8782\norderLM-First:tm_scenarioslongmire                                1.9170\npretty_conditiontext:what:orderLM-First:tm_scenarioslongmire      2.7608\npretty_conditiontext:how:orderLM-First:tm_scenarioslongmire       2.6582\npretty_conditionimg:static:orderLM-First:tm_scenarioslongmire     2.6958\npretty_conditionimg:ixv:orderLM-First:tm_scenarioslongmire        2.6645\n                                                              t value Pr(>|t|)\n(Intercept)                                                     -5.99  6.1e-09\npretty_conditiontext:what                                        1.78   0.0765\npretty_conditiontext:how                                         0.42   0.6784\npretty_conditionimg:static                                       1.18   0.2371\npretty_conditionimg:ixv                                          2.91   0.0039\norderLM-First                                                   -0.65   0.5143\ntm_scenarioslongmire                                             2.38   0.0178\npretty_conditiontext:what:orderLM-First                          0.14   0.8885\npretty_conditiontext:how:orderLM-First                           2.28   0.0232\npretty_conditionimg:static:orderLM-First                         1.59   0.1133\npretty_conditionimg:ixv:orderLM-First                            1.03   0.3054\npretty_conditiontext:what:tm_scenarioslongmire                  -0.28   0.7801\npretty_conditiontext:how:tm_scenarioslongmire                    0.01   0.9905\npretty_conditionimg:static:tm_scenarioslongmire                 -1.02   0.3102\npretty_conditionimg:ixv:tm_scenarioslongmire                     0.10   0.9234\norderLM-First:tm_scenarioslongmire                               0.31   0.7545\npretty_conditiontext:what:orderLM-First:tm_scenarioslongmire    -0.05   0.9591\npretty_conditiontext:how:orderLM-First:tm_scenarioslongmire     -0.97   0.3350\npretty_conditionimg:static:orderLM-First:tm_scenarioslongmire   -0.41   0.6835\npretty_conditionimg:ixv:orderLM-First:tm_scenarioslongmire      -0.49   0.6276\n                                                                 \n(Intercept)                                                   ***\npretty_conditiontext:what                                     .  \npretty_conditiontext:how                                         \npretty_conditionimg:static                                       \npretty_conditionimg:ixv                                       ** \norderLM-First                                                    \ntm_scenarioslongmire                                          *  \npretty_conditiontext:what:orderLM-First                          \npretty_conditiontext:how:orderLM-First                        *  \npretty_conditionimg:static:orderLM-First                         \npretty_conditionimg:ixv:orderLM-First                            \npretty_conditiontext:what:tm_scenarioslongmire                   \npretty_conditiontext:how:tm_scenarioslongmire                    \npretty_conditionimg:static:tm_scenarioslongmire                  \npretty_conditionimg:ixv:tm_scenarioslongmire                     \norderLM-First:tm_scenarioslongmire                               \npretty_conditiontext:what:orderLM-First:tm_scenarioslongmire     \npretty_conditiontext:how:orderLM-First:tm_scenarioslongmire      \npretty_conditionimg:static:orderLM-First:tm_scenarioslongmire    \npretty_conditionimg:ixv:orderLM-First:tm_scenarioslongmire       \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.72 on 296 degrees of freedom\nMultiple R-squared:  0.229, Adjusted R-squared:  0.179 \nF-statistic: 4.62 on 19 and 296 DF,  p-value: 2.74e-09\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=2) #TYPE 3 SS FOR IXNS\n\n\nAnova Table (Type II tests)\n\nResponse: score_diff\n                                    Sum Sq  Df F value  Pr(>F)    \npretty_condition                       540   4    9.74 2.1e-07 ***\norder                                   54   1    3.90   0.049 *  \ntm_scenarios                           481   1   34.70 1.0e-08 ***\npretty_condition:order                 115   4    2.07   0.084 .  \npretty_condition:tm_scenarios           54   4    0.97   0.425    \norder:tm_scenarios                       4   1    0.30   0.586    \npretty_condition:order:tm_scenarios     17   4    0.30   0.877    \nResiduals                             4106 296                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: MANUAL ONE-SIDED SIGTEST \n#note: anova and chi square are always one-tailed, but that is independent of being one-sided\n#https://www.ibm.com/support/pages/can-one-get-one-tailed-tests-logistic-regression-dividing-significance-levels-half\n\n# one-sided (right tail) z test for B COEFFICIENT\n#SANITY CHECK 2-tailed test should match the model output\n#NOTE ... NEED TO DO THIS FOR _EACH_ COEFFICIENT\n# tt <- 2*pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,5))\n# ot <- pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"BUT we want a one  directional, null: B <= 0: \",round(ot,5))\n\n#:::::::: INTERPRET COEFFICIENTS\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 20 × 7\n   term                  estimate std.error statistic p.value conf.low conf.high\n   <chr>                    <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 (Intercept)            -5.41       0.903   -5.99   6.05e-9   -7.19      -3.63\n 2 pretty_conditiontext…   2.35       1.32     1.78   7.65e-2   -0.252      4.94\n 3 pretty_conditiontext…   0.523      1.26     0.415  6.78e-1   -1.96       3.00\n 4 pretty_conditionimg:…   1.54       1.30     1.18   2.37e-1   -1.02       4.09\n 5 pretty_conditionimg:…   3.50       1.20     2.91   3.86e-3    1.14       5.87\n 6 orderLM-First          -0.896      1.37    -0.653  5.14e-1   -3.60       1.80\n 7 tm_scenarioslongmire    3.15       1.32     2.38   1.78e-2    0.548      5.74\n 8 pretty_conditiontext…   0.263      1.87     0.140  8.88e-1   -3.42       3.95\n 9 pretty_conditiontext…   4.32       1.89     2.28   2.32e-2    0.595      8.04\n10 pretty_conditionimg:…   3.02       1.90     1.59   1.13e-1   -0.722      6.76\n11 pretty_conditionimg:…   1.86       1.81     1.03   3.05e-1   -1.71       5.43\n12 pretty_conditiontext…  -0.540      1.93    -0.279  7.80e-1   -4.34       3.26\n13 pretty_conditiontext…   0.0216     1.81     0.0119 9.91e-1   -3.54       3.59\n14 pretty_conditionimg:…  -1.90       1.86    -1.02   3.10e-1   -5.56       1.77\n15 pretty_conditionimg:…   0.181      1.88     0.0962 9.23e-1   -3.52       3.88\n16 orderLM-First:tm_sce…   0.600      1.92     0.313  7.54e-1   -3.17       4.37\n17 pretty_conditiontext…  -0.142      2.76    -0.0513 9.59e-1   -5.57       5.29\n18 pretty_conditiontext…  -2.57       2.66    -0.966  3.35e-1   -7.80       2.66\n19 pretty_conditionimg:…  -1.10       2.70    -0.408  6.84e-1   -6.41       4.21\n20 pretty_conditionimg:…  -1.29       2.66    -0.486  6.28e-1   -6.54       3.95\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\nnewdata <- df_s %>% dplyr::select(pretty_condition, order, tm_scenarios, subject)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n(p <- preds %>%\n  group_by(pretty_condition, order, tm_scenarios) %>%\n  dplyr::summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 20 × 7\n# Groups:   pretty_condition, order [10]\n   pretty_condition order    tm_scenarios median    se    lwr    upr\n   <fct>            <fct>    <fct>         <dbl> <dbl>  <dbl>  <dbl>\n 1 control          TM-First axis         -5.41      0 -5.41  -5.41 \n 2 control          TM-First longmire     -2.27      0 -2.27  -2.27 \n 3 control          LM-First axis         -6.31      0 -6.31  -6.31 \n 4 control          LM-First longmire     -2.56      0 -2.56  -2.56 \n 5 text:what        TM-First axis         -3.07      0 -3.07  -3.07 \n 6 text:what        TM-First longmire     -0.462     0 -0.462 -0.462\n 7 text:what        LM-First axis         -3.70      0 -3.70  -3.70 \n 8 text:what        LM-First longmire     -0.636     0 -0.636 -0.636\n 9 text:how         TM-First axis         -4.89      0 -4.89  -4.89 \n10 text:how         TM-First longmire     -1.72      0 -1.72  -1.72 \n11 text:how         LM-First axis         -1.47      0 -1.47  -1.47 \n12 text:how         LM-First longmire     -0.267     0 -0.267 -0.267\n13 img:static       TM-First axis         -3.87      0 -3.87  -3.87 \n14 img:static       TM-First longmire     -2.62      0 -2.62  -2.62 \n15 img:static       LM-First axis         -1.75      0 -1.75  -1.75 \n16 img:static       LM-First longmire     -1.00      0 -1.00  -1.00 \n17 img:ixv          TM-First axis         -1.91      0 -1.91  -1.91 \n18 img:ixv          TM-First longmire      1.42      0  1.42   1.42 \n19 img:ixv          LM-First axis         -0.944     0 -0.944 -0.944\n20 img:ixv          LM-First longmire      1.69      0  1.69   1.69 \n\n\n\n\nINFERENCE\nTo test the hypothesis that SCAFFOLD condition affects triangular score performance, we fit a linear regression model predicting difference score (triangular - linear; where + scores indicate better performance on triangular vs linear) by SCAFFOLD, ORDER and SCENARIO.\nIn this model, there were significant main effects of SCAFFOLD, ORDER and SCENARIO, but no interactions. The model estimates that each condition significantly improves performance on the triangular vs linear graph, increasing the difference in scores (score diff <0 means higher linear, scorediff > 0 higher triangular). The most effective scaffold was the interactive image, increasing the score difference by 4 points. Taking the LM before the TM had a small but significant effect increasing the differential by 1 point, while scenario increased the score by 2.5 points.\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Score Difference (TRI - LIN)\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"eff\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\")\n\n\n$pretty_condition\n\n\n\n\n\n\n$order\n\n\n\n\n\n\n$tm_scenarios\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n## | PLOT INTERACTIONS\n# plot_model(m.C.O.S, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\")\n# \n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \nscore diff\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n-5.41\n-7.19 – -3.63\n<0.001\n\n\npretty conditiontext *what\n2.35\n-0.25 – 4.94\n0.077\n\n\npretty conditiontext *how\n0.52\n-1.96 – 3.00\n0.678\n\n\npretty conditionimg *static\n1.54\n-1.02 – 4.09\n0.237\n\n\npretty conditionimg * ixv\n3.50\n1.14 – 5.87\n0.004\n\n\norder [LM-First]\n-0.90\n-3.60 – 1.80\n0.514\n\n\ntm scenarios [longmire]\n3.15\n0.55 – 5.74\n0.018\n\n\n(pretty conditiontext *what) * order [LM-First]\n0.26\n-3.42 – 3.95\n0.888\n\n\n(pretty conditiontext *how) * order [LM-First]\n4.32\n0.60 – 8.04\n0.023\n\n\n(pretty conditionimg *static) * order[LM-First]\n3.02\n-0.72 – 6.76\n0.113\n\n\n(pretty conditionimg *ixv) * order [LM-First]\n1.86\n-1.71 – 5.43\n0.305\n\n\n(pretty conditiontext *what) * tm scenarios[longmire]\n-0.54\n-4.34 – 3.26\n0.780\n\n\n(pretty conditiontext *how) * tm scenarios[longmire]\n0.02\n-3.54 – 3.59\n0.991\n\n\n(pretty conditionimg *static) * tm scenarios[longmire]\n-1.90\n-5.56 – 1.77\n0.310\n\n\n(pretty conditionimg *ixv) * tm scenarios[longmire]\n0.18\n-3.52 – 3.88\n0.923\n\n\norder [LM-First] * tmscenarios [longmire]\n0.60\n-3.17 – 4.37\n0.754\n\n\n(pretty conditiontext *what * order [LM-First])* tm scenarios [longmire]\n-0.14\n-5.57 – 5.29\n0.959\n\n\n(pretty conditiontext *how * order [LM-First]) *tm scenarios [longmire]\n-2.57\n-7.80 – 2.66\n0.335\n\n\n(pretty conditionimg *static * order[LM-First]) * tmscenarios [longmire]\n-1.10\n-6.41 – 4.21\n0.684\n\n\n(pretty conditionimg *ixv * order [LM-First]) *tm scenarios [longmire]\n-1.29\n-6.54 – 3.95\n0.628\n\n\nObservations\n316\n\n\nR2 / R2 adjusted\n0.229 / 0.179\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n#DIAGNOSTICS\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#h3-the-effectiveness-of-scaffolding-triangular-score",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#h3-the-effectiveness-of-scaffolding-triangular-score",
    "title": "3  Hypothesis Testing",
    "section": "H3 | The Effectiveness of Scaffolding — TRIANGULAR SCORE",
    "text": "H3 | The Effectiveness of Scaffolding — TRIANGULAR SCORE\n\nTRIANGULAR SCORE\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\ndf_s <- df_subjects %>% dplyr::select(triangular_score, score_diff, subject, order, tm_scenarios, pretty_condition)\ndf_i <- df_items %>% filter(q %nin% c(3)) %>% filter(graph == \"triangular\")\n\n\n\n\nVisualize\n\n\nCODE\n# Box plots\n# ++++++++++++++++++++\n# Plot weight by group and color by group\nlibrary(\"ggpubr\")\nggboxplot(df_s, x = \"pretty_condition\", y = \"triangular_score\", \n          color = \"pretty_condition\", \n          # palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n          # order = c(\"ctrl\", \"trt1\", \"trt2\"),\n          title = \"TRIANGULAR SCORE by Condition\",\n          ylab = \"Triangular Score [0,15]\", xlab = \"Condition\") +\n  # geom_hline(yintercept = 0, color = \"black\") + \n  geom_jitter( aes(color = pretty_condition), width = 0.15, alpha = 0.5) +\n  # ylim(-15,15) + \n  # facet_wrap(order~ tm_scenarios) +\n  easy_remove_legend() + theme_clean()\n\n\n\n\n\nCODE\ngf_histogram(~triangular_score, data = df_s)\n\n\n\n\n\n\n\nCODE\nfavstats(triangular_score ~ pretty_condition, data = df_s)\n\n\n  pretty_condition min   Q1 median   Q3 max  mean   sd  n missing\n1          control   0  2.0      6 11.0  14  6.90 4.51 61       0\n2        text:what   0  6.5     10 12.5  14  8.81 4.28 59       0\n3         text:how   1  4.0     10 12.0  15  8.70 4.71 66       0\n4       img:static   0  5.0     10 12.0  15  8.56 4.57 62       0\n5          img:ixv   1 10.0     11 13.0  15 10.68 3.41 68       0\n\n\n\n\n[no] MIXED EFFECTS LOGISTIC REGRESSION –> RAW SCORE\nFit mixed effects logistic regression model to test effect of CONDITION ORDER, and SCENARIO on probability of correct response just in TRIANGULAR graph\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s)  #removed nondiscrim Q3\n\n\n[1] 14\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$graph) && is.factor(df_i$score) && is.factor(df_i$order) && is.factor(df_i$scenario)\n\n\n[1] TRUE\n\n\nCODE\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n\n## 2 | ADD FIXED EFFECT CONDITION\n\nprint(\"Condition + Subject & Item random intercepts\")\n\n\n[1] \"Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.CrSQ <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\", \n                # control=glmerControl(optimizer=\"bobyqa\",\n                #                  optCtrl=list(maxfun=2e5))\n                )\n# car::Anova(mm.CrSQ) #main effects graph\ntest_lrt(mm.rSQ,mm.CrSQ) \n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |  Chi2 |      p\n--------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |       |       \nmm.CrSQ | glmerMod |  7 |       4 | 24.75 | < .001\n\n\nCODE\n#adding condition improves fit\n\n# 2 | ADD SIMPLE FIXED EFFECTS \nprint(\"FIXED CONDITION + ORDER + SCENARIO + Subject & Item random intercepts\")\n\n\n[1] \"FIXED CONDITION + ORDER + SCENARIO + Subject & Item random intercepts\"\n\n\nCODE\nmm.C.O.SrSQ <- glmer(accuracy ~ pretty_condition + order + scenario + (1|subject) + (1|q),\n                   data = df_i, family = \"binomial\", \n                   control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n# car::Anova(mm.C.O.SrSQ, type = 2) #main effect condition\ntest_lrt(mm.CrSQ,mm.C.O.SrSQ) \n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName        |    Model | df | df_diff |  Chi2 |      p\n------------------------------------------------------\nmm.CrSQ     | glmerMod |  7 |         |       |       \nmm.C.O.SrSQ | glmerMod |  9 |       2 | 33.31 | < .001\n\n\nCODE\n#adding main effects DOES improve fit \n\n\n# 2 | ADD IXNS \nprint(\"FIXED CONDITION * ORDER * SCENARIO  + Subject & Item random intercepts\")\n\n\n[1] \"FIXED CONDITION * ORDER * SCENARIO  + Subject & Item random intercepts\"\n\n\nCODE\nmm.COSrSQ <- glmer(accuracy ~ pretty_condition*order*scenario + (1|subject) + (1|q),\n                   data = df_i, family = \"binomial\", \n                   control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\ncar::Anova(mm.COSrSQ, type = 3) #ME condition, scenario\n\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: accuracy\n                                Chisq Df Pr(>Chisq)  \n(Intercept)                      5.16  1      0.023 *\npretty_condition                 9.32  4      0.054 .\norder                            1.91  1      0.167  \nscenario                         3.78  1      0.052 .\npretty_condition:order           7.58  4      0.108  \npretty_condition:scenario        0.38  4      0.984  \norder:scenario                   1.46  1      0.227  \npretty_condition:order:scenario  2.25  4      0.690  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\ntest_lrt(mm.COSrSQ,mm.C.O.SrSQ)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName        |    Model | df | df_diff |  Chi2 |     p\n-----------------------------------------------------\nmm.COSrSQ   | glmerMod | 22 |         |       |      \nmm.C.O.SrSQ | glmerMod |  9 |     -13 | 11.87 | 0.539\n\n\nCODE\n# adding interactions did not improve model fit\n\n#PERFORMANCE\nperformance(mm.C.O.SrSQ)\n\n\n# Indices of model performance\n\nAIC      |     AICc |      BIC | R2 (cond.) | R2 (marg.) |   ICC |  RMSE | Sigma | Log_loss | Score_log | Score_spherical\n-------------------------------------------------------------------------------------------------------------------------\n4890.190 | 4890.231 | 4947.741 |      0.474 |      0.091 | 0.421 | 0.385 | 1.000 |    0.457 |      -Inf |       3.919e-04\n\n\nREPORTED To quantify the effect of explicit scaffold condition on triangular graph performance, we fit a mixed logistic regression model on item-level accuracy (correct/incorrect) for only the triangular model block. We included random intercepts for subjects and questions, and fixed effects for explicit scaffold condition, graph-order, and scenario-order. A likelihood ratio test comparing a model with main effects to a second model including the interaction between fixed factors indicates that the interaction term does not improve model fit (Chi2(22,9) = 11.87, p = 0.539). The explanatory power of the final model is moderate (conditional R2 = 0.474) with the part related to fixed effects explaining 9% of variance.\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.C.O.SrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ pretty_condition + order + scenario + (1 | subject) +  \n    (1 | q)\n   Data: df_i\nControl: glmerControl(optimizer = \"bobyqa\", optCtrl = list(maxfun = 200000))\n\n     AIC      BIC   logLik deviance df.resid \n    4890     4948    -2436     4872     4414 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-3.676 -0.549  0.339  0.601  3.123 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 2.3167   1.522   \n q       (Intercept) 0.0741   0.272   \nNumber of obs: 4423, groups:  subject, 316; q, 14\n\nFixed effects:\n                           Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  -1.154      0.264   -4.37  1.3e-05 ***\npretty_conditiontext:what     0.883      0.307    2.87   0.0041 ** \npretty_conditiontext:how      0.810      0.299    2.71   0.0068 ** \npretty_conditionimg:static    0.801      0.303    2.64   0.0083 ** \npretty_conditionimg:ixv       1.688      0.299    5.65  1.6e-08 ***\norderLM-First                 0.263      0.189    1.39   0.1656    \nscenariolongmire              1.087      0.191    5.68  1.3e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n                 (Intr) prtty_cndtntxt:w prtty_cndtntxt:h prtty_cndtnmg:s\nprtty_cndtntxt:w -0.589                                                  \nprtty_cndtntxt:h -0.598  0.506                                           \nprtty_cndtnmg:s  -0.591  0.501            0.513                          \nprtty_cndtnmg:x  -0.617  0.514            0.523            0.517         \nordrLM-Frst      -0.333 -0.038            0.011           -0.003         \nscenarlngmr      -0.380  0.077            0.017            0.031         \n                 prtty_cndtnmg:x orLM-F\nprtty_cndtntxt:w                       \nprtty_cndtntxt:h                       \nprtty_cndtnmg:s                        \nprtty_cndtnmg:x                        \nordrLM-Frst      -0.020                \nscenarlngmr       0.087          -0.013\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=2) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n                 Chisq Df Pr(>Chisq)    \npretty_condition 32.12  4    1.8e-06 ***\norder             1.92  1       0.17    \nscenario         32.30  1    1.3e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 9 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…   -1.15      0.264     -4.37  1.26e-5   -1.67     -0.636\n2 fixed    <NA>   pret…    0.883     0.307      2.87  4.08e-3    0.281     1.49 \n3 fixed    <NA>   pret…    0.810     0.299      2.71  6.78e-3    0.224     1.40 \n4 fixed    <NA>   pret…    0.801     0.303      2.64  8.29e-3    0.206     1.40 \n5 fixed    <NA>   pret…    1.69      0.299      5.65  1.58e-8    1.10      2.27 \n6 fixed    <NA>   orde…    0.263     0.189      1.39  1.66e-1   -0.109     0.634\n7 fixed    <NA>   scen…    1.09      0.191      5.68  1.32e-8    0.712     1.46 \n8 ran_pars subje… sd__…    1.52     NA         NA    NA         NA        NA    \n9 ran_pars q      sd__…    0.272    NA         NA    NA         NA        NA    \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 9 × 9\n  effect   group  term  estimate std.error statistic  p.value conf.low conf.high\n  <chr>    <chr>  <chr>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 fixed    <NA>   (Int…    0.315    0.0833     -4.37  1.26e-5    0.188     0.529\n2 fixed    <NA>   pret…    2.42     0.744       2.87  4.08e-3    1.32      4.42 \n3 fixed    <NA>   pret…    2.25     0.672       2.71  6.78e-3    1.25      4.04 \n4 fixed    <NA>   pret…    2.23     0.675       2.64  8.29e-3    1.23      4.04 \n5 fixed    <NA>   pret…    5.41     1.61        5.65  1.58e-8    3.01      9.71 \n6 fixed    <NA>   orde…    1.30     0.246       1.39  1.66e-1    0.897     1.88 \n7 fixed    <NA>   scen…    2.97     0.568       5.68  1.32e-8    2.04      4.32 \n8 ran_pars subje… sd__…    1.52    NA          NA    NA         NA        NA    \n9 ran_pars q      sd__…    0.272   NA          NA    NA         NA        NA    \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM merTools\n#setup empty df \nnewdata <- df_i %>% dplyr::select(graph, pretty_condition, order, scenario, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning in predictInterval(m, newdata = newdata, which = \"fixed\", type = \"probability\", : newdata is tbl_df or tbl object from dplyr package and has been\n              coerced to a data.frame\n\n\nWarning: executing %dopar% sequentially: no parallel backend registered\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(graph, pretty_condition, scenario, order, fit, lwr, upr) %>% \n  group_by(graph, pretty_condition, scenario, order) %>% \n  dplyr::summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 20 × 7\n# Groups:   graph, pretty_condition, scenario [10]\n   graph      pretty_condition scenario order    median  lower upper\n   <fct>      <fct>            <fct>    <fct>     <dbl>  <dbl> <dbl>\n 1 triangular control          axis     TM-First  0.241 0.0782 0.547\n 2 triangular control          axis     LM-First  0.292 0.0985 0.607\n 3 triangular control          longmire TM-First  0.486 0.201  0.779\n 4 triangular control          longmire LM-First  0.551 0.244  0.820\n 5 triangular text:what        axis     TM-First  0.434 0.169  0.742\n 6 triangular text:what        axis     LM-First  0.499 0.211  0.789\n 7 triangular text:what        longmire TM-First  0.696 0.380  0.895\n 8 triangular text:what        longmire LM-First  0.747 0.440  0.917\n 9 triangular text:how         axis     TM-First  0.415 0.161  0.728\n10 triangular text:how         axis     LM-First  0.480 0.198  0.777\n11 triangular text:how         longmire TM-First  0.680 0.361  0.888\n12 triangular text:how         longmire LM-First  0.732 0.423  0.910\n13 triangular img:static       axis     TM-First  0.411 0.157  0.723\n14 triangular img:static       axis     LM-First  0.474 0.194  0.771\n15 triangular img:static       longmire TM-First  0.675 0.357  0.886\n16 triangular img:static       longmire LM-First  0.730 0.420  0.909\n17 triangular img:ixv          axis     TM-First  0.630 0.312  0.864\n18 triangular img:ixv          axis     LM-First  0.688 0.369  0.891\n19 triangular img:ixv          longmire TM-First  0.834 0.573  0.950\n20 triangular img:ixv          longmire LM-First  0.867 0.635  0.961\n\n\nCODE\nlibrary(emmeans)\n\n##POST-HOC COMPARISONS\nprint(\"POSTHOC COMPARISONS :: CONDITION\")\n\n\n[1] \"POSTHOC COMPARISONS :: CONDITION\"\n\n\nCODE\nemmeans(m,  pairwise ~ pretty_condition, \n        type = \"response\" , adjust = \"tukey\") #sidak, tukey\n\n\n$emmeans\n pretty_condition  prob     SE  df asymp.LCL asymp.UCL\n control          0.382 0.0538 Inf     0.284     0.492\n text:what        0.600 0.0553 Inf     0.488     0.702\n text:how         0.582 0.0534 Inf     0.475     0.682\n img:static       0.580 0.0549 Inf     0.470     0.682\n img:ixv          0.770 0.0386 Inf     0.686     0.837\n\nResults are averaged over the levels of: order, scenario \nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast               odds.ratio    SE  df null z.ratio p.value\n control / text:what         0.413 0.127 Inf    1  -2.870  0.0330\n control / text:how          0.445 0.133 Inf    1  -2.710  0.0530\n control / img:static        0.449 0.136 Inf    1  -2.640  0.0630\n control / img:ixv           0.185 0.055 Inf    1  -5.650  <.0001\n text:what / text:how        1.076 0.324 Inf    1   0.240  0.9990\n text:what / img:static      1.086 0.331 Inf    1   0.270  0.9990\n text:what / img:ixv         0.447 0.134 Inf    1  -2.690  0.0550\n text:how / img:static       1.009 0.300 Inf    1   0.030  1.0000\n text:how / img:ixv          0.415 0.121 Inf    1  -3.010  0.0220\n img:static / img:ixv        0.412 0.122 Inf    1  -3.000  0.0230\n\nResults are averaged over the levels of: order, scenario \nP value adjustment: tukey method for comparing a family of 5 estimates \nTests are performed on the log odds ratio scale \n\n\nCODE\n##PLOT PROBABILITY\n# plot(ref_grid(m), by = \"pretty_condition\", type = \"response\")\n\n\n\n\nINFERENCE\nREPORTED\nConsistent with our hypothesis, Wald Chi-Square tests revealed a significant main effect for condition (\\(\\chi^2(4) = 32.12, p < 0.001\\)). The (unstandardized) regression coefficients indicate that each explicit scaffolds, significantly increases the odds of a correct response in the triangular graph task relative to the non-scaffold control. The two text conditions each roughly double the odds of a correct response,(\\(e^{\\beta_1[conceptual]} = 2.42, SE = 0.744, p < 0.001 ;e^{\\beta_1[procedural]} = 2.25, SE = 0.67, p < 0.01\\)). The static image condition also doubles the odds of a correct response,(\\(e^{\\beta_1[static image]} = 2.23, SE = 0.66, p < 0.01\\)). Alternatively, the interactive image condition increased the odds of a correct response by over a factor of 5, (\\(e^{\\beta_1[interactive image]} = 5.41, SE = 1.61, p < 0.01\\)).\nUnexpectedly, Wald Chi-Square tests revealed a significant main effect for (\\(\\chi^2(1) = 32.30, p < 0.001\\)). Specifically, pairing the event-scheduling scenario B with the TM graph task increased the odds of a correct response by a factor of 3, (\\(e^{\\beta_1[scenarioB]} = 2.97, SE = 0.57, p < 0.001\\))\nCounter to our hypothesis, Wald Chi-Square tests did not indicate a significant main effect for (\\(\\chi^2(1) = 1.92, p = 0.17\\)). Completing the TM graph block after the LM graph task did not improve performance on the TM graph as we expected.\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\")\n\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n#TODO EMMEANS for the estimated marginal means OR USE IXN PLOT\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n0.32\n0.19 – 0.53\n<0.001\n\n\npretty conditiontext *what\n2.42\n1.32 – 4.42\n0.004\n\n\npretty conditiontext *how\n2.25\n1.25 – 4.04\n0.007\n\n\npretty conditionimg *static\n2.23\n1.23 – 4.04\n0.008\n\n\npretty conditionimg * ixv\n5.41\n3.01 – 9.71\n<0.001\n\n\norder [LM-First]\n1.30\n0.90 – 1.88\n0.166\n\n\nscenario [longmire]\n2.97\n2.04 – 4.32\n<0.001\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n2.32\n\n\nτ00 q\n0.07\n\n\nICC\n0.42\n\n\nN subject\n316\n\n\nN q\n14\n\nObservations\n4423\n\n\nMarginal R2 / Conditional R2\n0.091 / 0.474\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)\n\n\n\n\n\n\n\n\n[no] LINEAR REGRESSION [ TRI SCORE ~ condition]\n[violates normality of residuals, and has issues with colinearity] ##### Fit Model\n\n\nCODE\n# empty model \nm0 <- lm( triangular_score ~ 1, data = df_s)\n\n# CONDITION model \nm.C <- lm( triangular_score ~ pretty_condition, data = df_s)\npaste(\"Condition model better fit than empty?\")\n\n\n[1] \"Condition model better fit than empty?\"\n\n\nCODE\ntest_lrt(m0,m.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName | Model | df | df_diff |  Chi2 |      p\n--------------------------------------------\nm0   |    lm |  2 |         |       |       \nm.C  |    lm |  6 |       4 | 24.94 | < .001\n\n\nCODE\n# car::Anova(m.C) #main effects condition\n\n# CONDITION + ORDER + SCENARIO model \nm.COS <- lm( triangular_score ~ pretty_condition*tm_scenarios*order, data = df_s)\npaste(\"Condition*Order*Scenario model better fit than interactions model?\")\n\n\n[1] \"Condition*Order*Scenario model better fit than interactions model?\"\n\n\nCODE\ntest_lrt(m.COS,m.C)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (OLS-estimator)\n\nName  | Model | df | df_diff |  Chi2 |      p\n---------------------------------------------\nm.COS |    lm | 21 |         |       |       \nm.C   |    lm |  6 |     -15 | 44.97 | < .001\n\n\nCODE\ncar::Anova(m.COS, type = 3) #main effects condition, order scenario, scenario\n\n\nAnova Table (Type III tests)\n\nResponse: triangular_score\n                                    Sum Sq  Df F value  Pr(>F)    \n(Intercept)                            553   1   32.67 2.7e-08 ***\npretty_condition                       151   4    2.24   0.065 .  \ntm_scenarios                            58   1    3.41   0.066 .  \norder                                   14   1    0.85   0.357    \npretty_condition:tm_scenarios            4   4    0.07   0.992    \npretty_condition:order                 103   4    1.51   0.198    \ntm_scenarios:order                      13   1    0.78   0.377    \npretty_condition:tm_scenarios:order     28   4    0.41   0.799    \nResiduals                             5015 296                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#no interactions were significant; weak main effects\n\n# #MAIN EFFECTS ONLY MODEL\n# m.COS <- lm( triangular_score ~ pretty_condition+order+tm_scenarios, data = df_s)\n# paste(\"Condition+Order+Scenario model better fit than interaction model?\")\n# test_lrt(m.C.O.S,m.COS)\n\n\nThe best fitting model includes main effects CONDITION, ORDER and SCENARIO.\n\nDescribe\n\n\nCODE\n# best model\nm <- m.COS\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n\nCall:\nlm(formula = triangular_score ~ pretty_condition * tm_scenarios * \n    order, data = df_s)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-10.500  -3.308   0.775   2.817   7.692 \n\nCoefficients:\n                                                              Estimate\n(Intercept)                                                    5.70588\npretty_conditiontext:what                                      2.16078\npretty_conditiontext:how                                       0.84967\npretty_conditionimg:static                                     0.73162\npretty_conditionimg:ixv                                        3.52139\ntm_scenarioslongmire                                           2.69412\norderLM-First                                                 -1.39819\npretty_conditiontext:what:tm_scenarioslongmire                 0.66998\npretty_conditiontext:how:tm_scenarioslongmire                 -0.02745\npretty_conditionimg:static:tm_scenarioslongmire               -0.00662\npretty_conditionimg:ixv:tm_scenarioslongmire                  -0.42139\npretty_conditiontext:what:orderLM-First                        0.43152\npretty_conditiontext:how:orderLM-First                         4.04263\npretty_conditionimg:static:orderLM-First                       3.33569\npretty_conditionimg:ixv:orderLM-First                          2.67092\ntm_scenarioslongmire:orderLM-First                             1.87319\npretty_conditiontext:what:tm_scenarioslongmire:orderLM-First  -1.41002\npretty_conditiontext:how:tm_scenarioslongmire:orderLM-First   -3.60652\npretty_conditionimg:static:tm_scenarioslongmire:orderLM-First -2.36426\npretty_conditionimg:ixv:tm_scenarioslongmire:orderLM-First    -2.39592\n                                                              Std. Error\n(Intercept)                                                      0.99827\npretty_conditiontext:what                                        1.45806\npretty_conditiontext:how                                         1.39202\npretty_conditionimg:static                                       1.43365\npretty_conditionimg:ixv                                          1.32913\ntm_scenarioslongmire                                             1.45806\norderLM-First                                                    1.51648\npretty_conditiontext:what:tm_scenarioslongmire                   2.13507\npretty_conditiontext:how:tm_scenarioslongmire                    2.00208\npretty_conditionimg:static:tm_scenarioslongmire                  2.06000\npretty_conditionimg:ixv:tm_scenarioslongmire                     2.07552\npretty_conditiontext:what:orderLM-First                          2.06789\npretty_conditiontext:how:orderLM-First                           2.09053\npretty_conditionimg:static:orderLM-First                         2.10175\npretty_conditionimg:ixv:orderLM-First                            2.00273\ntm_scenarioslongmire:orderLM-First                               2.11848\npretty_conditiontext:what:tm_scenarioslongmire:orderLM-First     3.05085\npretty_conditiontext:how:tm_scenarioslongmire:orderLM-First      2.93754\npretty_conditionimg:static:tm_scenarioslongmire:orderLM-First    2.97901\npretty_conditionimg:ixv:tm_scenarioslongmire:orderLM-First       2.94445\n                                                              t value Pr(>|t|)\n(Intercept)                                                      5.72  2.7e-08\npretty_conditiontext:what                                        1.48   0.1394\npretty_conditiontext:how                                         0.61   0.5421\npretty_conditionimg:static                                       0.51   0.6102\npretty_conditionimg:ixv                                          2.65   0.0085\ntm_scenarioslongmire                                             1.85   0.0656\norderLM-First                                                   -0.92   0.3573\npretty_conditiontext:what:tm_scenarioslongmire                   0.31   0.7539\npretty_conditiontext:how:tm_scenarioslongmire                   -0.01   0.9891\npretty_conditionimg:static:tm_scenarioslongmire                  0.00   0.9974\npretty_conditionimg:ixv:tm_scenarioslongmire                    -0.20   0.8393\npretty_conditiontext:what:orderLM-First                          0.21   0.8348\npretty_conditiontext:how:orderLM-First                           1.93   0.0541\npretty_conditionimg:static:orderLM-First                         1.59   0.1136\npretty_conditionimg:ixv:orderLM-First                            1.33   0.1833\ntm_scenarioslongmire:orderLM-First                               0.88   0.3773\npretty_conditiontext:what:tm_scenarioslongmire:orderLM-First    -0.46   0.6443\npretty_conditiontext:how:tm_scenarioslongmire:orderLM-First     -1.23   0.2205\npretty_conditionimg:static:tm_scenarioslongmire:orderLM-First   -0.79   0.4280\npretty_conditionimg:ixv:tm_scenarioslongmire:orderLM-First      -0.81   0.4165\n                                                                 \n(Intercept)                                                   ***\npretty_conditiontext:what                                        \npretty_conditiontext:how                                         \npretty_conditionimg:static                                       \npretty_conditionimg:ixv                                       ** \ntm_scenarioslongmire                                          .  \norderLM-First                                                    \npretty_conditiontext:what:tm_scenarioslongmire                   \npretty_conditiontext:how:tm_scenarioslongmire                    \npretty_conditionimg:static:tm_scenarioslongmire                  \npretty_conditionimg:ixv:tm_scenarioslongmire                     \npretty_conditiontext:what:orderLM-First                          \npretty_conditiontext:how:orderLM-First                        .  \npretty_conditionimg:static:orderLM-First                         \npretty_conditionimg:ixv:orderLM-First                            \ntm_scenarioslongmire:orderLM-First                               \npretty_conditiontext:what:tm_scenarioslongmire:orderLM-First     \npretty_conditiontext:how:tm_scenarioslongmire:orderLM-First      \npretty_conditionimg:static:tm_scenarioslongmire:orderLM-First    \npretty_conditionimg:ixv:tm_scenarioslongmire:orderLM-First       \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.12 on 296 degrees of freedom\nMultiple R-squared:  0.196, Adjusted R-squared:  0.145 \nF-statistic: 3.81 on 19 and 296 DF,  p-value: 3.47e-07\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=3) #TYPE 3 SS FOR IXNS\n\n\nAnova Table (Type III tests)\n\nResponse: triangular_score\n                                    Sum Sq  Df F value  Pr(>F)    \n(Intercept)                            553   1   32.67 2.7e-08 ***\npretty_condition                       151   4    2.24   0.065 .  \ntm_scenarios                            58   1    3.41   0.066 .  \norder                                   14   1    0.85   0.357    \npretty_condition:tm_scenarios            4   4    0.07   0.992    \npretty_condition:order                 103   4    1.51   0.198    \ntm_scenarios:order                      13   1    0.78   0.377    \npretty_condition:tm_scenarios:order     28   4    0.41   0.799    \nResiduals                             5015 296                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: MANUAL ONE-SIDED SIGTEST \n#note: anova and chi square are always one-tailed, but that is independent of being one-sided\n#https://www.ibm.com/support/pages/can-one-get-one-tailed-tests-logistic-regression-dividing-significance-levels-half\n\n# one-sided (right tail) z test for B COEFFICIENT\n#SANITY CHECK 2-tailed test should match the model output\n#NOTE ... NEED TO DO THIS FOR _EACH_ COEFFICIENT\n# tt <- 2*pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,5))\n# ot <- pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"BUT we want a one  directional, null: B <= 0: \",round(ot,5))\n\n#:::::::: INTERPRET COEFFICIENTS\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 20 × 7\n   term                  estimate std.error statistic p.value conf.low conf.high\n   <chr>                    <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 (Intercept)            5.71        0.998   5.72    2.66e-8   3.74        7.67\n 2 pretty_conditiontext…  2.16        1.46    1.48    1.39e-1  -0.709       5.03\n 3 pretty_conditiontext…  0.850       1.39    0.610   5.42e-1  -1.89        3.59\n 4 pretty_conditionimg:…  0.732       1.43    0.510   6.10e-1  -2.09        3.55\n 5 pretty_conditionimg:…  3.52        1.33    2.65    8.50e-3   0.906       6.14\n 6 tm_scenarioslongmire   2.69        1.46    1.85    6.56e-2  -0.175       5.56\n 7 orderLM-First         -1.40        1.52   -0.922   3.57e-1  -4.38        1.59\n 8 pretty_conditiontext…  0.670       2.14    0.314   7.54e-1  -3.53        4.87\n 9 pretty_conditiontext… -0.0275      2.00   -0.0137  9.89e-1  -3.97        3.91\n10 pretty_conditionimg:… -0.00662     2.06   -0.00321 9.97e-1  -4.06        4.05\n11 pretty_conditionimg:… -0.421       2.08   -0.203   8.39e-1  -4.51        3.66\n12 pretty_conditiontext…  0.432       2.07    0.209   8.35e-1  -3.64        4.50\n13 pretty_conditiontext…  4.04        2.09    1.93    5.41e-2  -0.0715      8.16\n14 pretty_conditionimg:…  3.34        2.10    1.59    1.14e-1  -0.801       7.47\n15 pretty_conditionimg:…  2.67        2.00    1.33    1.83e-1  -1.27        6.61\n16 tm_scenarioslongmire…  1.87        2.12    0.884   3.77e-1  -2.30        6.04\n17 pretty_conditiontext… -1.41        3.05   -0.462   6.44e-1  -7.41        4.59\n18 pretty_conditiontext… -3.61        2.94   -1.23    2.21e-1  -9.39        2.17\n19 pretty_conditionimg:… -2.36        2.98   -0.794   4.28e-1  -8.23        3.50\n20 pretty_conditionimg:… -2.40        2.94   -0.814   4.16e-1  -8.19        3.40\n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\nnewdata <- df_s %>% dplyr::select(pretty_condition, order, tm_scenarios, subject)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n(p <- preds %>%\n  group_by(pretty_condition, order, tm_scenarios) %>%\n  dplyr::summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 20 × 7\n# Groups:   pretty_condition, order [10]\n   pretty_condition order    tm_scenarios median    se   lwr   upr\n   <fct>            <fct>    <fct>         <dbl> <dbl> <dbl> <dbl>\n 1 control          TM-First axis           5.71     0  5.71  5.71\n 2 control          TM-First longmire       8.40     0  8.40  8.40\n 3 control          LM-First axis           4.31     0  4.31  4.31\n 4 control          LM-First longmire       8.88     0  8.88  8.88\n 5 text:what        TM-First axis           7.87     0  7.87  7.87\n 6 text:what        TM-First longmire      11.2      0 11.2  11.2 \n 7 text:what        LM-First axis           6.9      0  6.9   6.9 \n 8 text:what        LM-First longmire      10.7      0 10.7  10.7 \n 9 text:how         TM-First axis           6.56     0  6.56  6.56\n10 text:how         TM-First longmire       9.22     0  9.22  9.22\n11 text:how         LM-First axis           9.2      0  9.2   9.2 \n12 text:how         LM-First longmire      10.1      0 10.1  10.1 \n13 img:static       TM-First axis           6.44     0  6.44  6.44\n14 img:static       TM-First longmire       9.13     0  9.13  9.13\n15 img:static       LM-First axis           8.37     0  8.37  8.37\n16 img:static       LM-First longmire      10.6      0 10.6  10.6 \n17 img:ixv          TM-First axis           9.23     0  9.23  9.23\n18 img:ixv          TM-First longmire      11.5      0 11.5  11.5 \n19 img:ixv          LM-First axis          10.5      0 10.5  10.5 \n20 img:ixv          LM-First longmire      12.3      0 12.3  12.3 \n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Score Difference (TRI - LIN)\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"eff\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\")\n\n\n$pretty_condition\n\n\n\n\n\n\n$tm_scenarios\n\n\n\n\n\n\n$order\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")  \n# plot_model(m, type = \"eff\")  \n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n## | PLOT INTERACTIONS\n# plot_model(m.C.O.S, type=\"int\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\")\n# \n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \ntriangular score\n\n\nPredictors\nEstimates\nCI\np\n\n\n(Intercept)\n5.71\n3.74 – 7.67\n<0.001\n\n\npretty conditiontext *what\n2.16\n-0.71 – 5.03\n0.139\n\n\npretty conditiontext *how\n0.85\n-1.89 – 3.59\n0.542\n\n\npretty conditionimg *static\n0.73\n-2.09 – 3.55\n0.610\n\n\npretty conditionimg * ixv\n3.52\n0.91 – 6.14\n0.008\n\n\ntm scenarios [longmire]\n2.69\n-0.18 – 5.56\n0.066\n\n\norder [LM-First]\n-1.40\n-4.38 – 1.59\n0.357\n\n\n(pretty conditiontext *what) * tm scenarios[longmire]\n0.67\n-3.53 – 4.87\n0.754\n\n\n(pretty conditiontext *how) * tm scenarios[longmire]\n-0.03\n-3.97 – 3.91\n0.989\n\n\n(pretty conditionimg *static) * tm scenarios[longmire]\n-0.01\n-4.06 – 4.05\n0.997\n\n\n(pretty conditionimg *ixv) * tm scenarios[longmire]\n-0.42\n-4.51 – 3.66\n0.839\n\n\n(pretty conditiontext *what) * order [LM-First]\n0.43\n-3.64 – 4.50\n0.835\n\n\n(pretty conditiontext *how) * order [LM-First]\n4.04\n-0.07 – 8.16\n0.054\n\n\n(pretty conditionimg *static) * order[LM-First]\n3.34\n-0.80 – 7.47\n0.114\n\n\n(pretty conditionimg *ixv) * order [LM-First]\n2.67\n-1.27 – 6.61\n0.183\n\n\ntm scenarios [longmire] *order [LM-First]\n1.87\n-2.30 – 6.04\n0.377\n\n\n(pretty conditiontext *what * tm scenarios[longmire]) * order[LM-First]\n-1.41\n-7.41 – 4.59\n0.644\n\n\n(pretty conditiontext *how * tm scenarios[longmire]) * order[LM-First]\n-3.61\n-9.39 – 2.17\n0.221\n\n\n(pretty conditionimg *static * tm scenarios[longmire]) * order[LM-First]\n-2.36\n-8.23 – 3.50\n0.428\n\n\n(pretty conditionimg *ixv * tm scenarios[longmire]) * order[LM-First]\n-2.40\n-8.19 – 3.40\n0.416\n\n\nObservations\n316\n\n\nR2 / R2 adjusted\n0.196 / 0.145\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\n\nDiagnostics\n\n\nCODE\n#DIAGNOSTICS\ncheck_model(m)\n\n\n\n\n\n\n\n\nH2 | Realizing Computational Efficiency —— TIME EFFICIENCY\n\nSetup\n\n\nCODE\ndf_s <- df_subjects \ndf_i <- df_items \n\n\n\n\nVisualize\n\n\nCODE\nlibrary(ggpubr)\nggboxplot(df_s, x = \"pretty_condition\", y = \"time_diff\", \n          color = \"pretty_condition\", \n          # palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n          # order = c(\"ctrl\", \"trt1\", \"trt2\"),\n          title = \"DIFFERENCE IN TIME by Condition\",\n          ylab = \"TRI - LINEAR TIME (seconds)\", xlab = \"Condition\") +\n  geom_hline(yintercept = 0, color = \"black\") + \n  geom_jitter( aes(color = pretty_condition), width = 0.15, alpha = 0.5) +\n  # facet_wrap(order~ tm_scenarios) +\n  easy_remove_legend() + theme_clean()\n\n\n\n\n\n\n\nModel Response time for CORRECT answers\nIs the TRIANGULAR graph FASTER for correct answers? (i.e. computational efficiency)\n\n\nCODE\n#GET ONLY CORRECT ITEMS in TEST phase \ndf <- df_items %>% filter(q %nin% c(1,2,3,4,5)) %>% filter(score == 1)\n\ntable (df$pretty_condition)\n\n\n\n   control  text:what   text:how img:static    img:ixv \n       677        754        827        777        934 \n\n\nCODE\n# Box plots\n# ++++++++++++++++++++\nggplot( data = df, aes( x = pretty_condition, y = rt_sec, color = graph )) + \n  geom_boxplot(position = position_dodge()) \n\n\n\n\n\nCODE\n  # geom_point( alpha = 0.2, position = position_dodge(width = 2))\n\n\n## Does GRAPH predict rt_sec for correct items?\nm <- lmer( log(rt_sec) ~ graph + (1|q), data = df)\nsummary(m)\n\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: log(rt_sec) ~ graph + (1 | q)\n   Data: df\n\nREML criterion at convergence: 6398\n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-2.995 -0.716  0.030  0.670  4.072 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n q        (Intercept) 0.000729 0.027   \n Residual             0.292173 0.541   \nNumber of obs: 3969, groups:  q, 10\n\nFixed effects:\n                Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)     3.43e+00   1.45e-02 1.82e+01  237.00   <2e-16 ***\ngraphtriangular 6.45e-03   1.72e-02 3.96e+03    0.37     0.71    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr)\ngraphtrnglr -0.548\n\n\nCODE\ncar::Anova(m)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: log(rt_sec)\n      Chisq Df Pr(>Chisq)\ngraph  0.14  1       0.71\n\n\nCODE\nplot_model(m, type = \"pred\")\n\n\nModel has log-transformed response. Back-transforming predictions to original response scale. Standard errors are still on the log-scale.\n\n\n$graph\n\n\n\n\n\nA mixed log-linear model predicting response time by GRAPH for only CORRECT items in the test phase (i.e. without scaffolding text or images) indicates that there is not a significant difference between response times for linear and orthogonal graphs.\n\n\nModel Response time for by ACCURACY on TRIANGLE graph (Test Phase)\nAre correct answers FASTER than incorrect answers for the TRIANGULAR graph? (i.e. computational inefficiency of mental projection/transformation)\n\n\nCODE\n#GET ONLY CORRECT ITEMS in TEST phase \ndf <- df_items %>% filter(q %nin% c(1,2,3,4,5)) %>% filter(graph==\"triangular\")\n\ntable (df$pretty_condition)\n\n\n\n   control  text:what   text:how img:static    img:ixv \n       610        590        660        619        680 \n\n\nCODE\n# ++++++++++++++++++++\nggplot( data = df, aes( x = pretty_condition, y = rt_sec, color = score )) + \n  geom_boxplot(position = position_dodge()) \n\n\n\n\n\nCODE\n  # geom_point( alpha = 0.2, position = position_dodge(width = 2))\n\n\ngf_histogram(~log(rt_sec), data = df) %>% \n  gf_facet_grid(score ~ .)\n\n\n\n\n\nCODE\n## Does ACCURACY predict rt_sec for correct items?\nm <- lmer( log(rt_sec) ~ accuracy + (1|q), data = df)\nsummary(m)\n\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: log(rt_sec) ~ accuracy + (1 | q)\n   Data: df\n\nREML criterion at convergence: 5920\n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-4.929 -0.656  0.028  0.683  3.680 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n q        (Intercept) 0.00515  0.0718  \n Residual             0.37835  0.6151  \nNumber of obs: 3159, groups:  q, 10\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)    3.7155     0.0283   14.2947   131.3   <2e-16 ***\naccuracy1     -0.2773     0.0222 3149.8835   -12.5   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n          (Intr)\naccuracy1 -0.455\n\n\nCODE\ncar::Anova(m)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: log(rt_sec)\n         Chisq Df Pr(>Chisq)    \naccuracy   156  1     <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\nplot_model(m, type = \"pred\")\n\n\nModel has log-transformed response. Back-transforming predictions to original response scale. Standard errors are still on the log-scale.\n\n\n$accuracy\n\n\n\n\n\nA mixed log-linear model predicting response time by GRAPH for only CORRECT items in the test phase (i.e. without scaffolding text or images) indicates that there is not a significant difference between response times for linear and orthogonal graphs."
  },
  {
    "objectID": "analysis/SGC2/4_sgc2_hypotesting.html#h0-accuracy-full-model",
    "href": "analysis/SGC2/4_sgc2_hypotesting.html#h0-accuracy-full-model",
    "title": "3  Hypothesis Testing",
    "section": "H0 | ACCURACY FULL MODEL",
    "text": "H0 | ACCURACY FULL MODEL\nFull model (with specific interactions; full model with 4 way interaction does not converge). Don’t move forward with this strategy, as it is too convoluted to explain.\n\nSetup\n\n\nCODE\n#FILTER THE DATASET\n\ndf_s <- df_subjects \n\ndf_long <- df_s %>% dplyr::select(subject,pretty_condition,order,lm_scenarios,tm_scenarios,linear_score, triangular_score) %>% pivot_longer(\n  cols = ends_with(\"score\"),\n  names_to = \"graph\",\n  values_to = \"score\"\n)\n\ndf_i <- df_items %>% #filter(q %nin% c(3)) %>%  #3 is nondiscrim\n mutate(\n   order = fct_rev(order)\n )\n\n#check factors\nis.factor(df_i$subject) & is.factor(df_i$pretty_condition) &\n  is.factor(df_i$q) & is.factor(df_i$order) & is.factor(df_i$scenario)\n\n\n[1] TRUE\n\n\nCODE\ntable(df_subjects$pretty_condition)\n\n\n\n   control  text:what   text:how img:static    img:ixv \n        61         59         66         62         68 \n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy by Block (CONTROL Condition)\"\nabs.stats <- rbind(\n  \"linear.block\"= df_s %>% dplyr::select(linear_score) %>% unlist() %>% favstats(),\n  \"triangular.block\" = df_s %>% dplyr::select(triangular_score) %>% unlist() %>% favstats(),\n  \"block.differences\" = df_s %>% dplyr::select(score_diff) %>% unlist() %>% favstats()\n)\n\nabs.stats %>% kbl (caption = title) %>% kable_classic() %>%\n  footnote(general = \"block # questions correct [0,15]; DIFF = triangular - linear\",\n           general_title = \"Note: \",footnote_as_chunk = T)\n\n\n\nDescriptive Statistics of Response Accuracy by Block (CONTROL Condition)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    linear.block \n    2 \n    10 \n    11 \n    13 \n    15 \n    10.95 \n    2.13 \n    316 \n    0 \n  \n  \n    triangular.block \n    0 \n    5 \n    10 \n    12 \n    15 \n    8.77 \n    4.45 \n    316 \n    0 \n  \n  \n    block.differences \n    -13 \n    -5 \n    -1 \n    1 \n    5 \n    -2.18 \n    4.11 \n    316 \n    0 \n  \n\n\nNote:   block # questions correct [0,15]; DIFF = triangular - linear\n\n\n\n\nFor participants in the CONTROL condition, total absolute scores for the LINEAR graph (n = 316) range from 2 to 15 with a mean score of (M = 10.95, SD = 2.13).\nFor participants in the CONTROL condition, total absolute scores for the TRIANGULAR graph (n = 316) range from 0 to 15 with a mean score of (M = 8.77, SD = 4.45).\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(order~graph) + \n   labs(title = \"Accuracy by GRAPH, CONDITION and ORDER\",\n       x = \"Condition\",\n       subtitle=\"Accuracy appears to differ only on the triangular graph.\")\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(scenario ~ graph) + \n   labs(title = \"Accuracy by GRAPH, CONDITION and SCENARIO\",\n       x = \"Condition\",\n       subtitle=\"Triangular accuracy appears to differ by scenario\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = score)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_grid( graph ~ q) +\n   labs(title = \"Accuracy by GRAPH and QUESTION\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n# ##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = linear_score,\n                        fill = pretty_condition) ) +\n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1,\n    point_colour = NA\n   ) +\n  geom_boxplot(\n    inherit.aes = TRUE, #supress fill\n    # mapping = aes(x=pretty_condition, y = score),\n    width = .15,\n    outlier.shape = NA\n  ) +\n  geom_point(\n    inherit.aes = TRUE, #supress fill\n    # mapping = aes(x=graph, y = score, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter(\n      seed = 1, width = .05\n  )) + labs(\n    title = \"Distribution of scores on LINEAR graph\",\n    x = \"Condition\", y = \"Score (# correct)\") +\n  theme(legend.position = \"blank\") +\n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\nCODE\nggplot(df_subjects, aes(x = pretty_condition, y = triangular_score,\n                        fill = pretty_condition) ) +\n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1,\n    point_colour = NA\n   ) +\n  geom_boxplot(\n    inherit.aes = TRUE, #supress fill\n    # mapping = aes(x=pretty_condition, y = score),\n    width = .15,\n    outlier.shape = NA\n  ) +\n  geom_point(\n    inherit.aes = TRUE, #supress fill\n    # mapping = aes(x=graph, y = score, color = graph),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter(\n      seed = 1, width = .05\n  )) + labs(\n    title = \"Distribution of scores on TRIANGULAR graph\",\n    x = \"Condition\", y = \"Score (# correct)\") +\n  theme(legend.position = \"blank\") +\n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n\n\n\n\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  facet_grid(order ~ scenario ~ graph) + \n  scale_fill_brewer(palette = \"Set1\")  +\n   labs(title = \"ACCURACY by Condition, GRAPH SCENARIO and ORDER\",\n       x = \"Condition\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nMAYBE USE THIS GRAPH\n\n\nCODE\n#PLOT PAIRED DATA\ngrouped_ggwithinstats(\n  grouping.var = pretty_condition,\n  data = df_long,\n  x    = graph,\n  y    = score, \n  type  = \"nonparametric\", #parametric, robust, bayes\n  annotation.args = list(title = \"Effect of Condition\"),\n)\n\n\n\n\n\n\nMIXED EFFECTS LOGISTIC REGRESSION\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s)  #28; removed nondiscrim Q3\n\n\n[1] 30\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$graph) && is.factor(df_i$score) && is.factor(df_i$order) && is.factor(df_i$scenario)\n\n\n[1] TRUE\n\n\nCODE\n## 1 | SETUP RANDOM INTERCEPT SUBJECT\n\n\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\")\n#summary(mm.rSQ)\n\n## 2 | ADD FIXED EFFECT GRAPH\n\nprint(\"FIXED GRAPH + Subject & Item random intercepts\")\n\n\n[1] \"FIXED GRAPH + Subject & Item random intercepts\"\n\n\nCODE\nmm.GrSQ <- glmer(accuracy ~ graph + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\")\n# car::Anova(mm.GrSQ) #main effect graph\ntest_lrt(mm.rSQ,mm.GrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |   Chi2 |      p\n---------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |        |       \nmm.GrSQ | glmerMod |  4 |       1 | 260.43 | < .001\n\n\nCODE\n#adding GRAPH improves fit \n\n## 2 | ADD FIXED EFFECT CONDITION\n\nprint(\"IXN GRAPH* Condition + Subject & Item random intercepts\")\n\n\n[1] \"IXN GRAPH* Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.GCrSQ <- glmer(accuracy ~ graph*pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\", \n                control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n#car::Anova(mm.GCrSQ) #main effects graph + IXN graph*condition\n\ntest_lrt(mm.rSQ,mm.GCrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName     |    Model | df | df_diff |   Chi2 |      p\n----------------------------------------------------\nmm.rSQ   | glmerMod |  3 |         |        |       \nmm.GCrSQ | glmerMod | 12 |       9 | 348.04 | < .001\n\n\nCODE\n#adding condition improves fit\n\n# 2 | ADD IXN ORDER\nprint(\"FIXED Graph + ORDER + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Graph + ORDER + Subject & Item random intercepts\"\n\n\nCODE\nmm.GC.COrSQ <- glmer(accuracy ~ graph*pretty_condition + graph*order + (1|subject) + (1|q),\n                   data = df_i, family = \"binomial\", \n                   control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n# summary(mm.GC.COrSQ)\n#car::Anova(mm.GC.COrSQ, type = 3) #IXN graphX condition, GRAPH*order\ntest_lrt(mm.GCrSQ,mm.GC.COrSQ) \n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName        |    Model | df | df_diff |  Chi2 |     p\n-----------------------------------------------------\nmm.GCrSQ    | glmerMod | 12 |         |       |      \nmm.GC.COrSQ | glmerMod | 14 |       2 | 11.28 | 0.004\n\n\nCODE\n# 3 | ADD FIXED EFFECT SCENARIO\nprint(\"FIXED Graph * SCENARIO * ORDER + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Graph * SCENARIO * ORDER + Subject & Item random intercepts\"\n\n\nCODE\nmm.GC.CO.GSrSQ <- glmer(accuracy ~ graph*pretty_condition + graph*order + graph*scenario +  (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\",\n                control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n#summary(mm.GC.CO.GSrSQ)\n#car::Anova(mm.GC.CO.GSrSQ, type = 3) #IXN graphXscenario, graphXorder, graphXcondition, \ntest_lrt(mm.GC.COrSQ,mm.GC.CO.GSrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName           |    Model | df | df_diff |  Chi2 |      p\n---------------------------------------------------------\nmm.GC.COrSQ    | glmerMod | 14 |         |       |       \nmm.GC.CO.GSrSQ | glmerMod | 16 |       2 | 92.63 | < .001\n\n\nCODE\nsimple <- glmer(accuracy ~ graph+pretty_condition +order + scenario +  (1|subject) + (1|q) ,\n                data = df_i, family = \"binomial\",\n                control=glmerControl(optimizer=\"bobyqa\",\n                                 optCtrl=list(maxfun=2e5)))\n\n\n##full model won't converge, try to run again later\n# full <- glmer(accuracy ~ graph*pretty_condition*order*scenario +  (1|subject) + (1|q) ,\n#                 data = df_i, family = \"binomial\" )\n# # ,\n#                 control=glmerControl(optimizer=\"bobyqa\",\n#                                  optCtrl=list(maxfun=2e5)))\n\n\npaste(\"ideal model better than simple model?\")\n\n\n[1] \"ideal model better than simple model?\"\n\n\nCODE\ntest_lrt(simple, mm.GC.CO.GSrSQ)\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName           |    Model | df | df_diff |   Chi2 |      p\n----------------------------------------------------------\nsimple         | glmerMod | 10 |         |        |       \nmm.GC.CO.GSrSQ | glmerMod | 16 |       6 | 112.79 | < .001\n\n\nCODE\npaste(\"performance\")\n\n\n[1] \"performance\"\n\n\nCODE\nperformance(m)\n\n\nCan't calculate log-loss.\nCan't calculate proper scoring rules for ordinal, multinomial or cumulative link models.\n\n\n# Indices of model performance\n\nAIC     |     BIC |    R2 | R2 (adj.) |  RMSE | Sigma\n-----------------------------------------------------\n564.126 | 639.241 | 0.071 |     0.067 | 0.291 | 1.331\n\n\nTo test our experimental hypotheses, we fit a series of logistic mixed effects models predicting question-level accuracy (correct, incorrect) The best fitting model included interactions for graph X condition, graph X order, and graph X scenario, and likelihood ratio tests indicate this is a significantly better fit than a model including only main effects (\\(chi^2(10,16) = 112.79, p < 0.001\\)), or a more complex model with an interaction between all fixed factors TODO (\\(chi^2(22,9) = 11.87, p = 0.539\\))\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.GC.CO.GSrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ graph * pretty_condition + graph * order + graph *  \n    scenario + (1 | subject) + (1 | q)\n   Data: df_i\nControl: glmerControl(optimizer = \"bobyqa\", optCtrl = list(maxfun = 200000))\n\n     AIC      BIC   logLik deviance df.resid \n   10939    11053    -5453    10907     9463 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-4.321 -0.763  0.439  0.650  2.396 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 0.6608   0.813   \n q       (Intercept) 0.0978   0.313   \nNumber of obs: 9479, groups:  subject, 316; q, 15\n\nFixed effects:\n                                           Estimate Std. Error z value Pr(>|z|)\n(Intercept)                                  1.1580     0.1754    6.60  4.1e-11\ngraphtriangular                             -1.6730     0.1598  -10.47  < 2e-16\npretty_conditiontext:what                    0.0346     0.1885    0.18  0.85434\npretty_conditiontext:how                    -0.0141     0.1830   -0.08  0.93862\npretty_conditionimg:static                  -0.0170     0.1856   -0.09  0.92688\npretty_conditionimg:ixv                     -0.0626     0.1809   -0.35  0.72932\norderTM-First                                0.0793     0.1159    0.68  0.49397\nscenariolongmire                            -0.0606     0.1165   -0.52  0.60277\ngraphtriangular:pretty_conditiontext:what    0.6575     0.1566    4.20  2.7e-05\ngraphtriangular:pretty_conditiontext:how     0.5989     0.1519    3.94  8.1e-05\ngraphtriangular:pretty_conditionimg:static   0.5777     0.1540    3.75  0.00018\ngraphtriangular:pretty_conditionimg:ixv      1.3701     0.1519    9.02  < 2e-16\ngraphtriangular:orderTM-First               -0.3077     0.0965   -3.19  0.00142\ngraphtriangular:scenariolongmire             0.9396     0.2090    4.50  6.9e-06\n                                              \n(Intercept)                                ***\ngraphtriangular                            ***\npretty_conditiontext:what                     \npretty_conditiontext:how                      \npretty_conditionimg:static                    \npretty_conditionimg:ixv                       \norderTM-First                                 \nscenariolongmire                              \ngraphtriangular:pretty_conditiontext:what  ***\ngraphtriangular:pretty_conditiontext:how   ***\ngraphtriangular:pretty_conditionimg:static ***\ngraphtriangular:pretty_conditionimg:ixv    ***\ngraphtriangular:orderTM-First              ** \ngraphtriangular:scenariolongmire           ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nCorrelation matrix not shown by default, as p = 14 > 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type=3) #TYPE 3 SS FOR IXNS\n\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: accuracy\n                        Chisq Df Pr(>Chisq)    \n(Intercept)             43.59  1    4.1e-11 ***\ngraph                  109.66  1    < 2e-16 ***\npretty_condition         0.30  4     0.9900    \norder                    0.47  1     0.4940    \nscenario                 0.27  1     0.6028    \ngraph:pretty_condition  82.72  4    < 2e-16 ***\ngraph:order             10.18  1     0.0014 ** \ngraph:scenario          20.22  1    6.9e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 16 × 9\n   effect  group term  estimate std.error statistic   p.value conf.low conf.high\n   <chr>   <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 fixed   <NA>  (Int…   1.16      0.175     6.60    4.06e-11    0.814     1.50 \n 2 fixed   <NA>  grap…  -1.67      0.160   -10.5     1.16e-25   -1.99     -1.36 \n 3 fixed   <NA>  pret…   0.0346    0.189     0.184   8.54e- 1   -0.335     0.404\n 4 fixed   <NA>  pret…  -0.0141    0.183    -0.0770  9.39e- 1   -0.373     0.345\n 5 fixed   <NA>  pret…  -0.0170    0.186    -0.0918  9.27e- 1   -0.381     0.347\n 6 fixed   <NA>  pret…  -0.0626    0.181    -0.346   7.29e- 1   -0.417     0.292\n 7 fixed   <NA>  orde…   0.0793    0.116     0.684   4.94e- 1   -0.148     0.306\n 8 fixed   <NA>  scen…  -0.0606    0.116    -0.520   6.03e- 1   -0.289     0.168\n 9 fixed   <NA>  grap…   0.657     0.157     4.20    2.69e- 5    0.351     0.964\n10 fixed   <NA>  grap…   0.599     0.152     3.94    8.07e- 5    0.301     0.897\n11 fixed   <NA>  grap…   0.578     0.154     3.75    1.76e- 4    0.276     0.880\n12 fixed   <NA>  grap…   1.37      0.152     9.02    1.92e-19    1.07      1.67 \n13 fixed   <NA>  grap…  -0.308     0.0965   -3.19    1.42e- 3   -0.497    -0.119\n14 fixed   <NA>  grap…   0.940     0.209     4.50    6.91e- 6    0.530     1.35 \n15 ran_pa… subj… sd__…   0.813    NA        NA      NA          NA        NA    \n16 ran_pa… q     sd__…   0.313    NA        NA      NA          NA        NA    \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 16 × 9\n   effect  group term  estimate std.error statistic   p.value conf.low conf.high\n   <chr>   <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n 1 fixed   <NA>  (Int…    3.18     0.558     6.60    4.06e-11    2.26      4.49 \n 2 fixed   <NA>  grap…    0.188    0.0300  -10.5     1.16e-25    0.137     0.257\n 3 fixed   <NA>  pret…    1.04     0.195     0.184   8.54e- 1    0.715     1.50 \n 4 fixed   <NA>  pret…    0.986    0.180    -0.0770  9.39e- 1    0.689     1.41 \n 5 fixed   <NA>  pret…    0.983    0.182    -0.0918  9.27e- 1    0.683     1.41 \n 6 fixed   <NA>  pret…    0.939    0.170    -0.346   7.29e- 1    0.659     1.34 \n 7 fixed   <NA>  orde…    1.08     0.125     0.684   4.94e- 1    0.863     1.36 \n 8 fixed   <NA>  scen…    0.941    0.110    -0.520   6.03e- 1    0.749     1.18 \n 9 fixed   <NA>  grap…    1.93     0.302     4.20    2.69e- 5    1.42      2.62 \n10 fixed   <NA>  grap…    1.82     0.276     3.94    8.07e- 5    1.35      2.45 \n11 fixed   <NA>  grap…    1.78     0.274     3.75    1.76e- 4    1.32      2.41 \n12 fixed   <NA>  grap…    3.94     0.598     9.02    1.92e-19    2.92      5.30 \n13 fixed   <NA>  grap…    0.735    0.0709   -3.19    1.42e- 3    0.608     0.888\n14 fixed   <NA>  grap…    2.56     0.535     4.50    6.91e- 6    1.70      3.85 \n15 ran_pa… subj… sd__…    0.813   NA        NA      NA          NA        NA    \n16 ran_pa… q     sd__…    0.313   NA        NA      NA          NA        NA    \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM merTools\n#setup empty df \nnewdata <- df_i %>% dplyr::select(graph, pretty_condition, order, scenario, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning in predictInterval(m, newdata = newdata, which = \"fixed\", type = \"probability\", : newdata is tbl_df or tbl object from dplyr package and has been\n              coerced to a data.frame\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(graph, pretty_condition, scenario, order, fit, lwr, upr) %>% \n  group_by(graph, pretty_condition, scenario, order) %>% \n  dplyr::summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 40 × 7\n# Groups:   graph, pretty_condition, scenario [20]\n   graph  pretty_condition scenario order    median lower upper\n   <fct>  <fct>            <fct>    <fct>     <dbl> <dbl> <dbl>\n 1 linear control          axis     LM-First  0.763 0.469 0.922\n 2 linear control          axis     TM-First  0.776 0.485 0.927\n 3 linear control          longmire LM-First  0.751 0.452 0.917\n 4 linear control          longmire TM-First  0.765 0.471 0.922\n 5 linear text:what        axis     LM-First  0.768 0.472 0.924\n 6 linear text:what        axis     TM-First  0.781 0.493 0.929\n 7 linear text:what        longmire LM-First  0.756 0.457 0.919\n 8 linear text:what        longmire TM-First  0.769 0.477 0.925\n 9 linear text:how         axis     LM-First  0.761 0.462 0.921\n10 linear text:how         axis     TM-First  0.774 0.483 0.926\n# … with 30 more rows\n\n\n\n\nPOSTHOCS\n\n\nCODE\nlibrary(emmeans)\n\n##POST-HOC COMPARISONS\nprint(\"POSTHOC COMPARISONS :: GRAPH X CONDITION\")\n\n\n[1] \"POSTHOC COMPARISONS :: GRAPH X CONDITION\"\n\n\nCODE\nemmeans(m,  pairwise ~ graph*pretty_condition, \n        type = \"response\" , adjust = \"tukey\") #sidak, tukey\n\n\n$emmeans\n graph      pretty_condition  prob     SE  df asymp.LCL asymp.UCL\n linear     control          0.763 0.0280 Inf     0.704     0.813\n triangular control          0.453 0.0374 Inf     0.381     0.526\n linear     text:what        0.769 0.0280 Inf     0.710     0.819\n triangular text:what        0.623 0.0361 Inf     0.550     0.691\n linear     text:how         0.760 0.0275 Inf     0.702     0.810\n triangular text:how         0.597 0.0354 Inf     0.527     0.665\n linear     img:static       0.760 0.0281 Inf     0.700     0.810\n triangular img:static       0.592 0.0364 Inf     0.519     0.661\n linear     img:ixv          0.751 0.0277 Inf     0.693     0.801\n triangular img:ixv          0.754 0.0275 Inf     0.696     0.804\n\nResults are averaged over the levels of: order, scenario \nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast                                     odds.ratio    SE  df null z.ratio\n linear control / triangular control                3.88 0.426 Inf    1  12.370\n linear control / linear text:what                  0.97 0.182 Inf    1  -0.180\n linear control / triangular text:what              1.94 0.361 Inf    1   3.580\n linear control / linear text:how                   1.01 0.186 Inf    1   0.080\n linear control / triangular text:how               2.16 0.390 Inf    1   4.280\n linear control / linear img:static                 1.02 0.189 Inf    1   0.090\n linear control / triangular img:static             2.22 0.406 Inf    1   4.350\n linear control / linear img:ixv                    1.06 0.193 Inf    1   0.350\n linear control / triangular img:ixv                1.05 0.190 Inf    1   0.270\n triangular control / linear text:what              0.25 0.046 Inf    1  -7.490\n triangular control / triangular text:what          0.50 0.091 Inf    1  -3.790\n triangular control / linear text:how               0.26 0.047 Inf    1  -7.450\n triangular control / triangular text:how           0.56 0.099 Inf    1  -3.300\n triangular control / linear img:static             0.26 0.048 Inf    1  -7.330\n triangular control / triangular img:static         0.57 0.103 Inf    1  -3.110\n triangular control / linear img:ixv                0.27 0.049 Inf    1  -7.270\n triangular control / triangular img:ixv            0.27 0.048 Inf    1  -7.330\n linear text:what / triangular text:what            2.01 0.225 Inf    1   6.260\n linear text:what / linear text:how                 1.05 0.195 Inf    1   0.260\n linear text:what / triangular text:how             2.24 0.409 Inf    1   4.420\n linear text:what / linear img:static               1.05 0.198 Inf    1   0.280\n linear text:what / triangular img:static           2.30 0.425 Inf    1   4.480\n linear text:what / linear img:ixv                  1.10 0.201 Inf    1   0.530\n linear text:what / triangular img:ixv              1.09 0.199 Inf    1   0.460\n triangular text:what / linear text:how             0.52 0.095 Inf    1  -3.570\n triangular text:what / triangular text:how         1.11 0.200 Inf    1   0.600\n triangular text:what / linear img:static           0.52 0.097 Inf    1  -3.510\n triangular text:what / triangular img:static       1.14 0.208 Inf    1   0.720\n triangular text:what / linear img:ixv              0.55 0.098 Inf    1  -3.350\n triangular text:what / triangular img:ixv          0.54 0.097 Inf    1  -3.430\n linear text:how / triangular text:how              2.13 0.225 Inf    1   7.180\n linear text:how / linear img:static                1.00 0.183 Inf    1   0.020\n linear text:how / triangular img:static            2.19 0.393 Inf    1   4.350\n linear text:how / linear img:ixv                   1.05 0.186 Inf    1   0.270\n linear text:how / triangular img:ixv               1.04 0.184 Inf    1   0.200\n triangular text:how / linear img:static            0.47 0.084 Inf    1  -4.200\n triangular text:how / triangular img:static        1.02 0.181 Inf    1   0.140\n triangular text:how / linear img:ixv               0.49 0.086 Inf    1  -4.060\n triangular text:how / triangular img:ixv           0.49 0.085 Inf    1  -4.130\n linear img:static / triangular img:static          2.18 0.236 Inf    1   7.190\n linear img:static / linear img:ixv                 1.05 0.188 Inf    1   0.250\n linear img:static / triangular img:ixv             1.03 0.186 Inf    1   0.180\n triangular img:static / linear img:ixv             0.48 0.085 Inf    1  -4.130\n triangular img:static / triangular img:ixv         0.47 0.084 Inf    1  -4.210\n linear img:ixv / triangular img:ixv                0.99 0.104 Inf    1  -0.120\n p.value\n  <.0001\n  1.0000\n  0.0130\n  1.0000\n  0.0010\n  1.0000\n  0.0010\n  1.0000\n  1.0000\n  <.0001\n  0.0060\n  <.0001\n  0.0330\n  <.0001\n  0.0580\n  <.0001\n  <.0001\n  <.0001\n  1.0000\n  <.0001\n  1.0000\n  <.0001\n  1.0000\n  1.0000\n  0.0130\n  1.0000\n  0.0160\n  0.9990\n  0.0280\n  0.0210\n  <.0001\n  1.0000\n  0.0010\n  1.0000\n  1.0000\n  0.0010\n  1.0000\n  0.0020\n  0.0010\n  <.0001\n  1.0000\n  1.0000\n  0.0010\n  0.0010\n  1.0000\n\nResults are averaged over the levels of: order, scenario \nP value adjustment: tukey method for comparing a family of 10 estimates \nTests are performed on the log odds ratio scale \n\n\nCODE\nprint(\"POSTHOC COMPARISONS :: GRAPH X ORDER\")\n\n\n[1] \"POSTHOC COMPARISONS :: GRAPH X ORDER\"\n\n\nCODE\nemmeans(m,  pairwise ~ graph*order, \n        type = \"response\" , adjust = \"tukey\") #sidak, tukey\n\n\n$emmeans\n graph      order     prob     SE  df asymp.LCL asymp.UCL\n linear     LM-First 0.753 0.0215 Inf     0.709     0.793\n triangular LM-First 0.635 0.0266 Inf     0.581     0.685\n linear     TM-First 0.768 0.0205 Inf     0.725     0.805\n triangular TM-First 0.581 0.0275 Inf     0.526     0.633\n\nResults are averaged over the levels of: pretty_condition, scenario \nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast                                      odds.ratio     SE  df null\n (linear LM-First) / (triangular LM-First)          1.755 0.1211 Inf    1\n (linear LM-First) / (linear TM-First)              0.924 0.1070 Inf    1\n (linear LM-First) / (triangular TM-First)          2.205 0.2520 Inf    1\n (triangular LM-First) / (linear TM-First)          0.526 0.0605 Inf    1\n (triangular LM-First) / (triangular TM-First)      1.257 0.1421 Inf    1\n (linear TM-First) / (triangular TM-First)          2.387 0.1622 Inf    1\n z.ratio p.value\n   8.150  <.0001\n  -0.680  0.9030\n   6.920  <.0001\n  -5.580  <.0001\n   2.020  0.1800\n  12.800  <.0001\n\nResults are averaged over the levels of: pretty_condition, scenario \nP value adjustment: tukey method for comparing a family of 4 estimates \nTests are performed on the log odds ratio scale \n\n\nCODE\n#POST HOC COMPARING TM graph with lm vs tm first order is NOT significant\n\n\nprint(\"POSTHOC COMPARISONS :: GRAPH X SCENARIO\")\n\n\n[1] \"POSTHOC COMPARISONS :: GRAPH X SCENARIO\"\n\n\nCODE\nemmeans(m,  pairwise ~ graph*scenario, \n        type = \"response\" , adjust = \"tukey\") #sidak, tukey\n\n\n$emmeans\n graph      scenario  prob     SE  df asymp.LCL asymp.UCL\n linear     axis     0.766 0.0211 Inf     0.722     0.805\n triangular axis     0.500 0.0278 Inf     0.446     0.554\n linear     longmire 0.755 0.0209 Inf     0.712     0.794\n triangular longmire 0.707 0.0242 Inf     0.657     0.752\n\nResults are averaged over the levels of: pretty_condition, order \nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast                              odds.ratio    SE  df null z.ratio\n linear axis / triangular axis               3.27 0.377 Inf    1  10.310\n linear axis / linear longmire               1.06 0.124 Inf    1   0.520\n linear axis / triangular longmire           1.36 0.098 Inf    1   4.260\n triangular axis / linear longmire           0.32 0.021 Inf    1 -17.180\n triangular axis / triangular longmire       0.42 0.047 Inf    1  -7.700\n linear longmire / triangular longmire       1.28 0.148 Inf    1   2.130\n p.value\n  <.0001\n  0.9540\n  <.0001\n  <.0001\n  <.0001\n  0.1420\n\nResults are averaged over the levels of: pretty_condition, order \nP value adjustment: tukey method for comparing a family of 4 estimates \nTests are performed on the log odds ratio scale \n\n\nCODE\n#POST HOC COMPARING TM graph with lm vs tm first order is NOT significant\n\n\n##PLOT PROBABILITY\n# plot(ref_grid(m), by = \"pretty_condition\", type = \"response\")\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.90 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\")\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\n# result <- model_parameters(m, exponentiate = TRUE, component = \"all\")\n# plot(result)\n\n\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\np <- plot_model(m, type=\"int\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\")\np[[1]] + p[[2]] + p[[3]]\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\n# plot_model(m, type = \"pred\")\n# plot_model(m, type = \"eff\")\n  # ylim(0,1) + \n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nCODE\n#SJPLOT | MODEL | TABLE\ntab_model(m)\n\n\n\n\n \naccuracy\n\n\nPredictors\nOdds Ratios\nCI\np\n\n\n(Intercept)\n3.18\n2.26 – 4.49\n<0.001\n\n\ngraph [triangular]\n0.19\n0.14 – 0.26\n<0.001\n\n\npretty conditiontext *what\n1.04\n0.72 – 1.50\n0.854\n\n\npretty conditiontext *how\n0.99\n0.69 – 1.41\n0.939\n\n\npretty conditionimg *static\n0.98\n0.68 – 1.41\n0.927\n\n\npretty conditionimg * ixv\n0.94\n0.66 – 1.34\n0.729\n\n\norder [TM-First]\n1.08\n0.86 – 1.36\n0.494\n\n\nscenario [longmire]\n0.94\n0.75 – 1.18\n0.603\n\n\ngraph [triangular] *pretty conditiontext *what\n1.93\n1.42 – 2.62\n<0.001\n\n\ngraph [triangular] *pretty conditiontext *how\n1.82\n1.35 – 2.45\n<0.001\n\n\ngraph [triangular] *pretty conditionimg *static\n1.78\n1.32 – 2.41\n<0.001\n\n\ngraph [triangular] *pretty conditionimg * ixv\n3.94\n2.92 – 5.30\n<0.001\n\n\ngraph [triangular] *order [TM-First]\n0.74\n0.61 – 0.89\n0.001\n\n\ngraph [triangular] *scenario [longmire]\n2.56\n1.70 – 3.85\n<0.001\n\n\nRandom Effects\n\n\n\nσ2\n3.29\n\n\n\nτ00 subject\n0.66\n\n\nτ00 q\n0.10\n\n\nICC\n0.19\n\n\nN subject\n316\n\n\nN q\n15\n\nObservations\n9479\n\n\nMarginal R2 / Conditional R2\n0.073 / 0.246\n\n\n\n\n\n\nCODE\n# #MODEL SUMMARY | save latex table\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# notes = list('\"* p < 0.05, ** p < 0.01, *** p < 0.001\"',\n#                'N(subject) = 133 $\\tau_{00}$(subject) = 34.85',\n#              'N(question) = 13 $\\tau_{00}$(question) = 1.14')\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditionimpasse\" = \"Condition[impasse]\"),\n#              title = 'Accuracy ~ Condition (Mixed Logistic Regression)',\n#              notes = notes,\n#              output = \"analysis/SGC3A/models/tables/GLMER_OverallAccuracy_online.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n\n\n\nDiagnostics\n\n\nCODE\n# print(\"SANITY CHECK REPORTING\")\n# report(m)\n\n# print(\"MODEL PERFORMANCE\")\n# performance(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)"
  },
  {
    "objectID": "analysis/SGC4A/2_sgc4A_scoring.html",
    "href": "analysis/SGC4A/2_sgc4A_scoring.html",
    "title": "14  Response Scoring",
    "section": "",
    "text": "TODO\nThe purpose of this notebook is to score (assign a measure of accuracy) to response data for the SGC4A study. This is required because the question type on the graph comprehension task used a ‘Multiple Response’ (MR) question design. Here, we evaluate different approaches to scoring multiple response questions, and transform raw item responses (e.g. boxes ABC are checked) to a measure of response accuracy. (Warning: this notebook takes several minutes to execute.) To review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3."
  },
  {
    "objectID": "analysis/SGC4A/2_sgc4A_scoring.html#resources",
    "href": "analysis/SGC4A/2_sgc4A_scoring.html#resources",
    "title": "14  Response Scoring",
    "section": "RESOURCES",
    "text": "RESOURCES\nset operations\nhttps://stat.ethz.ch/R-manual/R-devel/library/base/html/sets.html\nkableExtra tables\nhttps://haozhu233.github.io/kableExtra/awesome_table_in_html.html#grouped_columns__rows\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] forcats_0.5.1          stringr_1.4.0          dplyr_1.0.9           \n [4] purrr_0.3.4            readr_2.1.2            tidyr_1.2.0           \n [7] tibble_3.1.7           tidyverse_1.3.1        tidyfst_1.6.5         \n[10] statsExpressions_1.3.2 ggstatsplot_0.9.3      Hmisc_4.7-0           \n[13] Formula_1.2-4          survival_3.3-1         lattice_0.20-45       \n[16] pbapply_1.5-0          ggformula_0.10.1       ggridges_0.5.3        \n[19] scales_1.2.0           ggstance_0.3.5         ggplot2_3.3.6         \n[22] kableExtra_1.3.4      \n\nloaded via a namespace (and not attached):\n  [1] readxl_1.4.0           backports_1.4.1        systemfonts_1.0.4     \n  [4] plyr_1.8.7             splines_4.2.1          gmp_0.6-5             \n  [7] kSamples_1.2-9         TH.data_1.1-1          SuppDists_1.1-9.7     \n [10] digest_0.6.29          htmltools_0.5.2        fansi_1.0.3           \n [13] magrittr_2.0.3         checkmate_2.1.0        memoise_2.0.1         \n [16] paletteer_1.4.0        cluster_2.1.3          openxlsx_4.2.5        \n [19] tzdb_0.3.0             mosaicCore_0.9.0       modelr_0.1.8          \n [22] vroom_1.5.7            sandwich_3.0-2         svglite_2.1.0         \n [25] jpeg_0.1-9             colorspace_2.0-3       rvest_1.0.2           \n [28] ggrepel_0.9.1          haven_2.5.0            xfun_0.31             \n [31] crayon_1.5.1           prismatic_1.1.0        jsonlite_1.8.0        \n [34] zeallot_0.1.0          zoo_1.8-10             glue_1.6.2            \n [37] polyclip_1.10-0        gtable_0.3.0           emmeans_1.7.5         \n [40] webshot_0.5.3          MatrixModels_0.5-0     Rmpfr_0.8-9           \n [43] mvtnorm_1.1-3          DBI_1.1.3              PMCMRplus_1.9.5       \n [46] Rcpp_1.0.8.3           viridisLite_0.4.0      xtable_1.8-4          \n [49] performance_0.9.1      htmlTable_2.4.0        foreign_0.8-82        \n [52] bit_4.0.4              datawizard_0.5.1       htmlwidgets_1.5.4     \n [55] httr_1.4.3             fstcore_0.9.12         RColorBrewer_1.1-3    \n [58] ellipsis_0.3.2         pkgconfig_2.0.3        farver_2.1.0          \n [61] multcompView_0.1-8     nnet_7.3-17            dbplyr_2.2.1          \n [64] utf8_1.2.2             tidyselect_1.1.2       labeling_0.4.2        \n [67] rlang_1.0.3            effectsize_0.7.0       munsell_0.5.0         \n [70] cellranger_1.1.0       tools_4.2.1            cachem_1.0.6          \n [73] cli_3.3.0              generics_0.1.2         broom_0.8.0           \n [76] evaluate_0.15          fastmap_1.1.0          BWStest_0.2.2         \n [79] yaml_2.3.5             rematch2_2.1.2         knitr_1.39            \n [82] bit64_4.0.5            fs_1.5.2               zip_2.2.0             \n [85] xml2_1.3.3             correlation_0.8.1      compiler_4.2.1        \n [88] rstudioapi_0.13        curl_4.3.2             png_0.1-7             \n [91] reprex_2.0.1           tweenr_1.0.2           stringi_1.7.6         \n [94] highr_0.9              parameters_0.18.1      Matrix_1.4-1          \n [97] vctrs_0.4.1            pillar_1.7.0           lifecycle_1.0.1       \n[100] estimability_1.4       data.table_1.14.2      insight_0.18.2        \n[103] patchwork_1.1.1        R6_2.5.1               latticeExtra_0.6-29   \n[106] rio_0.5.29             gridExtra_2.3          BayesFactor_0.9.12-4.4\n[109] codetools_0.2-18       boot_1.3-28            MASS_7.3-57           \n[112] assertthat_0.2.1       withr_2.5.0            multcomp_1.4-19       \n[115] bayestestR_0.12.1      parallel_4.2.1         hms_1.1.1             \n[118] fst_0.9.8              grid_4.2.1             rpart_4.1.16          \n[121] labelled_2.9.1         coda_0.19-4            rmarkdown_2.14        \n[124] ggforce_0.3.3          lubridate_1.8.0        base64enc_0.1-3"
  },
  {
    "objectID": "analysis/SGC4B/2_sgc4B_scoring.html",
    "href": "analysis/SGC4B/2_sgc4B_scoring.html",
    "title": "17  Response Scoring",
    "section": "",
    "text": "TODO\nThe purpose of this notebook is to score (assign a measure of accuracy) to response data for the SGC4B study. This is required because the question type on the graph comprehension task used a ‘Multiple Response’ (MR) question design. Here, we evaluate different approaches to scoring multiple response questions, and transform raw item responses (e.g. boxes ABC are checked) to a measure of response accuracy. (Warning: this notebook takes several minutes to execute.) To review the strategy behind Multiple Response scoring for the SGC project, refer to section Section 3."
  },
  {
    "objectID": "analysis/SGC4B/2_sgc4B_scoring.html#peek",
    "href": "analysis/SGC4B/2_sgc4B_scoring.html#peek",
    "title": "17  Response Scoring",
    "section": "PEEK",
    "text": "PEEK\n\n\nCODE\nggbetweenstats( data = df_subjects,\n                x = pretty_condition, y = s_NABS, \n                type = \"non-parametric\")"
  },
  {
    "objectID": "analysis/SGC4B/2_sgc4B_scoring.html#resources",
    "href": "analysis/SGC4B/2_sgc4B_scoring.html#resources",
    "title": "17  Response Scoring",
    "section": "RESOURCES",
    "text": "RESOURCES\nset operations\nhttps://stat.ethz.ch/R-manual/R-devel/library/base/html/sets.html\nkableExtra tables\nhttps://haozhu233.github.io/kableExtra/awesome_table_in_html.html#grouped_columns__rows\n\n\nCODE\nsessionInfo()\n\n\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] forcats_0.5.1          stringr_1.4.0          dplyr_1.0.9           \n [4] purrr_0.3.4            readr_2.1.2            tidyr_1.2.0           \n [7] tibble_3.1.7           tidyverse_1.3.1        tidyfst_1.6.5         \n[10] statsExpressions_1.3.2 ggstatsplot_0.9.3      Hmisc_4.7-0           \n[13] Formula_1.2-4          survival_3.3-1         lattice_0.20-45       \n[16] pbapply_1.5-0          ggformula_0.10.1       ggridges_0.5.3        \n[19] scales_1.2.0           ggstance_0.3.5         ggplot2_3.3.6         \n[22] kableExtra_1.3.4      \n\nloaded via a namespace (and not attached):\n  [1] readxl_1.4.0           backports_1.4.1        systemfonts_1.0.4     \n  [4] plyr_1.8.7             splines_4.2.1          gmp_0.6-5             \n  [7] kSamples_1.2-9         TH.data_1.1-1          SuppDists_1.1-9.7     \n [10] digest_0.6.29          htmltools_0.5.2        fansi_1.0.3           \n [13] magrittr_2.0.3         checkmate_2.1.0        memoise_2.0.1         \n [16] paletteer_1.4.0        cluster_2.1.3          openxlsx_4.2.5        \n [19] tzdb_0.3.0             mosaicCore_0.9.0       modelr_0.1.8          \n [22] vroom_1.5.7            sandwich_3.0-2         svglite_2.1.0         \n [25] jpeg_0.1-9             colorspace_2.0-3       rvest_1.0.2           \n [28] ggrepel_0.9.1          haven_2.5.0            xfun_0.31             \n [31] crayon_1.5.1           prismatic_1.1.0        jsonlite_1.8.0        \n [34] zeallot_0.1.0          zoo_1.8-10             glue_1.6.2            \n [37] polyclip_1.10-0        gtable_0.3.0           emmeans_1.7.5         \n [40] webshot_0.5.3          MatrixModels_0.5-0     Rmpfr_0.8-9           \n [43] mvtnorm_1.1-3          DBI_1.1.3              PMCMRplus_1.9.5       \n [46] Rcpp_1.0.8.3           viridisLite_0.4.0      xtable_1.8-4          \n [49] performance_0.9.1      htmlTable_2.4.0        foreign_0.8-82        \n [52] bit_4.0.4              datawizard_0.5.1       htmlwidgets_1.5.4     \n [55] httr_1.4.3             fstcore_0.9.12         RColorBrewer_1.1-3    \n [58] ellipsis_0.3.2         pkgconfig_2.0.3        farver_2.1.0          \n [61] multcompView_0.1-8     nnet_7.3-17            dbplyr_2.2.1          \n [64] utf8_1.2.2             tidyselect_1.1.2       labeling_0.4.2        \n [67] rlang_1.0.3            effectsize_0.7.0       munsell_0.5.0         \n [70] cellranger_1.1.0       tools_4.2.1            cachem_1.0.6          \n [73] cli_3.3.0              generics_0.1.2         broom_0.8.0           \n [76] evaluate_0.15          fastmap_1.1.0          BWStest_0.2.2         \n [79] yaml_2.3.5             rematch2_2.1.2         knitr_1.39            \n [82] bit64_4.0.5            fs_1.5.2               zip_2.2.0             \n [85] xml2_1.3.3             correlation_0.8.1      compiler_4.2.1        \n [88] rstudioapi_0.13        curl_4.3.2             png_0.1-7             \n [91] ggsignif_0.6.3         reprex_2.0.1           tweenr_1.0.2          \n [94] stringi_1.7.6          highr_0.9              parameters_0.18.1     \n [97] Matrix_1.4-1           vctrs_0.4.1            pillar_1.7.0          \n[100] lifecycle_1.0.1        estimability_1.4       data.table_1.14.2     \n[103] insight_0.18.2         patchwork_1.1.1        R6_2.5.1              \n[106] latticeExtra_0.6-29    rio_0.5.29             gridExtra_2.3         \n[109] BayesFactor_0.9.12-4.4 codetools_0.2-18       boot_1.3-28           \n[112] MASS_7.3-57            assertthat_0.2.1       withr_2.5.0           \n[115] multcomp_1.4-19        bayestestR_0.12.1      parallel_4.2.1        \n[118] hms_1.1.1              fst_0.9.8              grid_4.2.1            \n[121] rpart_4.1.16           labelled_2.9.1         coda_0.19-4           \n[124] rmarkdown_2.14         ggforce_0.3.3          lubridate_1.8.0       \n[127] base64enc_0.1-3"
  },
  {
    "objectID": "analysis/SGC4B/4_sgc4B_hypotesting.html",
    "href": "analysis/SGC4B/4_sgc4B_hypotesting.html",
    "title": "19  Hypothesis Testing",
    "section": "",
    "text": "The purpose of this notebook is test the hypotheses that determined the designs of the SGC4B study."
  },
  {
    "objectID": "analysis/SGC4B/4_sgc4B_hypotesting.html#sample",
    "href": "analysis/SGC4B/4_sgc4B_hypotesting.html#sample",
    "title": "19  Hypothesis Testing",
    "section": "SAMPLE",
    "text": "SAMPLE\n\nData Collection\n\n\nCODE\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"point\",\"cross\",\"arrow\",\"Total for Period\")\ncont <- table(df_subjects$term, df_subjects$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n\n\n\nParticipants by Condition and Data Collection Period\n \n  \n      \n    point \n    cross \n    arrow \n    Total for Period \n  \n \n\n  \n    winter22 \n    99 \n    106 \n    96 \n    301 \n  \n  \n    Sum \n    99 \n    106 \n    96 \n    301 \n  \n\n\n\n\n\n\n\nParticipants\n\n\nCODE\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.male <- ((df_subjects %>% filter(gender==\"Male\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.female <- ((df_subjects %>% filter(gender==\"Female\") %>% count())/count(df_subjects))$n\nsubject.stats$percent.other <- ((df_subjects %>% filter(gender %nin% c(\"Female\",\"Male\")) %>% count())/count(df_subjects))$n\n\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n\n\n\nDescriptive Statistics of Participant Age and Gender\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n    percent.male \n    percent.female \n    percent.other \n  \n \n\n  \n     \n    12 \n    19 \n    20 \n    21 \n    30 \n    20.3 \n    1.74 \n    301 \n    0 \n    0.355 \n    0.628 \n    0.017 \n  \n\n\nNote:   Age in Years\n\n\n\n\nReported\nOverall 301 participants (36 % male, 63 % female, 2 % other) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 12 - 30 years)."
  },
  {
    "objectID": "analysis/SGC4B/4_sgc4B_hypotesting.html#h1-overall-task-accuracy",
    "href": "analysis/SGC4B/4_sgc4B_hypotesting.html#h1-overall-task-accuracy",
    "title": "19  Hypothesis Testing",
    "section": "H1 — OVERALL TASK ACCURACY",
    "text": "H1 — OVERALL TASK ACCURACY\n\nSetup\n\n\nCODE\ndf_s <- df_subjects %>% \n   dplyr::select(pretty_condition, task_percent)\n\n\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% \n  dplyr::select(pretty_condition, accuracy, subject,q)\n\n\n\n\nVisualize\n\n\nCODE\n#:::::::: STACKED PROPORTIONAL BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~pretty_mode) + \n   labs(title = \"Overall Accuracy\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"The full grid decreases performance\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART BY QUESTION\ndf_items %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~q) +\n   labs(title = \"Accuracy by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"Q6 and Q9 are non-discriminative\")\n\n\n\n\n\nCODE\n#:::::::: FACETED HISTOGRAM\nstats = df_s %>% group_by(pretty_condition) %>% dplyr::summarise(mean = mean(task_percent))\ngf_props(~task_percent,\n         fill = ~pretty_condition, data = df_s) %>%\n  # gf_facet_grid(pretty_condition ~ pretty_mode) %>%\n  gf_facet_grid(~pretty_condition) %>%\n  gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n  labs(x = \"% Correct\",\n       y = \"proportion of subjects\",\n       title = \"Overall Absolute Score (% Correct)\",\n       subtitle = \"\") + theme(legend.position = \"blank\")\n\n\n\n\n\n\n\nPresent\n\n\nCODE\n#:::::::: RAINCLOUD WITH STATS\n  \ndf <- df_s %>% mutate(task_percent = task_percent*100,\n                      condition = fct_rev(pretty_condition))\n\np <-   ggbetweenstats(data = df, x = condition, y = task_percent,\n               plot.type = \"box\", \n               # centrality.type = \"parametric\",\n               results.subtitle = FALSE,\n               subtitle = NULL,\n               # package = \"RColorBrewer\",\n               # palette = \"PRGn\",\n               centrality.point.args = list(color=\"black\", size = 3, shape = 1),\n               point.args = list(alpha=0), #suppress points\n               ggplot.component = ## modify further with `{ggplot2}` functions\n                list(\n                  # aes(color = pretty_condition, fill = pretty_condition),\n                  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  # scale_fill_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 3)),\n                  theme(axis.text.x = element_text(angle = 90)))\n               ) +\n  # ggdist::stat_halfeye(\n  #   alpha = 0.7, \n  #   point_colour = NA,\n  #   adjust = .5, \n  #   width = .5, .width = 0, \n  #   justification = -.5) +\n  geom_boxplot(\n    alpha = 0.1,\n    width = .2, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 2,\n    alpha = .5,\n    position = position_jitter(\n      seed = 1, width = .08, height = 1.5\n    )\n  )  +\ncoord_flip() + theme_clean() + theme(legend.position = \"blank\")\np$layers[[3]]=NULL #remove default boxplot\n\n# e <- statsExpressions::two_sample_test(y = task_percent, x = pretty_condition, data = df,\n                                # type = \"nonparametric\", alternative = \"less\",\n                                # var.equal = FALSE)\n#labels are layer 4\np <- p + labs(title = \"STUDY 4B | Distribution of Total Score\",\n         y = \"Percentage of correct responses across task\", x = \"\",\n         subtitle = \"Impasse condition yields greater variance and more high scores\")\n\np\n\n\n\n\n\nCODE\n# ggsave(p, filename = \"figures/SGC4B_MARKS_totalscore.png\", width = 6, height =4)\n# ggsave(p, filename = \"figures/SGC3A_LAB_totalscore.svg\", width = 6, height =4)\n\n\n\n\nCODE\n#:::::::: LABELLED \n\n# temp <- df_i %>% mutate(\n#   accuracy = fct_rev(accuracy)\n# )  \n# \n# p <-  \n# ggbarstats(data = temp, x = accuracy, y = pretty_condition,\n#                results.subtitle = FALSE,\n#                ggplot.component = ## modify further with `{ggplot2}` functions\n#                 list(\n#                   scale_fill_foxy(discrete = TRUE, \"accuracy\")\n#                   # scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))\n#                   # scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))\n#                   # theme(axis.text.x = element_text(angle = 90)))\n#                ))  + theme_clean() + theme(legend.position = \"bottom\")\n# \n# p <- p + labs(title = \"DISTRIBUTION | Question Accuracy\",\n#          y = \"Proportion of Questions\", x = \"Condition\",\n#          subtitle = \"\")\n# \n# p \n\n\np <- df_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = accuracy)) +\n  geom_bar(position = \"fill\", width = 0.5 ) + #,color = \"black\") +\n  scale_fill_foxy(discrete = TRUE, \"accuracy\")  +\n  # scale_fill_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 2))+\n  # facet_wrap(~pretty_mode) + \n  # coord_flip() +\n  theme(legend.position=\"bottom\")+\n   labs(title = \"DISTRIBUTION | Question Accuracy\",\n       x = \"Condition\",\n       y = \"Proportion of Questions\",\n       fill = \"\",\n       subtitle=\"\")\np\n\n\n\n\n\nCODE\n# ggsave(p, filename = \"figures/SGC4B_MARKS_accuracy.png\", width = 6, height =4)\n\n\n\n\nDescribe\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct)\"\ntbl1 <- mosaic::favstats(~task_percent, data = df_s) \ntbl1 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct)\n \n  \n      \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n     \n    0 \n    0 \n    0 \n    0.154 \n    1 \n    0.205 \n    0.333 \n    301 \n    0 \n  \n\n\n\n\n\nCODE\ntitle = \"Descriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\"\ntbl2 <- mosaic::favstats(task_percent ~ pretty_condition, data = df_s) \ntbl2 %>% kbl (caption = title) %>% kable_classic()\n\n\n\nDescriptive Statistics of Response Accuracy (Total % Correct) BY CONDITION\n \n  \n    pretty_condition \n    min \n    Q1 \n    median \n    Q3 \n    max \n    mean \n    sd \n    n \n    missing \n  \n \n\n  \n    point \n    0 \n    0 \n    0.000 \n    0.077 \n    1 \n    0.148 \n    0.295 \n    99 \n    0 \n  \n  \n    cross \n    0 \n    0 \n    0.000 \n    0.154 \n    1 \n    0.190 \n    0.317 \n    96 \n    0 \n  \n  \n    arrow \n    0 \n    0 \n    0.077 \n    0.519 \n    1 \n    0.273 \n    0.368 \n    106 \n    0 \n  \n\n\n\n\n\nREPORTED\nAcross all conditions, overall accuracy on the task ranges from 0 to 100 with a mean of 20.547.\nTo explore the effect of on TM graph reading performance, we start by describing the distribution of . Across all conditions, ranged from 0 to 100 with a mean of 21%. In Figure \\(\\ref{fig_4B_MARKS_totalscore}\\) we see that participant level accuracy on the interval graph comprehension task is low (less than 50%) consistent with prior studies, but that the average score (and variance in the distribution) are slightly higher for the and conditions.\n\n\nTESTS\n\nAligned Ranks Transformation\n\n\n\nCODE\nm.art = art(task_percent ~ pretty_condition, data = df_s)\nanova(m.art)\n\n\nAnalysis of Variance of Aligned Rank Transformed Data\n\nTable Type: Anova Table (Type III tests) \nModel: No Repeated Measures (lm)\nResponse: art(task_percent)\n\n                   Df Df.res F value Pr(>F)   \n1 pretty_condition  2    298  5.4686  0.005 **\n---\nSignif. codes:   0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n\n\n\n\nKruskal Wallis Test\n\n\nCODE\n(k <- kruskal.test(df_s$task_percent ~ df_s$pretty_condition))\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  df_s$task_percent by df_s$pretty_condition\nKruskal-Wallis chi-squared = 11, df = 2, p-value = 0.005\n\n\n\n\nVisualize\n\n\nCODE\n(results <- statsExpressions::oneway_anova(data = df_s, \n          x = pretty_condition, y = task_percent,\n          type = \"nonparametric\", alternative = \"less\"))\n\n\n# A tibble: 1 × 15\n  parameter1   parameter2  statistic df.error p.value method effectsize estimate\n  <chr>        <chr>           <dbl>    <int>   <dbl> <chr>  <chr>         <dbl>\n1 task_percent pretty_con…      10.6        2 0.00494 Krusk… Epsilon2 …   0.0354\n# … with 7 more variables: conf.level <dbl>, conf.low <dbl>, conf.high <dbl>,\n#   conf.method <chr>, conf.iterations <int>, n.obs <int>, expression <list>\n\n\nCODE\n#:::::::: STATSPLOT | VIOLIN\nggbetweenstats(y = task_percent, x = pretty_condition, \n               data = df_s, type = \"nonparametric\")\n\n\n\n\n\n\n\n\nMIXED LOGISTIC REGRESSION\nFit a mixed logistic regression (at the item level), predicting accuracy (absolute score) on all discriminating questions by condition; accounting for random effects of subject and item.\n\nFit Model\n\n\nCODE\n## 0 | SETUP\n#confirm 13 items [all discriminating items]\nnrow(df_i) / nrow(df_s) == 13\n\n\n[1] TRUE\n\n\nCODE\n#confirm all factors \nis.factor(df_i$q) && is.factor(df_i$subject) && is.factor(df_i$pretty_condition) && is.factor(df_i$accuracy)\n\n\n[1] TRUE\n\n\nCODE\n## 1 | SETUP RANDOM INTERCEPT SUBJECT\n\n#:: EMPTY MODEL (baseline, no random effect)\nprint(\"Empty fixed model\")\n\n\n[1] \"Empty fixed model\"\n\n\nCODE\nm0 = glm(accuracy ~ 1, family = \"binomial\", data = df_i) \n# summary(m0)\n\n#:: RANDOM INTERCEPT SUBJECT + ITEM\nprint(\"Subject Intercept + Item intercept random model\")\n\n\n[1] \"Subject Intercept + Item intercept random model\"\n\n\nCODE\nmm.rSQ <- glmer(accuracy ~ (1|subject) + (1|q), data = df_i, family = \"binomial\",\n                control = glmerControl(optimizer=\"bobyqa\", optCtrl=list(maxfun=2e5)))\n#summary(mm.rSQ)\n\n\n## 2 | ADD FIXED EFFECT CONDITION\n\nprint(\"FIXED Condition + Subject & Item random intercepts\")\n\n\n[1] \"FIXED Condition + Subject & Item random intercepts\"\n\n\nCODE\nmm.CrSQ <- glmer(accuracy ~ pretty_condition + (1|subject) + (1|q) ,\n                data = df_i, family = binomial,\n                control = glmerControl(optimizer=\"bobyqa\", optCtrl=list(maxfun=2e5)))\n# summary(mm.CrSQ)\n# car::Anova(mm.CrSQ)\n\ntest_lrt(mm.rSQ,mm.CrSQ) #same as anova(m0, m1, test = \"Chi\")\n\n\n# Likelihood-Ratio-Test (LRT) for Model Comparison (ML-estimator)\n\nName    |    Model | df | df_diff |  Chi2 |      p\n--------------------------------------------------\nmm.rSQ  | glmerMod |  3 |         |       |       \nmm.CrSQ | glmerMod |  5 |       2 | 15.09 | < .001\n\n\nCODE\npaste(\"Likelihood Ratio test is significant? p = \",(test_lrt(mm.rSQ,mm.CrSQ))$p[2])\n\n\n[1] \"Likelihood Ratio test is significant? p =  0.000527719053438071\"\n\n\nReported\nTo explore the effect of marks on accuracy, we fit a mixed effects logistic regression model with random intercepts for subjects and questions, with mark design as a fixed effect. A likelihood ratio test indicates that a model including this main effect is a significantly better fit for the data than an intercepts-only baseline model (\\(\\chi^2 (3,5) = 15.09, p < 0.001\\)).\n\n\nDescribe\n\n\nCODE\n# best model\nm <- mm.CrSQ\nm %>% write_rds(file = \"analysis/SGC4B/models/sgc4b_glmer_acc_mm.CrSQ.rds\")\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: accuracy ~ pretty_condition + (1 | subject) + (1 | q)\n   Data: df_i\nControl: glmerControl(optimizer = \"bobyqa\", optCtrl = list(maxfun = 200000))\n\n     AIC      BIC   logLik deviance df.resid \n    1857     1888     -923     1847     3908 \n\nScaled residuals: \n   Min     1Q Median     3Q    Max \n-9.717 -0.149 -0.044 -0.017  5.949 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n subject (Intercept) 25.71    5.07    \n q       (Intercept)  1.22    1.10    \nNumber of obs: 3913, groups:  subject, 301; q, 13\n\nFixed effects:\n                      Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             -6.794      1.000   -6.79  1.1e-11 ***\npretty_conditioncross    1.549      0.953    1.63   0.1039    \npretty_conditionarrow    3.464      0.978    3.54   0.0004 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n             (Intr) prtty_cndtnc\nprtty_cndtnc -0.575             \nprtty_cndtnr -0.752  0.537      \n\n\nCODE\nprint(\"SIGNIFICANCE TEST [non directional]\")\n\n\n[1] \"SIGNIFICANCE TEST [non directional]\"\n\n\nCODE\ncar::Anova(m, type = 2)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: accuracy\n                 Chisq Df Pr(>Chisq)   \npretty_condition  12.7  2     0.0018 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCODE\n#:::::::: MANUAL ONE-SIDED SIGTEST \n#note: anova and chi square are always one-tailed, but that is independent of being one-sided\n#https://www.ibm.com/support/pages/can-one-get-one-tailed-tests-logistic-regression-dividing-significance-levels-half\n# one-sided (right tail) z test for B COEFFICIENT\n#SANITY CHECK 2-tailed test should match the model output\n# tt <- 2*pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"p value for two-tailed test, null B = 0 : \",round(tt,5))\n# ot <- pnorm(summary(m)$coefficients[2,3], lower.tail = F)\n# paste(\"BUT we want a one  directional, null: B <= 0: \",round(ot,5))\n\n\n#:::::::: INTERPRET COEFFICIENTS\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n# se <- sqrt(diag(stats::vcov(m)))\n# (tab <- cbind(Est = fixef(m),\n#               LL = fixef(m) - 1.96 * se,\n#               UL = fixef(m) + 1.96 * se))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\")\n\n\n# A tibble: 5 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…    -6.79     1.00      -6.79  1.11e-11   -8.75      -4.83\n2 fixed    <NA>  pret…     1.55     0.953      1.63  1.04e- 1   -0.318      3.42\n3 fixed    <NA>  pret…     3.46     0.978      3.54  3.98e- 4    1.55       5.38\n4 ran_pars subj… sd__…     5.07    NA         NA    NA          NA         NA   \n5 ran_pars q     sd__…     1.10    NA         NA    NA          NA         NA   \n\n\nCODE\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n# (e <- exp(tab))\ntidy(m,   conf.int = TRUE, conf.level = 0.95, conf.method = \"Wald\", exponentiate = TRUE)\n\n\n# A tibble: 5 × 9\n  effect   group term  estimate std.error statistic   p.value conf.low conf.high\n  <chr>    <chr> <chr>    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl>\n1 fixed    <NA>  (Int…  0.00112   0.00112     -6.79  1.11e-11  1.58e-4   0.00796\n2 fixed    <NA>  pret…  4.71      4.49         1.63  1.04e- 1  7.28e-1  30.5    \n3 fixed    <NA>  pret… 31.9      31.3          3.54  3.98e- 4  4.70e+0 217.     \n4 ran_pars subj… sd__…  5.07     NA           NA    NA        NA        NA      \n5 ran_pars q     sd__…  1.10     NA           NA    NA        NA        NA      \n\n\nCODE\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#probability control = plogis(intercept)\n#probability impasse = plogis(intercept + coefficient)\n\n#FROM predict()\n# newdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n# preds <- predict(m, newdata = newdata, type = \"response\")\n# preds <- cbind(newdata, preds)\n# p <- preds %>% \n#   dplyr::select(pretty_condition, preds) %>% \n#   group_by(pretty_condition) %>% \n#   summarise(\n#     median = median(preds),\n#     se = sd(preds)/sqrt(n()),\n#     lwr = median - 1.96*se,\n#     upr = median + 1.96*se)\n    \n  \n#FROM merTools\n#setup df \nnewdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\n#make predictions\npreds <- predictInterval(m, newdata = newdata,\n                              which = \"fixed\", #full, fixed or random for those only\n                              type = \"probability\", #linear.prediction\n                              stat = \"median\",\n                              n.sims = 1000,\n                              level = 0.80) #width of prediction interval\n\n\nWarning: executing %dopar% sequentially: no parallel backend registered\n\n\nCODE\n#join predictions to the new dataframe\npreds <- cbind(newdata, preds)\n#summarize\n(summ_preds <- preds %>% \n  dplyr::select(pretty_condition, fit, lwr, upr) %>% \n  group_by(pretty_condition) %>% \n  summarise(\n    median = median(fit),\n    lower = median(lwr),\n    upper = median(upr)\n  )) \n\n\n# A tibble: 3 × 4\n  pretty_condition  median    lower   upper\n  <fct>              <dbl>    <dbl>   <dbl>\n1 point            0.00116 0.000185 0.00696\n2 cross            0.00503 0.000895 0.0277 \n3 arrow            0.0359  0.00770  0.150  \n\n\n\n\nInference\nReported\nA Wald Chi-Square tests confirms a main effect of mark design (\\(\\chi^2 (2) = 12.7, p < 0.001\\)).\n Model coefficients indicate that relative to the point mark condition, the arrow mark increases the odds of a correct response (\\(e^{b_{1[arrow]}} = 31.95, SE = 3.54, p < 0.001\\)).\n Model coefficients indicate that relative to the point mark condition, the cross mark did not change the odds of a correct response (\\(e^{b_{1[cross]}} = 4.71, SE = 4.48, p = 0.10\\)). Model predictions are visualized in Figure \\(\\ref{fig_4B_accuracy}\\) [B], while parameter estimates and model specification is detailed in Appendix \\(\\ref{SGC4B_MARKS_MODEL_accuracy}\\).\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\nplot_model(m, vline.color = \"red\", \n           show.intercept = TRUE, \n           show.values = TRUE,\n           p.threshold = 0.1, #manually adjust to account for directional test\n           ci.lvl = 0.95 ) + #manually adjusted for directional test   \n  labs(title = \"Model Estimate | Odds Ratio\",\n       subtitle = \"\",\n       x = \"Condition\") #why no error bars? problem with model?\n\n\n\n\n\nCODE\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(m, exponentiate = TRUE, component = \"all\")\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT TESTS\n\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\nplot_model(m, type=\"eff\",\n           show.intercept = TRUE,\n           show.values = TRUE,\n           title = \"Model Prediction | Probability of Accurate Response\",\n           axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n\n$pretty_condition\n\n\n\n\n\nCODE\n#PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\")[[1]] +\n  ylim(0,1) \n\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\nCODE\n  # labs(\n  #   title = \"Model Prediction | Probability of Accurate Response\",\n  #   subtitle = \"Impasse increases Probability of Correct Response\"\n  # )\n\n\n\n\nMarginal Effects\n\n\nCODE\n# https://cran.r-project.org/web/packages/emmeans/vignettes/interactions.html#simple\n# https://stats.oarc.ucla.edu/stata/faq/how-can-i-understand-a-categorical-by-categorical-interaction-in-logistic-regression-stata-12/\n# https://stats.oarc.ucla.edu/stata/seminars/deciphering-interactions-in-logistic-regression/\n  \nlibrary(emmeans)\n\n#sanity check reference grid\nref_grid(m)\n\n\n'emmGrid' object with variables:\n    pretty_condition = point, cross, arrow\nTransformation: \"logit\" \n\n\nCODE\n#PRINT ESTIMATED MARGINAL MEANS\n#should be same as summ_preds\nemmeans(m,  ~ pretty_condition, type = \"response\")\n\n\n pretty_condition   prob      SE  df asymp.LCL asymp.UCL\n point            0.0011 0.00112 Inf   0.00016    0.0079\n cross            0.0052 0.00470 Inf   0.00090    0.0299\n arrow            0.0346 0.02327 Inf   0.00904    0.1231\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n\nCODE\n##POST-HOC COMPARISONS\nprint(\"POSTHOC COMPARISONS\")\n\n\n[1] \"POSTHOC COMPARISONS\"\n\n\nCODE\nemmeans(m,  pairwise ~ pretty_condition, \n        type = \"response\" , adjust = \"none\") #sidak, tukey\n\n\n$emmeans\n pretty_condition   prob      SE  df asymp.LCL asymp.UCL\n point            0.0011 0.00112 Inf   0.00016    0.0079\n cross            0.0052 0.00470 Inf   0.00090    0.0299\n arrow            0.0346 0.02327 Inf   0.00904    0.1231\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the logit scale \n\n$contrasts\n contrast      odds.ratio     SE  df null z.ratio p.value\n point / cross     0.2124 0.2023 Inf    1  -1.630  0.1039\n point / arrow     0.0313 0.0306 Inf    1  -3.540  0.0004\n cross / arrow     0.1474 0.1370 Inf    1  -2.060  0.0394\n\nTests are performed on the log odds ratio scale \n\n\nCODE\n##PLOT INTERACTION\n#equivalent to plot_model, type = \"int\"\n# emmip(m, SHAPE * SCALE ,\n#       type = \"response\",\n#       CIs = TRUE,\n#       linearg = list(linetype = \"dashed\"),\n#       engine = \"ggplot\")\n\n\n##PLOT PROBABILITY\nplot(ref_grid(m), by = \"pretty_condition\", type = \"response\")\n\n\n\n\n\n\n\nPresent\n\n\nCODE\n## PLOT INTERACTION / marginals\nlibrary(ggeffects)\n\np <- ggpredict(m, terms = c(\"pretty_condition\")) %>%\n  plot(connect.lines = FALSE) + \n  # scale_color_manual(values = fct_rev(paletteer::paletteer_d(\"nbapalettes::bulls\")))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"awtools::gpalette\",3))+\n  # scale_color_manual(values = paletteer::paletteer_d(\"lisa::FridaKahlo\", 3))+\n  # scale_colour_manual(values = paletteer::paletteer_c(\"viridis::viridis\", 2)) + \n  theme_clean() + labs(\n  title = \"MODEL | Predicted probability of correct response\",\n  x = \"SCALE\"\n)+ \n scale_y_continuous(limits = c(0,1))+\n theme(legend.position=\"bottom\") \n\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\nCODE\np\n\n\n\n\n\nCODE\n# ggsave(p, filename = \"figures/SGC4B_MARKS_accuracy_prediction.png\", width = 6, height =4)\n\n\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n\n# models <- list(\"odds ratios\" = m, \"(log odds)\" = m)\n# title = \"Study 4B | Question Accuracy\"\n# notes = list(\"* p < 0.05, ** p < 0.01, *** p < 0.001\",\n#              paste(\"n = \",n_obs(m), \"R^2(Conditional) =\", round(r2(m)[[1]],2),\n#                    \"R^2(Marginal) =\", round(r2(m)[[2]],2)),\n#              \"Accuracy  ~ MARK +  (1 | subject) + (1 | q)\")\n# \n# modelsummary(models,\n#              exponentiate = c(TRUE, FALSE),\n#              shape = term ~ model + statistic,\n#              fmt = 2, #two digits w/ trailing zero\n#              estimate  = \"{estimate} {stars}\",\n#              statistic = \"conf.int\",\n#              gof_map = c(\"AIC\", \"sigma\"),\n#              gof_omit = 'RMSE|ICC|BIC',\n#              coef_rename = c(\"pretty_conditioncross\" = \"MARK[cross]\",\n#              \"pretty_conditionarrow\" = \"MARK[arrow]\"),\n#              title = title,\n#              notes = notes,\n#              output  = \"tables/SGC4B_MARKS_GLMER_OverallAccuracy.tex\")\n# # #              # coef_omit = \"Intercept\",\n\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n\n\n\n\nDiagnostics\n\n\nCODE\nprint(\"SANITY CHECK REPORTING\")\n\n\n[1] \"SANITY CHECK REPORTING\"\n\n\nCODE\n# report(m)\n\nprint(\"DIAGNOSTICS\")\n\n\n[1] \"DIAGNOSTICS\"\n\n\nCODE\ncheck_model(m)\n\n\n\n\n\n\n\nBAYESIAN\nFor some reason there are convergence difficulties. Try again with the brms version"
  },
  {
    "objectID": "analysis/SGC4B/4_sgc4B_hypotesting.html#h1a-overall-interpretation-state",
    "href": "analysis/SGC4B/4_sgc4B_hypotesting.html#h1a-overall-interpretation-state",
    "title": "19  Hypothesis Testing",
    "section": "H1A | OVERALL INTERPRETATION STATE",
    "text": "H1A | OVERALL INTERPRETATION STATE\n\n“orthogonal” [reference category] includes orthogonal and satisficing responses ==> indicates a primarily orthogonal state of coordinate system understanding\n“other” includes: blank, reference point, responses that can’t be classified (including selecting all datapoints), => indicates an uncertain or unidentifiable state of coordinate system understanding, but one that is distinctly not orthogonal nor triangular\n“angular” includes ‘lines connecting’ responses as well as responses that include both orthogonal and triangular answers => indicates some degree of angular/triangular coordinate understanding\n“triangular” includes correct triangular => indicates a correct triangular coordinate understanding\n\n\nSetup\n\n\nCODE\n#:::::::: PREP DATA\ndf_i = df_items %>% filter(q %nin% c(6,9)) %>% dplyr::select(q,subject,state,pretty_condition)\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  # facet_wrap(~pretty_mode) + \n   labs(title = \"Interpretation across all Questions\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\nCODE\n#:::::::: STACKED BAR CHART\ndf_i %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = state)) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  facet_wrap(~q) +\n   labs(title = \"Interpretation by Question\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n\n\n\n\n\n\n\nCODE\n#::::::::::::DESCRIPTIVES\n\ntable(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      prop.table(margin=2) %>%  #return proportion (of column)\n      addmargins(1) #sanity check sum of columns\n\n\n            \n              point  cross  arrow    Sum\n  orthogonal 0.6737 0.5857 0.5784 0.6121\n  other      0.1453 0.1763 0.1132 0.1439\n  angular    0.0326 0.0481 0.0363 0.0388\n  triangular 0.1484 0.1899 0.2721 0.2052\n  Sum        1.0000 1.0000 1.0000 1.0000\n\n\nCODE\n(t <- table(df_i$state, df_i$pretty_condition) %>% addmargins(2) %>% #display sum for row\n      addmargins(1)) #sanity check sum of columns\n\n\n            \n             point cross arrow  Sum\n  orthogonal   867   731   797 2395\n  other        187   220   156  563\n  angular       42    60    50  152\n  triangular   191   237   375  803\n  Sum         1287  1248  1378 3913\n\n\n\n\nMIXED MULTINOMIAL REGRESSION\nDoes condition affect the response state of of items across the task?\n\nFit Model [brms]\n\n\nCODE\n#BAYESIAN RANDOM ONLY\nBmm.cat.rSQ <- brm( state ~ 1 + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC4B/models/sgc4b_brms_state_Bmm.cat.rSQ_LAB.rds\")\n\n\n#set priors [see justification, in SGC3A]\ninf_priors <- c(\n   #prior on INTERCEPTS\n   #25% chance of each answer in control, scale = from 0.01 to 62%\n   prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muangular\"),\n   prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"muother\"),\n   prior(normal(-1.1, 1.5),  class = \"Intercept\", dpar = \"mutriangular\"),\n   #prior on COEFFICIENT\n   #likely to change odds between 0 and 2.4\n   prior(normal(0, 2.42), class = b, coef=\"pretty_conditioncross\", dpar = \"muangular\"),\n   prior(normal(0, 2.42), class = b, coef=\"pretty_conditioncross\", dpar = \"muother\"),\n   prior(normal(0, 2.42), class = b, coef=\"pretty_conditioncross\", dpar = \"mutriangular\"),\n   prior(normal(0, 2.42), class = b, coef=\"pretty_conditionarrow\", dpar = \"muangular\"),\n   prior(normal(0, 2.42), class = b, coef=\"pretty_conditionarrow\", dpar = \"muother\"),\n   prior(normal(0, 2.42), class = b, coef=\"pretty_conditionarrow\", dpar = \"mutriangular\")\n)\n# \n# \n# \n# \n# #UNINFORMATIVE PRIOR BAYESIAN MIXED VERSION\n# flat_Bmm.cat.CrSQ <- brm( state ~ pretty_condition + (1|subject) + (1|q),\n#                  data = df_i,\n#                  family = \"categorical\",\n#                  chains = 4, iter = 2000, warmup = 1000,\n#                  cores = 4, seed = 1234,\n#                  save_pars = save_pars(all = TRUE),\n#                  backend = \"cmdstanr\",\n#                  file =\"analysis/SGC4B/models/sgc4b_brms_state_FLAT_Bmm.cat.CrSQ_LAB.rds\")\n# # # \n# # # # determine default priors \n# prior_summary(flat_Bmm.cat.CrSQ)\n\n#INFORMATIVE PRIORS\nBmm.cat.CrSQ <- brm( state ~ pretty_condition + (1|subject) + (1|q), \n                 data = df_i, \n                 family = \"categorical\",\n                 prior = inf_priors,\n                 chains = 4, iter = 2500, warmup = 1000,\n                 cores = 4, seed = 1234,\n                 save_pars = save_pars(all = TRUE),\n                 control = list(adapt_delta = 0.98),  # to deal with divergent transitions\n                 # backend = \"cmdstanr\",\n                 file =\"analysis/SGC4B/models/sgc4b_brms_state_Bmm.cat.CrSQ_LAB.rds\"\n                 )\n\n\nCompiling Stan program...\n\n\nTrying to compile a simple C file\n\n\nRunning /Library/Frameworks/R.framework/Resources/bin/R CMD SHLIB foo.c\nclang -mmacosx-version-min=10.13 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG   -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/Rcpp/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/unsupported\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/BH/include\" -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/src/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppParallel/include/\"  -I\"/Library/Frameworks/R.framework/Versions/4.2/Resources/library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DBOOST_NO_AUTO_PTR  -include '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include   -fPIC  -Wall -g -O2  -c foo.c -o foo.o\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:88:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name 'namespace'\nnamespace Eigen {\n^\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:16: error: expected ';' after top level declarator\nnamespace Eigen {\n               ^\n               ;\nIn file included from <built-in>:1:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/StanHeaders/include/stan/math/prim/mat/fun/Eigen.hpp:13:\nIn file included from /Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Dense:1:\n/Library/Frameworks/R.framework/Versions/4.2/Resources/library/RcppEigen/include/Eigen/Core:96:10: fatal error: 'complex' file not found\n#include <complex>\n         ^~~~~~~~~\n3 errors generated.\nmake: *** [foo.o] Error 1\n\n\nStart sampling\n\n\n\n\nDescribe\n\n\nCODE\n# best model\n# m <- Bmm.cat.CrSQ\nm <- Bmm.cat.CrSQ\n\n#::::::::: PRINT MODEL \n\nprint(\"PREDICTOR MODEL\")\n\n\n[1] \"PREDICTOR MODEL\"\n\n\nCODE\nsummary(m)\n\n\n Family: categorical \n  Links: muother = logit; muangular = logit; mutriangular = logit \nFormula: state ~ pretty_condition + (1 | subject) + (1 | q) \n   Data: df_i (Number of observations: 3913) \n  Draws: 4 chains, each with iter = 2500; warmup = 1000; thin = 1;\n         total post-warmup draws = 6000\n\nGroup-Level Effects: \n~q (Number of levels: 13) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.98      0.45     1.29     3.07 1.00     1603\nsd(muangular_Intercept)        1.77      0.52     1.04     3.01 1.00     2347\nsd(mutriangular_Intercept)     2.08      0.49     1.35     3.22 1.00     1964\n                           Tail_ESS\nsd(muother_Intercept)          3313\nsd(muangular_Intercept)        3232\nsd(mutriangular_Intercept)     3571\n\n~subject (Number of levels: 301) \n                           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nsd(muother_Intercept)          1.92      0.14     1.66     2.21 1.00     2305\nsd(muangular_Intercept)        1.97      0.23     1.55     2.44 1.00     2199\nsd(mutriangular_Intercept)     5.68      0.45     4.87     6.62 1.00     1653\n                           Tail_ESS\nsd(muother_Intercept)          3880\nsd(muangular_Intercept)        3625\nsd(mutriangular_Intercept)     2782\n\nPopulation-Level Effects: \n                                   Estimate Est.Error l-95% CI u-95% CI Rhat\nmuother_Intercept                     -2.49      0.57    -3.58    -1.32 1.00\nmuangular_Intercept                   -4.51      0.61    -5.70    -3.28 1.00\nmutriangular_Intercept                -4.96      0.84    -6.56    -3.29 1.00\nmuother_pretty_conditioncross          0.54      0.33    -0.10     1.18 1.00\nmuother_pretty_conditionarrow          0.05      0.33    -0.58     0.73 1.00\nmuangular_pretty_conditioncross        0.80      0.41    -0.01     1.61 1.00\nmuangular_pretty_conditionarrow        0.29      0.42    -0.53     1.13 1.00\nmutriangular_pretty_conditioncross     1.01      0.87    -0.70     2.71 1.00\nmutriangular_pretty_conditionarrow     2.30      0.84     0.67     3.93 1.01\n                                   Bulk_ESS Tail_ESS\nmuother_Intercept                      1128     2007\nmuangular_Intercept                    1969     3004\nmutriangular_Intercept                 1437     2552\nmuother_pretty_conditioncross          2073     3568\nmuother_pretty_conditionarrow          2426     3772\nmuangular_pretty_conditioncross        3347     4396\nmuangular_pretty_conditionarrow        3367     4117\nmutriangular_pretty_conditioncross      788     1379\nmutriangular_pretty_conditionarrow      882     2048\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCODE\n(d <- describe_posterior(ci=.95, Bmm.cat.CrSQ))\n\n\nSummary of Posterior Distribution\n\nParameter                          | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n-------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                  |  -2.49 | [-3.58, -1.32] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1113.00\nmuangular_Intercept                |  -4.52 | [-5.70, -3.28] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1948.00\nmutriangular_Intercept             |  -4.96 | [-6.56, -3.29] |   100% | [-0.18, 0.18] |        0% | 1.004 | 1436.00\nmuother_pretty_conditioncross      |   0.53 | [-0.10,  1.18] | 95.28% | [-0.18, 0.18] |    11.33% | 1.001 | 2080.00\nmuother_pretty_conditionarrow      |   0.05 | [-0.58,  0.73] | 55.37% | [-0.18, 0.18] |    43.11% | 1.001 | 2410.00\nmuangular_pretty_conditioncross    |   0.80 | [-0.01,  1.61] | 97.42% | [-0.18, 0.18] |     4.77% | 1.001 | 3310.00\nmuangular_pretty_conditionarrow    |   0.29 | [-0.53,  1.13] | 74.47% | [-0.18, 0.18] |    28.70% | 1.000 | 3318.00\nmutriangular_pretty_conditioncross |   1.02 | [-0.70,  2.71] | 87.92% | [-0.18, 0.18] |     9.07% | 1.003 |  782.00\nmutriangular_pretty_conditionarrow |   2.32 | [ 0.67,  3.93] | 99.57% | [-0.18, 0.18] |        0% | 1.005 |  839.00\n\n\nCODE\nprint(\"BAYES FACTOR [comparison to null]\")\n\n\n[1] \"BAYES FACTOR [comparison to null]\"\n\n\nCODE\n#think of this like the anova(model) to get p values for each predictor\n#has to recompile the models with rstan. total drag\n(b <- bayesfactor(Bmm.cat.rSQ, m))\n\n\nWarning: Bayes factors might not be precise.\nFor precise Bayes factors, sampling at least 40,000 posterior samples is recommended.\n\n\nComputation of Bayes factors: estimating marginal likelihood, please wait...\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nWarning: logml could not be estimated within maxiter, rerunning with adjusted starting value. \nEstimate might be more variable than usual.\n\n\nBayes Factors for Model Comparison\n\n    Model                                            BF\n[2] pretty_condition + (1 | subject) + (1 | q) 7.98e-26\n\n* Against Denominator: [1] 1 + (1 | subject) + (1 | q)\n*   Bayes Factor Type: marginal likelihoods (bridgesampling)\n\n\nCODE\nprint(\"DESCRIBE POSTERIOR\")\n\n\n[1] \"DESCRIBE POSTERIOR\"\n\n\nCODE\n#:::::::: INTERPRET COEFFICIENTS\n# se <- sqrt(diag(stats::vcov(m)))\n# # table of estimates with 95% CI\n# (tab <- cbind(Est = fixef(m),\n#               LL = fixef(m) - 1.96 * se,\n#               UL = fixef(m) + 1.96 * se))\n\npaste(\"LOG ODDS\")\n\n\n[1] \"LOG ODDS\"\n\n\nCODE\n(l <- describe_posterior(m))\n\n\nSummary of Posterior Distribution\n\nParameter                          | Median |         95% CI |     pd |          ROPE | % in ROPE |  Rhat |     ESS\n-------------------------------------------------------------------------------------------------------------------\nmuother_Intercept                  |  -2.49 | [-3.58, -1.32] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1113.00\nmuangular_Intercept                |  -4.52 | [-5.70, -3.28] |   100% | [-0.18, 0.18] |        0% | 1.001 | 1948.00\nmutriangular_Intercept             |  -4.96 | [-6.56, -3.29] |   100% | [-0.18, 0.18] |        0% | 1.004 | 1436.00\nmuother_pretty_conditioncross      |   0.53 | [-0.10,  1.18] | 95.28% | [-0.18, 0.18] |    11.33% | 1.001 | 2080.00\nmuother_pretty_conditionarrow      |   0.05 | [-0.58,  0.73] | 55.37% | [-0.18, 0.18] |    43.11% | 1.001 | 2410.00\nmuangular_pretty_conditioncross    |   0.80 | [-0.01,  1.61] | 97.42% | [-0.18, 0.18] |     4.77% | 1.001 | 3310.00\nmuangular_pretty_conditionarrow    |   0.29 | [-0.53,  1.13] | 74.47% | [-0.18, 0.18] |    28.70% | 1.000 | 3318.00\nmutriangular_pretty_conditioncross |   1.02 | [-0.70,  2.71] | 87.92% | [-0.18, 0.18] |     9.07% | 1.003 |  782.00\nmutriangular_pretty_conditionarrow |   2.32 | [ 0.67,  3.93] | 99.57% | [-0.18, 0.18] |        0% | 1.005 |  839.00\n\n\nCODE\n# (tm <- tidy(m,   conf.int = TRUE))\n\npaste(\"ODDS RATIOS\")\n\n\n[1] \"ODDS RATIOS\"\n\n\nCODE\n(e <- model_parameters(m, exponentiate = TRUE))\n\n\nParameter                          |   Median |        95% CI |     pd | % in ROPE |  Rhat |     ESS\n----------------------------------------------------------------------------------------------------\nmuother_Intercept                  |     0.08 | [0.03,  0.27] |   100% |        0% | 1.001 | 1113.00\nmuangular_Intercept                |     0.01 | [0.00,  0.04] |   100% |        0% | 1.001 | 1948.00\nmutriangular_Intercept             | 7.03e-03 | [0.00,  0.04] |   100% |        0% | 1.004 | 1436.00\nmuother_pretty_conditioncross      |     1.70 | [0.91,  3.24] | 95.28% |    11.33% | 1.001 | 2080.00\nmuother_pretty_conditionarrow      |     1.05 | [0.56,  2.07] | 55.37% |    43.11% | 1.001 | 2410.00\nmuangular_pretty_conditioncross    |     2.22 | [0.99,  5.03] | 97.42% |     4.77% | 1.001 | 3310.00\nmuangular_pretty_conditionarrow    |     1.34 | [0.59,  3.09] | 74.47% |    28.70% | 1.000 | 3318.00\nmutriangular_pretty_conditioncross |     2.77 | [0.50, 15.08] | 87.92% |     9.07% | 1.003 |  782.00\nmutriangular_pretty_conditionarrow |    10.21 | [1.95, 51.06] | 99.57% |        0% | 1.005 |  839.00\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a MCMC distribution approximation.\n\n\nCODE\n# tidy(m,   conf.int = TRUE, exponentiate = TRUE)\n# tm %>% mutate(\n#   OR.est = exp(estimate),\n#   exp.low = exp(conf.low),\n#   exp.high = exp(conf.high)\n# ) %>% dplyr::select(effect, component, group, term, OR.est, exp.low, exp.high)\n\npaste(\"PROBABILITIES\")\n\n\n[1] \"PROBABILITIES\"\n\n\nCODE\n#PREDICT METHOD\nnewdata <- df_i %>% dplyr::select(pretty_condition, subject, q)\npreds <- predict(m, newdata = newdata, type = \"response\")\npreds <- cbind(newdata, preds)\n#lengthen data frame to handle multinomial\npreds <- preds %>% \n  dplyr::select(-subject, -q) %>% #marginalize over subject and q\n  pivot_longer(\n  cols = !pretty_condition,\n  values_to = \"preds\",\n  names_to = \"state\",\n) \n\n(p <- preds %>% \n  group_by(pretty_condition, state ) %>%\n  summarise(\n    median = median(preds),\n    se = sd(preds)/sqrt(n()),\n    lwr = median - 1.96*se,\n    upr = median + 1.96*se))\n\n\n# A tibble: 12 × 6\n# Groups:   pretty_condition [3]\n   pretty_condition state              median      se       lwr    upr\n   <fct>            <chr>               <dbl>   <dbl>     <dbl>  <dbl>\n 1 point            P(Y = angular)    0.00917 0.00195  0.00535  0.0130\n 2 point            P(Y = orthogonal) 0.826   0.00930  0.807    0.844 \n 3 point            P(Y = other)      0.0568  0.00562  0.0458   0.0679\n 4 point            P(Y = triangular) 0.00767 0.00828 -0.00857  0.0239\n 5 cross            P(Y = angular)    0.0147  0.00256  0.00964  0.0197\n 6 cross            P(Y = orthogonal) 0.685   0.00971  0.666    0.704 \n 7 cross            P(Y = other)      0.0752  0.00625  0.0630   0.0875\n 8 cross            P(Y = triangular) 0.0178  0.00915 -0.000179 0.0357\n 9 arrow            P(Y = angular)    0.00917 0.00216  0.00494  0.0134\n10 arrow            P(Y = orthogonal) 0.701   0.00983  0.682    0.720 \n11 arrow            P(Y = other)      0.0467  0.00424  0.0384   0.0550\n12 arrow            P(Y = triangular) 0.0395  0.0101   0.0197   0.0593\n\n\nCODE\n##DRAWS METHOD\n# GENERATE draws from model\n# draws <- df_i %>%\n#   data_grid(pretty_condition, subject, q) %>% \n#   add_fitted_draws(Bmm.cat.CrSQ,\n#                    # n = 100,\n#                    # dpar = TRUE,\n#                    # transform = TRUE, #gives prob%, otherwise OR\n#                    re_formula = NA)\n# # draws %>% write_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# #OR load from file\n# # draws <- read_rds(file = \"analysis/SGC3A/models/draws/draws_BB.catCrSQ.rds\")\n# \n# # SUMMARIZE draws from model\n# (k <- kable(draws %>%\n#   dplyr::select(pretty_condition, .category, .value) %>%\n#   group_by(pretty_condition, .category) %>%\n#   median_hdci(.value), digits = 4, col.names =\n#     c(\"Condition\",\"Category\", \"Probability\",\"Lower Cred.I\",\"Upper Cred.I\", \"CI Width\", \"Point Type\", \"Interval Type\")) %>%\n#   kable_styling())\n\n\n##EASY STATS INSIGHT \n# https://easystats.github.io/insight/reference/get_predicted.html\n# p <- get_predicted(m, predict = \"expectation\")\n\n\n\n\nTODO INFERENCE\nUPDATE THIS [template from 3A\n[REPORT POSTERIOR MEDIAN \\(\\exp_{beta}\\), 95 % credible interval, % probability of direction]\nWe fit a (bayesian) multinomial logistic regression model with random intercepts for subjects and questions. A Bayes Factor model comparison (against a random intercepts-only model) indicates extreme evidence for a main effect of CONDITION (BF = 1.38e+14).\nConsistent with our hypothesis, the impasse condition substantially increases the odds of transitional interpretations.\nAcross the entire task participants in the impasse condition were 12 times more likely to offer an ‘unknown’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 12.13, 95 \\% CI [6.29, 25.24], pd = 100\\%\\)). Participants in the impasse condition were 12 times more likely to offer an ‘angular’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 11.48, 95 \\% CI [3.95, 37.67], pd = 100\\%\\)), and 34 times more likely to offer an ‘triangular’ rather than orthogonal response compared with those in the control condition ( \\(e^{\\beta_1} = 33.90, 95 \\% CI [6.22, 211.18], pd = 100\\%\\)).\n\n\nPrint\n\n\nCODE\n#SJPLOT | MODEL | TABLE\n# tab_model(m)\n\n# #MODEL SUMMARY | save latex table\n#model summary doesn't work for brms multinomial\n\n# DOESN'T WORK FOR BRMS\n# extract_eq(m, use_coefs = TRUE, wrap = TRUE)\n# \n# \n# #GET MODEL ESTIMATES\n# t <- as.data.frame(model_parameters(m, exponentiate = TRUE))\n# \n# #REFORMAT\n# x <- t %>%\n#   mutate(\n#     Interpretation = word(Parameter, 2, sep = \"_\"),\n#     Interpretation = str_remove_all(Interpretation,\"mu\"),\n#     Interpretation = fct_relevel(Interpretation, levels = c(\"other\",\"angular\",\"triangular\")),\n# \n#     Parameter = as.factor(word(Parameter, 3, sep = \"_\")),\n#     Parameter = recode_factor(Parameter,\n#                          \"Intercept\" = \"(Intercept)\",\n#                          \"pretty\" = \"Condition[impasse]\"),\n#     Median = round(Median,2),\n#     CI_low = round(CI_low,2),\n#     CI_high = round(CI_high,2),\n#     pd = round(pd,2),\n#     ROPE_Percentage = round(ROPE_Percentage,2)\n#   ) %>%\n#   arrange(Interpretation) %>%\n#   dplyr::select(-CI, -Rhat, -ESS) %>%\n#   rename( \"%_in_ROPE\"=\"ROPE_Percentage\",\n#           \"(Odds Ratio)\" = \"Median\") %>%\n#   dplyr::select(Interpretation, Parameter, `(Odds Ratio)`, CI_low, CI_high, pd, `%_in_ROPE`)\n\n\n# \n# #KNIT\n# title = \"Study 3A (Lab) | Question Interpretation | Mixed Multinomial Regression\"\n# tab <- kbl(x, format = \"latex\", caption = title,\n#            booktabs = FALSE) %>% kable_classic() %>%\n# footnote(general = paste(\"Model Interpretation ~ \",b$Model[2], \"Bayes Factor \", format( exp(b$log_BF[2]), digits =2 ) ), footnote_as_chunk = T, general_title = \"\")\n# writeLines(tab, \"tables/SGC3A_LAB_BRMS_state.tex\")\n\n\n\n\nVisualize\n\n\nCODE\n## | PLOT PARAMETERS \n\n#SJPLOT | MODEL | ODDS RATIO\n# plot_model(m, vline.color = \"red\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            p.threshold = 0.1, #manually adjust to account for directional test\n#            ci.lvl = 0.90 ) + #manually adjusted for directional test\n#   labs(title = \"Model Estimate | Odds Ratio\",\n#        subtitle = \"\",\n#        x = \"Condition\")\n\n\n#EASYSTATS | MODEL | ODDS RATIO\nresult <- model_parameters(Bmm.cat.CrSQ, exponentiate = TRUE, component = \"all\")\nplot(result, show_intercept = TRUE, show_labels = TRUE) \n\n\n\n\n\nCODE\n# + theme_clean()\n\n# \n# result <- estimate_density(m,exponentiate = TRUE)\n# plot(result,  stack = FALSE, priors = TRUE)\n\n## | PLOT TESTS\nresult <- equivalence_test(m, rule = \"classic\", ci=0.9) #classic[tost], , bayes\nplot(result)\n\n\nPicking joint bandwidth of 0.0731\n\n\nWarning: Removed 5400 rows containing non-finite values (stat_density_ridges).\n\n\n\n\n\nCODE\nresult <- rope(m)\nplot(result)\n\n\n\n\n\nCODE\n(result <- pd(m,exponentiate = TRUE))\n\n\nProbability of Direction\n\nParameter                          |     pd\n-------------------------------------------\nmuother_Intercept                  |   100%\nmuangular_Intercept                |   100%\nmutriangular_Intercept             |   100%\nmuother_pretty_conditioncross      | 95.28%\nmuother_pretty_conditionarrow      | 55.37%\nmuangular_pretty_conditioncross    | 97.42%\nmuangular_pretty_conditionarrow    | 74.47%\nmutriangular_pretty_conditioncross | 87.92%\nmutriangular_pretty_conditionarrow | 99.57%\n\n\nCODE\nplot(result, show_intercept = TRUE, show_labels = TRUE)\n\n\n\n\n\nCODE\n## | PLOT PREDICTIONS\n\n#SJPLOT | MODEL | PROBABILITIES\n# plot_model(m, type=\"eff\",\n#            show.intercept = TRUE,\n#            show.values = TRUE,\n#            title = \"Model Prediction | Probability of Accurate Response\",\n#            axis.title = c(\"Condition\",\"Probability of Accurate Response\"))\n\n# #PLOT MODEL PREDICTION\nplot_model(m, type = \"pred\",\n           title = \"Model PREDICTION | Probability of Response Interpretation\",\n           axis.title = c(\"Condition\", \"Probability of Response Interpretation\"))\n\n\nNote: uncertainty of error terms are not taken into account. You may want to use `rstantools::posterior_predict()`.\n\n\n$pretty_condition\n\n\n\n\n\nCODE\n#TODO OUTPUT TABLE \n# modelsummary(m)\n\n\n\n\nCOMPARE\n\n\nCODE\n# compare_models(m.mbl1, mm.cat.CrSQ)\n\n\n\n\nDiagnostics\n\n\nCODE\n#CHECK Fit of posterior predictive to data\npp_check(Bmm.cat.CrSQ, ndraws=1000)\n\n\n\n\n\nCODE\n#CHECK posterior vs. priors\nresult <- estimate_density(Bmm.cat.CrSQ)\nplot(result, stack = FALSE, priors= TRUE)\n\n\n\n\n\nCODE\n#CHECK model\nplot(Bmm.cat.CrSQ)"
  }
]