{
  "hash": "d84ab7fdc9782a081811ab291940188d",
  "result": {
    "markdown": "---\nsubtitle: 'COMBINED | 3 Description'\n---\n\n\n\\newpage\n\n# Description {#sec-combined-description}\n\n**TODO**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Hmisc) # %nin% operator\nlibrary(janitor) #compare df cols \nlibrary(mosaic) #simple descriptives [favstats]\nlibrary(multimode) #test for multimodality\nlibrary(fitdistrplus) #fitting distributions\nlibrary(performance) #multimodality\nlibrary(kableExtra) #printing tables \nlibrary(vcd) #mosaicplots\nlibrary(ggpubr) #arrange plots\n\nlibrary(tidyverse) #ALL THE THINGS\n\n#OUTPUT OPTIONS\nlibrary(dplyr, warn.conflicts = FALSE)\noptions(dplyr.summarise.inform = FALSE)\noptions(ggplot2.summarise.inform = FALSE)\noptions(scipen=1, digits=3)\n\n#SET THEME\ntheme_set(theme_minimal())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(mbp)\n\n#IMPORT SUBJECTS \nsgc3a <- read_rds(\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants.rds\") %>% mutate(\n  study = \"SGC3A\"\n) #%>% dplyr::select(-absolute_score)\n\nsgc3b <- read_rds(\"analysis/SGC3B/data/2-scored-data/sgc3b_scored_participants.rds\") %>% mutate(\n  study = \"SGC3B\"\n) #%>% dplyr::select(-absolute_score)\n\nsgc4a <- read_rds(\"analysis/SGC4A/data/2-scored-data/sgc4a_scored_participants.rds\") %>% mutate(\n  study = \"SGC4A\",\n  pretty_mode = \"online-replication\"\n)\nsgc4b <- read_rds(\"analysis/SGC4B/data/2-scored-data/sgc4b_scored_participants.rds\") %>% mutate(\n  study = \"SGC4B\",\n  pretty_mode = \"online-replication\"\n)\n# TEMPORARY ONLY REPLACE WITH SCORED DATA \nsgc4c <- read_rds(\"analysis/SGC4C/data/0-session-level/sgc4c_participants.rds\") %>% mutate(\n  pretty_mode = \"online-replication\"\n)\nsgc5 <- read_rds(\"analysis/SGC5A/data/2-scored-data/sgc5_scored_participants.rds\") %>% mutate(\n  study = \"SGC5A\",\n  pretty_mode = \"online-replication\"\n) %>% dplyr::select(-absolute_score)\n\n#COMPARE DF COLUMNS\n# janitor::compare_df_cols(sgc3a, sgc3b, sgc4a, sgc4b, sgc5)\n#SGC5 HAS ABSOLUTE SCORE BUT THEY SHOULDN'T \n\n#MERGE \ndf_subjects <- rbind(sgc3a, sgc3b, sgc4a, sgc4b, sgc5)\n\n#IMPORT OSPAN DATA \nospan <- read_csv(\"analysis/combined/data/fall21_scored_ospan.csv\") %>% mutate(\n  subject = SUBJECTID\n)\n\n#MERGE OSPAN DATA WITH SGC DATA \ndf_ospan <- df_subjects %>% filter(\n  subject %in% ospan$subject\n)\n\ndf_ospan <- merge(df_ospan, ospan)\n\n#RENAME for reuse\ndf_all <- df_subjects\n# df_subjects <- df_ospan\n\n#RECODE other study control conditions to CONTROL\ndf <- df_all %>% mutate(\n  pretty_condition = recode_factor(pretty_condition, \"Orth-Full\" = \"control\",\n                                   \"point\" = \"control\")\n)\n\n#CLEANUP\n# rm(ospan, sgc3a, sgc4a, sgc4b, sgc5, df_ospan)\n\ntemp <- df_all %>% dplyr::select(s_NABS, condition, study, subject) %>% rename(score = s_NABS)\ntemp2 <- sgc4c %>% dplyr::select(absolute_score, condition, study, subject) %>% rename(score = \"absolute_score\")\ndf <- rbind(temp, temp2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(df$study, df$condition)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       \n        111 121 211 221 311 321 113 114 115 11111 1112 1113 11115 113112 111112\n  SGC3A 158 172   0   0   0   0   0   0   0     0    0    0     0      0      0\n  SGC3B 130 135  50  42  62  41   0   0   0     0    0    0     0      0      0\n  SGC4A 150   0   0   0   0   0 144  88  98     0    0    0     0      0      0\n  SGC4B   0   0   0   0   0   0   0   0   0    91   98   83     0      0      0\n  SGC4C   0   0   0   0   0   0   0   0   0     0    0    0     0     15     15\n  SGC5A   0   0   0   0   0   0   0   0   0     0    0    0   115      0      0\n```\n:::\n\n```{.r .cell-code}\npaste(\"Subjects: \", nrow(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Subjects:  1687\"\n```\n:::\n\n```{.r .cell-code}\npaste(\"unique subjects \",nrow(unique(df$subject)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"unique subjects  \"\n```\n:::\n\n```{.r .cell-code}\n#get list of unique subjects \nu <- df %>% dplyr::select(subject) %>% distinct() \nd <- df$subject %nin% u$subject\n\n#unique subjects\nu <- unique(df$subject)\n#duplicated subjects\nd <- df$subject[duplicated(df$subject)]\n\nlength(d) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 327\n```\n:::\n\n```{.r .cell-code}\nlength(u) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1360\n```\n:::\n\n```{.r .cell-code}\nlength(d) + length(u) == nrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\ndups <- df %>% filter(subject %in% d)\n\ntable(dups$study, dups$condition)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       \n        111 121 211 221 311 321 113 114 115 11111 1112 1113 11115 113112 111112\n  SGC3A 130 135   0   0   0   0   0   0   0     0    0    0     0      0      0\n  SGC3B 130 135   0   0   0   0   0   0   0     0    0    0     0      0      0\n  SGC4A  62   0   0   0   0   0   0   0   0     0    0    0     0      0      0\n```\n:::\n\n```{.r .cell-code}\n#TODO ... NEED TO RUN 4A CONTROL 62\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# HACK WD FOR LOCAL RUNNING?\nimac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\nmbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\nsetwd(mbp)\n\n#IMPORT SUBJECTS \nitems_sgc3a <- read_rds(\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items.rds\") %>% mutate(\n  study = \"SGC3A\"\n) #%>% dplyr::select(-absolute_score)\n\nitems_sgc3b <- read_rds(\"analysis/SGC3B/data/2-scored-data/sgc3b_scored_items.rds\") %>% mutate(\n  study = \"SGC3B\"\n) \n\nitems_sgc4a <- read_rds(\"analysis/SGC4A/data/2-scored-data/sgc4a_scored_items.rds\") %>% mutate(\n  study = \"SGC4A\",\n  pretty_mode = \"online-replication\"\n)\n\nitems_sgc4b <- read_rds(\"analysis/SGC4B/data/2-scored-data/sgc4b_scored_items.rds\") %>% mutate(\n  pretty_mode = \"online-replication\"\n) %>% dplyr::select(-answer)\n\n##TEMPORARY \nitems_sgc4c <- read_rds(\"analysis/SGC4C/data/0-session-level/sgc4c_items.rds\") %>% mutate(\n  pretty_mode = \"online-replication\"\n) %>% dplyr::select(-answer)\n\n\nitems_sgc5 <- read_rds(\"analysis/SGC5A/data/2-scored-data/sgc5_scored_items.rds\") %>% mutate(\n  study = \"SGC5A\",\n  pretty_mode = \"online-replication\"\n) %>% dplyr::select(-answer)\n# \n# #COMPARE DF COLUMNS\n# # janitor::compare_df_cols(sgc3a, sgc3b, sgc4a, sgc4b, sgc5)\n# #SGC5 HAS ABSOLUTE SCORE BUT THEY SHOULDN'T \n# \n# #MERGE \ndf_items <- rbind(items_sgc3a, items_sgc3b, items_sgc4a, items_sgc4b, items_sgc5)\n\n#RECODE other study control conditions to CONTROL\ndf_items <- df_items %>% mutate(\n  pretty_condition = recode_factor(pretty_condition, \"Orth-Full\" = \"control\",\n                                   \"point\" = \"control\")\n)\n\n\n# #TODO FIGURE OUT DUPLICATES\n# #IMPORT SCORING FUNCTIONS\n# # source(\"analysis/utils/scoring.R\")\n# \n# progress_Absolute <- function(items){\n#   \n#   #filter for valid items\n#   x <- items %>% filter(q %nin% c(6,9)) %>% dplyr::select(subject, pretty_condition, q,score_niceABS) \n#   \n#   #pivot wider\n#   wide <- x %>% pivot_wider(names_from=q, names_glue = \"q_{q}\", values_from = score_niceABS)\n#   \n#   #calc stepwise cumulative score\n#   wide$c1 = wide$q_1\n#   wide$c2 = wide$c1 + wide$q_2\n#   wide$c3 = wide$c2 + wide$q_3\n#   wide$c4 = wide$c3 + wide$q_4\n#   wide$c5 = wide$c4 + wide$q_5\n#   wide$c6 = wide$c5 + wide$q_7\n#   wide$c7 = wide$c6 + wide$q_8\n#   wide$c8 = wide$c7 + wide$q_10\n#   wide$c9 = wide$c8 + wide$q_11\n#   wide$c10 = wide$c9 + wide$q_12\n#   wide$c11 = wide$c10 + wide$q_13\n#   wide$c12 = wide$c11 + wide$q_14\n#   wide$c13 = wide$c12 + wide$q_15\n#   wide <- wide %>% dplyr::select(subject, pretty_condition,c1,c2,c3,c4,c5,c6, c7,c8,c9, c10,c11,c12,c13)\n#   \n#   #lengthen \n#   df_absolute_progress <- wide %>% pivot_longer(cols= c1:c13, names_to = \"question\", names_pattern = \"c(.*)\", values_to = \"score\")\n#   df_absolute_progress$question <- as.integer(df_absolute_progress$question)\n#   \n#   #cleanup \n#   rm(x,wide)\n#   \n#   return(df_absolute_progress)\n# }\n# \n# \n# #GET ABSOLUTE PROGRESS \n# df_absolute_progress <- progress_Absolute(df_items %>% filter(pretty_condition==\"control\"))\n# \n# #GET SCALED PROGRESS\n# df_scaled_progress <- progress_Scaled(df_items)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# gf_boxplot(s_NABS ~ pretty_condition, data = df_all)\n# gf_boxplot(absolute_score ~ pretty_condition, data=sgc4c )\n\ndf <- df_items %>% dplyr::select(score_niceABS, pretty_condition) %>% rename(correct=score_niceABS)\nd2 <- items_sgc4c %>% dplyr::select(correct, pretty_condition) \n\ndf <- rbind(df, d2)\n\ngf_props(~correct, fill = ~pretty_condition, data = df) %>% \n  gf_facet_wrap(pretty_condition ~ .)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n### COMBINED\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggdist)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggdist' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ggdist'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:ggridges':\n\n    scale_point_color_continuous, scale_point_color_discrete,\n    scale_point_colour_continuous, scale_point_colour_discrete,\n    scale_point_fill_continuous, scale_point_fill_discrete,\n    scale_point_size_continuous\n```\n:::\n\n```{.r .cell-code}\ngf_boxplot( s_NABS ~ pretty_condition, color = ~pretty_condition, data = df_all) +\n  labs(title = \"Distribution of ABSOLUTE Score by Condition\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_boxplot(s_SCALED~ pretty_condition, color = ~pretty_condition, data = df_all) +\n  labs(title = \"Distribution of SCALED Score by Condition\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#GGDIST HALFEYE\nggplot(df_all, aes(y = pretty_condition, x = s_NABS,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    point_interval = \"mean_qi\"\n    # side = \"left\",\n    # justification = 1.1,\n    # width = 1, \n    # point_colour = NA\n   ) + labs (\n     title = \"Distribution of Absolute Score by Condition\",\n     x = \"Total Absolute Score\"\n   ) + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#DENSITY RIDGES BINLINE\nggplot(df_all, aes(x = DV_percent_NABS, y = pretty_condition, height=stat(density))) +\n  # geom_density_ridges( stat = \"density\",alpha = 0.7)\n  geom_density_ridges( alpha = 0.7, stat = \"binline\", bins = 20,   scale = 0.75, draw_baseline = FALSE) +\n  labs(title = \"Distribution of ABSOLUTE Score by Condition\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-6-4.png){width=672}\n:::\n\n```{.r .cell-code}\n#DENSITY RIDGES SMOOTH\nggplot(df_all, aes(x = DV_percent_NABS, y = pretty_condition, fill=pretty_condition)) +\n  xlim(0,1) + \n  stat_density_ridges( scale = 0.75, stat = \"density\", jittered_points = TRUE, \n        position = position_points_jitter(width = 0.05, height = 0),\n        point_shape = '|', point_size = 2, point_alpha = 1, alpha = 0.7) +\n  labs(title = \"Distribution of ABSOLUTE Score by Condition\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Ignoring unknown parameters: stat\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nPicking joint bandwidth of 0.0623\n```\n:::\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-6-5.png){width=672}\n:::\n:::\n\n## RESPONSE ACCURACY\n\n### Subject Level Scores\n\nSubject level scores summarize the the response accuracy by a particular participant across all discriminant items in the graph comprehension task.\n\n#### Absolute Score\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL ABSOLUTE\n  gf_props(~s_NABS, data = df_all) + \n  labs(x = \"number of correct responses \",\n       y = \"% of subjects\",\n       title = \"Distribution of Absolute Score \",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-ABS-TEST-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_all, x = \"s_NABS\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of Absolute Score\",\n        subtitle =\"Pattern of response is similar across data collection modes but differs by condition\",\n        x = \"Total Absolute Score\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-ABS-TEST-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_all, aes(x = pretty_condition, y = s_NABS,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_NABS),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_NABS, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Absolute Score \",\n    x = \"Condition\", y = \"Total Absolute Score\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-ABS-TEST-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_all, aes(item_test_NABS)) + \n  stat_ecdf(geom = \"step\") + \n  facet_wrap(pretty_condition~.) + \n  labs( title = \"Empirical Cumulative Density Function — Absolute Score \",\n        x = \"Total Absolute Score [0,13]\", \n        y = \"Cumulative Probability\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-ABS-TEST-4.png){width=672}\n:::\n:::\n\n\n\n#### Scaled Scores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL SCALED\ngf_props(~s_SCALED, data = df_all) +\n  labs(x = \"total scaled score\",\n       y = \"% of subjects\",\n       title = \"Distribution of Scaled Score \",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-SCALED-TEST-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_all, x = \"s_SCALED\",binwidth=1,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\")) + \n  labs( title = \"Distribution of Scaled Score\",\n        subtitle =\"Pattern of response is similar across data collection modes but differs by condition\",\n        x = \"total scaled score (test phase)\", y = \"number of participants\") + \n theme_minimal() + theme(legend.position = \"blank\") \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-SCALED-TEST-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_all, aes(x = pretty_condition, y = s_SCALED,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_SCALED),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_SCALED, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Scaled Score \",\n    x = \"Condition\", y = \"Total Absolute Score (Test Phase)\") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-SCALED-TEST-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_all, aes(s_SCALED)) + \n  stat_ecdf(geom = \"step\") + \n  facet_wrap(~pretty_condition) + \n  labs( title = \"Empirical Cumulative Density Function — Scaled Score\",\n        x = \"Test Phase Scaled Score [-8,8]\", \n        y = \"Cumulative Probability\") \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-SCALED-TEST-4.png){width=672}\n:::\n:::\n\n\n\n### First Item Scores\n\nNext we consider the response accuracy on *just* the first question of the graph comprehension task: a subject's first exposure to the TM graph.\n\n#### First Item Absolute Score\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#PROPORTIONAL BAR CHART\ngf_props(~item_q1_NABS, data = df_all) +\n  labs(x = \"response accuracy\",\n       y = \"% subjects\",\n       title = \"Proportion of Correct Responses on First Item\",\n       subtitle=\"\")+\n  theme(legend.position = \"none\")+theme_ggdist()\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-FIRST-ABSOLUTE-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#PROPORTIONAL BAR CHART\ngf_props(~item_q1_NABS, data = df_all, fill = ~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) +\n  labs(x = \"response accuracy\",\n       title = \"Proportion of Correct Responses on First Item (by Modality and Condition)\",\n       subtitle=\"\")+\n  theme(legend.position = \"none\") \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-FIRST-ABSOLUTE-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#MOSAIC PLOT\n# vcd::mosaic(main=\"Proportion of Correct Responses on First Item\",\n#             data = df_all, pretty_condition ~ item_q1_NABS, rot_labels=c(0,90,0,0), \n#             offset_varnames = c(left = 4.5), offset_labels = c(left = -0.5),just_labels = \"right\",\n#             spacing = spacing_dimequal(unit(1:2, \"lines\"))) \n```\n:::\n\n\n#### First Item Scaled Score\n\nAt the item level, the scaled score gives us a numeric measure of correctness of interpretation, ranging from -1 to 1. (note: we evaluate scaled_score on the first item rather than interpretation, because no orthogonal interpretation is available in the impasse condition)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#GGFORMULA | PROPORTIONAL HISTOGRAM SUBJECT FIRST SCALED\ngf_props(~item_q1_SCALED, data = df_all) +\n  labs(x = \"scaled score (first item)\",\n       y = \"% of subjects\",\n       title = \"Distribution of First Item Scaled Score\",\n       subtitle = \"\") \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-FIRST-SCALED-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_all, x = \"item_q1_SCALED\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\")) + \n  labs( title = \"Distribution of First Item Scaled Score (by Mode and Condition)\",\n        subtitle =\"Impasse condition yields more intermediate scores (indicating uncertainty)\",\n        x = \"scaled score (firt item) \", y = \"number of participants\") + \n  theme_minimal() + theme(legend.position = \"blank\") \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-FIRST-SCALED-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGFORMULA | HIST+DENSITY SCORE BY CONDITION/MODE\n# stats = df_subjects %>% group_by(pretty_condition, mode) %>% dplyr::summarise(mean = mean(item_q1_SCALED))\n# gf_density(~item_q1_SCALED, data = df_subjects) %>%\n#   gf_facet_grid(pretty_condition~mode, labeller = label_both) %>%\n#   gf_lims(x = c(-1, 1)) %>%\n#   gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n# labs( title = \"Distribution of First Item Scaled Score (by Mode and Condition)\",\n#         subtitle =\"Pattern of response is the same across data collection modes but differs by condition\",\n#         x = \"scaled score (firt item) \", y = \"number of participants\") + \n#   theme_minimal()\n```\n:::\n\n\n### Interpretation Scores\n\nTODO IMPORT ITEMS\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# #PROPORTIONAL BAR CHART\n# gf_propsh(~interpretation, data = df_items, fill = ~pretty_condition) %>% \n#   gf_facet_grid(pretty_condition~pretty_mode) +\n#   labs(x = \"% of items\",\n#        title = \"Proportion of Interpretations Across Items\",\n#        subtitle=\"Impasse Condition yields shift from Orthogonal to alternative interpretations\")+\n#   theme(legend.position = \"none\")\n\n\n#MOSAIC PLOT\n# vcd::mosaic(main=\"Proportion of Interpretations across Conditions\",\n#             data = df_items, pretty_condition ~ interpretation, rot_labels=c(0,90,0,0), \n#             offset_varnames = c(left = 4.5), offset_labels = c(left = -0.5),just_labels = \"right\",\n#             spacing = spacing_dimequal(unit(1:2, \"lines\"))) \n```\n:::\n\n\n\n### Cumulative Task Performance\n\n**TODO CALC CUMULATIVE PERFORAMNCE OVER ALL ITEMS**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# #VISUALIZE progress over time ABSOLUTE score \n# ggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n#  geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n#  facet_wrap(~pretty_condition) + \n#  labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n#  scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n#  theme_minimal() + theme(legend.position = \"blank\")\n# \n# #VISUALIZE progress over time SCALED score \n# ggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n#  geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n#  facet_wrap(~pretty_condition) + \n#  labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n#  scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n#  theme_minimal() + theme(legend.position = \"blank\")\n```\n:::\n\n\n\n## RESPONSE LATENCY\n\n### Time on First Item \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#HISTOGRAM\ngf_dhistogram(~item_q1_rt, data = df_all) %>%\n  # gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of First Item Response Time (seconds)\", subtitle = \"fit by gamma distribution\", x = \"First Item Response Time (seconds)\", y = \"% items\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n```\n:::\n\n::: {.cell-output-display}\n![](combined_files/figure-html/label - VIS-FIRSTTIMEmessage - falsewarning - false-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_all, x = \"item_q1_rt\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of First Item Response Time (seconds)\",\n        subtitle =\"\",\n        x = \"First Item Response Time (seconds)\", y = \"number of items\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/label - VIS-FIRSTTIMEmessage - falsewarning - false-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#recode as boolean correct\ndf_subjects <- df_subjects %>% mutate(\n  item_q1_NABS = as.logical(item_q1_NABS)\n)\n\n##RAINCLOUD USING GGDISTR\nggplot(df_all, aes(x = pretty_condition, y = item_q1_rt, color = item_q1_NABS) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .1\n  )) + \n  labs( title = \"Distribution of First Item Response Time (seconds)\",\n        subtitle =\"\",\n        y = \"First Item Response Time (s)\", x = \"Condition\") +\n  theme_ggdist() \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/label - VIS-FIRSTTIMEmessage - falsewarning - false-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# + theme(legend.position = \"blank\")\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n```\n:::\n\n\n### Time on Item \n\n\n**TODO**\n\n::: {.cell}\n\n```{.r .cell-code}\n# \n# #HISTOGRAM\n# gf_dhistogram(~rt_s, data = df_items) %>%\n#   gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n#   gf_fitdistr(dist=\"gamma\", color=\"red\")+\n#   labs(title=\"Distribution of Item Response Time (seconds)\", \n#        subtitle = \"fit by gamma distribution\", x = \"Item Response Time (seconds)\", y = \"% items\") \n# \n# \n# ##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\n# p <- gghistogram(df_items, x = \"rt_s\", binwidth = 0.5,\n#    add = \"mean\", rug = TRUE,\n#    fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n#    add_density = TRUE)\n# facet(p, facet.by=c(\"pretty_condition\",\"pretty_mode\")) +\n#   labs( title = \"Distribution of Item Response Time (seconds)\",\n#         subtitle =\"\",\n#         x = \"Item Response Time (seconds)\", y = \"number of items\") +\n#   theme_minimal() + theme(legend.position = \"blank\")\n# \n# \n# #recode as boolean correct\n# df_items <- df_items %>% mutate(\n#   score_niceABS = as.logical(score_niceABS)\n# )\n# \n# ##RAINCLOUD USING GGDISTR\n# ggplot(df_items, aes(x = pretty_condition, y = rt_s, color = score_niceABS) ) + \n#   ggdist::stat_halfeye(\n#     side = \"left\",\n#     # position = position_dodgejust(),\n#     justification = 1.5, \n#     # adjust = .5, \n#     width = .5, \n#     .width = 0, \n#     point_colour = NA) + \n#   geom_boxplot(\n#     width = .15, \n#     outlier.shape = NA,\n#     position = position_dodge2()\n#   ) +\n#   geom_point(\n#     size = 1.3,\n#     alpha = .3,\n#     position = position_jitterdodge(\n#       # seed = 1,\n#       dodge.width = 0.5,\n#       jitter.width = 0.075\n#   )) +\n#   labs( title = \"Distribution of Item Response Time (seconds)\",\n#         subtitle =\"\",\n#         y = \"Item Response Time (s)\", x = \"Condition\") +\n#   theme_ggdist() \n# # + theme(legend.position = \"blank\")\n# # + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n```\n:::\n\n\n### Time on SCAFFOLD Phase\n\nHere we consider _just_ the time spent on the first five items of the task (the scaffold phase).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#HISTOGRAM\ngf_dhistogram(~item_scaffold_rt, data = df_all) %>%\n  # gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of SCAFFOLD Phase Response Time (minutes)\", subtitle = \"fit by gamma distribution\", x = \"Scaffold Phase Time (minutes)\", y = \"% subjects\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n```\n:::\n\n::: {.cell-output-display}\n![](combined_files/figure-html/label - VIS-SCAFFOLDTIMEmessage - falsewarning - false-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_all, x = \"item_scaffold_rt\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of SCAFFOLD Phase Response Time (minutes)\",\n        subtitle =\"\",\n        x = \"Scaffold Phase Time (minutes)\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/label - VIS-SCAFFOLDTIMEmessage - falsewarning - false-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_all, aes(x = pretty_condition, y = item_scaffold_rt, fill = pretty_condition)) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_scaffold_rt),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = item_scaffold_rt, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  ))+ labs( title = \"Distribution of SCAFFOLD Phase Response Time (minutes)\",\n        subtitle =\"\",\n        y = \"Total Study Time (minutes)\", x = \"Condition\") +\n  theme_ggdist() + theme(legend.position = \"blank\") #+\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/label - VIS-SCAFFOLDTIMEmessage - falsewarning - false-3.png){width=672}\n:::\n\n```{.r .cell-code}\n  # coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n```\n:::\n\n\n\n## EXPLORING RELATIONSHIPS\n\n### ACCURACY (VS) LATENCY\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ rt_m, data = df_all, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by Total Item Response Time\",\n    subtitle = \"\", \n    x = \"Total Item Response Time (minutes)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_avg_rt, data = df_all, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by Average Item Response Time\",\n    subtitle = \"\", \n    x = \"Average Item Response Time (seconds)\", y = \"Total Scaled Score\"\n  ) + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-16-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_scaffold_rt, data = df_all, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by SCAFFOLD PHASE Item Response Time\",\n    subtitle = \"\", \n    x = \"SCAFFOLD PHASE Item Response Time (minutes)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-16-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_max_rt, data = df_all %>% filter(item_max_rt < 400), alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by MAX Item Response Time\",\n    subtitle = \"\", \n    x = \"MAX Item Response Time (s)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-16-4.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# \n# q.stats <- df_items %>% filter(q != 6) %>% dplyr::group_by(q, pretty_condition, score_niceABS) %>% summarise(\n#   m = mean(rt_s),\n#   sd = sd(rt_s),\n#   group = paste(pretty_condition,\"-\",score_niceABS)\n# )\n# \n# gf_line( m ~ as.factor(q), group = ~group,  color = ~score_niceABS,data = q.stats) %>% \n#   gf_point() %>% \n#   gf_facet_wrap(~pretty_condition) + scale_color_manual(values=c(\"red\",\"green\")) + \n#   labs(title = \"Average ITEM response time by condition\",\n#        subtitle = \"Correct responses are generally faster [computational efficiency] except on Q1 [learning]\",\n#        x = \"Question\", y = \"Averate Item Response Time\", color=\"Correct Response\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# \n# q.stats <- df_items %>% filter(q != 6) %>% dplyr::group_by(q, pretty_condition, interpretation) %>% summarise(\n#   m = mean(rt_s),\n#   sd = sd(rt_s),\n#   group = paste(pretty_condition,\"-\",score_SCALED)\n# )\n# \n# gf_line( m ~ as.factor(q), group = ~group,  color = ~interpretation,data = q.stats) %>% \n#   gf_point() %>% \n#   gf_facet_wrap(~pretty_condition) + #+ scale_color_manual(values=c(\"red\",\"green\")) + \n#   labs(title = \"Average ITEM response time by condition\",\n#        subtitle = \"Correct responses are generally faster [computational efficiency] except on Q1 [learning]\",\n#        x = \"Question\", y = \"Averate Item Response Time\", color=\"Interpretation\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# \n# x <- df_items %>% filter(q %nin% c(6,9)) %>% dplyr::group_by(subject) %>% mutate(\n#                             total = sum(score_niceABS),\n#                             perf = as.factor(total < 5),\n#                             perf = recode(perf, \"FALSE\"=\"high-scoring\", \"TRUE\"=\"low-scoring\")) %>% ungroup()\n# \n# gf_line( rt_s ~ as.factor(q), group = ~subject, color = ~interpretation, data = x) %>% \n#   gf_facet_grid(pretty_condition ~ perf)+ scale_x_discrete(labels = c(1 , 2,  3,  4,  5,  7,  8, 10, 11, 12, 13, 14, 15))+ labs(\n#     title = \"Response Time (s) by Question [facet by score <5]\"\n#   )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot( item_avg_rt ~ pretty_condition,  data = df_all) +\n  labs(title = \"Average item response time by mode and condition\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_boxplot( item_scaffold_rt ~ pretty_condition,  data = df_all) +\n  labs(title = \"Average SCAFFOLD response time by mode and condition\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-20-2.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_boxplot( item_test_rt ~ pretty_condition,  data = df_all) +\n  labs(title = \"Average TEST response time by mode and condition\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-20-3.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_boxplot( totaltime_m ~ pretty_condition,  data = df_all) +\n  labs(title = \"Average TOTAL response time by mode and condition\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-20-4.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_boxplot( item_q1_rt ~ pretty_condition,  data = df_all) %>% \n  gf_jitter(width=0.2, alpha = 0.5, size = 0.75, color = ~item_q1_NABS) +\n  labs(title = \"Average FIRST ITEM response time by mode and condition\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-20-5.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## MODELS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(report)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'report' was built under R version 4.1.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(see)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'see' was built under R version 4.1.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(generics)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'generics' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'generics'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    explain\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    as.difftime, as.factor, as.ordered, intersect, is.element, setdiff,\n    setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(modelr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'modelr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:performance':\n\n    mae, mse, rmse\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:mosaic':\n\n    resample\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggformula':\n\n    na.warn\n```\n:::\n\n```{.r .cell-code}\nlibrary(distributional)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'distributional' was built under R version 4.1.2\n```\n:::\n\n```{.r .cell-code}\n## A GIANT MODEL\nm <- lm(DV_percent_NABS ~ pretty_condition, data = df_all)\nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = DV_percent_NABS ~ pretty_condition, data = df_all)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-0.816 -0.187 -0.130  0.107  0.899 \n\nCoefficients:\n                            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                   0.1867     0.0195    9.58  < 2e-16 ***\npretty_conditionimpasse       0.1887     0.0271    6.95  5.2e-12 ***\npretty_condition211           0.4502     0.0507    8.88  < 2e-16 ***\npretty_condition221           0.5679     0.0546   10.39  < 2e-16 ***\npretty_condition311           0.6297     0.0463   13.60  < 2e-16 ***\npretty_condition321           0.6407     0.0552   11.60  < 2e-16 ***\npretty_conditionOrth-Full    -0.0180     0.0333   -0.54    0.589    \npretty_conditionOrth-Sparse   0.0152     0.0403    0.38    0.706    \npretty_conditionTri-Sparse    0.0580     0.0338    1.72    0.086 .  \npretty_conditionOrth-Grid    -0.0854     0.0387   -2.21    0.027 *  \npretty_conditionpoint        -0.0354     0.0398   -0.89    0.374    \npretty_conditionarrow         0.0747     0.0387    1.93    0.054 .  \npretty_conditioncross        -0.0069     0.0412   -0.17    0.867    \npretty_conditionpoint-click  -0.0563     0.0365   -1.54    0.123    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.331 on 1643 degrees of freedom\nMultiple R-squared:  0.256,\tAdjusted R-squared:  0.25 \nF-statistic: 43.5 on 13 and 1643 DF,  p-value: <2e-16\n```\n:::\n\n```{.r .cell-code}\nreport(m)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 methods overwritten by 'effectsize':\n  method              from      \n  standardize.Surv    datawizard\n  standardize.bcplm   datawizard\n  standardize.clm2    datawizard\n  standardize.default datawizard\n  standardize.mediate datawizard\n  standardize.wbgee   datawizard\n  standardize.wbm     datawizard\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nWe fitted a linear model (estimated using OLS) to predict DV_percent_NABS with pretty_condition (formula: DV_percent_NABS ~ pretty_condition). The model explains a statistically significant and moderate proportion of variance (R2 = 0.26, F(13, 1643) = 43.47, p < .001, adj. R2 = 0.25). The model's intercept, corresponding to pretty_condition = control, is at 0.19 (95% CI [0.15, 0.22], t(1643) = 9.58, p < .001). Within this model:\n\n  - The effect of pretty condition [impasse] is statistically significant and positive (beta = 0.19, 95% CI [0.14, 0.24], t(1643) = 6.95, p < .001; Std. beta = 0.49, 95% CI [0.35, 0.63])\n  - The effect of pretty condition [211] is statistically significant and positive (beta = 0.45, 95% CI [0.35, 0.55], t(1643) = 8.88, p < .001; Std. beta = 1.18, 95% CI [0.92, 1.44])\n  - The effect of pretty condition [221] is statistically significant and positive (beta = 0.57, 95% CI [0.46, 0.68], t(1643) = 10.39, p < .001; Std. beta = 1.49, 95% CI [1.21, 1.77])\n  - The effect of pretty condition [311] is statistically significant and positive (beta = 0.63, 95% CI [0.54, 0.72], t(1643) = 13.60, p < .001; Std. beta = 1.65, 95% CI [1.41, 1.89])\n  - The effect of pretty condition [321] is statistically significant and positive (beta = 0.64, 95% CI [0.53, 0.75], t(1643) = 11.60, p < .001; Std. beta = 1.68, 95% CI [1.39, 1.96])\n  - The effect of pretty condition [Orth-Full] is statistically non-significant and negative (beta = -0.02, 95% CI [-0.08, 0.05], t(1643) = -0.54, p = 0.589; Std. beta = -0.05, 95% CI [-0.22, 0.12])\n  - The effect of pretty condition [Orth-Sparse] is statistically non-significant and positive (beta = 0.02, 95% CI [-0.06, 0.09], t(1643) = 0.38, p = 0.706; Std. beta = 0.04, 95% CI [-0.17, 0.25])\n  - The effect of pretty condition [Tri-Sparse] is statistically non-significant and positive (beta = 0.06, 95% CI [-8.26e-03, 0.12], t(1643) = 1.72, p = 0.086; Std. beta = 0.15, 95% CI [-0.02, 0.33])\n  - The effect of pretty condition [Orth-Grid] is statistically significant and negative (beta = -0.09, 95% CI [-0.16, -9.57e-03], t(1643) = -2.21, p = 0.027; Std. beta = -0.22, 95% CI [-0.42, -0.03])\n  - The effect of pretty condition [point] is statistically non-significant and negative (beta = -0.04, 95% CI [-0.11, 0.04], t(1643) = -0.89, p = 0.374; Std. beta = -0.09, 95% CI [-0.30, 0.11])\n  - The effect of pretty condition [arrow] is statistically non-significant and positive (beta = 0.07, 95% CI [-1.19e-03, 0.15], t(1643) = 1.93, p = 0.054; Std. beta = 0.20, 95% CI [-3.12e-03, 0.39])\n  - The effect of pretty condition [cross] is statistically non-significant and negative (beta = -6.90e-03, 95% CI [-0.09, 0.07], t(1643) = -0.17, p = 0.867; Std. beta = -0.02, 95% CI [-0.23, 0.19])\n  - The effect of pretty condition [point-click] is statistically non-significant and negative (beta = -0.06, 95% CI [-0.13, 0.02], t(1643) = -1.54, p = 0.123; Std. beta = -0.15, 95% CI [-0.33, 0.04])\n\nStandardized parameters were obtained by fitting the model on a standardized version of the dataset. 95% Confidence Intervals (CIs) and p-values were computed using the Wald approximation.\n```\n:::\n\n```{.r .cell-code}\ncheck_model(m)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##UNCERTAINTY ESTIMATES OF THE MODEL \ndf_all %>%\n  data_grid(pretty_condition) %>%\n  augment(m, newdata = ., se_fit = TRUE) %>%\n  ggplot(aes(y = pretty_condition)) +\n  stat_halfeye(\n    aes(xdist = dist_student_t(df = df.residual(m), mu = .fitted, sigma = .se.fit)), \n    scale = .5\n  ) +\n  # we'll add the data back in too (scale = .5 above adjusts the halfeye height so\n  # that the data fit in as well)\n  geom_point(aes(x = DV_percent_NABS), data = df_all, pch = \"|\", size = 2, position = position_nudge(y = -.15)) +\n  labs(\n    title = \"Regression Model | Predicted Conditional Means\",\n    caption = \" % Correct ~ Condition; halfeye estimated using student's t centered at model predicted mean with SE\"\n  )\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-21-2.png){width=672}\n:::\n:::\n\n\n\n### OSPAN \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"OSPAN Participants by Condition\"\ncols = c(\"Condition\",\"n\")\ncont <- table(df_ospan$pretty_condition)\ncont %>%  addmargins() %>% kbl(caption = title, col.names = cols) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>OSPAN Participants by Condition</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Condition </th>\n   <th style=\"text-align:right;\"> n </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> control </td>\n   <td style=\"text-align:right;\"> 130 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> impasse </td>\n   <td style=\"text-align:right;\"> 136 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 211 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 221 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 311 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 321 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Orth-Full </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Orth-Sparse </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tri-Sparse </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Orth-Grid </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> point </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> arrow </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> cross </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> point-click </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sum </td>\n   <td style=\"text-align:right;\"> 292 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n**TODO OSPAN description**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"Descriptive Statistics of OSPAN Task Accuracy\"\nospan.stats <- rbind(\n  \"MATH\" = df_ospan %>% dplyr::select(math_acc) %>% unlist() %>% favstats(),\n  \"ORDER\" = df_ospan %>%  dplyr::select(order_acc) %>% unlist() %>% favstats(),\n  \"WEIGHTED\" = df_ospan %>% dplyr::select(weighted) %>% unlist() %>% favstats()\n  \n) \nospan.stats %>% kbl (caption = title) %>% kable_classic() %>% \n  footnote(general = \"MATH = %correct of all math questions; \n           ORDER = % correct of OSPAN ordering (out of 30); WEIGHTED = math*ospan number correct\", general_title = \"Note: \",footnote_as_chunk = T) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;border-bottom: 0;'>\n<caption>Descriptive Statistics of OSPAN Task Accuracy</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> Q1 </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> Q3 </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> missing </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> MATH </td>\n   <td style=\"text-align:right;\"> 0.517 </td>\n   <td style=\"text-align:right;\"> 0.897 </td>\n   <td style=\"text-align:right;\"> 0.931 </td>\n   <td style=\"text-align:right;\"> 0.966 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0.924 </td>\n   <td style=\"text-align:right;\"> 0.084 </td>\n   <td style=\"text-align:right;\"> 292 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ORDER </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n   <td style=\"text-align:right;\"> 0.533 </td>\n   <td style=\"text-align:right;\"> 0.733 </td>\n   <td style=\"text-align:right;\"> 0.875 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0.682 </td>\n   <td style=\"text-align:right;\"> 0.256 </td>\n   <td style=\"text-align:right;\"> 292 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WEIGHTED </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n   <td style=\"text-align:right;\"> 13.991 </td>\n   <td style=\"text-align:right;\"> 20.741 </td>\n   <td style=\"text-align:right;\"> 24.871 </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 19.179 </td>\n   <td style=\"text-align:right;\"> 7.465 </td>\n   <td style=\"text-align:right;\"> 292 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<span style=\"font-style: italic;\">Note: </span> <sup></sup> MATH = %correct of all math questions; <br>           ORDER = % correct of OSPAN ordering (out of 30); WEIGHTED = math*ospan number correct</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\n\nFor (online) OSPAN weighted scores (n = 292) range from 0 to 30 with a mean score of (M = 19.18, SD = 7.46).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#GGFORMULA | DENSITY HISTOGRAM \n  gf_dhistogram(~weighted, data = df_ospan) + \n  labs(x = \"OSPAN (weighted) score\",\n       y = \"% of subjects\",\n       title = \"Distribution of OSPAN SCORE\",\n       subtitle = \"\") \n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-OSPAN-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_ospan, x = \"weighted\", binwidth = 1,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of OSPAN Score\",\n        subtitle =\"The Distribution of OSPAN scores is similar across conditions\",\n        x = \"OSPAN (weighted) score\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-OSPAN-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_ospan, aes(weighted)) + \n  stat_ecdf() + \n  facet_wrap(~pretty_condition) + \n  labs( title = \"Empirical Cumulative Density Function — OSPAN\",\n        x = \"OSPAN (weighted) score\", \n        y = \"Cumulative Probability\") + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/VIS-SUBJ-OSPAN-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#IXN PLOT\n\n# ospan.stats <- favstats(weighted, groups = condition)\n```\n:::\n\n\n\n#### MODELS\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#CONDITION ONLY MODEL\nm1 <- lm( item_test_SCALED ~ condition, data = df_ospan)\nsummary(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = item_test_SCALED ~ condition, data = df_ospan)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -6.86  -3.38  -2.05   3.62  12.62 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    -4.623      0.501   -9.23  < 2e-16 ***\ncondition121    3.483      0.701    4.97  1.1e-06 ***\ncondition211   12.023      2.603    4.62  5.8e-06 ***\ncondition221   11.350      1.794    6.33  9.6e-10 ***\ncondition311    6.290      3.336    1.89     0.06 .  \ncondition321   10.480      2.216    4.73  3.6e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.71 on 286 degrees of freedom\nMultiple R-squared:  0.227,\tAdjusted R-squared:  0.214 \nF-statistic: 16.8 on 5 and 286 DF,  p-value: 1.39e-14\n```\n:::\n\n```{.r .cell-code}\n#OSPAN ONLY MODEL\nm2 <- lm( item_test_SCALED ~ weighted, data = df_ospan)\nsummary(m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = item_test_SCALED ~ weighted, data = df_ospan)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -6.50  -5.59  -3.62   7.96  10.97 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)  -3.0234     1.0410    -2.9    0.004 **\nweighted      0.0507     0.0506     1.0    0.317   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.44 on 290 degrees of freedom\nMultiple R-squared:  0.00345,\tAdjusted R-squared:  1.2e-05 \nF-statistic:    1 on 1 and 290 DF,  p-value: 0.317\n```\n:::\n\n```{.r .cell-code}\n#STANDARDIZE OSPAN\ndf_ospan$z_ospan = zscore(df_ospan$weighted)\nhistogram(df_ospan$z_ospan)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#OSPAN MEDIAN SPLIT\nmed_ospan = median(df_ospan$weighted)\ndf_ospan$low_ospan <- as.factor(df_ospan$weighted < med_ospan)\n\n#STANDARDIZED OSPAN ONLY MODEL\nm3 <- lm( item_test_SCALED ~ low_ospan, data = df_ospan)\nsummary(m3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = item_test_SCALED ~ low_ospan, data = df_ospan)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -6.71  -5.19  -3.19   7.79  10.81 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)  \n(Intercept)      -1.29       0.53   -2.44    0.015 *\nlow_ospanTRUE    -1.51       0.75   -2.02    0.045 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.41 on 290 degrees of freedom\nMultiple R-squared:  0.0138,\tAdjusted R-squared:  0.0104 \nF-statistic: 4.07 on 1 and 290 DF,  p-value: 0.0445\n```\n:::\n\n```{.r .cell-code}\n#MULTIPLE WITH STANDARDIZED OSPAN\nmr <- lm(item_test_SCALED ~ condition + low_ospan, data = df_ospan)\nsummary(mr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = item_test_SCALED ~ condition + low_ospan, data = df_ospan)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -7.51  -3.98  -2.13   4.22  13.24 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     -4.020      0.598   -6.72  9.9e-11 ***\ncondition121     3.529      0.698    5.05  7.8e-07 ***\ncondition211    11.665      2.600    4.49  1.1e-05 ***\ncondition221    11.304      1.787    6.33  9.6e-10 ***\ncondition311     6.503      3.324    1.96    0.051 .  \ncondition321    10.227      2.212    4.62  5.7e-06 ***\nlow_ospanTRUE   -1.224      0.670   -1.83    0.069 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.69 on 285 degrees of freedom\nMultiple R-squared:  0.236,\tAdjusted R-squared:  0.22 \nF-statistic: 14.7 on 6 and 285 DF,  p-value: 1.25e-14\n```\n:::\n\n```{.r .cell-code}\nanova(mr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: item_test_SCALED\n           Df Sum Sq Mean Sq F value  Pr(>F)    \ncondition   5   2746     549   16.97 1.1e-14 ***\nlow_ospan   1    108     108    3.33   0.069 .  \nResiduals 285   9224      32                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\n#SINGLE WITH STANDARDIZED OSPAN\nmr2 <- lm(item_test_SCALED ~ condition + low_ospan, data = df_ospan)\nsummary(mr2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = item_test_SCALED ~ condition + low_ospan, data = df_ospan)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -7.51  -3.98  -2.13   4.22  13.24 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     -4.020      0.598   -6.72  9.9e-11 ***\ncondition121     3.529      0.698    5.05  7.8e-07 ***\ncondition211    11.665      2.600    4.49  1.1e-05 ***\ncondition221    11.304      1.787    6.33  9.6e-10 ***\ncondition311     6.503      3.324    1.96    0.051 .  \ncondition321    10.227      2.212    4.62  5.7e-06 ***\nlow_ospanTRUE   -1.224      0.670   -1.83    0.069 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.69 on 285 degrees of freedom\nMultiple R-squared:  0.236,\tAdjusted R-squared:  0.22 \nF-statistic: 14.7 on 6 and 285 DF,  p-value: 1.25e-14\n```\n:::\n\n```{.r .cell-code}\ngf_histogram(~item_test_SCALED, data = df_ospan) %>% \n  gf_facet_grid(low_ospan ~ condition, labeller = label_both)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-26-2.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_jitter(item_test_SCALED ~ weighted, color = ~pretty_condition, data = df_ospan) %>% \n  gf_facet_wrap(~pretty_condition)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-26-3.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_dhistogram(~item_test_NABS , color = ~pretty_condition, data = df_ospan) %>% \n  gf_facet_wrap(low_ospan ~ pretty_condition, labeller = label_both)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-26-4.png){width=672}\n:::\n:::\n\n\n\n**OPSAN score does NOT predict performance in the control condition. **\n\n::: {.cell}\n\n```{.r .cell-code}\ncontrol <- df_ospan %>% filter(condition == \"111\")\n\ngf_dhistogram(~item_test_NABS , color = ~pretty_condition, data = control) %>% \n  gf_facet_wrap(low_ospan ~ pretty_condition, labeller = label_both)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#test performance predicted by OSPAN score\nm <- lm(item_test_NABS ~ weighted, data = control)\nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = item_test_NABS ~ weighted, data = control)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -1.17  -1.17  -1.17  -1.16   6.83 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept) 1.160579   0.653251    1.78    0.078 .\nweighted    0.000443   0.031503    0.01    0.989  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.52 on 128 degrees of freedom\nMultiple R-squared:  1.55e-06,\tAdjusted R-squared:  -0.00781 \nF-statistic: 0.000198 on 1 and 128 DF,  p-value: 0.989\n```\n:::\n:::\n\n\n**OPSAN score does NOT predict performance in the control condition. **\n\n::: {.cell}\n\n```{.r .cell-code}\nimpasse <- df_ospan %>% filter(condition == \"121\")\n\ngf_dhistogram(~item_test_NABS , color = ~pretty_condition, data = impasse) %>% \n  gf_facet_wrap(low_ospan ~ pretty_condition, labeller = label_both)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#test performance predicted by OSPAN score\nm <- lm(item_test_NABS ~ low_ospan, data = impasse)\nsummary(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = item_test_NABS ~ low_ospan, data = impasse)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -3.75  -1.72  -1.72   4.25   6.28 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      3.750      0.410    9.14  8.6e-16 ***\nlow_ospanTRUE   -2.028      0.564   -3.60  0.00045 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.28 on 134 degrees of freedom\nMultiple R-squared:  0.0881,\tAdjusted R-squared:  0.0813 \nF-statistic: 12.9 on 1 and 134 DF,  p-value: 0.000451\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#330 total \n# —————————\n#126 lab \n#204 online  \n  #  71 no ospan \n  # 133 ospan \n# sgc3a_lab <- df_all %>% filter(mode==\"lab-synch\") %>% filter(study==\"SGC3A\")\n# sgc3a_online <- df_all %>% filter(mode==\"asynch\") %>% filter(study==\"SGC3A\")\n# sgc3a_online_noospan <- sgc3a_online %>% filter(subject %nin% ospan$subject)\n# sgc3a_onspan <- df_subjects\n# \n# m <- lm( item_test_NABS ~ condition, data = sgc3a_online_noospan)\n# summary(m)\n# \n# m2 <- lm(item_test_NABS ~ condition, data = df_subjects)\n# summary(m2)\n# \n# \n# m3 <- lm(item_test_NABS ~ low_ospan, data = df_subjects)\n# summary(m3)\n# \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(lpme)\n# m <- modereg(Y = df_ospan$DV_percent_NABS, W= df_ospan$condition, \n#         bw = 2, nstart = 2, PLOT = TRUE)\n# \n# summary(m)\n```\n:::\n\n## RESOURCES\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.1.1 (2021-08-10)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] distributional_0.3.0 modelr_0.1.8         generics_0.1.2      \n [4] see_0.6.9            report_0.5.1         ggdist_3.1.1        \n [7] forcats_0.5.1        stringr_1.4.0        purrr_0.3.4         \n[10] readr_2.1.2          tidyr_1.2.0          tibble_3.1.6        \n[13] tidyverse_1.3.1      ggpubr_0.4.0         vcd_1.4-9           \n[16] kableExtra_1.3.4     performance_0.8.0    fitdistrplus_1.1-8  \n[19] MASS_7.3-55          multimode_1.5        mosaic_1.8.3        \n[22] ggridges_0.5.3       mosaicData_0.20.2    ggformula_0.10.1    \n[25] ggstance_0.3.5       dplyr_1.0.8          Matrix_1.4-0        \n[28] janitor_2.1.0        Hmisc_4.6-0          ggplot2_3.3.5       \n[31] Formula_1.2-4        survival_3.3-1       lattice_0.20-45     \n\nloaded via a namespace (and not attached):\n  [1] readxl_1.3.1        backports_1.4.1     systemfonts_1.0.4  \n  [4] plyr_1.8.6          splines_4.1.1       crosstalk_1.2.0    \n  [7] leaflet_2.1.0       TH.data_1.1-0       qqplotr_0.0.5      \n [10] digest_0.6.29       htmltools_0.5.2     fansi_1.0.2        \n [13] magrittr_2.0.2      checkmate_2.0.0     cluster_2.1.2      \n [16] ks_1.13.5           tzdb_0.2.0          mosaicCore_0.9.0   \n [19] vroom_1.5.7         sandwich_3.0-1      svglite_2.1.0      \n [22] jpeg_0.1-9          colorspace_2.0-3    rvest_1.0.2        \n [25] ggrepel_0.9.1       haven_2.4.3         xfun_0.30          \n [28] crayon_1.5.0        jsonlite_1.8.0      zoo_1.8-9          \n [31] glue_1.6.2          polyclip_1.10-0     gtable_0.3.0       \n [34] emmeans_1.7.2       webshot_0.5.2       car_3.0-12         \n [37] DEoptimR_1.0-10     abind_1.4-5         scales_1.1.1       \n [40] mvtnorm_1.1-3       DBI_1.1.2           rstatix_0.7.0      \n [43] Rcpp_1.0.8.3        xtable_1.8-4        viridisLite_0.4.0  \n [46] htmlTable_2.4.0     foreign_0.8-82      bit_4.0.4          \n [49] mclust_5.4.10       datawizard_0.4.1    htmlwidgets_1.5.4  \n [52] httr_1.4.2          RColorBrewer_1.1-2  ellipsis_0.3.2     \n [55] pkgconfig_2.0.3     farver_2.1.0        nnet_7.3-17        \n [58] dbplyr_2.1.1        utf8_1.2.2          effectsize_0.6.0.1 \n [61] tidyselect_1.1.2    labeling_0.4.2      rlang_1.0.2        \n [64] munsell_0.5.0       cellranger_1.1.0    tools_4.1.1        \n [67] cli_3.2.0           broom_0.7.12        evaluate_0.15      \n [70] fastmap_1.1.0       ggdendro_0.1.23     yaml_2.3.5         \n [73] knitr_1.38          bit64_4.0.5         fs_1.5.2           \n [76] robustbase_0.93-9   rootSolve_1.8.2.3   nlme_3.1-155       \n [79] pracma_2.3.8        xml2_1.3.3          compiler_4.1.1     \n [82] rstudioapi_0.13     png_0.1-7           ggsignif_0.6.3     \n [85] reprex_2.0.1        tweenr_1.0.2        stringi_1.7.6      \n [88] highr_0.9           parameters_0.18.1   vctrs_0.3.8        \n [91] pillar_1.7.0        lifecycle_1.0.1     lmtest_0.9-39      \n [94] estimability_1.3    data.table_1.14.2   insight_0.18.0     \n [97] patchwork_1.1.1     R6_2.5.1            latticeExtra_0.6-29\n[100] KernSmooth_2.23-20  gridExtra_2.3       codetools_0.2-18   \n[103] assertthat_0.2.1    withr_2.5.0         multcomp_1.4-18    \n[106] mgcv_1.8-39         diptest_0.76-0      bayestestR_0.12.1  \n[109] parallel_4.1.1      hms_1.1.1           rpart_4.1.16       \n[112] labelled_2.9.0      coda_0.19-4         rmarkdown_2.13     \n[115] snakecase_0.11.0    carData_3.0-5       ggforce_0.3.3      \n[118] lubridate_1.8.0     base64enc_0.1-3    \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~s_NABS, data = sgc3a) %>% gf_facet_wrap(condition~.)\n```\n\n::: {.cell-output-display}\n![](combined_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n\n\n## ITEM\n\n::: {.cell}\n\n```{.r .cell-code}\n# #| label: IMPORT-DATA-ITEMS\n# #| warning : false\n# #| message : false\n# \n# # HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# # mbp = \"/Users/amyfox/Sites/RESEARCH/SGC—Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(imac)\n# \n# #IMPORT SUBJECTS \n# sgc3a_items <- read_rds(\"analysis/SGC3A/data/2-scored-data/sgc3a_scored_items.rds\") %>% mutate(\n#   study = \"SGC3A\"\n# ) \n# sgc4a_items <- read_rds(\"analysis/SGC4A/data/2-scored-data/sgc4a_scored_items.rds\") %>% mutate(\n#   study = \"SGC4A\",\n#   pretty_mode = \"online-replication\"\n# ) %>% dplyr::select(-answer)\n# \n# sgc4b_items <- read_rds(\"analysis/SGC4B/data/2-scored-data/sgc4b_scored_items.rds\") %>% mutate(\n#   pretty_mode = \"online-replication\"\n# ) %>% dplyr::select(-answer)\n# sgc5_items <- read_rds(\"analysis/SGC5A/data/2-scored-data/sgc5_scored_items.rds\") %>% mutate(\n#   study = \"SGC5A\",\n#   pretty_mode = \"online-replication\"\n# ) %>% dplyr::select(-answer)\n# \n# #COMPARE COLUMNS\n# janitor::compare_df_cols(sgc3a_items,sgc4a_items, sgc4b_items, sgc5_items)\t\n# \n# #MERGE \n# df_items <- rbind(sgc3a_items, sgc4a_items, sgc4b_items, sgc5_items)\n# \n# #IMPORT OSPAN DATA \n# # ospan <- read_csv(\"analysis/combined/data/fall21_scored_ospan.csv\") %>% mutate(\n#   # subject = SUBJECTID\n# # )\n# \n# #MERGE OSPAN DATA WITH SGC DATA \n# # df_ospan <- df_subjects %>% filter(\n# #   subject %in% ospan$subject\n# # )\n# # \n# # df_ospan <- merge(df_ospan, ospan)\n# # \n# # #RENAME for reuse\n# # df_all <- df_subjects\n# # df_subjects <- df_ospan\n# \n# #CLEANUP\n# # rm(ospan, sgc3a, sgc4a, sgc4b, sgc5, df_ospan)\n# ```\n# \n# ```{r}\n# library(lme4)\n# library(lmerTest)\n# library(performance)\n# library(report)\n# \n# #LINEAR MODEL ON SUBJECT TOTAL SCORE\n# m <- lm(s_NABS ~ condition, data = sgc3a)\n# summary(m)\n# \n# #LINEAR MODEL ON SUBJECT TOTAL SCORE\n# m <- glm(score_niceABS~condition, data = sgc3a_items, family = \"binomial\")\n# summary(m)\n# performance(m)\n# \n# #0 RANDOM INTEREPTS SUBJECT\n# m.r0 <- glmer(score_niceABS ~ (1|subject), data = sgc3a_items, family = \"binomial\")\n# summary(m.r0)\n# anova(m.r0)\n# performance(m.r0)\n# \n# #0 RANDOM SLOPE CONDITION/SUBJECT\n# m.r1 <- glmer(score_niceABS ~ (0 + condition|subject), data = sgc3a_items, family = \"binomial\")\n# summary(m.r1)\n# anova(m.r1)\n# performance(m.r1)\n# \n# #0 RANDOM SLOPES and intertercepts CONDITION/SUBJECT\n# m.r2 <- glmer(score_niceABS ~ (1 + condition|subject), data = sgc3a_items, family = \"binomial\")\n# summary(m.r2)\n# anova(m.r2)\n# performance(m.r2)\n# \n# ####0 RANDOM INTERCEPTS SUBJECT RANDOM INTERCEPTS ITEM\n# m.r3 <- glmer(score_niceABS ~ (1 |subject) + (1|q), data = sgc3a_items, family = \"binomial\")\n# summary(m.r3)\n# anova(m.r3)\n# performance(m.r3)\n# \n# r3m <- glmer(score_niceABS ~ condition + (1 |subject) + (1|q), data = sgc3a_items, family = \"binomial\")\n# summary(r3m)\n# anova(r3m)\n# performance(r3m)\n# \n# plot(r3m)\n# check_model(r3m)\n# report(r3m)\n# \n# \n# \n# #BAD FIT\n# r4m <- glmer(score_niceABS ~ condition +  q + (1 |subject) , data = sgc3a_items, family = \"binomial\")\n# summary(r4m)\n# \n# #???\n# r5m <- glmer(score_niceABS ~ condition +  (1|q) + (1|subject) , data = sgc3a_items, family = \"binomial\")\n# summary(r5m)\n# \n# coef(r5m)\n# \n# # #1. RANDOM SUBJECT + FIXED CONDITION\n# # # X + (1 | SUBJECT)\n# # m1 <- glmer(score_niceABS ~ condition + (1|subject), data = sgc3a_items, family = \"binomial\")\n# # summary(m1)\n# # anova(m1)\n# # performance(m1)\n# # \n# # #1. RANDOM condition by SUBJECT + FIXED CONDITION\n# # # X + (1 + X | SUBJECT)\n# # m2 <- glmer(score_niceABS ~ condition + (1+condition|subject), data = sgc3a_items, family = \"binomial\")\n# # summary(m2)\n# # lmerTest::anova(m2)\n# # performance(m2)\n# # \n# # #2. RANDOM SUBJECT + RANDOM Q + FIXED CONDITION \n# # m2 <- glmer(score_niceABS ~ condition + (1|subject) + (1|q) , data = sgc3a_items, family = \"binomial\")\n# # summary(m2)\n# # anova(m2)\n# # performance(m2)\n# \n# ##R SQUARED marginal is fixed effects only\n# ##R SQUARED condition is with random effects \n```\n:::",
    "supporting": [
      "combined_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}