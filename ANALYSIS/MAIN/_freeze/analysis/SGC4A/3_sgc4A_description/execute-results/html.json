{
  "hash": "3fc111f017b359d94c6f4e97cfc743ae",
  "result": {
    "markdown": "---\nsubtitle: 'Study SGC4A | 3 Description'\n---\n\n\\newpage\n\n# Description {#sec-SGC4A-description}\n\n**TODO** check term cell counts and decide if data is pilot or included ?\n*The purpose of this notebook is describe the distributions of dependent variables for Study SGC4A.*\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Hmisc) # %nin% operator\nlibrary(mosaic) #simple descriptives [favstats]\n\nlibrary(kableExtra) #printing tables \nlibrary(vcd) #mosaicplots\nlibrary(ggpubr) #arrange plots\nlibrary(ggformula) #quick easy plots\nlibrary(ggdist) # uncertainty viz\nlibrary(ggstatsplot) #stats plots 4 dummies\nlibrary(ggeasy) #theme editing. the way it should be\n\nlibrary(multimode) #test for multimodality\nlibrary(fitdistrplus) #fitting distributions\nlibrary(performance) #multimodality\n\nlibrary(tidyverse) #ALL THE THINGS\n\n#OUTPUT OPTIONS\nlibrary(dplyr, warn.conflicts = FALSE)\noptions(dplyr.summarise.inform = FALSE)\noptions(ggplot2.summarise.inform = FALSE)\noptions(scipen=1, digits=3)\n\n#GRAPH THEMEING\ntheme_set(theme_minimal()) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# HACK WD FOR LOCAL RUNNING?\n# imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# mbp = \"/Users/amyfox/Sites/RESEARCH/SGCâ€”Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(mbp)\n\n#IMPORT DATA \ndf_items <- read_rds('analysis/SGC4A/data/2-scored-data/sgc4a_scored_items.rds')\ndf_subjects <- read_rds('analysis/SGC4A/data/2-scored-data/sgc4a_scored_participants.rds') \ndf_absolute_progress <- read_csv('analysis/SGC4A/data/2-scored-data/sgc4a_absolute_progress.csv')\ndf_scaled_progress <- read_csv('analysis/SGC4A/data/2-scored-data/sgc4a_scaled_progress.csv')\n\n#TREAT QS AS FACTORS\ndf_items$q = as.factor(df_items$q)\n\n#REORDER FACTORS\n# order <- c(\"Orth-Full\", \"Orth-Sparse\", \"Orth-Grid\", \"Tri-Sparse\")\n# df_subjects <- df_subjects %>% mutate(\n#   pretty_condition = factor(pretty_condition, levels = order))\n# df_items <- df_items %>% mutate(\n#   pretty_condition = factor(pretty_condition, levels = order))\n```\n:::\n\n**TEMP REMOVE IN PERSON DATA**\n::: {.cell}\n\n```{.r .cell-code}\ndf_subjects <- df_subjects %>% filter(mode == \"asynch\") %>% droplevels()\ndf_items <- df_items %>% filter(mode == \"asynch\") %>% droplevels()\n```\n:::\n\n\n## SAMPLE\n\n### Data Collection\n\nData were collected online in Winter 2022. \n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"Participants by Condition and Data Collection Period\"\ncols = c(\"Orth-Full\", \"Orth-Sparse\",\"Orth-Grid\", \"Tri-Sparse\",\"Total for Period\")\ncont <- table(df_subjects$term, df_subjects$condition)\ncont %>% addmargins() %>% kbl(caption = title, col.names = cols) %>%  kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Participants by Condition and Data Collection Period</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> Orth-Full </th>\n   <th style=\"text-align:right;\"> Orth-Sparse </th>\n   <th style=\"text-align:right;\"> Orth-Grid </th>\n   <th style=\"text-align:right;\"> Tri-Sparse </th>\n   <th style=\"text-align:right;\"> Total for Period </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> winter22 </td>\n   <td style=\"text-align:right;\"> 88 </td>\n   <td style=\"text-align:right;\"> 86 </td>\n   <td style=\"text-align:right;\"> 88 </td>\n   <td style=\"text-align:right;\"> 98 </td>\n   <td style=\"text-align:right;\"> 360 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> summer22 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 47 </td>\n   <td style=\"text-align:right;\"> 45 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sum </td>\n   <td style=\"text-align:right;\"> 88 </td>\n   <td style=\"text-align:right;\"> 94 </td>\n   <td style=\"text-align:right;\"> 135 </td>\n   <td style=\"text-align:right;\"> 143 </td>\n   <td style=\"text-align:right;\"> 460 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n### Participants\n\n::: {.cell}\n\n```{.r .cell-code}\n#Describe participants\nsubject.stats <-df_subjects %>% dplyr::select(age) %>% unlist() %>% favstats()\nsubject.stats$percent.female <- df_subjects %>% filter(gender==\"Female\") %>% count() %>% unlist()/nrow(df_subjects)\n\ntitle = \"Descriptive Statistics of Participant Age and Gender\"\nsubject.stats %>% kbl (caption = title) %>% kable_classic()%>% \n  footnote(general = \"Age in Years\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;border-bottom: 0;'>\n<caption>Descriptive Statistics of Participant Age and Gender</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> Q1 </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> Q3 </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> missing </th>\n   <th style=\"text-align:right;\"> percent.female </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:right;\"> 20.7 </td>\n   <td style=\"text-align:right;\"> 2.65 </td>\n   <td style=\"text-align:right;\"> 460 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.724 </td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<span style=\"font-style: italic;\">Note: </span> <sup></sup> Age in Years</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\n460 participants (72 % female ) undergraduate STEM majors at a public American University participated in exchange for course credit (age: 18 - 38 years).\n\n## RESPONSE ACCURACY\n\n### Subject Level Scores\n\nSubject level scores summarize the the response accuracy by a particular participant across all discriminant items in the graph comprehension task.\n\n#### Task Absolute Score\n\nRecall from [Section -@sec-absolute-scoring] that the absolute score (following the dichotomous scoring approach) `s_NABS` indicates if the subject's response for a particular item was *perfectly* correct: whether they selected all correct answer options and no others (excluding certain allowed exceptions, such as also selecting the data point referenced in the question). Across the entire task, there ae 13 strategy discriminating questions. \n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"Descriptive Statistics of Task Response Accuracy (Total Absolute Score)\"\nabs.stats <- df_subjects %>% dplyr::select(s_NABS) %>% unlist() %>% favstats()\nabs.stats %>% kbl (caption = title) %>% kable_classic() %>% \n  footnote(general = \"# questions correct [0,13]\", \n           general_title = \"Note: \",footnote_as_chunk = T) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;border-bottom: 0;'>\n<caption>Descriptive Statistics of Task Response Accuracy (Total Absolute Score)</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> Q1 </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> Q3 </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> missing </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:right;\"> 2.17 </td>\n   <td style=\"text-align:right;\"> 3.96 </td>\n   <td style=\"text-align:right;\"> 460 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<span style=\"font-style: italic;\">Note: </span> <sup></sup> # questions correct [0,13]</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\nWhen combined *overall*, total absolute accuracy scores in the TEST phase (n = 460) range from 0 to 13 with a slightly lower mean score of (M = 2.17, SD = 3.96).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL ABSOLUTE\n  gf_props(~s_NABS, data = df_subjects) + \n  labs(x = \"number of correct responses\",\n       y = \"% of subjects\",\n       title = \"Distribution of Task Absolute Score \",\n       subtitle = \"\") \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-ABS-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"s_NABS\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of Task Absolute Score\",\n        subtitle =\"\",\n        x = \"Total Absolute Score\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-ABS-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = s_NABS,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_NABS),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_NABS, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Task Absolute Score \",\n    x = \"Condition\", y = \"Total Absolute Score \") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-ABS-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#STATSPLOT\nggbetweenstats(y = s_NABS, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-ABS-4.png){width=672}\n:::\n\n```{.r .cell-code}\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(s_NABS)) + \n  stat_ecdf(geom = \"step\") +\n  facet_grid(pretty_condition~pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function â€” Task Absolute Score \",\n        x = \"Total Absolute Score [0,13]\", \n        y = \"Cumulative Probability\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-ABS-5.png){width=672}\n:::\n:::\n\nVisual inspection of this distribution suggests it is not normal, and perhaps bimodal. We verify this via an excess mass test (Ameijeiras-Alsonso et. al 2018). \n\n::: {.cell}\n\n```{.r .cell-code}\nmultimode::modetest(df_subjects$s_NABS)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in multimode::modetest(df_subjects$s_NABS): A modification of the data\nwas made in order to compute the excess mass or the dip statistic\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAmeijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df_subjects$s_NABS\nExcess mass = 0.05, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n```\n:::\n\n```{.r .cell-code}\n# n_modes = multimode::nmodes(df_subjects$s_NABS, bw=2) #bw = 2questions/15 = 0.15%\n# l_modes = multimode::locmodes(df_subjects$s_NABS,mod0 =  n_modes, display = TRUE)\n```\n:::\n\nThe excess mass test for multimodality suggests there is not enough mass at the positive end of the score distribution to be considered multimodal. \n\n\n#### Task Scaled Scores\n\nThe total scaled score `s_SCALED` summarizes the scaled score on the 13 strategy-discriminant questions, for each subject. This score ranges from from -13 (all orthogonal) to 13 (all triangular). Recall that the `s_SCALED` score for an item is a numeric representation of the strategy-consistent response, scaled from -1 to +1 (see [Section -@sec-SGC3A-scaledScore])\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"Descriptive Statistics of Response Accuracy\"\nscaled.stats <- df_subjects %>% dplyr::select(s_SCALED) %>% unlist() %>% favstats()\nscaled.stats %>% kbl (caption = title) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Descriptive Statistics of Response Accuracy</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> Q1 </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> Q3 </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> missing </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> -13 </td>\n   <td style=\"text-align:right;\"> -12.5 </td>\n   <td style=\"text-align:right;\"> -10.5 </td>\n   <td style=\"text-align:right;\"> -5 </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:right;\"> -6.68 </td>\n   <td style=\"text-align:right;\"> 8.09 </td>\n   <td style=\"text-align:right;\"> 460 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n**Overall**, task scaled scores (n = 460) range from -13 to 13 with a slightly lower mean score of (M = -6.68, SD = 8.09).\n\n::: {.cell}\n\n```{.r .cell-code}\n#GGFORMULA | DENSITY HISTOGRAM SUBJECT TOTAL SCALED\ngf_props(~item_test_SCALED, data = df_subjects) +\n  labs(x = \"total scaled score\",\n       y = \"% of subjects\",\n       title = \"Distribution of Scaled Score \",\n       subtitle = \"Modes at high and low ends of scale suggest concentration of high (vs) low understanding\") \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-SCALED-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"s_SCALED\",binwidth=1,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\")) + \n  labs( title = \"Distribution of Scaled Score\",\n        subtitle =\"\",\n        x = \"total scaled score\", y = \"number of participants\") + \n theme_minimal() + theme(legend.position = \"blank\") \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-SCALED-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = s_SCALED,\n                        fill = pretty_condition) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.1,\n    width = 1, \n    point_colour = NA\n   ) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_SCALED),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = s_SCALED, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  )) + labs( \n    title = \"Distribution of Task Scaled Score\",\n    x = \"Condition\", y = \"Total Scaled \") +\n  theme(legend.position = \"blank\") + \n  coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-SCALED-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#STATSPLOT\nggbetweenstats(y = s_SCALED, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-SCALED-4.png){width=672}\n:::\n\n```{.r .cell-code}\n#PLOT EMPIRICIAL CUMULATIVE DISTRIBUTION FUNCTION\nggplot(data = df_subjects, aes(s_SCALED)) + \n  stat_ecdf(geom = \"step\") + \n  facet_grid(pretty_condition ~ pretty_mode) + \n  labs( title = \"Empirical Cumulative Density Function â€” Task Scaled Score\",\n        x = \"Test Phase Scaled Score [-13,13]\", \n        y = \"Cumulative Probability\") \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-SUBJ-SCALED-5.png){width=672}\n:::\n:::\n\nVisual inspection of this distribution suggests it is not normal, and perhaps perhaps bimodal. We verify this via an excess mass test (Ameijeiras-Alsonso et. al 2018).\n\n::: {.cell}\n\n```{.r .cell-code}\nmultimode::modetest(df_subjects$s_SCALED)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in multimode::modetest(df_subjects$s_SCALED): A modification of the data\nwas made in order to compute the excess mass or the dip statistic\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAmeijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df_subjects$s_SCALED\nExcess mass = 0.06, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n```\n:::\n\n```{.r .cell-code}\n# n_modes = multimode::nmodes(df_subjects$s_SCALED, bw=2) #bw = 2questions/15 = 0.15%\n# l_modes = multimode::locmodes(df_subjects$s_SCALED,mod0 =  n_modes, display = TRUE)\n```\n:::\n\nThe excess mass test for multimodality suggests there is not enough mass at the positive end of the score distribution to be considered multimodal. \n\n### First Item Scores\n\nNext we consider the response accuracy on *just* the first question of the graph comprehension task: a subject's first exposure to the TM graph.\n\n#### First Item Absolute Score\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"Proportion of Correct Response on First Item (Combined)\"\nitem.contingency <- df_subjects %>%  dplyr::select(item_q1_NABS, pretty_condition) %>% table() %>%  addmargins(2) %>% prop.table(margin=2) %>% addmargins(1)\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Proportion of Correct Response on First Item (Combined)</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> Orth-Full </th>\n   <th style=\"text-align:right;\"> Orth-Sparse </th>\n   <th style=\"text-align:right;\"> Orth-Grid </th>\n   <th style=\"text-align:right;\"> Tri-Sparse </th>\n   <th style=\"text-align:right;\"> Sum </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.943 </td>\n   <td style=\"text-align:right;\"> 0.896 </td>\n   <td style=\"text-align:right;\"> 0.958 </td>\n   <td style=\"text-align:right;\"> 0.84 </td>\n   <td style=\"text-align:right;\"> 0.913 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0.057 </td>\n   <td style=\"text-align:right;\"> 0.104 </td>\n   <td style=\"text-align:right;\"> 0.042 </td>\n   <td style=\"text-align:right;\"> 0.16 </td>\n   <td style=\"text-align:right;\"> 0.087 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sum </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n   <td style=\"text-align:right;\"> 1.00 </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\nAcross data collection sessions, first-item accuracy is consistent across experimental conditions. Incorrect answers are far more frequent (91%) than correct answers (9%). Highest accuracy is achieved in the Triangular gridlines condition, with roughly 14% correct response rate, compared to only 6% in the orthogonal axis control. \n\n::: {.cell}\n\n```{.r .cell-code}\n#PROPORTIONAL BAR CHART\ngf_props(~item_q1_NABS, data = df_subjects) +\n  labs(x = \"response accuracy\",\n       y = \"% subjects\",\n       title = \"Proportion of Correct Responses on First Item\",\n       subtitle=\"\")+\n  theme(legend.position = \"none\")+theme_ggdist()\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-FIRST-ABSOLUTE-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#STACKED BAR CHART\ndf_subjects %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(item_q1_NABS))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  labs(x = \"response accuracy\",\n       title = \"Proportion of Correct Responses on First Item\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-FIRST-ABSOLUTE-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#MOSAIC PLOT\nvcd::mosaic(main=\"Proportion of Correct Responses on First Item\",\n            data = df_subjects, item_q1_NABS ~ pretty_condition, rot_labels=c(0,90,0,0), \n            offset_varnames = c(left = 4.5), offset_labels = c(left = -0.5),just_labels = \"right\",\n            spacing = spacing_dimequal(unit(1:2, \"lines\"))) \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-FIRST-ABSOLUTE-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#STATSPLOT\nggbarstats(\n  x = item_q1_NABS,\n  y = pretty_condition, \n  data = df_subjects\n)\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-FIRST-ABSOLUTE-4.png){width=672}\n:::\n:::\n\n#### First Item Scaled Score\n\nAt the item level, the scaled score gives us a numeric measure of correctness of interpretation, ranging from -1 to 1. (note: we evaluate scaled_score on the first item rather than interpretation, because no orthogonal interpretation is available in the impasse condition)\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"Descriptive Statistics of Response Accuracy (First Item Scaled Score)\"\nfirstscaled.stats <- df_subjects %>% dplyr::select(item_q1_SCALED) %>% unlist() %>% favstats()\nfirstscaled.stats %>% kbl (caption = title) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Descriptive Statistics of Response Accuracy (First Item Scaled Score)</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> Q1 </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> Q3 </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> missing </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> -1 </td>\n   <td style=\"text-align:right;\"> -1 </td>\n   <td style=\"text-align:right;\"> -1 </td>\n   <td style=\"text-align:right;\"> -1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> -0.749 </td>\n   <td style=\"text-align:right;\"> 0.623 </td>\n   <td style=\"text-align:right;\"> 460 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\nWhen combined **overall**, first item scaled scores (n = 460) range from -1 to 1 with a slightly lower mean score of (M = -0.75, SD = 0.62).\n\n::: {.cell}\n\n```{.r .cell-code}\n#GGFORMULA | PROPORTIONAL HISTOGRAM SUBJECT FIRST SCALED\ngf_props(~item_q1_SCALED, data = df_subjects) +\n  labs(x = \"scaled score (first item)\",\n       y = \"% of subjects\",\n       title = \"Distribution of First Item Scaled Score\",\n       subtitle = \"\") \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-FIRST-SCALED-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_q1_SCALED\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE) \nfacet(p, facet.by=c(\"pretty_condition\")) + \n  labs( title = \"Distribution of First Item Scaled Score (by Mode and Condition)\",\n        subtitle =\"\",\n        x = \"scaled score (firt item) \", y = \"number of participants\") + \n  theme_minimal() + theme(legend.position = \"blank\") \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-FIRST-SCALED-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#STACKED BAR CHART\ndf_subjects %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(item_q1_SCALED))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  labs(x = \"response accuracy\",\n       title = \"Type of Responses on First Item (by Modality and Condition)\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-FIRST-SCALED-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#STATSPLOT\nggbarstats(\n  x = item_q1_SCALED,\n  y = pretty_condition, \n  data = df_subjects\n)\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-FIRST-SCALED-4.png){width=672}\n:::\n:::\n\n### Interpretation Scores\n\nNext we consider the the interpretations assigned to each response. For each response given by a participant to a question, we assign an interpretation label based on the interpretation the response most closely matches (see @sec-scoring-interpretation).\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"Proportion of Interpretations Across Items Items By Condition\"\nitem.contingency <- df_items %>%  dplyr::select(interpretation, pretty_condition) %>% table() %>%  addmargins(2) %>% prop.table(margin=2) %>% addmargins(1)\nitem.contingency %>% kbl (caption = title) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Proportion of Interpretations Across Items Items By Condition</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> Orth-Full </th>\n   <th style=\"text-align:right;\"> Orth-Sparse </th>\n   <th style=\"text-align:right;\"> Orth-Grid </th>\n   <th style=\"text-align:right;\"> Tri-Sparse </th>\n   <th style=\"text-align:right;\"> Sum </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Orthogonal </td>\n   <td style=\"text-align:right;\"> 0.567 </td>\n   <td style=\"text-align:right;\"> 0.564 </td>\n   <td style=\"text-align:right;\"> 0.614 </td>\n   <td style=\"text-align:right;\"> 0.465 </td>\n   <td style=\"text-align:right;\"> 0.560 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> frenzy </td>\n   <td style=\"text-align:right;\"> 0.005 </td>\n   <td style=\"text-align:right;\"> 0.006 </td>\n   <td style=\"text-align:right;\"> 0.007 </td>\n   <td style=\"text-align:right;\"> 0.004 </td>\n   <td style=\"text-align:right;\"> 0.006 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ? </td>\n   <td style=\"text-align:right;\"> 0.114 </td>\n   <td style=\"text-align:right;\"> 0.094 </td>\n   <td style=\"text-align:right;\"> 0.103 </td>\n   <td style=\"text-align:right;\"> 0.109 </td>\n   <td style=\"text-align:right;\"> 0.104 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> reference </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n   <td style=\"text-align:right;\"> 0.001 </td>\n   <td style=\"text-align:right;\"> 0.003 </td>\n   <td style=\"text-align:right;\"> 0.001 </td>\n   <td style=\"text-align:right;\"> 0.002 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> blank </td>\n   <td style=\"text-align:right;\"> 0.018 </td>\n   <td style=\"text-align:right;\"> 0.024 </td>\n   <td style=\"text-align:right;\"> 0.035 </td>\n   <td style=\"text-align:right;\"> 0.026 </td>\n   <td style=\"text-align:right;\"> 0.027 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> both tri + orth </td>\n   <td style=\"text-align:right;\"> 0.126 </td>\n   <td style=\"text-align:right;\"> 0.122 </td>\n   <td style=\"text-align:right;\"> 0.122 </td>\n   <td style=\"text-align:right;\"> 0.116 </td>\n   <td style=\"text-align:right;\"> 0.121 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tversky </td>\n   <td style=\"text-align:right;\"> 0.039 </td>\n   <td style=\"text-align:right;\"> 0.031 </td>\n   <td style=\"text-align:right;\"> 0.028 </td>\n   <td style=\"text-align:right;\"> 0.050 </td>\n   <td style=\"text-align:right;\"> 0.035 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Triangular </td>\n   <td style=\"text-align:right;\"> 0.131 </td>\n   <td style=\"text-align:right;\"> 0.156 </td>\n   <td style=\"text-align:right;\"> 0.087 </td>\n   <td style=\"text-align:right;\"> 0.230 </td>\n   <td style=\"text-align:right;\"> 0.145 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sum </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n   <td style=\"text-align:right;\"> 1.000 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#PROPORTIONAL BAR CHART\ngf_propsh(~interpretation, data = df_items, fill = ~pretty_condition) %>% \n  gf_facet_grid(pretty_condition~pretty_mode) +\n  labs(x = \"% of items\",\n       title = \"Proportion of Interpretations Across Items\",\n       subtitle=\"\")+\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-ITEM-INTERPRETATION-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#STACKED BAR CHART\ndf_items %>% \n  ggplot(data = .,\n         mapping = aes(x = pretty_condition,\n                       fill = as.factor(interpretation))) +\n  geom_bar(position = \"fill\" ) + #,color = \"black\") +\n  scale_fill_brewer(palette = \"Set1\")  +\n  labs(x = \"response accuracy\",\n       title = \"Response Types on All Items (by Condition)\",\n       x = \"Condition\",\n       fill = \"\",\n       subtitle=\"\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-ITEM-INTERPRETATION-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#MOSAIC PLOT\n# vcd::mosaic(main=\"Proportion of Interpretations across Conditions\",\n#             data = df_items, pretty_condition ~ interpretation, rot_labels=c(0,90,0,0), \n#             offset_varnames = c(left = 4.5), offset_labels = c(left = -0.5),just_labels = \"right\",\n#             spacing = spacing_dimequal(unit(1:2, \"lines\"))) \n\n#STATSPLOT\nggbarstats(\n  x = interpretation,\n  y = pretty_condition, \n  data = df_items\n)\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIS-ITEM-INTERPRETATION-3.png){width=672}\n:::\n:::\n\n\n### Cumulative Task Performance\n\n::: {.cell}\n\n```{.r .cell-code}\n#VISUALIZE progress over time ABSOLUTE score \nggplot(data = df_absolute_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Absolute Score over sequence of task\", x = \"Question\" , y = \"Cumulative Absolute Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIZ-PROGRESS-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#VISUALIZE progress over time SCALED score \nggplot(data = df_scaled_progress, aes(x = question, y = score, group = subject, alpha = 0.01, color = pretty_condition)) + \n geom_line(position=position_jitter(w=0.15, h=0.15), size=0.1) +\n facet_wrap(~pretty_condition) + \n labs (title = \"Cumulative Scaled Score over sequence of task\", x = \"Question\" , y = \"Cumulative Scaled Score\") + \n scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12,13)) +\n theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/VIZ-PROGRESS-2.png){width=672}\n:::\n:::\n\n\n## RESPONSE LATENCY\n\n### Time on First Item \n\nHere we consider the time spent on just the first individual item (first exposure to graph).\n\n::: {.cell}\n\n```{.r .cell-code}\n#DESCRIBE distribution of response time\ntime.stats <- df_subjects %>% dplyr::select(item_q1_rt) %>% unlist() %>% favstats()\ntitle = \"Descriptive Statistics of First Response Time (seconds)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Descriptive Statistics of First Response Time (seconds)</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> Q1 </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> Q3 </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> missing </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 5.6 </td>\n   <td style=\"text-align:right;\"> 14.3 </td>\n   <td style=\"text-align:right;\"> 21.7 </td>\n   <td style=\"text-align:right;\"> 35.3 </td>\n   <td style=\"text-align:right;\"> 536 </td>\n   <td style=\"text-align:right;\"> 30.4 </td>\n   <td style=\"text-align:right;\"> 35.8 </td>\n   <td style=\"text-align:right;\"> 460 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\nResponse time _on the first item_ for subjects (n = 460) ranged from 5.6 to 536.39 minutes with a mean duration of (M = 30.42, SD = 35.76).\n\n::: {.cell}\n\n```{.r .cell-code}\n#HISTOGRAM\ngf_dhistogram(~item_q1_rt, data = df_subjects) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of First Item Response Time (seconds)\", subtitle = \"fit by gamma distribution\", x = \"First Item Response Time (seconds)\", y = \"% items\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 460 rows containing missing values (geom_vline).\n```\n:::\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-FIRSTTIMEmessage - falsewarning - false-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"item_q1_rt\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of First Item Response Time (seconds)\",\n        subtitle =\"\",\n        x = \"First Item Response Time (seconds)\", y = \"number of items\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-FIRSTTIMEmessage - falsewarning - false-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#recode as boolean correct\ndf_subjects <- df_subjects %>% mutate(\n  item_q1_NABS = as.logical(item_q1_NABS)\n)\n\n##RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = item_q1_rt, color = item_q1_NABS) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .1\n  )) + \n  labs( title = \"Distribution of First Item Response Time (seconds)\",\n        subtitle =\"\",\n        y = \"First Item Response Time (s)\", x = \"Condition\") +\n  theme_ggdist() \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-FIRSTTIMEmessage - falsewarning - false-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# + theme(legend.position = \"blank\")\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n\n\n#TEMP REMOVE OUTLIERS\ndf <- df_subjects %>% filter(item_q1_rt < 300)\n\n#STATSPLOT\nggbetweenstats(y = item_q1_rt, x = pretty_condition, data = df,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-FIRSTTIMEmessage - falsewarning - false-4.png){width=672}\n:::\n:::\n\n### Time on Item \n\nHere we consider the time spent on an individual item (across all items).\n\n::: {.cell}\n\n```{.r .cell-code}\n#DESCRIBE distribution of response time\ntime.stats <- df_items %>%   dplyr::select(rt_s) %>% unlist() %>% favstats()\ntitle = \"Descriptive Statistics of Item Response Latency (seconds)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Descriptive Statistics of Item Response Latency (seconds)</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> Q1 </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> Q3 </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> missing </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 0.326 </td>\n   <td style=\"text-align:right;\"> 12.1 </td>\n   <td style=\"text-align:right;\"> 21.7 </td>\n   <td style=\"text-align:right;\"> 40.5 </td>\n   <td style=\"text-align:right;\"> 631 </td>\n   <td style=\"text-align:right;\"> 33.1 </td>\n   <td style=\"text-align:right;\"> 37 </td>\n   <td style=\"text-align:right;\"> 6900 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\nTime on an individual item for subjects (n = 6900) ranged from 0.33 to 630.95 minutes with a mean duration of (M = 33.07, SD = 36.96).\n\n::: {.cell}\n\n```{.r .cell-code}\n#HISTOGRAM\ngf_dhistogram(~rt_s, data = df_items) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of Item Response Time (seconds)\", \n       subtitle = \"fit by gamma distribution\", x = \"Item Response Time (seconds)\", y = \"% items\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n\nWarning in densfun(x, parm[1], parm[2], ...): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6900 rows containing missing values (geom_vline).\n```\n:::\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-ITEMTIMEmessage - falsewarning - false-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_items, x = \"rt_s\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of Item Response Time (seconds)\",\n        subtitle =\"\",\n        x = \"Item Response Time (seconds)\", y = \"number of items\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-ITEMTIMEmessage - falsewarning - false-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#recode as boolean correct\ndf_items <- df_items %>% mutate(\n  score_niceABS = as.logical(score_niceABS)\n)\n\n##RAINCLOUD USING GGDISTR\nggplot(df_items, aes(x = pretty_condition, y = rt_s, color = score_niceABS) ) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    # position = position_dodgejust(),\n    justification = 1.5, \n    # adjust = .5, \n    width = .5, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    width = .15, \n    outlier.shape = NA,\n    position = position_dodge2()\n  ) +\n  geom_point(\n    size = 1.3,\n    alpha = .3,\n    position = position_jitterdodge(\n      # seed = 1,\n      dodge.width = 0.5,\n      jitter.width = 0.075\n  )) +\n  labs( title = \"Distribution of Item Response Time (seconds)\",\n        subtitle =\"\",\n        y = \"Item Response Time (s)\", x = \"Condition\") +\n  theme_ggdist() \n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-ITEMTIMEmessage - falsewarning - false-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# + theme(legend.position = \"blank\")\n# + coord_cartesian(xlim = c(1.2, NA), clip = \"off\")\n                \n#STATSPLOT\nggbetweenstats(y = rt_s, x = pretty_condition, data = df_items,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-ITEMTIMEmessage - falsewarning - false-4.png){width=672}\n:::\n:::\n\n### Time on Task \n\nHere we consider the time spent on the entire experimental task.\n\n::: {.cell}\n\n```{.r .cell-code}\n#DESCRIBE distribution of response time\ntime.stats <- df_subjects %>% dplyr::select(rt_m) %>% unlist() %>% favstats()\ntitle = \"Descriptive Statistics of Total Task Response Latency (minutes)\"\ntime.stats %>% kbl(caption = title) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Descriptive Statistics of Total Task Response Latency (minutes)</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> Q1 </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> Q3 </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> missing </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 1.19 </td>\n   <td style=\"text-align:right;\"> 5.05 </td>\n   <td style=\"text-align:right;\"> 6.77 </td>\n   <td style=\"text-align:right;\"> 9.23 </td>\n   <td style=\"text-align:right;\"> 27.3 </td>\n   <td style=\"text-align:right;\"> 7.48 </td>\n   <td style=\"text-align:right;\"> 3.62 </td>\n   <td style=\"text-align:right;\"> 460 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\nTotal time on task for subjects (n = 460) ranged from 1.19 to 27.25 minutes with a mean duration of (M = 7.48, SD = 3.61).\n\n::: {.cell}\n\n```{.r .cell-code}\n#HISTOGRAM\ngf_dhistogram(~rt_m, data = df_subjects) %>%\n  gf_vline(xintercept = ~time.stats[\"lab\",]$mean, color = \"black\") %>% \n  gf_fitdistr(dist=\"gamma\", color=\"red\")+\n  labs(title=\"Distribution of Total Response Time (minutes)\", subtitle = \"fit by gamma distribution\", x = \"Total Response Time (minutes)\", y = \"% subjects\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 460 rows containing missing values (geom_vline).\n```\n:::\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-SCAFFOLDTIMEmessage - falsewarning - false-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##GGPUBR | HIST+DENSITY SCORE BY CONDITION/MODE\np <- gghistogram(df_subjects, x = \"rt_m\", binwidth = 0.5,\n   add = \"mean\", rug = TRUE,\n   fill = \"pretty_condition\", #, palette = c(\"#00AFBB\", \"#E7B800\"),\n   add_density = TRUE)\nfacet(p, facet.by=c(\"pretty_condition\")) +\n  labs( title = \"Distribution of Total Response Time (minutes)\",\n        subtitle =\"\",\n        x = \"Scaffold Phase Time (minutes)\", y = \"number of subjects\") +\n  theme_minimal() + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-SCAFFOLDTIMEmessage - falsewarning - false-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##VERTICAL RAINCLOUD USING GGDISTR\nggplot(df_subjects, aes(x = pretty_condition, y = rt_m, fill = pretty_condition)) + \n  ggdist::stat_halfeye(\n    side = \"left\",\n    justification = 1.2, \n    adjust = .5, \n    width = .6, \n    .width = 0, \n    point_colour = NA) + \n  geom_boxplot(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = rt_m),\n    width = .15, \n    outlier.shape = NA\n  ) + \n  geom_point(\n    inherit.aes = FALSE, #supress fill\n    mapping = aes(x=pretty_condition, y = rt_m, color = pretty_condition),\n    size = 1.3,\n    alpha = .3,\n    position = position_jitter( \n      seed = 1, width = .05\n  ))+ labs( title = \"Distribution of Total Response Time (minutes)\",\n        subtitle =\"\",\n        y = \"Total Response Time (minutes)\", x = \"Condition\") +\n  theme_ggdist() + theme(legend.position = \"blank\") #+\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-SCAFFOLDTIMEmessage - falsewarning - false-3.png){width=672}\n:::\n\n```{.r .cell-code}\n  # coord_cartesian(xlim = c(0.5, NA), clip = \"off\")\n\n#STATSPLOT\nggbetweenstats(y = rt_m, x = pretty_condition, data = df_subjects,\n               type = \"nonparametric\", var.equal = FALSE,\n               pairwide.display = \"significant\", )\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/label - VIS-SCAFFOLDTIMEmessage - falsewarning - false-4.png){width=672}\n:::\n:::\n\n## EXPLORING RELATIONSHIPS\n\n### ACCURACY (VS) LATENCY\n\n#### Total Task \n::: {.cell}\n\n```{.r .cell-code}\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ rt_m, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by TOTAL Item Response Time\",\n    subtitle = \"\", \n    x = \"Total Item Response Time (minutes)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_avg_rt, data = df_subjects, alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by MEAN Item Response Time\",\n    subtitle = \"\", \n    x = \"Average Item Response Time (seconds)\", y = \"Total Scaled Score\"\n  ) + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/unnamed-chunk-22-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#SCATTERPLOT [SCORE X ITEM RESPONSE TIME]\ngf_jitter( s_SCALED ~ item_max_rt, data = df_subjects %>% filter(item_max_rt < 400), alpha = 0.5, color=~pretty_condition) %>% \n  gf_facet_wrap(~pretty_condition) + labs(\n    title = \"Total (Scaled) Score by MAX Item Response Time\",\n    subtitle = \"\", \n    x = \"MAX Item Response Time (s)\", y = \"Total Scaled Score \"\n  ) + theme(legend.position = \"blank\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/unnamed-chunk-22-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#NOTE: LOG transforms of the RT do not yield linear relationships\n```\n:::\n\n#### Average Item RT by Accuracy\n\n::: {.cell}\n\n```{.r .cell-code}\nq.stats <- df_items %>% filter(q != 6) %>% dplyr::group_by(q, pretty_condition, score_niceABS) %>% dplyr::summarise(\n  m = mean(rt_s),\n  sd = sd(rt_s),\n  sd = tidyr::replace_na(sd,0),\n  lo = m-sd/2,\n  hi = m+sd/2,\n  group = paste(pretty_condition,\"-\",score_niceABS)\n)\n\ngf_line( m ~ q, group = ~group,  color = ~as.factor(score_niceABS),data = q.stats) %>% \n  gf_point() %>% \n  gf_ribbon(lo+hi~q) %>% \n  gf_facet_wrap(~pretty_condition) + scale_color_manual(values=c(\"red\",\"green\")) + \n  labs(title = \"Average Item Response Time by Absolute Score\",\n       subtitle = \"Correct responses are generally faster [computational efficiency] except on Q1 [learning]\",\n       x = \"Question\", y = \"Averate Item Response Time\", color=\"Correct Response\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#GGDIST LINERIBBON\n# df_items %>%\n#   ggplot(aes(y = rt_s, x = q,  fill = pretty_condition)) +\n#   stat_lineribbon(alpha = 1/4, point_interval = \"mean_qi\") + facet_wrap(~pretty_condition)\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq.stats <- df_items %>% filter(q %nin% c(6,9)) %>% dplyr::group_by(q, pretty_condition, interpretation) %>% dplyr::summarise(\n  m = mean(rt_s),\n  sd = sd(rt_s),\n  sd = tidyr::replace_na(sd,0),\n  lo = m-sd/2,\n  hi = m+sd/2,\n  group = paste(pretty_condition,\"-\",score_SCALED)\n)\n\ngf_line( m ~ as.factor(q), group = ~group,  color = ~interpretation,data = q.stats) %>% \n  gf_point() %>% \n  gf_ribbon(lo+hi~as.factor(q)) %>% \n  gf_facet_grid(interpretation~pretty_condition) + #+ scale_color_manual(values=c(\"red\",\"green\")) + \n  labs(title = \"Average Item Response Time by Interpretation\",\n       subtitle = \"Correct responses are generally faster [computational efficiency] except on Q1 [learning]\",\n       caption=\"NOTE: Points with no ribbon indicate singular response\",\n       x = \"Question\", y = \"Averate Item Response Time\", color=\"Interpretation\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#GGDIST LINERIBBON\ndf_items %>% filter(q %nin% c(6,9)) %>% mutate( interpretation = recode(interpretation, \"reference\" = \"blank\", \"frenzy\" = \"?\")) %>% \n  ggplot(aes(y = rt_s, x = q,  fill = interpretation)) +\n  stat_lineribbon(alpha = 1/4, point_interval = \"mean_qi\") + \n  facet_grid(interpretation ~ pretty_condition) + \n  labs( title = \"Average Response Time by Question Interpretation\", x = \"Question\", y=\"Averate Item Response Time (s)\")\n```\n\n::: {.cell-output-display}\n![](3_sgc4A_description_files/figure-html/unnamed-chunk-24-2.png){width=672}\n:::\n:::\n\n\n\n## RESOURCES\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.1 (2022-06-23)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur ... 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] forcats_0.5.1      stringr_1.4.0      purrr_0.3.4        readr_2.1.2       \n [5] tidyr_1.2.0        tibble_3.1.7       tidyverse_1.3.1    performance_0.9.1 \n [9] fitdistrplus_1.1-8 MASS_7.3-57        multimode_1.5      ggeasy_0.1.3      \n[13] ggstatsplot_0.9.3  ggdist_3.1.1       ggpubr_0.4.0       vcd_1.4-10        \n[17] kableExtra_1.3.4   mosaic_1.8.3       ggridges_0.5.3     mosaicData_0.20.2 \n[21] ggformula_0.10.1   ggstance_0.3.5     dplyr_1.0.9        Matrix_1.4-1      \n[25] Hmisc_4.7-0        ggplot2_3.3.6      Formula_1.2-4      survival_3.3-1    \n[29] lattice_0.20-45   \n\nloaded via a namespace (and not attached):\n  [1] utf8_1.2.2             ks_1.13.5              tidyselect_1.1.2      \n  [4] htmlwidgets_1.5.4      gmp_0.6-5              munsell_0.5.0         \n  [7] codetools_0.2-18       effectsize_0.7.0       withr_2.5.0           \n [10] colorspace_2.0-3       highr_0.9              knitr_1.39            \n [13] rstudioapi_0.13        ggsignif_0.6.3         labeling_0.4.2        \n [16] emmeans_1.7.5          polyclip_1.10-0        bit64_4.0.5           \n [19] farver_2.1.0           datawizard_0.4.1       coda_0.19-4           \n [22] vctrs_0.4.1            generics_0.1.2         TH.data_1.1-1         \n [25] xfun_0.31              BWStest_0.2.2          diptest_0.76-0        \n [28] R6_2.5.1               BayesFactor_0.9.12-4.4 cachem_1.0.6          \n [31] assertthat_0.2.1       scales_1.2.0           vroom_1.5.7           \n [34] multcomp_1.4-19        nnet_7.3-17            rootSolve_1.8.2.3     \n [37] gtable_0.3.0           multcompView_0.1-8     sandwich_3.0-2        \n [40] MatrixModels_0.5-0     rlang_1.0.3            zeallot_0.1.0         \n [43] systemfonts_1.0.4      PMCMRplus_1.9.5        splines_4.2.1         \n [46] rstatix_0.7.0          broom_0.8.0            prismatic_1.1.0       \n [49] mosaicCore_0.9.0       checkmate_2.1.0        yaml_2.3.5            \n [52] abind_1.4-5            modelr_0.1.8           crosstalk_1.2.0       \n [55] backports_1.4.1        tools_4.2.1            ellipsis_0.3.2        \n [58] RColorBrewer_1.1-3     ggdendro_0.1.23        Rcpp_1.0.8.3          \n [61] plyr_1.8.7             base64enc_0.1-3        rpart_4.1.16          \n [64] pbapply_1.5-0          correlation_0.8.1      zoo_1.8-10            \n [67] haven_2.5.0            ggrepel_0.9.1          cluster_2.1.3         \n [70] fs_1.5.2               magrittr_2.0.3         data.table_1.14.2     \n [73] lmtest_0.9-40          reprex_2.0.1           mvtnorm_1.1-3         \n [76] hms_1.1.1              patchwork_1.1.1        evaluate_0.15         \n [79] xtable_1.8-4           leaflet_2.1.1          jpeg_0.1-9            \n [82] mclust_5.4.10          readxl_1.4.0           gridExtra_2.3         \n [85] compiler_4.2.1         KernSmooth_2.23-20     crayon_1.5.1          \n [88] htmltools_0.5.2        tzdb_0.3.0             lubridate_1.8.0       \n [91] DBI_1.1.3              SuppDists_1.1-9.7      kSamples_1.2-9        \n [94] tweenr_1.0.2           dbplyr_2.2.1           boot_1.3-28           \n [97] car_3.1-0              cli_3.3.0              parallel_4.2.1        \n[100] insight_0.18.0         pkgconfig_2.0.3        statsExpressions_1.3.2\n[103] foreign_0.8-82         xml2_1.3.3             paletteer_1.4.0       \n[106] svglite_2.1.0          webshot_0.5.3          estimability_1.4      \n[109] rvest_1.0.2            distributional_0.3.0   digest_0.6.29         \n[112] parameters_0.18.1      pracma_2.3.8           rmarkdown_2.14        \n[115] cellranger_1.1.0       htmlTable_2.4.0        lifecycle_1.0.1       \n[118] jsonlite_1.8.0         carData_3.0-5          viridisLite_0.4.0     \n[121] fansi_1.0.3            labelled_2.9.1         pillar_1.7.0          \n[124] fastmap_1.1.0          httr_1.4.3             glue_1.6.2            \n[127] bayestestR_0.12.1      png_0.1-7              bit_4.0.4             \n[130] ggforce_0.3.3          stringi_1.7.6          rematch2_2.1.2        \n[133] latticeExtra_0.6-29    memoise_2.0.1          Rmpfr_0.8-9           \n```\n:::\n:::",
    "supporting": [
      "3_sgc4A_description_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}