{
  "hash": "68394b465922f4247f748868e9781103",
  "result": {
    "markdown": "---\nsubtitle: 'Study SGC4C | 1 Introduction'\n---\n\n\\newpage\n\n# Introduction {#sec-SGC4C-introduction}\n\n**In Study 4C we explore the extent to which the orientation of the axes in space influence how a reader interprets its underlying coordinate system.**\n\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+\n|                                       | **Orthogonal --- 0 degree**\\                                                                                                   |\n|                                       |                                                                                                                                |\n|                                       | **Demo Stimulus: [Q1](https://limitless-plains-85018.herokuapp.com/?q=1&condition=111&session=WEB-DEMO)\\                       |\n|                                       | Full Study : condition [111](https://limitless-plains-85018.herokuapp.com/?study=SGC4C&condition=111&session=WEB-DEMO)**       |\n+=======================================+================================================================================================================================+\n| ![](/analysis/utils/img/11111221.png) | **Orthogonal --- 45 degree**\\                                                                                                  |\n|                                       |                                                                                                                                |\n|                                       | Demo Stimulus: [Q1](https://limitless-plains-85018.herokuapp.com/?q=1&condition=1111221&session=WEB-DEMO)\\                     |\n|                                       | Full Study : condition [1111221](https://limitless-plains-85018.herokuapp.com/?study=SGC4C&condition=1111221&session=WEB-DEMO) |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+\n| ![](/analysis/utils/img/11111331.png) | **Orthogonal --- 90 degree**                                                                                                   |\n|                                       |                                                                                                                                |\n|                                       | Demo Stimulus: [Q1](https://limitless-plains-85018.herokuapp.com/?q=1&condition=1111221&session=WEB-DEMO)\\                     |\n|                                       | Full Study : condition [1111331](https://limitless-plains-85018.herokuapp.com/?study=SGC4C&condition=1111331&session=WEB-DEMO) |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+\n| ![](/analysis/utils/img/113.png)      | **Triangular --- 0 degree**\\                                                                                                   |\n|                                       |                                                                                                                                |\n|                                       | Demo Stimulus: [Q1](https://limitless-plains-85018.herokuapp.com/?q=1&condition=113&session=WEB-DEMO)\\                         |\n|                                       | Full Study : condition [113](https://limitless-plains-85018.herokuapp.com/?study=SGC4C&condition=113&session=WEB-DEMO)         |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+\n| ![](/analysis/utils/img/11311221.png) | **Triangular --- 45 degree**                                                                                                   |\n|                                       |                                                                                                                                |\n|                                       | Demo Stimulus: [Q1](https://limitless-plains-85018.herokuapp.com/?q=1&condition=1111221&session=WEB-DEMO)\\                     |\n|                                       | Full Study : condition [1131221](https://limitless-plains-85018.herokuapp.com/?study=SGC4C&condition=1131221&session=WEB-DEMO) |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+\n| ![](/analysis/utils/img/11311331.png) | **Triangular --- 0 degree**                                                                                                    |\n|                                       |                                                                                                                                |\n|                                       | Demo Stimulus: [Q1](https://limitless-plains-85018.herokuapp.com/?q=1&condition=1111221&session=WEB-DEMO)\\                     |\n|                                       | Full Study : condition [1131331](https://limitless-plains-85018.herokuapp.com/?study=SGC4C&condition=1131331&session=WEB-DEMO) |\n+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------+\n\n: **SGC4C Study Conditions** {tbl-colwidths=\"\\[40,60\\]\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(codebook) #data dictionary\nlibrary(tidyverse) #ALL THE THINGS\nlibrary(kableExtra) #tables\n\n#set some output options\nlibrary(dplyr, warn.conflicts = FALSE)\noptions(dplyr.summarise.inform = FALSE)\noptions(scipen=1, digits=3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# HACK WD FOR LOCAL RUNNING?\n#imac = \"/Users/amyraefox/Code/SGC-Scaffolding_Graph_Comprehension/SGC-X/ANALYSIS/MAIN\"\n# mbp = \"/Users/amyfox/Sites/RESEARCH/SGCâ€”Scaffolding Graph Comprehension/SGC-X/ANALYSIS/MAIN\"\n# setwd(mbp)\n\n##PS... THIS cell loads the data file that is actually created by the harmonization at the bottom of the file. \n#Just put it at the top for quick readability. \n#IMPORT DATA \ndf_subjects <- read_rds('analysis/SGC4C/data/1-study-level/sgc4c_participants.rds')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle = \"Participants by Condition\"\ncols = c(\"Condition\",\"n\")\ncont <- table(df_subjects$pretty_condition)\ncont %>%  addmargins() %>% kbl(caption = title, col.names = cols) %>% kable_classic()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n<caption>Participants by Condition</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Condition </th>\n   <th style=\"text-align:right;\"> n </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> ORTH-0 </td>\n   <td style=\"text-align:right;\"> 68 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> TRI-0 </td>\n   <td style=\"text-align:right;\"> 86 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ORTH-45 </td>\n   <td style=\"text-align:right;\"> 69 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> TRI-45 </td>\n   <td style=\"text-align:right;\"> 61 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ORTH-90 </td>\n   <td style=\"text-align:right;\"> 61 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> TRI-90 </td>\n   <td style=\"text-align:right;\"> 67 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sum </td>\n   <td style=\"text-align:right;\"> 412 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n### Hypotheses\n\n**Experimental Hypothesis:**\\\n\n## METHODS\n\n### Design\n\nWe employed a mixed design with 2 between-subjects factors (Shape: ORTHOGONAL, TRIANGULAR), (ROTATION: 0degrees, 45 degrees, 90 degrees) and 15 items (within-subjects factor).\n\nDependent Variables:\n\n-   Response Accuracy : Is the response triangular-correct?\n-   Response Interpretation : (derived) With which interpretation of the graph is the subject's response on an individual question consistent?\n-   Response Latency : Time from stimulus onset to clicking 'Submit' button: time in (s)\n\n### Materials\n\nStimuli consisted of a series of 15 graph comprehension questions, each testing a different combination of time interval relations, to be read from a Triangular-Model graph. @fig-sample. The list of questions can be found [here](static/stimuli/sgcx_questions.csv).\n\n![Sample Question (Q=1) for Graph Comprehension Task](/analysis/utils/img/sample_graphComprehensionTask.png){#fig-sample fig-alt=\"picture of multiple select question on the left, accompanied by a triangular model graph on the right\" fig-align=\"center\"}\n\nIn each experimental\n\n### Procedure\n\nParticipants completed the study via a web-browser.\n\n\\(1\\) Upon starting, they submitted informed consent, before reading task instructions.\n\n\\(2\\) Participants were introduced to a scenario in which they were to play the role of a project manager, scheduling shifts for a group of employees. The schedule of the employees was presented in a Triangular Model (TM) graph, and they would be answering question about the schedule.\n\n\\(3\\) Then participants completed an experimental block of 15 items: The Graph Comprehension Task.\n\n\\(4\\) Following the experimental block, participants answered a free-response question about their strategy for reading the graph, followed by a demographic questionnaire and debrief.\n\n### Sample\n\nData were collected by convenience sample of a university subject pool during the summer of 2022. Data for conditions 111 and 113 were joined from studies SGC3A online replication and SGC4D, along with rotation conditions collected specifically for SGC4C. Participants accessed the study via a web browser (asynchronously). The stimulus application required the participant stay in full-screen mode for the entirety of the study.\n\n## ANALYSIS\n\n### Data Preparation {#sec-SGC4C-harmonize}\n\nData were collected via a custom web application and stored in a NoSQL database. The following exclusion criteria were applied during data cleaning:\n\n-   completion status : \"success\" ; subject must have finished all parts of the study, including demographic questionnaire\n-   session ID: \\[in list\\] ; subject must have been assigned to valid data collection session (discard testing and piloting data)\n-   browser interaction violations \\< 3; subject must have fewer than 3 violations of non-allowed browser interactions (i.e. resizing window, leaving browser tab or leaving fullscreen mode)\n-   self-rated effort \\> 2; subjects who reported, \"not trying hard/rushing through questions\" or \"started out trying hard but giving up at some point\" were excluded from analysis.\n-   attention check ==TRUE ; subjects who failed to answer a mid-study attention check question (Graph Comprehension Task Question #6) are excluded\n\n|     |     |\n|-----|-----|\n|     |     |\n\nThe underlying data structure of the stimulus web application changed across the data collection period, resulting in slightly different data files (i.e. columns are not named consistently). In this section, we combine the files from each data collection period into a single *harmonized* data file for analysis (one for participants, one for items).\n\n#### Participants\n\nFirst we import participant-level data, selecting only the columns relevant for analysis. The result is a single data frame `df_subjects` containing one row for each subject (across all periods). Note that we *are not* discarding any *response* data. Rather, we discard columns that are automatically recorded by the stimulus web application and help the application run.\n\n*Note that we discard some columns representing scores calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. No raw data (responses and response times) are discarded, only algorithmically-derived scores for the responses.*\n\n::: {.cell}\n\n```{.r .cell-code}\n#IMPORT PARTICIPANT DATA\n\n\n#import rotation participants\ndf_rotated <- read_rds(\"analysis/SGC4C/data/0-session-level/sgc4c_participants.rds\") #use RDS file as it contains metadata\n\n#import control participants 111 from fall 21  (only online)\ndf_control <- read_rds(\"analysis/SGC3A/data/1-study-level/sgc3a_participants.rds\") %>% \n  filter(condition==111) %>% filter(term == \"fall21\") %>% \n dplyr::select(-pretty_mode) %>% droplevels() %>% mutate(\n  study = \"SGC3A\"\n)\n\n#import triangular participants 113 (online online)\ndf_tri <- read_rds(\"analysis/SGC4A/data/1-study-level/sgc4a_participants.rds\") %>% \n  filter(condition==113) %>% filter(term==\"winter22\") %>% \n  dplyr::select(-pretty_mode) %>% droplevels() %>% mutate(\n  study = \"SGC4D\"\n)\n\n#reduce data collected using NEW webapp to useful columns\n#drop absolute score because we rescore in 2_scoring\ndf_rotated <- df_rotated %>% \n  #select only columns we'll be analyzing, discard others\n  dplyr::select( subject, condition, pretty_condition, study, term, mode, \n                 #demographics\n                 gender, age, language, schoolyear, country,\n                 #effort survey\n                 effort, difficulty, confidence, enjoyment, \n                 #explanations\n                 other,disability,\n                 #response characteristics\n                 totaltime_m,\n                 #exploratory factors\n                 violations, browser, width, height\n                 )\n\n\neffort_labels <- c(\"I tried my best on each question\", \"I tried my best on most questions\")\n\n\n\n# janitor::compare_df_cols(df_rotated, df_control)\n\n\ndf_subjects <- rbind(df_rotated, df_control, df_tri)\n\n#set factors\ndf_subjects <- df_subjects %>% \n  #refactor factors\n  mutate (\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term),\n    mode = factor(mode),\n    gender = factor(gender),\n    schoolyear = factor(schoolyear, levels=c(\"First\",\"Second\",\"Third\",\"Fourth\",\"Fifth\",\"Other\")),\n    pretty_condition = recode_factor(pretty_condition,\n                                     \"control\" = \"ORTH-0\",\n                                     \"Tri-Sparse\" = \"TRI-0\",\n                                     \n                                     \"ORTH-rotate-45\" = \"ORTH-45\",\n                                     \"TRI-rotate-45\" =  \"TRI-45\",\n                                     \"ORTH-rotate-90\" = \"ORTH-90\",\n                                     \"TRI-rotate-90\" = \"TRI-90\"),\n    ROTATION = recode_factor(pretty_condition, \n                                     \"ORTH-0\" = \"0\",\n                                     \"TRI-0\" = \"0\",\n                                     \"ORTH-45\" = \"45\",\n                                     \"TRI-45\" = \"45\",\n                                     \"ORTH-90\" = \"90\",\n                                     \"TRI-90\" = \"90\"),\n    SHAPE = recode_factor(pretty_condition, \n                                   \"ORTH-0\" = \"ORTH\",\n                                   \"TRI-0\" = \"TRI\",\n                                   \"ORTH-45\" = \"ORTH\",\n                                   \"TRI-45\" = \"TRI\",\n                                   \"ORTH-90\" = \"ORTH\",\n                                   \"TRI-90\" = \"TRI\"))\n\n\n# table(df_subjects$condition)\nrm(df_control, df_rotated, df_tri)\n```\n:::\n\n\n\n#### Items\n\nNext we import item-level data from each data collection period, selecting only the columns relevant for analysis. The result is a single data frame `df_items` containing one row for each *graph comprehension task question* (qs=15) (across all periods). A second data frame `df_freeresponse` contains one row for each free response strategy question (last question posed to participants in Winter2022) Note that we *do not* discard any *response* data. Rather, we *do* discard several columns representing accuracy scores for responses that were calculated in the stimulus engine. These scores were calculated differently across collection periods, and so we discard them and recalculate scores in the next analysis notebook. Original response data are always preserved.\n\n::: {.cell}\n\n```{.r .cell-code}\n#read datafiles\ndf_rotated <- read_rds(\"analysis/SGC4C/data/0-session-level/sgc4c_items.rds\") #use RDS file as it contains metadata\n\n#import control participants 111 from fall 21  (only online)\ndf_control <- read_rds(\"analysis/SGC3A/data/1-study-level/sgc3a_items.rds\") %>% \n  filter(condition==111) %>% filter(term == \"fall21\") %>% \n dplyr::select(-pretty_mode) %>% droplevels() %>% mutate(\n  study = \"SGC3A\"\n)\n\n#import triangular participants 113 (online online)\ndf_tri <- read_rds(\"analysis/SGC4A/data/1-study-level/sgc4a_items.rds\") %>% \n  filter(condition==113) %>% filter(term==\"winter22\") %>% \n  dplyr::select(-pretty_mode) %>% droplevels() %>% mutate(\n  study = \"SGC4D\"\n)\n\n#reduce data collected using new webapp\ndf_rotated <- df_rotated %>% \n  select(subject, condition, pretty_condition, study, term, mode, q, question, answer, correct, rt_s) %>% #unfactor before combine\n  mutate(\n    subject = as.character(subject),\n    condition = as.character(condition),\n    term = as.character(term),\n    mode = as.character(mode),\n    q = as.integer(q),\n    correct = as.logical(correct)\n  ) %>% \n  mutate(\n    response = str_remove_all(as.character(answer), \",\"),\n    num_o = str_length(response)\n  )%>% \n  # handle NA values (why are some empty responses blank and others NA?) \n  mutate(\n    response = replace_na(response, \"\"),\n    num_o = replace_na(num_o, 0)\n  ) %>% dplyr::select(-answer)\n\n#JOIN \n# janitor::compare_df_cols(df_rotated, df_control)\ndf_items <- rbind(df_rotated, df_control, df_tri)\n\n#mutate condition names \ndf_items <- df_items %>% mutate(\n    subject = factor(subject),\n    condition = factor(condition),\n    term = factor(term),\n    mode = factor(mode),\n    pretty_condition = recode_factor(pretty_condition,\n                                     \"control\" = \"ORTH-0\",\n                                     \"Tri-Sparse\" = \"TRI-0\",\n                                     \"ORTH-rotate-45\" = \"ORTH-45\",\n                                     \"TRI-rotate-45\" =  \"TRI-45\",\n                                     \"ORTH-rotate-90\" = \"ORTH-90\",\n                                     \"TRI-rotate-90\" = \"TRI-90\"),\n    ROTATION = recode_factor(pretty_condition, \n                                     \"ORTH-0\" = \"0\",\n                                     \"TRI-0\" = \"0\",\n                                     \"ORTH-45\" = \"45\",\n                                     \"TRI-45\" = \"45\",\n                                     \"ORTH-90\" = \"90\",\n                                     \"TRI-90\" = \"90\"),\n    SHAPE = recode_factor(pretty_condition, \n                                   \"ORTH-0\" = \"ORTH\",\n                                   \"TRI-0\" = \"TRI\",\n                                   \"ORTH-45\" = \"ORTH\",\n                                   \"TRI-45\" = \"TRI\",\n                                   \"ORTH-90\" = \"ORTH\",\n                                   \"TRI-90\" = \"TRI\"\n))\n\n#cleanup\nrm(df_control, df_rotated, df_tri)\n```\n:::\n\n#### Validation\n\nNext, we validate that we have the complete number of item-level records based on the number of subject-level records\n\n::: {.cell}\n\n```{.r .cell-code}\n#confirm only have items for subjects in subjects\nunique(df_items$subject %in% df_subjects$subject)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\n#the number of items should be equal to 15 x the number of subjects\nnrow(df_items) == 15* nrow(df_subjects) #TRUE\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\n#each subject should have 15 items\ndf_items %>% group_by(subject) %>% summarise(n = n()) %>% filter(n != 15) %>% nrow() == 0\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n#### Export\n\nFinally, we export the (session-harmonized) data for analysis, as CSVs, and .RDS (includes metadata)\n\n::: {.cell}\n\n```{.r .cell-code}\n#SAVE FILES\nwrite.csv(df_subjects,\"analysis/SGC4C/data/1-study-level/sgc4c_participants.csv\", row.names = FALSE)\nwrite.csv(df_items,\"analysis/SGC4C/data/1-study-level/sgc4c_items.csv\", row.names = FALSE)\n\n#SAVE R Data Structures \n#export R DATA STRUCTURES (include codebook metadata)\nrio::export(df_subjects, \"analysis/SGC4C/data/1-study-level/sgc4c_participants.rds\") # to R data structure file\nrio::export(df_items, \"analysis/SGC4C/data/1-study-level/sgc4c_items.rds\") # to R data structure file\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}