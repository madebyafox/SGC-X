{
  "hash": "7c53c6a2d76f5b45b3853492a3a33d69",
  "result": {
    "markdown": "---\nsubtitle: 'Study SGC3A | 5 Exploratory Analyses'\n---\n\n\\newpage\n\n# Exploratory Analyses {#sec-SGC3A-exploration}\n\n**TODO**\\\n- response consistency - clarify core questions being asked\\\n- review models already created in ARCHIVE?\\\n- explore response consistency - fix references\n- what predicts consistency?\n\n*The purpose of this notebook is exploratory analyses of data collected for study SGC3A.*\n\n+------------------------+\n| Pre-Requisite          |\n+========================+\n| 1_sgc3A_harmonize.qmd\\ |\n| 2_sgc3A_scoring.qmd    |\n+------------------------+\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(multimode) #mode mass tests\nlibrary(Hmisc) # %nin% operator\nlibrary(ggpubr) #arrange plots\nlibrary(ggformula) #easy graphs\nlibrary(report) #easystats reporting\nlibrary(see) #easystats visualization\nlibrary(performance) #easystats model diagnostics\nlibrary(gmodels) #contingency table and CHISQR\nlibrary(vcd) #mosaic plots\nlibrary(vcdExtra) #mosaic plots\nlibrary(kableExtra) #printing tables \nlibrary(tidyverse) #ALL THE THINGS\nlibrary(equatiomatic) #equation printing\n\n\n#OUTPUT OPTIONS\nlibrary(dplyr, warn.conflicts = FALSE)\noptions(dplyr.summarise.inform = FALSE)\noptions(ggplot2.summarise.inform = FALSE)\noptions(scipen=1, digits=3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#IMPORT DATA \ndf_items <- read_rds('analysis/SGC3A/data/2-scored-data/sgc3a_scored_items.rds')\ndf_subjects <- read_rds('analysis/SGC3A/data/2-scored-data/sgc3a_scored_participants.rds')\n\n\n#SEPARATE ITEM DATA BY QUESTION TYPE\ndf_scaffold <- df_items %>% filter(q < 6)\ndf_test <- df_items %>% filter(q > 6) %>% filter (q %nin% c(6,9))\ndf_nondiscrim <- df_items %>% filter (q %in% c(6,9))\n```\n:::\n\nExploratory Questions\n\nConsistency \\| How consistent are learners in their interpretation of the graph? Do they adopt an interpretation on the first question and hold constant? Or do they change interpretations from question to question? Are there any interpretations that serve as 'absorbing states' (i.e. once encountered, the learner does not exist this state).\n\nTime Course of Exploration \\| What is the relationship between response accuracy (and interpretation) and time spent on each item?\n\nCan exploration strategies be derived from mouse cursor activity?\n\n-   does response time predict interpretation vs. non interpretation?\n\nTODO: - does impasse yield different exploration behavior? (characterize mouse) - does impasse yield more time on task? (characterize response time ? number of answers then de-selected?)\n\nTODO: Think about characterizing how variable the interpretations are across a participant. Do they form an interpretation and hold it constant? Or do they change question to question.\n\n\n\n## Q1 ACCURACY \n\n**What explains Q1 Accuracy?**\n\n##### Multiple Logistic Regression [Q1 Absolute]\n\n::: {.cell}\n\n```{.r .cell-code}\n# #CREATE DATAFRAME OF Q1\n# df <- df_items %>% filter(q == 1) %>% mutate( accuracy = as.factor(score_niceABS))\n# \n# #MODEL\n# m2 <- glm( accuracy ~ rt_s, data = df, family = \"binomial\")\n# summary(m2)\n# confint(m2)\n# performance(m2)\n# report(m2)\n# \n# library(effects)\n# plot(allEffects(m2))\n# \n# \n# m3 <- glm( accuracy ~ condition + rt_s, data = df, family = \"binomial\")\n# summary(m3)\n# confint(m3)\n# performance(m3)\n# report(m3)\n# \n# plot(allEffects(m3))\n# \n# compare_performance(m,m2,m3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#evaluate model using kfold CV\n# https://www.statology.org/k-fold-cross-validation-in-r/\n\n# #specify the cross-validation method\n# ctrl <- trainControl(method = \"cv\", number = 5)\n# #fit a regression model and use k-fold CV to evaluate performance\n# mk <- train( accuracy ~ condition, data = df, method = \"glm\", trControl = ctrl, family = \"binomial\")\n# print(mk)\n# \n```\n:::\n\n\n\n#### Mass Movement\n\n\"movement of mass\" from one mode to another\n\nConsidering only families of unimodal distributions, the most probably distribution (as predicted by package `performance`) is negative-binomial.\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df_subjects %>% filter(condition==111)\nmultimode::modetest(df$s_NABS)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in multimode::modetest(df$s_NABS): A modification of the data was made\nin order to compute the excess mass or the dip statistic\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAmeijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df$s_NABS\nExcess mass = 0.08, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n```\n:::\n\n```{.r .cell-code}\nn_modes = multimode::nmodes(data = df$s_NABS, bw=2)\nmultimode::locmodes(df$s_NABS,mod0 =  n_modes, display = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in multimode::locmodes(df$s_NABS, mod0 = n_modes, display = TRUE): If\nthe density function has an unbounded support, artificial modes may have been\ncreated in the tails\n```\n:::\n\n::: {.cell-output-display}\n![](5_sgc3A_exploration_files/figure-pdf/MASS-111-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEstimated location\nModes: 0.136  12.6 \nAntimode: 7.63 \n\nEstimated value of the density\nModes: 0.268  0.0432 \nAntimode: 0.00648 \n\nCritical bandwidth: 1.05\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df_subjects %>% filter(condition==121)\nmultimode::modetest(df$s_NABS)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in multimode::modetest(df$s_NABS): A modification of the data was made\nin order to compute the excess mass or the dip statistic\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAmeijeiras-Alonso et al. (2019) excess mass test\n\ndata:  df$s_NABS\nExcess mass = 0.1, p-value <2e-16\nalternative hypothesis: true number of modes is greater than 1\n```\n:::\n\n```{.r .cell-code}\nn_modes = multimode::nmodes(data = df$s_NABS, bw=2)\nmultimode::locmodes(df$s_NABS,mod0 =  n_modes, display = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in multimode::locmodes(df$s_NABS, mod0 = n_modes, display = TRUE): If\nthe density function has an unbounded support, artificial modes may have been\ncreated in the tails\n```\n:::\n\n::: {.cell-output-display}\n![](5_sgc3A_exploration_files/figure-pdf/MASS-121-1.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEstimated location\nModes: 0.456    12 \nAntimode: 4.89 \n\nEstimated value of the density\nModes: 0.148  0.0703 \nAntimode: 0.025 \n\nCritical bandwidth: 1.27\n```\n:::\n:::\n\n\n## RESPONSE LATENCY\n\n-   [TODO: Investigate super high and super low response times.]{style=\"color: red;\"}.\n-   [TODO: Investigate appropriate models for response time data. (see: https://lindeloev.github.io/shiny-rt/)]{style=\"color: red;\"}.\n-   Especially see https://lindeloev.github.io/shiny-rt/ for ideas on modelling reaction time data\n\n+-----------------------+----------------------------------------+\n| Research Question     |                                        |\n+=======================+========================================+\n| **Hypothesis**        |                                        |\n+-----------------------+----------------------------------------+\n| **Analysis Strategy** |                                        |\n+-----------------------+----------------------------------------+\n| **Alternatives**      |                                        |\n+-----------------------+----------------------------------------+\n| **Inference**         |                                        |\n+-----------------------+----------------------------------------+\n\n### Q1 Response Latency\n\n#### Linear Regression (Log Transform)\n\n##### (In Person)\n\n###### Visualization\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_lab <- df_subjects %>% filter(mode == \"lab-synch\")\n \n#HISTOGRAM\nstats = df_lab %>% group_by(pretty_condition) %>% dplyr::summarise(mean = mean(item_q1_rt))\ngf_dhistogram(~log(item_q1_rt), fill = ~pretty_condition, data = df_lab) %>% gf_facet_grid(~pretty_condition) +\n  # gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n  labs(title = \"(LAB) First Question Response Time\",,\n       # x = \"Response Time (seconds)\",\n       # y = \"proportion of participants\",\n       subtitle = \"\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](5_sgc3A_exploration_files/figure-pdf/VIS-TEST-Q1TIME-1.pdf){fig-pos='H'}\n:::\n:::\n\n###### Model\n\n::: {.cell}\n\n```{.r .cell-code}\n#SCORE predicted by CONDITION\nlab.q1t.lm1 <- lm(log(item_q1_rt) ~ pretty_condition, data = df_lab)\npaste(\"Model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Model\"\n```\n:::\n\n```{.r .cell-code}\nsummary(lab.q1t.lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = log(item_q1_rt) ~ pretty_condition, data = df_lab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.8202 -0.3504  0.0503  0.3382  1.2862 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               3.4833     0.0687   50.69   <2e-16 ***\npretty_conditionimpasse   0.3142     0.0964    3.26   0.0014 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.541 on 124 degrees of freedom\nMultiple R-squared:  0.0789,\tAdjusted R-squared:  0.0714 \nF-statistic: 10.6 on 1 and 124 DF,  p-value: 0.00145\n```\n:::\n\n```{.r .cell-code}\npaste(\"Partition Variance\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Partition Variance\"\n```\n:::\n\n```{.r .cell-code}\nanova(lab.q1t.lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: log(item_q1_rt)\n                  Df Sum Sq Mean Sq F value Pr(>F)   \npretty_condition   1    3.1   3.108    10.6 0.0014 **\nResiduals        124   36.3   0.293                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\npaste(\"Confidence Interval on Parameter Estimates\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Confidence Interval on Parameter Estimates\"\n```\n:::\n\n```{.r .cell-code}\nconfint(lab.q1t.lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        2.5 % 97.5 %\n(Intercept)             3.347  3.619\npretty_conditionimpasse 0.123  0.505\n```\n:::\n\n```{.r .cell-code}\nreport(lab.q1t.lm1) #sanity check\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nFormula contains log- or sqrt-terms. See help(\"standardize\") for how\n  such terms are standardized.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nFormula contains log- or sqrt-terms. See help(\"standardize\") for how\n  such terms are standardized.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nWe fitted a linear model (estimated using OLS) to predict item_q1_rt with pretty_condition (formula: log(item_q1_rt) ~ pretty_condition). The model explains a statistically significant and weak proportion of variance (R2 = 0.08, F(1, 124) = 10.61, p = 0.001, adj. R2 = 0.07). The model's intercept, corresponding to pretty_condition = control, is at 3.48 (95% CI [3.35, 3.62], t(124) = 50.69, p < .001). Within this model:\n\n  - The effect of pretty condition [impasse] is statistically significant and positive (beta = 0.31, 95% CI [0.12, 0.51], t(124) = 3.26, p = 0.001; Std. beta = 0.21, 95% CI [0.09, 0.34])\n\nStandardized parameters were obtained by fitting the model on a standardized version of the dataset. 95% Confidence Intervals (CIs) and p-values were computed using the Wald approximation.\n```\n:::\n\n```{.r .cell-code}\n#print model equation\neq <- extract_eq(lab.q1t.lm1, use_coefs = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# #| label: VISMODEL-Q1-LATENCY-LAB\n# \n# #MODEL ESTIMATES WITH UNCERTAINTY\n# \n# #setup references \n# #lab.q1t.lm1 <- lm(log(item_q1_rt) ~ condition, data = df_lab)\n# m <- lab.q1t.lm1\n# df <- df_lab \n# call <- m$call %>% as.character()\n# \n# # uncertainty model visualization\n# df <- df  %>%\n#   data_grid(pretty_condition) %>%\n#   augment(m, newdata = ., se_fit = TRUE) \n# \n# #transform log\n# df$.fitted <- exp(df$.fitted)\n# df$.se.fit <- exp(df$.se.fit)\n# \n# df %>% \n#   ggplot(aes(y = pretty_condition, color = pretty_condition)) +\n#   stat_halfeye( scale = .5,\n#       aes(\n#         xdist = dist_student_t(df = df.residual(m), mu = .fitted, sigma = .se.fit),\n#         fill = stat(cut_cdf_qi(cdf, \n#                 .width = c(.90, .95),\n#                 labels = scales::percent_format())))) +\n#   scale_fill_brewer(direction = -1) + \n#   labs (title = \"(LAB) Q1 Response Latency ~ Condition\", \n#         x = \"model predicted mean (seconds)\", y = \"Condition\", fill = \"Interval\",\n#         subtitle = paste(\"lm(\",call[2],\")\"),\n#         caption = \"note: model log(predictions) have exponentiated to original scale\") + theme(legend.position = \"blank\")\n```\n:::\n\n###### Diagnostics\n\n::: {.cell}\n\n```{.r .cell-code}\n#model diagnostics\ncheck_model(lab.q1t.lm1, panel = TRUE)\n```\n\n::: {.cell-output-display}\n![](5_sgc3A_exploration_files/figure-pdf/DIAG-Q1TIME-lab-1.pdf){fig-pos='H'}\n:::\n:::\n\n(1) RESIDUAL DISTRIBUTION: 0.488\n(2) HOMOGENEITY: 0.006\n(3) HETERSCEDASTICITY: 0.514\n(4) AUTOCORRELATION: 0.306\nn\n###### Inference\n\nOLS Linear Regression on Q1 response time shows that condition explains a small but statistically significant amount of variance (impasse \\> control). However, the model violates the assumption of normally distributed residuals.\n\n##### (Online Replication)\n\n###### Visualization\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_online <- df_subjects %>% filter(mode == \"asynch\")\n \n#HISTOGRAM\nstats = df_online %>% group_by(pretty_condition) %>% dplyr::summarise(mean = mean(item_q1_rt))\ngf_dhistogram(~log(item_q1_rt), fill = ~pretty_condition, data = df_lab) %>% gf_facet_grid(~pretty_condition) +\n  # gf_vline(data = stats, xintercept = ~mean, color = \"red\") +\n  labs(title = \"(ONLINE) First Question Response Time\",\n       # x = \"Response Time (seconds)\",\n       # y = \"proportion of participants\",\n       subtitle = \"\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](5_sgc3A_exploration_files/figure-pdf/VIS-TEST-Q1TIME-online-1.pdf){fig-pos='H'}\n:::\n:::\n\n###### Model\n\n::: {.cell}\n\n```{.r .cell-code}\n#SCORE predicted by CONDITION\nrep.q1t.lm1 <- lm(log(item_q1_rt) ~ pretty_condition, data = df_online)\npaste(\"Model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Model\"\n```\n:::\n\n```{.r .cell-code}\nsummary(rep.q1t.lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = log(item_q1_rt) ~ pretty_condition, data = df_online)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.0092 -0.3640 -0.0372  0.3785  2.0718 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               3.2505     0.0733   44.36  < 2e-16 ***\npretty_conditionimpasse   0.4200     0.1007    4.17 0.000045 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.718 on 202 degrees of freedom\nMultiple R-squared:  0.0793,\tAdjusted R-squared:  0.0747 \nF-statistic: 17.4 on 1 and 202 DF,  p-value: 0.0000451\n```\n:::\n\n```{.r .cell-code}\npaste(\"Partition Variance\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Partition Variance\"\n```\n:::\n\n```{.r .cell-code}\nanova(rep.q1t.lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: log(item_q1_rt)\n                  Df Sum Sq Mean Sq F value   Pr(>F)    \npretty_condition   1      9    8.97    17.4 0.000045 ***\nResiduals        202    104    0.52                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\npaste(\"Confidence Interval on Parameter Estimates\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Confidence Interval on Parameter Estimates\"\n```\n:::\n\n```{.r .cell-code}\nconfint(rep.q1t.lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        2.5 % 97.5 %\n(Intercept)             3.106  3.395\npretty_conditionimpasse 0.221  0.619\n```\n:::\n\n```{.r .cell-code}\nreport(rep.q1t.lm1) #sanity check\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nFormula contains log- or sqrt-terms. See help(\"standardize\") for how\n  such terms are standardized.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nFormula contains log- or sqrt-terms. See help(\"standardize\") for how\n  such terms are standardized.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n\nWarning: 'data_findcols()' is deprecated and will be removed in a future update.\n  Its usage is discouraged. Please use 'data_find()' instead.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nWe fitted a linear model (estimated using OLS) to predict item_q1_rt with pretty_condition (formula: log(item_q1_rt) ~ pretty_condition). The model explains a statistically significant and weak proportion of variance (R2 = 0.08, F(1, 202) = 17.39, p < .001, adj. R2 = 0.07). The model's intercept, corresponding to pretty_condition = control, is at 3.25 (95% CI [3.11, 3.39], t(202) = 44.36, p < .001). Within this model:\n\n  - The effect of pretty condition [impasse] is statistically significant and positive (beta = 0.42, 95% CI [0.22, 0.62], t(202) = 4.17, p < .001; Std. beta = 0.21, 95% CI [0.11, 0.31])\n\nStandardized parameters were obtained by fitting the model on a standardized version of the dataset. 95% Confidence Intervals (CIs) and p-values were computed using the Wald approximation.\n```\n:::\n\n```{.r .cell-code}\n#print model equation\neq <- extract_eq(rep.q1t.lm1, use_coefs = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#MODEL ESTIMATES WITH UNCERTAINTY\n# \n# #setup references \n# # rep.q1t.lm1 <- lm(log(item_q1_rt) ~ condition, data = df_online)\n# m <- rep.q1t.lm1\n# df <- df_online \n# call <- m$call %>% as.character()\n# \n# # uncertainty model visualization\n# df <- df  %>%\n#   data_grid(pretty_condition) %>%\n#   augment(m, newdata = ., se_fit = TRUE) \n# \n# #transform log\n# df$.fitted <- exp(df$.fitted)\n# df$.se.fit <- exp(df$.se.fit)\n# \n# df %>% \n#   ggplot(aes(y = pretty_condition, color = pretty_condition)) +\n#   stat_halfeye( scale = .5,\n#       aes(\n#         xdist = dist_student_t(df = df.residual(m), mu = .fitted, sigma = .se.fit),\n#         fill = stat(cut_cdf_qi(cdf, \n#                 .width = c(.90, .95),\n#                 labels = scales::percent_format())))) +\n#   scale_fill_brewer(direction = -1) + \n#   labs (title = \"(ONLINE) Q1 Response Latency ~ Condition\", \n#         x = \"model predicted mean (seconds)\", y = \"Condition\", fill = \"Interval\",\n#         subtitle = paste(\"lm(\",call[2],\")\"),\n#         caption = \"note: model log(predictions) have exponentiated to original scale\") + theme(legend.position = \"blank\")\n```\n:::\n\n###### Diagnostics\n\n::: {.cell}\n\n```{.r .cell-code}\n#model diagnostics\ncheck_model(rep.q1t.lm1, panel = TRUE)\n```\n\n::: {.cell-output-display}\n![](5_sgc3A_exploration_files/figure-pdf/DIAG-Q1TIME-online-1.pdf){fig-pos='H'}\n:::\n:::\n\n(1) RESIDUAL DISTRIBUTION: 0.017\n(2) HOMOGENEITY: \\ensuremath{2.047\\times 10^{-5}}\n(3) HETERSCEDASTICITY: 0.263\n(4) AUTOCORRELATION: 0.118\nn\n###### Inference\n\nOLS Linear Regression on Q1 response time shows that condition explains a small but statistically significant amount of variance (impasse \\> control). However, the model violates the assumption of normally distributed residuals.\n\n\n\n## TODO RESPONSE CONSISTENCY\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"pdflscape\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tabu\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttablex\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ulem\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"normalem\"]},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"makecell\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"xcolor\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}